<Type Name="CallingServerClient" FullName="Azure.Communication.CallingServer.CallingServerClient">
  <TypeSignature Language="C#" Value="public class CallingServerClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CallingServerClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Communication.CallingServer.CallingServerClient" />
  <TypeSignature Language="VB.NET" Value="Public Class CallingServerClient" />
  <TypeSignature Language="F#" Value="type CallingServerClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The Azure Communication Services Calling Server client.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CallingServerClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of <see cref="T:Azure.Communication.CallingServer.CallingServerClient" /> for mocking.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallingServerClient (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerClient.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="F#" Value="new Azure.Communication.CallingServer.CallingServerClient : string -&gt; Azure.Communication.CallingServer.CallingServerClient" Usage="new Azure.Communication.CallingServer.CallingServerClient connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Connection string acquired from the Azure Communication Services resource.</param>
        <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallingServer.CallingServerClient" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallingServerClient (string connectionString, Azure.Communication.CallingServer.CallingServerClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, class Azure.Communication.CallingServer.CallingServerClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerClient.#ctor(System.String,Azure.Communication.CallingServer.CallingServerClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, options As CallingServerClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Communication.CallingServer.CallingServerClient : string * Azure.Communication.CallingServer.CallingServerClientOptions -&gt; Azure.Communication.CallingServer.CallingServerClient" Usage="new Azure.Communication.CallingServer.CallingServerClient (connectionString, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="options" Type="Azure.Communication.CallingServer.CallingServerClientOptions" />
      </Parameters>
      <Docs>
        <param name="connectionString">Connection string acquired from the Azure Communication Services resource.</param>
        <param name="options">Client option exposing <see cref="P:Azure.Core.ClientOptions.Diagnostics" />, <see cref="P:Azure.Core.ClientOptions.Retry" />, <see cref="P:Azure.Core.ClientOptions.Transport" />, etc.</param>
        <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallingServer.CallingServerClient" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallingServerClient (Uri endpoint, Azure.Core.TokenCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerClient.#ctor(System.Uri,Azure.Core.TokenCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential)" />
      <MemberSignature Language="F#" Value="new Azure.Communication.CallingServer.CallingServerClient : Uri * Azure.Core.TokenCredential -&gt; Azure.Communication.CallingServer.CallingServerClient" Usage="new Azure.Communication.CallingServer.CallingServerClient (endpoint, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
      </Parameters>
      <Docs>
        <param name="endpoint">The URI of the Azure Communication Services resource.</param>
        <param name="credential">The TokenCredential used to authenticate requests, such as DefaultAzureCredential.</param>
        <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallingServer.CallingServerClient" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallingServerClient (Uri endpoint, Azure.Core.TokenCredential credential, Azure.Communication.CallingServer.CallingServerClientOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential, class Azure.Communication.CallingServer.CallingServerClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Communication.CallingServer.CallingServerClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential, Optional options As CallingServerClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Communication.CallingServer.CallingServerClient : Uri * Azure.Core.TokenCredential * Azure.Communication.CallingServer.CallingServerClientOptions -&gt; Azure.Communication.CallingServer.CallingServerClient" Usage="new Azure.Communication.CallingServer.CallingServerClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Communication.CallingServer.CallingServerClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint">The URI of the Azure Communication Services resource.</param>
        <param name="credential">The TokenCredential used to authenticate requests, such as DefaultAzureCredential.</param>
        <param name="options">Client option exposing <see cref="P:Azure.Core.ClientOptions.Diagnostics" />, <see cref="P:Azure.Core.ClientOptions.Retry" />, <see cref="P:Azure.Core.ClientOptions.Transport" />, etc.</param>
        <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallingServer.CallingServerClient" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallingServerClient (Uri pmaEndpoint, string connectionString, Azure.Communication.CallingServer.CallingServerClientOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri pmaEndpoint, string connectionString, class Azure.Communication.CallingServer.CallingServerClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerClient.#ctor(System.Uri,System.String,Azure.Communication.CallingServer.CallingServerClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pmaEndpoint As Uri, connectionString As String, Optional options As CallingServerClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Communication.CallingServer.CallingServerClient : Uri * string * Azure.Communication.CallingServer.CallingServerClientOptions -&gt; Azure.Communication.CallingServer.CallingServerClient" Usage="new Azure.Communication.CallingServer.CallingServerClient (pmaEndpoint, connectionString, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pmaEndpoint" Type="System.Uri" />
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="options" Type="Azure.Communication.CallingServer.CallingServerClientOptions" />
      </Parameters>
      <Docs>
        <param name="pmaEndpoint">Endpoint for PMA</param>
        <param name="connectionString">Connection string acquired from the Azure Communication Services resource.</param>
        <param name="options">Client option exposing <see cref="P:Azure.Core.ClientOptions.Diagnostics" />, <see cref="P:Azure.Core.ClientOptions.Retry" />, <see cref="P:Azure.Core.ClientOptions.Transport" />, etc.</param>
        <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallingServer.CallingServerClient" /> with custom PMA endpoint.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnswerCall">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.CallingServer.CallConnection&gt; AnswerCall (string incomingCallContext, Uri callbackUri, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.CallingServer.CallConnection&gt; AnswerCall(string incomingCallContext, class System.Uri callbackUri, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerClient.AnswerCall(System.String,System.Uri,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AnswerCall (incomingCallContext As String, callbackUri As Uri, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CallConnection)" />
      <MemberSignature Language="F#" Value="abstract member AnswerCall : string * Uri * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.CallingServer.CallConnection&gt;&#xA;override this.AnswerCall : string * Uri * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.CallingServer.CallConnection&gt;" Usage="callingServerClient.AnswerCall (incomingCallContext, callbackUri, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.CallingServer.CallConnection&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="incomingCallContext" Type="System.String" />
        <Parameter Name="callbackUri" Type="System.Uri" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="incomingCallContext"> The incoming call context </param>
        <param name="callbackUri"> The callback Uri to receive status notifications. </param>
        <param name="cancellationToken"> The cancellation token. </param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="incomingCallContext" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="AnswerCallAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallingServer.CallConnection&gt;&gt; AnswerCallAsync (string incomingCallContext, Uri callbackUri, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.CallingServer.CallConnection&gt;&gt; AnswerCallAsync(string incomingCallContext, class System.Uri callbackUri, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerClient.AnswerCallAsync(System.String,System.Uri,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AnswerCallAsync (incomingCallContext As String, callbackUri As Uri, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CallConnection))" />
      <MemberSignature Language="F#" Value="abstract member AnswerCallAsync : string * Uri * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallingServer.CallConnection&gt;&gt;&#xA;override this.AnswerCallAsync : string * Uri * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallingServer.CallConnection&gt;&gt;" Usage="callingServerClient.AnswerCallAsync (incomingCallContext, callbackUri, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallingServer.CallConnection&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="incomingCallContext" Type="System.String" />
        <Parameter Name="callbackUri" Type="System.Uri" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="incomingCallContext"> The incoming call context </param>
        <param name="callbackUri"> The callback Uri to receive status notifications. </param>
        <param name="cancellationToken"> The cancellation token. </param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="incomingCallContext" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateCall">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.CallingServer.CallConnection&gt; CreateCall (Azure.Communication.CallingServer.Models.CallSource source, System.Collections.Generic.IEnumerable&lt;Azure.Communication.CommunicationIdentifier&gt; targets, Uri callbackUri, Azure.Communication.CallingServer.CreateCallOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.CallingServer.CallConnection&gt; CreateCall(class Azure.Communication.CallingServer.Models.CallSource source, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Communication.CommunicationIdentifier&gt; targets, class System.Uri callbackUri, class Azure.Communication.CallingServer.CreateCallOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerClient.CreateCall(Azure.Communication.CallingServer.Models.CallSource,System.Collections.Generic.IEnumerable{Azure.Communication.CommunicationIdentifier},System.Uri,Azure.Communication.CallingServer.CreateCallOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateCall (source As CallSource, targets As IEnumerable(Of CommunicationIdentifier), callbackUri As Uri, Optional options As CreateCallOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CallConnection)" />
      <MemberSignature Language="F#" Value="abstract member CreateCall : Azure.Communication.CallingServer.Models.CallSource * seq&lt;Azure.Communication.CommunicationIdentifier&gt; * Uri * Azure.Communication.CallingServer.CreateCallOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.CallingServer.CallConnection&gt;&#xA;override this.CreateCall : Azure.Communication.CallingServer.Models.CallSource * seq&lt;Azure.Communication.CommunicationIdentifier&gt; * Uri * Azure.Communication.CallingServer.CreateCallOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.CallingServer.CallConnection&gt;" Usage="callingServerClient.CreateCall (source, targets, callbackUri, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.CallingServer.CallConnection&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Azure.Communication.CallingServer.Models.CallSource" />
        <Parameter Name="targets" Type="System.Collections.Generic.IEnumerable&lt;Azure.Communication.CommunicationIdentifier&gt;" />
        <Parameter Name="callbackUri" Type="System.Uri" />
        <Parameter Name="options" Type="Azure.Communication.CallingServer.CreateCallOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="source"> The source identity. </param>
        <param name="targets"> The target identities. </param>
        <param name="callbackUri"> The callback Uri to receive status notifications. </param>
        <param name="options"> The call options. </param>
        <param name="cancellationToken"> The cancellation token. </param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="options" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateCallAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallingServer.CallConnection&gt;&gt; CreateCallAsync (Azure.Communication.CallingServer.Models.CallSource source, System.Collections.Generic.IEnumerable&lt;Azure.Communication.CommunicationIdentifier&gt; targets, Uri callbackUri, Azure.Communication.CallingServer.CreateCallOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.CallingServer.CallConnection&gt;&gt; CreateCallAsync(class Azure.Communication.CallingServer.Models.CallSource source, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Communication.CommunicationIdentifier&gt; targets, class System.Uri callbackUri, class Azure.Communication.CallingServer.CreateCallOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerClient.CreateCallAsync(Azure.Communication.CallingServer.Models.CallSource,System.Collections.Generic.IEnumerable{Azure.Communication.CommunicationIdentifier},System.Uri,Azure.Communication.CallingServer.CreateCallOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateCallAsync (source As CallSource, targets As IEnumerable(Of CommunicationIdentifier), callbackUri As Uri, Optional options As CreateCallOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CallConnection))" />
      <MemberSignature Language="F#" Value="abstract member CreateCallAsync : Azure.Communication.CallingServer.Models.CallSource * seq&lt;Azure.Communication.CommunicationIdentifier&gt; * Uri * Azure.Communication.CallingServer.CreateCallOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallingServer.CallConnection&gt;&gt;&#xA;override this.CreateCallAsync : Azure.Communication.CallingServer.Models.CallSource * seq&lt;Azure.Communication.CommunicationIdentifier&gt; * Uri * Azure.Communication.CallingServer.CreateCallOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallingServer.CallConnection&gt;&gt;" Usage="callingServerClient.CreateCallAsync (source, targets, callbackUri, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallingServer.CallConnection&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Azure.Communication.CallingServer.Models.CallSource" />
        <Parameter Name="targets" Type="System.Collections.Generic.IEnumerable&lt;Azure.Communication.CommunicationIdentifier&gt;" />
        <Parameter Name="callbackUri" Type="System.Uri" />
        <Parameter Name="options" Type="Azure.Communication.CallingServer.CreateCallOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="source"> The source identity. </param>
        <param name="targets"> The target identities. </param>
        <param name="callbackUri"> The callback Uri to receive status notifications. </param>
        <param name="options"> The call options. </param>
        <param name="cancellationToken"> The cancellation token. </param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="options" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateCallConnection">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.CallingServer.CallConnection&gt; CreateCallConnection (Azure.Communication.CommunicationIdentifier source, System.Collections.Generic.IEnumerable&lt;Azure.Communication.CommunicationIdentifier&gt; targets, Azure.Communication.CallingServer.CreateCallOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.CallingServer.CallConnection&gt; CreateCallConnection(class Azure.Communication.CommunicationIdentifier source, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Communication.CommunicationIdentifier&gt; targets, class Azure.Communication.CallingServer.CreateCallOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerClient.CreateCallConnection(Azure.Communication.CommunicationIdentifier,System.Collections.Generic.IEnumerable{Azure.Communication.CommunicationIdentifier},Azure.Communication.CallingServer.CreateCallOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateCallConnection (source As CommunicationIdentifier, targets As IEnumerable(Of CommunicationIdentifier), options As CreateCallOptions, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CallConnection)" />
      <MemberSignature Language="F#" Value="abstract member CreateCallConnection : Azure.Communication.CommunicationIdentifier * seq&lt;Azure.Communication.CommunicationIdentifier&gt; * Azure.Communication.CallingServer.CreateCallOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.CallingServer.CallConnection&gt;&#xA;override this.CreateCallConnection : Azure.Communication.CommunicationIdentifier * seq&lt;Azure.Communication.CommunicationIdentifier&gt; * Azure.Communication.CallingServer.CreateCallOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.CallingServer.CallConnection&gt;" Usage="callingServerClient.CreateCallConnection (source, targets, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.CallingServer.CallConnection&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Azure.Communication.CommunicationIdentifier" />
        <Parameter Name="targets" Type="System.Collections.Generic.IEnumerable&lt;Azure.Communication.CommunicationIdentifier&gt;" />
        <Parameter Name="options" Type="Azure.Communication.CallingServer.CreateCallOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="source"> The source identity </param>
        <param name="targets"> The target identities. </param>
        <param name="options"> The call options. </param>
        <param name="cancellationToken"> The cancellation token. </param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="options" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateCallConnectionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallingServer.CallConnection&gt;&gt; CreateCallConnectionAsync (Azure.Communication.CommunicationIdentifier source, System.Collections.Generic.IEnumerable&lt;Azure.Communication.CommunicationIdentifier&gt; targets, Azure.Communication.CallingServer.CreateCallOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.CallingServer.CallConnection&gt;&gt; CreateCallConnectionAsync(class Azure.Communication.CommunicationIdentifier source, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Communication.CommunicationIdentifier&gt; targets, class Azure.Communication.CallingServer.CreateCallOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerClient.CreateCallConnectionAsync(Azure.Communication.CommunicationIdentifier,System.Collections.Generic.IEnumerable{Azure.Communication.CommunicationIdentifier},Azure.Communication.CallingServer.CreateCallOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateCallConnectionAsync (source As CommunicationIdentifier, targets As IEnumerable(Of CommunicationIdentifier), options As CreateCallOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CallConnection))" />
      <MemberSignature Language="F#" Value="abstract member CreateCallConnectionAsync : Azure.Communication.CommunicationIdentifier * seq&lt;Azure.Communication.CommunicationIdentifier&gt; * Azure.Communication.CallingServer.CreateCallOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallingServer.CallConnection&gt;&gt;&#xA;override this.CreateCallConnectionAsync : Azure.Communication.CommunicationIdentifier * seq&lt;Azure.Communication.CommunicationIdentifier&gt; * Azure.Communication.CallingServer.CreateCallOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallingServer.CallConnection&gt;&gt;" Usage="callingServerClient.CreateCallConnectionAsync (source, targets, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallingServer.CallConnection&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Azure.Communication.CommunicationIdentifier" />
        <Parameter Name="targets" Type="System.Collections.Generic.IEnumerable&lt;Azure.Communication.CommunicationIdentifier&gt;" />
        <Parameter Name="options" Type="Azure.Communication.CallingServer.CreateCallOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="source"> The source identity </param>
        <param name="targets"> The target identities. </param>
        <param name="options"> The call options. </param>
        <param name="cancellationToken"> The cancellation token. </param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="options" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteRecording">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteRecording (Uri deleteEndpoint, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteRecording(class System.Uri deleteEndpoint, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerClient.DeleteRecording(System.Uri,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteRecording (deleteEndpoint As Uri, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteRecording : Uri * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteRecording : Uri * System.Threading.CancellationToken -&gt; Azure.Response" Usage="callingServerClient.DeleteRecording (deleteEndpoint, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deleteEndpoint" Type="System.Uri" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deleteEndpoint">
            A <see cref="T:System.Uri" /> with the Recording's content's url location.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be canceled.
            </param>
        <summary>
            The <see cref="M:Azure.Communication.CallingServer.CallingServerClient.DeleteRecording(System.Uri,System.Threading.CancellationToken)" />
            operation deletes the specified content from storage.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> describing the operation.
            </returns>
        <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteRecordingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteRecordingAsync (Uri deleteEndpoint, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteRecordingAsync(class System.Uri deleteEndpoint, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerClient.DeleteRecordingAsync(System.Uri,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteRecordingAsync (deleteEndpoint As Uri, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteRecordingAsync : Uri * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteRecordingAsync : Uri * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="callingServerClient.DeleteRecordingAsync (deleteEndpoint, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deleteEndpoint" Type="System.Uri" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deleteEndpoint">
            A <see cref="T:System.Uri" /> with the Recording's content's url location.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be canceled.
            </param>
        <summary>
            The <see cref="M:Azure.Communication.CallingServer.CallingServerClient.DeleteRecordingAsync(System.Uri,System.Threading.CancellationToken)" />
            operation deletes the specified content from storage
            using parallel requests.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> describing the operation.
            </returns>
        <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadStreaming">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;System.IO.Stream&gt; DownloadStreaming (Uri sourceEndpoint, Azure.HttpRange range = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class System.IO.Stream&gt; DownloadStreaming(class System.Uri sourceEndpoint, valuetype Azure.HttpRange range, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerClient.DownloadStreaming(System.Uri,Azure.HttpRange,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadStreaming (sourceEndpoint As Uri, Optional range As HttpRange = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Stream)" />
      <MemberSignature Language="F#" Value="abstract member DownloadStreaming : Uri * Azure.HttpRange * System.Threading.CancellationToken -&gt; Azure.Response&lt;System.IO.Stream&gt;&#xA;override this.DownloadStreaming : Uri * Azure.HttpRange * System.Threading.CancellationToken -&gt; Azure.Response&lt;System.IO.Stream&gt;" Usage="callingServerClient.DownloadStreaming (sourceEndpoint, range, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceEndpoint" Type="System.Uri" />
        <Parameter Name="range" Type="Azure.HttpRange" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sourceEndpoint">
             Recording's content's url location.
             </param>
        <param name="range">
             If provided, only download the bytes of the content in the specified range.
             If not provided, download the entire content.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be canceled.
             </param>
        <summary>
             The <see cref="M:Azure.Communication.CallingServer.CallingServerClient.DownloadStreaming(System.Uri,Azure.HttpRange,System.Threading.CancellationToken)" />
             operation downloads the recording's content.
            
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> containing the
             downloaded content.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadStreamingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;System.IO.Stream&gt;&gt; DownloadStreamingAsync (Uri sourceEndpoint, Azure.HttpRange range = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class System.IO.Stream&gt;&gt; DownloadStreamingAsync(class System.Uri sourceEndpoint, valuetype Azure.HttpRange range, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerClient.DownloadStreamingAsync(System.Uri,Azure.HttpRange,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadStreamingAsync (sourceEndpoint As Uri, Optional range As HttpRange = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Stream))" />
      <MemberSignature Language="F#" Value="abstract member DownloadStreamingAsync : Uri * Azure.HttpRange * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.IO.Stream&gt;&gt;&#xA;override this.DownloadStreamingAsync : Uri * Azure.HttpRange * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.IO.Stream&gt;&gt;" Usage="callingServerClient.DownloadStreamingAsync (sourceEndpoint, range, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.IO.Stream&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceEndpoint" Type="System.Uri" />
        <Parameter Name="range" Type="Azure.HttpRange" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sourceEndpoint">
             Recording's content's url location.
             </param>
        <param name="range">
             If provided, only download the bytes of the content in the specified range.
             If not provided, download the entire content.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be canceled.
             </param>
        <summary>
             The <see cref="M:Azure.Communication.CallingServer.CallingServerClient.DownloadStreamingAsync(System.Uri,Azure.HttpRange,System.Threading.CancellationToken)" />
             operation downloads the recording's content.
            
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> containing the
             downloaded content.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadTo">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DownloadTo (Uri sourceEndpoint, System.IO.Stream destinationStream, Azure.Communication.CallingServer.ContentTransferOptions transferOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DownloadTo(class System.Uri sourceEndpoint, class System.IO.Stream destinationStream, valuetype Azure.Communication.CallingServer.ContentTransferOptions transferOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerClient.DownloadTo(System.Uri,System.IO.Stream,Azure.Communication.CallingServer.ContentTransferOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadTo (sourceEndpoint As Uri, destinationStream As Stream, Optional transferOptions As ContentTransferOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DownloadTo : Uri * System.IO.Stream * Azure.Communication.CallingServer.ContentTransferOptions * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DownloadTo : Uri * System.IO.Stream * Azure.Communication.CallingServer.ContentTransferOptions * System.Threading.CancellationToken -&gt; Azure.Response" Usage="callingServerClient.DownloadTo (sourceEndpoint, destinationStream, transferOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceEndpoint" Type="System.Uri" />
        <Parameter Name="destinationStream" Type="System.IO.Stream" />
        <Parameter Name="transferOptions" Type="Azure.Communication.CallingServer.ContentTransferOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sourceEndpoint">
            A <see cref="T:System.Uri" /> with the Recording's content's url location.
            </param>
        <param name="destinationStream">
            A <see cref="T:System.IO.Stream" /> to write the downloaded content to.
            </param>
        <param name="transferOptions">
            Optional <see cref="T:Azure.Communication.CallingServer.ContentTransferOptions" /> to configure
            parallel transfer behavior.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be canceled.
            </param>
        <summary>
            The <see cref="M:Azure.Communication.CallingServer.CallingServerClient.DownloadTo(System.Uri,System.IO.Stream,Azure.Communication.CallingServer.ContentTransferOptions,System.Threading.CancellationToken)" />
            operation downloads the specified content using parallel requests,
            and writes the content to <paramref name="destinationStream" />.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> describing the operation.
            </returns>
        <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadTo">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DownloadTo (Uri sourceEndpoint, string destinationPath, Azure.Communication.CallingServer.ContentTransferOptions transferOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DownloadTo(class System.Uri sourceEndpoint, string destinationPath, valuetype Azure.Communication.CallingServer.ContentTransferOptions transferOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerClient.DownloadTo(System.Uri,System.String,Azure.Communication.CallingServer.ContentTransferOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadTo (sourceEndpoint As Uri, destinationPath As String, Optional transferOptions As ContentTransferOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DownloadTo : Uri * string * Azure.Communication.CallingServer.ContentTransferOptions * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DownloadTo : Uri * string * Azure.Communication.CallingServer.ContentTransferOptions * System.Threading.CancellationToken -&gt; Azure.Response" Usage="callingServerClient.DownloadTo (sourceEndpoint, destinationPath, transferOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceEndpoint" Type="System.Uri" />
        <Parameter Name="destinationPath" Type="System.String" />
        <Parameter Name="transferOptions" Type="Azure.Communication.CallingServer.ContentTransferOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sourceEndpoint">
            A <see cref="T:System.Uri" /> with the Recording's content's url location.
            </param>
        <param name="destinationPath">
            A file path to write the downloaded content to.
            </param>
        <param name="transferOptions">
            Optional <see cref="T:Azure.Communication.CallingServer.ContentTransferOptions" /> to configure
            parallel transfer behavior.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be canceled.
            </param>
        <summary>
            The <see cref="M:Azure.Communication.CallingServer.CallingServerClient.DownloadTo(System.Uri,System.String,Azure.Communication.CallingServer.ContentTransferOptions,System.Threading.CancellationToken)" />
            operation downloads the specified content using parallel requests,
            and writes the content to <paramref name="destinationPath" />.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> describing the operation.
            </returns>
        <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadToAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DownloadToAsync (Uri sourceEndpoint, System.IO.Stream destinationStream, Azure.Communication.CallingServer.ContentTransferOptions transferOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DownloadToAsync(class System.Uri sourceEndpoint, class System.IO.Stream destinationStream, valuetype Azure.Communication.CallingServer.ContentTransferOptions transferOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerClient.DownloadToAsync(System.Uri,System.IO.Stream,Azure.Communication.CallingServer.ContentTransferOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadToAsync (sourceEndpoint As Uri, destinationStream As Stream, Optional transferOptions As ContentTransferOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DownloadToAsync : Uri * System.IO.Stream * Azure.Communication.CallingServer.ContentTransferOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DownloadToAsync : Uri * System.IO.Stream * Azure.Communication.CallingServer.ContentTransferOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="callingServerClient.DownloadToAsync (sourceEndpoint, destinationStream, transferOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceEndpoint" Type="System.Uri" />
        <Parameter Name="destinationStream" Type="System.IO.Stream" />
        <Parameter Name="transferOptions" Type="Azure.Communication.CallingServer.ContentTransferOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sourceEndpoint">
            A <see cref="T:System.Uri" /> with the Recording's content's url location.
            </param>
        <param name="destinationStream">
            A <see cref="T:System.IO.Stream" /> to write the downloaded content to.
            </param>
        <param name="transferOptions">
            Optional <see cref="T:Azure.Communication.CallingServer.ContentTransferOptions" /> to configure
            parallel transfer behavior.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be canceled.
            </param>
        <summary>
            The <see cref="M:Azure.Communication.CallingServer.CallingServerClient.DownloadToAsync(System.Uri,System.IO.Stream,Azure.Communication.CallingServer.ContentTransferOptions,System.Threading.CancellationToken)" />
            operation downloads the specified content using parallel requests,
            and writes the content to <paramref name="destinationStream" />.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> describing the operation.
            </returns>
        <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadToAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DownloadToAsync (Uri sourceEndpoint, string destinationPath, Azure.Communication.CallingServer.ContentTransferOptions transferOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DownloadToAsync(class System.Uri sourceEndpoint, string destinationPath, valuetype Azure.Communication.CallingServer.ContentTransferOptions transferOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerClient.DownloadToAsync(System.Uri,System.String,Azure.Communication.CallingServer.ContentTransferOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadToAsync (sourceEndpoint As Uri, destinationPath As String, Optional transferOptions As ContentTransferOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DownloadToAsync : Uri * string * Azure.Communication.CallingServer.ContentTransferOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DownloadToAsync : Uri * string * Azure.Communication.CallingServer.ContentTransferOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="callingServerClient.DownloadToAsync (sourceEndpoint, destinationPath, transferOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceEndpoint" Type="System.Uri" />
        <Parameter Name="destinationPath" Type="System.String" />
        <Parameter Name="transferOptions" Type="Azure.Communication.CallingServer.ContentTransferOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sourceEndpoint">
            A <see cref="T:System.Uri" /> with the Recording's content's url location.
            </param>
        <param name="destinationPath">
            A file path to write the downloaded content to.
            </param>
        <param name="transferOptions">
            Optional <see cref="T:Azure.Communication.CallingServer.ContentTransferOptions" /> to configure
            parallel transfer behavior.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be canceled.
            </param>
        <summary>
            The <see cref="M:Azure.Communication.CallingServer.CallingServerClient.DownloadToAsync(System.Uri,System.String,Azure.Communication.CallingServer.ContentTransferOptions,System.Threading.CancellationToken)" />
            operation downloads the specified content using parallel requests,
            and writes the content to <paramref name="destinationPath" />.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> describing the operation.
            </returns>
        <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCall">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.CallingServer.CallConnection&gt; GetCall (string callConnectionId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.CallingServer.CallConnection&gt; GetCall(string callConnectionId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerClient.GetCall(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCall (callConnectionId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CallConnection)" />
      <MemberSignature Language="F#" Value="abstract member GetCall : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.CallingServer.CallConnection&gt;&#xA;override this.GetCall : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.CallingServer.CallConnection&gt;" Usage="callingServerClient.GetCall (callConnectionId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.CallingServer.CallConnection&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callConnectionId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="callConnectionId"> The thread id for the ChatThreadClient instance. </param>
        <param name="cancellationToken"> The cancellation token. </param>
        <summary> Get CallConnection. <see cref="T:Azure.Communication.CallingServer.CallConnection" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCallAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallingServer.CallConnection&gt;&gt; GetCallAsync (string callConnectionId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.CallingServer.CallConnection&gt;&gt; GetCallAsync(string callConnectionId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerClient.GetCallAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCallAsync (callConnectionId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CallConnection))" />
      <MemberSignature Language="F#" Value="abstract member GetCallAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallingServer.CallConnection&gt;&gt;&#xA;override this.GetCallAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallingServer.CallConnection&gt;&gt;" Usage="callingServerClient.GetCallAsync (callConnectionId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallingServer.CallConnection&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callConnectionId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="callConnectionId"> The thread id for the ChatThreadClient instance. </param>
        <param name="cancellationToken"> The cancellation token. </param>
        <summary> Get CallConnection. <see cref="T:Azure.Communication.CallingServer.CallConnection" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCallConnection">
      <MemberSignature Language="C#" Value="public virtual Azure.Communication.CallingServer.CallConnection GetCallConnection (string callConnectionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Communication.CallingServer.CallConnection GetCallConnection(string callConnectionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerClient.GetCallConnection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCallConnection (callConnectionId As String) As CallConnection" />
      <MemberSignature Language="F#" Value="abstract member GetCallConnection : string -&gt; Azure.Communication.CallingServer.CallConnection&#xA;override this.GetCallConnection : string -&gt; Azure.Communication.CallingServer.CallConnection" Usage="callingServerClient.GetCallConnection callConnectionId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallingServer.CallConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callConnectionId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="callConnectionId"> The thread id for the ChatThreadClient instance. </param>
        <summary> Initializes a new instance of CallConnection. <see cref="T:Azure.Communication.CallingServer.CallConnection" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRecordingState">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.CallingServer.GetCallRecordingStateResponse&gt; GetRecordingState (string recordingId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.CallingServer.GetCallRecordingStateResponse&gt; GetRecordingState(string recordingId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerClient.GetRecordingState(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecordingState (recordingId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of GetCallRecordingStateResponse)" />
      <MemberSignature Language="F#" Value="abstract member GetRecordingState : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.CallingServer.GetCallRecordingStateResponse&gt;&#xA;override this.GetRecordingState : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.CallingServer.GetCallRecordingStateResponse&gt;" Usage="callingServerClient.GetRecordingState (recordingId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.CallingServer.GetCallRecordingStateResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recordingId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="recordingId">The recording id to get the state of.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Get the current recording state by recording id.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRecordingStateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallingServer.GetCallRecordingStateResponse&gt;&gt; GetRecordingStateAsync (string recordingId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.CallingServer.GetCallRecordingStateResponse&gt;&gt; GetRecordingStateAsync(string recordingId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerClient.GetRecordingStateAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecordingStateAsync (recordingId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of GetCallRecordingStateResponse))" />
      <MemberSignature Language="F#" Value="abstract member GetRecordingStateAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallingServer.GetCallRecordingStateResponse&gt;&gt;&#xA;override this.GetRecordingStateAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallingServer.GetCallRecordingStateResponse&gt;&gt;" Usage="callingServerClient.GetRecordingStateAsync (recordingId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallingServer.GetCallRecordingStateResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recordingId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="recordingId">The recording id to get the state of.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Get the current recording state by recording id.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeServerCall">
      <MemberSignature Language="C#" Value="public virtual Azure.Communication.CallingServer.ServerCall InitializeServerCall (string serverCallId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Communication.CallingServer.ServerCall InitializeServerCall(string serverCallId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerClient.InitializeServerCall(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InitializeServerCall (serverCallId As String) As ServerCall" />
      <MemberSignature Language="F#" Value="abstract member InitializeServerCall : string -&gt; Azure.Communication.CallingServer.ServerCall&#xA;override this.InitializeServerCall : string -&gt; Azure.Communication.CallingServer.ServerCall" Usage="callingServerClient.InitializeServerCall serverCallId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallingServer.ServerCall</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCallId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serverCallId">The server call id. </param>
        <summary>
            Initializes a server call.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JoinCall">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.CallingServer.CallConnection&gt; JoinCall (string serverCallId, Azure.Communication.CommunicationIdentifier source, Azure.Communication.CallingServer.JoinCallOptions callOptions, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.CallingServer.CallConnection&gt; JoinCall(string serverCallId, class Azure.Communication.CommunicationIdentifier source, class Azure.Communication.CallingServer.JoinCallOptions callOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerClient.JoinCall(System.String,Azure.Communication.CommunicationIdentifier,Azure.Communication.CallingServer.JoinCallOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function JoinCall (serverCallId As String, source As CommunicationIdentifier, callOptions As JoinCallOptions, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CallConnection)" />
      <MemberSignature Language="F#" Value="abstract member JoinCall : string * Azure.Communication.CommunicationIdentifier * Azure.Communication.CallingServer.JoinCallOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.CallingServer.CallConnection&gt;&#xA;override this.JoinCall : string * Azure.Communication.CommunicationIdentifier * Azure.Communication.CallingServer.JoinCallOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.CallingServer.CallConnection&gt;" Usage="callingServerClient.JoinCall (serverCallId, source, callOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.CallingServer.CallConnection&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCallId" Type="System.String" />
        <Parameter Name="source" Type="Azure.Communication.CommunicationIdentifier" />
        <Parameter Name="callOptions" Type="Azure.Communication.CallingServer.JoinCallOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="serverCallId"> The server call id. </param>
        <param name="source"> The source identity. </param>
        <param name="callOptions"> The call Options. </param>
        <param name="cancellationToken"> The cancellation token. </param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callOptions" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="JoinCallAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallingServer.CallConnection&gt;&gt; JoinCallAsync (string serverCallId, Azure.Communication.CommunicationIdentifier source, Azure.Communication.CallingServer.JoinCallOptions callOptions, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.CallingServer.CallConnection&gt;&gt; JoinCallAsync(string serverCallId, class Azure.Communication.CommunicationIdentifier source, class Azure.Communication.CallingServer.JoinCallOptions callOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerClient.JoinCallAsync(System.String,Azure.Communication.CommunicationIdentifier,Azure.Communication.CallingServer.JoinCallOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function JoinCallAsync (serverCallId As String, source As CommunicationIdentifier, callOptions As JoinCallOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CallConnection))" />
      <MemberSignature Language="F#" Value="abstract member JoinCallAsync : string * Azure.Communication.CommunicationIdentifier * Azure.Communication.CallingServer.JoinCallOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallingServer.CallConnection&gt;&gt;&#xA;override this.JoinCallAsync : string * Azure.Communication.CommunicationIdentifier * Azure.Communication.CallingServer.JoinCallOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallingServer.CallConnection&gt;&gt;" Usage="callingServerClient.JoinCallAsync (serverCallId, source, callOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallingServer.CallConnection&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCallId" Type="System.String" />
        <Parameter Name="source" Type="Azure.Communication.CommunicationIdentifier" />
        <Parameter Name="callOptions" Type="Azure.Communication.CallingServer.JoinCallOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="serverCallId"> The server call id. </param>
        <param name="source"> The source identity. </param>
        <param name="callOptions"> The call Options. </param>
        <param name="cancellationToken"> The cancellation token. </param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callOptions" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="PauseRecording">
      <MemberSignature Language="C#" Value="public virtual Azure.Response PauseRecording (string recordingId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response PauseRecording(string recordingId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerClient.PauseRecording(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PauseRecording (recordingId As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member PauseRecording : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.PauseRecording : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="callingServerClient.PauseRecording (recordingId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recordingId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="recordingId">The recording id to pause.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Pause recording of the call.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PauseRecordingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; PauseRecordingAsync (string recordingId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; PauseRecordingAsync(string recordingId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerClient.PauseRecordingAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PauseRecordingAsync (recordingId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member PauseRecordingAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.PauseRecordingAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="callingServerClient.PauseRecordingAsync (recordingId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recordingId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="recordingId">The recording id to pause.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Pause recording of the call.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedirectCall">
      <MemberSignature Language="C#" Value="public virtual Azure.Response RedirectCall (string incomingCallContext, Azure.Communication.CommunicationIdentifier target, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response RedirectCall(string incomingCallContext, class Azure.Communication.CommunicationIdentifier target, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerClient.RedirectCall(System.String,Azure.Communication.CommunicationIdentifier,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RedirectCall (incomingCallContext As String, target As CommunicationIdentifier, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member RedirectCall : string * Azure.Communication.CommunicationIdentifier * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.RedirectCall : string * Azure.Communication.CommunicationIdentifier * System.Threading.CancellationToken -&gt; Azure.Response" Usage="callingServerClient.RedirectCall (incomingCallContext, target, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="incomingCallContext" Type="System.String" />
        <Parameter Name="target" Type="Azure.Communication.CommunicationIdentifier" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="incomingCallContext"> The incoming call context </param>
        <param name="target"> The target identities. </param>
        <param name="cancellationToken"> The cancellation token. </param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="target" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectCallAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; RedirectCallAsync (string incomingCallContext, Azure.Communication.CommunicationIdentifier target, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; RedirectCallAsync(string incomingCallContext, class Azure.Communication.CommunicationIdentifier target, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerClient.RedirectCallAsync(System.String,Azure.Communication.CommunicationIdentifier,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RedirectCallAsync (incomingCallContext As String, target As CommunicationIdentifier, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member RedirectCallAsync : string * Azure.Communication.CommunicationIdentifier * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.RedirectCallAsync : string * Azure.Communication.CommunicationIdentifier * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="callingServerClient.RedirectCallAsync (incomingCallContext, target, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="incomingCallContext" Type="System.String" />
        <Parameter Name="target" Type="Azure.Communication.CommunicationIdentifier" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="incomingCallContext"> The incoming call context </param>
        <param name="target"> The target identities. </param>
        <param name="cancellationToken"> The cancellation token. </param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="target" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="RejectCall">
      <MemberSignature Language="C#" Value="public virtual Azure.Response RejectCall (string incomingCallContext, Azure.Communication.CallingServer.CallRejectReason callRejectReason, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response RejectCall(string incomingCallContext, valuetype Azure.Communication.CallingServer.CallRejectReason callRejectReason, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerClient.RejectCall(System.String,Azure.Communication.CallingServer.CallRejectReason,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RejectCall (incomingCallContext As String, callRejectReason As CallRejectReason, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member RejectCall : string * Azure.Communication.CallingServer.CallRejectReason * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.RejectCall : string * Azure.Communication.CallingServer.CallRejectReason * System.Threading.CancellationToken -&gt; Azure.Response" Usage="callingServerClient.RejectCall (incomingCallContext, callRejectReason, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="incomingCallContext" Type="System.String" />
        <Parameter Name="callRejectReason" Type="Azure.Communication.CallingServer.CallRejectReason" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="incomingCallContext"> The incoming call context </param>
        <param name="callRejectReason"> The reason for rejecting call. </param>
        <param name="cancellationToken"> The cancellation token. </param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="incomingCallContext" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="RejectCallAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; RejectCallAsync (string incomingCallContext, Azure.Communication.CallingServer.CallRejectReason callRejectReason, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; RejectCallAsync(string incomingCallContext, valuetype Azure.Communication.CallingServer.CallRejectReason callRejectReason, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerClient.RejectCallAsync(System.String,Azure.Communication.CallingServer.CallRejectReason,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RejectCallAsync (incomingCallContext As String, callRejectReason As CallRejectReason, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member RejectCallAsync : string * Azure.Communication.CallingServer.CallRejectReason * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.RejectCallAsync : string * Azure.Communication.CallingServer.CallRejectReason * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="callingServerClient.RejectCallAsync (incomingCallContext, callRejectReason, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="incomingCallContext" Type="System.String" />
        <Parameter Name="callRejectReason" Type="Azure.Communication.CallingServer.CallRejectReason" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="incomingCallContext"> The incoming call context </param>
        <param name="callRejectReason"> The reason for rejecting call. </param>
        <param name="cancellationToken"> The cancellation token. </param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="incomingCallContext" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResumeRecording">
      <MemberSignature Language="C#" Value="public virtual Azure.Response ResumeRecording (string recordingId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response ResumeRecording(string recordingId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerClient.ResumeRecording(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResumeRecording (recordingId As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member ResumeRecording : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.ResumeRecording : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="callingServerClient.ResumeRecording (recordingId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recordingId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="recordingId">The recording id to resume.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            resume recording of the call.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeRecordingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; ResumeRecordingAsync (string recordingId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; ResumeRecordingAsync(string recordingId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerClient.ResumeRecordingAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResumeRecordingAsync (recordingId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member ResumeRecordingAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.ResumeRecordingAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="callingServerClient.ResumeRecordingAsync (recordingId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recordingId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="recordingId">The recording id to pause.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Resume recording of the call.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartRecording">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.CallingServer.StartCallRecordingResponse&gt; StartRecording (Azure.Communication.CallingServer.CallLocator callLocator, Uri recordingStateCallbackUri, Azure.Communication.CallingServer.RecordingContentType? content = default, Azure.Communication.CallingServer.RecordingChannelType? channel = default, Azure.Communication.CallingServer.RecordingFormatType? format = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.CallingServer.StartCallRecordingResponse&gt; StartRecording(class Azure.Communication.CallingServer.CallLocator callLocator, class System.Uri recordingStateCallbackUri, valuetype System.Nullable`1&lt;valuetype Azure.Communication.CallingServer.RecordingContentType&gt; content, valuetype System.Nullable`1&lt;valuetype Azure.Communication.CallingServer.RecordingChannelType&gt; channel, valuetype System.Nullable`1&lt;valuetype Azure.Communication.CallingServer.RecordingFormatType&gt; format, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerClient.StartRecording(Azure.Communication.CallingServer.CallLocator,System.Uri,System.Nullable{Azure.Communication.CallingServer.RecordingContentType},System.Nullable{Azure.Communication.CallingServer.RecordingChannelType},System.Nullable{Azure.Communication.CallingServer.RecordingFormatType},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartRecording (callLocator As CallLocator, recordingStateCallbackUri As Uri, Optional content As Nullable(Of RecordingContentType) = Nothing, Optional channel As Nullable(Of RecordingChannelType) = Nothing, Optional format As Nullable(Of RecordingFormatType) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of StartCallRecordingResponse)" />
      <MemberSignature Language="F#" Value="abstract member StartRecording : Azure.Communication.CallingServer.CallLocator * Uri * Nullable&lt;Azure.Communication.CallingServer.RecordingContentType&gt; * Nullable&lt;Azure.Communication.CallingServer.RecordingChannelType&gt; * Nullable&lt;Azure.Communication.CallingServer.RecordingFormatType&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.CallingServer.StartCallRecordingResponse&gt;&#xA;override this.StartRecording : Azure.Communication.CallingServer.CallLocator * Uri * Nullable&lt;Azure.Communication.CallingServer.RecordingContentType&gt; * Nullable&lt;Azure.Communication.CallingServer.RecordingChannelType&gt; * Nullable&lt;Azure.Communication.CallingServer.RecordingFormatType&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.CallingServer.StartCallRecordingResponse&gt;" Usage="callingServerClient.StartRecording (callLocator, recordingStateCallbackUri, content, channel, format, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.CallingServer.StartCallRecordingResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callLocator" Type="Azure.Communication.CallingServer.CallLocator" />
        <Parameter Name="recordingStateCallbackUri" Type="System.Uri" />
        <Parameter Name="content" Type="System.Nullable&lt;Azure.Communication.CallingServer.RecordingContentType&gt;" />
        <Parameter Name="channel" Type="System.Nullable&lt;Azure.Communication.CallingServer.RecordingChannelType&gt;" />
        <Parameter Name="format" Type="System.Nullable&lt;Azure.Communication.CallingServer.RecordingFormatType&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="callLocator"> The callLocator. </param>
        <param name="recordingStateCallbackUri">The uri to send state change callbacks.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <param name="content">content for recording.</param>
        <param name="channel">channel for recording.</param>
        <param name="format">format for recording.</param>
        <summary>
            Start recording of the call.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartRecordingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallingServer.StartCallRecordingResponse&gt;&gt; StartRecordingAsync (Azure.Communication.CallingServer.CallLocator callLocator, Uri recordingStateCallbackUri, Azure.Communication.CallingServer.RecordingContentType? content = default, Azure.Communication.CallingServer.RecordingChannelType? channel = default, Azure.Communication.CallingServer.RecordingFormatType? format = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.CallingServer.StartCallRecordingResponse&gt;&gt; StartRecordingAsync(class Azure.Communication.CallingServer.CallLocator callLocator, class System.Uri recordingStateCallbackUri, valuetype System.Nullable`1&lt;valuetype Azure.Communication.CallingServer.RecordingContentType&gt; content, valuetype System.Nullable`1&lt;valuetype Azure.Communication.CallingServer.RecordingChannelType&gt; channel, valuetype System.Nullable`1&lt;valuetype Azure.Communication.CallingServer.RecordingFormatType&gt; format, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerClient.StartRecordingAsync(Azure.Communication.CallingServer.CallLocator,System.Uri,System.Nullable{Azure.Communication.CallingServer.RecordingContentType},System.Nullable{Azure.Communication.CallingServer.RecordingChannelType},System.Nullable{Azure.Communication.CallingServer.RecordingFormatType},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartRecordingAsync (callLocator As CallLocator, recordingStateCallbackUri As Uri, Optional content As Nullable(Of RecordingContentType) = Nothing, Optional channel As Nullable(Of RecordingChannelType) = Nothing, Optional format As Nullable(Of RecordingFormatType) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of StartCallRecordingResponse))" />
      <MemberSignature Language="F#" Value="abstract member StartRecordingAsync : Azure.Communication.CallingServer.CallLocator * Uri * Nullable&lt;Azure.Communication.CallingServer.RecordingContentType&gt; * Nullable&lt;Azure.Communication.CallingServer.RecordingChannelType&gt; * Nullable&lt;Azure.Communication.CallingServer.RecordingFormatType&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallingServer.StartCallRecordingResponse&gt;&gt;&#xA;override this.StartRecordingAsync : Azure.Communication.CallingServer.CallLocator * Uri * Nullable&lt;Azure.Communication.CallingServer.RecordingContentType&gt; * Nullable&lt;Azure.Communication.CallingServer.RecordingChannelType&gt; * Nullable&lt;Azure.Communication.CallingServer.RecordingFormatType&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallingServer.StartCallRecordingResponse&gt;&gt;" Usage="callingServerClient.StartRecordingAsync (callLocator, recordingStateCallbackUri, content, channel, format, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallingServer.StartCallRecordingResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callLocator" Type="Azure.Communication.CallingServer.CallLocator" />
        <Parameter Name="recordingStateCallbackUri" Type="System.Uri" />
        <Parameter Name="content" Type="System.Nullable&lt;Azure.Communication.CallingServer.RecordingContentType&gt;" />
        <Parameter Name="channel" Type="System.Nullable&lt;Azure.Communication.CallingServer.RecordingChannelType&gt;" />
        <Parameter Name="format" Type="System.Nullable&lt;Azure.Communication.CallingServer.RecordingFormatType&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="callLocator"> The callLocator. </param>
        <param name="recordingStateCallbackUri">The uri to send state change callbacks.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <param name="content">content for recording.</param>
        <param name="channel">channel for recording.</param>
        <param name="format">format for recording.</param>
        <summary>
            Start recording of the call.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopRecording">
      <MemberSignature Language="C#" Value="public virtual Azure.Response StopRecording (string recordingId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response StopRecording(string recordingId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerClient.StopRecording(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StopRecording (recordingId As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member StopRecording : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.StopRecording : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="callingServerClient.StopRecording (recordingId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recordingId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="recordingId">The recording id to stop.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Stop recording of the call.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopRecordingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; StopRecordingAsync (string recordingId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; StopRecordingAsync(string recordingId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerClient.StopRecordingAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StopRecordingAsync (recordingId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member StopRecordingAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.StopRecordingAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="callingServerClient.StopRecordingAsync (recordingId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recordingId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="recordingId">The recording id to stop.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Stop recording of the call.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
