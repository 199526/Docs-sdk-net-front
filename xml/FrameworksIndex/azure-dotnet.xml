<?xml version="1.0" encoding="utf-8"?>
<Framework Name="azure-dotnet">
  <Assemblies>
    <Assembly Name="Azure.Core" Version="1.8.1.0" />
    <Assembly Name="Azure.Identity" Version="1.4.0.0" />
    <Assembly Name="Azure.Security.KeyVault.Certificates" Version="4.2.0.0" />
    <Assembly Name="Azure.Security.KeyVault.Keys" Version="4.2.0.0" />
    <Assembly Name="Azure.Security.KeyVault.Secrets" Version="4.2.0.0" />
    <Assembly Name="Azure.Storage.Blobs.Batch" Version="12.5.0.0" />
    <Assembly Name="Azure.Storage.Blobs" Version="12.8.0.0" />
    <Assembly Name="Azure.Storage.Common" Version="12.7.0.0" />
    <Assembly Name="Azure.Storage.Files.DataLake" Version="12.6.0.0" />
    <Assembly Name="Azure.Storage.Files.Shares" Version="12.6.0.0" />
    <Assembly Name="Azure.Storage.Queues" Version="12.6.0.0" />
    <Assembly Name="Microsoft.Azure.Batch.FileStaging" Version="8.0.0.0" />
    <Assembly Name="Microsoft.Azure.Devices.Client" Version="1.34.0.0" />
  </Assemblies>
  <Namespace Name="Azure">
    <Type Name="Azure.AsyncPageable`1" Id="T:Azure.AsyncPageable`1">
      <Member Id="M:Azure.AsyncPageable`1.#ctor" />
      <Member Id="M:Azure.AsyncPageable`1.#ctor(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.AsyncPageable`1.AsPages(System.String,System.Nullable{System.Int32})" />
      <Member Id="M:Azure.AsyncPageable`1.Equals(System.Object)" />
      <Member Id="M:Azure.AsyncPageable`1.FromPages(System.Collections.Generic.IEnumerable{Azure.Page{`0}})" />
      <Member Id="M:Azure.AsyncPageable`1.GetAsyncEnumerator(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.AsyncPageable`1.GetHashCode" />
      <Member Id="M:Azure.AsyncPageable`1.ToString" />
      <Member Id="P:Azure.AsyncPageable`1.CancellationToken" />
    </Type>
    <Type Name="Azure.AzureKeyCredential" Id="T:Azure.AzureKeyCredential">
      <Member Id="M:Azure.AzureKeyCredential.#ctor(System.String)" />
      <Member Id="M:Azure.AzureKeyCredential.Update(System.String)" />
      <Member Id="P:Azure.AzureKeyCredential.Key" />
    </Type>
    <Type Name="Azure.AzureSasCredential" Id="T:Azure.AzureSasCredential">
      <Member Id="M:Azure.AzureSasCredential.#ctor(System.String)" />
      <Member Id="M:Azure.AzureSasCredential.Update(System.String)" />
      <Member Id="P:Azure.AzureSasCredential.Signature" />
    </Type>
    <Type Name="Azure.ETag" Id="T:Azure.ETag">
      <Member Id="F:Azure.ETag.All" />
      <Member Id="M:Azure.ETag.#ctor(System.String)" />
      <Member Id="M:Azure.ETag.Equals(Azure.ETag)" />
      <Member Id="M:Azure.ETag.Equals(System.Object)" />
      <Member Id="M:Azure.ETag.Equals(System.String)" />
      <Member Id="M:Azure.ETag.GetHashCode" />
      <Member Id="M:Azure.ETag.op_Equality(Azure.ETag,Azure.ETag)" />
      <Member Id="M:Azure.ETag.op_Inequality(Azure.ETag,Azure.ETag)" />
      <Member Id="M:Azure.ETag.ToString" />
      <Member Id="M:Azure.ETag.ToString(System.String)" />
    </Type>
    <Type Name="Azure.HttpRange" Id="T:Azure.HttpRange">
      <Member Id="M:Azure.HttpRange.#ctor(System.Int64,System.Nullable{System.Int64})" />
      <Member Id="M:Azure.HttpRange.Equals(Azure.HttpRange)" />
      <Member Id="M:Azure.HttpRange.Equals(System.Object)" />
      <Member Id="M:Azure.HttpRange.GetHashCode" />
      <Member Id="M:Azure.HttpRange.op_Equality(Azure.HttpRange,Azure.HttpRange)" />
      <Member Id="M:Azure.HttpRange.op_Inequality(Azure.HttpRange,Azure.HttpRange)" />
      <Member Id="M:Azure.HttpRange.ToString" />
      <Member Id="P:Azure.HttpRange.Length" />
      <Member Id="P:Azure.HttpRange.Offset" />
    </Type>
    <Type Name="Azure.JsonPatchDocument" Id="T:Azure.JsonPatchDocument">
      <Member Id="M:Azure.JsonPatchDocument.#ctor" />
      <Member Id="M:Azure.JsonPatchDocument.#ctor(Azure.Core.Serialization.ObjectSerializer)" />
      <Member Id="M:Azure.JsonPatchDocument.#ctor(System.ReadOnlyMemory{System.Byte})" />
      <Member Id="M:Azure.JsonPatchDocument.#ctor(System.ReadOnlyMemory{System.Byte},Azure.Core.Serialization.ObjectSerializer)" />
      <Member Id="M:Azure.JsonPatchDocument.AppendAdd``1(System.String,``0)" />
      <Member Id="M:Azure.JsonPatchDocument.AppendAddRaw(System.String,System.String)" />
      <Member Id="M:Azure.JsonPatchDocument.AppendCopy(System.String,System.String)" />
      <Member Id="M:Azure.JsonPatchDocument.AppendMove(System.String,System.String)" />
      <Member Id="M:Azure.JsonPatchDocument.AppendRemove(System.String)" />
      <Member Id="M:Azure.JsonPatchDocument.AppendReplace``1(System.String,``0)" />
      <Member Id="M:Azure.JsonPatchDocument.AppendReplaceRaw(System.String,System.String)" />
      <Member Id="M:Azure.JsonPatchDocument.AppendTest``1(System.String,``0)" />
      <Member Id="M:Azure.JsonPatchDocument.AppendTestRaw(System.String,System.String)" />
      <Member Id="M:Azure.JsonPatchDocument.ToBytes" />
      <Member Id="M:Azure.JsonPatchDocument.ToString" />
    </Type>
    <Type Name="Azure.MatchConditions" Id="T:Azure.MatchConditions">
      <Member Id="M:Azure.MatchConditions.#ctor" />
      <Member Id="P:Azure.MatchConditions.IfMatch" />
      <Member Id="P:Azure.MatchConditions.IfNoneMatch" />
    </Type>
    <Type Name="Azure.Operation`1" Id="T:Azure.Operation`1">
      <Member Id="M:Azure.Operation`1.#ctor" />
      <Member Id="M:Azure.Operation`1.Equals(System.Object)" />
      <Member Id="M:Azure.Operation`1.GetHashCode" />
      <Member Id="M:Azure.Operation`1.GetRawResponse" />
      <Member Id="M:Azure.Operation`1.ToString" />
      <Member Id="M:Azure.Operation`1.UpdateStatus(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Operation`1.UpdateStatusAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Operation`1.WaitForCompletionAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Operation`1.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="P:Azure.Operation`1.HasCompleted" />
      <Member Id="P:Azure.Operation`1.HasValue" />
      <Member Id="P:Azure.Operation`1.Id" />
      <Member Id="P:Azure.Operation`1.Value" />
    </Type>
    <Type Name="Azure.Page`1" Id="T:Azure.Page`1">
      <Member Id="M:Azure.Page`1.#ctor" />
      <Member Id="M:Azure.Page`1.Equals(System.Object)" />
      <Member Id="M:Azure.Page`1.FromValues(System.Collections.Generic.IReadOnlyList{`0},System.String,Azure.Response)" />
      <Member Id="M:Azure.Page`1.GetHashCode" />
      <Member Id="M:Azure.Page`1.GetRawResponse" />
      <Member Id="M:Azure.Page`1.ToString" />
      <Member Id="P:Azure.Page`1.ContinuationToken" />
      <Member Id="P:Azure.Page`1.Values" />
    </Type>
    <Type Name="Azure.Pageable`1" Id="T:Azure.Pageable`1">
      <Member Id="M:Azure.Pageable`1.#ctor" />
      <Member Id="M:Azure.Pageable`1.#ctor(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Pageable`1.AsPages(System.String,System.Nullable{System.Int32})" />
      <Member Id="M:Azure.Pageable`1.Equals(System.Object)" />
      <Member Id="M:Azure.Pageable`1.FromPages(System.Collections.Generic.IEnumerable{Azure.Page{`0}})" />
      <Member Id="M:Azure.Pageable`1.GetEnumerator" />
      <Member Id="M:Azure.Pageable`1.GetHashCode" />
      <Member Id="M:Azure.Pageable`1.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="M:Azure.Pageable`1.ToString" />
      <Member Id="P:Azure.Pageable`1.CancellationToken" />
    </Type>
    <Type Name="Azure.RequestConditions" Id="T:Azure.RequestConditions">
      <Member Id="M:Azure.RequestConditions.#ctor" />
      <Member Id="P:Azure.RequestConditions.IfModifiedSince" />
      <Member Id="P:Azure.RequestConditions.IfUnmodifiedSince" />
    </Type>
    <Type Name="Azure.RequestFailedException" Id="T:Azure.RequestFailedException">
      <Member Id="M:Azure.RequestFailedException.#ctor(System.Int32,System.String)" />
      <Member Id="M:Azure.RequestFailedException.#ctor(System.Int32,System.String,System.Exception)" />
      <Member Id="M:Azure.RequestFailedException.#ctor(System.Int32,System.String,System.String,System.Exception)" />
      <Member Id="M:Azure.RequestFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:Azure.RequestFailedException.#ctor(System.String)" />
      <Member Id="M:Azure.RequestFailedException.#ctor(System.String,System.Exception)" />
      <Member Id="M:Azure.RequestFailedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="P:Azure.RequestFailedException.ErrorCode" />
      <Member Id="P:Azure.RequestFailedException.Status" />
    </Type>
    <Type Name="Azure.Response" Id="T:Azure.Response">
      <Member Id="M:Azure.Response.#ctor" />
      <Member Id="M:Azure.Response.ContainsHeader(System.String)" />
      <Member Id="M:Azure.Response.Dispose" />
      <Member Id="M:Azure.Response.EnumerateHeaders" />
      <Member Id="M:Azure.Response.FromValue``1(``0,Azure.Response)" />
      <Member Id="M:Azure.Response.ToString" />
      <Member Id="M:Azure.Response.TryGetHeader(System.String,System.String@)" />
      <Member Id="M:Azure.Response.TryGetHeaderValues(System.String,System.Collections.Generic.IEnumerable{System.String}@)" />
      <Member Id="P:Azure.Response.ClientRequestId" />
      <Member Id="P:Azure.Response.ContentStream" />
      <Member Id="P:Azure.Response.Headers" />
      <Member Id="P:Azure.Response.ReasonPhrase" />
      <Member Id="P:Azure.Response.Status" />
    </Type>
    <Type Name="Azure.Response`1" Id="T:Azure.Response`1">
      <Member Id="M:Azure.Response`1.#ctor" />
      <Member Id="M:Azure.Response`1.Equals(System.Object)" />
      <Member Id="M:Azure.Response`1.GetHashCode" />
      <Member Id="M:Azure.Response`1.GetRawResponse" />
      <Member Id="M:Azure.Response`1.op_Implicit(Azure.Response{`0})~`0" />
      <Member Id="M:Azure.Response`1.ToString" />
      <Member Id="P:Azure.Response`1.Value" />
    </Type>
  </Namespace>
  <Namespace Name="Azure.Core">
    <Type Name="Azure.Core.AccessToken" Id="T:Azure.Core.AccessToken">
      <Member Id="M:Azure.Core.AccessToken.#ctor(System.String,System.DateTimeOffset)" />
      <Member Id="M:Azure.Core.AccessToken.Equals(System.Object)" />
      <Member Id="M:Azure.Core.AccessToken.GetHashCode" />
      <Member Id="P:Azure.Core.AccessToken.ExpiresOn" />
      <Member Id="P:Azure.Core.AccessToken.Token" />
    </Type>
    <Type Name="Azure.Core.ClientOptions" Id="T:Azure.Core.ClientOptions">
      <Member Id="M:Azure.Core.ClientOptions.#ctor" />
      <Member Id="M:Azure.Core.ClientOptions.AddPolicy(Azure.Core.Pipeline.HttpPipelinePolicy,Azure.Core.HttpPipelinePosition)" />
      <Member Id="M:Azure.Core.ClientOptions.Equals(System.Object)" />
      <Member Id="M:Azure.Core.ClientOptions.GetHashCode" />
      <Member Id="M:Azure.Core.ClientOptions.ToString" />
      <Member Id="P:Azure.Core.ClientOptions.Diagnostics" />
      <Member Id="P:Azure.Core.ClientOptions.Retry" />
      <Member Id="P:Azure.Core.ClientOptions.Transport" />
    </Type>
    <Type Name="Azure.Core.DiagnosticsOptions" Id="T:Azure.Core.DiagnosticsOptions">
      <Member Id="P:Azure.Core.DiagnosticsOptions.ApplicationId" />
      <Member Id="P:Azure.Core.DiagnosticsOptions.DefaultApplicationId" />
      <Member Id="P:Azure.Core.DiagnosticsOptions.IsDistributedTracingEnabled" />
      <Member Id="P:Azure.Core.DiagnosticsOptions.IsLoggingContentEnabled" />
      <Member Id="P:Azure.Core.DiagnosticsOptions.IsLoggingEnabled" />
      <Member Id="P:Azure.Core.DiagnosticsOptions.IsTelemetryEnabled" />
      <Member Id="P:Azure.Core.DiagnosticsOptions.LoggedContentSizeLimit" />
      <Member Id="P:Azure.Core.DiagnosticsOptions.LoggedHeaderNames" />
      <Member Id="P:Azure.Core.DiagnosticsOptions.LoggedQueryParameters" />
    </Type>
    <Type Name="Azure.Core.HttpHeader" Id="T:Azure.Core.HttpHeader">
      <Member Id="M:Azure.Core.HttpHeader.#ctor(System.String,System.String)" />
      <Member Id="M:Azure.Core.HttpHeader.Equals(Azure.Core.HttpHeader)" />
      <Member Id="M:Azure.Core.HttpHeader.Equals(System.Object)" />
      <Member Id="M:Azure.Core.HttpHeader.GetHashCode" />
      <Member Id="M:Azure.Core.HttpHeader.ToString" />
      <Member Id="P:Azure.Core.HttpHeader.Name" />
      <Member Id="P:Azure.Core.HttpHeader.Value" />
    </Type>
    <Type Name="Azure.Core.HttpHeader/Common" Id="T:Azure.Core.HttpHeader.Common">
      <Member Id="F:Azure.Core.HttpHeader.Common.FormUrlEncodedContentType" />
      <Member Id="F:Azure.Core.HttpHeader.Common.JsonAccept" />
      <Member Id="F:Azure.Core.HttpHeader.Common.JsonContentType" />
      <Member Id="F:Azure.Core.HttpHeader.Common.OctetStreamContentType" />
    </Type>
    <Type Name="Azure.Core.HttpHeader/Names" Id="T:Azure.Core.HttpHeader.Names">
      <Member Id="P:Azure.Core.HttpHeader.Names.Accept" />
      <Member Id="P:Azure.Core.HttpHeader.Names.Authorization" />
      <Member Id="P:Azure.Core.HttpHeader.Names.ContentDisposition" />
      <Member Id="P:Azure.Core.HttpHeader.Names.ContentLength" />
      <Member Id="P:Azure.Core.HttpHeader.Names.ContentType" />
      <Member Id="P:Azure.Core.HttpHeader.Names.Date" />
      <Member Id="P:Azure.Core.HttpHeader.Names.ETag" />
      <Member Id="P:Azure.Core.HttpHeader.Names.Host" />
      <Member Id="P:Azure.Core.HttpHeader.Names.IfMatch" />
      <Member Id="P:Azure.Core.HttpHeader.Names.IfModifiedSince" />
      <Member Id="P:Azure.Core.HttpHeader.Names.IfNoneMatch" />
      <Member Id="P:Azure.Core.HttpHeader.Names.IfUnmodifiedSince" />
      <Member Id="P:Azure.Core.HttpHeader.Names.Range" />
      <Member Id="P:Azure.Core.HttpHeader.Names.Referer" />
      <Member Id="P:Azure.Core.HttpHeader.Names.UserAgent" />
      <Member Id="P:Azure.Core.HttpHeader.Names.XMsDate" />
      <Member Id="P:Azure.Core.HttpHeader.Names.XMsRange" />
      <Member Id="P:Azure.Core.HttpHeader.Names.XMsRequestId" />
    </Type>
    <Type Name="Azure.Core.HttpMessage" Id="T:Azure.Core.HttpMessage">
      <Member Id="M:Azure.Core.HttpMessage.#ctor(Azure.Core.Request,Azure.Core.ResponseClassifier)" />
      <Member Id="M:Azure.Core.HttpMessage.Dispose" />
      <Member Id="M:Azure.Core.HttpMessage.ExtractResponseContent" />
      <Member Id="M:Azure.Core.HttpMessage.SetProperty(System.String,System.Object)" />
      <Member Id="M:Azure.Core.HttpMessage.TryGetProperty(System.String,System.Object@)" />
      <Member Id="P:Azure.Core.HttpMessage.BufferResponse" />
      <Member Id="P:Azure.Core.HttpMessage.CancellationToken" />
      <Member Id="P:Azure.Core.HttpMessage.HasResponse" />
      <Member Id="P:Azure.Core.HttpMessage.Request" />
      <Member Id="P:Azure.Core.HttpMessage.Response" />
      <Member Id="P:Azure.Core.HttpMessage.ResponseClassifier" />
    </Type>
    <Type Name="Azure.Core.HttpPipelinePosition" Id="T:Azure.Core.HttpPipelinePosition">
      <Member Id="F:Azure.Core.HttpPipelinePosition.PerCall" />
      <Member Id="F:Azure.Core.HttpPipelinePosition.PerRetry" />
    </Type>
    <Type Name="Azure.Core.Request" Id="T:Azure.Core.Request">
      <Member Id="M:Azure.Core.Request.#ctor" />
      <Member Id="M:Azure.Core.Request.AddHeader(System.String,System.String)" />
      <Member Id="M:Azure.Core.Request.ContainsHeader(System.String)" />
      <Member Id="M:Azure.Core.Request.Dispose" />
      <Member Id="M:Azure.Core.Request.EnumerateHeaders" />
      <Member Id="M:Azure.Core.Request.RemoveHeader(System.String)" />
      <Member Id="M:Azure.Core.Request.SetHeader(System.String,System.String)" />
      <Member Id="M:Azure.Core.Request.TryGetHeader(System.String,System.String@)" />
      <Member Id="M:Azure.Core.Request.TryGetHeaderValues(System.String,System.Collections.Generic.IEnumerable{System.String}@)" />
      <Member Id="P:Azure.Core.Request.ClientRequestId" />
      <Member Id="P:Azure.Core.Request.Content" />
      <Member Id="P:Azure.Core.Request.Headers" />
      <Member Id="P:Azure.Core.Request.Method" />
      <Member Id="P:Azure.Core.Request.Uri" />
    </Type>
    <Type Name="Azure.Core.RequestContent" Id="T:Azure.Core.RequestContent">
      <Member Id="M:Azure.Core.RequestContent.#ctor" />
      <Member Id="M:Azure.Core.RequestContent.Create(System.Buffers.ReadOnlySequence{System.Byte})" />
      <Member Id="M:Azure.Core.RequestContent.Create(System.Byte[])" />
      <Member Id="M:Azure.Core.RequestContent.Create(System.Byte[],System.Int32,System.Int32)" />
      <Member Id="M:Azure.Core.RequestContent.Create(System.IO.Stream)" />
      <Member Id="M:Azure.Core.RequestContent.Create(System.ReadOnlyMemory{System.Byte})" />
      <Member Id="M:Azure.Core.RequestContent.Dispose" />
      <Member Id="M:Azure.Core.RequestContent.TryComputeLength(System.Int64@)" />
      <Member Id="M:Azure.Core.RequestContent.WriteTo(System.IO.Stream,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Core.RequestContent.WriteToAsync(System.IO.Stream,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Azure.Core.RequestHeaders" Id="T:Azure.Core.RequestHeaders">
      <Member Id="M:Azure.Core.RequestHeaders.Add(Azure.Core.HttpHeader)" />
      <Member Id="M:Azure.Core.RequestHeaders.Add(System.String,System.String)" />
      <Member Id="M:Azure.Core.RequestHeaders.Contains(System.String)" />
      <Member Id="M:Azure.Core.RequestHeaders.GetEnumerator" />
      <Member Id="M:Azure.Core.RequestHeaders.Remove(System.String)" />
      <Member Id="M:Azure.Core.RequestHeaders.SetValue(System.String,System.String)" />
      <Member Id="M:Azure.Core.RequestHeaders.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="M:Azure.Core.RequestHeaders.TryGetValue(System.String,System.String@)" />
      <Member Id="M:Azure.Core.RequestHeaders.TryGetValues(System.String,System.Collections.Generic.IEnumerable{System.String}@)" />
    </Type>
    <Type Name="Azure.Core.RequestMethod" Id="T:Azure.Core.RequestMethod">
      <Member Id="M:Azure.Core.RequestMethod.#ctor(System.String)" />
      <Member Id="M:Azure.Core.RequestMethod.Equals(Azure.Core.RequestMethod)" />
      <Member Id="M:Azure.Core.RequestMethod.Equals(System.Object)" />
      <Member Id="M:Azure.Core.RequestMethod.GetHashCode" />
      <Member Id="M:Azure.Core.RequestMethod.op_Equality(Azure.Core.RequestMethod,Azure.Core.RequestMethod)" />
      <Member Id="M:Azure.Core.RequestMethod.op_Inequality(Azure.Core.RequestMethod,Azure.Core.RequestMethod)" />
      <Member Id="M:Azure.Core.RequestMethod.Parse(System.String)" />
      <Member Id="M:Azure.Core.RequestMethod.ToString" />
      <Member Id="P:Azure.Core.RequestMethod.Delete" />
      <Member Id="P:Azure.Core.RequestMethod.Get" />
      <Member Id="P:Azure.Core.RequestMethod.Head" />
      <Member Id="P:Azure.Core.RequestMethod.Method" />
      <Member Id="P:Azure.Core.RequestMethod.Options" />
      <Member Id="P:Azure.Core.RequestMethod.Patch" />
      <Member Id="P:Azure.Core.RequestMethod.Post" />
      <Member Id="P:Azure.Core.RequestMethod.Put" />
      <Member Id="P:Azure.Core.RequestMethod.Trace" />
    </Type>
    <Type Name="Azure.Core.RequestUriBuilder" Id="T:Azure.Core.RequestUriBuilder">
      <Member Id="M:Azure.Core.RequestUriBuilder.#ctor" />
      <Member Id="M:Azure.Core.RequestUriBuilder.AppendPath(System.String)" />
      <Member Id="M:Azure.Core.RequestUriBuilder.AppendPath(System.String,System.Boolean)" />
      <Member Id="M:Azure.Core.RequestUriBuilder.AppendQuery(System.String,System.String)" />
      <Member Id="M:Azure.Core.RequestUriBuilder.AppendQuery(System.String,System.String,System.Boolean)" />
      <Member Id="M:Azure.Core.RequestUriBuilder.Reset(System.Uri)" />
      <Member Id="M:Azure.Core.RequestUriBuilder.ToString" />
      <Member Id="M:Azure.Core.RequestUriBuilder.ToUri" />
      <Member Id="P:Azure.Core.RequestUriBuilder.Host" />
      <Member Id="P:Azure.Core.RequestUriBuilder.Path" />
      <Member Id="P:Azure.Core.RequestUriBuilder.PathAndQuery" />
      <Member Id="P:Azure.Core.RequestUriBuilder.Port" />
      <Member Id="P:Azure.Core.RequestUriBuilder.Query" />
      <Member Id="P:Azure.Core.RequestUriBuilder.Scheme" />
    </Type>
    <Type Name="Azure.Core.ResponseClassifier" Id="T:Azure.Core.ResponseClassifier">
      <Member Id="M:Azure.Core.ResponseClassifier.#ctor" />
      <Member Id="M:Azure.Core.ResponseClassifier.IsErrorResponse(Azure.Core.HttpMessage)" />
      <Member Id="M:Azure.Core.ResponseClassifier.IsRetriable(Azure.Core.HttpMessage,System.Exception)" />
      <Member Id="M:Azure.Core.ResponseClassifier.IsRetriableException(System.Exception)" />
      <Member Id="M:Azure.Core.ResponseClassifier.IsRetriableResponse(Azure.Core.HttpMessage)" />
    </Type>
    <Type Name="Azure.Core.ResponseHeaders" Id="T:Azure.Core.ResponseHeaders">
      <Member Id="M:Azure.Core.ResponseHeaders.Contains(System.String)" />
      <Member Id="M:Azure.Core.ResponseHeaders.GetEnumerator" />
      <Member Id="M:Azure.Core.ResponseHeaders.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="M:Azure.Core.ResponseHeaders.TryGetValue(System.String,System.String@)" />
      <Member Id="M:Azure.Core.ResponseHeaders.TryGetValues(System.String,System.Collections.Generic.IEnumerable{System.String}@)" />
      <Member Id="P:Azure.Core.ResponseHeaders.ContentLength" />
      <Member Id="P:Azure.Core.ResponseHeaders.ContentType" />
      <Member Id="P:Azure.Core.ResponseHeaders.Date" />
      <Member Id="P:Azure.Core.ResponseHeaders.ETag" />
      <Member Id="P:Azure.Core.ResponseHeaders.RequestId" />
    </Type>
    <Type Name="Azure.Core.RetryMode" Id="T:Azure.Core.RetryMode">
      <Member Id="F:Azure.Core.RetryMode.Exponential" />
      <Member Id="F:Azure.Core.RetryMode.Fixed" />
    </Type>
    <Type Name="Azure.Core.RetryOptions" Id="T:Azure.Core.RetryOptions">
      <Member Id="P:Azure.Core.RetryOptions.Delay" />
      <Member Id="P:Azure.Core.RetryOptions.MaxDelay" />
      <Member Id="P:Azure.Core.RetryOptions.MaxRetries" />
      <Member Id="P:Azure.Core.RetryOptions.Mode" />
      <Member Id="P:Azure.Core.RetryOptions.NetworkTimeout" />
    </Type>
    <Type Name="Azure.Core.TokenCredential" Id="T:Azure.Core.TokenCredential">
      <Member Id="M:Azure.Core.TokenCredential.#ctor" />
      <Member Id="M:Azure.Core.TokenCredential.GetToken(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Core.TokenCredential.GetTokenAsync(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Azure.Core.TokenRequestContext" Id="T:Azure.Core.TokenRequestContext">
      <Member Id="M:Azure.Core.TokenRequestContext.#ctor(System.String[],System.String)" />
      <Member Id="P:Azure.Core.TokenRequestContext.ParentRequestId" />
      <Member Id="P:Azure.Core.TokenRequestContext.Scopes" />
    </Type>
  </Namespace>
  <Namespace Name="Azure.Core.Cryptography">
    <Type Name="Azure.Core.Cryptography.IKeyEncryptionKey" Id="T:Azure.Core.Cryptography.IKeyEncryptionKey">
      <Member Id="M:Azure.Core.Cryptography.IKeyEncryptionKey.UnwrapKey(System.String,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Core.Cryptography.IKeyEncryptionKey.UnwrapKeyAsync(System.String,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Core.Cryptography.IKeyEncryptionKey.WrapKey(System.String,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Core.Cryptography.IKeyEncryptionKey.WrapKeyAsync(System.String,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)" />
      <Member Id="P:Azure.Core.Cryptography.IKeyEncryptionKey.KeyId" />
    </Type>
    <Type Name="Azure.Core.Cryptography.IKeyEncryptionKeyResolver" Id="T:Azure.Core.Cryptography.IKeyEncryptionKeyResolver">
      <Member Id="M:Azure.Core.Cryptography.IKeyEncryptionKeyResolver.Resolve(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Core.Cryptography.IKeyEncryptionKeyResolver.ResolveAsync(System.String,System.Threading.CancellationToken)" />
    </Type>
  </Namespace>
  <Namespace Name="Azure.Core.Diagnostics">
    <Type Name="Azure.Core.Diagnostics.AzureEventSourceListener" Id="T:Azure.Core.Diagnostics.AzureEventSourceListener">
      <Member Id="F:Azure.Core.Diagnostics.AzureEventSourceListener.TraitName" />
      <Member Id="F:Azure.Core.Diagnostics.AzureEventSourceListener.TraitValue" />
      <Member Id="M:Azure.Core.Diagnostics.AzureEventSourceListener.#ctor(System.Action{System.Diagnostics.Tracing.EventWrittenEventArgs,System.String},System.Diagnostics.Tracing.EventLevel)" />
      <Member Id="M:Azure.Core.Diagnostics.AzureEventSourceListener.CreateConsoleLogger(System.Diagnostics.Tracing.EventLevel)" />
      <Member Id="M:Azure.Core.Diagnostics.AzureEventSourceListener.CreateTraceLogger(System.Diagnostics.Tracing.EventLevel)" />
      <Member Id="M:Azure.Core.Diagnostics.AzureEventSourceListener.OnEventSourceCreated(System.Diagnostics.Tracing.EventSource)" />
      <Member Id="M:Azure.Core.Diagnostics.AzureEventSourceListener.OnEventWritten(System.Diagnostics.Tracing.EventWrittenEventArgs)" />
    </Type>
  </Namespace>
  <Namespace Name="Azure.Core.Extensions">
    <Type Name="Azure.Core.Extensions.IAzureClientBuilder`2" Id="T:Azure.Core.Extensions.IAzureClientBuilder`2" />
    <Type Name="Azure.Core.Extensions.IAzureClientFactoryBuilder" Id="T:Azure.Core.Extensions.IAzureClientFactoryBuilder">
      <Member Id="M:Azure.Core.Extensions.IAzureClientFactoryBuilder.RegisterClientFactory``2(System.Func{``1,``0})" />
    </Type>
    <Type Name="Azure.Core.Extensions.IAzureClientFactoryBuilderWithConfiguration`1" Id="T:Azure.Core.Extensions.IAzureClientFactoryBuilderWithConfiguration`1">
      <Member Id="M:Azure.Core.Extensions.IAzureClientFactoryBuilderWithConfiguration`1.RegisterClientFactory``2(`0)" />
    </Type>
    <Type Name="Azure.Core.Extensions.IAzureClientFactoryBuilderWithCredential" Id="T:Azure.Core.Extensions.IAzureClientFactoryBuilderWithCredential">
      <Member Id="M:Azure.Core.Extensions.IAzureClientFactoryBuilderWithCredential.RegisterClientFactory``2(System.Func{``1,Azure.Core.TokenCredential,``0},System.Boolean)" />
    </Type>
  </Namespace>
  <Namespace Name="Azure.Core.Pipeline">
    <Type Name="Azure.Core.Pipeline.BearerTokenAuthenticationPolicy" Id="T:Azure.Core.Pipeline.BearerTokenAuthenticationPolicy">
      <Member Id="M:Azure.Core.Pipeline.BearerTokenAuthenticationPolicy.#ctor(Azure.Core.TokenCredential,System.Collections.Generic.IEnumerable{System.String})" />
      <Member Id="M:Azure.Core.Pipeline.BearerTokenAuthenticationPolicy.#ctor(Azure.Core.TokenCredential,System.String)" />
      <Member Id="M:Azure.Core.Pipeline.BearerTokenAuthenticationPolicy.Process(Azure.Core.HttpMessage,System.ReadOnlyMemory{Azure.Core.Pipeline.HttpPipelinePolicy})" />
      <Member Id="M:Azure.Core.Pipeline.BearerTokenAuthenticationPolicy.ProcessAsync(Azure.Core.HttpMessage,System.ReadOnlyMemory{Azure.Core.Pipeline.HttpPipelinePolicy})" />
    </Type>
    <Type Name="Azure.Core.Pipeline.HttpClientTransport" Id="T:Azure.Core.Pipeline.HttpClientTransport">
      <Member Id="F:Azure.Core.Pipeline.HttpClientTransport.Shared" />
      <Member Id="M:Azure.Core.Pipeline.HttpClientTransport.#ctor" />
      <Member Id="M:Azure.Core.Pipeline.HttpClientTransport.#ctor(System.Net.Http.HttpClient)" />
      <Member Id="M:Azure.Core.Pipeline.HttpClientTransport.#ctor(System.Net.Http.HttpMessageHandler)" />
      <Member Id="M:Azure.Core.Pipeline.HttpClientTransport.CreateRequest" />
      <Member Id="M:Azure.Core.Pipeline.HttpClientTransport.Process(Azure.Core.HttpMessage)" />
      <Member Id="M:Azure.Core.Pipeline.HttpClientTransport.ProcessAsync(Azure.Core.HttpMessage)" />
    </Type>
    <Type Name="Azure.Core.Pipeline.HttpPipeline" Id="T:Azure.Core.Pipeline.HttpPipeline">
      <Member Id="M:Azure.Core.Pipeline.HttpPipeline.#ctor(Azure.Core.Pipeline.HttpPipelineTransport,Azure.Core.Pipeline.HttpPipelinePolicy[],Azure.Core.ResponseClassifier)" />
      <Member Id="M:Azure.Core.Pipeline.HttpPipeline.CreateClientRequestIdScope(System.String)" />
      <Member Id="M:Azure.Core.Pipeline.HttpPipeline.CreateMessage" />
      <Member Id="M:Azure.Core.Pipeline.HttpPipeline.CreateRequest" />
      <Member Id="M:Azure.Core.Pipeline.HttpPipeline.Send(Azure.Core.HttpMessage,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Core.Pipeline.HttpPipeline.SendAsync(Azure.Core.HttpMessage,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Core.Pipeline.HttpPipeline.SendRequest(Azure.Core.Request,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Core.Pipeline.HttpPipeline.SendRequestAsync(Azure.Core.Request,System.Threading.CancellationToken)" />
      <Member Id="P:Azure.Core.Pipeline.HttpPipeline.ResponseClassifier" />
    </Type>
    <Type Name="Azure.Core.Pipeline.HttpPipelineBuilder" Id="T:Azure.Core.Pipeline.HttpPipelineBuilder">
      <Member Id="M:Azure.Core.Pipeline.HttpPipelineBuilder.Build(Azure.Core.ClientOptions,Azure.Core.Pipeline.HttpPipelinePolicy[])" />
      <Member Id="M:Azure.Core.Pipeline.HttpPipelineBuilder.Build(Azure.Core.ClientOptions,Azure.Core.Pipeline.HttpPipelinePolicy[],Azure.Core.Pipeline.HttpPipelinePolicy[],Azure.Core.ResponseClassifier)" />
    </Type>
    <Type Name="Azure.Core.Pipeline.HttpPipelinePolicy" Id="T:Azure.Core.Pipeline.HttpPipelinePolicy">
      <Member Id="M:Azure.Core.Pipeline.HttpPipelinePolicy.#ctor" />
      <Member Id="M:Azure.Core.Pipeline.HttpPipelinePolicy.Process(Azure.Core.HttpMessage,System.ReadOnlyMemory{Azure.Core.Pipeline.HttpPipelinePolicy})" />
      <Member Id="M:Azure.Core.Pipeline.HttpPipelinePolicy.ProcessAsync(Azure.Core.HttpMessage,System.ReadOnlyMemory{Azure.Core.Pipeline.HttpPipelinePolicy})" />
      <Member Id="M:Azure.Core.Pipeline.HttpPipelinePolicy.ProcessNext(Azure.Core.HttpMessage,System.ReadOnlyMemory{Azure.Core.Pipeline.HttpPipelinePolicy})" />
      <Member Id="M:Azure.Core.Pipeline.HttpPipelinePolicy.ProcessNextAsync(Azure.Core.HttpMessage,System.ReadOnlyMemory{Azure.Core.Pipeline.HttpPipelinePolicy})" />
    </Type>
    <Type Name="Azure.Core.Pipeline.HttpPipelineSynchronousPolicy" Id="T:Azure.Core.Pipeline.HttpPipelineSynchronousPolicy">
      <Member Id="M:Azure.Core.Pipeline.HttpPipelineSynchronousPolicy.#ctor" />
      <Member Id="M:Azure.Core.Pipeline.HttpPipelineSynchronousPolicy.OnReceivedResponse(Azure.Core.HttpMessage)" />
      <Member Id="M:Azure.Core.Pipeline.HttpPipelineSynchronousPolicy.OnSendingRequest(Azure.Core.HttpMessage)" />
      <Member Id="M:Azure.Core.Pipeline.HttpPipelineSynchronousPolicy.Process(Azure.Core.HttpMessage,System.ReadOnlyMemory{Azure.Core.Pipeline.HttpPipelinePolicy})" />
      <Member Id="M:Azure.Core.Pipeline.HttpPipelineSynchronousPolicy.ProcessAsync(Azure.Core.HttpMessage,System.ReadOnlyMemory{Azure.Core.Pipeline.HttpPipelinePolicy})" />
    </Type>
    <Type Name="Azure.Core.Pipeline.HttpPipelineTransport" Id="T:Azure.Core.Pipeline.HttpPipelineTransport">
      <Member Id="M:Azure.Core.Pipeline.HttpPipelineTransport.#ctor" />
      <Member Id="M:Azure.Core.Pipeline.HttpPipelineTransport.CreateRequest" />
      <Member Id="M:Azure.Core.Pipeline.HttpPipelineTransport.Process(Azure.Core.HttpMessage)" />
      <Member Id="M:Azure.Core.Pipeline.HttpPipelineTransport.ProcessAsync(Azure.Core.HttpMessage)" />
    </Type>
  </Namespace>
  <Namespace Name="Azure.Core.Serialization">
    <Type Name="Azure.Core.Serialization.IMemberNameConverter" Id="T:Azure.Core.Serialization.IMemberNameConverter">
      <Member Id="M:Azure.Core.Serialization.IMemberNameConverter.ConvertMemberName(System.Reflection.MemberInfo)" />
    </Type>
    <Type Name="Azure.Core.Serialization.JsonObjectSerializer" Id="T:Azure.Core.Serialization.JsonObjectSerializer">
      <Member Id="M:Azure.Core.Serialization.JsonObjectSerializer.#ctor" />
      <Member Id="M:Azure.Core.Serialization.JsonObjectSerializer.#ctor(System.Text.Json.JsonSerializerOptions)" />
      <Member Id="M:Azure.Core.Serialization.JsonObjectSerializer.Azure#Core#Serialization#IMemberNameConverter#ConvertMemberName(System.Reflection.MemberInfo)" />
      <Member Id="M:Azure.Core.Serialization.JsonObjectSerializer.Deserialize(System.IO.Stream,System.Type,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Core.Serialization.JsonObjectSerializer.DeserializeAsync(System.IO.Stream,System.Type,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Core.Serialization.JsonObjectSerializer.Serialize(System.IO.Stream,System.Object,System.Type,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Core.Serialization.JsonObjectSerializer.SerializeAsync(System.IO.Stream,System.Object,System.Type,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Azure.Core.Serialization.ObjectSerializer" Id="T:Azure.Core.Serialization.ObjectSerializer">
      <Member Id="M:Azure.Core.Serialization.ObjectSerializer.#ctor" />
      <Member Id="M:Azure.Core.Serialization.ObjectSerializer.Deserialize(System.IO.Stream,System.Type,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Core.Serialization.ObjectSerializer.DeserializeAsync(System.IO.Stream,System.Type,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Core.Serialization.ObjectSerializer.Serialize(System.IO.Stream,System.Object,System.Type,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Core.Serialization.ObjectSerializer.SerializeAsync(System.IO.Stream,System.Object,System.Type,System.Threading.CancellationToken)" />
    </Type>
  </Namespace>
  <Namespace Name="Azure.Identity">
    <Type Name="Azure.Identity.AuthenticationFailedException" Id="T:Azure.Identity.AuthenticationFailedException">
      <Member Id="M:Azure.Identity.AuthenticationFailedException.#ctor(System.String)" />
      <Member Id="M:Azure.Identity.AuthenticationFailedException.#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="Azure.Identity.AuthenticationRecord" Id="T:Azure.Identity.AuthenticationRecord">
      <Member Id="M:Azure.Identity.AuthenticationRecord.Deserialize(System.IO.Stream,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Identity.AuthenticationRecord.DeserializeAsync(System.IO.Stream,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Identity.AuthenticationRecord.Serialize(System.IO.Stream,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Identity.AuthenticationRecord.SerializeAsync(System.IO.Stream,System.Threading.CancellationToken)" />
      <Member Id="P:Azure.Identity.AuthenticationRecord.Authority" />
      <Member Id="P:Azure.Identity.AuthenticationRecord.ClientId" />
      <Member Id="P:Azure.Identity.AuthenticationRecord.HomeAccountId" />
      <Member Id="P:Azure.Identity.AuthenticationRecord.TenantId" />
      <Member Id="P:Azure.Identity.AuthenticationRecord.Username" />
    </Type>
    <Type Name="Azure.Identity.AuthenticationRequiredException" Id="T:Azure.Identity.AuthenticationRequiredException">
      <Member Id="M:Azure.Identity.AuthenticationRequiredException.#ctor(System.String,Azure.Core.TokenRequestContext)" />
      <Member Id="M:Azure.Identity.AuthenticationRequiredException.#ctor(System.String,Azure.Core.TokenRequestContext,System.Exception)" />
      <Member Id="P:Azure.Identity.AuthenticationRequiredException.TokenRequestContext" />
    </Type>
    <Type Name="Azure.Identity.AuthorizationCodeCredential" Id="T:Azure.Identity.AuthorizationCodeCredential">
      <Member Id="M:Azure.Identity.AuthorizationCodeCredential.#ctor" />
      <Member Id="M:Azure.Identity.AuthorizationCodeCredential.#ctor(System.String,System.String,System.String,System.String)" />
      <Member Id="M:Azure.Identity.AuthorizationCodeCredential.#ctor(System.String,System.String,System.String,System.String,Azure.Identity.TokenCredentialOptions)" />
      <Member Id="M:Azure.Identity.AuthorizationCodeCredential.GetToken(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Identity.AuthorizationCodeCredential.GetTokenAsync(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Azure.Identity.AzureAuthorityHosts" Id="T:Azure.Identity.AzureAuthorityHosts">
      <Member Id="P:Azure.Identity.AzureAuthorityHosts.AzureChina" />
      <Member Id="P:Azure.Identity.AzureAuthorityHosts.AzureGermany" />
      <Member Id="P:Azure.Identity.AzureAuthorityHosts.AzureGovernment" />
      <Member Id="P:Azure.Identity.AzureAuthorityHosts.AzurePublicCloud" />
    </Type>
    <Type Name="Azure.Identity.AzureCliCredential" Id="T:Azure.Identity.AzureCliCredential">
      <Member Id="M:Azure.Identity.AzureCliCredential.#ctor" />
      <Member Id="M:Azure.Identity.AzureCliCredential.GetToken(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Identity.AzureCliCredential.GetTokenAsync(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Azure.Identity.ChainedTokenCredential" Id="T:Azure.Identity.ChainedTokenCredential">
      <Member Id="M:Azure.Identity.ChainedTokenCredential.#ctor(Azure.Core.TokenCredential[])" />
      <Member Id="M:Azure.Identity.ChainedTokenCredential.GetToken(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Identity.ChainedTokenCredential.GetTokenAsync(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Azure.Identity.ClientCertificateCredential" Id="T:Azure.Identity.ClientCertificateCredential">
      <Member Id="M:Azure.Identity.ClientCertificateCredential.#ctor" />
      <Member Id="M:Azure.Identity.ClientCertificateCredential.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <Member Id="M:Azure.Identity.ClientCertificateCredential.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509Certificate2,Azure.Identity.ClientCertificateCredentialOptions)" />
      <Member Id="M:Azure.Identity.ClientCertificateCredential.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509Certificate2,Azure.Identity.TokenCredentialOptions)" />
      <Member Id="M:Azure.Identity.ClientCertificateCredential.#ctor(System.String,System.String,System.String)" />
      <Member Id="M:Azure.Identity.ClientCertificateCredential.#ctor(System.String,System.String,System.String,Azure.Identity.ClientCertificateCredentialOptions)" />
      <Member Id="M:Azure.Identity.ClientCertificateCredential.#ctor(System.String,System.String,System.String,Azure.Identity.TokenCredentialOptions)" />
      <Member Id="M:Azure.Identity.ClientCertificateCredential.GetToken(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Identity.ClientCertificateCredential.GetTokenAsync(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Azure.Identity.ClientCertificateCredentialOptions" Id="T:Azure.Identity.ClientCertificateCredentialOptions">
      <Member Id="M:Azure.Identity.ClientCertificateCredentialOptions.#ctor" />
      <Member Id="P:Azure.Identity.ClientCertificateCredentialOptions.SendCertificateChain" />
      <Member Id="P:Azure.Identity.ClientCertificateCredentialOptions.TokenCache" />
    </Type>
    <Type Name="Azure.Identity.ClientSecretCredential" Id="T:Azure.Identity.ClientSecretCredential">
      <Member Id="M:Azure.Identity.ClientSecretCredential.#ctor" />
      <Member Id="M:Azure.Identity.ClientSecretCredential.#ctor(System.String,System.String,System.String)" />
      <Member Id="M:Azure.Identity.ClientSecretCredential.#ctor(System.String,System.String,System.String,Azure.Identity.ClientSecretCredentialOptions)" />
      <Member Id="M:Azure.Identity.ClientSecretCredential.#ctor(System.String,System.String,System.String,Azure.Identity.TokenCredentialOptions)" />
      <Member Id="M:Azure.Identity.ClientSecretCredential.GetToken(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Identity.ClientSecretCredential.GetTokenAsync(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Azure.Identity.ClientSecretCredentialOptions" Id="T:Azure.Identity.ClientSecretCredentialOptions">
      <Member Id="M:Azure.Identity.ClientSecretCredentialOptions.#ctor" />
      <Member Id="P:Azure.Identity.ClientSecretCredentialOptions.TokenCache" />
    </Type>
    <Type Name="Azure.Identity.CredentialUnavailableException" Id="T:Azure.Identity.CredentialUnavailableException">
      <Member Id="M:Azure.Identity.CredentialUnavailableException.#ctor(System.String)" />
      <Member Id="M:Azure.Identity.CredentialUnavailableException.#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="Azure.Identity.DefaultAzureCredential" Id="T:Azure.Identity.DefaultAzureCredential">
      <Member Id="M:Azure.Identity.DefaultAzureCredential.#ctor(Azure.Identity.DefaultAzureCredentialOptions)" />
      <Member Id="M:Azure.Identity.DefaultAzureCredential.#ctor(System.Boolean)" />
      <Member Id="M:Azure.Identity.DefaultAzureCredential.GetToken(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Identity.DefaultAzureCredential.GetTokenAsync(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Azure.Identity.DefaultAzureCredentialOptions" Id="T:Azure.Identity.DefaultAzureCredentialOptions">
      <Member Id="M:Azure.Identity.DefaultAzureCredentialOptions.#ctor" />
      <Member Id="P:Azure.Identity.DefaultAzureCredentialOptions.ExcludeAzureCliCredential" />
      <Member Id="P:Azure.Identity.DefaultAzureCredentialOptions.ExcludeEnvironmentCredential" />
      <Member Id="P:Azure.Identity.DefaultAzureCredentialOptions.ExcludeInteractiveBrowserCredential" />
      <Member Id="P:Azure.Identity.DefaultAzureCredentialOptions.ExcludeManagedIdentityCredential" />
      <Member Id="P:Azure.Identity.DefaultAzureCredentialOptions.ExcludeSharedTokenCacheCredential" />
      <Member Id="P:Azure.Identity.DefaultAzureCredentialOptions.ExcludeVisualStudioCodeCredential" />
      <Member Id="P:Azure.Identity.DefaultAzureCredentialOptions.ExcludeVisualStudioCredential" />
      <Member Id="P:Azure.Identity.DefaultAzureCredentialOptions.InteractiveBrowserTenantId" />
      <Member Id="P:Azure.Identity.DefaultAzureCredentialOptions.ManagedIdentityClientId" />
      <Member Id="P:Azure.Identity.DefaultAzureCredentialOptions.SharedTokenCacheTenantId" />
      <Member Id="P:Azure.Identity.DefaultAzureCredentialOptions.SharedTokenCacheUsername" />
      <Member Id="P:Azure.Identity.DefaultAzureCredentialOptions.VisualStudioCodeTenantId" />
      <Member Id="P:Azure.Identity.DefaultAzureCredentialOptions.VisualStudioTenantId" />
    </Type>
    <Type Name="Azure.Identity.DeviceCodeCredential" Id="T:Azure.Identity.DeviceCodeCredential">
      <Member Id="M:Azure.Identity.DeviceCodeCredential.#ctor" />
      <Member Id="M:Azure.Identity.DeviceCodeCredential.#ctor(Azure.Identity.DeviceCodeCredentialOptions)" />
      <Member Id="M:Azure.Identity.DeviceCodeCredential.#ctor(System.Func{Azure.Identity.DeviceCodeInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task},System.String,Azure.Identity.TokenCredentialOptions)" />
      <Member Id="M:Azure.Identity.DeviceCodeCredential.#ctor(System.Func{Azure.Identity.DeviceCodeInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task},System.String,System.String,Azure.Identity.TokenCredentialOptions)" />
      <Member Id="M:Azure.Identity.DeviceCodeCredential.Authenticate(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Identity.DeviceCodeCredential.Authenticate(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Identity.DeviceCodeCredential.AuthenticateAsync(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Identity.DeviceCodeCredential.AuthenticateAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Identity.DeviceCodeCredential.GetToken(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Identity.DeviceCodeCredential.GetTokenAsync(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Azure.Identity.DeviceCodeCredentialOptions" Id="T:Azure.Identity.DeviceCodeCredentialOptions">
      <Member Id="M:Azure.Identity.DeviceCodeCredentialOptions.#ctor" />
      <Member Id="P:Azure.Identity.DeviceCodeCredentialOptions.AuthenticationRecord" />
      <Member Id="P:Azure.Identity.DeviceCodeCredentialOptions.ClientId" />
      <Member Id="P:Azure.Identity.DeviceCodeCredentialOptions.DeviceCodeCallback" />
      <Member Id="P:Azure.Identity.DeviceCodeCredentialOptions.DisableAutomaticAuthentication" />
      <Member Id="P:Azure.Identity.DeviceCodeCredentialOptions.TenantId" />
      <Member Id="P:Azure.Identity.DeviceCodeCredentialOptions.TokenCache" />
    </Type>
    <Type Name="Azure.Identity.DeviceCodeInfo" Id="T:Azure.Identity.DeviceCodeInfo">
      <Member Id="P:Azure.Identity.DeviceCodeInfo.ClientId" />
      <Member Id="P:Azure.Identity.DeviceCodeInfo.DeviceCode" />
      <Member Id="P:Azure.Identity.DeviceCodeInfo.ExpiresOn" />
      <Member Id="P:Azure.Identity.DeviceCodeInfo.Message" />
      <Member Id="P:Azure.Identity.DeviceCodeInfo.Scopes" />
      <Member Id="P:Azure.Identity.DeviceCodeInfo.UserCode" />
      <Member Id="P:Azure.Identity.DeviceCodeInfo.VerificationUri" />
    </Type>
    <Type Name="Azure.Identity.EnvironmentCredential" Id="T:Azure.Identity.EnvironmentCredential">
      <Member Id="M:Azure.Identity.EnvironmentCredential.#ctor" />
      <Member Id="M:Azure.Identity.EnvironmentCredential.#ctor(Azure.Identity.TokenCredentialOptions)" />
      <Member Id="M:Azure.Identity.EnvironmentCredential.GetToken(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Identity.EnvironmentCredential.GetTokenAsync(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Azure.Identity.IdentityModelFactory" Id="T:Azure.Identity.IdentityModelFactory">
      <Member Id="M:Azure.Identity.IdentityModelFactory.AuthenticationRecord(System.String,System.String,System.String,System.String,System.String)" />
      <Member Id="M:Azure.Identity.IdentityModelFactory.DeviceCodeInfo(System.String,System.String,System.Uri,System.DateTimeOffset,System.String,System.String,System.Collections.Generic.IReadOnlyCollection{System.String})" />
    </Type>
    <Type Name="Azure.Identity.InteractiveBrowserCredential" Id="T:Azure.Identity.InteractiveBrowserCredential">
      <Member Id="M:Azure.Identity.InteractiveBrowserCredential.#ctor" />
      <Member Id="M:Azure.Identity.InteractiveBrowserCredential.#ctor(Azure.Identity.InteractiveBrowserCredentialOptions)" />
      <Member Id="M:Azure.Identity.InteractiveBrowserCredential.#ctor(System.String)" />
      <Member Id="M:Azure.Identity.InteractiveBrowserCredential.#ctor(System.String,System.String,Azure.Identity.TokenCredentialOptions)" />
      <Member Id="M:Azure.Identity.InteractiveBrowserCredential.Authenticate(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Identity.InteractiveBrowserCredential.Authenticate(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Identity.InteractiveBrowserCredential.AuthenticateAsync(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Identity.InteractiveBrowserCredential.AuthenticateAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Identity.InteractiveBrowserCredential.GetToken(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Identity.InteractiveBrowserCredential.GetTokenAsync(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Azure.Identity.InteractiveBrowserCredentialOptions" Id="T:Azure.Identity.InteractiveBrowserCredentialOptions">
      <Member Id="M:Azure.Identity.InteractiveBrowserCredentialOptions.#ctor" />
      <Member Id="P:Azure.Identity.InteractiveBrowserCredentialOptions.AuthenticationRecord" />
      <Member Id="P:Azure.Identity.InteractiveBrowserCredentialOptions.ClientId" />
      <Member Id="P:Azure.Identity.InteractiveBrowserCredentialOptions.DisableAutomaticAuthentication" />
      <Member Id="P:Azure.Identity.InteractiveBrowserCredentialOptions.RedirectUri" />
      <Member Id="P:Azure.Identity.InteractiveBrowserCredentialOptions.TenantId" />
      <Member Id="P:Azure.Identity.InteractiveBrowserCredentialOptions.TokenCache" />
    </Type>
    <Type Name="Azure.Identity.ManagedIdentityCredential" Id="T:Azure.Identity.ManagedIdentityCredential">
      <Member Id="M:Azure.Identity.ManagedIdentityCredential.#ctor" />
      <Member Id="M:Azure.Identity.ManagedIdentityCredential.#ctor(System.String,Azure.Identity.TokenCredentialOptions)" />
      <Member Id="M:Azure.Identity.ManagedIdentityCredential.GetToken(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Identity.ManagedIdentityCredential.GetTokenAsync(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Azure.Identity.PersistentTokenCache" Id="T:Azure.Identity.PersistentTokenCache">
      <Member Id="M:Azure.Identity.PersistentTokenCache.#ctor(Azure.Identity.PersistentTokenCacheOptions)" />
      <Member Id="M:Azure.Identity.PersistentTokenCache.#ctor(System.Boolean)" />
    </Type>
    <Type Name="Azure.Identity.PersistentTokenCacheOptions" Id="T:Azure.Identity.PersistentTokenCacheOptions">
      <Member Id="M:Azure.Identity.PersistentTokenCacheOptions.#ctor" />
      <Member Id="P:Azure.Identity.PersistentTokenCacheOptions.AllowUnencryptedStorage" />
      <Member Id="P:Azure.Identity.PersistentTokenCacheOptions.Name" />
    </Type>
    <Type Name="Azure.Identity.SharedTokenCacheCredential" Id="T:Azure.Identity.SharedTokenCacheCredential">
      <Member Id="M:Azure.Identity.SharedTokenCacheCredential.#ctor" />
      <Member Id="M:Azure.Identity.SharedTokenCacheCredential.#ctor(Azure.Identity.SharedTokenCacheCredentialOptions)" />
      <Member Id="M:Azure.Identity.SharedTokenCacheCredential.#ctor(System.String,Azure.Identity.TokenCredentialOptions)" />
      <Member Id="M:Azure.Identity.SharedTokenCacheCredential.GetToken(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Identity.SharedTokenCacheCredential.GetTokenAsync(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Azure.Identity.SharedTokenCacheCredentialOptions" Id="T:Azure.Identity.SharedTokenCacheCredentialOptions">
      <Member Id="M:Azure.Identity.SharedTokenCacheCredentialOptions.#ctor" />
      <Member Id="M:Azure.Identity.SharedTokenCacheCredentialOptions.#ctor(Azure.Identity.TokenCache)" />
      <Member Id="P:Azure.Identity.SharedTokenCacheCredentialOptions.AuthenticationRecord" />
      <Member Id="P:Azure.Identity.SharedTokenCacheCredentialOptions.ClientId" />
      <Member Id="P:Azure.Identity.SharedTokenCacheCredentialOptions.EnableGuestTenantAuthentication" />
      <Member Id="P:Azure.Identity.SharedTokenCacheCredentialOptions.TenantId" />
      <Member Id="P:Azure.Identity.SharedTokenCacheCredentialOptions.TokenCache" />
      <Member Id="P:Azure.Identity.SharedTokenCacheCredentialOptions.Username" />
    </Type>
    <Type Name="Azure.Identity.TokenCache" Id="T:Azure.Identity.TokenCache">
      <Member Id="E:Azure.Identity.TokenCache.Updated" />
      <Member Id="M:Azure.Identity.TokenCache.#ctor" />
      <Member Id="M:Azure.Identity.TokenCache.Deserialize(System.IO.Stream,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Identity.TokenCache.DeserializeAsync(System.IO.Stream,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Identity.TokenCache.Dispose" />
      <Member Id="M:Azure.Identity.TokenCache.Dispose(System.Boolean)" />
      <Member Id="M:Azure.Identity.TokenCache.Serialize(System.IO.Stream,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Identity.TokenCache.SerializeAsync(System.IO.Stream,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Azure.Identity.TokenCacheUpdatedArgs" Id="T:Azure.Identity.TokenCacheUpdatedArgs">
      <Member Id="P:Azure.Identity.TokenCacheUpdatedArgs.Cache" />
    </Type>
    <Type Name="Azure.Identity.TokenCredentialOptions" Id="T:Azure.Identity.TokenCredentialOptions">
      <Member Id="M:Azure.Identity.TokenCredentialOptions.#ctor" />
      <Member Id="P:Azure.Identity.TokenCredentialOptions.AuthorityHost" />
    </Type>
    <Type Name="Azure.Identity.UsernamePasswordCredential" Id="T:Azure.Identity.UsernamePasswordCredential">
      <Member Id="M:Azure.Identity.UsernamePasswordCredential.#ctor" />
      <Member Id="M:Azure.Identity.UsernamePasswordCredential.#ctor(System.String,System.String,System.String,System.String)" />
      <Member Id="M:Azure.Identity.UsernamePasswordCredential.#ctor(System.String,System.String,System.String,System.String,Azure.Identity.TokenCredentialOptions)" />
      <Member Id="M:Azure.Identity.UsernamePasswordCredential.#ctor(System.String,System.String,System.String,System.String,Azure.Identity.UsernamePasswordCredentialOptions)" />
      <Member Id="M:Azure.Identity.UsernamePasswordCredential.Authenticate(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Identity.UsernamePasswordCredential.Authenticate(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Identity.UsernamePasswordCredential.AuthenticateAsync(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Identity.UsernamePasswordCredential.AuthenticateAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Identity.UsernamePasswordCredential.GetToken(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Identity.UsernamePasswordCredential.GetTokenAsync(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Azure.Identity.UsernamePasswordCredentialOptions" Id="T:Azure.Identity.UsernamePasswordCredentialOptions">
      <Member Id="M:Azure.Identity.UsernamePasswordCredentialOptions.#ctor" />
      <Member Id="P:Azure.Identity.UsernamePasswordCredentialOptions.TokenCache" />
    </Type>
    <Type Name="Azure.Identity.VisualStudioCodeCredential" Id="T:Azure.Identity.VisualStudioCodeCredential">
      <Member Id="M:Azure.Identity.VisualStudioCodeCredential.#ctor" />
      <Member Id="M:Azure.Identity.VisualStudioCodeCredential.#ctor(Azure.Identity.VisualStudioCodeCredentialOptions)" />
      <Member Id="M:Azure.Identity.VisualStudioCodeCredential.GetToken(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Identity.VisualStudioCodeCredential.GetTokenAsync(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Azure.Identity.VisualStudioCodeCredentialOptions" Id="T:Azure.Identity.VisualStudioCodeCredentialOptions">
      <Member Id="M:Azure.Identity.VisualStudioCodeCredentialOptions.#ctor" />
      <Member Id="P:Azure.Identity.VisualStudioCodeCredentialOptions.TenantId" />
    </Type>
    <Type Name="Azure.Identity.VisualStudioCredential" Id="T:Azure.Identity.VisualStudioCredential">
      <Member Id="M:Azure.Identity.VisualStudioCredential.#ctor" />
      <Member Id="M:Azure.Identity.VisualStudioCredential.#ctor(Azure.Identity.VisualStudioCredentialOptions)" />
      <Member Id="M:Azure.Identity.VisualStudioCredential.GetToken(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Identity.VisualStudioCredential.GetTokenAsync(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Azure.Identity.VisualStudioCredentialOptions" Id="T:Azure.Identity.VisualStudioCredentialOptions">
      <Member Id="M:Azure.Identity.VisualStudioCredentialOptions.#ctor" />
      <Member Id="P:Azure.Identity.VisualStudioCredentialOptions.TenantId" />
    </Type>
  </Namespace>
  <Namespace Name="Azure.Security.KeyVault.Certificates">
    <Type Name="Azure.Security.KeyVault.Certificates.AdministratorContact" Id="T:Azure.Security.KeyVault.Certificates.AdministratorContact">
      <Member Id="M:Azure.Security.KeyVault.Certificates.AdministratorContact.#ctor" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.AdministratorContact.Email" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.AdministratorContact.FirstName" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.AdministratorContact.LastName" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.AdministratorContact.Phone" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Certificates.CertificateClient" Id="T:Azure.Security.KeyVault.Certificates.CertificateClient">
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.#ctor" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.#ctor(System.Uri,Azure.Core.TokenCredential)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Security.KeyVault.Certificates.CertificateClientOptions)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.BackupCertificate(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.BackupCertificateAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.CreateIssuer(Azure.Security.KeyVault.Certificates.CertificateIssuer,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.CreateIssuerAsync(Azure.Security.KeyVault.Certificates.CertificateIssuer,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.DeleteContacts(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.DeleteContactsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.DeleteIssuer(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.DeleteIssuerAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.DownloadCertificate(System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.DownloadCertificateAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetCertificate(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetCertificateAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetCertificateOperation(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetCertificateOperationAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetCertificatePolicy(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetCertificatePolicyAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetCertificateVersion(System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetCertificateVersionAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetContacts(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetContactsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetDeletedCertificate(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetDeletedCertificateAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetDeletedCertificates(System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetDeletedCertificatesAsync(System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetIssuer(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetIssuerAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetPropertiesOfCertificates(System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetPropertiesOfCertificatesAsync(System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetPropertiesOfCertificateVersions(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetPropertiesOfCertificateVersionsAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetPropertiesOfIssuers(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetPropertiesOfIssuersAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.ImportCertificate(Azure.Security.KeyVault.Certificates.ImportCertificateOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.ImportCertificateAsync(Azure.Security.KeyVault.Certificates.ImportCertificateOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.MergeCertificate(Azure.Security.KeyVault.Certificates.MergeCertificateOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.MergeCertificateAsync(Azure.Security.KeyVault.Certificates.MergeCertificateOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.PurgeDeletedCertificate(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.PurgeDeletedCertificateAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.RestoreCertificateBackup(System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.RestoreCertificateBackupAsync(System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.SetContacts(System.Collections.Generic.IEnumerable{Azure.Security.KeyVault.Certificates.CertificateContact},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.SetContactsAsync(System.Collections.Generic.IEnumerable{Azure.Security.KeyVault.Certificates.CertificateContact},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.StartCreateCertificate(System.String,Azure.Security.KeyVault.Certificates.CertificatePolicy,System.Nullable{System.Boolean},System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.StartCreateCertificateAsync(System.String,Azure.Security.KeyVault.Certificates.CertificatePolicy,System.Nullable{System.Boolean},System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.StartDeleteCertificate(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.StartDeleteCertificateAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.StartRecoverDeletedCertificate(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.StartRecoverDeletedCertificateAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.UpdateCertificatePolicy(System.String,Azure.Security.KeyVault.Certificates.CertificatePolicy,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.UpdateCertificatePolicyAsync(System.String,Azure.Security.KeyVault.Certificates.CertificatePolicy,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.UpdateCertificateProperties(Azure.Security.KeyVault.Certificates.CertificateProperties,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.UpdateCertificatePropertiesAsync(Azure.Security.KeyVault.Certificates.CertificateProperties,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.UpdateIssuer(Azure.Security.KeyVault.Certificates.CertificateIssuer,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClient.UpdateIssuerAsync(Azure.Security.KeyVault.Certificates.CertificateIssuer,System.Threading.CancellationToken)" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateClient.VaultUri" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Certificates.CertificateClientOptions" Id="T:Azure.Security.KeyVault.Certificates.CertificateClientOptions">
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateClientOptions.#ctor(Azure.Security.KeyVault.Certificates.CertificateClientOptions.ServiceVersion)" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateClientOptions.Version" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Certificates.CertificateClientOptions/ServiceVersion" Id="T:Azure.Security.KeyVault.Certificates.CertificateClientOptions.ServiceVersion">
      <Member Id="F:Azure.Security.KeyVault.Certificates.CertificateClientOptions.ServiceVersion.V7_0" />
      <Member Id="F:Azure.Security.KeyVault.Certificates.CertificateClientOptions.ServiceVersion.V7_1" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Certificates.CertificateContact" Id="T:Azure.Security.KeyVault.Certificates.CertificateContact">
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateContact.#ctor" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateContact.Email" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateContact.Name" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateContact.Phone" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Certificates.CertificateContentType" Id="T:Azure.Security.KeyVault.Certificates.CertificateContentType">
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateContentType.#ctor(System.String)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateContentType.Equals(Azure.Security.KeyVault.Certificates.CertificateContentType)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateContentType.Equals(System.Object)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateContentType.GetHashCode" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateContentType.op_Equality(Azure.Security.KeyVault.Certificates.CertificateContentType,Azure.Security.KeyVault.Certificates.CertificateContentType)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateContentType.op_Implicit(System.String)~Azure.Security.KeyVault.Certificates.CertificateContentType" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateContentType.op_Inequality(Azure.Security.KeyVault.Certificates.CertificateContentType,Azure.Security.KeyVault.Certificates.CertificateContentType)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateContentType.ToString" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateContentType.Pem" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateContentType.Pkcs12" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Certificates.CertificateIssuer" Id="T:Azure.Security.KeyVault.Certificates.CertificateIssuer">
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateIssuer.#ctor(System.String)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateIssuer.#ctor(System.String,System.String)" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateIssuer.AccountId" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateIssuer.AdministratorContacts" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateIssuer.CreatedOn" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateIssuer.Enabled" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateIssuer.Id" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateIssuer.Name" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateIssuer.OrganizationId" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateIssuer.Password" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateIssuer.Provider" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateIssuer.UpdatedOn" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Certificates.CertificateKeyCurveName" Id="T:Azure.Security.KeyVault.Certificates.CertificateKeyCurveName">
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateKeyCurveName.#ctor(System.String)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateKeyCurveName.Equals(Azure.Security.KeyVault.Certificates.CertificateKeyCurveName)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateKeyCurveName.Equals(System.Object)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateKeyCurveName.GetHashCode" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateKeyCurveName.op_Equality(Azure.Security.KeyVault.Certificates.CertificateKeyCurveName,Azure.Security.KeyVault.Certificates.CertificateKeyCurveName)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateKeyCurveName.op_Implicit(System.String)~Azure.Security.KeyVault.Certificates.CertificateKeyCurveName" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateKeyCurveName.op_Inequality(Azure.Security.KeyVault.Certificates.CertificateKeyCurveName,Azure.Security.KeyVault.Certificates.CertificateKeyCurveName)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateKeyCurveName.ToString" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateKeyCurveName.P256" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateKeyCurveName.P256K" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateKeyCurveName.P384" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateKeyCurveName.P521" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Certificates.CertificateKeyType" Id="T:Azure.Security.KeyVault.Certificates.CertificateKeyType">
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateKeyType.#ctor(System.String)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateKeyType.Equals(Azure.Security.KeyVault.Certificates.CertificateKeyType)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateKeyType.Equals(System.Object)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateKeyType.GetHashCode" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateKeyType.op_Equality(Azure.Security.KeyVault.Certificates.CertificateKeyType,Azure.Security.KeyVault.Certificates.CertificateKeyType)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateKeyType.op_Implicit(System.String)~Azure.Security.KeyVault.Certificates.CertificateKeyType" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateKeyType.op_Inequality(Azure.Security.KeyVault.Certificates.CertificateKeyType,Azure.Security.KeyVault.Certificates.CertificateKeyType)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateKeyType.ToString" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateKeyType.Ec" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateKeyType.EcHsm" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateKeyType.Rsa" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateKeyType.RsaHsm" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Certificates.CertificateKeyUsage" Id="T:Azure.Security.KeyVault.Certificates.CertificateKeyUsage">
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateKeyUsage.#ctor(System.String)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateKeyUsage.Equals(Azure.Security.KeyVault.Certificates.CertificateKeyUsage)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateKeyUsage.Equals(System.Object)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateKeyUsage.GetHashCode" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateKeyUsage.op_Equality(Azure.Security.KeyVault.Certificates.CertificateKeyUsage,Azure.Security.KeyVault.Certificates.CertificateKeyUsage)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateKeyUsage.op_Implicit(System.String)~Azure.Security.KeyVault.Certificates.CertificateKeyUsage" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateKeyUsage.op_Inequality(Azure.Security.KeyVault.Certificates.CertificateKeyUsage,Azure.Security.KeyVault.Certificates.CertificateKeyUsage)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateKeyUsage.ToString" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateKeyUsage.CrlSign" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateKeyUsage.DataEncipherment" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateKeyUsage.DecipherOnly" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateKeyUsage.DigitalSignature" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateKeyUsage.EncipherOnly" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateKeyUsage.KeyAgreement" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateKeyUsage.KeyCertSign" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateKeyUsage.KeyEncipherment" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateKeyUsage.NonRepudiation" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Certificates.CertificateModelFactory" Id="T:Azure.Security.KeyVault.Certificates.CertificateModelFactory">
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateModelFactory.CertificateIssuer(Azure.Security.KeyVault.Certificates.IssuerProperties,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateModelFactory.CertificateOperationError(System.String,System.String,Azure.Security.KeyVault.Certificates.CertificateOperationError)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateModelFactory.CertificateOperationProperties(System.Uri,System.String,System.Uri,System.String,System.String,System.Nullable{System.Boolean},System.Byte[],System.Boolean,System.String,System.String,System.String,System.String,Azure.Security.KeyVault.Certificates.CertificateOperationError)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateModelFactory.CertificatePolicy(System.String,Azure.Security.KeyVault.Certificates.SubjectAlternativeNames,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateModelFactory.CertificateProperties(System.Uri,System.String,System.Uri,System.String,System.Byte[],System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateModelFactory.CertificateProperties(System.Uri,System.String,System.Uri,System.String,System.Byte[],System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,System.Nullable{System.Int32})" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateModelFactory.DeletedCertificate(Azure.Security.KeyVault.Certificates.CertificateProperties,System.Uri,System.Uri,System.Byte[],Azure.Security.KeyVault.Certificates.CertificatePolicy,System.Uri,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateModelFactory.IssuerProperties(System.Uri,System.String)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateModelFactory.KeyVaultCertificate(Azure.Security.KeyVault.Certificates.CertificateProperties,System.Uri,System.Uri,System.Byte[])" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateModelFactory.KeyVaultCertificateWithPolicy(Azure.Security.KeyVault.Certificates.CertificateProperties,System.Uri,System.Uri,System.Byte[],Azure.Security.KeyVault.Certificates.CertificatePolicy)" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Certificates.CertificateOperation" Id="T:Azure.Security.KeyVault.Certificates.CertificateOperation">
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateOperation.#ctor(Azure.Security.KeyVault.Certificates.CertificateClient,System.String)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateOperation.Cancel(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateOperation.CancelAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateOperation.Delete(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateOperation.DeleteAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateOperation.GetRawResponse" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateOperation.UpdateStatus(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateOperation.UpdateStatusAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateOperation.WaitForCompletionAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateOperation.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateOperation.HasCompleted" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateOperation.HasValue" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateOperation.Id" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateOperation.Properties" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateOperation.Value" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Certificates.CertificateOperationError" Id="T:Azure.Security.KeyVault.Certificates.CertificateOperationError">
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateOperationError.Code" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateOperationError.InnerError" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateOperationError.Message" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Certificates.CertificateOperationProperties" Id="T:Azure.Security.KeyVault.Certificates.CertificateOperationProperties">
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateOperationProperties.CancellationRequested" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateOperationProperties.CertificateTransparency" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateOperationProperties.CertificateType" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateOperationProperties.Csr" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateOperationProperties.Error" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateOperationProperties.Id" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateOperationProperties.IssuerName" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateOperationProperties.Name" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateOperationProperties.RequestId" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateOperationProperties.Status" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateOperationProperties.StatusDetails" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateOperationProperties.Target" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateOperationProperties.VaultUri" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Certificates.CertificatePolicy" Id="T:Azure.Security.KeyVault.Certificates.CertificatePolicy">
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificatePolicy.#ctor(System.String,Azure.Security.KeyVault.Certificates.SubjectAlternativeNames)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificatePolicy.#ctor(System.String,System.String)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificatePolicy.#ctor(System.String,System.String,Azure.Security.KeyVault.Certificates.SubjectAlternativeNames)" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificatePolicy.CertificateTransparency" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificatePolicy.CertificateType" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificatePolicy.ContentType" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificatePolicy.CreatedOn" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificatePolicy.Default" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificatePolicy.Enabled" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificatePolicy.EnhancedKeyUsage" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificatePolicy.Exportable" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificatePolicy.IssuerName" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificatePolicy.KeyCurveName" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificatePolicy.KeySize" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificatePolicy.KeyType" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificatePolicy.KeyUsage" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificatePolicy.LifetimeActions" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificatePolicy.ReuseKey" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificatePolicy.Subject" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificatePolicy.SubjectAlternativeNames" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificatePolicy.UpdatedOn" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificatePolicy.ValidityInMonths" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Certificates.CertificatePolicyAction" Id="T:Azure.Security.KeyVault.Certificates.CertificatePolicyAction">
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificatePolicyAction.#ctor(System.String)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificatePolicyAction.Equals(Azure.Security.KeyVault.Certificates.CertificatePolicyAction)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificatePolicyAction.Equals(System.Object)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificatePolicyAction.GetHashCode" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificatePolicyAction.op_Equality(Azure.Security.KeyVault.Certificates.CertificatePolicyAction,Azure.Security.KeyVault.Certificates.CertificatePolicyAction)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificatePolicyAction.op_Implicit(System.String)~Azure.Security.KeyVault.Certificates.CertificatePolicyAction" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificatePolicyAction.op_Inequality(Azure.Security.KeyVault.Certificates.CertificatePolicyAction,Azure.Security.KeyVault.Certificates.CertificatePolicyAction)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificatePolicyAction.ToString" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificatePolicyAction.AutoRenew" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificatePolicyAction.EmailContacts" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Certificates.CertificateProperties" Id="T:Azure.Security.KeyVault.Certificates.CertificateProperties">
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateProperties.#ctor(System.String)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.CertificateProperties.#ctor(System.Uri)" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateProperties.CreatedOn" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateProperties.Enabled" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateProperties.ExpiresOn" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateProperties.Id" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateProperties.Name" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateProperties.NotBefore" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateProperties.RecoverableDays" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateProperties.RecoveryLevel" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateProperties.Tags" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateProperties.UpdatedOn" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateProperties.VaultUri" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateProperties.Version" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.CertificateProperties.X509Thumbprint" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Certificates.DeleteCertificateOperation" Id="T:Azure.Security.KeyVault.Certificates.DeleteCertificateOperation">
      <Member Id="M:Azure.Security.KeyVault.Certificates.DeleteCertificateOperation.GetRawResponse" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.DeleteCertificateOperation.UpdateStatus(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.DeleteCertificateOperation.UpdateStatusAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.DeleteCertificateOperation.WaitForCompletionAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.DeleteCertificateOperation.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.DeleteCertificateOperation.HasCompleted" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.DeleteCertificateOperation.HasValue" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.DeleteCertificateOperation.Id" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.DeleteCertificateOperation.Value" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Certificates.DeletedCertificate" Id="T:Azure.Security.KeyVault.Certificates.DeletedCertificate">
      <Member Id="P:Azure.Security.KeyVault.Certificates.DeletedCertificate.DeletedOn" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.DeletedCertificate.RecoveryId" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.DeletedCertificate.ScheduledPurgeDate" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Certificates.ImportCertificateOptions" Id="T:Azure.Security.KeyVault.Certificates.ImportCertificateOptions">
      <Member Id="M:Azure.Security.KeyVault.Certificates.ImportCertificateOptions.#ctor(System.String,System.Byte[])" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.ImportCertificateOptions.Certificate" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.ImportCertificateOptions.Enabled" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.ImportCertificateOptions.Name" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.ImportCertificateOptions.Password" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.ImportCertificateOptions.Policy" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.ImportCertificateOptions.Tags" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Certificates.IssuerProperties" Id="T:Azure.Security.KeyVault.Certificates.IssuerProperties">
      <Member Id="P:Azure.Security.KeyVault.Certificates.IssuerProperties.Id" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.IssuerProperties.Name" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.IssuerProperties.Provider" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Certificates.KeyVaultCertificate" Id="T:Azure.Security.KeyVault.Certificates.KeyVaultCertificate">
      <Member Id="P:Azure.Security.KeyVault.Certificates.KeyVaultCertificate.Cer" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.KeyVaultCertificate.Id" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.KeyVaultCertificate.KeyId" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.KeyVaultCertificate.Name" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.KeyVaultCertificate.Properties" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.KeyVaultCertificate.SecretId" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Certificates.KeyVaultCertificateIdentifier" Id="T:Azure.Security.KeyVault.Certificates.KeyVaultCertificateIdentifier">
      <Member Id="M:Azure.Security.KeyVault.Certificates.KeyVaultCertificateIdentifier.Parse(System.Uri)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.KeyVaultCertificateIdentifier.TryParse(System.Uri,Azure.Security.KeyVault.Certificates.KeyVaultCertificateIdentifier@)" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.KeyVaultCertificateIdentifier.Name" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.KeyVaultCertificateIdentifier.SourceId" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.KeyVaultCertificateIdentifier.VaultUri" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.KeyVaultCertificateIdentifier.Version" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Certificates.KeyVaultCertificateWithPolicy" Id="T:Azure.Security.KeyVault.Certificates.KeyVaultCertificateWithPolicy">
      <Member Id="P:Azure.Security.KeyVault.Certificates.KeyVaultCertificateWithPolicy.Policy" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Certificates.LifetimeAction" Id="T:Azure.Security.KeyVault.Certificates.LifetimeAction">
      <Member Id="M:Azure.Security.KeyVault.Certificates.LifetimeAction.#ctor(Azure.Security.KeyVault.Certificates.CertificatePolicyAction)" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.LifetimeAction.Action" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.LifetimeAction.DaysBeforeExpiry" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.LifetimeAction.LifetimePercentage" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Certificates.MergeCertificateOptions" Id="T:Azure.Security.KeyVault.Certificates.MergeCertificateOptions">
      <Member Id="M:Azure.Security.KeyVault.Certificates.MergeCertificateOptions.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Byte[]})" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.MergeCertificateOptions.Enabled" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.MergeCertificateOptions.Name" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.MergeCertificateOptions.Tags" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.MergeCertificateOptions.X509Certificates" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Certificates.RecoverDeletedCertificateOperation" Id="T:Azure.Security.KeyVault.Certificates.RecoverDeletedCertificateOperation">
      <Member Id="M:Azure.Security.KeyVault.Certificates.RecoverDeletedCertificateOperation.GetRawResponse" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.RecoverDeletedCertificateOperation.UpdateStatus(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.RecoverDeletedCertificateOperation.UpdateStatusAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.RecoverDeletedCertificateOperation.WaitForCompletionAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Certificates.RecoverDeletedCertificateOperation.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.RecoverDeletedCertificateOperation.HasCompleted" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.RecoverDeletedCertificateOperation.HasValue" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.RecoverDeletedCertificateOperation.Id" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.RecoverDeletedCertificateOperation.Value" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Certificates.SubjectAlternativeNames" Id="T:Azure.Security.KeyVault.Certificates.SubjectAlternativeNames">
      <Member Id="M:Azure.Security.KeyVault.Certificates.SubjectAlternativeNames.#ctor" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.SubjectAlternativeNames.DnsNames" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.SubjectAlternativeNames.Emails" />
      <Member Id="P:Azure.Security.KeyVault.Certificates.SubjectAlternativeNames.UserPrincipalNames" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Certificates.WellKnownIssuerNames" Id="T:Azure.Security.KeyVault.Certificates.WellKnownIssuerNames">
      <Member Id="F:Azure.Security.KeyVault.Certificates.WellKnownIssuerNames.Self" />
      <Member Id="F:Azure.Security.KeyVault.Certificates.WellKnownIssuerNames.Unknown" />
    </Type>
  </Namespace>
  <Namespace Name="Azure.Security.KeyVault.Keys">
    <Type Name="Azure.Security.KeyVault.Keys.CreateEcKeyOptions" Id="T:Azure.Security.KeyVault.Keys.CreateEcKeyOptions">
      <Member Id="M:Azure.Security.KeyVault.Keys.CreateEcKeyOptions.#ctor(System.String,System.Boolean)" />
      <Member Id="P:Azure.Security.KeyVault.Keys.CreateEcKeyOptions.CurveName" />
      <Member Id="P:Azure.Security.KeyVault.Keys.CreateEcKeyOptions.HardwareProtected" />
      <Member Id="P:Azure.Security.KeyVault.Keys.CreateEcKeyOptions.KeyType" />
      <Member Id="P:Azure.Security.KeyVault.Keys.CreateEcKeyOptions.Name" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Keys.CreateKeyOptions" Id="T:Azure.Security.KeyVault.Keys.CreateKeyOptions">
      <Member Id="M:Azure.Security.KeyVault.Keys.CreateKeyOptions.#ctor" />
      <Member Id="P:Azure.Security.KeyVault.Keys.CreateKeyOptions.Enabled" />
      <Member Id="P:Azure.Security.KeyVault.Keys.CreateKeyOptions.ExpiresOn" />
      <Member Id="P:Azure.Security.KeyVault.Keys.CreateKeyOptions.Exportable" />
      <Member Id="P:Azure.Security.KeyVault.Keys.CreateKeyOptions.KeyOperations" />
      <Member Id="P:Azure.Security.KeyVault.Keys.CreateKeyOptions.NotBefore" />
      <Member Id="P:Azure.Security.KeyVault.Keys.CreateKeyOptions.ReleasePolicy" />
      <Member Id="P:Azure.Security.KeyVault.Keys.CreateKeyOptions.Tags" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Keys.CreateRsaKeyOptions" Id="T:Azure.Security.KeyVault.Keys.CreateRsaKeyOptions">
      <Member Id="M:Azure.Security.KeyVault.Keys.CreateRsaKeyOptions.#ctor(System.String,System.Boolean)" />
      <Member Id="P:Azure.Security.KeyVault.Keys.CreateRsaKeyOptions.HardwareProtected" />
      <Member Id="P:Azure.Security.KeyVault.Keys.CreateRsaKeyOptions.KeySize" />
      <Member Id="P:Azure.Security.KeyVault.Keys.CreateRsaKeyOptions.KeyType" />
      <Member Id="P:Azure.Security.KeyVault.Keys.CreateRsaKeyOptions.Name" />
      <Member Id="P:Azure.Security.KeyVault.Keys.CreateRsaKeyOptions.PublicExponent" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Keys.CryptographyModelFactory" Id="T:Azure.Security.KeyVault.Keys.CryptographyModelFactory">
      <Member Id="M:Azure.Security.KeyVault.Keys.CryptographyModelFactory.DecryptOptions(Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm,System.Byte[],System.Byte[],System.Byte[])" />
      <Member Id="M:Azure.Security.KeyVault.Keys.CryptographyModelFactory.DecryptResult(System.String,System.Byte[],Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.CryptographyModelFactory.EncryptOptions(Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm,System.Byte[],System.Byte[])" />
      <Member Id="M:Azure.Security.KeyVault.Keys.CryptographyModelFactory.EncryptResult(System.String,System.Byte[],Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.CryptographyModelFactory.EncryptResult(System.String,System.Byte[],Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm,System.Byte[],System.Byte[],System.Byte[])" />
      <Member Id="M:Azure.Security.KeyVault.Keys.CryptographyModelFactory.SignResult(System.String,System.Byte[],Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.CryptographyModelFactory.UnwrapResult(System.String,System.Byte[],Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.CryptographyModelFactory.VerifyResult(System.String,System.Boolean,Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.CryptographyModelFactory.WrapResult(System.String,System.Byte[],Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm)" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Keys.DeletedKey" Id="T:Azure.Security.KeyVault.Keys.DeletedKey">
      <Member Id="P:Azure.Security.KeyVault.Keys.DeletedKey.DeletedOn" />
      <Member Id="P:Azure.Security.KeyVault.Keys.DeletedKey.RecoveryId" />
      <Member Id="P:Azure.Security.KeyVault.Keys.DeletedKey.ScheduledPurgeDate" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Keys.DeleteKeyOperation" Id="T:Azure.Security.KeyVault.Keys.DeleteKeyOperation">
      <Member Id="M:Azure.Security.KeyVault.Keys.DeleteKeyOperation.GetRawResponse" />
      <Member Id="M:Azure.Security.KeyVault.Keys.DeleteKeyOperation.UpdateStatus(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.DeleteKeyOperation.UpdateStatusAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.DeleteKeyOperation.WaitForCompletionAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.DeleteKeyOperation.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="P:Azure.Security.KeyVault.Keys.DeleteKeyOperation.HasCompleted" />
      <Member Id="P:Azure.Security.KeyVault.Keys.DeleteKeyOperation.HasValue" />
      <Member Id="P:Azure.Security.KeyVault.Keys.DeleteKeyOperation.Id" />
      <Member Id="P:Azure.Security.KeyVault.Keys.DeleteKeyOperation.Value" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Keys.ImportKeyOptions" Id="T:Azure.Security.KeyVault.Keys.ImportKeyOptions">
      <Member Id="M:Azure.Security.KeyVault.Keys.ImportKeyOptions.#ctor(System.String,Azure.Security.KeyVault.Keys.JsonWebKey)" />
      <Member Id="P:Azure.Security.KeyVault.Keys.ImportKeyOptions.HardwareProtected" />
      <Member Id="P:Azure.Security.KeyVault.Keys.ImportKeyOptions.Key" />
      <Member Id="P:Azure.Security.KeyVault.Keys.ImportKeyOptions.Name" />
      <Member Id="P:Azure.Security.KeyVault.Keys.ImportKeyOptions.Properties" />
      <Member Id="P:Azure.Security.KeyVault.Keys.ImportKeyOptions.ReleasePolicy" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Keys.JsonWebKey" Id="T:Azure.Security.KeyVault.Keys.JsonWebKey">
      <Member Id="M:Azure.Security.KeyVault.Keys.JsonWebKey.#ctor(System.Collections.Generic.IEnumerable{Azure.Security.KeyVault.Keys.KeyOperation})" />
      <Member Id="M:Azure.Security.KeyVault.Keys.JsonWebKey.#ctor(System.Security.Cryptography.Aes,System.Collections.Generic.IEnumerable{Azure.Security.KeyVault.Keys.KeyOperation})" />
      <Member Id="M:Azure.Security.KeyVault.Keys.JsonWebKey.#ctor(System.Security.Cryptography.ECDsa,System.Boolean,System.Collections.Generic.IEnumerable{Azure.Security.KeyVault.Keys.KeyOperation})" />
      <Member Id="M:Azure.Security.KeyVault.Keys.JsonWebKey.#ctor(System.Security.Cryptography.RSA,System.Boolean,System.Collections.Generic.IEnumerable{Azure.Security.KeyVault.Keys.KeyOperation})" />
      <Member Id="M:Azure.Security.KeyVault.Keys.JsonWebKey.ToAes" />
      <Member Id="M:Azure.Security.KeyVault.Keys.JsonWebKey.ToECDsa(System.Boolean)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.JsonWebKey.ToRSA(System.Boolean)" />
      <Member Id="P:Azure.Security.KeyVault.Keys.JsonWebKey.CurveName" />
      <Member Id="P:Azure.Security.KeyVault.Keys.JsonWebKey.D" />
      <Member Id="P:Azure.Security.KeyVault.Keys.JsonWebKey.DP" />
      <Member Id="P:Azure.Security.KeyVault.Keys.JsonWebKey.DQ" />
      <Member Id="P:Azure.Security.KeyVault.Keys.JsonWebKey.E" />
      <Member Id="P:Azure.Security.KeyVault.Keys.JsonWebKey.Id" />
      <Member Id="P:Azure.Security.KeyVault.Keys.JsonWebKey.K" />
      <Member Id="P:Azure.Security.KeyVault.Keys.JsonWebKey.KeyOps" />
      <Member Id="P:Azure.Security.KeyVault.Keys.JsonWebKey.KeyType" />
      <Member Id="P:Azure.Security.KeyVault.Keys.JsonWebKey.N" />
      <Member Id="P:Azure.Security.KeyVault.Keys.JsonWebKey.P" />
      <Member Id="P:Azure.Security.KeyVault.Keys.JsonWebKey.Q" />
      <Member Id="P:Azure.Security.KeyVault.Keys.JsonWebKey.QI" />
      <Member Id="P:Azure.Security.KeyVault.Keys.JsonWebKey.T" />
      <Member Id="P:Azure.Security.KeyVault.Keys.JsonWebKey.X" />
      <Member Id="P:Azure.Security.KeyVault.Keys.JsonWebKey.Y" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Keys.KeyClient" Id="T:Azure.Security.KeyVault.Keys.KeyClient">
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyClient.#ctor" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyClient.#ctor(System.Uri,Azure.Core.TokenCredential)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Security.KeyVault.Keys.KeyClientOptions)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyClient.BackupKey(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyClient.BackupKeyAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyClient.CreateEcKey(Azure.Security.KeyVault.Keys.CreateEcKeyOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyClient.CreateEcKeyAsync(Azure.Security.KeyVault.Keys.CreateEcKeyOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyClient.CreateKey(System.String,Azure.Security.KeyVault.Keys.KeyType,Azure.Security.KeyVault.Keys.CreateKeyOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyClient.CreateKeyAsync(System.String,Azure.Security.KeyVault.Keys.KeyType,Azure.Security.KeyVault.Keys.CreateKeyOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyClient.CreateRsaKey(Azure.Security.KeyVault.Keys.CreateRsaKeyOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyClient.CreateRsaKeyAsync(Azure.Security.KeyVault.Keys.CreateRsaKeyOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyClient.ExportKey(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyClient.ExportKey(System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyClient.ExportKeyAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyClient.ExportKeyAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyClient.GetDeletedKey(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyClient.GetDeletedKeyAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyClient.GetDeletedKeys(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyClient.GetDeletedKeysAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyClient.GetKey(System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyClient.GetKeyAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyClient.GetPropertiesOfKeys(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyClient.GetPropertiesOfKeysAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyClient.GetPropertiesOfKeyVersions(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyClient.GetPropertiesOfKeyVersionsAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyClient.ImportKey(Azure.Security.KeyVault.Keys.ImportKeyOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyClient.ImportKey(System.String,Azure.Security.KeyVault.Keys.JsonWebKey,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyClient.ImportKeyAsync(Azure.Security.KeyVault.Keys.ImportKeyOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyClient.ImportKeyAsync(System.String,Azure.Security.KeyVault.Keys.JsonWebKey,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyClient.PurgeDeletedKey(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyClient.PurgeDeletedKeyAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyClient.RestoreKeyBackup(System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyClient.RestoreKeyBackupAsync(System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyClient.StartDeleteKey(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyClient.StartDeleteKeyAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyClient.StartRecoverDeletedKey(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyClient.StartRecoverDeletedKeyAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyClient.UpdateKeyProperties(Azure.Security.KeyVault.Keys.KeyProperties,System.Collections.Generic.IEnumerable{Azure.Security.KeyVault.Keys.KeyOperation},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyClient.UpdateKeyPropertiesAsync(Azure.Security.KeyVault.Keys.KeyProperties,System.Collections.Generic.IEnumerable{Azure.Security.KeyVault.Keys.KeyOperation},System.Threading.CancellationToken)" />
      <Member Id="P:Azure.Security.KeyVault.Keys.KeyClient.VaultUri" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Keys.KeyClientOptions" Id="T:Azure.Security.KeyVault.Keys.KeyClientOptions">
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyClientOptions.#ctor(Azure.Security.KeyVault.Keys.KeyClientOptions.ServiceVersion)" />
      <Member Id="P:Azure.Security.KeyVault.Keys.KeyClientOptions.Version" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Keys.KeyClientOptions/ServiceVersion" Id="T:Azure.Security.KeyVault.Keys.KeyClientOptions.ServiceVersion">
      <Member Id="F:Azure.Security.KeyVault.Keys.KeyClientOptions.ServiceVersion.V7_0" />
      <Member Id="F:Azure.Security.KeyVault.Keys.KeyClientOptions.ServiceVersion.V7_1" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Keys.KeyCurveName" Id="T:Azure.Security.KeyVault.Keys.KeyCurveName">
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyCurveName.#ctor(System.String)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyCurveName.Equals(Azure.Security.KeyVault.Keys.KeyCurveName)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyCurveName.Equals(System.Object)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyCurveName.GetHashCode" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyCurveName.op_Equality(Azure.Security.KeyVault.Keys.KeyCurveName,Azure.Security.KeyVault.Keys.KeyCurveName)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyCurveName.op_Implicit(System.String)~Azure.Security.KeyVault.Keys.KeyCurveName" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyCurveName.op_Inequality(Azure.Security.KeyVault.Keys.KeyCurveName,Azure.Security.KeyVault.Keys.KeyCurveName)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyCurveName.ToString" />
      <Member Id="P:Azure.Security.KeyVault.Keys.KeyCurveName.P256" />
      <Member Id="P:Azure.Security.KeyVault.Keys.KeyCurveName.P256K" />
      <Member Id="P:Azure.Security.KeyVault.Keys.KeyCurveName.P384" />
      <Member Id="P:Azure.Security.KeyVault.Keys.KeyCurveName.P521" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Keys.KeyModelFactory" Id="T:Azure.Security.KeyVault.Keys.KeyModelFactory">
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyModelFactory.DeletedKey(Azure.Security.KeyVault.Keys.KeyProperties,Azure.Security.KeyVault.Keys.JsonWebKey,System.Uri,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyModelFactory.JsonWebKey(Azure.Security.KeyVault.Keys.KeyType,System.String,System.Collections.Generic.IEnumerable{Azure.Security.KeyVault.Keys.KeyOperation},System.Nullable{Azure.Security.KeyVault.Keys.KeyCurveName},System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[])" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyModelFactory.KeyProperties(System.Uri,System.Uri,System.String,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyModelFactory.KeyProperties(System.Uri,System.Uri,System.String,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,System.Nullable{System.Int32})" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyModelFactory.KeyVaultKey(Azure.Security.KeyVault.Keys.KeyProperties,Azure.Security.KeyVault.Keys.JsonWebKey)" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Keys.KeyOperation" Id="T:Azure.Security.KeyVault.Keys.KeyOperation">
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyOperation.#ctor(System.String)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyOperation.Equals(Azure.Security.KeyVault.Keys.KeyOperation)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyOperation.Equals(System.Object)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyOperation.GetHashCode" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyOperation.op_Equality(Azure.Security.KeyVault.Keys.KeyOperation,Azure.Security.KeyVault.Keys.KeyOperation)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyOperation.op_Implicit(System.String)~Azure.Security.KeyVault.Keys.KeyOperation" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyOperation.op_Inequality(Azure.Security.KeyVault.Keys.KeyOperation,Azure.Security.KeyVault.Keys.KeyOperation)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyOperation.ToString" />
      <Member Id="P:Azure.Security.KeyVault.Keys.KeyOperation.Decrypt" />
      <Member Id="P:Azure.Security.KeyVault.Keys.KeyOperation.Encrypt" />
      <Member Id="P:Azure.Security.KeyVault.Keys.KeyOperation.Export" />
      <Member Id="P:Azure.Security.KeyVault.Keys.KeyOperation.Import" />
      <Member Id="P:Azure.Security.KeyVault.Keys.KeyOperation.Sign" />
      <Member Id="P:Azure.Security.KeyVault.Keys.KeyOperation.UnwrapKey" />
      <Member Id="P:Azure.Security.KeyVault.Keys.KeyOperation.Verify" />
      <Member Id="P:Azure.Security.KeyVault.Keys.KeyOperation.WrapKey" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Keys.KeyProperties" Id="T:Azure.Security.KeyVault.Keys.KeyProperties">
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyProperties.#ctor(System.String)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyProperties.#ctor(System.Uri)" />
      <Member Id="P:Azure.Security.KeyVault.Keys.KeyProperties.CreatedOn" />
      <Member Id="P:Azure.Security.KeyVault.Keys.KeyProperties.Enabled" />
      <Member Id="P:Azure.Security.KeyVault.Keys.KeyProperties.ExpiresOn" />
      <Member Id="P:Azure.Security.KeyVault.Keys.KeyProperties.Exportable" />
      <Member Id="P:Azure.Security.KeyVault.Keys.KeyProperties.Id" />
      <Member Id="P:Azure.Security.KeyVault.Keys.KeyProperties.Managed" />
      <Member Id="P:Azure.Security.KeyVault.Keys.KeyProperties.Name" />
      <Member Id="P:Azure.Security.KeyVault.Keys.KeyProperties.NotBefore" />
      <Member Id="P:Azure.Security.KeyVault.Keys.KeyProperties.RecoverableDays" />
      <Member Id="P:Azure.Security.KeyVault.Keys.KeyProperties.RecoveryLevel" />
      <Member Id="P:Azure.Security.KeyVault.Keys.KeyProperties.ReleasePolicy" />
      <Member Id="P:Azure.Security.KeyVault.Keys.KeyProperties.Tags" />
      <Member Id="P:Azure.Security.KeyVault.Keys.KeyProperties.UpdatedOn" />
      <Member Id="P:Azure.Security.KeyVault.Keys.KeyProperties.VaultUri" />
      <Member Id="P:Azure.Security.KeyVault.Keys.KeyProperties.Version" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Keys.KeyReleasePolicy" Id="T:Azure.Security.KeyVault.Keys.KeyReleasePolicy">
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyReleasePolicy.#ctor(System.Byte[])" />
      <Member Id="P:Azure.Security.KeyVault.Keys.KeyReleasePolicy.ContentType" />
      <Member Id="P:Azure.Security.KeyVault.Keys.KeyReleasePolicy.Data" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Keys.KeyType" Id="T:Azure.Security.KeyVault.Keys.KeyType">
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyType.#ctor(System.String)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyType.Equals(Azure.Security.KeyVault.Keys.KeyType)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyType.Equals(System.Object)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyType.GetHashCode" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyType.op_Equality(Azure.Security.KeyVault.Keys.KeyType,Azure.Security.KeyVault.Keys.KeyType)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyType.op_Implicit(System.String)~Azure.Security.KeyVault.Keys.KeyType" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyType.op_Inequality(Azure.Security.KeyVault.Keys.KeyType,Azure.Security.KeyVault.Keys.KeyType)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyType.ToString" />
      <Member Id="P:Azure.Security.KeyVault.Keys.KeyType.Ec" />
      <Member Id="P:Azure.Security.KeyVault.Keys.KeyType.EcHsm" />
      <Member Id="P:Azure.Security.KeyVault.Keys.KeyType.Oct" />
      <Member Id="P:Azure.Security.KeyVault.Keys.KeyType.OctHsm" />
      <Member Id="P:Azure.Security.KeyVault.Keys.KeyType.Rsa" />
      <Member Id="P:Azure.Security.KeyVault.Keys.KeyType.RsaHsm" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Keys.KeyVaultKey" Id="T:Azure.Security.KeyVault.Keys.KeyVaultKey">
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyVaultKey.#ctor(System.String)" />
      <Member Id="P:Azure.Security.KeyVault.Keys.KeyVaultKey.Id" />
      <Member Id="P:Azure.Security.KeyVault.Keys.KeyVaultKey.Key" />
      <Member Id="P:Azure.Security.KeyVault.Keys.KeyVaultKey.KeyOperations" />
      <Member Id="P:Azure.Security.KeyVault.Keys.KeyVaultKey.KeyType" />
      <Member Id="P:Azure.Security.KeyVault.Keys.KeyVaultKey.Name" />
      <Member Id="P:Azure.Security.KeyVault.Keys.KeyVaultKey.Properties" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Keys.KeyVaultKeyIdentifier" Id="T:Azure.Security.KeyVault.Keys.KeyVaultKeyIdentifier">
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyVaultKeyIdentifier.Parse(System.Uri)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.KeyVaultKeyIdentifier.TryParse(System.Uri,Azure.Security.KeyVault.Keys.KeyVaultKeyIdentifier@)" />
      <Member Id="P:Azure.Security.KeyVault.Keys.KeyVaultKeyIdentifier.Name" />
      <Member Id="P:Azure.Security.KeyVault.Keys.KeyVaultKeyIdentifier.SourceId" />
      <Member Id="P:Azure.Security.KeyVault.Keys.KeyVaultKeyIdentifier.VaultUri" />
      <Member Id="P:Azure.Security.KeyVault.Keys.KeyVaultKeyIdentifier.Version" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Keys.RecoverDeletedKeyOperation" Id="T:Azure.Security.KeyVault.Keys.RecoverDeletedKeyOperation">
      <Member Id="M:Azure.Security.KeyVault.Keys.RecoverDeletedKeyOperation.GetRawResponse" />
      <Member Id="M:Azure.Security.KeyVault.Keys.RecoverDeletedKeyOperation.UpdateStatus(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.RecoverDeletedKeyOperation.UpdateStatusAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.RecoverDeletedKeyOperation.WaitForCompletionAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.RecoverDeletedKeyOperation.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="P:Azure.Security.KeyVault.Keys.RecoverDeletedKeyOperation.HasCompleted" />
      <Member Id="P:Azure.Security.KeyVault.Keys.RecoverDeletedKeyOperation.HasValue" />
      <Member Id="P:Azure.Security.KeyVault.Keys.RecoverDeletedKeyOperation.Id" />
      <Member Id="P:Azure.Security.KeyVault.Keys.RecoverDeletedKeyOperation.Value" />
    </Type>
  </Namespace>
  <Namespace Name="Azure.Security.KeyVault.Keys.Cryptography">
    <Type Name="Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient" Id="T:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient">
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.#ctor" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.#ctor(System.Uri,Azure.Core.TokenCredential)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Security.KeyVault.Keys.Cryptography.CryptographyClientOptions)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.Azure#Core#Cryptography#IKeyEncryptionKey#UnwrapKey(System.String,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.Azure#Core#Cryptography#IKeyEncryptionKey#UnwrapKeyAsync(System.String,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.Azure#Core#Cryptography#IKeyEncryptionKey#WrapKey(System.String,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.Azure#Core#Cryptography#IKeyEncryptionKey#WrapKeyAsync(System.String,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.Decrypt(Azure.Security.KeyVault.Keys.Cryptography.DecryptOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.Decrypt(Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm,System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.DecryptAsync(Azure.Security.KeyVault.Keys.Cryptography.DecryptOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.DecryptAsync(Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm,System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.Encrypt(Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm,System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.Encrypt(Azure.Security.KeyVault.Keys.Cryptography.EncryptOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.EncryptAsync(Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm,System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.EncryptAsync(Azure.Security.KeyVault.Keys.Cryptography.EncryptOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.Sign(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.SignAsync(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.SignData(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.SignData(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,System.IO.Stream,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.SignDataAsync(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.SignDataAsync(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,System.IO.Stream,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.UnwrapKey(Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm,System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.UnwrapKeyAsync(Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm,System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.Verify(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,System.Byte[],System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.VerifyAsync(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,System.Byte[],System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.VerifyData(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,System.Byte[],System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.VerifyData(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,System.IO.Stream,System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.VerifyDataAsync(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,System.Byte[],System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.VerifyDataAsync(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,System.IO.Stream,System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.WrapKey(Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm,System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.WrapKeyAsync(Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm,System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.KeyId" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Keys.Cryptography.CryptographyClientOptions" Id="T:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClientOptions">
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClientOptions.#ctor(Azure.Security.KeyVault.Keys.Cryptography.CryptographyClientOptions.ServiceVersion)" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClientOptions.Version" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Keys.Cryptography.CryptographyClientOptions/ServiceVersion" Id="T:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClientOptions.ServiceVersion">
      <Member Id="F:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClientOptions.ServiceVersion.V7_0" />
      <Member Id="F:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClientOptions.ServiceVersion.V7_1" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Keys.Cryptography.DecryptOptions" Id="T:Azure.Security.KeyVault.Keys.Cryptography.DecryptOptions">
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.DecryptOptions.A128CbcOptions(System.Byte[],System.Byte[])" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.DecryptOptions.A128CbcPadOptions(System.Byte[],System.Byte[])" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.DecryptOptions.A128GcmOptions(System.Byte[],System.Byte[],System.Byte[],System.Byte[])" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.DecryptOptions.A192CbcOptions(System.Byte[],System.Byte[])" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.DecryptOptions.A192CbcPadOptions(System.Byte[],System.Byte[])" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.DecryptOptions.A192GcmOptions(System.Byte[],System.Byte[],System.Byte[],System.Byte[])" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.DecryptOptions.A256CbcOptions(System.Byte[],System.Byte[])" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.DecryptOptions.A256CbcPadOptions(System.Byte[],System.Byte[])" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.DecryptOptions.A256GcmOptions(System.Byte[],System.Byte[],System.Byte[],System.Byte[])" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.DecryptOptions.Rsa15Options(System.Byte[])" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.DecryptOptions.RsaOaep256Options(System.Byte[])" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.DecryptOptions.RsaOaepOptions(System.Byte[])" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.DecryptOptions.AdditionalAuthenticatedData" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.DecryptOptions.Algorithm" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.DecryptOptions.AuthenticationTag" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.DecryptOptions.Ciphertext" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.DecryptOptions.Iv" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Keys.Cryptography.DecryptResult" Id="T:Azure.Security.KeyVault.Keys.Cryptography.DecryptResult">
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.DecryptResult.Algorithm" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.DecryptResult.KeyId" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.DecryptResult.Plaintext" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm" Id="T:Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm">
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm.#ctor(System.String)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm.Equals(Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm.Equals(System.Object)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm.GetHashCode" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm.op_Equality(Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm,Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm.op_Implicit(System.String)~Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm.op_Inequality(Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm,Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm.ToString" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm.A128Cbc" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm.A128CbcPad" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm.A128Gcm" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm.A192Cbc" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm.A192CbcPad" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm.A192Gcm" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm.A256Cbc" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm.A256CbcPad" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm.A256Gcm" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm.Rsa15" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm.RsaOaep" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm.RsaOaep256" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Keys.Cryptography.EncryptOptions" Id="T:Azure.Security.KeyVault.Keys.Cryptography.EncryptOptions">
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.EncryptOptions.A128CbcOptions(System.Byte[],System.Byte[])" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.EncryptOptions.A128CbcPadOptions(System.Byte[],System.Byte[])" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.EncryptOptions.A128GcmOptions(System.Byte[],System.Byte[])" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.EncryptOptions.A192CbcOptions(System.Byte[],System.Byte[])" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.EncryptOptions.A192CbcPadOptions(System.Byte[],System.Byte[])" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.EncryptOptions.A192GcmOptions(System.Byte[],System.Byte[])" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.EncryptOptions.A256CbcOptions(System.Byte[],System.Byte[])" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.EncryptOptions.A256CbcPadOptions(System.Byte[],System.Byte[])" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.EncryptOptions.A256GcmOptions(System.Byte[],System.Byte[])" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.EncryptOptions.Rsa15Options(System.Byte[])" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.EncryptOptions.RsaOaep256Options(System.Byte[])" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.EncryptOptions.RsaOaepOptions(System.Byte[])" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.EncryptOptions.AdditionalAuthenticatedData" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.EncryptOptions.Algorithm" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.EncryptOptions.Iv" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.EncryptOptions.Plaintext" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Keys.Cryptography.EncryptResult" Id="T:Azure.Security.KeyVault.Keys.Cryptography.EncryptResult">
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.EncryptResult.AdditionalAuthenticatedData" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.EncryptResult.Algorithm" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.EncryptResult.AuthenticationTag" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.EncryptResult.Ciphertext" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.EncryptResult.Iv" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.EncryptResult.KeyId" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Keys.Cryptography.KeyResolver" Id="T:Azure.Security.KeyVault.Keys.Cryptography.KeyResolver">
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.KeyResolver.#ctor" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.KeyResolver.#ctor(Azure.Core.TokenCredential)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.KeyResolver.#ctor(Azure.Core.TokenCredential,Azure.Security.KeyVault.Keys.Cryptography.CryptographyClientOptions)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.KeyResolver.Azure#Core#Cryptography#IKeyEncryptionKeyResolver#Resolve(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.KeyResolver.Azure#Core#Cryptography#IKeyEncryptionKeyResolver#ResolveAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.KeyResolver.Resolve(System.Uri,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.KeyResolver.ResolveAsync(System.Uri,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm" Id="T:Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm">
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm.#ctor(System.String)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm.Equals(Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm.Equals(System.Object)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm.GetHashCode" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm.op_Equality(Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm,Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm.op_Implicit(System.String)~Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm.op_Inequality(Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm,Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm.ToString" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm.A128KW" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm.A192KW" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm.A256KW" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm.Rsa15" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm.RsaOaep" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm.RsaOaep256" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient" Id="T:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient">
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.#ctor" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.#ctor(Azure.Security.KeyVault.Keys.JsonWebKey)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.Azure#Core#Cryptography#IKeyEncryptionKey#UnwrapKey(System.String,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.Azure#Core#Cryptography#IKeyEncryptionKey#UnwrapKeyAsync(System.String,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.Azure#Core#Cryptography#IKeyEncryptionKey#WrapKey(System.String,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.Azure#Core#Cryptography#IKeyEncryptionKey#WrapKeyAsync(System.String,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.Decrypt(Azure.Security.KeyVault.Keys.Cryptography.DecryptOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.Decrypt(Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm,System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.DecryptAsync(Azure.Security.KeyVault.Keys.Cryptography.DecryptOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.DecryptAsync(Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm,System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.Encrypt(Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm,System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.Encrypt(Azure.Security.KeyVault.Keys.Cryptography.EncryptOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.EncryptAsync(Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm,System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.EncryptAsync(Azure.Security.KeyVault.Keys.Cryptography.EncryptOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.Sign(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.SignAsync(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.SignData(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.SignData(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,System.IO.Stream,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.SignDataAsync(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.SignDataAsync(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,System.IO.Stream,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.UnwrapKey(Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm,System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.UnwrapKeyAsync(Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm,System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.Verify(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,System.Byte[],System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.VerifyAsync(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,System.Byte[],System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.VerifyData(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,System.Byte[],System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.VerifyData(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,System.IO.Stream,System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.VerifyDataAsync(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,System.Byte[],System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.VerifyDataAsync(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,System.IO.Stream,System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.WrapKey(Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm,System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.WrapKeyAsync(Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm,System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.KeyId" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm" Id="T:Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm">
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm.#ctor(System.String)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm.Equals(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm.Equals(System.Object)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm.GetHashCode" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm.op_Equality(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm.op_Implicit(System.String)~Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm.op_Inequality(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm)" />
      <Member Id="M:Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm.ToString" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm.ES256" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm.ES256K" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm.ES384" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm.ES512" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm.PS256" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm.PS384" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm.PS512" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm.RS256" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm.RS384" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm.RS512" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Keys.Cryptography.SignResult" Id="T:Azure.Security.KeyVault.Keys.Cryptography.SignResult">
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.SignResult.Algorithm" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.SignResult.KeyId" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.SignResult.Signature" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Keys.Cryptography.UnwrapResult" Id="T:Azure.Security.KeyVault.Keys.Cryptography.UnwrapResult">
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.UnwrapResult.Algorithm" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.UnwrapResult.Key" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.UnwrapResult.KeyId" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Keys.Cryptography.VerifyResult" Id="T:Azure.Security.KeyVault.Keys.Cryptography.VerifyResult">
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.VerifyResult.Algorithm" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.VerifyResult.IsValid" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.VerifyResult.KeyId" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Keys.Cryptography.WrapResult" Id="T:Azure.Security.KeyVault.Keys.Cryptography.WrapResult">
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.WrapResult.Algorithm" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.WrapResult.EncryptedKey" />
      <Member Id="P:Azure.Security.KeyVault.Keys.Cryptography.WrapResult.KeyId" />
    </Type>
  </Namespace>
  <Namespace Name="Azure.Security.KeyVault.Secrets">
    <Type Name="Azure.Security.KeyVault.Secrets.DeletedSecret" Id="T:Azure.Security.KeyVault.Secrets.DeletedSecret">
      <Member Id="P:Azure.Security.KeyVault.Secrets.DeletedSecret.DeletedOn" />
      <Member Id="P:Azure.Security.KeyVault.Secrets.DeletedSecret.RecoveryId" />
      <Member Id="P:Azure.Security.KeyVault.Secrets.DeletedSecret.ScheduledPurgeDate" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Secrets.DeleteSecretOperation" Id="T:Azure.Security.KeyVault.Secrets.DeleteSecretOperation">
      <Member Id="M:Azure.Security.KeyVault.Secrets.DeleteSecretOperation.GetRawResponse" />
      <Member Id="M:Azure.Security.KeyVault.Secrets.DeleteSecretOperation.UpdateStatus(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Secrets.DeleteSecretOperation.UpdateStatusAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Secrets.DeleteSecretOperation.WaitForCompletionAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Secrets.DeleteSecretOperation.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="P:Azure.Security.KeyVault.Secrets.DeleteSecretOperation.HasCompleted" />
      <Member Id="P:Azure.Security.KeyVault.Secrets.DeleteSecretOperation.HasValue" />
      <Member Id="P:Azure.Security.KeyVault.Secrets.DeleteSecretOperation.Id" />
      <Member Id="P:Azure.Security.KeyVault.Secrets.DeleteSecretOperation.Value" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Secrets.KeyVaultSecret" Id="T:Azure.Security.KeyVault.Secrets.KeyVaultSecret">
      <Member Id="M:Azure.Security.KeyVault.Secrets.KeyVaultSecret.#ctor(System.String,System.String)" />
      <Member Id="P:Azure.Security.KeyVault.Secrets.KeyVaultSecret.Id" />
      <Member Id="P:Azure.Security.KeyVault.Secrets.KeyVaultSecret.Name" />
      <Member Id="P:Azure.Security.KeyVault.Secrets.KeyVaultSecret.Properties" />
      <Member Id="P:Azure.Security.KeyVault.Secrets.KeyVaultSecret.Value" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Secrets.KeyVaultSecretIdentifier" Id="T:Azure.Security.KeyVault.Secrets.KeyVaultSecretIdentifier">
      <Member Id="M:Azure.Security.KeyVault.Secrets.KeyVaultSecretIdentifier.Parse(System.Uri)" />
      <Member Id="M:Azure.Security.KeyVault.Secrets.KeyVaultSecretIdentifier.TryParse(System.Uri,Azure.Security.KeyVault.Secrets.KeyVaultSecretIdentifier@)" />
      <Member Id="P:Azure.Security.KeyVault.Secrets.KeyVaultSecretIdentifier.Name" />
      <Member Id="P:Azure.Security.KeyVault.Secrets.KeyVaultSecretIdentifier.SourceId" />
      <Member Id="P:Azure.Security.KeyVault.Secrets.KeyVaultSecretIdentifier.VaultUri" />
      <Member Id="P:Azure.Security.KeyVault.Secrets.KeyVaultSecretIdentifier.Version" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Secrets.RecoverDeletedSecretOperation" Id="T:Azure.Security.KeyVault.Secrets.RecoverDeletedSecretOperation">
      <Member Id="M:Azure.Security.KeyVault.Secrets.RecoverDeletedSecretOperation.GetRawResponse" />
      <Member Id="M:Azure.Security.KeyVault.Secrets.RecoverDeletedSecretOperation.UpdateStatus(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Secrets.RecoverDeletedSecretOperation.UpdateStatusAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Secrets.RecoverDeletedSecretOperation.WaitForCompletionAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Secrets.RecoverDeletedSecretOperation.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="P:Azure.Security.KeyVault.Secrets.RecoverDeletedSecretOperation.HasCompleted" />
      <Member Id="P:Azure.Security.KeyVault.Secrets.RecoverDeletedSecretOperation.HasValue" />
      <Member Id="P:Azure.Security.KeyVault.Secrets.RecoverDeletedSecretOperation.Id" />
      <Member Id="P:Azure.Security.KeyVault.Secrets.RecoverDeletedSecretOperation.Value" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Secrets.SecretClient" Id="T:Azure.Security.KeyVault.Secrets.SecretClient">
      <Member Id="M:Azure.Security.KeyVault.Secrets.SecretClient.#ctor" />
      <Member Id="M:Azure.Security.KeyVault.Secrets.SecretClient.#ctor(System.Uri,Azure.Core.TokenCredential)" />
      <Member Id="M:Azure.Security.KeyVault.Secrets.SecretClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Security.KeyVault.Secrets.SecretClientOptions)" />
      <Member Id="M:Azure.Security.KeyVault.Secrets.SecretClient.BackupSecret(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Secrets.SecretClient.BackupSecretAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Secrets.SecretClient.GetDeletedSecret(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Secrets.SecretClient.GetDeletedSecretAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Secrets.SecretClient.GetDeletedSecrets(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Secrets.SecretClient.GetDeletedSecretsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Secrets.SecretClient.GetPropertiesOfSecrets(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Secrets.SecretClient.GetPropertiesOfSecretsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Secrets.SecretClient.GetPropertiesOfSecretVersions(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Secrets.SecretClient.GetPropertiesOfSecretVersionsAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Secrets.SecretClient.GetSecret(System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Secrets.SecretClient.GetSecretAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Secrets.SecretClient.PurgeDeletedSecret(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Secrets.SecretClient.PurgeDeletedSecretAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Secrets.SecretClient.RestoreSecretBackup(System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Secrets.SecretClient.RestoreSecretBackupAsync(System.Byte[],System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Secrets.SecretClient.SetSecret(Azure.Security.KeyVault.Secrets.KeyVaultSecret,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Secrets.SecretClient.SetSecret(System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Secrets.SecretClient.SetSecretAsync(Azure.Security.KeyVault.Secrets.KeyVaultSecret,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Secrets.SecretClient.SetSecretAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Secrets.SecretClient.StartDeleteSecret(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Secrets.SecretClient.StartDeleteSecretAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Secrets.SecretClient.StartRecoverDeletedSecret(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Secrets.SecretClient.StartRecoverDeletedSecretAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Secrets.SecretClient.UpdateSecretProperties(Azure.Security.KeyVault.Secrets.SecretProperties,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Security.KeyVault.Secrets.SecretClient.UpdateSecretPropertiesAsync(Azure.Security.KeyVault.Secrets.SecretProperties,System.Threading.CancellationToken)" />
      <Member Id="P:Azure.Security.KeyVault.Secrets.SecretClient.VaultUri" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Secrets.SecretClientOptions" Id="T:Azure.Security.KeyVault.Secrets.SecretClientOptions">
      <Member Id="M:Azure.Security.KeyVault.Secrets.SecretClientOptions.#ctor(Azure.Security.KeyVault.Secrets.SecretClientOptions.ServiceVersion)" />
      <Member Id="P:Azure.Security.KeyVault.Secrets.SecretClientOptions.Version" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Secrets.SecretClientOptions/ServiceVersion" Id="T:Azure.Security.KeyVault.Secrets.SecretClientOptions.ServiceVersion">
      <Member Id="F:Azure.Security.KeyVault.Secrets.SecretClientOptions.ServiceVersion.V7_0" />
      <Member Id="F:Azure.Security.KeyVault.Secrets.SecretClientOptions.ServiceVersion.V7_1" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Secrets.SecretModelFactory" Id="T:Azure.Security.KeyVault.Secrets.SecretModelFactory">
      <Member Id="M:Azure.Security.KeyVault.Secrets.SecretModelFactory.DeletedSecret(Azure.Security.KeyVault.Secrets.SecretProperties,System.String,System.Uri,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <Member Id="M:Azure.Security.KeyVault.Secrets.SecretModelFactory.KeyVaultSecret(Azure.Security.KeyVault.Secrets.SecretProperties,System.String)" />
      <Member Id="M:Azure.Security.KeyVault.Secrets.SecretModelFactory.SecretProperties(System.Uri,System.Uri,System.String,System.String,System.Boolean,System.Uri,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String)" />
      <Member Id="M:Azure.Security.KeyVault.Secrets.SecretModelFactory.SecretProperties(System.Uri,System.Uri,System.String,System.String,System.Boolean,System.Uri,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,System.Nullable{System.Int32})" />
    </Type>
    <Type Name="Azure.Security.KeyVault.Secrets.SecretProperties" Id="T:Azure.Security.KeyVault.Secrets.SecretProperties">
      <Member Id="M:Azure.Security.KeyVault.Secrets.SecretProperties.#ctor(System.String)" />
      <Member Id="M:Azure.Security.KeyVault.Secrets.SecretProperties.#ctor(System.Uri)" />
      <Member Id="P:Azure.Security.KeyVault.Secrets.SecretProperties.ContentType" />
      <Member Id="P:Azure.Security.KeyVault.Secrets.SecretProperties.CreatedOn" />
      <Member Id="P:Azure.Security.KeyVault.Secrets.SecretProperties.Enabled" />
      <Member Id="P:Azure.Security.KeyVault.Secrets.SecretProperties.ExpiresOn" />
      <Member Id="P:Azure.Security.KeyVault.Secrets.SecretProperties.Id" />
      <Member Id="P:Azure.Security.KeyVault.Secrets.SecretProperties.KeyId" />
      <Member Id="P:Azure.Security.KeyVault.Secrets.SecretProperties.Managed" />
      <Member Id="P:Azure.Security.KeyVault.Secrets.SecretProperties.Name" />
      <Member Id="P:Azure.Security.KeyVault.Secrets.SecretProperties.NotBefore" />
      <Member Id="P:Azure.Security.KeyVault.Secrets.SecretProperties.RecoverableDays" />
      <Member Id="P:Azure.Security.KeyVault.Secrets.SecretProperties.RecoveryLevel" />
      <Member Id="P:Azure.Security.KeyVault.Secrets.SecretProperties.Tags" />
      <Member Id="P:Azure.Security.KeyVault.Secrets.SecretProperties.UpdatedOn" />
      <Member Id="P:Azure.Security.KeyVault.Secrets.SecretProperties.VaultUri" />
      <Member Id="P:Azure.Security.KeyVault.Secrets.SecretProperties.Version" />
    </Type>
  </Namespace>
  <Namespace Name="Azure.Storage.Blobs">
    <Type Name="Azure.Storage.Blobs.BlobClient" Id="T:Azure.Storage.Blobs.BlobClient">
      <Member Id="M:Azure.Storage.Blobs.BlobClient.#ctor" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.#ctor(System.String,System.String,System.String)" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.#ctor(System.String,System.String,System.String,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.#ctor(System.Uri,Azure.AzureSasCredential,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.#ctor(System.Uri,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.Upload(System.IO.Stream)" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.Upload(System.IO.Stream,Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.IProgress{System.Int64},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.Upload(System.IO.Stream,Azure.Storage.Blobs.Models.BlobUploadOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.Upload(System.IO.Stream,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.Upload(System.IO.Stream,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.Upload(System.String)" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.Upload(System.String,Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.IProgress{System.Int64},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.Upload(System.String,Azure.Storage.Blobs.Models.BlobUploadOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.Upload(System.String,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.Upload(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.IO.Stream)" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.IO.Stream,Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.IProgress{System.Int64},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.IO.Stream,Azure.Storage.Blobs.Models.BlobUploadOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.IO.Stream,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.IO.Stream,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.String)" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.String,Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.IProgress{System.Int64},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.String,Azure.Storage.Blobs.Models.BlobUploadOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.String,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.WithClientSideEncryptionOptionsCore(Azure.Storage.ClientSideEncryptionOptions)" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.WithSnapshot(System.String)" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.WithVersion(System.String)" />
    </Type>
    <Type Name="Azure.Storage.Blobs.BlobClientOptions" Id="T:Azure.Storage.Blobs.BlobClientOptions">
      <Member Id="M:Azure.Storage.Blobs.BlobClientOptions.#ctor(Azure.Storage.Blobs.BlobClientOptions.ServiceVersion)" />
      <Member Id="P:Azure.Storage.Blobs.BlobClientOptions.CustomerProvidedKey" />
      <Member Id="P:Azure.Storage.Blobs.BlobClientOptions.EncryptionScope" />
      <Member Id="P:Azure.Storage.Blobs.BlobClientOptions.GeoRedundantSecondaryUri" />
      <Member Id="P:Azure.Storage.Blobs.BlobClientOptions.Version" />
    </Type>
    <Type Name="Azure.Storage.Blobs.BlobClientOptions/ServiceVersion" Id="T:Azure.Storage.Blobs.BlobClientOptions.ServiceVersion">
      <Member Id="F:Azure.Storage.Blobs.BlobClientOptions.ServiceVersion.V2019_02_02" />
      <Member Id="F:Azure.Storage.Blobs.BlobClientOptions.ServiceVersion.V2019_07_07" />
      <Member Id="F:Azure.Storage.Blobs.BlobClientOptions.ServiceVersion.V2019_12_12" />
      <Member Id="F:Azure.Storage.Blobs.BlobClientOptions.ServiceVersion.V2020_02_10" />
      <Member Id="F:Azure.Storage.Blobs.BlobClientOptions.ServiceVersion.V2020_04_08" />
    </Type>
    <Type Name="Azure.Storage.Blobs.BlobContainerClient" Id="T:Azure.Storage.Blobs.BlobContainerClient">
      <Member Id="F:Azure.Storage.Blobs.BlobContainerClient.LogsBlobContainerName" />
      <Member Id="F:Azure.Storage.Blobs.BlobContainerClient.RootBlobContainerName" />
      <Member Id="F:Azure.Storage.Blobs.BlobContainerClient.WebBlobContainerName" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.#ctor" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.#ctor(System.String,System.String)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.#ctor(System.String,System.String,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.#ctor(System.Uri,Azure.AzureSasCredential,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.#ctor(System.Uri,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.Create(Azure.Storage.Blobs.Models.PublicAccessType,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobContainerEncryptionScopeOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.Create(Azure.Storage.Blobs.Models.PublicAccessType,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.CreateAsync(Azure.Storage.Blobs.Models.PublicAccessType,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobContainerEncryptionScopeOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.CreateAsync(Azure.Storage.Blobs.Models.PublicAccessType,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.CreateClient(System.Uri,Azure.Storage.Blobs.BlobClientOptions,Azure.Core.Pipeline.HttpPipeline)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.CreateIfNotExists(Azure.Storage.Blobs.Models.PublicAccessType,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobContainerEncryptionScopeOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.CreateIfNotExists(Azure.Storage.Blobs.Models.PublicAccessType,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.CreateIfNotExistsAsync(Azure.Storage.Blobs.Models.PublicAccessType,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobContainerEncryptionScopeOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.CreateIfNotExistsAsync(Azure.Storage.Blobs.Models.PublicAccessType,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.Delete(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.DeleteAsync(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.DeleteBlob(System.String,Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.DeleteBlobAsync(System.String,Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.DeleteBlobIfExists(System.String,Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.DeleteBlobIfExistsAsync(System.String,Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.DeleteIfExists(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.DeleteIfExistsAsync(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.Exists(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.ExistsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.GenerateSasUri(Azure.Storage.Sas.BlobContainerSasPermissions,System.DateTimeOffset)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.GenerateSasUri(Azure.Storage.Sas.BlobSasBuilder)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.GetAccessPolicy(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.GetAccessPolicyAsync(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.GetAppendBlobClientCore(System.String)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.GetBlobBaseClientCore(System.String)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.GetBlobClient(System.String)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.GetBlobLeaseClientCore(System.String)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.GetBlobs(Azure.Storage.Blobs.Models.BlobTraits,Azure.Storage.Blobs.Models.BlobStates,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.GetBlobsAsync(Azure.Storage.Blobs.Models.BlobTraits,Azure.Storage.Blobs.Models.BlobStates,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.GetBlobsByHierarchy(Azure.Storage.Blobs.Models.BlobTraits,Azure.Storage.Blobs.Models.BlobStates,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.GetBlobsByHierarchyAsync(Azure.Storage.Blobs.Models.BlobTraits,Azure.Storage.Blobs.Models.BlobStates,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.GetBlockBlobClientCore(System.String)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.GetPageBlobClientCore(System.String)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.GetParentBlobServiceClientCore" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.GetProperties(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.GetPropertiesAsync(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.SetAccessPolicy(Azure.Storage.Blobs.Models.PublicAccessType,System.Collections.Generic.IEnumerable{Azure.Storage.Blobs.Models.BlobSignedIdentifier},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.SetAccessPolicyAsync(Azure.Storage.Blobs.Models.PublicAccessType,System.Collections.Generic.IEnumerable{Azure.Storage.Blobs.Models.BlobSignedIdentifier},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.SetMetadata(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.SetMetadataAsync(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.UploadBlob(System.String,System.IO.Stream,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.UploadBlobAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)" />
      <Member Id="P:Azure.Storage.Blobs.BlobContainerClient.AccountName" />
      <Member Id="P:Azure.Storage.Blobs.BlobContainerClient.CanGenerateSasUri" />
      <Member Id="P:Azure.Storage.Blobs.BlobContainerClient.Name" />
      <Member Id="P:Azure.Storage.Blobs.BlobContainerClient.Uri" />
    </Type>
    <Type Name="Azure.Storage.Blobs.BlobServiceClient" Id="T:Azure.Storage.Blobs.BlobServiceClient">
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.#ctor" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.#ctor(System.String)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.#ctor(System.String,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.#ctor(System.Uri,Azure.AzureSasCredential,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.#ctor(System.Uri,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.CreateBlobContainer(System.String,Azure.Storage.Blobs.Models.PublicAccessType,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.CreateBlobContainerAsync(System.String,Azure.Storage.Blobs.Models.PublicAccessType,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.CreateClient(System.Uri,Azure.Storage.Blobs.BlobClientOptions,Azure.Core.Pipeline.HttpPipelinePolicy,Azure.Core.Pipeline.HttpPipeline)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.DeleteBlobContainer(System.String,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.DeleteBlobContainerAsync(System.String,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.FindBlobsByTags(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.FindBlobsByTagsAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.GenerateAccountSasUri(Azure.Storage.Sas.AccountSasBuilder)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.GenerateAccountSasUri(Azure.Storage.Sas.AccountSasPermissions,System.DateTimeOffset,Azure.Storage.Sas.AccountSasResourceTypes)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.GetAccountInfo(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.GetAccountInfoAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.GetAuthenticationPolicy(Azure.Storage.Blobs.BlobServiceClient)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.GetBlobContainerClient(System.String)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.GetBlobContainers(Azure.Storage.Blobs.Models.BlobContainerTraits,Azure.Storage.Blobs.Models.BlobContainerStates,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.GetBlobContainers(Azure.Storage.Blobs.Models.BlobContainerTraits,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.GetBlobContainersAsync(Azure.Storage.Blobs.Models.BlobContainerTraits,Azure.Storage.Blobs.Models.BlobContainerStates,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.GetBlobContainersAsync(Azure.Storage.Blobs.Models.BlobContainerTraits,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.GetClientOptions(Azure.Storage.Blobs.BlobServiceClient)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.GetHttpPipeline(Azure.Storage.Blobs.BlobServiceClient)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.GetProperties(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.GetPropertiesAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.GetStatistics(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.GetStatisticsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.GetUserDelegationKey(System.Nullable{System.DateTimeOffset},System.DateTimeOffset,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.GetUserDelegationKeyAsync(System.Nullable{System.DateTimeOffset},System.DateTimeOffset,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.SetProperties(Azure.Storage.Blobs.Models.BlobServiceProperties,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.SetPropertiesAsync(Azure.Storage.Blobs.Models.BlobServiceProperties,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.UndeleteBlobContainer(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.UndeleteBlobContainerAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="P:Azure.Storage.Blobs.BlobServiceClient.AccountName" />
      <Member Id="P:Azure.Storage.Blobs.BlobServiceClient.CanGenerateAccountSasUri" />
      <Member Id="P:Azure.Storage.Blobs.BlobServiceClient.Uri" />
    </Type>
    <Type Name="Azure.Storage.Blobs.BlobUriBuilder" Id="T:Azure.Storage.Blobs.BlobUriBuilder">
      <Member Id="M:Azure.Storage.Blobs.BlobUriBuilder.#ctor(System.Uri)" />
      <Member Id="M:Azure.Storage.Blobs.BlobUriBuilder.ToString" />
      <Member Id="M:Azure.Storage.Blobs.BlobUriBuilder.ToUri" />
      <Member Id="P:Azure.Storage.Blobs.BlobUriBuilder.AccountName" />
      <Member Id="P:Azure.Storage.Blobs.BlobUriBuilder.BlobContainerName" />
      <Member Id="P:Azure.Storage.Blobs.BlobUriBuilder.BlobName" />
      <Member Id="P:Azure.Storage.Blobs.BlobUriBuilder.Host" />
      <Member Id="P:Azure.Storage.Blobs.BlobUriBuilder.Port" />
      <Member Id="P:Azure.Storage.Blobs.BlobUriBuilder.Query" />
      <Member Id="P:Azure.Storage.Blobs.BlobUriBuilder.Sas" />
      <Member Id="P:Azure.Storage.Blobs.BlobUriBuilder.Scheme" />
      <Member Id="P:Azure.Storage.Blobs.BlobUriBuilder.Snapshot" />
      <Member Id="P:Azure.Storage.Blobs.BlobUriBuilder.VersionId" />
    </Type>
  </Namespace>
  <Namespace Name="Azure.Storage.Blobs.Models">
    <Type Name="Azure.Storage.Blobs.Models.AccessTier" Id="T:Azure.Storage.Blobs.Models.AccessTier">
      <Member Id="M:Azure.Storage.Blobs.Models.AccessTier.#ctor(System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Models.AccessTier.Equals(Azure.Storage.Blobs.Models.AccessTier)" />
      <Member Id="M:Azure.Storage.Blobs.Models.AccessTier.Equals(System.Object)" />
      <Member Id="M:Azure.Storage.Blobs.Models.AccessTier.GetHashCode" />
      <Member Id="M:Azure.Storage.Blobs.Models.AccessTier.op_Equality(Azure.Storage.Blobs.Models.AccessTier,Azure.Storage.Blobs.Models.AccessTier)" />
      <Member Id="M:Azure.Storage.Blobs.Models.AccessTier.op_Implicit(System.String)~Azure.Storage.Blobs.Models.AccessTier" />
      <Member Id="M:Azure.Storage.Blobs.Models.AccessTier.op_Inequality(Azure.Storage.Blobs.Models.AccessTier,Azure.Storage.Blobs.Models.AccessTier)" />
      <Member Id="M:Azure.Storage.Blobs.Models.AccessTier.ToString" />
      <Member Id="P:Azure.Storage.Blobs.Models.AccessTier.Archive" />
      <Member Id="P:Azure.Storage.Blobs.Models.AccessTier.Cool" />
      <Member Id="P:Azure.Storage.Blobs.Models.AccessTier.Hot" />
      <Member Id="P:Azure.Storage.Blobs.Models.AccessTier.P10" />
      <Member Id="P:Azure.Storage.Blobs.Models.AccessTier.P15" />
      <Member Id="P:Azure.Storage.Blobs.Models.AccessTier.P20" />
      <Member Id="P:Azure.Storage.Blobs.Models.AccessTier.P30" />
      <Member Id="P:Azure.Storage.Blobs.Models.AccessTier.P4" />
      <Member Id="P:Azure.Storage.Blobs.Models.AccessTier.P40" />
      <Member Id="P:Azure.Storage.Blobs.Models.AccessTier.P50" />
      <Member Id="P:Azure.Storage.Blobs.Models.AccessTier.P6" />
      <Member Id="P:Azure.Storage.Blobs.Models.AccessTier.P60" />
      <Member Id="P:Azure.Storage.Blobs.Models.AccessTier.P70" />
      <Member Id="P:Azure.Storage.Blobs.Models.AccessTier.P80" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.AccountInfo" Id="T:Azure.Storage.Blobs.Models.AccountInfo">
      <Member Id="P:Azure.Storage.Blobs.Models.AccountInfo.AccountKind" />
      <Member Id="P:Azure.Storage.Blobs.Models.AccountInfo.IsHierarchicalNamespaceEnabled" />
      <Member Id="P:Azure.Storage.Blobs.Models.AccountInfo.SkuName" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.AccountKind" Id="T:Azure.Storage.Blobs.Models.AccountKind">
      <Member Id="F:Azure.Storage.Blobs.Models.AccountKind.BlobStorage" />
      <Member Id="F:Azure.Storage.Blobs.Models.AccountKind.BlockBlobStorage" />
      <Member Id="F:Azure.Storage.Blobs.Models.AccountKind.FileStorage" />
      <Member Id="F:Azure.Storage.Blobs.Models.AccountKind.Storage" />
      <Member Id="F:Azure.Storage.Blobs.Models.AccountKind.StorageV2" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.AppendBlobCreateOptions" Id="T:Azure.Storage.Blobs.Models.AppendBlobCreateOptions">
      <Member Id="M:Azure.Storage.Blobs.Models.AppendBlobCreateOptions.#ctor" />
      <Member Id="P:Azure.Storage.Blobs.Models.AppendBlobCreateOptions.Conditions" />
      <Member Id="P:Azure.Storage.Blobs.Models.AppendBlobCreateOptions.HttpHeaders" />
      <Member Id="P:Azure.Storage.Blobs.Models.AppendBlobCreateOptions.Metadata" />
      <Member Id="P:Azure.Storage.Blobs.Models.AppendBlobCreateOptions.Tags" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.AppendBlobOpenWriteOptions" Id="T:Azure.Storage.Blobs.Models.AppendBlobOpenWriteOptions">
      <Member Id="M:Azure.Storage.Blobs.Models.AppendBlobOpenWriteOptions.#ctor" />
      <Member Id="P:Azure.Storage.Blobs.Models.AppendBlobOpenWriteOptions.BufferSize" />
      <Member Id="P:Azure.Storage.Blobs.Models.AppendBlobOpenWriteOptions.OpenConditions" />
      <Member Id="P:Azure.Storage.Blobs.Models.AppendBlobOpenWriteOptions.ProgressHandler" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.AppendBlobRequestConditions" Id="T:Azure.Storage.Blobs.Models.AppendBlobRequestConditions">
      <Member Id="M:Azure.Storage.Blobs.Models.AppendBlobRequestConditions.#ctor" />
      <Member Id="P:Azure.Storage.Blobs.Models.AppendBlobRequestConditions.IfAppendPositionEqual" />
      <Member Id="P:Azure.Storage.Blobs.Models.AppendBlobRequestConditions.IfMaxSizeLessThanOrEqual" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.ArchiveStatus" Id="T:Azure.Storage.Blobs.Models.ArchiveStatus">
      <Member Id="F:Azure.Storage.Blobs.Models.ArchiveStatus.RehydratePendingToCool" />
      <Member Id="F:Azure.Storage.Blobs.Models.ArchiveStatus.RehydratePendingToHot" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobAccessPolicy" Id="T:Azure.Storage.Blobs.Models.BlobAccessPolicy">
      <Member Id="M:Azure.Storage.Blobs.Models.BlobAccessPolicy.#ctor" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobAccessPolicy.ExpiresOn" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobAccessPolicy.Permissions" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobAccessPolicy.PolicyExpiresOn" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobAccessPolicy.PolicyStartsOn" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobAccessPolicy.StartsOn" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobAnalyticsLogging" Id="T:Azure.Storage.Blobs.Models.BlobAnalyticsLogging">
      <Member Id="M:Azure.Storage.Blobs.Models.BlobAnalyticsLogging.#ctor" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobAnalyticsLogging.Delete" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobAnalyticsLogging.Read" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobAnalyticsLogging.RetentionPolicy" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobAnalyticsLogging.Version" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobAnalyticsLogging.Write" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobAppendInfo" Id="T:Azure.Storage.Blobs.Models.BlobAppendInfo">
      <Member Id="P:Azure.Storage.Blobs.Models.BlobAppendInfo.BlobAppendOffset" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobAppendInfo.BlobCommittedBlockCount" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobAppendInfo.ContentCrc64" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobAppendInfo.ContentHash" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobAppendInfo.EncryptionKeySha256" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobAppendInfo.EncryptionScope" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobAppendInfo.ETag" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobAppendInfo.IsServerEncrypted" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobAppendInfo.LastModified" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobBlock" Id="T:Azure.Storage.Blobs.Models.BlobBlock">
      <Member Id="M:Azure.Storage.Blobs.Models.BlobBlock.Equals(Azure.Storage.Blobs.Models.BlobBlock)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobBlock.Equals(System.Object)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobBlock.GetHashCode" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobBlock.Name" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobBlock.Size" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobContainerAccessPolicy" Id="T:Azure.Storage.Blobs.Models.BlobContainerAccessPolicy">
      <Member Id="M:Azure.Storage.Blobs.Models.BlobContainerAccessPolicy.#ctor" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContainerAccessPolicy.BlobPublicAccess" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContainerAccessPolicy.ETag" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContainerAccessPolicy.LastModified" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContainerAccessPolicy.SignedIdentifiers" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobContainerEncryptionScopeOptions" Id="T:Azure.Storage.Blobs.Models.BlobContainerEncryptionScopeOptions">
      <Member Id="M:Azure.Storage.Blobs.Models.BlobContainerEncryptionScopeOptions.#ctor" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContainerEncryptionScopeOptions.DefaultEncryptionScope" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContainerEncryptionScopeOptions.PreventEncryptionScopeOverride" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobContainerInfo" Id="T:Azure.Storage.Blobs.Models.BlobContainerInfo">
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContainerInfo.ETag" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContainerInfo.LastModified" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobContainerItem" Id="T:Azure.Storage.Blobs.Models.BlobContainerItem">
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContainerItem.IsDeleted" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContainerItem.Name" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContainerItem.Properties" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContainerItem.VersionId" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobContainerProperties" Id="T:Azure.Storage.Blobs.Models.BlobContainerProperties">
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContainerProperties.DefaultEncryptionScope" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContainerProperties.DeletedOn" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContainerProperties.ETag" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContainerProperties.HasImmutabilityPolicy" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContainerProperties.HasLegalHold" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContainerProperties.LastModified" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContainerProperties.LeaseDuration" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContainerProperties.LeaseState" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContainerProperties.LeaseStatus" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContainerProperties.Metadata" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContainerProperties.PreventEncryptionScopeOverride" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContainerProperties.PublicAccess" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContainerProperties.RemainingRetentionDays" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobContainerStates" Id="T:Azure.Storage.Blobs.Models.BlobContainerStates">
      <Member Id="F:Azure.Storage.Blobs.Models.BlobContainerStates.Deleted" />
      <Member Id="F:Azure.Storage.Blobs.Models.BlobContainerStates.None" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobContainerTraits" Id="T:Azure.Storage.Blobs.Models.BlobContainerTraits">
      <Member Id="F:Azure.Storage.Blobs.Models.BlobContainerTraits.Metadata" />
      <Member Id="F:Azure.Storage.Blobs.Models.BlobContainerTraits.None" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobContentInfo" Id="T:Azure.Storage.Blobs.Models.BlobContentInfo">
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContentInfo.BlobSequenceNumber" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContentInfo.ContentHash" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContentInfo.EncryptionKeySha256" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContentInfo.EncryptionScope" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContentInfo.ETag" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContentInfo.LastModified" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContentInfo.VersionId" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobCopyFromUriOptions" Id="T:Azure.Storage.Blobs.Models.BlobCopyFromUriOptions">
      <Member Id="M:Azure.Storage.Blobs.Models.BlobCopyFromUriOptions.#ctor" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobCopyFromUriOptions.AccessTier" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobCopyFromUriOptions.DestinationConditions" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobCopyFromUriOptions.Metadata" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobCopyFromUriOptions.RehydratePriority" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobCopyFromUriOptions.ShouldSealDestination" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobCopyFromUriOptions.SourceConditions" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobCopyFromUriOptions.Tags" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobCopyInfo" Id="T:Azure.Storage.Blobs.Models.BlobCopyInfo">
      <Member Id="P:Azure.Storage.Blobs.Models.BlobCopyInfo.CopyId" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobCopyInfo.CopyStatus" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobCopyInfo.ETag" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobCopyInfo.LastModified" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobCopyInfo.VersionId" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobCorsRule" Id="T:Azure.Storage.Blobs.Models.BlobCorsRule">
      <Member Id="M:Azure.Storage.Blobs.Models.BlobCorsRule.#ctor" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobCorsRule.AllowedHeaders" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobCorsRule.AllowedMethods" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobCorsRule.AllowedOrigins" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobCorsRule.ExposedHeaders" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobCorsRule.MaxAgeInSeconds" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobDownloadDetails" Id="T:Azure.Storage.Blobs.Models.BlobDownloadDetails">
      <Member Id="M:Azure.Storage.Blobs.Models.BlobDownloadDetails.#ctor" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.AcceptRanges" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.BlobCommittedBlockCount" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.BlobContentHash" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.BlobSequenceNumber" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.CacheControl" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.ContentDisposition" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.ContentEncoding" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.ContentLanguage" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.ContentRange" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.CopyCompletedOn" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.CopyId" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.CopyProgress" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.CopySource" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.CopyStatus" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.CopyStatusDescription" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.EncryptionKeySha256" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.EncryptionScope" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.ETag" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.IsSealed" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.IsServerEncrypted" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.LastAccessed" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.LastModified" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.LeaseDuration" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.LeaseState" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.LeaseStatus" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.Metadata" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.ObjectReplicationDestinationPolicyId" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.ObjectReplicationSourceProperties" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.TagCount" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.VersionId" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobDownloadInfo" Id="T:Azure.Storage.Blobs.Models.BlobDownloadInfo">
      <Member Id="M:Azure.Storage.Blobs.Models.BlobDownloadInfo.Dispose" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadInfo.BlobType" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadInfo.Content" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadInfo.ContentHash" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadInfo.ContentLength" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadInfo.ContentType" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadInfo.Details" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobErrorCode" Id="T:Azure.Storage.Blobs.Models.BlobErrorCode">
      <Member Id="M:Azure.Storage.Blobs.Models.BlobErrorCode.#ctor(System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobErrorCode.Equals(Azure.Storage.Blobs.Models.BlobErrorCode)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobErrorCode.Equals(System.Object)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobErrorCode.GetHashCode" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobErrorCode.op_Equality(Azure.Storage.Blobs.Models.BlobErrorCode,Azure.Storage.Blobs.Models.BlobErrorCode)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobErrorCode.op_Implicit(System.String)~Azure.Storage.Blobs.Models.BlobErrorCode" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobErrorCode.op_Inequality(Azure.Storage.Blobs.Models.BlobErrorCode,Azure.Storage.Blobs.Models.BlobErrorCode)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobErrorCode.ToString" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.AccountAlreadyExists" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.AccountBeingCreated" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.AccountIsDisabled" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.AppendPositionConditionNotMet" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.AuthenticationFailed" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.AuthorizationFailure" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.AuthorizationPermissionMismatch" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.AuthorizationProtocolMismatch" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.AuthorizationResourceTypeMismatch" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.AuthorizationServiceMismatch" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.AuthorizationSourceIPMismatch" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.BlobAlreadyExists" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.BlobArchived" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.BlobBeingRehydrated" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.BlobImmutableDueToPolicy" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.BlobNotArchived" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.BlobNotFound" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.BlobOverwritten" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.BlobTierInadequateForContentLength" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.BlockCountExceedsLimit" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.BlockListTooLong" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.CannotChangeToLowerTier" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.CannotVerifyCopySource" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.ConditionHeadersNotSupported" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.ConditionNotMet" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.ContainerAlreadyExists" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.ContainerBeingDeleted" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.ContainerDisabled" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.ContainerNotFound" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.ContentLengthLargerThanTierLimit" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.CopyAcrossAccountsNotSupported" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.CopyIdMismatch" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.EmptyMetadataKey" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.FeatureVersionMismatch" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.IncrementalCopyBlobMismatch" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.IncrementalCopyOfEralierVersionSnapshotNotAllowed" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.IncrementalCopySourceMustBeSnapshot" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InfiniteLeaseDurationRequired" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InsufficientAccountPermissions" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InternalError" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidAuthenticationInfo" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidBlobOrBlock" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidBlobTier" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidBlobType" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidBlockId" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidBlockList" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidHeaderValue" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidHttpVerb" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidInput" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidMd5" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidMetadata" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidOperation" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidPageRange" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidQueryParameterValue" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidRange" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidResourceName" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidSourceBlobType" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidSourceBlobUrl" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidUri" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidVersionForPageBlobOperation" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidXmlDocument" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidXmlNodeValue" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.LeaseAlreadyBroken" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.LeaseAlreadyPresent" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.LeaseIdMismatchWithBlobOperation" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.LeaseIdMismatchWithContainerOperation" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.LeaseIdMismatchWithLeaseOperation" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.LeaseIdMissing" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.LeaseIsBreakingAndCannotBeAcquired" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.LeaseIsBreakingAndCannotBeChanged" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.LeaseIsBrokenAndCannotBeRenewed" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.LeaseLost" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.LeaseNotPresentWithBlobOperation" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.LeaseNotPresentWithContainerOperation" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.LeaseNotPresentWithLeaseOperation" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.MaxBlobSizeConditionNotMet" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.Md5Mismatch" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.MetadataTooLarge" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.MissingContentLengthHeader" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.MissingRequiredHeader" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.MissingRequiredQueryParameter" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.MissingRequiredXmlNode" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.MultipleConditionHeadersNotSupported" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.NoAuthenticationInformation" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.NoPendingCopyOperation" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.OperationNotAllowedOnIncrementalCopyBlob" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.OperationTimedOut" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.OutOfRangeInput" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.OutOfRangeQueryParameterValue" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.PendingCopyOperation" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.PreviousSnapshotCannotBeNewer" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.PreviousSnapshotNotFound" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.PreviousSnapshotOperationNotSupported" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.RequestBodyTooLarge" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.RequestUrlFailedToParse" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.ResourceAlreadyExists" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.ResourceNotFound" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.ResourceTypeMismatch" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.SequenceNumberConditionNotMet" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.SequenceNumberIncrementTooLarge" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.ServerBusy" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.SnaphotOperationRateExceeded" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.SnapshotCountExceeded" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.SnapshotsPresent" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.SourceConditionNotMet" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.SystemInUse" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.TargetConditionNotMet" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.UnauthorizedBlobOverwrite" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.UnsupportedHeader" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.UnsupportedHttpVerb" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.UnsupportedQueryParameter" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.UnsupportedXmlNode" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobGeoReplication" Id="T:Azure.Storage.Blobs.Models.BlobGeoReplication">
      <Member Id="P:Azure.Storage.Blobs.Models.BlobGeoReplication.LastSyncedOn" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobGeoReplication.Status" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobGeoReplicationStatus" Id="T:Azure.Storage.Blobs.Models.BlobGeoReplicationStatus">
      <Member Id="F:Azure.Storage.Blobs.Models.BlobGeoReplicationStatus.Bootstrap" />
      <Member Id="F:Azure.Storage.Blobs.Models.BlobGeoReplicationStatus.Live" />
      <Member Id="F:Azure.Storage.Blobs.Models.BlobGeoReplicationStatus.Unavailable" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobHierarchyItem" Id="T:Azure.Storage.Blobs.Models.BlobHierarchyItem">
      <Member Id="P:Azure.Storage.Blobs.Models.BlobHierarchyItem.Blob" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobHierarchyItem.IsBlob" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobHierarchyItem.IsPrefix" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobHierarchyItem.Prefix" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobHttpHeaders" Id="T:Azure.Storage.Blobs.Models.BlobHttpHeaders">
      <Member Id="M:Azure.Storage.Blobs.Models.BlobHttpHeaders.#ctor" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobHttpHeaders.Equals(System.Object)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobHttpHeaders.GetHashCode" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobHttpHeaders.ToString" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobHttpHeaders.CacheControl" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobHttpHeaders.ContentDisposition" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobHttpHeaders.ContentEncoding" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobHttpHeaders.ContentHash" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobHttpHeaders.ContentLanguage" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobHttpHeaders.ContentType" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobInfo" Id="T:Azure.Storage.Blobs.Models.BlobInfo">
      <Member Id="P:Azure.Storage.Blobs.Models.BlobInfo.BlobSequenceNumber" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobInfo.ETag" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobInfo.LastModified" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobInfo.VersionId" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobItem" Id="T:Azure.Storage.Blobs.Models.BlobItem">
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItem.Deleted" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItem.IsLatestVersion" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItem.Metadata" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItem.Name" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItem.ObjectReplicationSourceProperties" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItem.Properties" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItem.Snapshot" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItem.Tags" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItem.VersionId" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobItemProperties" Id="T:Azure.Storage.Blobs.Models.BlobItemProperties">
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.AccessTier" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.AccessTierChangedOn" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.AccessTierInferred" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.ArchiveStatus" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.BlobSequenceNumber" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.BlobType" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.CacheControl" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.ContentDisposition" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.ContentEncoding" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.ContentHash" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.ContentLanguage" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.ContentLength" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.ContentType" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.CopyCompletedOn" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.CopyId" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.CopyProgress" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.CopySource" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.CopyStatus" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.CopyStatusDescription" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.CreatedOn" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.CustomerProvidedKeySha256" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.DeletedOn" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.DestinationSnapshot" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.EncryptionScope" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.ETag" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.ExpiresOn" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.IncrementalCopy" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.IsSealed" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.LastAccessedOn" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.LastModified" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.LeaseDuration" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.LeaseState" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.LeaseStatus" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.RehydratePriority" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.RemainingRetentionDays" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.ServerEncrypted" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.TagCount" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobLease" Id="T:Azure.Storage.Blobs.Models.BlobLease">
      <Member Id="P:Azure.Storage.Blobs.Models.BlobLease.ETag" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobLease.LastModified" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobLease.LeaseId" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobLease.LeaseTime" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobLeaseRequestConditions" Id="T:Azure.Storage.Blobs.Models.BlobLeaseRequestConditions">
      <Member Id="M:Azure.Storage.Blobs.Models.BlobLeaseRequestConditions.#ctor" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobLeaseRequestConditions.TagConditions" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobMetrics" Id="T:Azure.Storage.Blobs.Models.BlobMetrics">
      <Member Id="M:Azure.Storage.Blobs.Models.BlobMetrics.#ctor" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobMetrics.Enabled" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobMetrics.IncludeApis" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobMetrics.RetentionPolicy" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobMetrics.Version" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobOpenReadOptions" Id="T:Azure.Storage.Blobs.Models.BlobOpenReadOptions">
      <Member Id="M:Azure.Storage.Blobs.Models.BlobOpenReadOptions.#ctor(System.Boolean)" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobOpenReadOptions.BufferSize" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobOpenReadOptions.Conditions" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobOpenReadOptions.Position" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobProperties" Id="T:Azure.Storage.Blobs.Models.BlobProperties">
      <Member Id="M:Azure.Storage.Blobs.Models.BlobProperties.#ctor" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.AcceptRanges" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.AccessTier" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.AccessTierChangedOn" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.AccessTierInferred" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.ArchiveStatus" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.BlobCommittedBlockCount" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.BlobSequenceNumber" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.BlobType" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.CacheControl" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.ContentDisposition" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.ContentEncoding" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.ContentHash" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.ContentLanguage" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.ContentLength" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.ContentType" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.CopyCompletedOn" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.CopyId" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.CopyProgress" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.CopySource" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.CopyStatus" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.CopyStatusDescription" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.CreatedOn" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.DestinationSnapshot" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.EncryptionKeySha256" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.EncryptionScope" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.ETag" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.ExpiresOn" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.IsIncrementalCopy" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.IsLatestVersion" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.IsSealed" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.IsServerEncrypted" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.LastAccessed" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.LastModified" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.LeaseDuration" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.LeaseState" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.LeaseStatus" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.Metadata" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.ObjectReplicationDestinationPolicyId" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.ObjectReplicationSourceProperties" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.RehydratePriority" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.TagCount" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.VersionId" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobQueryArrowField" Id="T:Azure.Storage.Blobs.Models.BlobQueryArrowField">
      <Member Id="M:Azure.Storage.Blobs.Models.BlobQueryArrowField.#ctor" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobQueryArrowField.Name" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobQueryArrowField.Precision" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobQueryArrowField.Scale" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobQueryArrowField.Type" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobQueryArrowFieldType" Id="T:Azure.Storage.Blobs.Models.BlobQueryArrowFieldType">
      <Member Id="F:Azure.Storage.Blobs.Models.BlobQueryArrowFieldType.Bool" />
      <Member Id="F:Azure.Storage.Blobs.Models.BlobQueryArrowFieldType.Decimal" />
      <Member Id="F:Azure.Storage.Blobs.Models.BlobQueryArrowFieldType.Double" />
      <Member Id="F:Azure.Storage.Blobs.Models.BlobQueryArrowFieldType.Int64" />
      <Member Id="F:Azure.Storage.Blobs.Models.BlobQueryArrowFieldType.String" />
      <Member Id="F:Azure.Storage.Blobs.Models.BlobQueryArrowFieldType.Timestamp" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobQueryArrowOptions" Id="T:Azure.Storage.Blobs.Models.BlobQueryArrowOptions">
      <Member Id="M:Azure.Storage.Blobs.Models.BlobQueryArrowOptions.#ctor" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobQueryArrowOptions.Schema" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobQueryCsvTextOptions" Id="T:Azure.Storage.Blobs.Models.BlobQueryCsvTextOptions">
      <Member Id="M:Azure.Storage.Blobs.Models.BlobQueryCsvTextOptions.#ctor" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobQueryCsvTextOptions.ColumnSeparator" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobQueryCsvTextOptions.EscapeCharacter" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobQueryCsvTextOptions.HasHeaders" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobQueryCsvTextOptions.QuotationCharacter" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobQueryCsvTextOptions.RecordSeparator" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobQueryError" Id="T:Azure.Storage.Blobs.Models.BlobQueryError">
      <Member Id="P:Azure.Storage.Blobs.Models.BlobQueryError.Description" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobQueryError.IsFatal" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobQueryError.Name" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobQueryError.Position" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobQueryJsonTextOptions" Id="T:Azure.Storage.Blobs.Models.BlobQueryJsonTextOptions">
      <Member Id="M:Azure.Storage.Blobs.Models.BlobQueryJsonTextOptions.#ctor" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobQueryJsonTextOptions.RecordSeparator" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobQueryOptions" Id="T:Azure.Storage.Blobs.Models.BlobQueryOptions">
      <Member Id="E:Azure.Storage.Blobs.Models.BlobQueryOptions.ErrorHandler" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobQueryOptions.#ctor" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobQueryOptions.Conditions" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobQueryOptions.InputTextConfiguration" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobQueryOptions.OutputTextConfiguration" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobQueryOptions.ProgressHandler" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobQueryTextOptions" Id="T:Azure.Storage.Blobs.Models.BlobQueryTextOptions">
      <Member Id="M:Azure.Storage.Blobs.Models.BlobQueryTextOptions.#ctor" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobRequestConditions" Id="T:Azure.Storage.Blobs.Models.BlobRequestConditions">
      <Member Id="M:Azure.Storage.Blobs.Models.BlobRequestConditions.#ctor" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobRequestConditions.ToString" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobRequestConditions.LeaseId" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobRetentionPolicy" Id="T:Azure.Storage.Blobs.Models.BlobRetentionPolicy">
      <Member Id="M:Azure.Storage.Blobs.Models.BlobRetentionPolicy.#ctor" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobRetentionPolicy.Days" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobRetentionPolicy.Enabled" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobServiceProperties" Id="T:Azure.Storage.Blobs.Models.BlobServiceProperties">
      <Member Id="M:Azure.Storage.Blobs.Models.BlobServiceProperties.#ctor" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobServiceProperties.Cors" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobServiceProperties.DefaultServiceVersion" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobServiceProperties.DeleteRetentionPolicy" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobServiceProperties.HourMetrics" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobServiceProperties.Logging" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobServiceProperties.MinuteMetrics" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobServiceProperties.StaticWebsite" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobServiceStatistics" Id="T:Azure.Storage.Blobs.Models.BlobServiceStatistics">
      <Member Id="P:Azure.Storage.Blobs.Models.BlobServiceStatistics.GeoReplication" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobSignedIdentifier" Id="T:Azure.Storage.Blobs.Models.BlobSignedIdentifier">
      <Member Id="M:Azure.Storage.Blobs.Models.BlobSignedIdentifier.#ctor" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobSignedIdentifier.AccessPolicy" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobSignedIdentifier.Id" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobsModelFactory" Id="T:Azure.Storage.Blobs.Models.BlobsModelFactory">
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.AccountInfo(Azure.Storage.Blobs.Models.SkuName,Azure.Storage.Blobs.Models.AccountKind)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.AccountInfo(Azure.Storage.Blobs.Models.SkuName,Azure.Storage.Blobs.Models.AccountKind,System.Boolean)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobAppendInfo(Azure.ETag,System.DateTimeOffset,System.Byte[],System.Byte[],System.String,System.Int32,System.Boolean,System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobAppendInfo(Azure.ETag,System.DateTimeOffset,System.Byte[],System.Byte[],System.String,System.Int32,System.Boolean,System.String,System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobBlock(System.String,System.Int32)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobContainerAccessPolicy(Azure.Storage.Blobs.Models.PublicAccessType,Azure.ETag,System.DateTimeOffset,System.Collections.Generic.IEnumerable{Azure.Storage.Blobs.Models.BlobSignedIdentifier})" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobContainerInfo(Azure.ETag,System.DateTimeOffset)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobContainerItem(System.String,Azure.Storage.Blobs.Models.BlobContainerProperties)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobContainerItem(System.String,Azure.Storage.Blobs.Models.BlobContainerProperties,System.Nullable{System.Boolean},System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobContainerProperties(System.DateTimeOffset,Azure.ETag,System.Nullable{Azure.Storage.Blobs.Models.LeaseState},System.Nullable{Azure.Storage.Blobs.Models.LeaseDurationType},System.Nullable{Azure.Storage.Blobs.Models.PublicAccessType},System.Nullable{Azure.Storage.Blobs.Models.LeaseStatus},System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Boolean})" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobContainerProperties(System.DateTimeOffset,Azure.ETag,System.Nullable{Azure.Storage.Blobs.Models.LeaseState},System.Nullable{Azure.Storage.Blobs.Models.LeaseDurationType},System.Nullable{Azure.Storage.Blobs.Models.PublicAccessType},System.Nullable{System.Boolean},System.Nullable{Azure.Storage.Blobs.Models.LeaseStatus},System.String,System.Nullable{System.Boolean},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Boolean})" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobContainerProperties(System.DateTimeOffset,Azure.ETag,System.Nullable{Azure.Storage.Blobs.Models.LeaseState},System.Nullable{Azure.Storage.Blobs.Models.LeaseDurationType},System.Nullable{Azure.Storage.Blobs.Models.PublicAccessType},System.Nullable{System.Boolean},System.Nullable{Azure.Storage.Blobs.Models.LeaseStatus},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Boolean})" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobContainerProperties(System.DateTimeOffset,Azure.ETag,System.Nullable{Azure.Storage.Blobs.Models.LeaseStatus},System.Nullable{Azure.Storage.Blobs.Models.LeaseState},System.Nullable{Azure.Storage.Blobs.Models.LeaseDurationType},System.Nullable{Azure.Storage.Blobs.Models.PublicAccessType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IDictionary{System.String,System.String})" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobContentInfo(Azure.ETag,System.DateTimeOffset,System.Byte[],System.String,System.Int64)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobContentInfo(Azure.ETag,System.DateTimeOffset,System.Byte[],System.String,System.String,System.Int64)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobContentInfo(Azure.ETag,System.DateTimeOffset,System.Byte[],System.String,System.String,System.String,System.Int64)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobCopyInfo(Azure.ETag,System.DateTimeOffset,System.String,Azure.Storage.Blobs.Models.CopyStatus)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobCopyInfo(Azure.ETag,System.DateTimeOffset,System.String,System.String,Azure.Storage.Blobs.Models.CopyStatus)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobDownloadDetails(System.DateTimeOffset,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.String,System.String,System.String,System.Int64,System.DateTimeOffset,System.String,System.String,System.String,System.Uri,Azure.Storage.Blobs.Models.CopyStatus,Azure.Storage.Blobs.Models.LeaseDurationType,Azure.Storage.Blobs.Models.LeaseState,Azure.Storage.Blobs.Models.LeaseStatus,System.String,System.Int32,System.Boolean,System.String,System.String,System.Byte[],System.Int64,System.String,System.Boolean,System.Collections.Generic.IList{Azure.Storage.Blobs.Models.ObjectReplicationPolicy},System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobDownloadInfo(System.DateTimeOffset,System.Int64,Azure.Storage.Blobs.Models.BlobType,System.Byte[],System.String,System.String,System.String,System.String,System.Uri,Azure.Storage.Blobs.Models.CopyStatus,System.String,Azure.Storage.Blobs.Models.LeaseDurationType,System.String,Azure.Storage.Blobs.Models.LeaseState,System.String,Azure.Storage.Blobs.Models.LeaseStatus,System.Byte[],System.String,Azure.ETag,System.Int32,System.String,System.Boolean,System.String,System.String,System.Int64,System.Byte[],System.Collections.Generic.IDictionary{System.String,System.String},System.IO.Stream,System.DateTimeOffset)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobDownloadInfo(System.DateTimeOffset,System.Int64,Azure.Storage.Blobs.Models.BlobType,System.Byte[],System.String,System.String,System.String,System.String,System.Uri,Azure.Storage.Blobs.Models.CopyStatus,System.String,Azure.Storage.Blobs.Models.LeaseDurationType,System.String,Azure.Storage.Blobs.Models.LeaseState,System.String,Azure.Storage.Blobs.Models.LeaseStatus,System.Byte[],System.String,Azure.ETag,System.Int32,System.String,System.Boolean,System.String,System.String,System.String,System.Int64,System.Byte[],System.Collections.Generic.IDictionary{System.String,System.String},System.IO.Stream,System.DateTimeOffset)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobDownloadInfo(System.DateTimeOffset,System.Int64,Azure.Storage.Blobs.Models.BlobType,System.Byte[],System.String,System.String,System.String,System.String,System.Uri,Azure.Storage.Blobs.Models.CopyStatus,System.String,Azure.Storage.Blobs.Models.LeaseDurationType,System.String,Azure.Storage.Blobs.Models.LeaseState,System.String,Azure.Storage.Blobs.Models.LeaseStatus,System.Byte[],System.String,Azure.ETag,System.Int32,System.String,System.Boolean,System.String,System.String,System.String,System.Int64,System.Byte[],System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.IO.Stream,System.DateTimeOffset,System.Int64)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobDownloadInfo(System.DateTimeOffset,System.Int64,Azure.Storage.Blobs.Models.BlobType,System.Byte[],System.String,System.String,System.String,System.String,System.Uri,Azure.Storage.Blobs.Models.CopyStatus,System.String,Azure.Storage.Blobs.Models.LeaseDurationType,System.String,Azure.Storage.Blobs.Models.LeaseState,System.String,Azure.Storage.Blobs.Models.LeaseStatus,System.Byte[],System.String,Azure.ETag,System.Int32,System.String,System.Boolean,System.String,System.String,System.String,System.Int64,System.Byte[],System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.IO.Stream,System.DateTimeOffset,System.Int64,System.DateTimeOffset)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobGeoReplication(Azure.Storage.Blobs.Models.BlobGeoReplicationStatus,System.Nullable{System.DateTimeOffset})" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobHierarchyItem(System.String,Azure.Storage.Blobs.Models.BlobItem)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobInfo(Azure.ETag,System.DateTimeOffset)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.blobInfo(Azure.ETag,System.DateTimeOffset,System.Int64,System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobItem(System.String,System.Boolean,Azure.Storage.Blobs.Models.BlobItemProperties,System.String,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobItem(System.String,System.Boolean,Azure.Storage.Blobs.Models.BlobItemProperties,System.String,System.String,System.Nullable{System.Boolean},System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.List{Azure.Storage.Blobs.Models.ObjectReplicationPolicy})" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobItemProperties(System.Boolean,System.Nullable{System.Boolean},System.String,System.String,System.String,System.Byte[],System.String,System.String,System.Nullable{System.Int64},System.Nullable{Azure.Storage.Blobs.Models.BlobType},System.Nullable{Azure.Storage.Blobs.Models.LeaseStatus},System.Nullable{Azure.Storage.Blobs.Models.LeaseState},System.Nullable{Azure.Storage.Blobs.Models.LeaseDurationType},System.String,System.Nullable{Azure.Storage.Blobs.Models.CopyStatus},System.Uri,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.Storage.Blobs.Models.ArchiveStatus},System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.DateTimeOffset},System.Nullable{System.Boolean},System.Nullable{Azure.Storage.Blobs.Models.RehydratePriority},System.Nullable{Azure.ETag},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobItemProperties(System.Boolean,System.Nullable{System.Boolean},System.String,System.String,System.String,System.Byte[],System.String,System.String,System.Nullable{System.Int64},System.Nullable{Azure.Storage.Blobs.Models.BlobType},System.Nullable{Azure.Storage.Blobs.Models.LeaseStatus},System.Nullable{Azure.Storage.Blobs.Models.LeaseState},System.Nullable{Azure.Storage.Blobs.Models.LeaseDurationType},System.String,System.Nullable{Azure.Storage.Blobs.Models.CopyStatus},System.Uri,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.Storage.Blobs.Models.ArchiveStatus},System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.DateTimeOffset},System.Nullable{System.Boolean},System.Nullable{Azure.Storage.Blobs.Models.RehydratePriority},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobItemProperties(System.Boolean,System.String,System.String,System.String,System.String,System.Byte[],System.String,System.String,System.Nullable{System.Int64},System.Nullable{Azure.Storage.Blobs.Models.BlobType},System.Nullable{Azure.Storage.Blobs.Models.LeaseStatus},System.Nullable{Azure.Storage.Blobs.Models.LeaseState},System.Nullable{Azure.Storage.Blobs.Models.LeaseDurationType},System.String,System.Nullable{Azure.Storage.Blobs.Models.CopyStatus},System.Uri,System.Nullable{System.Int64},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.Storage.Blobs.Models.ArchiveStatus},System.String,System.String,System.Nullable{Azure.ETag},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobItemProperties(System.Boolean,System.Uri,System.String,System.String,System.String,System.Byte[],System.String,System.String,System.Nullable{System.Int64},System.Nullable{Azure.Storage.Blobs.Models.BlobType},System.Nullable{Azure.Storage.Blobs.Models.LeaseStatus},System.Nullable{Azure.Storage.Blobs.Models.LeaseState},System.Nullable{Azure.Storage.Blobs.Models.LeaseDurationType},System.String,System.Nullable{Azure.Storage.Blobs.Models.CopyStatus},System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.Storage.Blobs.Models.ArchiveStatus},System.String,System.Nullable{Azure.ETag},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobLease(Azure.ETag,System.DateTimeOffset,System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobProperties(System.DateTimeOffset,Azure.Storage.Blobs.Models.LeaseDurationType,Azure.Storage.Blobs.Models.LeaseState,Azure.Storage.Blobs.Models.LeaseStatus,System.Int64,System.String,Azure.ETag,System.Byte[],System.String,System.String,System.String,System.Boolean,System.String,Azure.Storage.Blobs.Models.CopyStatus,System.Int64,System.Uri,System.String,System.String,System.Int32,System.String,System.Boolean,System.String,System.String,System.DateTimeOffset,System.String,Azure.Storage.Blobs.Models.BlobType,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.DateTimeOffset,System.DateTimeOffset,System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobProperties(System.DateTimeOffset,Azure.Storage.Blobs.Models.LeaseState,Azure.Storage.Blobs.Models.LeaseStatus,System.Int64,Azure.Storage.Blobs.Models.LeaseDurationType,Azure.ETag,System.Byte[],System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Int64,Azure.Storage.Blobs.Models.CopyStatus,System.String,System.Uri,System.Int32,System.String,System.Boolean,System.String,System.String,System.String,System.String,System.DateTimeOffset,System.String,Azure.Storage.Blobs.Models.BlobType,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.DateTimeOffset,System.DateTimeOffset,System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobProperties(System.DateTimeOffset,Azure.Storage.Blobs.Models.LeaseStatus,System.Int64,System.String,Azure.ETag,Azure.Storage.Blobs.Models.LeaseState,System.String,System.String,System.String,System.String,System.Int64,Azure.Storage.Blobs.Models.LeaseDurationType,System.String,System.String,System.Int32,System.Boolean,System.Boolean,Azure.Storage.Blobs.Models.CopyStatus,System.String,System.Uri,System.String,System.String,System.String,System.String,System.Boolean,System.String,System.String,System.DateTimeOffset,System.DateTimeOffset,Azure.Storage.Blobs.Models.BlobType,System.String,System.Collections.Generic.IList{Azure.Storage.Blobs.Models.ObjectReplicationPolicy},System.Boolean,System.String,System.Int64,System.Collections.Generic.IDictionary{System.String,System.String},System.DateTimeOffset,System.DateTimeOffset,System.Boolean,System.String,System.Byte[])" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobProperties(System.DateTimeOffset,Azure.Storage.Blobs.Models.LeaseStatus,System.Int64,System.String,Azure.ETag,Azure.Storage.Blobs.Models.LeaseState,System.String,System.String,System.String,System.String,System.Int64,Azure.Storage.Blobs.Models.LeaseDurationType,System.String,System.String,System.Int32,System.Boolean,System.Boolean,Azure.Storage.Blobs.Models.CopyStatus,System.String,System.Uri,System.String,System.String,System.String,System.String,System.Boolean,System.String,System.String,System.DateTimeOffset,System.DateTimeOffset,Azure.Storage.Blobs.Models.BlobType,System.String,System.Collections.Generic.IList{Azure.Storage.Blobs.Models.ObjectReplicationPolicy},System.Boolean,System.String,System.Int64,System.Collections.Generic.IDictionary{System.String,System.String},System.DateTimeOffset,System.DateTimeOffset,System.Boolean,System.String,System.Byte[],System.DateTimeOffset)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobQueryError(System.String,System.String,System.Boolean,System.Int64)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobServiceStatistics(Azure.Storage.Blobs.Models.BlobGeoReplication)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobSnapshotInfo(System.String,Azure.ETag,System.DateTimeOffset,System.Boolean)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobSnapshotInfo(System.String,Azure.ETag,System.DateTimeOffset,System.String,System.Boolean)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlockInfo(System.Byte[],System.Byte[],System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlockInfo(System.Byte[],System.Byte[],System.String,System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlockList(System.Collections.Generic.IEnumerable{Azure.Storage.Blobs.Models.BlobBlock},System.Collections.Generic.IEnumerable{Azure.Storage.Blobs.Models.BlobBlock})" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.GetBlobTagResult(System.Collections.Generic.IDictionary{System.String,System.String})" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.ObjectReplicationPolicy(System.String,System.Collections.Generic.IList{Azure.Storage.Blobs.Models.ObjectReplicationRule})" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.ObjectReplicationRule(System.String,Azure.Storage.Blobs.Models.ObjectReplicationStatus)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.PageBlobInfo(Azure.ETag,System.DateTimeOffset,System.Int64)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.PageInfo(Azure.ETag,System.DateTimeOffset,System.Byte[],System.Byte[],System.Int64,System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.PageInfo(Azure.ETag,System.DateTimeOffset,System.Byte[],System.Byte[],System.Int64,System.String,System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.PageRangesInfo(System.DateTimeOffset,Azure.ETag,System.Int64,System.Collections.Generic.IEnumerable{Azure.HttpRange},System.Collections.Generic.IEnumerable{Azure.HttpRange})" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.TaggedBlobItem(System.String,System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.TaggedBlobItem(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.UserDelegationKey(System.String,System.String,System.String,System.String,System.String,System.DateTimeOffset,System.DateTimeOffset)" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobSnapshotInfo" Id="T:Azure.Storage.Blobs.Models.BlobSnapshotInfo">
      <Member Id="P:Azure.Storage.Blobs.Models.BlobSnapshotInfo.ETag" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobSnapshotInfo.IsServerEncrypted" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobSnapshotInfo.LastModified" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobSnapshotInfo.Snapshot" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobSnapshotInfo.VersionId" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobStates" Id="T:Azure.Storage.Blobs.Models.BlobStates">
      <Member Id="F:Azure.Storage.Blobs.Models.BlobStates.All" />
      <Member Id="F:Azure.Storage.Blobs.Models.BlobStates.Deleted" />
      <Member Id="F:Azure.Storage.Blobs.Models.BlobStates.None" />
      <Member Id="F:Azure.Storage.Blobs.Models.BlobStates.Snapshots" />
      <Member Id="F:Azure.Storage.Blobs.Models.BlobStates.Uncommitted" />
      <Member Id="F:Azure.Storage.Blobs.Models.BlobStates.Version" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobStaticWebsite" Id="T:Azure.Storage.Blobs.Models.BlobStaticWebsite">
      <Member Id="M:Azure.Storage.Blobs.Models.BlobStaticWebsite.#ctor" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobStaticWebsite.DefaultIndexDocumentPath" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobStaticWebsite.Enabled" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobStaticWebsite.ErrorDocument404Path" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobStaticWebsite.IndexDocument" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobSyncUploadFromUriOptions" Id="T:Azure.Storage.Blobs.Models.BlobSyncUploadFromUriOptions">
      <Member Id="M:Azure.Storage.Blobs.Models.BlobSyncUploadFromUriOptions.#ctor" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobSyncUploadFromUriOptions.AccessTier" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobSyncUploadFromUriOptions.ContentHash" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobSyncUploadFromUriOptions.CopySourceBlobProperties" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobSyncUploadFromUriOptions.DestinationConditions" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobSyncUploadFromUriOptions.HttpHeaders" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobSyncUploadFromUriOptions.SourceConditions" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobSyncUploadFromUriOptions.Tags" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobTraits" Id="T:Azure.Storage.Blobs.Models.BlobTraits">
      <Member Id="F:Azure.Storage.Blobs.Models.BlobTraits.All" />
      <Member Id="F:Azure.Storage.Blobs.Models.BlobTraits.CopyStatus" />
      <Member Id="F:Azure.Storage.Blobs.Models.BlobTraits.Metadata" />
      <Member Id="F:Azure.Storage.Blobs.Models.BlobTraits.None" />
      <Member Id="F:Azure.Storage.Blobs.Models.BlobTraits.Tags" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobType" Id="T:Azure.Storage.Blobs.Models.BlobType">
      <Member Id="F:Azure.Storage.Blobs.Models.BlobType.Append" />
      <Member Id="F:Azure.Storage.Blobs.Models.BlobType.Block" />
      <Member Id="F:Azure.Storage.Blobs.Models.BlobType.Page" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobUploadOptions" Id="T:Azure.Storage.Blobs.Models.BlobUploadOptions">
      <Member Id="M:Azure.Storage.Blobs.Models.BlobUploadOptions.#ctor" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobUploadOptions.AccessTier" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobUploadOptions.Conditions" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobUploadOptions.HttpHeaders" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobUploadOptions.Metadata" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobUploadOptions.ProgressHandler" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobUploadOptions.Tags" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobUploadOptions.TransferOptions" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlockBlobOpenWriteOptions" Id="T:Azure.Storage.Blobs.Models.BlockBlobOpenWriteOptions">
      <Member Id="M:Azure.Storage.Blobs.Models.BlockBlobOpenWriteOptions.#ctor" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlockBlobOpenWriteOptions.BufferSize" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlockBlobOpenWriteOptions.HttpHeaders" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlockBlobOpenWriteOptions.Metadata" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlockBlobOpenWriteOptions.OpenConditions" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlockBlobOpenWriteOptions.ProgressHandler" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlockBlobOpenWriteOptions.Tags" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlockInfo" Id="T:Azure.Storage.Blobs.Models.BlockInfo">
      <Member Id="P:Azure.Storage.Blobs.Models.BlockInfo.ContentCrc64" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlockInfo.ContentHash" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlockInfo.EncryptionKeySha256" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlockInfo.EncryptionScope" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlockList" Id="T:Azure.Storage.Blobs.Models.BlockList">
      <Member Id="P:Azure.Storage.Blobs.Models.BlockList.BlobContentLength" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlockList.CommittedBlocks" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlockList.ContentType" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlockList.ETag" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlockList.LastModified" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlockList.UncommittedBlocks" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlockListTypes" Id="T:Azure.Storage.Blobs.Models.BlockListTypes">
      <Member Id="F:Azure.Storage.Blobs.Models.BlockListTypes.All" />
      <Member Id="F:Azure.Storage.Blobs.Models.BlockListTypes.Committed" />
      <Member Id="F:Azure.Storage.Blobs.Models.BlockListTypes.Uncommitted" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.CommitBlockListOptions" Id="T:Azure.Storage.Blobs.Models.CommitBlockListOptions">
      <Member Id="M:Azure.Storage.Blobs.Models.CommitBlockListOptions.#ctor" />
      <Member Id="P:Azure.Storage.Blobs.Models.CommitBlockListOptions.AccessTier" />
      <Member Id="P:Azure.Storage.Blobs.Models.CommitBlockListOptions.Conditions" />
      <Member Id="P:Azure.Storage.Blobs.Models.CommitBlockListOptions.HttpHeaders" />
      <Member Id="P:Azure.Storage.Blobs.Models.CommitBlockListOptions.Metadata" />
      <Member Id="P:Azure.Storage.Blobs.Models.CommitBlockListOptions.Tags" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.CopyFromUriOperation" Id="T:Azure.Storage.Blobs.Models.CopyFromUriOperation">
      <Member Id="M:Azure.Storage.Blobs.Models.CopyFromUriOperation.#ctor" />
      <Member Id="M:Azure.Storage.Blobs.Models.CopyFromUriOperation.#ctor(System.String,Azure.Storage.Blobs.Specialized.BlobBaseClient)" />
      <Member Id="M:Azure.Storage.Blobs.Models.CopyFromUriOperation.GetRawResponse" />
      <Member Id="M:Azure.Storage.Blobs.Models.CopyFromUriOperation.UpdateStatus(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Models.CopyFromUriOperation.UpdateStatusAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Models.CopyFromUriOperation.WaitForCompletionAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Models.CopyFromUriOperation.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="P:Azure.Storage.Blobs.Models.CopyFromUriOperation.HasCompleted" />
      <Member Id="P:Azure.Storage.Blobs.Models.CopyFromUriOperation.HasValue" />
      <Member Id="P:Azure.Storage.Blobs.Models.CopyFromUriOperation.Id" />
      <Member Id="P:Azure.Storage.Blobs.Models.CopyFromUriOperation.Value" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.CopyStatus" Id="T:Azure.Storage.Blobs.Models.CopyStatus">
      <Member Id="F:Azure.Storage.Blobs.Models.CopyStatus.Aborted" />
      <Member Id="F:Azure.Storage.Blobs.Models.CopyStatus.Failed" />
      <Member Id="F:Azure.Storage.Blobs.Models.CopyStatus.Pending" />
      <Member Id="F:Azure.Storage.Blobs.Models.CopyStatus.Success" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.CustomerProvidedKey" Id="T:Azure.Storage.Blobs.Models.CustomerProvidedKey">
      <Member Id="M:Azure.Storage.Blobs.Models.CustomerProvidedKey.#ctor(System.Byte[])" />
      <Member Id="M:Azure.Storage.Blobs.Models.CustomerProvidedKey.#ctor(System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Models.CustomerProvidedKey.Equals(Azure.Storage.Blobs.Models.CustomerProvidedKey)" />
      <Member Id="M:Azure.Storage.Blobs.Models.CustomerProvidedKey.Equals(System.Object)" />
      <Member Id="M:Azure.Storage.Blobs.Models.CustomerProvidedKey.GetHashCode" />
      <Member Id="M:Azure.Storage.Blobs.Models.CustomerProvidedKey.op_Equality(Azure.Storage.Blobs.Models.CustomerProvidedKey,Azure.Storage.Blobs.Models.CustomerProvidedKey)" />
      <Member Id="M:Azure.Storage.Blobs.Models.CustomerProvidedKey.op_Inequality(Azure.Storage.Blobs.Models.CustomerProvidedKey,Azure.Storage.Blobs.Models.CustomerProvidedKey)" />
      <Member Id="M:Azure.Storage.Blobs.Models.CustomerProvidedKey.ToString" />
      <Member Id="P:Azure.Storage.Blobs.Models.CustomerProvidedKey.EncryptionAlgorithm" />
      <Member Id="P:Azure.Storage.Blobs.Models.CustomerProvidedKey.EncryptionKey" />
      <Member Id="P:Azure.Storage.Blobs.Models.CustomerProvidedKey.EncryptionKeyHash" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.DeleteSnapshotsOption" Id="T:Azure.Storage.Blobs.Models.DeleteSnapshotsOption">
      <Member Id="F:Azure.Storage.Blobs.Models.DeleteSnapshotsOption.IncludeSnapshots" />
      <Member Id="F:Azure.Storage.Blobs.Models.DeleteSnapshotsOption.None" />
      <Member Id="F:Azure.Storage.Blobs.Models.DeleteSnapshotsOption.OnlySnapshots" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.EncryptionAlgorithmType" Id="T:Azure.Storage.Blobs.Models.EncryptionAlgorithmType">
      <Member Id="F:Azure.Storage.Blobs.Models.EncryptionAlgorithmType.Aes256" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.GetBlobTagResult" Id="T:Azure.Storage.Blobs.Models.GetBlobTagResult">
      <Member Id="M:Azure.Storage.Blobs.Models.GetBlobTagResult.#ctor" />
      <Member Id="P:Azure.Storage.Blobs.Models.GetBlobTagResult.Tags" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.LeaseDurationType" Id="T:Azure.Storage.Blobs.Models.LeaseDurationType">
      <Member Id="F:Azure.Storage.Blobs.Models.LeaseDurationType.Fixed" />
      <Member Id="F:Azure.Storage.Blobs.Models.LeaseDurationType.Infinite" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.LeaseState" Id="T:Azure.Storage.Blobs.Models.LeaseState">
      <Member Id="F:Azure.Storage.Blobs.Models.LeaseState.Available" />
      <Member Id="F:Azure.Storage.Blobs.Models.LeaseState.Breaking" />
      <Member Id="F:Azure.Storage.Blobs.Models.LeaseState.Broken" />
      <Member Id="F:Azure.Storage.Blobs.Models.LeaseState.Expired" />
      <Member Id="F:Azure.Storage.Blobs.Models.LeaseState.Leased" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.LeaseStatus" Id="T:Azure.Storage.Blobs.Models.LeaseStatus">
      <Member Id="F:Azure.Storage.Blobs.Models.LeaseStatus.Locked" />
      <Member Id="F:Azure.Storage.Blobs.Models.LeaseStatus.Unlocked" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.ObjectReplicationPolicy" Id="T:Azure.Storage.Blobs.Models.ObjectReplicationPolicy">
      <Member Id="P:Azure.Storage.Blobs.Models.ObjectReplicationPolicy.PolicyId" />
      <Member Id="P:Azure.Storage.Blobs.Models.ObjectReplicationPolicy.Rules" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.ObjectReplicationRule" Id="T:Azure.Storage.Blobs.Models.ObjectReplicationRule">
      <Member Id="P:Azure.Storage.Blobs.Models.ObjectReplicationRule.ReplicationStatus" />
      <Member Id="P:Azure.Storage.Blobs.Models.ObjectReplicationRule.RuleId" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.ObjectReplicationStatus" Id="T:Azure.Storage.Blobs.Models.ObjectReplicationStatus">
      <Member Id="F:Azure.Storage.Blobs.Models.ObjectReplicationStatus.Complete" />
      <Member Id="F:Azure.Storage.Blobs.Models.ObjectReplicationStatus.Failed" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.PageBlobCreateOptions" Id="T:Azure.Storage.Blobs.Models.PageBlobCreateOptions">
      <Member Id="M:Azure.Storage.Blobs.Models.PageBlobCreateOptions.#ctor" />
      <Member Id="P:Azure.Storage.Blobs.Models.PageBlobCreateOptions.Conditions" />
      <Member Id="P:Azure.Storage.Blobs.Models.PageBlobCreateOptions.HttpHeaders" />
      <Member Id="P:Azure.Storage.Blobs.Models.PageBlobCreateOptions.Metadata" />
      <Member Id="P:Azure.Storage.Blobs.Models.PageBlobCreateOptions.SequenceNumber" />
      <Member Id="P:Azure.Storage.Blobs.Models.PageBlobCreateOptions.Tags" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.PageBlobInfo" Id="T:Azure.Storage.Blobs.Models.PageBlobInfo">
      <Member Id="P:Azure.Storage.Blobs.Models.PageBlobInfo.BlobSequenceNumber" />
      <Member Id="P:Azure.Storage.Blobs.Models.PageBlobInfo.ETag" />
      <Member Id="P:Azure.Storage.Blobs.Models.PageBlobInfo.LastModified" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.PageBlobOpenWriteOptions" Id="T:Azure.Storage.Blobs.Models.PageBlobOpenWriteOptions">
      <Member Id="M:Azure.Storage.Blobs.Models.PageBlobOpenWriteOptions.#ctor" />
      <Member Id="P:Azure.Storage.Blobs.Models.PageBlobOpenWriteOptions.BufferSize" />
      <Member Id="P:Azure.Storage.Blobs.Models.PageBlobOpenWriteOptions.OpenConditions" />
      <Member Id="P:Azure.Storage.Blobs.Models.PageBlobOpenWriteOptions.ProgressHandler" />
      <Member Id="P:Azure.Storage.Blobs.Models.PageBlobOpenWriteOptions.Size" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.PageBlobRequestConditions" Id="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions">
      <Member Id="M:Azure.Storage.Blobs.Models.PageBlobRequestConditions.#ctor" />
      <Member Id="P:Azure.Storage.Blobs.Models.PageBlobRequestConditions.IfSequenceNumberEqual" />
      <Member Id="P:Azure.Storage.Blobs.Models.PageBlobRequestConditions.IfSequenceNumberLessThan" />
      <Member Id="P:Azure.Storage.Blobs.Models.PageBlobRequestConditions.IfSequenceNumberLessThanOrEqual" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.PageInfo" Id="T:Azure.Storage.Blobs.Models.PageInfo">
      <Member Id="P:Azure.Storage.Blobs.Models.PageInfo.BlobSequenceNumber" />
      <Member Id="P:Azure.Storage.Blobs.Models.PageInfo.ContentCrc64" />
      <Member Id="P:Azure.Storage.Blobs.Models.PageInfo.ContentHash" />
      <Member Id="P:Azure.Storage.Blobs.Models.PageInfo.EncryptionKeySha256" />
      <Member Id="P:Azure.Storage.Blobs.Models.PageInfo.EncryptionScope" />
      <Member Id="P:Azure.Storage.Blobs.Models.PageInfo.ETag" />
      <Member Id="P:Azure.Storage.Blobs.Models.PageInfo.LastModified" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.PageRangesInfo" Id="T:Azure.Storage.Blobs.Models.PageRangesInfo">
      <Member Id="P:Azure.Storage.Blobs.Models.PageRangesInfo.BlobContentLength" />
      <Member Id="P:Azure.Storage.Blobs.Models.PageRangesInfo.ClearRanges" />
      <Member Id="P:Azure.Storage.Blobs.Models.PageRangesInfo.ETag" />
      <Member Id="P:Azure.Storage.Blobs.Models.PageRangesInfo.LastModified" />
      <Member Id="P:Azure.Storage.Blobs.Models.PageRangesInfo.PageRanges" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.PathRenameMode" Id="T:Azure.Storage.Blobs.Models.PathRenameMode">
      <Member Id="F:Azure.Storage.Blobs.Models.PathRenameMode.Legacy" />
      <Member Id="F:Azure.Storage.Blobs.Models.PathRenameMode.Posix" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.PublicAccessType" Id="T:Azure.Storage.Blobs.Models.PublicAccessType">
      <Member Id="F:Azure.Storage.Blobs.Models.PublicAccessType.Blob" />
      <Member Id="F:Azure.Storage.Blobs.Models.PublicAccessType.BlobContainer" />
      <Member Id="F:Azure.Storage.Blobs.Models.PublicAccessType.None" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.RehydratePriority" Id="T:Azure.Storage.Blobs.Models.RehydratePriority">
      <Member Id="F:Azure.Storage.Blobs.Models.RehydratePriority.High" />
      <Member Id="F:Azure.Storage.Blobs.Models.RehydratePriority.Standard" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.ReleasedObjectInfo" Id="T:Azure.Storage.Blobs.Models.ReleasedObjectInfo">
      <Member Id="M:Azure.Storage.Blobs.Models.ReleasedObjectInfo.#ctor(Azure.ETag,System.DateTimeOffset)" />
      <Member Id="M:Azure.Storage.Blobs.Models.ReleasedObjectInfo.Equals(System.Object)" />
      <Member Id="M:Azure.Storage.Blobs.Models.ReleasedObjectInfo.GetHashCode" />
      <Member Id="M:Azure.Storage.Blobs.Models.ReleasedObjectInfo.ToString" />
      <Member Id="P:Azure.Storage.Blobs.Models.ReleasedObjectInfo.ETag" />
      <Member Id="P:Azure.Storage.Blobs.Models.ReleasedObjectInfo.LastModified" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.SequenceNumberAction" Id="T:Azure.Storage.Blobs.Models.SequenceNumberAction">
      <Member Id="F:Azure.Storage.Blobs.Models.SequenceNumberAction.Increment" />
      <Member Id="F:Azure.Storage.Blobs.Models.SequenceNumberAction.Max" />
      <Member Id="F:Azure.Storage.Blobs.Models.SequenceNumberAction.Update" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.SkuName" Id="T:Azure.Storage.Blobs.Models.SkuName">
      <Member Id="F:Azure.Storage.Blobs.Models.SkuName.PremiumLrs" />
      <Member Id="F:Azure.Storage.Blobs.Models.SkuName.StandardGrs" />
      <Member Id="F:Azure.Storage.Blobs.Models.SkuName.StandardLrs" />
      <Member Id="F:Azure.Storage.Blobs.Models.SkuName.StandardRagrs" />
      <Member Id="F:Azure.Storage.Blobs.Models.SkuName.StandardZrs" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.TaggedBlobItem" Id="T:Azure.Storage.Blobs.Models.TaggedBlobItem">
      <Member Id="P:Azure.Storage.Blobs.Models.TaggedBlobItem.BlobContainerName" />
      <Member Id="P:Azure.Storage.Blobs.Models.TaggedBlobItem.BlobName" />
      <Member Id="P:Azure.Storage.Blobs.Models.TaggedBlobItem.Tags" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.UserDelegationKey" Id="T:Azure.Storage.Blobs.Models.UserDelegationKey">
      <Member Id="P:Azure.Storage.Blobs.Models.UserDelegationKey.SignedExpiresOn" />
      <Member Id="P:Azure.Storage.Blobs.Models.UserDelegationKey.SignedObjectId" />
      <Member Id="P:Azure.Storage.Blobs.Models.UserDelegationKey.SignedService" />
      <Member Id="P:Azure.Storage.Blobs.Models.UserDelegationKey.SignedStartsOn" />
      <Member Id="P:Azure.Storage.Blobs.Models.UserDelegationKey.SignedTenantId" />
      <Member Id="P:Azure.Storage.Blobs.Models.UserDelegationKey.SignedVersion" />
      <Member Id="P:Azure.Storage.Blobs.Models.UserDelegationKey.Value" />
    </Type>
  </Namespace>
  <Namespace Name="Azure.Storage.Blobs.Specialized">
    <Type Name="Azure.Storage.Blobs.Specialized.AppendBlobClient" Id="T:Azure.Storage.Blobs.Specialized.AppendBlobClient">
      <Member Id="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.#ctor" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.#ctor(System.String,System.String,System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.#ctor(System.String,System.String,System.String,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.#ctor(System.Uri,Azure.AzureSasCredential,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.#ctor(System.Uri,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.AppendBlock(System.IO.Stream,System.Byte[],Azure.Storage.Blobs.Models.AppendBlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.AppendBlockAsync(System.IO.Stream,System.Byte[],Azure.Storage.Blobs.Models.AppendBlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.AppendBlockFromUri(System.Uri,Azure.HttpRange,System.Byte[],Azure.Storage.Blobs.Models.AppendBlobRequestConditions,Azure.Storage.Blobs.Models.AppendBlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.AppendBlockFromUriAsync(System.Uri,Azure.HttpRange,System.Byte[],Azure.Storage.Blobs.Models.AppendBlobRequestConditions,Azure.Storage.Blobs.Models.AppendBlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.Create(Azure.Storage.Blobs.Models.AppendBlobCreateOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.Create(Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.AppendBlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.CreateAsync(Azure.Storage.Blobs.Models.AppendBlobCreateOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.CreateAsync(Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.AppendBlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.CreateIfNotExists(Azure.Storage.Blobs.Models.AppendBlobCreateOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.CreateIfNotExists(Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.CreateIfNotExistsAsync(Azure.Storage.Blobs.Models.AppendBlobCreateOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.CreateIfNotExistsAsync(Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.OpenWrite(System.Boolean,Azure.Storage.Blobs.Models.AppendBlobOpenWriteOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.OpenWriteAsync(System.Boolean,Azure.Storage.Blobs.Models.AppendBlobOpenWriteOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.Seal(Azure.Storage.Blobs.Models.AppendBlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.SealAsync(Azure.Storage.Blobs.Models.AppendBlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.WithSnapshot(System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.WithVersion(System.String)" />
      <Member Id="P:Azure.Storage.Blobs.Specialized.AppendBlobClient.AppendBlobMaxAppendBlockBytes" />
      <Member Id="P:Azure.Storage.Blobs.Specialized.AppendBlobClient.AppendBlobMaxBlocks" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Specialized.BlobBaseClient" Id="T:Azure.Storage.Blobs.Specialized.BlobBaseClient">
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.#ctor" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.#ctor(System.String,System.String,System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.#ctor(System.String,System.String,System.String,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.#ctor(System.Uri,Azure.AzureSasCredential,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.#ctor(System.Uri,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.AbortCopyFromUri(System.String,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.AbortCopyFromUriAsync(System.String,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.CreateSnapshot(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.CreateSnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.Delete(Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DeleteAsync(Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DeleteIfExists(Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DeleteIfExistsAsync(Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.Download" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.Download(Azure.HttpRange,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.Download(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadAsync" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadAsync(Azure.HttpRange,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadTo(System.IO.Stream)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadTo(System.IO.Stream,Azure.Storage.Blobs.Models.BlobRequestConditions,Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadTo(System.IO.Stream,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadTo(System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadTo(System.String,Azure.Storage.Blobs.Models.BlobRequestConditions,Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadTo(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadToAsync(System.IO.Stream)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadToAsync(System.IO.Stream,Azure.Storage.Blobs.Models.BlobRequestConditions,Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadToAsync(System.IO.Stream,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadToAsync(System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadToAsync(System.String,Azure.Storage.Blobs.Models.BlobRequestConditions,Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadToAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.Exists(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.ExistsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GenerateSasUri(Azure.Storage.Sas.BlobSasBuilder)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GenerateSasUri(Azure.Storage.Sas.BlobSasPermissions,System.DateTimeOffset)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GetBlobLeaseClientCore(System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GetParentBlobContainerClientCore" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GetProperties(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GetPropertiesAsync(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GetTags(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GetTagsAsync(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.OpenRead(Azure.Storage.Blobs.Models.BlobOpenReadOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.OpenRead(System.Boolean,System.Int64,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.OpenRead(System.Int64,System.Nullable{System.Int32},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.OpenReadAsync(Azure.Storage.Blobs.Models.BlobOpenReadOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.OpenReadAsync(System.Boolean,System.Int64,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.OpenReadAsync(System.Int64,System.Nullable{System.Int32},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.SetAccessTier(Azure.Storage.Blobs.Models.AccessTier,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.RehydratePriority},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.SetAccessTierAsync(Azure.Storage.Blobs.Models.AccessTier,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.RehydratePriority},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.SetHttpHeaders(Azure.Storage.Blobs.Models.BlobHttpHeaders,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.SetHttpHeadersAsync(Azure.Storage.Blobs.Models.BlobHttpHeaders,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.SetMetadata(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.SetMetadataAsync(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.SetTags(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.SetTagsAsync(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.StartCopyFromUri(System.Uri,Azure.Storage.Blobs.Models.BlobCopyFromUriOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.StartCopyFromUri(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},Azure.Storage.Blobs.Models.BlobRequestConditions,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.RehydratePriority},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.StartCopyFromUriAsync(System.Uri,Azure.Storage.Blobs.Models.BlobCopyFromUriOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.StartCopyFromUriAsync(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},Azure.Storage.Blobs.Models.BlobRequestConditions,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.RehydratePriority},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.SyncCopyFromUri(System.Uri,Azure.Storage.Blobs.Models.BlobCopyFromUriOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.SyncCopyFromUriAsync(System.Uri,Azure.Storage.Blobs.Models.BlobCopyFromUriOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.Undelete(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.UndeleteAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.WithSnapshot(System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.WithSnapshotCore(System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.WithVersion(System.String)" />
      <Member Id="P:Azure.Storage.Blobs.Specialized.BlobBaseClient.AccountName" />
      <Member Id="P:Azure.Storage.Blobs.Specialized.BlobBaseClient.BlobContainerName" />
      <Member Id="P:Azure.Storage.Blobs.Specialized.BlobBaseClient.CanGenerateSasUri" />
      <Member Id="P:Azure.Storage.Blobs.Specialized.BlobBaseClient.Name" />
      <Member Id="P:Azure.Storage.Blobs.Specialized.BlobBaseClient.Uri" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Specialized.BlobBatch" Id="T:Azure.Storage.Blobs.Specialized.BlobBatch">
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBatch.#ctor" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBatch.#ctor(Azure.Storage.Blobs.Specialized.BlobBatchClient)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBatch.DeleteBlob(System.String,System.String,Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBatch.DeleteBlob(System.Uri,Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBatch.Dispose" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBatch.SetBlobAccessTier(System.String,System.String,Azure.Storage.Blobs.Models.AccessTier,System.Nullable{Azure.Storage.Blobs.Models.RehydratePriority},Azure.Storage.Blobs.Models.BlobRequestConditions)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBatch.SetBlobAccessTier(System.Uri,Azure.Storage.Blobs.Models.AccessTier,System.Nullable{Azure.Storage.Blobs.Models.RehydratePriority},Azure.Storage.Blobs.Models.BlobRequestConditions)" />
      <Member Id="P:Azure.Storage.Blobs.Specialized.BlobBatch.RequestCount" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Specialized.BlobBatchClient" Id="T:Azure.Storage.Blobs.Specialized.BlobBatchClient">
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBatchClient.#ctor" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBatchClient.#ctor(Azure.Storage.Blobs.BlobServiceClient)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBatchClient.CreateBatch" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBatchClient.DeleteBlobs(System.Collections.Generic.IEnumerable{System.Uri},Azure.Storage.Blobs.Models.DeleteSnapshotsOption,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBatchClient.DeleteBlobsAsync(System.Collections.Generic.IEnumerable{System.Uri},Azure.Storage.Blobs.Models.DeleteSnapshotsOption,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBatchClient.SetBlobsAccessTier(System.Collections.Generic.IEnumerable{System.Uri},Azure.Storage.Blobs.Models.AccessTier,System.Nullable{Azure.Storage.Blobs.Models.RehydratePriority},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBatchClient.SetBlobsAccessTierAsync(System.Collections.Generic.IEnumerable{System.Uri},Azure.Storage.Blobs.Models.AccessTier,System.Nullable{Azure.Storage.Blobs.Models.RehydratePriority},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBatchClient.SubmitBatch(Azure.Storage.Blobs.Specialized.BlobBatch,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBatchClient.SubmitBatchAsync(Azure.Storage.Blobs.Specialized.BlobBatch,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="P:Azure.Storage.Blobs.Specialized.BlobBatchClient.Uri" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Specialized.BlobLeaseClient" Id="T:Azure.Storage.Blobs.Specialized.BlobLeaseClient">
      <Member Id="F:Azure.Storage.Blobs.Specialized.BlobLeaseClient.InfiniteLeaseDuration" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.#ctor" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.#ctor(Azure.Storage.Blobs.BlobContainerClient,System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.#ctor(Azure.Storage.Blobs.Specialized.BlobBaseClient,System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.Acquire(System.TimeSpan,Azure.RequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.AcquireAsync(System.TimeSpan,Azure.RequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.Break(System.Nullable{System.TimeSpan},Azure.RequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.BreakAsync(System.Nullable{System.TimeSpan},Azure.RequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.Change(System.String,Azure.RequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.ChangeAsync(System.String,Azure.RequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.Release(Azure.RequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.ReleaseAsync(Azure.RequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.ReleaseInternal(Azure.RequestConditions,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.Renew(Azure.RequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.RenewAsync(Azure.RequestConditions,System.Threading.CancellationToken)" />
      <Member Id="P:Azure.Storage.Blobs.Specialized.BlobLeaseClient.BlobClient" />
      <Member Id="P:Azure.Storage.Blobs.Specialized.BlobLeaseClient.BlobContainerClient" />
      <Member Id="P:Azure.Storage.Blobs.Specialized.BlobLeaseClient.LeaseId" />
      <Member Id="P:Azure.Storage.Blobs.Specialized.BlobLeaseClient.Uri" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Specialized.BlockBlobClient" Id="T:Azure.Storage.Blobs.Specialized.BlockBlobClient">
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.#ctor" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.#ctor(System.String,System.String,System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.#ctor(System.String,System.String,System.String,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.#ctor(System.Uri,Azure.AzureSasCredential,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.#ctor(System.Uri,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.CommitBlockList(System.Collections.Generic.IEnumerable{System.String},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.CommitBlockList(System.Collections.Generic.IEnumerable{System.String},Azure.Storage.Blobs.Models.CommitBlockListOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.CommitBlockListAsync(System.Collections.Generic.IEnumerable{System.String},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.CommitBlockListAsync(System.Collections.Generic.IEnumerable{System.String},Azure.Storage.Blobs.Models.CommitBlockListOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.CreateClient(System.Uri,Azure.Storage.Blobs.BlobClientOptions,Azure.Core.Pipeline.HttpPipeline)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.GetBlockList(Azure.Storage.Blobs.Models.BlockListTypes,System.String,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.GetBlockListAsync(Azure.Storage.Blobs.Models.BlockListTypes,System.String,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.OpenWrite(System.Boolean,Azure.Storage.Blobs.Models.BlockBlobOpenWriteOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.OpenWriteAsync(System.Boolean,Azure.Storage.Blobs.Models.BlockBlobOpenWriteOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.Query(System.String,Azure.Storage.Blobs.Models.BlobQueryOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.QueryAsync(System.String,Azure.Storage.Blobs.Models.BlobQueryOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.StageBlock(System.String,System.IO.Stream,System.Byte[],Azure.Storage.Blobs.Models.BlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.StageBlockAsync(System.String,System.IO.Stream,System.Byte[],Azure.Storage.Blobs.Models.BlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.StageBlockFromUri(System.Uri,System.String,Azure.HttpRange,System.Byte[],Azure.RequestConditions,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.StageBlockFromUriAsync(System.Uri,System.String,Azure.HttpRange,System.Byte[],Azure.RequestConditions,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.SyncUploadFromUri(System.Uri,Azure.Storage.Blobs.Models.BlobSyncUploadFromUriOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.SyncUploadFromUri(System.Uri,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.SyncUploadFromUriAsync(System.Uri,Azure.Storage.Blobs.Models.BlobSyncUploadFromUriOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.SyncUploadFromUriAsync(System.Uri,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.Upload(System.IO.Stream,Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.IProgress{System.Int64},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.Upload(System.IO.Stream,Azure.Storage.Blobs.Models.BlobUploadOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.UploadAsync(System.IO.Stream,Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.IProgress{System.Int64},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.UploadAsync(System.IO.Stream,Azure.Storage.Blobs.Models.BlobUploadOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.WithSnapshot(System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.WithSnapshotCore(System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.WithVersion(System.String)" />
      <Member Id="P:Azure.Storage.Blobs.Specialized.BlockBlobClient.BlockBlobMaxBlocks" />
      <Member Id="P:Azure.Storage.Blobs.Specialized.BlockBlobClient.BlockBlobMaxStageBlockBytes" />
      <Member Id="P:Azure.Storage.Blobs.Specialized.BlockBlobClient.BlockBlobMaxStageBlockLongBytes" />
      <Member Id="P:Azure.Storage.Blobs.Specialized.BlockBlobClient.BlockBlobMaxUploadBlobBytes" />
      <Member Id="P:Azure.Storage.Blobs.Specialized.BlockBlobClient.BlockBlobMaxUploadBlobLongBytes" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Specialized.PageBlobClient" Id="T:Azure.Storage.Blobs.Specialized.PageBlobClient">
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.#ctor" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.#ctor(System.String,System.String,System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.#ctor(System.String,System.String,System.String,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.#ctor(System.Uri,Azure.AzureSasCredential,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.#ctor(System.Uri,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.ClearPages(Azure.HttpRange,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.ClearPagesAsync(Azure.HttpRange,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.Create(System.Int64,Azure.Storage.Blobs.Models.PageBlobCreateOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.Create(System.Int64,System.Nullable{System.Int64},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.CreateAsync(System.Int64,Azure.Storage.Blobs.Models.PageBlobCreateOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.CreateAsync(System.Int64,System.Nullable{System.Int64},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.CreateIfNotExists(System.Int64,Azure.Storage.Blobs.Models.PageBlobCreateOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.CreateIfNotExists(System.Int64,System.Nullable{System.Int64},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.CreateIfNotExistsAsync(System.Int64,Azure.Storage.Blobs.Models.PageBlobCreateOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.CreateIfNotExistsAsync(System.Int64,System.Nullable{System.Int64},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetManagedDiskPageRangesDiff(System.Nullable{Azure.HttpRange},System.String,System.Uri,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetManagedDiskPageRangesDiffAsync(System.Nullable{Azure.HttpRange},System.String,System.Uri,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetPageRanges(System.Nullable{Azure.HttpRange},System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetPageRangesAsync(System.Nullable{Azure.HttpRange},System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetPageRangesDiff(System.Nullable{Azure.HttpRange},System.String,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetPageRangesDiffAsync(System.Nullable{Azure.HttpRange},System.String,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.OpenWrite(System.Boolean,System.Int64,Azure.Storage.Blobs.Models.PageBlobOpenWriteOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.OpenWriteAsync(System.Boolean,System.Int64,Azure.Storage.Blobs.Models.PageBlobOpenWriteOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.Resize(System.Int64,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.ResizeAsync(System.Int64,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.StartCopyIncremental(System.Uri,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.StartCopyIncrementalAsync(System.Uri,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UpdateSequenceNumber(Azure.Storage.Blobs.Models.SequenceNumberAction,System.Nullable{System.Int64},Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UpdateSequenceNumberAsync(Azure.Storage.Blobs.Models.SequenceNumberAction,System.Nullable{System.Int64},Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UploadPages(System.IO.Stream,System.Int64,System.Byte[],Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UploadPagesAsync(System.IO.Stream,System.Int64,System.Byte[],Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UploadPagesFromUri(System.Uri,Azure.HttpRange,Azure.HttpRange,System.Byte[],Azure.Storage.Blobs.Models.PageBlobRequestConditions,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UploadPagesFromUriAsync(System.Uri,Azure.HttpRange,Azure.HttpRange,System.Byte[],Azure.Storage.Blobs.Models.PageBlobRequestConditions,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.WithSnapshot(System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.WithSnapshotCore(System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.WithVersion(System.String)" />
      <Member Id="P:Azure.Storage.Blobs.Specialized.PageBlobClient.PageBlobMaxUploadPagesBytes" />
      <Member Id="P:Azure.Storage.Blobs.Specialized.PageBlobClient.PageBlobPageBytes" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Specialized.SpecializedBlobClientOptions" Id="T:Azure.Storage.Blobs.Specialized.SpecializedBlobClientOptions">
      <Member Id="M:Azure.Storage.Blobs.Specialized.SpecializedBlobClientOptions.#ctor(Azure.Storage.Blobs.BlobClientOptions.ServiceVersion)" />
      <Member Id="P:Azure.Storage.Blobs.Specialized.SpecializedBlobClientOptions.ClientSideEncryption" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Specialized.SpecializedBlobExtensions" Id="T:Azure.Storage.Blobs.Specialized.SpecializedBlobExtensions">
      <Member Id="M:Azure.Storage.Blobs.Specialized.SpecializedBlobExtensions.GetAppendBlobClient(Azure.Storage.Blobs.BlobContainerClient,System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.SpecializedBlobExtensions.GetBlobBaseClient(Azure.Storage.Blobs.BlobContainerClient,System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.SpecializedBlobExtensions.GetBlobBatchClient(Azure.Storage.Blobs.BlobServiceClient)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.SpecializedBlobExtensions.GetBlobLeaseClient(Azure.Storage.Blobs.BlobContainerClient,System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.SpecializedBlobExtensions.GetBlobLeaseClient(Azure.Storage.Blobs.Specialized.BlobBaseClient,System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.SpecializedBlobExtensions.GetBlockBlobClient(Azure.Storage.Blobs.BlobContainerClient,System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.SpecializedBlobExtensions.GetPageBlobClient(Azure.Storage.Blobs.BlobContainerClient,System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.SpecializedBlobExtensions.GetParentBlobContainerClient(Azure.Storage.Blobs.Specialized.BlobBaseClient)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.SpecializedBlobExtensions.GetParentBlobServiceClient(Azure.Storage.Blobs.BlobContainerClient)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.SpecializedBlobExtensions.WithClientSideEncryptionOptions(Azure.Storage.Blobs.BlobClient,Azure.Storage.ClientSideEncryptionOptions)" />
    </Type>
  </Namespace>
  <Namespace Name="Azure.Storage">
    <Type Name="Azure.Storage.ClientSideEncryptionOptions" Id="T:Azure.Storage.ClientSideEncryptionOptions">
      <Member Id="M:Azure.Storage.ClientSideEncryptionOptions.#ctor(Azure.Storage.ClientSideEncryptionVersion)" />
      <Member Id="P:Azure.Storage.ClientSideEncryptionOptions.EncryptionVersion" />
      <Member Id="P:Azure.Storage.ClientSideEncryptionOptions.KeyEncryptionKey" />
      <Member Id="P:Azure.Storage.ClientSideEncryptionOptions.KeyResolver" />
      <Member Id="P:Azure.Storage.ClientSideEncryptionOptions.KeyWrapAlgorithm" />
    </Type>
    <Type Name="Azure.Storage.ClientSideEncryptionVersion" Id="T:Azure.Storage.ClientSideEncryptionVersion">
      <Member Id="F:Azure.Storage.ClientSideEncryptionVersion.V1_0" />
    </Type>
    <Type Name="Azure.Storage.StorageSharedKeyCredential" Id="T:Azure.Storage.StorageSharedKeyCredential">
      <Member Id="M:Azure.Storage.StorageSharedKeyCredential.#ctor(System.String,System.String)" />
      <Member Id="M:Azure.Storage.StorageSharedKeyCredential.ComputeSasSignature(Azure.Storage.StorageSharedKeyCredential,System.String)" />
      <Member Id="M:Azure.Storage.StorageSharedKeyCredential.SetAccountKey(System.String)" />
      <Member Id="P:Azure.Storage.StorageSharedKeyCredential.AccountName" />
    </Type>
    <Type Name="Azure.Storage.StorageTransferOptions" Id="T:Azure.Storage.StorageTransferOptions">
      <Member Id="M:Azure.Storage.StorageTransferOptions.Equals(Azure.Storage.StorageTransferOptions)" />
      <Member Id="M:Azure.Storage.StorageTransferOptions.Equals(System.Object)" />
      <Member Id="M:Azure.Storage.StorageTransferOptions.GetHashCode" />
      <Member Id="M:Azure.Storage.StorageTransferOptions.op_Equality(Azure.Storage.StorageTransferOptions,Azure.Storage.StorageTransferOptions)" />
      <Member Id="M:Azure.Storage.StorageTransferOptions.op_Inequality(Azure.Storage.StorageTransferOptions,Azure.Storage.StorageTransferOptions)" />
      <Member Id="P:Azure.Storage.StorageTransferOptions.InitialTransferLength" />
      <Member Id="P:Azure.Storage.StorageTransferOptions.InitialTransferSize" />
      <Member Id="P:Azure.Storage.StorageTransferOptions.MaximumConcurrency" />
      <Member Id="P:Azure.Storage.StorageTransferOptions.MaximumTransferLength" />
      <Member Id="P:Azure.Storage.StorageTransferOptions.MaximumTransferSize" />
    </Type>
  </Namespace>
  <Namespace Name="Azure.Storage.Files.DataLake">
    <Type Name="Azure.Storage.Files.DataLake.DataLakeClientOptions" Id="T:Azure.Storage.Files.DataLake.DataLakeClientOptions">
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeClientOptions.#ctor(Azure.Storage.Files.DataLake.DataLakeClientOptions.ServiceVersion)" />
      <Member Id="P:Azure.Storage.Files.DataLake.DataLakeClientOptions.GeoRedundantSecondaryUri" />
      <Member Id="P:Azure.Storage.Files.DataLake.DataLakeClientOptions.Version" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.DataLakeClientOptions/ServiceVersion" Id="T:Azure.Storage.Files.DataLake.DataLakeClientOptions.ServiceVersion">
      <Member Id="F:Azure.Storage.Files.DataLake.DataLakeClientOptions.ServiceVersion.V2019_02_02" />
      <Member Id="F:Azure.Storage.Files.DataLake.DataLakeClientOptions.ServiceVersion.V2019_07_07" />
      <Member Id="F:Azure.Storage.Files.DataLake.DataLakeClientOptions.ServiceVersion.V2019_12_12" />
      <Member Id="F:Azure.Storage.Files.DataLake.DataLakeClientOptions.ServiceVersion.V2020_02_10" />
      <Member Id="F:Azure.Storage.Files.DataLake.DataLakeClientOptions.ServiceVersion.V2020_04_08" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.DataLakeDirectoryClient" Id="T:Azure.Storage.Files.DataLake.DataLakeDirectoryClient">
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeDirectoryClient.#ctor" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeDirectoryClient.#ctor(System.String,System.String,System.String)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeDirectoryClient.#ctor(System.String,System.String,System.String,Azure.Storage.Files.DataLake.DataLakeClientOptions)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeDirectoryClient.#ctor(System.Uri)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeDirectoryClient.#ctor(System.Uri,Azure.AzureSasCredential)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeDirectoryClient.#ctor(System.Uri,Azure.AzureSasCredential,Azure.Storage.Files.DataLake.DataLakeClientOptions)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeDirectoryClient.#ctor(System.Uri,Azure.Core.TokenCredential)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeDirectoryClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Storage.Files.DataLake.DataLakeClientOptions)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeDirectoryClient.#ctor(System.Uri,Azure.Storage.Files.DataLake.DataLakeClientOptions)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeDirectoryClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeDirectoryClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Files.DataLake.DataLakeClientOptions)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeDirectoryClient.Create(Azure.Storage.Files.DataLake.Models.PathHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeDirectoryClient.CreateAsync(Azure.Storage.Files.DataLake.Models.PathHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeDirectoryClient.CreateFile(System.String,Azure.Storage.Files.DataLake.Models.PathHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeDirectoryClient.CreateFileAsync(System.String,Azure.Storage.Files.DataLake.Models.PathHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeDirectoryClient.CreateIfNotExists(Azure.Storage.Files.DataLake.Models.PathHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeDirectoryClient.CreateIfNotExistsAsync(Azure.Storage.Files.DataLake.Models.PathHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeDirectoryClient.CreateSubDirectory(System.String,Azure.Storage.Files.DataLake.Models.PathHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeDirectoryClient.CreateSubDirectoryAsync(System.String,Azure.Storage.Files.DataLake.Models.PathHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeDirectoryClient.Delete(Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeDirectoryClient.DeleteAsync(Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeDirectoryClient.DeleteFile(System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeDirectoryClient.DeleteFileAsync(System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeDirectoryClient.DeleteIfExists(Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeDirectoryClient.DeleteIfExistsAsync(Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeDirectoryClient.DeleteSubDirectory(System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeDirectoryClient.DeleteSubDirectoryAsync(System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeDirectoryClient.GenerateSasUri(Azure.Storage.Sas.DataLakeSasBuilder)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeDirectoryClient.GenerateSasUri(Azure.Storage.Sas.DataLakeSasPermissions,System.DateTimeOffset)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeDirectoryClient.GetAccessControl(System.Nullable{System.Boolean},Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeDirectoryClient.GetAccessControlAsync(System.Nullable{System.Boolean},Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeDirectoryClient.GetFileClient(System.String)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeDirectoryClient.GetPaths(System.Boolean,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeDirectoryClient.GetPathsAsync(System.Boolean,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeDirectoryClient.GetProperties(Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeDirectoryClient.GetPropertiesAsync(Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeDirectoryClient.GetSubDirectoryClient(System.String)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeDirectoryClient.Rename(System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeDirectoryClient.RenameAsync(System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeDirectoryClient.SetAccessControlList(System.Collections.Generic.IList{Azure.Storage.Files.DataLake.Models.PathAccessControlItem},System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeDirectoryClient.SetAccessControlListAsync(System.Collections.Generic.IList{Azure.Storage.Files.DataLake.Models.PathAccessControlItem},System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeDirectoryClient.SetHttpHeaders(Azure.Storage.Files.DataLake.Models.PathHttpHeaders,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeDirectoryClient.SetHttpHeadersAsync(Azure.Storage.Files.DataLake.Models.PathHttpHeaders,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeDirectoryClient.SetMetadata(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeDirectoryClient.SetMetadataAsync(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeDirectoryClient.SetPermissions(Azure.Storage.Files.DataLake.Models.PathPermissions,System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeDirectoryClient.SetPermissionsAsync(Azure.Storage.Files.DataLake.Models.PathPermissions,System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.DataLakeFileClient" Id="T:Azure.Storage.Files.DataLake.DataLakeFileClient">
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.#ctor" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.#ctor(System.String,System.String,System.String)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.#ctor(System.String,System.String,System.String,Azure.Storage.Files.DataLake.DataLakeClientOptions)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.#ctor(System.Uri)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.#ctor(System.Uri,Azure.AzureSasCredential)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.#ctor(System.Uri,Azure.AzureSasCredential,Azure.Storage.Files.DataLake.DataLakeClientOptions)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.#ctor(System.Uri,Azure.Core.TokenCredential)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Storage.Files.DataLake.DataLakeClientOptions)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.#ctor(System.Uri,Azure.Storage.Files.DataLake.DataLakeClientOptions)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Files.DataLake.DataLakeClientOptions)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Append(System.IO.Stream,System.Int64,System.Byte[],System.String,System.IProgress{System.Int64},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.AppendAsync(System.IO.Stream,System.Int64,System.Byte[],System.String,System.IProgress{System.Int64},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Create(Azure.Storage.Files.DataLake.Models.PathHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.CreateAsync(Azure.Storage.Files.DataLake.Models.PathHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.CreateIfNotExists(Azure.Storage.Files.DataLake.Models.PathHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.CreateIfNotExistsAsync(Azure.Storage.Files.DataLake.Models.PathHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Delete(Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.DeleteAsync(Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.DeleteIfExists(Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.DeleteIfExistsAsync(Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Flush(System.Int64,System.Nullable{System.Boolean},System.Nullable{System.Boolean},Azure.Storage.Files.DataLake.Models.PathHttpHeaders,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.FlushAsync(System.Int64,System.Nullable{System.Boolean},System.Nullable{System.Boolean},Azure.Storage.Files.DataLake.Models.PathHttpHeaders,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.GetAccessControl(System.Nullable{System.Boolean},Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.GetAccessControlAsync(System.Nullable{System.Boolean},Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.GetProperties(Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.GetPropertiesAsync(Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.OpenRead(Azure.Storage.Files.DataLake.Models.DataLakeOpenReadOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.OpenRead(System.Boolean,System.Int64,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.OpenRead(System.Int64,System.Nullable{System.Int32},Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.OpenReadAsync(Azure.Storage.Files.DataLake.Models.DataLakeOpenReadOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.OpenReadAsync(System.Boolean,System.Int64,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.OpenReadAsync(System.Int64,System.Nullable{System.Int32},Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.OpenWrite(System.Boolean,Azure.Storage.Files.DataLake.Models.DataLakeFileOpenWriteOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.OpenWriteAsync(System.Boolean,Azure.Storage.Files.DataLake.Models.DataLakeFileOpenWriteOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Query(System.String,Azure.Storage.Files.DataLake.Models.DataLakeQueryOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.QueryAsync(System.String,Azure.Storage.Files.DataLake.Models.DataLakeQueryOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Read" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Read(Azure.HttpRange,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Read(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.ReadAsync" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.ReadAsync(Azure.HttpRange,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.ReadAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.ReadTo(System.IO.Stream,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.ReadTo(System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.ReadToAsync(System.IO.Stream,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.ReadToAsync(System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Rename(System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.RenameAsync(System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.ScheduleDeletion(Azure.Storage.Files.DataLake.Models.DataLakeFileScheduleDeletionOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.ScheduleDeletionAsync(Azure.Storage.Files.DataLake.Models.DataLakeFileScheduleDeletionOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.SetAccessControlList(System.Collections.Generic.IList{Azure.Storage.Files.DataLake.Models.PathAccessControlItem},System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.SetAccessControlListAsync(System.Collections.Generic.IList{Azure.Storage.Files.DataLake.Models.PathAccessControlItem},System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.SetHttpHeaders(Azure.Storage.Files.DataLake.Models.PathHttpHeaders,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.SetHttpHeadersAsync(Azure.Storage.Files.DataLake.Models.PathHttpHeaders,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.SetMetadata(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.SetMetadataAsync(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.SetPermissions(Azure.Storage.Files.DataLake.Models.PathPermissions,System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.SetPermissionsAsync(Azure.Storage.Files.DataLake.Models.PathPermissions,System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Upload(System.IO.Stream)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Upload(System.IO.Stream,Azure.Storage.Files.DataLake.Models.DataLakeFileUploadOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Upload(System.IO.Stream,Azure.Storage.Files.DataLake.Models.PathHttpHeaders,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.IProgress{System.Int64},Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Upload(System.IO.Stream,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Upload(System.String)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Upload(System.String,Azure.Storage.Files.DataLake.Models.DataLakeFileUploadOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Upload(System.String,Azure.Storage.Files.DataLake.Models.PathHttpHeaders,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.IProgress{System.Int64},Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Upload(System.String,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.UploadAsync(System.IO.Stream)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.UploadAsync(System.IO.Stream,Azure.Storage.Files.DataLake.Models.DataLakeFileUploadOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.UploadAsync(System.IO.Stream,Azure.Storage.Files.DataLake.Models.PathHttpHeaders,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.IProgress{System.Int64},Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.UploadAsync(System.IO.Stream,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.UploadAsync(System.String)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.UploadAsync(System.String,Azure.Storage.Files.DataLake.Models.DataLakeFileUploadOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.UploadAsync(System.String,Azure.Storage.Files.DataLake.Models.PathHttpHeaders,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.IProgress{System.Int64},Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileClient.UploadAsync(System.String,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="P:Azure.Storage.Files.DataLake.DataLakeFileClient.MaxUploadBytes" />
      <Member Id="P:Azure.Storage.Files.DataLake.DataLakeFileClient.MaxUploadLongBytes" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.DataLakeFileSystemClient" Id="T:Azure.Storage.Files.DataLake.DataLakeFileSystemClient">
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileSystemClient.#ctor" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileSystemClient.#ctor(System.String,System.String)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileSystemClient.#ctor(System.String,System.String,Azure.Storage.Files.DataLake.DataLakeClientOptions)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileSystemClient.#ctor(System.Uri)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileSystemClient.#ctor(System.Uri,Azure.AzureSasCredential)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileSystemClient.#ctor(System.Uri,Azure.AzureSasCredential,Azure.Storage.Files.DataLake.DataLakeClientOptions)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileSystemClient.#ctor(System.Uri,Azure.Core.TokenCredential)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileSystemClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Storage.Files.DataLake.DataLakeClientOptions)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileSystemClient.#ctor(System.Uri,Azure.Storage.Files.DataLake.DataLakeClientOptions)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileSystemClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileSystemClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Files.DataLake.DataLakeClientOptions)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileSystemClient.Create(Azure.Storage.Files.DataLake.Models.PublicAccessType,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileSystemClient.CreateAsync(Azure.Storage.Files.DataLake.Models.PublicAccessType,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileSystemClient.CreateDirectory(System.String,Azure.Storage.Files.DataLake.Models.PathHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileSystemClient.CreateDirectoryAsync(System.String,Azure.Storage.Files.DataLake.Models.PathHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileSystemClient.CreateFile(System.String,Azure.Storage.Files.DataLake.Models.PathHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileSystemClient.CreateFileAsync(System.String,Azure.Storage.Files.DataLake.Models.PathHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileSystemClient.CreateIfNotExists(Azure.Storage.Files.DataLake.Models.PublicAccessType,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileSystemClient.CreateIfNotExistsAsync(Azure.Storage.Files.DataLake.Models.PublicAccessType,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileSystemClient.Delete(Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileSystemClient.DeleteAsync(Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileSystemClient.DeleteDirectory(System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileSystemClient.DeleteDirectoryAsync(System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileSystemClient.DeleteFile(System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileSystemClient.DeleteFileAsync(System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileSystemClient.DeleteIfExists(Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileSystemClient.DeleteIfExistsAsync(Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileSystemClient.Exists(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileSystemClient.ExistsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileSystemClient.GenerateSasUri(Azure.Storage.Sas.DataLakeFileSystemSasPermissions,System.DateTimeOffset)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileSystemClient.GenerateSasUri(Azure.Storage.Sas.DataLakeSasBuilder)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileSystemClient.GetAccessPolicy(Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileSystemClient.GetAccessPolicyAsync(Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileSystemClient.GetDirectoryClient(System.String)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileSystemClient.GetFileClient(System.String)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileSystemClient.GetPaths(System.String,System.Boolean,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileSystemClient.GetPathsAsync(System.String,System.Boolean,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileSystemClient.GetProperties(Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileSystemClient.GetPropertiesAsync(Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileSystemClient.SetAccessPolicy(Azure.Storage.Files.DataLake.Models.PublicAccessType,System.Collections.Generic.IEnumerable{Azure.Storage.Files.DataLake.Models.DataLakeSignedIdentifier},Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileSystemClient.SetAccessPolicyAsync(Azure.Storage.Files.DataLake.Models.PublicAccessType,System.Collections.Generic.IEnumerable{Azure.Storage.Files.DataLake.Models.DataLakeSignedIdentifier},Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileSystemClient.SetMetadata(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeFileSystemClient.SetMetadataAsync(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="P:Azure.Storage.Files.DataLake.DataLakeFileSystemClient.AccountName" />
      <Member Id="P:Azure.Storage.Files.DataLake.DataLakeFileSystemClient.CanGenerateSasUri" />
      <Member Id="P:Azure.Storage.Files.DataLake.DataLakeFileSystemClient.Name" />
      <Member Id="P:Azure.Storage.Files.DataLake.DataLakeFileSystemClient.Uri" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.DataLakeLeaseClient" Id="T:Azure.Storage.Files.DataLake.DataLakeLeaseClient">
      <Member Id="F:Azure.Storage.Files.DataLake.DataLakeLeaseClient.InfiniteLeaseDuration" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeLeaseClient.#ctor" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeLeaseClient.#ctor(Azure.Storage.Files.DataLake.DataLakeFileSystemClient,System.String)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeLeaseClient.#ctor(Azure.Storage.Files.DataLake.DataLakePathClient,System.String)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeLeaseClient.Acquire(System.TimeSpan,Azure.RequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeLeaseClient.AcquireAsync(System.TimeSpan,Azure.RequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeLeaseClient.Break(System.Nullable{System.TimeSpan},Azure.RequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeLeaseClient.BreakAsync(System.Nullable{System.TimeSpan},Azure.RequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeLeaseClient.Change(System.String,Azure.RequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeLeaseClient.ChangeAsync(System.String,Azure.RequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeLeaseClient.Release(Azure.RequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeLeaseClient.ReleaseAsync(Azure.RequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeLeaseClient.Renew(Azure.RequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeLeaseClient.RenewAsync(Azure.RequestConditions,System.Threading.CancellationToken)" />
      <Member Id="P:Azure.Storage.Files.DataLake.DataLakeLeaseClient.LeaseId" />
      <Member Id="P:Azure.Storage.Files.DataLake.DataLakeLeaseClient.Uri" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.DataLakeLeaseClientExtensions" Id="T:Azure.Storage.Files.DataLake.DataLakeLeaseClientExtensions">
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeLeaseClientExtensions.GetDataLakeLeaseClient(Azure.Storage.Files.DataLake.DataLakeFileSystemClient,System.String)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeLeaseClientExtensions.GetDataLakeLeaseClient(Azure.Storage.Files.DataLake.DataLakePathClient,System.String)" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.DataLakePathClient" Id="T:Azure.Storage.Files.DataLake.DataLakePathClient">
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakePathClient.#ctor" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakePathClient.#ctor(Azure.Storage.Files.DataLake.DataLakeFileSystemClient,System.String)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakePathClient.#ctor(System.String,System.String,System.String)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakePathClient.#ctor(System.String,System.String,System.String,Azure.Storage.Files.DataLake.DataLakeClientOptions)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakePathClient.#ctor(System.Uri)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakePathClient.#ctor(System.Uri,Azure.AzureSasCredential)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakePathClient.#ctor(System.Uri,Azure.AzureSasCredential,Azure.Storage.Files.DataLake.DataLakeClientOptions)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakePathClient.#ctor(System.Uri,Azure.Core.TokenCredential)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakePathClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Storage.Files.DataLake.DataLakeClientOptions)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakePathClient.#ctor(System.Uri,Azure.Storage.Files.DataLake.DataLakeClientOptions)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakePathClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakePathClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Files.DataLake.DataLakeClientOptions)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakePathClient.Create(Azure.Storage.Files.DataLake.Models.PathResourceType,Azure.Storage.Files.DataLake.Models.PathHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakePathClient.CreateAsync(Azure.Storage.Files.DataLake.Models.PathResourceType,Azure.Storage.Files.DataLake.Models.PathHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakePathClient.CreateIfNotExists(Azure.Storage.Files.DataLake.Models.PathResourceType,Azure.Storage.Files.DataLake.Models.PathHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakePathClient.CreateIfNotExistsAsync(Azure.Storage.Files.DataLake.Models.PathResourceType,Azure.Storage.Files.DataLake.Models.PathHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakePathClient.Delete(System.Nullable{System.Boolean},Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakePathClient.DeleteAsync(System.Nullable{System.Boolean},Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakePathClient.DeleteIfExists(System.Nullable{System.Boolean},Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakePathClient.DeleteIfExistsAsync(System.Nullable{System.Boolean},Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakePathClient.Exists(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakePathClient.ExistsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakePathClient.GenerateSasUri(Azure.Storage.Sas.DataLakeSasBuilder)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakePathClient.GenerateSasUri(Azure.Storage.Sas.DataLakeSasPermissions,System.DateTimeOffset)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakePathClient.GetAccessControl(System.Nullable{System.Boolean},Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakePathClient.GetAccessControlAsync(System.Nullable{System.Boolean},Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakePathClient.GetProperties(Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakePathClient.GetPropertiesAsync(Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakePathClient.RemoveAccessControlRecursive(System.Collections.Generic.IList{Azure.Storage.Files.DataLake.Models.RemovePathAccessControlItem},System.String,Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakePathClient.RemoveAccessControlRecursiveAsync(System.Collections.Generic.IList{Azure.Storage.Files.DataLake.Models.RemovePathAccessControlItem},System.String,Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakePathClient.Rename(System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakePathClient.RenameAsync(System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakePathClient.SetAccessControlList(System.Collections.Generic.IList{Azure.Storage.Files.DataLake.Models.PathAccessControlItem},System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakePathClient.SetAccessControlListAsync(System.Collections.Generic.IList{Azure.Storage.Files.DataLake.Models.PathAccessControlItem},System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakePathClient.SetAccessControlRecursive(System.Collections.Generic.IList{Azure.Storage.Files.DataLake.Models.PathAccessControlItem},System.String,Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakePathClient.SetAccessControlRecursiveAsync(System.Collections.Generic.IList{Azure.Storage.Files.DataLake.Models.PathAccessControlItem},System.String,Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakePathClient.SetHttpHeaders(Azure.Storage.Files.DataLake.Models.PathHttpHeaders,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakePathClient.SetHttpHeadersAsync(Azure.Storage.Files.DataLake.Models.PathHttpHeaders,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakePathClient.SetMetadata(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakePathClient.SetMetadataAsync(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakePathClient.SetPermissions(Azure.Storage.Files.DataLake.Models.PathPermissions,System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakePathClient.SetPermissionsAsync(Azure.Storage.Files.DataLake.Models.PathPermissions,System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakePathClient.UpdateAccessControlRecursive(System.Collections.Generic.IList{Azure.Storage.Files.DataLake.Models.PathAccessControlItem},System.String,Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakePathClient.UpdateAccessControlRecursiveAsync(System.Collections.Generic.IList{Azure.Storage.Files.DataLake.Models.PathAccessControlItem},System.String,Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions,System.Threading.CancellationToken)" />
      <Member Id="P:Azure.Storage.Files.DataLake.DataLakePathClient.AccountName" />
      <Member Id="P:Azure.Storage.Files.DataLake.DataLakePathClient.CanGenerateSasUri" />
      <Member Id="P:Azure.Storage.Files.DataLake.DataLakePathClient.FileSystemName" />
      <Member Id="P:Azure.Storage.Files.DataLake.DataLakePathClient.Name" />
      <Member Id="P:Azure.Storage.Files.DataLake.DataLakePathClient.Path" />
      <Member Id="P:Azure.Storage.Files.DataLake.DataLakePathClient.Uri" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.DataLakeServiceClient" Id="T:Azure.Storage.Files.DataLake.DataLakeServiceClient">
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeServiceClient.#ctor" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeServiceClient.#ctor(System.String)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeServiceClient.#ctor(System.String,Azure.Storage.Files.DataLake.DataLakeClientOptions)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeServiceClient.#ctor(System.Uri)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeServiceClient.#ctor(System.Uri,Azure.AzureSasCredential)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeServiceClient.#ctor(System.Uri,Azure.AzureSasCredential,Azure.Storage.Files.DataLake.DataLakeClientOptions)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeServiceClient.#ctor(System.Uri,Azure.Core.TokenCredential)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeServiceClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Storage.Files.DataLake.DataLakeClientOptions)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeServiceClient.#ctor(System.Uri,Azure.Storage.Files.DataLake.DataLakeClientOptions)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeServiceClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeServiceClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Files.DataLake.DataLakeClientOptions)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeServiceClient.CreateFileSystem(System.String,Azure.Storage.Files.DataLake.Models.PublicAccessType,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeServiceClient.CreateFileSystemAsync(System.String,Azure.Storage.Files.DataLake.Models.PublicAccessType,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeServiceClient.DeleteFileSystem(System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeServiceClient.DeleteFileSystemAsync(System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeServiceClient.GenerateAccountSasUri(Azure.Storage.Sas.AccountSasBuilder)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeServiceClient.GenerateAccountSasUri(Azure.Storage.Sas.AccountSasPermissions,System.DateTimeOffset,Azure.Storage.Sas.AccountSasResourceTypes)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeServiceClient.GetFileSystemClient(System.String)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeServiceClient.GetFileSystems(Azure.Storage.Files.DataLake.Models.FileSystemTraits,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeServiceClient.GetFileSystemsAsync(Azure.Storage.Files.DataLake.Models.FileSystemTraits,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeServiceClient.GetUserDelegationKey(System.Nullable{System.DateTimeOffset},System.DateTimeOffset,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeServiceClient.GetUserDelegationKeyAsync(System.Nullable{System.DateTimeOffset},System.DateTimeOffset,System.Threading.CancellationToken)" />
      <Member Id="P:Azure.Storage.Files.DataLake.DataLakeServiceClient.AccountName" />
      <Member Id="P:Azure.Storage.Files.DataLake.DataLakeServiceClient.CanGenerateAccountSasUri" />
      <Member Id="P:Azure.Storage.Files.DataLake.DataLakeServiceClient.Uri" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.DataLakeUriBuilder" Id="T:Azure.Storage.Files.DataLake.DataLakeUriBuilder">
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeUriBuilder.#ctor(System.Uri)" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeUriBuilder.ToString" />
      <Member Id="M:Azure.Storage.Files.DataLake.DataLakeUriBuilder.ToUri" />
      <Member Id="P:Azure.Storage.Files.DataLake.DataLakeUriBuilder.AccountName" />
      <Member Id="P:Azure.Storage.Files.DataLake.DataLakeUriBuilder.DirectoryOrFilePath" />
      <Member Id="P:Azure.Storage.Files.DataLake.DataLakeUriBuilder.FileSystemName" />
      <Member Id="P:Azure.Storage.Files.DataLake.DataLakeUriBuilder.Host" />
      <Member Id="P:Azure.Storage.Files.DataLake.DataLakeUriBuilder.Port" />
      <Member Id="P:Azure.Storage.Files.DataLake.DataLakeUriBuilder.Query" />
      <Member Id="P:Azure.Storage.Files.DataLake.DataLakeUriBuilder.Sas" />
      <Member Id="P:Azure.Storage.Files.DataLake.DataLakeUriBuilder.Scheme" />
      <Member Id="P:Azure.Storage.Files.DataLake.DataLakeUriBuilder.Snapshot" />
    </Type>
  </Namespace>
  <Namespace Name="Azure.Storage.Files.DataLake.Models">
    <Type Name="Azure.Storage.Files.DataLake.Models.AccessControlChangeCounters" Id="T:Azure.Storage.Files.DataLake.Models.AccessControlChangeCounters">
      <Member Id="P:Azure.Storage.Files.DataLake.Models.AccessControlChangeCounters.ChangedDirectoriesCount" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.AccessControlChangeCounters.ChangedFilesCount" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.AccessControlChangeCounters.FailedChangesCount" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.AccessControlChangeFailure" Id="T:Azure.Storage.Files.DataLake.Models.AccessControlChangeFailure">
      <Member Id="P:Azure.Storage.Files.DataLake.Models.AccessControlChangeFailure.ErrorMessage" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.AccessControlChangeFailure.IsDirectory" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.AccessControlChangeFailure.Name" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions" Id="T:Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions">
      <Member Id="M:Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions.#ctor" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions.BatchSize" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions.ContinueOnFailure" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions.MaxBatches" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions.ProgressHandler" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.AccessControlChangeResult" Id="T:Azure.Storage.Files.DataLake.Models.AccessControlChangeResult">
      <Member Id="P:Azure.Storage.Files.DataLake.Models.AccessControlChangeResult.BatchFailures" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.AccessControlChangeResult.ContinuationToken" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.AccessControlChangeResult.Counters" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.AccessControlChanges" Id="T:Azure.Storage.Files.DataLake.Models.AccessControlChanges">
      <Member Id="P:Azure.Storage.Files.DataLake.Models.AccessControlChanges.AggregateCounters" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.AccessControlChanges.BatchCounters" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.AccessControlChanges.BatchFailures" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.AccessControlChanges.ContinuationToken" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.AccessControlType" Id="T:Azure.Storage.Files.DataLake.Models.AccessControlType">
      <Member Id="F:Azure.Storage.Files.DataLake.Models.AccessControlType.Group" />
      <Member Id="F:Azure.Storage.Files.DataLake.Models.AccessControlType.Mask" />
      <Member Id="F:Azure.Storage.Files.DataLake.Models.AccessControlType.Other" />
      <Member Id="F:Azure.Storage.Files.DataLake.Models.AccessControlType.User" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.CopyStatus" Id="T:Azure.Storage.Files.DataLake.Models.CopyStatus">
      <Member Id="F:Azure.Storage.Files.DataLake.Models.CopyStatus.Aborted" />
      <Member Id="F:Azure.Storage.Files.DataLake.Models.CopyStatus.Failed" />
      <Member Id="F:Azure.Storage.Files.DataLake.Models.CopyStatus.Pending" />
      <Member Id="F:Azure.Storage.Files.DataLake.Models.CopyStatus.Success" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.DataLakeAccessPolicy" Id="T:Azure.Storage.Files.DataLake.Models.DataLakeAccessPolicy">
      <Member Id="M:Azure.Storage.Files.DataLake.Models.DataLakeAccessPolicy.#ctor" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeAccessPolicy.ExpiresOn" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeAccessPolicy.Permissions" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeAccessPolicy.PolicyExpiresOn" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeAccessPolicy.PolicyStartsOn" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeAccessPolicy.StartsOn" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.DataLakeAclChangeFailedException" Id="T:Azure.Storage.Files.DataLake.Models.DataLakeAclChangeFailedException">
      <Member Id="M:Azure.Storage.Files.DataLake.Models.DataLakeAclChangeFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:Azure.Storage.Files.DataLake.Models.DataLakeAclChangeFailedException.#ctor(System.String,Azure.RequestFailedException,System.String)" />
      <Member Id="M:Azure.Storage.Files.DataLake.Models.DataLakeAclChangeFailedException.#ctor(System.String,System.Exception,System.String)" />
      <Member Id="M:Azure.Storage.Files.DataLake.Models.DataLakeAclChangeFailedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeAclChangeFailedException.ContinuationToken" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.DataLakeFileExpirationOrigin" Id="T:Azure.Storage.Files.DataLake.Models.DataLakeFileExpirationOrigin">
      <Member Id="F:Azure.Storage.Files.DataLake.Models.DataLakeFileExpirationOrigin.CreationTime" />
      <Member Id="F:Azure.Storage.Files.DataLake.Models.DataLakeFileExpirationOrigin.Now" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.DataLakeFileOpenWriteOptions" Id="T:Azure.Storage.Files.DataLake.Models.DataLakeFileOpenWriteOptions">
      <Member Id="M:Azure.Storage.Files.DataLake.Models.DataLakeFileOpenWriteOptions.#ctor" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeFileOpenWriteOptions.BufferSize" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeFileOpenWriteOptions.Close" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeFileOpenWriteOptions.OpenConditions" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeFileOpenWriteOptions.ProgressHandler" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.DataLakeFileScheduleDeletionOptions" Id="T:Azure.Storage.Files.DataLake.Models.DataLakeFileScheduleDeletionOptions">
      <Member Id="M:Azure.Storage.Files.DataLake.Models.DataLakeFileScheduleDeletionOptions.#ctor" />
      <Member Id="M:Azure.Storage.Files.DataLake.Models.DataLakeFileScheduleDeletionOptions.#ctor(System.Nullable{System.DateTimeOffset})" />
      <Member Id="M:Azure.Storage.Files.DataLake.Models.DataLakeFileScheduleDeletionOptions.#ctor(System.TimeSpan,Azure.Storage.Files.DataLake.Models.DataLakeFileExpirationOrigin)" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeFileScheduleDeletionOptions.ExpiresOn" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeFileScheduleDeletionOptions.SetExpiryRelativeTo" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeFileScheduleDeletionOptions.TimeToExpire" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.DataLakeFileUploadOptions" Id="T:Azure.Storage.Files.DataLake.Models.DataLakeFileUploadOptions">
      <Member Id="M:Azure.Storage.Files.DataLake.Models.DataLakeFileUploadOptions.#ctor" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeFileUploadOptions.Close" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeFileUploadOptions.Conditions" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeFileUploadOptions.HttpHeaders" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeFileUploadOptions.Metadata" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeFileUploadOptions.Permissions" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeFileUploadOptions.ProgressHandler" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeFileUploadOptions.TransferOptions" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeFileUploadOptions.Umask" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.DataLakeLease" Id="T:Azure.Storage.Files.DataLake.Models.DataLakeLease">
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeLease.ETag" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeLease.LastModified" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeLease.LeaseId" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeLease.LeaseTime" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.DataLakeLeaseDuration" Id="T:Azure.Storage.Files.DataLake.Models.DataLakeLeaseDuration">
      <Member Id="F:Azure.Storage.Files.DataLake.Models.DataLakeLeaseDuration.Fixed" />
      <Member Id="F:Azure.Storage.Files.DataLake.Models.DataLakeLeaseDuration.Infinite" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.DataLakeLeaseState" Id="T:Azure.Storage.Files.DataLake.Models.DataLakeLeaseState">
      <Member Id="F:Azure.Storage.Files.DataLake.Models.DataLakeLeaseState.Available" />
      <Member Id="F:Azure.Storage.Files.DataLake.Models.DataLakeLeaseState.Breaking" />
      <Member Id="F:Azure.Storage.Files.DataLake.Models.DataLakeLeaseState.Broken" />
      <Member Id="F:Azure.Storage.Files.DataLake.Models.DataLakeLeaseState.Expired" />
      <Member Id="F:Azure.Storage.Files.DataLake.Models.DataLakeLeaseState.Leased" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.DataLakeLeaseStatus" Id="T:Azure.Storage.Files.DataLake.Models.DataLakeLeaseStatus">
      <Member Id="F:Azure.Storage.Files.DataLake.Models.DataLakeLeaseStatus.Locked" />
      <Member Id="F:Azure.Storage.Files.DataLake.Models.DataLakeLeaseStatus.Unlocked" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.DataLakeModelFactory" Id="T:Azure.Storage.Files.DataLake.Models.DataLakeModelFactory">
      <Member Id="M:Azure.Storage.Files.DataLake.Models.DataLakeModelFactory.DataLakeQueryError(System.String,System.String,System.Boolean,System.Int64)" />
      <Member Id="M:Azure.Storage.Files.DataLake.Models.DataLakeModelFactory.FileDownloadDetails(System.DateTimeOffset,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Azure.ETag,System.String,System.String,System.String,System.String,System.DateTimeOffset,System.String,System.String,System.String,System.Uri,Azure.Storage.Files.DataLake.Models.CopyStatus,Azure.Storage.Files.DataLake.Models.DataLakeLeaseDuration,Azure.Storage.Files.DataLake.Models.DataLakeLeaseState,Azure.Storage.Files.DataLake.Models.DataLakeLeaseStatus,System.String,System.Boolean,System.String,System.Byte[])" />
      <Member Id="M:Azure.Storage.Files.DataLake.Models.DataLakeModelFactory.FileDownloadInfo(System.Int64,System.IO.Stream,System.Byte[],Azure.Storage.Files.DataLake.Models.FileDownloadDetails)" />
      <Member Id="M:Azure.Storage.Files.DataLake.Models.DataLakeModelFactory.FileSystemInfo(Azure.ETag,System.DateTimeOffset)" />
      <Member Id="M:Azure.Storage.Files.DataLake.Models.DataLakeModelFactory.FileSystemItem(System.String,Azure.Storage.Files.DataLake.Models.FileSystemProperties)" />
      <Member Id="M:Azure.Storage.Files.DataLake.Models.DataLakeModelFactory.FileSystemProperties(System.DateTimeOffset,System.Nullable{Azure.Storage.Files.DataLake.Models.DataLakeLeaseStatus},System.Nullable{Azure.Storage.Files.DataLake.Models.DataLakeLeaseState},System.Nullable{Azure.Storage.Files.DataLake.Models.DataLakeLeaseDuration},System.Nullable{Azure.Storage.Files.DataLake.Models.PublicAccessType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Azure.ETag)" />
      <Member Id="M:Azure.Storage.Files.DataLake.Models.DataLakeModelFactory.Lease(Azure.ETag,System.DateTimeOffset,System.String,System.Nullable{System.Int32})" />
      <Member Id="M:Azure.Storage.Files.DataLake.Models.DataLakeModelFactory.PathAccessControl(System.String,System.String,Azure.Storage.Files.DataLake.Models.PathPermissions,System.Collections.Generic.IList{Azure.Storage.Files.DataLake.Models.PathAccessControlItem})" />
      <Member Id="M:Azure.Storage.Files.DataLake.Models.DataLakeModelFactory.PathContentInfo(System.String,Azure.ETag,System.DateTimeOffset,System.String,System.String,System.String,System.String,System.String,System.Int64,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <Member Id="M:Azure.Storage.Files.DataLake.Models.DataLakeModelFactory.PathCreateInfo(Azure.Storage.Files.DataLake.Models.PathInfo,System.String)" />
      <Member Id="M:Azure.Storage.Files.DataLake.Models.DataLakeModelFactory.PathInfo(Azure.ETag,System.DateTimeOffset)" />
      <Member Id="M:Azure.Storage.Files.DataLake.Models.DataLakeModelFactory.PathItem(System.String,System.Nullable{System.Boolean},System.DateTimeOffset,Azure.ETag,System.Nullable{System.Int64},System.String,System.String,System.String)" />
      <Member Id="M:Azure.Storage.Files.DataLake.Models.DataLakeModelFactory.PathProperties(System.DateTimeOffset,System.DateTimeOffset,System.Collections.Generic.IDictionary{System.String,System.String},System.DateTimeOffset,System.String,System.String,System.String,System.Uri,Azure.Storage.Files.DataLake.Models.CopyStatus,System.Boolean,Azure.Storage.Files.DataLake.Models.DataLakeLeaseDuration,Azure.Storage.Files.DataLake.Models.DataLakeLeaseState,Azure.Storage.Files.DataLake.Models.DataLakeLeaseStatus,System.Int64,System.String,Azure.ETag,System.Byte[],System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.DateTimeOffset)" />
      <Member Id="M:Azure.Storage.Files.DataLake.Models.DataLakeModelFactory.PathProperties(System.DateTimeOffset,System.DateTimeOffset,System.Collections.Generic.IDictionary{System.String,System.String},System.DateTimeOffset,System.String,System.String,System.String,System.Uri,Azure.Storage.Files.DataLake.Models.CopyStatus,System.Boolean,Azure.Storage.Files.DataLake.Models.DataLakeLeaseDuration,Azure.Storage.Files.DataLake.Models.DataLakeLeaseState,Azure.Storage.Files.DataLake.Models.DataLakeLeaseStatus,System.Int64,System.String,Azure.ETag,System.Byte[],System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.DateTimeOffset,System.Boolean)" />
      <Member Id="M:Azure.Storage.Files.DataLake.Models.DataLakeModelFactory.UserDelegationKey(System.String,System.String,System.DateTimeOffset,System.DateTimeOffset,System.String,System.String,System.String)" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.DataLakeOpenReadOptions" Id="T:Azure.Storage.Files.DataLake.Models.DataLakeOpenReadOptions">
      <Member Id="M:Azure.Storage.Files.DataLake.Models.DataLakeOpenReadOptions.#ctor(System.Boolean)" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeOpenReadOptions.BufferSize" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeOpenReadOptions.Conditions" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeOpenReadOptions.Position" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.DataLakeQueryArrowField" Id="T:Azure.Storage.Files.DataLake.Models.DataLakeQueryArrowField">
      <Member Id="M:Azure.Storage.Files.DataLake.Models.DataLakeQueryArrowField.#ctor" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeQueryArrowField.Name" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeQueryArrowField.Precision" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeQueryArrowField.Scale" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeQueryArrowField.Type" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.DataLakeQueryArrowFieldType" Id="T:Azure.Storage.Files.DataLake.Models.DataLakeQueryArrowFieldType">
      <Member Id="F:Azure.Storage.Files.DataLake.Models.DataLakeQueryArrowFieldType.Bool" />
      <Member Id="F:Azure.Storage.Files.DataLake.Models.DataLakeQueryArrowFieldType.Decimal" />
      <Member Id="F:Azure.Storage.Files.DataLake.Models.DataLakeQueryArrowFieldType.Double" />
      <Member Id="F:Azure.Storage.Files.DataLake.Models.DataLakeQueryArrowFieldType.Int64" />
      <Member Id="F:Azure.Storage.Files.DataLake.Models.DataLakeQueryArrowFieldType.String" />
      <Member Id="F:Azure.Storage.Files.DataLake.Models.DataLakeQueryArrowFieldType.Timestamp" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.DataLakeQueryArrowOptions" Id="T:Azure.Storage.Files.DataLake.Models.DataLakeQueryArrowOptions">
      <Member Id="M:Azure.Storage.Files.DataLake.Models.DataLakeQueryArrowOptions.#ctor" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeQueryArrowOptions.Schema" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.DataLakeQueryCsvTextOptions" Id="T:Azure.Storage.Files.DataLake.Models.DataLakeQueryCsvTextOptions">
      <Member Id="M:Azure.Storage.Files.DataLake.Models.DataLakeQueryCsvTextOptions.#ctor" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeQueryCsvTextOptions.ColumnSeparator" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeQueryCsvTextOptions.EscapeCharacter" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeQueryCsvTextOptions.HasHeaders" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeQueryCsvTextOptions.QuotationCharacter" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeQueryCsvTextOptions.RecordSeparator" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.DataLakeQueryError" Id="T:Azure.Storage.Files.DataLake.Models.DataLakeQueryError">
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeQueryError.Description" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeQueryError.IsFatal" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeQueryError.Name" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeQueryError.Position" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.DataLakeQueryJsonTextOptions" Id="T:Azure.Storage.Files.DataLake.Models.DataLakeQueryJsonTextOptions">
      <Member Id="M:Azure.Storage.Files.DataLake.Models.DataLakeQueryJsonTextOptions.#ctor" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeQueryJsonTextOptions.RecordSeparator" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.DataLakeQueryOptions" Id="T:Azure.Storage.Files.DataLake.Models.DataLakeQueryOptions">
      <Member Id="E:Azure.Storage.Files.DataLake.Models.DataLakeQueryOptions.ErrorHandler" />
      <Member Id="M:Azure.Storage.Files.DataLake.Models.DataLakeQueryOptions.#ctor" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeQueryOptions.Conditions" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeQueryOptions.InputTextConfiguration" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeQueryOptions.OutputTextConfiguration" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeQueryOptions.ProgressHandler" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.DataLakeQueryTextOptions" Id="T:Azure.Storage.Files.DataLake.Models.DataLakeQueryTextOptions">
      <Member Id="M:Azure.Storage.Files.DataLake.Models.DataLakeQueryTextOptions.#ctor" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" Id="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions">
      <Member Id="M:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions.#ctor" />
      <Member Id="M:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions.ToString" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions.LeaseId" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.DataLakeSignedIdentifier" Id="T:Azure.Storage.Files.DataLake.Models.DataLakeSignedIdentifier">
      <Member Id="M:Azure.Storage.Files.DataLake.Models.DataLakeSignedIdentifier.#ctor" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeSignedIdentifier.AccessPolicy" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.DataLakeSignedIdentifier.Id" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.FileDownloadDetails" Id="T:Azure.Storage.Files.DataLake.Models.FileDownloadDetails">
      <Member Id="P:Azure.Storage.Files.DataLake.Models.FileDownloadDetails.AcceptRanges" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.FileDownloadDetails.CacheControl" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.FileDownloadDetails.ContentDisposition" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.FileDownloadDetails.ContentEncoding" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.FileDownloadDetails.ContentHash" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.FileDownloadDetails.ContentLanguage" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.FileDownloadDetails.ContentRange" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.FileDownloadDetails.CopyCompletedOn" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.FileDownloadDetails.CopyId" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.FileDownloadDetails.CopyProgress" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.FileDownloadDetails.CopySource" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.FileDownloadDetails.CopyStatus" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.FileDownloadDetails.CopyStatusDescription" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.FileDownloadDetails.EncryptionKeySha256" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.FileDownloadDetails.ETag" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.FileDownloadDetails.IsServerEncrypted" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.FileDownloadDetails.LastModified" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.FileDownloadDetails.LeaseDuration" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.FileDownloadDetails.LeaseState" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.FileDownloadDetails.LeaseStatus" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.FileDownloadDetails.Metadata" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.FileDownloadInfo" Id="T:Azure.Storage.Files.DataLake.Models.FileDownloadInfo">
      <Member Id="P:Azure.Storage.Files.DataLake.Models.FileDownloadInfo.Content" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.FileDownloadInfo.ContentHash" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.FileDownloadInfo.ContentLength" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.FileDownloadInfo.Properties" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.FileSystemAccessPolicy" Id="T:Azure.Storage.Files.DataLake.Models.FileSystemAccessPolicy">
      <Member Id="M:Azure.Storage.Files.DataLake.Models.FileSystemAccessPolicy.#ctor" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.FileSystemAccessPolicy.DataLakePublicAccess" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.FileSystemAccessPolicy.ETag" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.FileSystemAccessPolicy.LastModified" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.FileSystemAccessPolicy.SignedIdentifiers" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.FileSystemInfo" Id="T:Azure.Storage.Files.DataLake.Models.FileSystemInfo">
      <Member Id="P:Azure.Storage.Files.DataLake.Models.FileSystemInfo.ETag" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.FileSystemInfo.LastModified" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.FileSystemItem" Id="T:Azure.Storage.Files.DataLake.Models.FileSystemItem">
      <Member Id="P:Azure.Storage.Files.DataLake.Models.FileSystemItem.Name" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.FileSystemItem.Properties" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.FileSystemProperties" Id="T:Azure.Storage.Files.DataLake.Models.FileSystemProperties">
      <Member Id="P:Azure.Storage.Files.DataLake.Models.FileSystemProperties.ETag" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.FileSystemProperties.HasImmutabilityPolicy" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.FileSystemProperties.HasLegalHold" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.FileSystemProperties.LastModified" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.FileSystemProperties.LeaseDuration" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.FileSystemProperties.LeaseState" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.FileSystemProperties.LeaseStatus" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.FileSystemProperties.Metadata" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.FileSystemProperties.PublicAccess" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.FileSystemTraits" Id="T:Azure.Storage.Files.DataLake.Models.FileSystemTraits">
      <Member Id="F:Azure.Storage.Files.DataLake.Models.FileSystemTraits.Metadata" />
      <Member Id="F:Azure.Storage.Files.DataLake.Models.FileSystemTraits.None" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.PathAccessControl" Id="T:Azure.Storage.Files.DataLake.Models.PathAccessControl">
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathAccessControl.AccessControlList" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathAccessControl.Group" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathAccessControl.Owner" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathAccessControl.Permissions" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.PathAccessControlExtensions" Id="T:Azure.Storage.Files.DataLake.Models.PathAccessControlExtensions">
      <Member Id="M:Azure.Storage.Files.DataLake.Models.PathAccessControlExtensions.ParseAccessControlList(System.String)" />
      <Member Id="M:Azure.Storage.Files.DataLake.Models.PathAccessControlExtensions.ParseOctalRolePermissions(System.Char)" />
      <Member Id="M:Azure.Storage.Files.DataLake.Models.PathAccessControlExtensions.ParseSymbolicRolePermissions(System.String,System.Boolean)" />
      <Member Id="M:Azure.Storage.Files.DataLake.Models.PathAccessControlExtensions.ToAccessControlListString(System.Collections.Generic.IList{Azure.Storage.Files.DataLake.Models.PathAccessControlItem})" />
      <Member Id="M:Azure.Storage.Files.DataLake.Models.PathAccessControlExtensions.ToOctalRolePermissions(Azure.Storage.Files.DataLake.Models.RolePermissions)" />
      <Member Id="M:Azure.Storage.Files.DataLake.Models.PathAccessControlExtensions.ToSymbolicRolePermissions(Azure.Storage.Files.DataLake.Models.RolePermissions)" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.PathAccessControlItem" Id="T:Azure.Storage.Files.DataLake.Models.PathAccessControlItem">
      <Member Id="M:Azure.Storage.Files.DataLake.Models.PathAccessControlItem.#ctor" />
      <Member Id="M:Azure.Storage.Files.DataLake.Models.PathAccessControlItem.#ctor(Azure.Storage.Files.DataLake.Models.AccessControlType,Azure.Storage.Files.DataLake.Models.RolePermissions,System.Boolean,System.String)" />
      <Member Id="M:Azure.Storage.Files.DataLake.Models.PathAccessControlItem.Parse(System.String)" />
      <Member Id="M:Azure.Storage.Files.DataLake.Models.PathAccessControlItem.ToString" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathAccessControlItem.AccessControlType" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathAccessControlItem.DefaultScope" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathAccessControlItem.EntityId" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathAccessControlItem.Permissions" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.PathContentInfo" Id="T:Azure.Storage.Files.DataLake.Models.PathContentInfo">
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathContentInfo.AcceptRanges" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathContentInfo.CacheControl" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathContentInfo.ContentDisposition" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathContentInfo.ContentEncoding" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathContentInfo.ContentHash" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathContentInfo.ContentLanguage" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathContentInfo.ContentLength" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathContentInfo.ContentRange" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathContentInfo.ContentType" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathContentInfo.ETag" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathContentInfo.LastModified" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathContentInfo.Metadata" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.PathCreateInfo" Id="T:Azure.Storage.Files.DataLake.Models.PathCreateInfo">
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathCreateInfo.Continuation" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathCreateInfo.PathInfo" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.PathGetPropertiesAction" Id="T:Azure.Storage.Files.DataLake.Models.PathGetPropertiesAction">
      <Member Id="F:Azure.Storage.Files.DataLake.Models.PathGetPropertiesAction.GetAccessControl" />
      <Member Id="F:Azure.Storage.Files.DataLake.Models.PathGetPropertiesAction.GetStatus" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.PathHttpHeaders" Id="T:Azure.Storage.Files.DataLake.Models.PathHttpHeaders">
      <Member Id="M:Azure.Storage.Files.DataLake.Models.PathHttpHeaders.#ctor" />
      <Member Id="M:Azure.Storage.Files.DataLake.Models.PathHttpHeaders.Equals(System.Object)" />
      <Member Id="M:Azure.Storage.Files.DataLake.Models.PathHttpHeaders.GetHashCode" />
      <Member Id="M:Azure.Storage.Files.DataLake.Models.PathHttpHeaders.ToString" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathHttpHeaders.CacheControl" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathHttpHeaders.ContentDisposition" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathHttpHeaders.ContentEncoding" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathHttpHeaders.ContentHash" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathHttpHeaders.ContentLanguage" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathHttpHeaders.ContentType" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.PathInfo" Id="T:Azure.Storage.Files.DataLake.Models.PathInfo">
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathInfo.ETag" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathInfo.LastModified" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.PathItem" Id="T:Azure.Storage.Files.DataLake.Models.PathItem">
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathItem.ContentLength" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathItem.ETag" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathItem.Group" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathItem.IsDirectory" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathItem.LastModified" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathItem.Name" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathItem.Owner" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathItem.Permissions" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.PathLeaseAction" Id="T:Azure.Storage.Files.DataLake.Models.PathLeaseAction">
      <Member Id="F:Azure.Storage.Files.DataLake.Models.PathLeaseAction.Acquire" />
      <Member Id="F:Azure.Storage.Files.DataLake.Models.PathLeaseAction.Break" />
      <Member Id="F:Azure.Storage.Files.DataLake.Models.PathLeaseAction.Change" />
      <Member Id="F:Azure.Storage.Files.DataLake.Models.PathLeaseAction.Release" />
      <Member Id="F:Azure.Storage.Files.DataLake.Models.PathLeaseAction.Renew" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.PathPermissions" Id="T:Azure.Storage.Files.DataLake.Models.PathPermissions">
      <Member Id="M:Azure.Storage.Files.DataLake.Models.PathPermissions.#ctor" />
      <Member Id="M:Azure.Storage.Files.DataLake.Models.PathPermissions.#ctor(Azure.Storage.Files.DataLake.Models.RolePermissions,Azure.Storage.Files.DataLake.Models.RolePermissions,Azure.Storage.Files.DataLake.Models.RolePermissions,System.Boolean,System.Boolean)" />
      <Member Id="M:Azure.Storage.Files.DataLake.Models.PathPermissions.ParseOctalPermissions(System.String)" />
      <Member Id="M:Azure.Storage.Files.DataLake.Models.PathPermissions.ParseSymbolicPermissions(System.String)" />
      <Member Id="M:Azure.Storage.Files.DataLake.Models.PathPermissions.ToOctalPermissions" />
      <Member Id="M:Azure.Storage.Files.DataLake.Models.PathPermissions.ToSymbolicPermissions" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathPermissions.ExtendedAcls" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathPermissions.Group" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathPermissions.Other" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathPermissions.Owner" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathPermissions.StickyBit" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.PathProperties" Id="T:Azure.Storage.Files.DataLake.Models.PathProperties">
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathProperties.AcceptRanges" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathProperties.AccessTier" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathProperties.AccessTierChangedOn" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathProperties.ArchiveStatus" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathProperties.CacheControl" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathProperties.ContentDisposition" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathProperties.ContentEncoding" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathProperties.ContentHash" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathProperties.ContentLanguage" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathProperties.ContentLength" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathProperties.ContentType" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathProperties.CopyCompletedOn" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathProperties.CopyId" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathProperties.CopyProgress" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathProperties.CopySource" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathProperties.CopyStatus" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathProperties.CopyStatusDescription" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathProperties.CreatedOn" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathProperties.EncryptionKeySha256" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathProperties.ETag" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathProperties.ExpiresOn" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathProperties.IsDirectory" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathProperties.IsIncrementalCopy" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathProperties.IsServerEncrypted" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathProperties.LastModified" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathProperties.LeaseDuration" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathProperties.LeaseState" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathProperties.LeaseStatus" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.PathProperties.Metadata" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.PathRenameMode" Id="T:Azure.Storage.Files.DataLake.Models.PathRenameMode">
      <Member Id="F:Azure.Storage.Files.DataLake.Models.PathRenameMode.Legacy" />
      <Member Id="F:Azure.Storage.Files.DataLake.Models.PathRenameMode.Posix" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.PathResourceType" Id="T:Azure.Storage.Files.DataLake.Models.PathResourceType">
      <Member Id="F:Azure.Storage.Files.DataLake.Models.PathResourceType.Directory" />
      <Member Id="F:Azure.Storage.Files.DataLake.Models.PathResourceType.File" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.PathUpdateAction" Id="T:Azure.Storage.Files.DataLake.Models.PathUpdateAction">
      <Member Id="F:Azure.Storage.Files.DataLake.Models.PathUpdateAction.Append" />
      <Member Id="F:Azure.Storage.Files.DataLake.Models.PathUpdateAction.Flush" />
      <Member Id="F:Azure.Storage.Files.DataLake.Models.PathUpdateAction.SetAccessControl" />
      <Member Id="F:Azure.Storage.Files.DataLake.Models.PathUpdateAction.SetAccessControlRecursive" />
      <Member Id="F:Azure.Storage.Files.DataLake.Models.PathUpdateAction.SetProperties" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.PublicAccessType" Id="T:Azure.Storage.Files.DataLake.Models.PublicAccessType">
      <Member Id="F:Azure.Storage.Files.DataLake.Models.PublicAccessType.FileSystem" />
      <Member Id="F:Azure.Storage.Files.DataLake.Models.PublicAccessType.None" />
      <Member Id="F:Azure.Storage.Files.DataLake.Models.PublicAccessType.Path" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.ReleasedObjectInfo" Id="T:Azure.Storage.Files.DataLake.Models.ReleasedObjectInfo">
      <Member Id="M:Azure.Storage.Files.DataLake.Models.ReleasedObjectInfo.#ctor(Azure.ETag,System.DateTimeOffset)" />
      <Member Id="M:Azure.Storage.Files.DataLake.Models.ReleasedObjectInfo.Equals(Azure.Storage.Files.DataLake.Models.ReleasedObjectInfo)" />
      <Member Id="M:Azure.Storage.Files.DataLake.Models.ReleasedObjectInfo.Equals(System.Object)" />
      <Member Id="M:Azure.Storage.Files.DataLake.Models.ReleasedObjectInfo.GetHashCode" />
      <Member Id="M:Azure.Storage.Files.DataLake.Models.ReleasedObjectInfo.op_Equality(Azure.Storage.Files.DataLake.Models.ReleasedObjectInfo,Azure.Storage.Files.DataLake.Models.ReleasedObjectInfo)" />
      <Member Id="M:Azure.Storage.Files.DataLake.Models.ReleasedObjectInfo.op_Inequality(Azure.Storage.Files.DataLake.Models.ReleasedObjectInfo,Azure.Storage.Files.DataLake.Models.ReleasedObjectInfo)" />
      <Member Id="M:Azure.Storage.Files.DataLake.Models.ReleasedObjectInfo.ToString" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.ReleasedObjectInfo.ETag" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.ReleasedObjectInfo.LastModified" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.RemovePathAccessControlItem" Id="T:Azure.Storage.Files.DataLake.Models.RemovePathAccessControlItem">
      <Member Id="M:Azure.Storage.Files.DataLake.Models.RemovePathAccessControlItem.#ctor(Azure.Storage.Files.DataLake.Models.AccessControlType,System.Boolean,System.String)" />
      <Member Id="M:Azure.Storage.Files.DataLake.Models.RemovePathAccessControlItem.Parse(System.String)" />
      <Member Id="M:Azure.Storage.Files.DataLake.Models.RemovePathAccessControlItem.ParseAccessControlList(System.String)" />
      <Member Id="M:Azure.Storage.Files.DataLake.Models.RemovePathAccessControlItem.ToAccessControlListString(System.Collections.Generic.IList{Azure.Storage.Files.DataLake.Models.RemovePathAccessControlItem})" />
      <Member Id="M:Azure.Storage.Files.DataLake.Models.RemovePathAccessControlItem.ToString" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.RemovePathAccessControlItem.AccessControlType" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.RemovePathAccessControlItem.DefaultScope" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.RemovePathAccessControlItem.EntityId" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.RolePermissions" Id="T:Azure.Storage.Files.DataLake.Models.RolePermissions">
      <Member Id="F:Azure.Storage.Files.DataLake.Models.RolePermissions.Execute" />
      <Member Id="F:Azure.Storage.Files.DataLake.Models.RolePermissions.None" />
      <Member Id="F:Azure.Storage.Files.DataLake.Models.RolePermissions.Read" />
      <Member Id="F:Azure.Storage.Files.DataLake.Models.RolePermissions.Write" />
    </Type>
    <Type Name="Azure.Storage.Files.DataLake.Models.UserDelegationKey" Id="T:Azure.Storage.Files.DataLake.Models.UserDelegationKey">
      <Member Id="P:Azure.Storage.Files.DataLake.Models.UserDelegationKey.SignedExpiresOn" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.UserDelegationKey.SignedObjectId" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.UserDelegationKey.SignedService" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.UserDelegationKey.SignedStartsOn" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.UserDelegationKey.SignedTenantId" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.UserDelegationKey.SignedVersion" />
      <Member Id="P:Azure.Storage.Files.DataLake.Models.UserDelegationKey.Value" />
    </Type>
  </Namespace>
  <Namespace Name="Azure.Storage.Files.Shares.Models">
    <Type Name="Azure.Storage.Files.Shares.Models.CloseHandlesResult" Id="T:Azure.Storage.Files.Shares.Models.CloseHandlesResult">
      <Member Id="P:Azure.Storage.Files.Shares.Models.CloseHandlesResult.ClosedHandlesCount" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.CloseHandlesResult.FailedHandlesCount" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.CopyStatus" Id="T:Azure.Storage.Files.Shares.Models.CopyStatus">
      <Member Id="F:Azure.Storage.Files.Shares.Models.CopyStatus.Aborted" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.CopyStatus.Failed" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.CopyStatus.Pending" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.CopyStatus.Success" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.FileLeaseReleaseInfo" Id="T:Azure.Storage.Files.Shares.Models.FileLeaseReleaseInfo">
      <Member Id="P:Azure.Storage.Files.Shares.Models.FileLeaseReleaseInfo.ETag" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.FileLeaseReleaseInfo.LastModified" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.FileModelFactory" Id="T:Azure.Storage.Files.Shares.Models.FileModelFactory">
      <Member Id="M:Azure.Storage.Files.Shares.Models.FileModelFactory.ClosedHandlesInfo(System.Int32)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.FileModelFactory.ClosedHandlesInfo(System.Int32,System.Int32)" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.FileSmbProperties" Id="T:Azure.Storage.Files.Shares.Models.FileSmbProperties">
      <Member Id="M:Azure.Storage.Files.Shares.Models.FileSmbProperties.#ctor" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.FileSmbProperties.Equals(System.Object)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.FileSmbProperties.GetHashCode" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.FileSmbProperties.FileAttributes" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.FileSmbProperties.FileChangedOn" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.FileSmbProperties.FileCreatedOn" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.FileSmbProperties.FileId" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.FileSmbProperties.FileLastWrittenOn" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.FileSmbProperties.FilePermissionKey" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.FileSmbProperties.ParentId" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.FilesModelFactory" Id="T:Azure.Storage.Files.Shares.Models.FilesModelFactory">
      <Member Id="M:Azure.Storage.Files.Shares.Models.FilesModelFactory.StorageDirectoryProperties(System.Collections.Generic.IDictionary{System.String,System.String},Azure.ETag,System.DateTimeOffset,System.Boolean,System.String,System.DateTimeOffset,System.DateTimeOffset,System.DateTimeOffset,System.String,System.String,System.String)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.FilesModelFactory.StorageFileDownloadInfo(System.DateTimeOffset,System.Collections.Generic.IEnumerable{System.String},System.String,System.DateTimeOffset,System.String,System.String,System.String,System.Uri,Azure.Storage.Files.Shares.Models.CopyStatus,System.Byte[],System.Boolean,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.DateTimeOffset,System.Byte[],System.DateTimeOffset,Azure.ETag,System.DateTimeOffset,System.String,System.String,System.String,System.String,System.Int64,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.IO.Stream,System.String)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.FilesModelFactory.StorageFileDownloadProperties(System.DateTimeOffset,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Azure.ETag,System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.DateTimeOffset,System.String,System.String,System.String,System.Uri,Azure.Storage.Files.Shares.Models.CopyStatus,System.Byte[],System.Boolean)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.FilesModelFactory.StorageFileInfo(Azure.ETag,System.DateTimeOffset,System.Boolean,System.String,System.String,System.DateTimeOffset,System.DateTimeOffset,System.DateTimeOffset,System.String,System.String)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.FilesModelFactory.StorageFileItem(System.Boolean,System.String,System.Nullable{System.Int64})" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.FilesModelFactory.StorageFileProperties(System.DateTimeOffset,System.Collections.Generic.IDictionary{System.String,System.String},System.Int64,System.String,Azure.ETag,System.Byte[],System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.DateTimeOffset,System.String,System.String,System.String,System.String,Azure.Storage.Files.Shares.Models.CopyStatus,System.Boolean,System.String,System.DateTimeOffset,System.DateTimeOffset,System.DateTimeOffset,System.String,System.String,System.String)" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.NtfsFileAttributes" Id="T:Azure.Storage.Files.Shares.Models.NtfsFileAttributes">
      <Member Id="F:Azure.Storage.Files.Shares.Models.NtfsFileAttributes.Archive" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.NtfsFileAttributes.Directory" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.NtfsFileAttributes.Hidden" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.NtfsFileAttributes.None" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.NtfsFileAttributes.NoScrubData" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.NtfsFileAttributes.NotContentIndexed" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.NtfsFileAttributes.Offline" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.NtfsFileAttributes.ReadOnly" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.NtfsFileAttributes.System" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.NtfsFileAttributes.Temporary" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.PermissionCopyMode" Id="T:Azure.Storage.Files.Shares.Models.PermissionCopyMode">
      <Member Id="F:Azure.Storage.Files.Shares.Models.PermissionCopyMode.Override" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.PermissionCopyMode.Source" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.PermissionInfo" Id="T:Azure.Storage.Files.Shares.Models.PermissionInfo">
      <Member Id="P:Azure.Storage.Files.Shares.Models.PermissionInfo.FilePermissionKey" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareAccessPolicy" Id="T:Azure.Storage.Files.Shares.Models.ShareAccessPolicy">
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareAccessPolicy.#ctor" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareAccessPolicy.ExpiresOn" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareAccessPolicy.Permissions" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareAccessPolicy.PolicyExpiresOn" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareAccessPolicy.PolicyStartsOn" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareAccessPolicy.StartsOn" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareAccessTier" Id="T:Azure.Storage.Files.Shares.Models.ShareAccessTier">
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareAccessTier.#ctor(System.String)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareAccessTier.Equals(Azure.Storage.Files.Shares.Models.ShareAccessTier)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareAccessTier.Equals(System.Object)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareAccessTier.GetHashCode" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareAccessTier.op_Equality(Azure.Storage.Files.Shares.Models.ShareAccessTier,Azure.Storage.Files.Shares.Models.ShareAccessTier)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareAccessTier.op_Implicit(System.String)~Azure.Storage.Files.Shares.Models.ShareAccessTier" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareAccessTier.op_Inequality(Azure.Storage.Files.Shares.Models.ShareAccessTier,Azure.Storage.Files.Shares.Models.ShareAccessTier)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareAccessTier.ToString" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareAccessTier.Cool" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareAccessTier.Hot" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareAccessTier.TransactionOptimized" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareCorsRule" Id="T:Azure.Storage.Files.Shares.Models.ShareCorsRule">
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareCorsRule.#ctor" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareCorsRule.AllowedHeaders" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareCorsRule.AllowedMethods" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareCorsRule.AllowedOrigins" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareCorsRule.ExposedHeaders" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareCorsRule.MaxAgeInSeconds" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareCreateOptions" Id="T:Azure.Storage.Files.Shares.Models.ShareCreateOptions">
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareCreateOptions.#ctor" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareCreateOptions.AccessTier" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareCreateOptions.Metadata" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareCreateOptions.Protocols" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareCreateOptions.QuotaInGB" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareCreateOptions.RootSquash" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareDeleteOptions" Id="T:Azure.Storage.Files.Shares.Models.ShareDeleteOptions">
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareDeleteOptions.#ctor" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareDeleteOptions.Conditions" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareDeleteOptions.ShareSnapshotsDeleteOption" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareDirectoryInfo" Id="T:Azure.Storage.Files.Shares.Models.ShareDirectoryInfo">
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareDirectoryInfo.ETag" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareDirectoryInfo.LastModified" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareDirectoryInfo.SmbProperties" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareDirectoryProperties" Id="T:Azure.Storage.Files.Shares.Models.ShareDirectoryProperties">
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareDirectoryProperties.ETag" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareDirectoryProperties.IsServerEncrypted" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareDirectoryProperties.LastModified" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareDirectoryProperties.Metadata" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareDirectoryProperties.SmbProperties" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareErrorCode" Id="T:Azure.Storage.Files.Shares.Models.ShareErrorCode">
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareErrorCode.#ctor(System.String)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareErrorCode.Equals(Azure.Storage.Files.Shares.Models.ShareErrorCode)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareErrorCode.Equals(System.Object)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareErrorCode.GetHashCode" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareErrorCode.op_Equality(Azure.Storage.Files.Shares.Models.ShareErrorCode,Azure.Storage.Files.Shares.Models.ShareErrorCode)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareErrorCode.op_Implicit(System.String)~Azure.Storage.Files.Shares.Models.ShareErrorCode" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareErrorCode.op_Inequality(Azure.Storage.Files.Shares.Models.ShareErrorCode,Azure.Storage.Files.Shares.Models.ShareErrorCode)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareErrorCode.ToString" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.AccountAlreadyExists" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.AccountBeingCreated" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.AccountIsDisabled" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.AuthenticationFailed" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.AuthorizationFailure" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.AuthorizationPermissionMismatch" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.AuthorizationProtocolMismatch" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.AuthorizationResourceTypeMismatch" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.AuthorizationServiceMismatch" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.AuthorizationSourceIPMismatch" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.CannotDeleteFileOrDirectory" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ClientCacheFlushDelay" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ConditionHeadersNotSupported" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ConditionNotMet" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ContainerQuotaDowngradeNotAllowed" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.DeletePending" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.DirectoryNotEmpty" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.EmptyMetadataKey" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.FeatureVersionMismatch" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.FileLockConflict" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.InsufficientAccountPermissions" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.InternalError" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.InvalidAuthenticationInfo" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.InvalidFileOrDirectoryPathName" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.InvalidHeaderValue" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.InvalidHttpVerb" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.InvalidInput" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.InvalidMd5" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.InvalidMetadata" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.InvalidQueryParameterValue" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.InvalidRange" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.InvalidResourceName" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.InvalidUri" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.InvalidXmlDocument" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.InvalidXmlNodeValue" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.Md5Mismatch" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.MetadataTooLarge" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.MissingContentLengthHeader" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.MissingRequiredHeader" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.MissingRequiredQueryParameter" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.MissingRequiredXmlNode" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.MultipleConditionHeadersNotSupported" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.OperationTimedOut" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.OutOfRangeInput" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.OutOfRangeQueryParameterValue" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ParentNotFound" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ReadOnlyAttribute" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.RequestBodyTooLarge" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.RequestUrlFailedToParse" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ResourceAlreadyExists" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ResourceNotFound" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ResourceTypeMismatch" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ServerBusy" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ShareAlreadyExists" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ShareBeingDeleted" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ShareDisabled" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ShareHasSnapshots" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ShareNotFound" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ShareSnapshotCountExceeded" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ShareSnapshotInProgress" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ShareSnapshotOperationNotSupported" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.SharingViolation" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.UnsupportedHeader" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.UnsupportedHttpVerb" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.UnsupportedQueryParameter" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.UnsupportedXmlNode" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareFileCopyInfo" Id="T:Azure.Storage.Files.Shares.Models.ShareFileCopyInfo">
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileCopyInfo.CopyId" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileCopyInfo.CopyStatus" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileCopyInfo.ETag" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileCopyInfo.LastModified" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails" Id="T:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails">
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.AcceptRanges" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.CacheControl" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.ContentDisposition" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.ContentEncoding" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.ContentLanguage" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.ContentRange" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.CopyCompletedOn" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.CopyId" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.CopyProgress" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.CopySource" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.CopyStatus" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.CopyStatusDescription" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.ETag" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.FileContentHash" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.IsServerEncrypted" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.LastModified" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.LeaseDuration" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.LeaseState" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.LeaseStatus" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.Metadata" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.SmbProperties" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareFileDownloadInfo" Id="T:Azure.Storage.Files.Shares.Models.ShareFileDownloadInfo">
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareFileDownloadInfo.Dispose" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadInfo.Content" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadInfo.ContentHash" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadInfo.ContentLength" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadInfo.ContentType" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadInfo.Details" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareFileGetRangeListDiffOptions" Id="T:Azure.Storage.Files.Shares.Models.ShareFileGetRangeListDiffOptions">
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareFileGetRangeListDiffOptions.#ctor" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileGetRangeListDiffOptions.Conditions" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileGetRangeListDiffOptions.PreviousSnapshot" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileGetRangeListDiffOptions.Range" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileGetRangeListDiffOptions.Snapshot" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareFileGetRangeListOptions" Id="T:Azure.Storage.Files.Shares.Models.ShareFileGetRangeListOptions">
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareFileGetRangeListOptions.#ctor" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileGetRangeListOptions.Conditions" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileGetRangeListOptions.Range" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileGetRangeListOptions.Snapshot" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareFileHandle" Id="T:Azure.Storage.Files.Shares.Models.ShareFileHandle">
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileHandle.ClientIp" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileHandle.FileId" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileHandle.HandleId" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileHandle.LastReconnectedOn" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileHandle.OpenedOn" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileHandle.ParentId" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileHandle.Path" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileHandle.SessionId" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders" Id="T:Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders">
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders.#ctor" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders.Equals(System.Object)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders.GetHashCode" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders.CacheControl" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders.ContentDisposition" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders.ContentEncoding" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders.ContentHash" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders.ContentLanguage" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders.ContentType" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareFileInfo" Id="T:Azure.Storage.Files.Shares.Models.ShareFileInfo">
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileInfo.ETag" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileInfo.IsServerEncrypted" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileInfo.LastModified" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileInfo.SmbProperties" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareFileItem" Id="T:Azure.Storage.Files.Shares.Models.ShareFileItem">
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileItem.FileSize" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileItem.IsDirectory" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileItem.Name" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareFileLease" Id="T:Azure.Storage.Files.Shares.Models.ShareFileLease">
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileLease.ETag" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileLease.LastModified" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileLease.LeaseId" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileLease.LeaseTime" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareFileOpenReadOptions" Id="T:Azure.Storage.Files.Shares.Models.ShareFileOpenReadOptions">
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareFileOpenReadOptions.#ctor(System.Boolean)" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileOpenReadOptions.BufferSize" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileOpenReadOptions.Conditions" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileOpenReadOptions.Position" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareFileOpenWriteOptions" Id="T:Azure.Storage.Files.Shares.Models.ShareFileOpenWriteOptions">
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareFileOpenWriteOptions.#ctor" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileOpenWriteOptions.BufferSize" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileOpenWriteOptions.MaxSize" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileOpenWriteOptions.OpenConditions" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileOpenWriteOptions.ProgressHandler" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareFileProperties" Id="T:Azure.Storage.Files.Shares.Models.ShareFileProperties">
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.CacheControl" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.ContentDisposition" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.ContentEncoding" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.ContentHash" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.ContentLanguage" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.ContentLength" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.ContentType" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.CopyCompletedOn" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.CopyId" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.CopyProgress" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.CopySource" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.CopyStatus" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.CopyStatusDescription" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.ETag" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.IsServerEncrypted" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.LastModified" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.LeaseDuration" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.LeaseState" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.LeaseStatus" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.Metadata" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.SmbProperties" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareFileRangeInfo" Id="T:Azure.Storage.Files.Shares.Models.ShareFileRangeInfo">
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileRangeInfo.ClearRanges" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileRangeInfo.ETag" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileRangeInfo.FileContentLength" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileRangeInfo.LastModified" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileRangeInfo.Ranges" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareFileRangeWriteType" Id="T:Azure.Storage.Files.Shares.Models.ShareFileRangeWriteType">
      <Member Id="F:Azure.Storage.Files.Shares.Models.ShareFileRangeWriteType.Clear" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.ShareFileRangeWriteType.Update" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" Id="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions">
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions.#ctor" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions.ToString" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions.LeaseId" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareFileUploadInfo" Id="T:Azure.Storage.Files.Shares.Models.ShareFileUploadInfo">
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileUploadInfo.ContentHash" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileUploadInfo.ETag" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileUploadInfo.IsServerEncrypted" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileUploadInfo.LastModified" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareInfo" Id="T:Azure.Storage.Files.Shares.Models.ShareInfo">
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareInfo.ETag" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareInfo.LastModified" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareItem" Id="T:Azure.Storage.Files.Shares.Models.ShareItem">
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareItem.IsDeleted" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareItem.Name" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareItem.Properties" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareItem.Snapshot" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareItem.VersionId" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareLeaseDuration" Id="T:Azure.Storage.Files.Shares.Models.ShareLeaseDuration">
      <Member Id="F:Azure.Storage.Files.Shares.Models.ShareLeaseDuration.Fixed" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.ShareLeaseDuration.Infinite" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareLeaseState" Id="T:Azure.Storage.Files.Shares.Models.ShareLeaseState">
      <Member Id="F:Azure.Storage.Files.Shares.Models.ShareLeaseState.Available" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.ShareLeaseState.Breaking" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.ShareLeaseState.Broken" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.ShareLeaseState.Expired" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.ShareLeaseState.Leased" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareLeaseStatus" Id="T:Azure.Storage.Files.Shares.Models.ShareLeaseStatus">
      <Member Id="F:Azure.Storage.Files.Shares.Models.ShareLeaseStatus.Locked" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.ShareLeaseStatus.Unlocked" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareMetrics" Id="T:Azure.Storage.Files.Shares.Models.ShareMetrics">
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareMetrics.#ctor" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareMetrics.Enabled" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareMetrics.IncludeApis" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareMetrics.RetentionPolicy" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareMetrics.Version" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareModelFactory" Id="T:Azure.Storage.Files.Shares.Models.ShareModelFactory">
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.FileLeaseReleaseInfo(Azure.ETag,System.DateTimeOffset)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.PermissionInfo(System.String)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.ShareFileCopyInfo(Azure.ETag,System.DateTimeOffset,System.String,Azure.Storage.Files.Shares.Models.CopyStatus)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.ShareFileHandle(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.ShareFileLease(Azure.ETag,System.DateTimeOffset,System.String)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.ShareFileRangeInfo(System.DateTimeOffset,Azure.ETag,System.Int64,System.Collections.Generic.IEnumerable{Azure.HttpRange})" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.ShareFileUploadInfo(Azure.ETag,System.DateTimeOffset,System.Byte[],System.Boolean)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.ShareInfo(Azure.ETag,System.DateTimeOffset)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.ShareItem(System.String,Azure.Storage.Files.Shares.Models.ShareProperties,System.String)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.ShareItem(System.String,Azure.Storage.Files.Shares.Models.ShareProperties,System.String,System.Nullable{System.Boolean},System.String)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.ShareProperties(System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String})" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.ShareProperties(System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String})" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.ShareProperties(System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String})" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.ShareProperties(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.Nullable{Azure.ETag},System.Nullable{System.DateTimeOffset},System.String,System.Nullable{Azure.Storage.Files.Shares.Models.ShareLeaseStatus},System.Nullable{Azure.Storage.Files.Shares.Models.ShareLeaseState},System.Nullable{Azure.Storage.Files.Shares.Models.ShareLeaseDuration},System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String})" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.ShareProperties(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.Nullable{Azure.ETag},System.Nullable{System.DateTimeOffset},System.String,System.Nullable{Azure.Storage.Files.Shares.Models.ShareLeaseStatus},System.Nullable{Azure.Storage.Files.Shares.Models.ShareLeaseState},System.Nullable{Azure.Storage.Files.Shares.Models.ShareLeaseDuration},System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.Storage.Files.Shares.Models.ShareProtocols},System.Nullable{Azure.Storage.Files.Shares.Models.ShareRootSquash})" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.ShareSnapshotInfo(System.String,Azure.ETag,System.DateTimeOffset)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.ShareStatistics(System.Int32)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.ShareStatistics(System.Int64)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.StorageClosedHandlesSegment(System.String,System.Int32)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.StorageClosedHandlesSegment(System.String,System.Int32,System.Int32)" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareProperties" Id="T:Azure.Storage.Files.Shares.Models.ShareProperties">
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareProperties.AccessTier" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareProperties.AccessTierChangeTime" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareProperties.AccessTierTransitionState" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareProperties.DeletedOn" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareProperties.ETag" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareProperties.LastModified" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareProperties.LeaseDuration" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareProperties.LeaseState" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareProperties.LeaseStatus" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareProperties.Metadata" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareProperties.NextAllowedQuotaDowngradeTime" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareProperties.Protocols" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareProperties.ProvisionedEgressMBps" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareProperties.ProvisionedIngressMBps" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareProperties.ProvisionedIops" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareProperties.QuotaInGB" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareProperties.RemainingRetentionDays" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareProperties.RootSquash" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareProtocols" Id="T:Azure.Storage.Files.Shares.Models.ShareProtocols">
      <Member Id="F:Azure.Storage.Files.Shares.Models.ShareProtocols.Nfs" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.ShareProtocols.Smb" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareProtocolSettings" Id="T:Azure.Storage.Files.Shares.Models.ShareProtocolSettings">
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareProtocolSettings.#ctor" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareProtocolSettings.Smb" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareRetentionPolicy" Id="T:Azure.Storage.Files.Shares.Models.ShareRetentionPolicy">
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareRetentionPolicy.#ctor" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareRetentionPolicy.Days" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareRetentionPolicy.Enabled" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareRootSquash" Id="T:Azure.Storage.Files.Shares.Models.ShareRootSquash">
      <Member Id="F:Azure.Storage.Files.Shares.Models.ShareRootSquash.AllSquash" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.ShareRootSquash.NoRootSquash" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.ShareRootSquash.RootSquash" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareServiceProperties" Id="T:Azure.Storage.Files.Shares.Models.ShareServiceProperties">
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareServiceProperties.#ctor" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareServiceProperties.Cors" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareServiceProperties.HourMetrics" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareServiceProperties.MinuteMetrics" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareServiceProperties.Protocol" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareSetPropertiesOptions" Id="T:Azure.Storage.Files.Shares.Models.ShareSetPropertiesOptions">
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareSetPropertiesOptions.#ctor" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareSetPropertiesOptions.AccessTier" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareSetPropertiesOptions.Conditions" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareSetPropertiesOptions.QuotaInGB" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareSetPropertiesOptions.RootSquash" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareSignedIdentifier" Id="T:Azure.Storage.Files.Shares.Models.ShareSignedIdentifier">
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareSignedIdentifier.#ctor" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareSignedIdentifier.AccessPolicy" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareSignedIdentifier.Id" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareSmbSettings" Id="T:Azure.Storage.Files.Shares.Models.ShareSmbSettings">
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareSmbSettings.#ctor" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareSmbSettings.Multichannel" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.SharesModelFactory" Id="T:Azure.Storage.Files.Shares.Models.SharesModelFactory">
      <Member Id="M:Azure.Storage.Files.Shares.Models.SharesModelFactory.FileSmbProperties(System.Nullable{System.DateTimeOffset},System.String,System.String)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.SharesModelFactory.StorageDirectoryInfo(Azure.ETag,System.DateTimeOffset,System.String,System.String,System.DateTimeOffset,System.DateTimeOffset,System.DateTimeOffset,System.String,System.String)" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareSnapshotInfo" Id="T:Azure.Storage.Files.Shares.Models.ShareSnapshotInfo">
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareSnapshotInfo.ETag" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareSnapshotInfo.LastModified" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareSnapshotInfo.Snapshot" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareSnapshotsDeleteOption" Id="T:Azure.Storage.Files.Shares.Models.ShareSnapshotsDeleteOption">
      <Member Id="F:Azure.Storage.Files.Shares.Models.ShareSnapshotsDeleteOption.Include" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.ShareSnapshotsDeleteOption.IncludeWithLeased" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareStates" Id="T:Azure.Storage.Files.Shares.Models.ShareStates">
      <Member Id="F:Azure.Storage.Files.Shares.Models.ShareStates.All" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.ShareStates.Deleted" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.ShareStates.None" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.ShareStates.Snapshots" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareStatistics" Id="T:Azure.Storage.Files.Shares.Models.ShareStatistics">
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareStatistics.ShareUsageBytes" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareStatistics.ShareUsageInBytes" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareTraits" Id="T:Azure.Storage.Files.Shares.Models.ShareTraits">
      <Member Id="F:Azure.Storage.Files.Shares.Models.ShareTraits.All" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.ShareTraits.Metadata" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.ShareTraits.None" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.SmbMultichannel" Id="T:Azure.Storage.Files.Shares.Models.SmbMultichannel">
      <Member Id="M:Azure.Storage.Files.Shares.Models.SmbMultichannel.#ctor" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.SmbMultichannel.Enabled" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.StorageClosedHandlesSegment" Id="T:Azure.Storage.Files.Shares.Models.StorageClosedHandlesSegment">
      <Member Id="P:Azure.Storage.Files.Shares.Models.StorageClosedHandlesSegment.Marker" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.StorageClosedHandlesSegment.NumberOfHandlesClosed" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.StorageClosedHandlesSegment.NumberOfHandlesFailedToClose" />
    </Type>
  </Namespace>
  <Namespace Name="Azure.Storage.Files.Shares">
    <Type Name="Azure.Storage.Files.Shares.ShareClient" Id="T:Azure.Storage.Files.Shares.ShareClient">
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.#ctor" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.#ctor(System.String,System.String)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.#ctor(System.String,System.String,Azure.Storage.Files.Shares.ShareClientOptions)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.#ctor(System.Uri,Azure.AzureSasCredential,Azure.Storage.Files.Shares.ShareClientOptions)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.#ctor(System.Uri,Azure.Storage.Files.Shares.ShareClientOptions)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Files.Shares.ShareClientOptions)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.Create(Azure.Storage.Files.Shares.Models.ShareCreateOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.Create(System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.CreateAsync(Azure.Storage.Files.Shares.Models.ShareCreateOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.CreateAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.CreateDirectory(System.String,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.CreateDirectoryAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.CreateIfNotExists(Azure.Storage.Files.Shares.Models.ShareCreateOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.CreateIfNotExists(System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.CreateIfNotExistsAsync(Azure.Storage.Files.Shares.Models.ShareCreateOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.CreateIfNotExistsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.CreatePermission(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.CreatePermissionAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.CreateSnapshot(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.CreateSnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.Delete(Azure.Storage.Files.Shares.Models.ShareDeleteOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.Delete(System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.DeleteAsync(Azure.Storage.Files.Shares.Models.ShareDeleteOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.DeleteAsync(System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.DeleteDirectory(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.DeleteDirectoryAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.DeleteIfExists(Azure.Storage.Files.Shares.Models.ShareDeleteOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.DeleteIfExists(System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.DeleteIfExistsAsync(Azure.Storage.Files.Shares.Models.ShareDeleteOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.DeleteIfExistsAsync(System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.Exists(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.ExistsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.GenerateSasUri(Azure.Storage.Sas.ShareSasBuilder)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.GenerateSasUri(Azure.Storage.Sas.ShareSasPermissions,System.DateTimeOffset)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.GetAccessPolicy(Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.GetAccessPolicy(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.GetAccessPolicyAsync(Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.GetAccessPolicyAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.GetDirectoryClient(System.String)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.GetPermission(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.GetPermissionAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.GetProperties(Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.GetProperties(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.GetPropertiesAsync(Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.GetPropertiesAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.GetRootDirectoryClient" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.GetStatistics(Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.GetStatistics(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.GetStatisticsAsync(Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.GetStatisticsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.SetAccessPolicy(System.Collections.Generic.IEnumerable{Azure.Storage.Files.Shares.Models.ShareSignedIdentifier},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.SetAccessPolicy(System.Collections.Generic.IEnumerable{Azure.Storage.Files.Shares.Models.ShareSignedIdentifier},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.SetAccessPolicyAsync(System.Collections.Generic.IEnumerable{Azure.Storage.Files.Shares.Models.ShareSignedIdentifier},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.SetAccessPolicyAsync(System.Collections.Generic.IEnumerable{Azure.Storage.Files.Shares.Models.ShareSignedIdentifier},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.SetMetadata(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.SetMetadata(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.SetMetadataAsync(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.SetMetadataAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.SetProperties(Azure.Storage.Files.Shares.Models.ShareSetPropertiesOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.SetPropertiesAsync(Azure.Storage.Files.Shares.Models.ShareSetPropertiesOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.SetQuota(System.Int32,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.SetQuota(System.Int32,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.SetQuotaAsync(System.Int32,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.SetQuotaAsync(System.Int32,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.WithSnapshot(System.String)" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareClient.AccountName" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareClient.CanGenerateSasUri" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareClient.Name" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareClient.Uri" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.ShareClientOptions" Id="T:Azure.Storage.Files.Shares.ShareClientOptions">
      <Member Id="M:Azure.Storage.Files.Shares.ShareClientOptions.#ctor(Azure.Storage.Files.Shares.ShareClientOptions.ServiceVersion)" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareClientOptions.Version" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.ShareClientOptions/ServiceVersion" Id="T:Azure.Storage.Files.Shares.ShareClientOptions.ServiceVersion">
      <Member Id="F:Azure.Storage.Files.Shares.ShareClientOptions.ServiceVersion.V2019_02_02" />
      <Member Id="F:Azure.Storage.Files.Shares.ShareClientOptions.ServiceVersion.V2019_07_07" />
      <Member Id="F:Azure.Storage.Files.Shares.ShareClientOptions.ServiceVersion.V2019_12_12" />
      <Member Id="F:Azure.Storage.Files.Shares.ShareClientOptions.ServiceVersion.V2020_02_10" />
      <Member Id="F:Azure.Storage.Files.Shares.ShareClientOptions.ServiceVersion.V2020_04_08" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.ShareDirectoryClient" Id="T:Azure.Storage.Files.Shares.ShareDirectoryClient">
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.#ctor" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.#ctor(System.String,System.String,System.String)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.#ctor(System.String,System.String,System.String,Azure.Storage.Files.Shares.ShareClientOptions)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.#ctor(System.Uri,Azure.AzureSasCredential,Azure.Storage.Files.Shares.ShareClientOptions)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.#ctor(System.Uri,Azure.Storage.Files.Shares.ShareClientOptions)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Files.Shares.ShareClientOptions)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.Create(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.CreateAsync(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.CreateFile(System.String,System.Int64,Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.CreateFile(System.String,System.Int64,Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.CreateFileAsync(System.String,System.Int64,Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.CreateFileAsync(System.String,System.Int64,Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.CreateIfNotExists(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.CreateIfNotExistsAsync(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.CreateSubdirectory(System.String,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.CreateSubdirectoryAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.Delete(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteFile(System.String,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteFile(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteFileAsync(System.String,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteFileAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteIfExists(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteIfExistsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteSubdirectory(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteSubdirectoryAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.Exists(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.ExistsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.ForceCloseAllHandles(System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.ForceCloseAllHandlesAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.ForceCloseHandle(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.ForceCloseHandleAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GenerateSasUri(Azure.Storage.Sas.ShareFileSasPermissions,System.DateTimeOffset)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GenerateSasUri(Azure.Storage.Sas.ShareSasBuilder)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetFileClient(System.String)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetFilesAndDirectories(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetFilesAndDirectoriesAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetHandles(System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetHandlesAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetProperties(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetPropertiesAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetSubdirectoryClient(System.String)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.SetHttpHeaders(Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.SetHttpHeadersAsync(Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.SetMetadata(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.SetMetadataAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.WithSnapshot(System.String)" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareDirectoryClient.AccountName" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareDirectoryClient.CanGenerateSasUri" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareDirectoryClient.Name" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareDirectoryClient.Path" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareDirectoryClient.ShareName" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareDirectoryClient.Uri" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.ShareFileClient" Id="T:Azure.Storage.Files.Shares.ShareFileClient">
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.#ctor" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.#ctor(System.String,System.String,System.String)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.#ctor(System.String,System.String,System.String,Azure.Storage.Files.Shares.ShareClientOptions)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.#ctor(System.Uri,Azure.AzureSasCredential,Azure.Storage.Files.Shares.ShareClientOptions)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.#ctor(System.Uri,Azure.Storage.Files.Shares.ShareClientOptions)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Files.Shares.ShareClientOptions)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.AbortCopy(System.String,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.AbortCopy(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.AbortCopyAsync(System.String,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.AbortCopyAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.ClearRange(Azure.HttpRange,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.ClearRangeAsync(Azure.HttpRange,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.Create(System.Int64,Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.Create(System.Int64,Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.CreateAsync(System.Int64,Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.CreateAsync(System.Int64,Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.Delete(Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.Delete(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.DeleteAsync(Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.DeleteAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.DeleteIfExists(Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.DeleteIfExistsAsync(Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.Download(Azure.HttpRange,System.Boolean,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.Download(Azure.HttpRange,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.DownloadAsync(Azure.HttpRange,System.Boolean,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.DownloadAsync(Azure.HttpRange,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.Exists(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.ExistsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.ForceCloseAllHandles(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.ForceCloseAllHandlesAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.ForceCloseHandle(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.ForceCloseHandleAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.GenerateSasUri(Azure.Storage.Sas.ShareFileSasPermissions,System.DateTimeOffset)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.GenerateSasUri(Azure.Storage.Sas.ShareSasBuilder)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.GetHandles(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.GetHandlesAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.GetProperties(Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.GetProperties(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.GetPropertiesAsync(Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.GetPropertiesAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.GetRangeList(Azure.HttpRange,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.GetRangeList(Azure.HttpRange,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.GetRangeList(Azure.Storage.Files.Shares.Models.ShareFileGetRangeListOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.GetRangeListAsync(Azure.HttpRange,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.GetRangeListAsync(Azure.HttpRange,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.GetRangeListAsync(Azure.Storage.Files.Shares.Models.ShareFileGetRangeListOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.GetRangeListDiff(Azure.Storage.Files.Shares.Models.ShareFileGetRangeListDiffOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.GetRangeListDiffAsync(Azure.Storage.Files.Shares.Models.ShareFileGetRangeListDiffOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.OpenRead(Azure.Storage.Files.Shares.Models.ShareFileOpenReadOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.OpenRead(System.Boolean,System.Int64,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.OpenRead(System.Int64,System.Nullable{System.Int32},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.OpenReadAsync(Azure.Storage.Files.Shares.Models.ShareFileOpenReadOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.OpenReadAsync(System.Boolean,System.Int64,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.OpenReadAsync(System.Int64,System.Nullable{System.Int32},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.OpenWrite(System.Boolean,System.Int64,Azure.Storage.Files.Shares.Models.ShareFileOpenWriteOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.OpenWriteAsync(System.Boolean,System.Int64,Azure.Storage.Files.Shares.Models.ShareFileOpenWriteOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.SetHttpHeaders(System.Nullable{System.Int64},Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders,Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.SetHttpHeaders(System.Nullable{System.Int64},Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders,Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.SetHttpHeadersAsync(System.Nullable{System.Int64},Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders,Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.SetHttpHeadersAsync(System.Nullable{System.Int64},Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders,Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.SetMetadata(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.SetMetadata(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.SetMetadataAsync(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.SetMetadataAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.StartCopy(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Nullable{Azure.Storage.Files.Shares.Models.PermissionCopyMode},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.StartCopy(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.StartCopyAsync(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Nullable{Azure.Storage.Files.Shares.Models.PermissionCopyMode},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.StartCopyAsync(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.Upload(System.IO.Stream,System.IProgress{System.Int64},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.Upload(System.IO.Stream,System.IProgress{System.Int64},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.UploadAsync(System.IO.Stream,System.IProgress{System.Int64},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.UploadAsync(System.IO.Stream,System.IProgress{System.Int64},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRange(Azure.HttpRange,System.IO.Stream,System.Byte[],System.IProgress{System.Int64},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRange(Azure.Storage.Files.Shares.Models.ShareFileRangeWriteType,Azure.HttpRange,System.IO.Stream,System.Byte[],System.IProgress{System.Int64},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRangeAsync(Azure.HttpRange,System.IO.Stream,System.Byte[],System.IProgress{System.Int64},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRangeAsync(Azure.Storage.Files.Shares.Models.ShareFileRangeWriteType,Azure.HttpRange,System.IO.Stream,System.Byte[],System.IProgress{System.Int64},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRangeFromUri(System.Uri,Azure.HttpRange,Azure.HttpRange,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRangeFromUri(System.Uri,Azure.HttpRange,Azure.HttpRange,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRangeFromUriAsync(System.Uri,Azure.HttpRange,Azure.HttpRange,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRangeFromUriAsync(System.Uri,Azure.HttpRange,Azure.HttpRange,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.WithSnapshot(System.String)" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareFileClient.AccountName" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareFileClient.CanGenerateSasUri" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareFileClient.Name" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareFileClient.Path" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareFileClient.ShareName" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareFileClient.Uri" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.ShareServiceClient" Id="T:Azure.Storage.Files.Shares.ShareServiceClient">
      <Member Id="M:Azure.Storage.Files.Shares.ShareServiceClient.#ctor" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareServiceClient.#ctor(System.String)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareServiceClient.#ctor(System.String,Azure.Storage.Files.Shares.ShareClientOptions)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareServiceClient.#ctor(System.Uri,Azure.AzureSasCredential,Azure.Storage.Files.Shares.ShareClientOptions)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareServiceClient.#ctor(System.Uri,Azure.Storage.Files.Shares.ShareClientOptions)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareServiceClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Files.Shares.ShareClientOptions)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareServiceClient.CreateShare(System.String,Azure.Storage.Files.Shares.Models.ShareCreateOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareServiceClient.CreateShare(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareServiceClient.CreateShareAsync(System.String,Azure.Storage.Files.Shares.Models.ShareCreateOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareServiceClient.CreateShareAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareServiceClient.DeleteShare(System.String,Azure.Storage.Files.Shares.Models.ShareDeleteOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareServiceClient.DeleteShare(System.String,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareServiceClient.DeleteShareAsync(System.String,Azure.Storage.Files.Shares.Models.ShareDeleteOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareServiceClient.DeleteShareAsync(System.String,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareServiceClient.GenerateAccountSasUri(Azure.Storage.Sas.AccountSasBuilder)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareServiceClient.GenerateAccountSasUri(Azure.Storage.Sas.AccountSasPermissions,System.DateTimeOffset,Azure.Storage.Sas.AccountSasResourceTypes)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareServiceClient.GetProperties(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareServiceClient.GetPropertiesAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareServiceClient.GetShareClient(System.String)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareServiceClient.GetShares(Azure.Storage.Files.Shares.Models.ShareTraits,Azure.Storage.Files.Shares.Models.ShareStates,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareServiceClient.GetSharesAsync(Azure.Storage.Files.Shares.Models.ShareTraits,Azure.Storage.Files.Shares.Models.ShareStates,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareServiceClient.SetProperties(Azure.Storage.Files.Shares.Models.ShareServiceProperties,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareServiceClient.SetPropertiesAsync(Azure.Storage.Files.Shares.Models.ShareServiceProperties,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareServiceClient.UndeleteShare(System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareServiceClient.UndeleteShareAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareServiceClient.AccountName" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareServiceClient.CanGenerateAccountSasUri" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareServiceClient.Uri" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.ShareUriBuilder" Id="T:Azure.Storage.Files.Shares.ShareUriBuilder">
      <Member Id="M:Azure.Storage.Files.Shares.ShareUriBuilder.#ctor(System.Uri)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareUriBuilder.ToString" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareUriBuilder.ToUri" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareUriBuilder.AccountName" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareUriBuilder.DirectoryOrFilePath" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareUriBuilder.Host" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareUriBuilder.Port" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareUriBuilder.Query" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareUriBuilder.Sas" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareUriBuilder.Scheme" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareUriBuilder.ShareName" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareUriBuilder.Snapshot" />
    </Type>
  </Namespace>
  <Namespace Name="Azure.Storage.Files.Shares.Specialized">
    <Type Name="Azure.Storage.Files.Shares.Specialized.ShareLeaseClient" Id="T:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient">
      <Member Id="F:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.InfiniteLeaseDuration" />
      <Member Id="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.#ctor" />
      <Member Id="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.#ctor(Azure.Storage.Files.Shares.ShareFileClient,System.String)" />
      <Member Id="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.Acquire(System.Nullable{System.TimeSpan},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.Acquire(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.AcquireAsync(System.Nullable{System.TimeSpan},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.AcquireAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.Break(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.BreakAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.Change(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.ChangeAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.Release(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.ReleaseAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.Renew(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.RenewAsync(System.Threading.CancellationToken)" />
      <Member Id="P:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.FileClient" />
      <Member Id="P:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.LeaseId" />
      <Member Id="P:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.ShareClient" />
      <Member Id="P:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.Uri" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Specialized.SpecializedFileExtensions" Id="T:Azure.Storage.Files.Shares.Specialized.SpecializedFileExtensions">
      <Member Id="M:Azure.Storage.Files.Shares.Specialized.SpecializedFileExtensions.GetShareLeaseClient(Azure.Storage.Files.Shares.ShareClient,System.String)" />
      <Member Id="M:Azure.Storage.Files.Shares.Specialized.SpecializedFileExtensions.GetShareLeaseClient(Azure.Storage.Files.Shares.ShareFileClient,System.String)" />
    </Type>
  </Namespace>
  <Namespace Name="Azure.Storage.Queues.Models">
    <Type Name="Azure.Storage.Queues.Models.PeekedMessage" Id="T:Azure.Storage.Queues.Models.PeekedMessage">
      <Member Id="P:Azure.Storage.Queues.Models.PeekedMessage.Body" />
      <Member Id="P:Azure.Storage.Queues.Models.PeekedMessage.DequeueCount" />
      <Member Id="P:Azure.Storage.Queues.Models.PeekedMessage.ExpiresOn" />
      <Member Id="P:Azure.Storage.Queues.Models.PeekedMessage.InsertedOn" />
      <Member Id="P:Azure.Storage.Queues.Models.PeekedMessage.MessageId" />
      <Member Id="P:Azure.Storage.Queues.Models.PeekedMessage.MessageText" />
    </Type>
    <Type Name="Azure.Storage.Queues.Models.QueueAccessPolicy" Id="T:Azure.Storage.Queues.Models.QueueAccessPolicy">
      <Member Id="M:Azure.Storage.Queues.Models.QueueAccessPolicy.#ctor" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueAccessPolicy.ExpiresOn" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueAccessPolicy.Permissions" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueAccessPolicy.StartsOn" />
    </Type>
    <Type Name="Azure.Storage.Queues.Models.QueueAnalyticsLogging" Id="T:Azure.Storage.Queues.Models.QueueAnalyticsLogging">
      <Member Id="M:Azure.Storage.Queues.Models.QueueAnalyticsLogging.#ctor" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueAnalyticsLogging.Delete" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueAnalyticsLogging.Read" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueAnalyticsLogging.RetentionPolicy" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueAnalyticsLogging.Version" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueAnalyticsLogging.Write" />
    </Type>
    <Type Name="Azure.Storage.Queues.Models.QueueCorsRule" Id="T:Azure.Storage.Queues.Models.QueueCorsRule">
      <Member Id="M:Azure.Storage.Queues.Models.QueueCorsRule.#ctor" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueCorsRule.AllowedHeaders" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueCorsRule.AllowedMethods" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueCorsRule.AllowedOrigins" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueCorsRule.ExposedHeaders" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueCorsRule.MaxAgeInSeconds" />
    </Type>
    <Type Name="Azure.Storage.Queues.Models.QueueErrorCode" Id="T:Azure.Storage.Queues.Models.QueueErrorCode">
      <Member Id="M:Azure.Storage.Queues.Models.QueueErrorCode.#ctor(System.String)" />
      <Member Id="M:Azure.Storage.Queues.Models.QueueErrorCode.Equals(Azure.Storage.Queues.Models.QueueErrorCode)" />
      <Member Id="M:Azure.Storage.Queues.Models.QueueErrorCode.Equals(System.Object)" />
      <Member Id="M:Azure.Storage.Queues.Models.QueueErrorCode.GetHashCode" />
      <Member Id="M:Azure.Storage.Queues.Models.QueueErrorCode.op_Equality(Azure.Storage.Queues.Models.QueueErrorCode,Azure.Storage.Queues.Models.QueueErrorCode)" />
      <Member Id="M:Azure.Storage.Queues.Models.QueueErrorCode.op_Implicit(System.String)~Azure.Storage.Queues.Models.QueueErrorCode" />
      <Member Id="M:Azure.Storage.Queues.Models.QueueErrorCode.op_Inequality(Azure.Storage.Queues.Models.QueueErrorCode,Azure.Storage.Queues.Models.QueueErrorCode)" />
      <Member Id="M:Azure.Storage.Queues.Models.QueueErrorCode.ToString" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.AccountAlreadyExists" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.AccountBeingCreated" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.AccountIsDisabled" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.AuthenticationFailed" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.AuthorizationFailure" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.AuthorizationPermissionMismatch" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.AuthorizationProtocolMismatch" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.AuthorizationResourceTypeMismatch" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.AuthorizationServiceMismatch" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.AuthorizationSourceIPMismatch" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.ConditionHeadersNotSupported" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.ConditionNotMet" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.EmptyMetadataKey" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.FeatureVersionMismatch" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.InsufficientAccountPermissions" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.InternalError" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.InvalidAuthenticationInfo" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.InvalidHeaderValue" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.InvalidHttpVerb" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.InvalidInput" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.InvalidMarker" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.InvalidMd5" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.InvalidMetadata" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.InvalidQueryParameterValue" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.InvalidRange" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.InvalidResourceName" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.InvalidUri" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.InvalidXmlDocument" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.InvalidXmlNodeValue" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.Md5Mismatch" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.MessageNotFound" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.MessageTooLarge" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.MetadataTooLarge" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.MissingContentLengthHeader" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.MissingRequiredHeader" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.MissingRequiredQueryParameter" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.MissingRequiredXmlNode" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.MultipleConditionHeadersNotSupported" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.OperationTimedOut" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.OutOfRangeInput" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.OutOfRangeQueryParameterValue" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.PopReceiptMismatch" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.QueueAlreadyExists" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.QueueBeingDeleted" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.QueueDisabled" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.QueueNotEmpty" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.QueueNotFound" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.RequestBodyTooLarge" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.RequestUrlFailedToParse" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.ResourceAlreadyExists" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.ResourceNotFound" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.ResourceTypeMismatch" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.ServerBusy" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.UnsupportedHeader" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.UnsupportedHttpVerb" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.UnsupportedQueryParameter" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.UnsupportedXmlNode" />
    </Type>
    <Type Name="Azure.Storage.Queues.Models.QueueGeoReplication" Id="T:Azure.Storage.Queues.Models.QueueGeoReplication">
      <Member Id="P:Azure.Storage.Queues.Models.QueueGeoReplication.LastSyncedOn" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueGeoReplication.Status" />
    </Type>
    <Type Name="Azure.Storage.Queues.Models.QueueGeoReplicationStatus" Id="T:Azure.Storage.Queues.Models.QueueGeoReplicationStatus">
      <Member Id="F:Azure.Storage.Queues.Models.QueueGeoReplicationStatus.Bootstrap" />
      <Member Id="F:Azure.Storage.Queues.Models.QueueGeoReplicationStatus.Live" />
      <Member Id="F:Azure.Storage.Queues.Models.QueueGeoReplicationStatus.Unavailable" />
    </Type>
    <Type Name="Azure.Storage.Queues.Models.QueueItem" Id="T:Azure.Storage.Queues.Models.QueueItem">
      <Member Id="P:Azure.Storage.Queues.Models.QueueItem.Metadata" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueItem.Name" />
    </Type>
    <Type Name="Azure.Storage.Queues.Models.QueueMessage" Id="T:Azure.Storage.Queues.Models.QueueMessage">
      <Member Id="M:Azure.Storage.Queues.Models.QueueMessage.Update(Azure.Storage.Queues.Models.UpdateReceipt)" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueMessage.Body" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueMessage.DequeueCount" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueMessage.ExpiresOn" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueMessage.InsertedOn" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueMessage.MessageId" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueMessage.MessageText" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueMessage.NextVisibleOn" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueMessage.PopReceipt" />
    </Type>
    <Type Name="Azure.Storage.Queues.Models.QueueMetrics" Id="T:Azure.Storage.Queues.Models.QueueMetrics">
      <Member Id="M:Azure.Storage.Queues.Models.QueueMetrics.#ctor" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueMetrics.Enabled" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueMetrics.IncludeApis" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueMetrics.RetentionPolicy" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueMetrics.Version" />
    </Type>
    <Type Name="Azure.Storage.Queues.Models.QueueProperties" Id="T:Azure.Storage.Queues.Models.QueueProperties">
      <Member Id="M:Azure.Storage.Queues.Models.QueueProperties.#ctor" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueProperties.ApproximateMessagesCount" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueProperties.Metadata" />
    </Type>
    <Type Name="Azure.Storage.Queues.Models.QueueRetentionPolicy" Id="T:Azure.Storage.Queues.Models.QueueRetentionPolicy">
      <Member Id="M:Azure.Storage.Queues.Models.QueueRetentionPolicy.#ctor" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueRetentionPolicy.Days" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueRetentionPolicy.Enabled" />
    </Type>
    <Type Name="Azure.Storage.Queues.Models.QueueServiceProperties" Id="T:Azure.Storage.Queues.Models.QueueServiceProperties">
      <Member Id="M:Azure.Storage.Queues.Models.QueueServiceProperties.#ctor" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueServiceProperties.Cors" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueServiceProperties.HourMetrics" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueServiceProperties.Logging" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueServiceProperties.MinuteMetrics" />
    </Type>
    <Type Name="Azure.Storage.Queues.Models.QueueServiceStatistics" Id="T:Azure.Storage.Queues.Models.QueueServiceStatistics">
      <Member Id="P:Azure.Storage.Queues.Models.QueueServiceStatistics.GeoReplication" />
    </Type>
    <Type Name="Azure.Storage.Queues.Models.QueueSignedIdentifier" Id="T:Azure.Storage.Queues.Models.QueueSignedIdentifier">
      <Member Id="M:Azure.Storage.Queues.Models.QueueSignedIdentifier.#ctor" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueSignedIdentifier.AccessPolicy" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueSignedIdentifier.Id" />
    </Type>
    <Type Name="Azure.Storage.Queues.Models.QueuesModelFactory" Id="T:Azure.Storage.Queues.Models.QueuesModelFactory">
      <Member Id="M:Azure.Storage.Queues.Models.QueuesModelFactory.PeekedMessage(System.String,System.BinaryData,System.Int64,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <Member Id="M:Azure.Storage.Queues.Models.QueuesModelFactory.PeekedMessage(System.String,System.String,System.Int64,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <Member Id="M:Azure.Storage.Queues.Models.QueuesModelFactory.QueueGeoReplication(Azure.Storage.Queues.Models.QueueGeoReplicationStatus,System.Nullable{System.DateTimeOffset})" />
      <Member Id="M:Azure.Storage.Queues.Models.QueuesModelFactory.QueueItem(System.String,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <Member Id="M:Azure.Storage.Queues.Models.QueuesModelFactory.QueueMessage(System.String,System.String,System.BinaryData,System.Int64,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <Member Id="M:Azure.Storage.Queues.Models.QueuesModelFactory.QueueMessage(System.String,System.String,System.String,System.Int64,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <Member Id="M:Azure.Storage.Queues.Models.QueuesModelFactory.QueueProperties(System.Collections.Generic.IDictionary{System.String,System.String},System.Int32)" />
      <Member Id="M:Azure.Storage.Queues.Models.QueuesModelFactory.QueueServiceStatistics(Azure.Storage.Queues.Models.QueueGeoReplication)" />
      <Member Id="M:Azure.Storage.Queues.Models.QueuesModelFactory.SendReceipt(System.String,System.DateTimeOffset,System.DateTimeOffset,System.String,System.DateTimeOffset)" />
      <Member Id="M:Azure.Storage.Queues.Models.QueuesModelFactory.UpdateReceipt(System.String,System.DateTimeOffset)" />
    </Type>
    <Type Name="Azure.Storage.Queues.Models.QueueTraits" Id="T:Azure.Storage.Queues.Models.QueueTraits">
      <Member Id="F:Azure.Storage.Queues.Models.QueueTraits.Metadata" />
      <Member Id="F:Azure.Storage.Queues.Models.QueueTraits.None" />
    </Type>
    <Type Name="Azure.Storage.Queues.Models.SendReceipt" Id="T:Azure.Storage.Queues.Models.SendReceipt">
      <Member Id="P:Azure.Storage.Queues.Models.SendReceipt.ExpirationTime" />
      <Member Id="P:Azure.Storage.Queues.Models.SendReceipt.InsertionTime" />
      <Member Id="P:Azure.Storage.Queues.Models.SendReceipt.MessageId" />
      <Member Id="P:Azure.Storage.Queues.Models.SendReceipt.PopReceipt" />
      <Member Id="P:Azure.Storage.Queues.Models.SendReceipt.TimeNextVisible" />
    </Type>
    <Type Name="Azure.Storage.Queues.Models.UpdateReceipt" Id="T:Azure.Storage.Queues.Models.UpdateReceipt">
      <Member Id="P:Azure.Storage.Queues.Models.UpdateReceipt.NextVisibleOn" />
      <Member Id="P:Azure.Storage.Queues.Models.UpdateReceipt.PopReceipt" />
    </Type>
  </Namespace>
  <Namespace Name="Azure.Storage.Queues">
    <Type Name="Azure.Storage.Queues.QueueClient" Id="T:Azure.Storage.Queues.QueueClient">
      <Member Id="M:Azure.Storage.Queues.QueueClient.#ctor" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.#ctor(System.String,System.String)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.#ctor(System.String,System.String,Azure.Storage.Queues.QueueClientOptions)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.#ctor(System.Uri,Azure.AzureSasCredential,Azure.Storage.Queues.QueueClientOptions)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Storage.Queues.QueueClientOptions)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.#ctor(System.Uri,Azure.Storage.Queues.QueueClientOptions)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Queues.QueueClientOptions)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.ClearMessages(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.ClearMessagesAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.Create(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.CreateAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.CreateIfNotExists(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.CreateIfNotExistsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.Delete(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.DeleteAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.DeleteIfExists(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.DeleteIfExistsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.DeleteMessage(System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.DeleteMessageAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.Exists(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.ExistsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.GenerateSasUri(Azure.Storage.Sas.QueueSasBuilder)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.GenerateSasUri(Azure.Storage.Sas.QueueSasPermissions,System.DateTimeOffset)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.GetAccessPolicy(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.GetAccessPolicyAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.GetProperties(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.GetPropertiesAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.PeekMessage(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.PeekMessageAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.PeekMessages(System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.PeekMessagesAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.ReceiveMessage(System.Nullable{System.TimeSpan},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.ReceiveMessageAsync(System.Nullable{System.TimeSpan},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.ReceiveMessages" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.ReceiveMessages(System.Nullable{System.Int32},System.Nullable{System.TimeSpan},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.ReceiveMessages(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.ReceiveMessagesAsync" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.ReceiveMessagesAsync(System.Nullable{System.Int32},System.Nullable{System.TimeSpan},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.ReceiveMessagesAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.SendMessage(System.BinaryData,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.SendMessage(System.String)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.SendMessage(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.SendMessage(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.SendMessageAsync(System.BinaryData,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.SendMessageAsync(System.String)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.SendMessageAsync(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.SendMessageAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.SetAccessPolicy(System.Collections.Generic.IEnumerable{Azure.Storage.Queues.Models.QueueSignedIdentifier},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.SetAccessPolicyAsync(System.Collections.Generic.IEnumerable{Azure.Storage.Queues.Models.QueueSignedIdentifier},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.SetMetadata(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.SetMetadataAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.UpdateMessage(System.String,System.String,System.BinaryData,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.UpdateMessage(System.String,System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.UpdateMessageAsync(System.String,System.String,System.BinaryData,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.UpdateMessageAsync(System.String,System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.WithClientSideEncryptionOptionsCore(Azure.Storage.ClientSideEncryptionOptions)" />
      <Member Id="P:Azure.Storage.Queues.QueueClient.AccountName" />
      <Member Id="P:Azure.Storage.Queues.QueueClient.CanGenerateSasUri" />
      <Member Id="P:Azure.Storage.Queues.QueueClient.MaxPeekableMessages" />
      <Member Id="P:Azure.Storage.Queues.QueueClient.MessageMaxBytes" />
      <Member Id="P:Azure.Storage.Queues.QueueClient.MessagesUri" />
      <Member Id="P:Azure.Storage.Queues.QueueClient.Name" />
      <Member Id="P:Azure.Storage.Queues.QueueClient.Uri" />
    </Type>
    <Type Name="Azure.Storage.Queues.QueueClientOptions" Id="T:Azure.Storage.Queues.QueueClientOptions">
      <Member Id="M:Azure.Storage.Queues.QueueClientOptions.#ctor(Azure.Storage.Queues.QueueClientOptions.ServiceVersion)" />
      <Member Id="P:Azure.Storage.Queues.QueueClientOptions.GeoRedundantSecondaryUri" />
      <Member Id="P:Azure.Storage.Queues.QueueClientOptions.MessageEncoding" />
      <Member Id="P:Azure.Storage.Queues.QueueClientOptions.Version" />
    </Type>
    <Type Name="Azure.Storage.Queues.QueueClientOptions/ServiceVersion" Id="T:Azure.Storage.Queues.QueueClientOptions.ServiceVersion">
      <Member Id="F:Azure.Storage.Queues.QueueClientOptions.ServiceVersion.V2019_02_02" />
      <Member Id="F:Azure.Storage.Queues.QueueClientOptions.ServiceVersion.V2019_07_07" />
      <Member Id="F:Azure.Storage.Queues.QueueClientOptions.ServiceVersion.V2019_12_12" />
      <Member Id="F:Azure.Storage.Queues.QueueClientOptions.ServiceVersion.V2020_02_10" />
      <Member Id="F:Azure.Storage.Queues.QueueClientOptions.ServiceVersion.V2020_04_08" />
    </Type>
    <Type Name="Azure.Storage.Queues.QueueMessageEncoding" Id="T:Azure.Storage.Queues.QueueMessageEncoding">
      <Member Id="F:Azure.Storage.Queues.QueueMessageEncoding.Base64" />
      <Member Id="F:Azure.Storage.Queues.QueueMessageEncoding.None" />
    </Type>
    <Type Name="Azure.Storage.Queues.QueueServiceClient" Id="T:Azure.Storage.Queues.QueueServiceClient">
      <Member Id="M:Azure.Storage.Queues.QueueServiceClient.#ctor" />
      <Member Id="M:Azure.Storage.Queues.QueueServiceClient.#ctor(System.String)" />
      <Member Id="M:Azure.Storage.Queues.QueueServiceClient.#ctor(System.String,Azure.Storage.Queues.QueueClientOptions)" />
      <Member Id="M:Azure.Storage.Queues.QueueServiceClient.#ctor(System.Uri,Azure.AzureSasCredential,Azure.Storage.Queues.QueueClientOptions)" />
      <Member Id="M:Azure.Storage.Queues.QueueServiceClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Storage.Queues.QueueClientOptions)" />
      <Member Id="M:Azure.Storage.Queues.QueueServiceClient.#ctor(System.Uri,Azure.Storage.Queues.QueueClientOptions)" />
      <Member Id="M:Azure.Storage.Queues.QueueServiceClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Queues.QueueClientOptions)" />
      <Member Id="M:Azure.Storage.Queues.QueueServiceClient.CreateQueue(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueServiceClient.CreateQueueAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueServiceClient.DeleteQueue(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueServiceClient.DeleteQueueAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueServiceClient.GenerateAccountSasUri(Azure.Storage.Sas.AccountSasBuilder)" />
      <Member Id="M:Azure.Storage.Queues.QueueServiceClient.GenerateAccountSasUri(Azure.Storage.Sas.AccountSasPermissions,System.DateTimeOffset,Azure.Storage.Sas.AccountSasResourceTypes)" />
      <Member Id="M:Azure.Storage.Queues.QueueServiceClient.GetProperties(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueServiceClient.GetPropertiesAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueServiceClient.GetQueueClient(System.String)" />
      <Member Id="M:Azure.Storage.Queues.QueueServiceClient.GetQueues(Azure.Storage.Queues.Models.QueueTraits,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueServiceClient.GetQueuesAsync(Azure.Storage.Queues.Models.QueueTraits,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueServiceClient.GetStatistics(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueServiceClient.GetStatisticsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueServiceClient.SetProperties(Azure.Storage.Queues.Models.QueueServiceProperties,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueServiceClient.SetPropertiesAsync(Azure.Storage.Queues.Models.QueueServiceProperties,System.Threading.CancellationToken)" />
      <Member Id="P:Azure.Storage.Queues.QueueServiceClient.AccountName" />
      <Member Id="P:Azure.Storage.Queues.QueueServiceClient.CanGenerateAccountSasUri" />
      <Member Id="P:Azure.Storage.Queues.QueueServiceClient.Uri" />
    </Type>
    <Type Name="Azure.Storage.Queues.QueueUriBuilder" Id="T:Azure.Storage.Queues.QueueUriBuilder">
      <Member Id="M:Azure.Storage.Queues.QueueUriBuilder.#ctor(System.Uri)" />
      <Member Id="M:Azure.Storage.Queues.QueueUriBuilder.ToString" />
      <Member Id="M:Azure.Storage.Queues.QueueUriBuilder.ToUri" />
      <Member Id="P:Azure.Storage.Queues.QueueUriBuilder.AccountName" />
      <Member Id="P:Azure.Storage.Queues.QueueUriBuilder.Host" />
      <Member Id="P:Azure.Storage.Queues.QueueUriBuilder.MessageId" />
      <Member Id="P:Azure.Storage.Queues.QueueUriBuilder.Messages" />
      <Member Id="P:Azure.Storage.Queues.QueueUriBuilder.Port" />
      <Member Id="P:Azure.Storage.Queues.QueueUriBuilder.Query" />
      <Member Id="P:Azure.Storage.Queues.QueueUriBuilder.QueueName" />
      <Member Id="P:Azure.Storage.Queues.QueueUriBuilder.Sas" />
      <Member Id="P:Azure.Storage.Queues.QueueUriBuilder.Scheme" />
    </Type>
  </Namespace>
  <Namespace Name="Azure.Storage.Queues.Specialized">
    <Type Name="Azure.Storage.Queues.Specialized.ClientSideDecryptionFailureEventArgs" Id="T:Azure.Storage.Queues.Specialized.ClientSideDecryptionFailureEventArgs">
      <Member Id="P:Azure.Storage.Queues.Specialized.ClientSideDecryptionFailureEventArgs.Exception" />
    </Type>
    <Type Name="Azure.Storage.Queues.Specialized.QueueClientSideEncryptionOptions" Id="T:Azure.Storage.Queues.Specialized.QueueClientSideEncryptionOptions">
      <Member Id="E:Azure.Storage.Queues.Specialized.QueueClientSideEncryptionOptions.DecryptionFailed" />
      <Member Id="M:Azure.Storage.Queues.Specialized.QueueClientSideEncryptionOptions.#ctor(Azure.Storage.ClientSideEncryptionVersion)" />
    </Type>
    <Type Name="Azure.Storage.Queues.Specialized.SpecializedQueueClientOptions" Id="T:Azure.Storage.Queues.Specialized.SpecializedQueueClientOptions">
      <Member Id="M:Azure.Storage.Queues.Specialized.SpecializedQueueClientOptions.#ctor(Azure.Storage.Queues.QueueClientOptions.ServiceVersion)" />
      <Member Id="P:Azure.Storage.Queues.Specialized.SpecializedQueueClientOptions.ClientSideEncryption" />
    </Type>
    <Type Name="Azure.Storage.Queues.Specialized.SpecializedQueueExtensions" Id="T:Azure.Storage.Queues.Specialized.SpecializedQueueExtensions">
      <Member Id="M:Azure.Storage.Queues.Specialized.SpecializedQueueExtensions.WithClientSideEncryptionOptions(Azure.Storage.Queues.QueueClient,Azure.Storage.ClientSideEncryptionOptions)" />
    </Type>
  </Namespace>
  <Namespace Name="Azure.Storage.Sas">
    <Type Name="Azure.Storage.Sas.AccountSasBuilder" Id="T:Azure.Storage.Sas.AccountSasBuilder">
      <Member Id="M:Azure.Storage.Sas.AccountSasBuilder.#ctor" />
      <Member Id="M:Azure.Storage.Sas.AccountSasBuilder.#ctor(Azure.Storage.Sas.AccountSasPermissions,System.DateTimeOffset,Azure.Storage.Sas.AccountSasServices,Azure.Storage.Sas.AccountSasResourceTypes)" />
      <Member Id="M:Azure.Storage.Sas.AccountSasBuilder.Equals(System.Object)" />
      <Member Id="M:Azure.Storage.Sas.AccountSasBuilder.GetHashCode" />
      <Member Id="M:Azure.Storage.Sas.AccountSasBuilder.SetPermissions(Azure.Storage.Sas.AccountSasPermissions)" />
      <Member Id="M:Azure.Storage.Sas.AccountSasBuilder.SetPermissions(System.String)" />
      <Member Id="M:Azure.Storage.Sas.AccountSasBuilder.ToSasQueryParameters(Azure.Storage.StorageSharedKeyCredential)" />
      <Member Id="M:Azure.Storage.Sas.AccountSasBuilder.ToString" />
      <Member Id="P:Azure.Storage.Sas.AccountSasBuilder.ExpiresOn" />
      <Member Id="P:Azure.Storage.Sas.AccountSasBuilder.IPRange" />
      <Member Id="P:Azure.Storage.Sas.AccountSasBuilder.Permissions" />
      <Member Id="P:Azure.Storage.Sas.AccountSasBuilder.Protocol" />
      <Member Id="P:Azure.Storage.Sas.AccountSasBuilder.ResourceTypes" />
      <Member Id="P:Azure.Storage.Sas.AccountSasBuilder.Services" />
      <Member Id="P:Azure.Storage.Sas.AccountSasBuilder.StartsOn" />
      <Member Id="P:Azure.Storage.Sas.AccountSasBuilder.Version" />
    </Type>
    <Type Name="Azure.Storage.Sas.AccountSasPermissions" Id="T:Azure.Storage.Sas.AccountSasPermissions">
      <Member Id="F:Azure.Storage.Sas.AccountSasPermissions.Add" />
      <Member Id="F:Azure.Storage.Sas.AccountSasPermissions.All" />
      <Member Id="F:Azure.Storage.Sas.AccountSasPermissions.Create" />
      <Member Id="F:Azure.Storage.Sas.AccountSasPermissions.Delete" />
      <Member Id="F:Azure.Storage.Sas.AccountSasPermissions.DeleteVersion" />
      <Member Id="F:Azure.Storage.Sas.AccountSasPermissions.Filter" />
      <Member Id="F:Azure.Storage.Sas.AccountSasPermissions.List" />
      <Member Id="F:Azure.Storage.Sas.AccountSasPermissions.Process" />
      <Member Id="F:Azure.Storage.Sas.AccountSasPermissions.Read" />
      <Member Id="F:Azure.Storage.Sas.AccountSasPermissions.Tag" />
      <Member Id="F:Azure.Storage.Sas.AccountSasPermissions.Update" />
      <Member Id="F:Azure.Storage.Sas.AccountSasPermissions.Write" />
    </Type>
    <Type Name="Azure.Storage.Sas.AccountSasResourceTypes" Id="T:Azure.Storage.Sas.AccountSasResourceTypes">
      <Member Id="F:Azure.Storage.Sas.AccountSasResourceTypes.All" />
      <Member Id="F:Azure.Storage.Sas.AccountSasResourceTypes.Container" />
      <Member Id="F:Azure.Storage.Sas.AccountSasResourceTypes.Object" />
      <Member Id="F:Azure.Storage.Sas.AccountSasResourceTypes.Service" />
    </Type>
    <Type Name="Azure.Storage.Sas.AccountSasServices" Id="T:Azure.Storage.Sas.AccountSasServices">
      <Member Id="F:Azure.Storage.Sas.AccountSasServices.All" />
      <Member Id="F:Azure.Storage.Sas.AccountSasServices.Blobs" />
      <Member Id="F:Azure.Storage.Sas.AccountSasServices.Files" />
      <Member Id="F:Azure.Storage.Sas.AccountSasServices.Queues" />
      <Member Id="F:Azure.Storage.Sas.AccountSasServices.Tables" />
    </Type>
    <Type Name="Azure.Storage.Sas.BlobAccountSasPermissions" Id="T:Azure.Storage.Sas.BlobAccountSasPermissions">
      <Member Id="F:Azure.Storage.Sas.BlobAccountSasPermissions.Add" />
      <Member Id="F:Azure.Storage.Sas.BlobAccountSasPermissions.All" />
      <Member Id="F:Azure.Storage.Sas.BlobAccountSasPermissions.Create" />
      <Member Id="F:Azure.Storage.Sas.BlobAccountSasPermissions.Delete" />
      <Member Id="F:Azure.Storage.Sas.BlobAccountSasPermissions.List" />
      <Member Id="F:Azure.Storage.Sas.BlobAccountSasPermissions.Read" />
      <Member Id="F:Azure.Storage.Sas.BlobAccountSasPermissions.Write" />
    </Type>
    <Type Name="Azure.Storage.Sas.BlobContainerSasPermissions" Id="T:Azure.Storage.Sas.BlobContainerSasPermissions">
      <Member Id="F:Azure.Storage.Sas.BlobContainerSasPermissions.Add" />
      <Member Id="F:Azure.Storage.Sas.BlobContainerSasPermissions.All" />
      <Member Id="F:Azure.Storage.Sas.BlobContainerSasPermissions.Create" />
      <Member Id="F:Azure.Storage.Sas.BlobContainerSasPermissions.Delete" />
      <Member Id="F:Azure.Storage.Sas.BlobContainerSasPermissions.DeleteBlobVersion" />
      <Member Id="F:Azure.Storage.Sas.BlobContainerSasPermissions.Execute" />
      <Member Id="F:Azure.Storage.Sas.BlobContainerSasPermissions.List" />
      <Member Id="F:Azure.Storage.Sas.BlobContainerSasPermissions.Move" />
      <Member Id="F:Azure.Storage.Sas.BlobContainerSasPermissions.Read" />
      <Member Id="F:Azure.Storage.Sas.BlobContainerSasPermissions.Tag" />
      <Member Id="F:Azure.Storage.Sas.BlobContainerSasPermissions.Write" />
    </Type>
    <Type Name="Azure.Storage.Sas.BlobSasBuilder" Id="T:Azure.Storage.Sas.BlobSasBuilder">
      <Member Id="M:Azure.Storage.Sas.BlobSasBuilder.#ctor" />
      <Member Id="M:Azure.Storage.Sas.BlobSasBuilder.#ctor(Azure.Storage.Sas.BlobContainerSasPermissions,System.DateTimeOffset)" />
      <Member Id="M:Azure.Storage.Sas.BlobSasBuilder.#ctor(Azure.Storage.Sas.BlobSasPermissions,System.DateTimeOffset)" />
      <Member Id="M:Azure.Storage.Sas.BlobSasBuilder.Equals(System.Object)" />
      <Member Id="M:Azure.Storage.Sas.BlobSasBuilder.GetHashCode" />
      <Member Id="M:Azure.Storage.Sas.BlobSasBuilder.SetPermissions(Azure.Storage.Sas.BlobAccountSasPermissions)" />
      <Member Id="M:Azure.Storage.Sas.BlobSasBuilder.SetPermissions(Azure.Storage.Sas.BlobContainerSasPermissions)" />
      <Member Id="M:Azure.Storage.Sas.BlobSasBuilder.SetPermissions(Azure.Storage.Sas.BlobSasPermissions)" />
      <Member Id="M:Azure.Storage.Sas.BlobSasBuilder.SetPermissions(Azure.Storage.Sas.BlobVersionSasPermissions)" />
      <Member Id="M:Azure.Storage.Sas.BlobSasBuilder.SetPermissions(Azure.Storage.Sas.SnapshotSasPermissions)" />
      <Member Id="M:Azure.Storage.Sas.BlobSasBuilder.SetPermissions(System.String)" />
      <Member Id="M:Azure.Storage.Sas.BlobSasBuilder.SetPermissions(System.String,System.Boolean)" />
      <Member Id="M:Azure.Storage.Sas.BlobSasBuilder.ToSasQueryParameters(Azure.Storage.Blobs.Models.UserDelegationKey,System.String)" />
      <Member Id="M:Azure.Storage.Sas.BlobSasBuilder.ToSasQueryParameters(Azure.Storage.StorageSharedKeyCredential)" />
      <Member Id="M:Azure.Storage.Sas.BlobSasBuilder.ToString" />
      <Member Id="P:Azure.Storage.Sas.BlobSasBuilder.BlobContainerName" />
      <Member Id="P:Azure.Storage.Sas.BlobSasBuilder.BlobName" />
      <Member Id="P:Azure.Storage.Sas.BlobSasBuilder.BlobVersionId" />
      <Member Id="P:Azure.Storage.Sas.BlobSasBuilder.CacheControl" />
      <Member Id="P:Azure.Storage.Sas.BlobSasBuilder.ContentDisposition" />
      <Member Id="P:Azure.Storage.Sas.BlobSasBuilder.ContentEncoding" />
      <Member Id="P:Azure.Storage.Sas.BlobSasBuilder.ContentLanguage" />
      <Member Id="P:Azure.Storage.Sas.BlobSasBuilder.ContentType" />
      <Member Id="P:Azure.Storage.Sas.BlobSasBuilder.CorrelationId" />
      <Member Id="P:Azure.Storage.Sas.BlobSasBuilder.ExpiresOn" />
      <Member Id="P:Azure.Storage.Sas.BlobSasBuilder.Identifier" />
      <Member Id="P:Azure.Storage.Sas.BlobSasBuilder.IPRange" />
      <Member Id="P:Azure.Storage.Sas.BlobSasBuilder.Permissions" />
      <Member Id="P:Azure.Storage.Sas.BlobSasBuilder.PreauthorizedAgentObjectId" />
      <Member Id="P:Azure.Storage.Sas.BlobSasBuilder.Protocol" />
      <Member Id="P:Azure.Storage.Sas.BlobSasBuilder.Resource" />
      <Member Id="P:Azure.Storage.Sas.BlobSasBuilder.Snapshot" />
      <Member Id="P:Azure.Storage.Sas.BlobSasBuilder.StartsOn" />
      <Member Id="P:Azure.Storage.Sas.BlobSasBuilder.Version" />
    </Type>
    <Type Name="Azure.Storage.Sas.BlobSasPermissions" Id="T:Azure.Storage.Sas.BlobSasPermissions">
      <Member Id="F:Azure.Storage.Sas.BlobSasPermissions.Add" />
      <Member Id="F:Azure.Storage.Sas.BlobSasPermissions.All" />
      <Member Id="F:Azure.Storage.Sas.BlobSasPermissions.Create" />
      <Member Id="F:Azure.Storage.Sas.BlobSasPermissions.Delete" />
      <Member Id="F:Azure.Storage.Sas.BlobSasPermissions.DeleteBlobVersion" />
      <Member Id="F:Azure.Storage.Sas.BlobSasPermissions.Execute" />
      <Member Id="F:Azure.Storage.Sas.BlobSasPermissions.List" />
      <Member Id="F:Azure.Storage.Sas.BlobSasPermissions.Move" />
      <Member Id="F:Azure.Storage.Sas.BlobSasPermissions.Read" />
      <Member Id="F:Azure.Storage.Sas.BlobSasPermissions.Tag" />
      <Member Id="F:Azure.Storage.Sas.BlobSasPermissions.Write" />
    </Type>
    <Type Name="Azure.Storage.Sas.BlobSasQueryParameters" Id="T:Azure.Storage.Sas.BlobSasQueryParameters">
      <Member Id="M:Azure.Storage.Sas.BlobSasQueryParameters.ToString" />
      <Member Id="P:Azure.Storage.Sas.BlobSasQueryParameters.Empty" />
      <Member Id="P:Azure.Storage.Sas.BlobSasQueryParameters.KeyExpiresOn" />
      <Member Id="P:Azure.Storage.Sas.BlobSasQueryParameters.KeyObjectId" />
      <Member Id="P:Azure.Storage.Sas.BlobSasQueryParameters.KeyService" />
      <Member Id="P:Azure.Storage.Sas.BlobSasQueryParameters.KeyStartsOn" />
      <Member Id="P:Azure.Storage.Sas.BlobSasQueryParameters.KeyTenantId" />
      <Member Id="P:Azure.Storage.Sas.BlobSasQueryParameters.KeyVersion" />
    </Type>
    <Type Name="Azure.Storage.Sas.BlobVersionSasPermissions" Id="T:Azure.Storage.Sas.BlobVersionSasPermissions">
      <Member Id="F:Azure.Storage.Sas.BlobVersionSasPermissions.All" />
      <Member Id="F:Azure.Storage.Sas.BlobVersionSasPermissions.Delete" />
    </Type>
    <Type Name="Azure.Storage.Sas.DataLakeAccountSasPermissions" Id="T:Azure.Storage.Sas.DataLakeAccountSasPermissions">
      <Member Id="F:Azure.Storage.Sas.DataLakeAccountSasPermissions.Add" />
      <Member Id="F:Azure.Storage.Sas.DataLakeAccountSasPermissions.All" />
      <Member Id="F:Azure.Storage.Sas.DataLakeAccountSasPermissions.Create" />
      <Member Id="F:Azure.Storage.Sas.DataLakeAccountSasPermissions.Delete" />
      <Member Id="F:Azure.Storage.Sas.DataLakeAccountSasPermissions.List" />
      <Member Id="F:Azure.Storage.Sas.DataLakeAccountSasPermissions.Read" />
      <Member Id="F:Azure.Storage.Sas.DataLakeAccountSasPermissions.Write" />
    </Type>
    <Type Name="Azure.Storage.Sas.DataLakeFileSystemSasPermissions" Id="T:Azure.Storage.Sas.DataLakeFileSystemSasPermissions">
      <Member Id="F:Azure.Storage.Sas.DataLakeFileSystemSasPermissions.Add" />
      <Member Id="F:Azure.Storage.Sas.DataLakeFileSystemSasPermissions.All" />
      <Member Id="F:Azure.Storage.Sas.DataLakeFileSystemSasPermissions.Create" />
      <Member Id="F:Azure.Storage.Sas.DataLakeFileSystemSasPermissions.Delete" />
      <Member Id="F:Azure.Storage.Sas.DataLakeFileSystemSasPermissions.Execute" />
      <Member Id="F:Azure.Storage.Sas.DataLakeFileSystemSasPermissions.List" />
      <Member Id="F:Azure.Storage.Sas.DataLakeFileSystemSasPermissions.ManageAccessControl" />
      <Member Id="F:Azure.Storage.Sas.DataLakeFileSystemSasPermissions.ManageOwnership" />
      <Member Id="F:Azure.Storage.Sas.DataLakeFileSystemSasPermissions.Move" />
      <Member Id="F:Azure.Storage.Sas.DataLakeFileSystemSasPermissions.Read" />
      <Member Id="F:Azure.Storage.Sas.DataLakeFileSystemSasPermissions.Write" />
    </Type>
    <Type Name="Azure.Storage.Sas.DataLakeSasBuilder" Id="T:Azure.Storage.Sas.DataLakeSasBuilder">
      <Member Id="M:Azure.Storage.Sas.DataLakeSasBuilder.#ctor" />
      <Member Id="M:Azure.Storage.Sas.DataLakeSasBuilder.#ctor(Azure.Storage.Sas.DataLakeFileSystemSasPermissions,System.DateTimeOffset)" />
      <Member Id="M:Azure.Storage.Sas.DataLakeSasBuilder.#ctor(Azure.Storage.Sas.DataLakeSasPermissions,System.DateTimeOffset)" />
      <Member Id="M:Azure.Storage.Sas.DataLakeSasBuilder.Equals(System.Object)" />
      <Member Id="M:Azure.Storage.Sas.DataLakeSasBuilder.GetHashCode" />
      <Member Id="M:Azure.Storage.Sas.DataLakeSasBuilder.SetPermissions(Azure.Storage.Sas.DataLakeAccountSasPermissions)" />
      <Member Id="M:Azure.Storage.Sas.DataLakeSasBuilder.SetPermissions(Azure.Storage.Sas.DataLakeFileSystemSasPermissions)" />
      <Member Id="M:Azure.Storage.Sas.DataLakeSasBuilder.SetPermissions(Azure.Storage.Sas.DataLakeSasPermissions)" />
      <Member Id="M:Azure.Storage.Sas.DataLakeSasBuilder.SetPermissions(System.String)" />
      <Member Id="M:Azure.Storage.Sas.DataLakeSasBuilder.SetPermissions(System.String,System.Boolean)" />
      <Member Id="M:Azure.Storage.Sas.DataLakeSasBuilder.ToSasQueryParameters(Azure.Storage.Files.DataLake.Models.UserDelegationKey,System.String)" />
      <Member Id="M:Azure.Storage.Sas.DataLakeSasBuilder.ToSasQueryParameters(Azure.Storage.StorageSharedKeyCredential)" />
      <Member Id="M:Azure.Storage.Sas.DataLakeSasBuilder.ToString" />
      <Member Id="P:Azure.Storage.Sas.DataLakeSasBuilder.AgentObjectId" />
      <Member Id="P:Azure.Storage.Sas.DataLakeSasBuilder.CacheControl" />
      <Member Id="P:Azure.Storage.Sas.DataLakeSasBuilder.ContentDisposition" />
      <Member Id="P:Azure.Storage.Sas.DataLakeSasBuilder.ContentEncoding" />
      <Member Id="P:Azure.Storage.Sas.DataLakeSasBuilder.ContentLanguage" />
      <Member Id="P:Azure.Storage.Sas.DataLakeSasBuilder.ContentType" />
      <Member Id="P:Azure.Storage.Sas.DataLakeSasBuilder.CorrelationId" />
      <Member Id="P:Azure.Storage.Sas.DataLakeSasBuilder.ExpiresOn" />
      <Member Id="P:Azure.Storage.Sas.DataLakeSasBuilder.FileSystemName" />
      <Member Id="P:Azure.Storage.Sas.DataLakeSasBuilder.Identifier" />
      <Member Id="P:Azure.Storage.Sas.DataLakeSasBuilder.IPRange" />
      <Member Id="P:Azure.Storage.Sas.DataLakeSasBuilder.IsDirectory" />
      <Member Id="P:Azure.Storage.Sas.DataLakeSasBuilder.Path" />
      <Member Id="P:Azure.Storage.Sas.DataLakeSasBuilder.Permissions" />
      <Member Id="P:Azure.Storage.Sas.DataLakeSasBuilder.PreauthorizedAgentObjectId" />
      <Member Id="P:Azure.Storage.Sas.DataLakeSasBuilder.Protocol" />
      <Member Id="P:Azure.Storage.Sas.DataLakeSasBuilder.Resource" />
      <Member Id="P:Azure.Storage.Sas.DataLakeSasBuilder.StartsOn" />
      <Member Id="P:Azure.Storage.Sas.DataLakeSasBuilder.Version" />
    </Type>
    <Type Name="Azure.Storage.Sas.DataLakeSasPermissions" Id="T:Azure.Storage.Sas.DataLakeSasPermissions">
      <Member Id="F:Azure.Storage.Sas.DataLakeSasPermissions.Add" />
      <Member Id="F:Azure.Storage.Sas.DataLakeSasPermissions.All" />
      <Member Id="F:Azure.Storage.Sas.DataLakeSasPermissions.Create" />
      <Member Id="F:Azure.Storage.Sas.DataLakeSasPermissions.Delete" />
      <Member Id="F:Azure.Storage.Sas.DataLakeSasPermissions.Execute" />
      <Member Id="F:Azure.Storage.Sas.DataLakeSasPermissions.List" />
      <Member Id="F:Azure.Storage.Sas.DataLakeSasPermissions.ManageAccessControl" />
      <Member Id="F:Azure.Storage.Sas.DataLakeSasPermissions.ManageOwnership" />
      <Member Id="F:Azure.Storage.Sas.DataLakeSasPermissions.Move" />
      <Member Id="F:Azure.Storage.Sas.DataLakeSasPermissions.Read" />
      <Member Id="F:Azure.Storage.Sas.DataLakeSasPermissions.Write" />
    </Type>
    <Type Name="Azure.Storage.Sas.DataLakeSasQueryParameters" Id="T:Azure.Storage.Sas.DataLakeSasQueryParameters">
      <Member Id="M:Azure.Storage.Sas.DataLakeSasQueryParameters.ToString" />
      <Member Id="P:Azure.Storage.Sas.DataLakeSasQueryParameters.Empty" />
      <Member Id="P:Azure.Storage.Sas.DataLakeSasQueryParameters.KeyExpiresOn" />
      <Member Id="P:Azure.Storage.Sas.DataLakeSasQueryParameters.KeyObjectId" />
      <Member Id="P:Azure.Storage.Sas.DataLakeSasQueryParameters.KeyService" />
      <Member Id="P:Azure.Storage.Sas.DataLakeSasQueryParameters.KeyStartsOn" />
      <Member Id="P:Azure.Storage.Sas.DataLakeSasQueryParameters.KeyTenantId" />
      <Member Id="P:Azure.Storage.Sas.DataLakeSasQueryParameters.KeyVersion" />
    </Type>
    <Type Name="Azure.Storage.Sas.QueueAccountSasPermissions" Id="T:Azure.Storage.Sas.QueueAccountSasPermissions">
      <Member Id="F:Azure.Storage.Sas.QueueAccountSasPermissions.Add" />
      <Member Id="F:Azure.Storage.Sas.QueueAccountSasPermissions.All" />
      <Member Id="F:Azure.Storage.Sas.QueueAccountSasPermissions.Delete" />
      <Member Id="F:Azure.Storage.Sas.QueueAccountSasPermissions.List" />
      <Member Id="F:Azure.Storage.Sas.QueueAccountSasPermissions.Process" />
      <Member Id="F:Azure.Storage.Sas.QueueAccountSasPermissions.Read" />
      <Member Id="F:Azure.Storage.Sas.QueueAccountSasPermissions.Update" />
      <Member Id="F:Azure.Storage.Sas.QueueAccountSasPermissions.Write" />
    </Type>
    <Type Name="Azure.Storage.Sas.QueueSasBuilder" Id="T:Azure.Storage.Sas.QueueSasBuilder">
      <Member Id="M:Azure.Storage.Sas.QueueSasBuilder.#ctor" />
      <Member Id="M:Azure.Storage.Sas.QueueSasBuilder.#ctor(Azure.Storage.Sas.QueueAccountSasPermissions,System.DateTimeOffset)" />
      <Member Id="M:Azure.Storage.Sas.QueueSasBuilder.#ctor(Azure.Storage.Sas.QueueSasPermissions,System.DateTimeOffset)" />
      <Member Id="M:Azure.Storage.Sas.QueueSasBuilder.Equals(System.Object)" />
      <Member Id="M:Azure.Storage.Sas.QueueSasBuilder.GetHashCode" />
      <Member Id="M:Azure.Storage.Sas.QueueSasBuilder.SetPermissions(Azure.Storage.Sas.QueueAccountSasPermissions)" />
      <Member Id="M:Azure.Storage.Sas.QueueSasBuilder.SetPermissions(Azure.Storage.Sas.QueueSasPermissions)" />
      <Member Id="M:Azure.Storage.Sas.QueueSasBuilder.SetPermissions(System.String)" />
      <Member Id="M:Azure.Storage.Sas.QueueSasBuilder.SetPermissions(System.String,System.Boolean)" />
      <Member Id="M:Azure.Storage.Sas.QueueSasBuilder.ToSasQueryParameters(Azure.Storage.StorageSharedKeyCredential)" />
      <Member Id="M:Azure.Storage.Sas.QueueSasBuilder.ToString" />
      <Member Id="P:Azure.Storage.Sas.QueueSasBuilder.ExpiresOn" />
      <Member Id="P:Azure.Storage.Sas.QueueSasBuilder.Identifier" />
      <Member Id="P:Azure.Storage.Sas.QueueSasBuilder.IPRange" />
      <Member Id="P:Azure.Storage.Sas.QueueSasBuilder.Permissions" />
      <Member Id="P:Azure.Storage.Sas.QueueSasBuilder.Protocol" />
      <Member Id="P:Azure.Storage.Sas.QueueSasBuilder.QueueName" />
      <Member Id="P:Azure.Storage.Sas.QueueSasBuilder.StartsOn" />
      <Member Id="P:Azure.Storage.Sas.QueueSasBuilder.Version" />
    </Type>
    <Type Name="Azure.Storage.Sas.QueueSasPermissions" Id="T:Azure.Storage.Sas.QueueSasPermissions">
      <Member Id="F:Azure.Storage.Sas.QueueSasPermissions.Add" />
      <Member Id="F:Azure.Storage.Sas.QueueSasPermissions.All" />
      <Member Id="F:Azure.Storage.Sas.QueueSasPermissions.Process" />
      <Member Id="F:Azure.Storage.Sas.QueueSasPermissions.Read" />
      <Member Id="F:Azure.Storage.Sas.QueueSasPermissions.Update" />
    </Type>
    <Type Name="Azure.Storage.Sas.SasIPRange" Id="T:Azure.Storage.Sas.SasIPRange">
      <Member Id="M:Azure.Storage.Sas.SasIPRange.#ctor(System.Net.IPAddress,System.Net.IPAddress)" />
      <Member Id="M:Azure.Storage.Sas.SasIPRange.Equals(Azure.Storage.Sas.SasIPRange)" />
      <Member Id="M:Azure.Storage.Sas.SasIPRange.Equals(System.Object)" />
      <Member Id="M:Azure.Storage.Sas.SasIPRange.GetHashCode" />
      <Member Id="M:Azure.Storage.Sas.SasIPRange.op_Equality(Azure.Storage.Sas.SasIPRange,Azure.Storage.Sas.SasIPRange)" />
      <Member Id="M:Azure.Storage.Sas.SasIPRange.op_Inequality(Azure.Storage.Sas.SasIPRange,Azure.Storage.Sas.SasIPRange)" />
      <Member Id="M:Azure.Storage.Sas.SasIPRange.Parse(System.String)" />
      <Member Id="M:Azure.Storage.Sas.SasIPRange.ToString" />
      <Member Id="P:Azure.Storage.Sas.SasIPRange.End" />
      <Member Id="P:Azure.Storage.Sas.SasIPRange.Start" />
    </Type>
    <Type Name="Azure.Storage.Sas.SasProtocol" Id="T:Azure.Storage.Sas.SasProtocol">
      <Member Id="F:Azure.Storage.Sas.SasProtocol.Https" />
      <Member Id="F:Azure.Storage.Sas.SasProtocol.HttpsAndHttp" />
      <Member Id="F:Azure.Storage.Sas.SasProtocol.None" />
    </Type>
    <Type Name="Azure.Storage.Sas.SasQueryParameters" Id="T:Azure.Storage.Sas.SasQueryParameters">
      <Member Id="F:Azure.Storage.Sas.SasQueryParameters.DefaultSasVersion" />
      <Member Id="M:Azure.Storage.Sas.SasQueryParameters.#ctor" />
      <Member Id="M:Azure.Storage.Sas.SasQueryParameters.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})" />
      <Member Id="M:Azure.Storage.Sas.SasQueryParameters.#ctor(System.String,System.Nullable{Azure.Storage.Sas.AccountSasServices},System.Nullable{Azure.Storage.Sas.AccountSasResourceTypes},Azure.Storage.Sas.SasProtocol,System.DateTimeOffset,System.DateTimeOffset,Azure.Storage.Sas.SasIPRange,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)" />
      <Member Id="M:Azure.Storage.Sas.SasQueryParameters.#ctor(System.String,System.Nullable{Azure.Storage.Sas.AccountSasServices},System.Nullable{Azure.Storage.Sas.AccountSasResourceTypes},Azure.Storage.Sas.SasProtocol,System.DateTimeOffset,System.DateTimeOffset,Azure.Storage.Sas.SasIPRange,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32})" />
      <Member Id="M:Azure.Storage.Sas.SasQueryParameters.AppendProperties(System.Text.StringBuilder)" />
      <Member Id="M:Azure.Storage.Sas.SasQueryParameters.Create(System.Collections.Generic.IDictionary{System.String,System.String})" />
      <Member Id="M:Azure.Storage.Sas.SasQueryParameters.Create(System.String,System.Nullable{Azure.Storage.Sas.AccountSasServices},System.Nullable{Azure.Storage.Sas.AccountSasResourceTypes},Azure.Storage.Sas.SasProtocol,System.DateTimeOffset,System.DateTimeOffset,Azure.Storage.Sas.SasIPRange,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)" />
      <Member Id="M:Azure.Storage.Sas.SasQueryParameters.Create(System.String,System.Nullable{Azure.Storage.Sas.AccountSasServices},System.Nullable{Azure.Storage.Sas.AccountSasResourceTypes},Azure.Storage.Sas.SasProtocol,System.DateTimeOffset,System.DateTimeOffset,Azure.Storage.Sas.SasIPRange,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32})" />
      <Member Id="M:Azure.Storage.Sas.SasQueryParameters.ToString" />
      <Member Id="P:Azure.Storage.Sas.SasQueryParameters.AgentObjectId" />
      <Member Id="P:Azure.Storage.Sas.SasQueryParameters.CacheControl" />
      <Member Id="P:Azure.Storage.Sas.SasQueryParameters.ContentDisposition" />
      <Member Id="P:Azure.Storage.Sas.SasQueryParameters.ContentEncoding" />
      <Member Id="P:Azure.Storage.Sas.SasQueryParameters.ContentLanguage" />
      <Member Id="P:Azure.Storage.Sas.SasQueryParameters.ContentType" />
      <Member Id="P:Azure.Storage.Sas.SasQueryParameters.CorrelationId" />
      <Member Id="P:Azure.Storage.Sas.SasQueryParameters.DirectoryDepth" />
      <Member Id="P:Azure.Storage.Sas.SasQueryParameters.Empty" />
      <Member Id="P:Azure.Storage.Sas.SasQueryParameters.ExpiresOn" />
      <Member Id="P:Azure.Storage.Sas.SasQueryParameters.Identifier" />
      <Member Id="P:Azure.Storage.Sas.SasQueryParameters.IPRange" />
      <Member Id="P:Azure.Storage.Sas.SasQueryParameters.Permissions" />
      <Member Id="P:Azure.Storage.Sas.SasQueryParameters.PreauthorizedAgentObjectId" />
      <Member Id="P:Azure.Storage.Sas.SasQueryParameters.Protocol" />
      <Member Id="P:Azure.Storage.Sas.SasQueryParameters.Resource" />
      <Member Id="P:Azure.Storage.Sas.SasQueryParameters.ResourceTypes" />
      <Member Id="P:Azure.Storage.Sas.SasQueryParameters.Services" />
      <Member Id="P:Azure.Storage.Sas.SasQueryParameters.Signature" />
      <Member Id="P:Azure.Storage.Sas.SasQueryParameters.StartsOn" />
      <Member Id="P:Azure.Storage.Sas.SasQueryParameters.Version" />
    </Type>
    <Type Name="Azure.Storage.Sas.ShareAccountSasPermissions" Id="T:Azure.Storage.Sas.ShareAccountSasPermissions">
      <Member Id="F:Azure.Storage.Sas.ShareAccountSasPermissions.Add" />
      <Member Id="F:Azure.Storage.Sas.ShareAccountSasPermissions.All" />
      <Member Id="F:Azure.Storage.Sas.ShareAccountSasPermissions.Create" />
      <Member Id="F:Azure.Storage.Sas.ShareAccountSasPermissions.Delete" />
      <Member Id="F:Azure.Storage.Sas.ShareAccountSasPermissions.List" />
      <Member Id="F:Azure.Storage.Sas.ShareAccountSasPermissions.Read" />
      <Member Id="F:Azure.Storage.Sas.ShareAccountSasPermissions.Write" />
    </Type>
    <Type Name="Azure.Storage.Sas.ShareFileSasPermissions" Id="T:Azure.Storage.Sas.ShareFileSasPermissions">
      <Member Id="F:Azure.Storage.Sas.ShareFileSasPermissions.All" />
      <Member Id="F:Azure.Storage.Sas.ShareFileSasPermissions.Create" />
      <Member Id="F:Azure.Storage.Sas.ShareFileSasPermissions.Delete" />
      <Member Id="F:Azure.Storage.Sas.ShareFileSasPermissions.Read" />
      <Member Id="F:Azure.Storage.Sas.ShareFileSasPermissions.Write" />
    </Type>
    <Type Name="Azure.Storage.Sas.ShareSasBuilder" Id="T:Azure.Storage.Sas.ShareSasBuilder">
      <Member Id="M:Azure.Storage.Sas.ShareSasBuilder.#ctor" />
      <Member Id="M:Azure.Storage.Sas.ShareSasBuilder.#ctor(Azure.Storage.Sas.ShareFileSasPermissions,System.DateTimeOffset)" />
      <Member Id="M:Azure.Storage.Sas.ShareSasBuilder.#ctor(Azure.Storage.Sas.ShareSasPermissions,System.DateTimeOffset)" />
      <Member Id="M:Azure.Storage.Sas.ShareSasBuilder.Equals(System.Object)" />
      <Member Id="M:Azure.Storage.Sas.ShareSasBuilder.GetHashCode" />
      <Member Id="M:Azure.Storage.Sas.ShareSasBuilder.SetPermissions(Azure.Storage.Sas.ShareAccountSasPermissions)" />
      <Member Id="M:Azure.Storage.Sas.ShareSasBuilder.SetPermissions(Azure.Storage.Sas.ShareFileSasPermissions)" />
      <Member Id="M:Azure.Storage.Sas.ShareSasBuilder.SetPermissions(Azure.Storage.Sas.ShareSasPermissions)" />
      <Member Id="M:Azure.Storage.Sas.ShareSasBuilder.SetPermissions(System.String)" />
      <Member Id="M:Azure.Storage.Sas.ShareSasBuilder.SetPermissions(System.String,System.Boolean)" />
      <Member Id="M:Azure.Storage.Sas.ShareSasBuilder.ToSasQueryParameters(Azure.Storage.StorageSharedKeyCredential)" />
      <Member Id="M:Azure.Storage.Sas.ShareSasBuilder.ToString" />
      <Member Id="P:Azure.Storage.Sas.ShareSasBuilder.CacheControl" />
      <Member Id="P:Azure.Storage.Sas.ShareSasBuilder.ContentDisposition" />
      <Member Id="P:Azure.Storage.Sas.ShareSasBuilder.ContentEncoding" />
      <Member Id="P:Azure.Storage.Sas.ShareSasBuilder.ContentLanguage" />
      <Member Id="P:Azure.Storage.Sas.ShareSasBuilder.ContentType" />
      <Member Id="P:Azure.Storage.Sas.ShareSasBuilder.ExpiresOn" />
      <Member Id="P:Azure.Storage.Sas.ShareSasBuilder.FilePath" />
      <Member Id="P:Azure.Storage.Sas.ShareSasBuilder.Identifier" />
      <Member Id="P:Azure.Storage.Sas.ShareSasBuilder.IPRange" />
      <Member Id="P:Azure.Storage.Sas.ShareSasBuilder.Permissions" />
      <Member Id="P:Azure.Storage.Sas.ShareSasBuilder.Protocol" />
      <Member Id="P:Azure.Storage.Sas.ShareSasBuilder.Resource" />
      <Member Id="P:Azure.Storage.Sas.ShareSasBuilder.ShareName" />
      <Member Id="P:Azure.Storage.Sas.ShareSasBuilder.StartsOn" />
      <Member Id="P:Azure.Storage.Sas.ShareSasBuilder.Version" />
    </Type>
    <Type Name="Azure.Storage.Sas.ShareSasPermissions" Id="T:Azure.Storage.Sas.ShareSasPermissions">
      <Member Id="F:Azure.Storage.Sas.ShareSasPermissions.All" />
      <Member Id="F:Azure.Storage.Sas.ShareSasPermissions.Create" />
      <Member Id="F:Azure.Storage.Sas.ShareSasPermissions.Delete" />
      <Member Id="F:Azure.Storage.Sas.ShareSasPermissions.List" />
      <Member Id="F:Azure.Storage.Sas.ShareSasPermissions.Read" />
      <Member Id="F:Azure.Storage.Sas.ShareSasPermissions.Write" />
    </Type>
    <Type Name="Azure.Storage.Sas.SnapshotSasPermissions" Id="T:Azure.Storage.Sas.SnapshotSasPermissions">
      <Member Id="F:Azure.Storage.Sas.SnapshotSasPermissions.All" />
      <Member Id="F:Azure.Storage.Sas.SnapshotSasPermissions.Delete" />
      <Member Id="F:Azure.Storage.Sas.SnapshotSasPermissions.Read" />
      <Member Id="F:Azure.Storage.Sas.SnapshotSasPermissions.Write" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Batch.FileStaging">
    <Type Name="Microsoft.Azure.Batch.FileStaging.FileToStage" Id="T:Microsoft.Azure.Batch.FileStaging.FileToStage">
      <Member Id="M:Microsoft.Azure.Batch.FileStaging.FileToStage.#ctor(System.String,Microsoft.Azure.Batch.FileStaging.StagingStorageAccount,System.String)" />
      <Member Id="M:Microsoft.Azure.Batch.FileStaging.FileToStage.CreateStagingArtifact" />
      <Member Id="M:Microsoft.Azure.Batch.FileStaging.FileToStage.StageFilesAsync(System.Collections.Generic.List{Microsoft.Azure.Batch.FileStaging.IFileStagingProvider},Microsoft.Azure.Batch.IFileStagingArtifact)" />
      <Member Id="M:Microsoft.Azure.Batch.FileStaging.FileToStage.Validate" />
      <Member Id="P:Microsoft.Azure.Batch.FileStaging.FileToStage.Exception" />
      <Member Id="P:Microsoft.Azure.Batch.FileStaging.FileToStage.LocalFileToStage" />
      <Member Id="P:Microsoft.Azure.Batch.FileStaging.FileToStage.NodeFileName" />
      <Member Id="P:Microsoft.Azure.Batch.FileStaging.FileToStage.StagedFiles" />
    </Type>
    <Type Name="Microsoft.Azure.Batch.FileStaging.SequentialFileStagingArtifact" Id="T:Microsoft.Azure.Batch.FileStaging.SequentialFileStagingArtifact">
      <Member Id="M:Microsoft.Azure.Batch.FileStaging.SequentialFileStagingArtifact.#ctor" />
      <Member Id="P:Microsoft.Azure.Batch.FileStaging.SequentialFileStagingArtifact.BlobContainerCreated" />
      <Member Id="P:Microsoft.Azure.Batch.FileStaging.SequentialFileStagingArtifact.NamingFragment" />
    </Type>
    <Type Name="Microsoft.Azure.Batch.FileStaging.StagingStorageAccount" Id="T:Microsoft.Azure.Batch.FileStaging.StagingStorageAccount">
      <Member Id="M:Microsoft.Azure.Batch.FileStaging.StagingStorageAccount.#ctor(System.String,System.String,System.String)" />
      <Member Id="P:Microsoft.Azure.Batch.FileStaging.StagingStorageAccount.BlobEndpoint" />
      <Member Id="P:Microsoft.Azure.Batch.FileStaging.StagingStorageAccount.StorageAccount" />
      <Member Id="P:Microsoft.Azure.Batch.FileStaging.StagingStorageAccount.StorageAccountKey" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Devices.Client">
    <Type Name="Microsoft.Azure.Devices.Client.AmqpConnectionPoolSettings" Id="T:Microsoft.Azure.Devices.Client.AmqpConnectionPoolSettings">
      <Member Id="F:Microsoft.Azure.Devices.Client.AmqpConnectionPoolSettings.AbsoluteMaxPoolSize" />
      <Member Id="M:Microsoft.Azure.Devices.Client.AmqpConnectionPoolSettings.#ctor" />
      <Member Id="M:Microsoft.Azure.Devices.Client.AmqpConnectionPoolSettings.Equals(Microsoft.Azure.Devices.Client.AmqpConnectionPoolSettings)" />
      <Member Id="P:Microsoft.Azure.Devices.Client.AmqpConnectionPoolSettings.ConnectionIdleTimeout" />
      <Member Id="P:Microsoft.Azure.Devices.Client.AmqpConnectionPoolSettings.MaxPoolSize" />
      <Member Id="P:Microsoft.Azure.Devices.Client.AmqpConnectionPoolSettings.Pooling" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.AmqpTransportSettings" Id="T:Microsoft.Azure.Devices.Client.AmqpTransportSettings">
      <Member Id="F:Microsoft.Azure.Devices.Client.AmqpTransportSettings.DefaultIdleTimeout" />
      <Member Id="F:Microsoft.Azure.Devices.Client.AmqpTransportSettings.DefaultOpenTimeout" />
      <Member Id="F:Microsoft.Azure.Devices.Client.AmqpTransportSettings.DefaultOperationTimeout" />
      <Member Id="F:Microsoft.Azure.Devices.Client.AmqpTransportSettings.DefaultPrefetchCount" />
      <Member Id="M:Microsoft.Azure.Devices.Client.AmqpTransportSettings.#ctor(Microsoft.Azure.Devices.Client.TransportType)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.AmqpTransportSettings.#ctor(Microsoft.Azure.Devices.Client.TransportType,System.UInt32)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.AmqpTransportSettings.#ctor(Microsoft.Azure.Devices.Client.TransportType,System.UInt32,Microsoft.Azure.Devices.Client.AmqpConnectionPoolSettings)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.AmqpTransportSettings.Equals(Microsoft.Azure.Devices.Client.AmqpTransportSettings)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.AmqpTransportSettings.GetTransportType" />
      <Member Id="P:Microsoft.Azure.Devices.Client.AmqpTransportSettings.AmqpConnectionPoolSettings" />
      <Member Id="P:Microsoft.Azure.Devices.Client.AmqpTransportSettings.CertificateRevocationCheck" />
      <Member Id="P:Microsoft.Azure.Devices.Client.AmqpTransportSettings.ClientCertificate" />
      <Member Id="P:Microsoft.Azure.Devices.Client.AmqpTransportSettings.DefaultReceiveTimeout" />
      <Member Id="P:Microsoft.Azure.Devices.Client.AmqpTransportSettings.IdleTimeout" />
      <Member Id="P:Microsoft.Azure.Devices.Client.AmqpTransportSettings.OpenTimeout" />
      <Member Id="P:Microsoft.Azure.Devices.Client.AmqpTransportSettings.OperationTimeout" />
      <Member Id="P:Microsoft.Azure.Devices.Client.AmqpTransportSettings.PrefetchCount" />
      <Member Id="P:Microsoft.Azure.Devices.Client.AmqpTransportSettings.Proxy" />
      <Member Id="P:Microsoft.Azure.Devices.Client.AmqpTransportSettings.RemoteCertificateValidationCallback" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.AuthenticationMethodFactory" Id="T:Microsoft.Azure.Devices.Client.AuthenticationMethodFactory">
      <Member Id="M:Microsoft.Azure.Devices.Client.AuthenticationMethodFactory.#ctor" />
      <Member Id="M:Microsoft.Azure.Devices.Client.AuthenticationMethodFactory.CreateAuthenticationWithRegistrySymmetricKey(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.AuthenticationMethodFactory.CreateAuthenticationWithRegistrySymmetricKey(System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.AuthenticationMethodFactory.CreateAuthenticationWithSharedAccessPolicyKey(System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.AuthenticationMethodFactory.CreateAuthenticationWithToken(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.AuthenticationMethodFactory.CreateAuthenticationWithToken(System.String,System.String,System.String)" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.AuthenticationWithTokenRefresh" Id="T:Microsoft.Azure.Devices.Client.AuthenticationWithTokenRefresh">
      <Member Id="M:Microsoft.Azure.Devices.Client.AuthenticationWithTokenRefresh.#ctor(System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.AuthenticationWithTokenRefresh.Dispose" />
      <Member Id="M:Microsoft.Azure.Devices.Client.AuthenticationWithTokenRefresh.Dispose(System.Boolean)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.AuthenticationWithTokenRefresh.GetTokenAsync(System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.AuthenticationWithTokenRefresh.Populate(Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.AuthenticationWithTokenRefresh.SafeCreateNewToken(System.String,System.Int32)" />
      <Member Id="P:Microsoft.Azure.Devices.Client.AuthenticationWithTokenRefresh.ExpiresOn" />
      <Member Id="P:Microsoft.Azure.Devices.Client.AuthenticationWithTokenRefresh.IsExpiring" />
      <Member Id="P:Microsoft.Azure.Devices.Client.AuthenticationWithTokenRefresh.RefreshesOn" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.ClientOptions" Id="T:Microsoft.Azure.Devices.Client.ClientOptions">
      <Member Id="M:Microsoft.Azure.Devices.Client.ClientOptions.#ctor" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ClientOptions.FileUploadTransportSettings" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ClientOptions.ModelId" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ClientOptions.SdkAssignsMessageId" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.ConnectionStatus" Id="T:Microsoft.Azure.Devices.Client.ConnectionStatus">
      <Member Id="F:Microsoft.Azure.Devices.Client.ConnectionStatus.Connected" />
      <Member Id="F:Microsoft.Azure.Devices.Client.ConnectionStatus.Disabled" />
      <Member Id="F:Microsoft.Azure.Devices.Client.ConnectionStatus.Disconnected" />
      <Member Id="F:Microsoft.Azure.Devices.Client.ConnectionStatus.Disconnected_Retrying" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.ConnectionStatusChangeReason" Id="T:Microsoft.Azure.Devices.Client.ConnectionStatusChangeReason">
      <Member Id="F:Microsoft.Azure.Devices.Client.ConnectionStatusChangeReason.Bad_Credential" />
      <Member Id="F:Microsoft.Azure.Devices.Client.ConnectionStatusChangeReason.Client_Close" />
      <Member Id="F:Microsoft.Azure.Devices.Client.ConnectionStatusChangeReason.Communication_Error" />
      <Member Id="F:Microsoft.Azure.Devices.Client.ConnectionStatusChangeReason.Connection_Ok" />
      <Member Id="F:Microsoft.Azure.Devices.Client.ConnectionStatusChangeReason.Device_Disabled" />
      <Member Id="F:Microsoft.Azure.Devices.Client.ConnectionStatusChangeReason.Expired_SAS_Token" />
      <Member Id="F:Microsoft.Azure.Devices.Client.ConnectionStatusChangeReason.No_Network" />
      <Member Id="F:Microsoft.Azure.Devices.Client.ConnectionStatusChangeReason.Retry_Expired" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.ConnectionStatusChangesHandler" Id="T:Microsoft.Azure.Devices.Client.ConnectionStatusChangesHandler" />
    <Type Name="Microsoft.Azure.Devices.Client.DeliveryAcknowledgement" Id="T:Microsoft.Azure.Devices.Client.DeliveryAcknowledgement">
      <Member Id="F:Microsoft.Azure.Devices.Client.DeliveryAcknowledgement.Full" />
      <Member Id="F:Microsoft.Azure.Devices.Client.DeliveryAcknowledgement.NegativeOnly" />
      <Member Id="F:Microsoft.Azure.Devices.Client.DeliveryAcknowledgement.None" />
      <Member Id="F:Microsoft.Azure.Devices.Client.DeliveryAcknowledgement.PositiveOnly" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.DesiredPropertyUpdateCallback" Id="T:Microsoft.Azure.Devices.Client.DesiredPropertyUpdateCallback" />
    <Type Name="Microsoft.Azure.Devices.Client.DeviceAuthenticationWithRegistrySymmetricKey" Id="T:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithRegistrySymmetricKey">
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithRegistrySymmetricKey.#ctor(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithRegistrySymmetricKey.Populate(Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder)" />
      <Member Id="P:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithRegistrySymmetricKey.DeviceId" />
      <Member Id="P:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithRegistrySymmetricKey.Key" />
      <Member Id="P:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithRegistrySymmetricKey.KeyAsBase64String" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.DeviceAuthenticationWithSharedAccessPolicyKey" Id="T:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithSharedAccessPolicyKey">
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithSharedAccessPolicyKey.#ctor(System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithSharedAccessPolicyKey.Populate(Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder)" />
      <Member Id="P:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithSharedAccessPolicyKey.DeviceId" />
      <Member Id="P:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithSharedAccessPolicyKey.Key" />
      <Member Id="P:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithSharedAccessPolicyKey.PolicyName" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.DeviceAuthenticationWithToken" Id="T:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithToken">
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithToken.#ctor(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithToken.Populate(Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder)" />
      <Member Id="P:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithToken.DeviceId" />
      <Member Id="P:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithToken.Token" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.DeviceAuthenticationWithTokenRefresh" Id="T:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithTokenRefresh">
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithTokenRefresh.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithTokenRefresh.#ctor(System.String,System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithTokenRefresh.Populate(Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder)" />
      <Member Id="P:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithTokenRefresh.DeviceId" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.DeviceAuthenticationWithTpm" Id="T:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithTpm">
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithTpm.#ctor(System.String,Microsoft.Azure.Devices.Shared.SecurityProviderTpm)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithTpm.#ctor(System.String,Microsoft.Azure.Devices.Shared.SecurityProviderTpm,System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithTpm.SafeCreateNewToken(System.String,System.Int32)" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.DeviceAuthenticationWithX509Certificate" Id="T:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithX509Certificate">
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithX509Certificate.#ctor(System.String,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithX509Certificate.Populate(Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder)" />
      <Member Id="P:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithX509Certificate.Certificate" />
      <Member Id="P:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithX509Certificate.ChainCertificates" />
      <Member Id="P:Microsoft.Azure.Devices.Client.DeviceAuthenticationWithX509Certificate.DeviceId" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.DeviceClient" Id="T:Microsoft.Azure.Devices.Client.DeviceClient">
      <Member Id="F:Microsoft.Azure.Devices.Client.DeviceClient.DefaultOperationTimeoutInMilliseconds" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.AbandonAsync(Microsoft.Azure.Devices.Client.Message)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.AbandonAsync(Microsoft.Azure.Devices.Client.Message,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.AbandonAsync(System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.AbandonAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.CloseAsync" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.CloseAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.CompleteAsync(Microsoft.Azure.Devices.Client.Message)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.CompleteAsync(Microsoft.Azure.Devices.Client.Message,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.CompleteAsync(System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.CompleteAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.CompleteFileUploadAsync(Microsoft.Azure.Devices.Client.Transport.FileUploadCompletionNotification,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.Create(System.String,Microsoft.Azure.Devices.Client.IAuthenticationMethod,Microsoft.Azure.Devices.Client.ClientOptions)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.Create(System.String,Microsoft.Azure.Devices.Client.IAuthenticationMethod,Microsoft.Azure.Devices.Client.ITransportSettings[],Microsoft.Azure.Devices.Client.ClientOptions)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.Create(System.String,Microsoft.Azure.Devices.Client.IAuthenticationMethod,Microsoft.Azure.Devices.Client.TransportType,Microsoft.Azure.Devices.Client.ClientOptions)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.Create(System.String,System.String,Microsoft.Azure.Devices.Client.IAuthenticationMethod,Microsoft.Azure.Devices.Client.ClientOptions)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.Create(System.String,System.String,Microsoft.Azure.Devices.Client.IAuthenticationMethod,Microsoft.Azure.Devices.Client.ITransportSettings[],Microsoft.Azure.Devices.Client.ClientOptions)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.Create(System.String,System.String,Microsoft.Azure.Devices.Client.IAuthenticationMethod,Microsoft.Azure.Devices.Client.TransportType,Microsoft.Azure.Devices.Client.ClientOptions)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String,Microsoft.Azure.Devices.Client.ClientOptions)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String,Microsoft.Azure.Devices.Client.ITransportSettings[],Microsoft.Azure.Devices.Client.ClientOptions)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String,Microsoft.Azure.Devices.Client.TransportType,Microsoft.Azure.Devices.Client.ClientOptions)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String,System.String,Microsoft.Azure.Devices.Client.ClientOptions)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String,System.String,Microsoft.Azure.Devices.Client.ITransportSettings[],Microsoft.Azure.Devices.Client.ClientOptions)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String,System.String,Microsoft.Azure.Devices.Client.TransportType,Microsoft.Azure.Devices.Client.ClientOptions)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.Dispose" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.GetFileUploadSasUriAsync(Microsoft.Azure.Devices.Client.Transport.FileUploadSasUriRequest,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.GetTwinAsync" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.GetTwinAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.OpenAsync" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.OpenAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.ReceiveAsync" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.ReceiveAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.ReceiveAsync(System.TimeSpan)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.RejectAsync(Microsoft.Azure.Devices.Client.Message)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.RejectAsync(Microsoft.Azure.Devices.Client.Message,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.RejectAsync(System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.RejectAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.SendEventAsync(Microsoft.Azure.Devices.Client.Message)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.SendEventAsync(Microsoft.Azure.Devices.Client.Message,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.SendEventBatchAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Devices.Client.Message})" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.SendEventBatchAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Devices.Client.Message},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.SetConnectionStatusChangesHandler(Microsoft.Azure.Devices.Client.ConnectionStatusChangesHandler)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.SetDesiredPropertyUpdateCallback(Microsoft.Azure.Devices.Client.DesiredPropertyUpdateCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.SetDesiredPropertyUpdateCallbackAsync(Microsoft.Azure.Devices.Client.DesiredPropertyUpdateCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.SetDesiredPropertyUpdateCallbackAsync(Microsoft.Azure.Devices.Client.DesiredPropertyUpdateCallback,System.Object,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.SetMethodDefaultHandlerAsync(Microsoft.Azure.Devices.Client.MethodCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.SetMethodDefaultHandlerAsync(Microsoft.Azure.Devices.Client.MethodCallback,System.Object,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.SetMethodHandler(System.String,Microsoft.Azure.Devices.Client.MethodCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.SetMethodHandlerAsync(System.String,Microsoft.Azure.Devices.Client.MethodCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.SetMethodHandlerAsync(System.String,Microsoft.Azure.Devices.Client.MethodCallback,System.Object,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.SetReceiveMessageHandlerAsync(Microsoft.Azure.Devices.Client.ReceiveMessageCallback,System.Object,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.SetRetryPolicy(Microsoft.Azure.Devices.Client.IRetryPolicy)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.UpdateReportedPropertiesAsync(Microsoft.Azure.Devices.Shared.TwinCollection)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.UpdateReportedPropertiesAsync(Microsoft.Azure.Devices.Shared.TwinCollection,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.UploadToBlobAsync(System.String,System.IO.Stream)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.DeviceClient.UploadToBlobAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)" />
      <Member Id="P:Microsoft.Azure.Devices.Client.DeviceClient.DiagnosticSamplingPercentage" />
      <Member Id="P:Microsoft.Azure.Devices.Client.DeviceClient.OperationTimeoutInMilliseconds" />
      <Member Id="P:Microsoft.Azure.Devices.Client.DeviceClient.ProductInfo" />
      <Member Id="P:Microsoft.Azure.Devices.Client.DeviceClient.RetryPolicy" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.ExponentialBackoff" Id="T:Microsoft.Azure.Devices.Client.ExponentialBackoff">
      <Member Id="M:Microsoft.Azure.Devices.Client.ExponentialBackoff.#ctor(System.Int32,System.TimeSpan,System.TimeSpan,System.TimeSpan)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ExponentialBackoff.ShouldRetry(System.Int32,System.Exception,System.TimeSpan@)" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.Http1TransportSettings" Id="T:Microsoft.Azure.Devices.Client.Http1TransportSettings">
      <Member Id="M:Microsoft.Azure.Devices.Client.Http1TransportSettings.#ctor" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Http1TransportSettings.GetTransportType" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Http1TransportSettings.ClientCertificate" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Http1TransportSettings.DefaultReceiveTimeout" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Http1TransportSettings.Proxy" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.IAuthenticationMethod" Id="T:Microsoft.Azure.Devices.Client.IAuthenticationMethod">
      <Member Id="M:Microsoft.Azure.Devices.Client.IAuthenticationMethod.Populate(Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder)" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder" Id="T:Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder">
      <Member Id="M:Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder.Create(System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder.Create(System.String,Microsoft.Azure.Devices.Client.IAuthenticationMethod)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder.Create(System.String,System.String,Microsoft.Azure.Devices.Client.IAuthenticationMethod)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder.ToString" />
      <Member Id="P:Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder.AuthenticationMethod" />
      <Member Id="P:Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder.DeviceId" />
      <Member Id="P:Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder.GatewayHostName" />
      <Member Id="P:Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder.HostName" />
      <Member Id="P:Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder.ModuleId" />
      <Member Id="P:Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder.SharedAccessKey" />
      <Member Id="P:Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder.SharedAccessKeyName" />
      <Member Id="P:Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder.SharedAccessSignature" />
      <Member Id="P:Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder.UsingX509Cert" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.IReadOnlyIndicator" Id="T:Microsoft.Azure.Devices.Client.IReadOnlyIndicator">
      <Member Id="P:Microsoft.Azure.Devices.Client.IReadOnlyIndicator.IsReadOnly" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.IRetryPolicy" Id="T:Microsoft.Azure.Devices.Client.IRetryPolicy">
      <Member Id="M:Microsoft.Azure.Devices.Client.IRetryPolicy.ShouldRetry(System.Int32,System.Exception,System.TimeSpan@)" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.ITransportSettings" Id="T:Microsoft.Azure.Devices.Client.ITransportSettings">
      <Member Id="M:Microsoft.Azure.Devices.Client.ITransportSettings.GetTransportType" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ITransportSettings.DefaultReceiveTimeout" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.Message" Id="T:Microsoft.Azure.Devices.Client.Message">
      <Member Id="M:Microsoft.Azure.Devices.Client.Message.#ctor" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Message.#ctor(System.Byte[])" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Message.#ctor(System.IO.Stream)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Message.CloneWithBody(System.Byte[]@)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Message.Dispose" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Message.GetBodyStream" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Message.GetBytes" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Message.SetAsSecurityMessage" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Message.BodyStream" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Message.ComponentName" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Message.ConnectionDeviceId" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Message.ConnectionModuleId" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Message.ContentEncoding" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Message.ContentType" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Message.CorrelationId" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Message.CreationTimeUtc" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Message.DeliveryCount" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Message.EnqueuedTimeUtc" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Message.ExpiryTimeUtc" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Message.InputName" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Message.IsSecurityMessage" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Message.LockToken" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Message.MessageId" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Message.MessageSchema" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Message.Microsoft#Azure#Devices#Client#IReadOnlyIndicator#IsReadOnly" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Message.Properties" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Message.SequenceNumber" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Message.To" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Message.UserId" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.MessageHandler" Id="T:Microsoft.Azure.Devices.Client.MessageHandler" />
    <Type Name="Microsoft.Azure.Devices.Client.MessageResponse" Id="T:Microsoft.Azure.Devices.Client.MessageResponse">
      <Member Id="F:Microsoft.Azure.Devices.Client.MessageResponse.Abandoned" />
      <Member Id="F:Microsoft.Azure.Devices.Client.MessageResponse.Completed" />
      <Member Id="F:Microsoft.Azure.Devices.Client.MessageResponse.None" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.MethodCallback" Id="T:Microsoft.Azure.Devices.Client.MethodCallback" />
    <Type Name="Microsoft.Azure.Devices.Client.MethodRequest" Id="T:Microsoft.Azure.Devices.Client.MethodRequest">
      <Member Id="M:Microsoft.Azure.Devices.Client.MethodRequest.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.MethodRequest.#ctor(System.String,System.Byte[])" />
      <Member Id="M:Microsoft.Azure.Devices.Client.MethodRequest.#ctor(System.String,System.Byte[],System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})" />
      <Member Id="M:Microsoft.Azure.Devices.Client.MethodRequest.#ctor(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})" />
      <Member Id="P:Microsoft.Azure.Devices.Client.MethodRequest.ConnectionTimeout" />
      <Member Id="P:Microsoft.Azure.Devices.Client.MethodRequest.Data" />
      <Member Id="P:Microsoft.Azure.Devices.Client.MethodRequest.DataAsJson" />
      <Member Id="P:Microsoft.Azure.Devices.Client.MethodRequest.Name" />
      <Member Id="P:Microsoft.Azure.Devices.Client.MethodRequest.ResponseTimeout" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.MethodRequestInternal" Id="T:Microsoft.Azure.Devices.Client.MethodRequestInternal">
      <Member Id="M:Microsoft.Azure.Devices.Client.MethodRequestInternal.Dispose" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.MethodResponse" Id="T:Microsoft.Azure.Devices.Client.MethodResponse">
      <Member Id="M:Microsoft.Azure.Devices.Client.MethodResponse.#ctor(System.Byte[],System.Int32)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.MethodResponse.#ctor(System.Int32)" />
      <Member Id="P:Microsoft.Azure.Devices.Client.MethodResponse.Result" />
      <Member Id="P:Microsoft.Azure.Devices.Client.MethodResponse.ResultAsJson" />
      <Member Id="P:Microsoft.Azure.Devices.Client.MethodResponse.Status" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.MethodResponseInternal" Id="T:Microsoft.Azure.Devices.Client.MethodResponseInternal">
      <Member Id="M:Microsoft.Azure.Devices.Client.MethodResponseInternal.Dispose" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.MethodResponseStatusCode" Id="T:Microsoft.Azure.Devices.Client.MethodResponseStatusCode">
      <Member Id="F:Microsoft.Azure.Devices.Client.MethodResponseStatusCode.BadRequest" />
      <Member Id="F:Microsoft.Azure.Devices.Client.MethodResponseStatusCode.MethodNotImplemented" />
      <Member Id="F:Microsoft.Azure.Devices.Client.MethodResponseStatusCode.UserCodeException" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.ModuleAuthenticationWithRegistrySymmetricKey" Id="T:Microsoft.Azure.Devices.Client.ModuleAuthenticationWithRegistrySymmetricKey">
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleAuthenticationWithRegistrySymmetricKey.#ctor(System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleAuthenticationWithRegistrySymmetricKey.Populate(Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder)" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ModuleAuthenticationWithRegistrySymmetricKey.DeviceId" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ModuleAuthenticationWithRegistrySymmetricKey.Key" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ModuleAuthenticationWithRegistrySymmetricKey.KeyAsBase64String" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ModuleAuthenticationWithRegistrySymmetricKey.ModuleId" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.ModuleAuthenticationWithToken" Id="T:Microsoft.Azure.Devices.Client.ModuleAuthenticationWithToken">
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleAuthenticationWithToken.#ctor(System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleAuthenticationWithToken.Populate(Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder)" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ModuleAuthenticationWithToken.DeviceId" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ModuleAuthenticationWithToken.ModuleId" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ModuleAuthenticationWithToken.Token" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.ModuleAuthenticationWithTokenRefresh" Id="T:Microsoft.Azure.Devices.Client.ModuleAuthenticationWithTokenRefresh">
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleAuthenticationWithTokenRefresh.#ctor(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleAuthenticationWithTokenRefresh.#ctor(System.String,System.String,System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleAuthenticationWithTokenRefresh.Populate(Microsoft.Azure.Devices.Client.IotHubConnectionStringBuilder)" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ModuleAuthenticationWithTokenRefresh.DeviceId" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ModuleAuthenticationWithTokenRefresh.ModuleId" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.ModuleClient" Id="T:Microsoft.Azure.Devices.Client.ModuleClient">
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.AbandonAsync(Microsoft.Azure.Devices.Client.Message)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.AbandonAsync(Microsoft.Azure.Devices.Client.Message,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.AbandonAsync(System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.AbandonAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.CloseAsync" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.CloseAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.CompleteAsync(Microsoft.Azure.Devices.Client.Message)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.CompleteAsync(Microsoft.Azure.Devices.Client.Message,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.CompleteAsync(System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.CompleteAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.Create(System.String,Microsoft.Azure.Devices.Client.IAuthenticationMethod,Microsoft.Azure.Devices.Client.ClientOptions)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.Create(System.String,Microsoft.Azure.Devices.Client.IAuthenticationMethod,Microsoft.Azure.Devices.Client.ITransportSettings[],Microsoft.Azure.Devices.Client.ClientOptions)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.Create(System.String,Microsoft.Azure.Devices.Client.IAuthenticationMethod,Microsoft.Azure.Devices.Client.TransportType,Microsoft.Azure.Devices.Client.ClientOptions)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.Create(System.String,System.String,Microsoft.Azure.Devices.Client.IAuthenticationMethod,Microsoft.Azure.Devices.Client.ClientOptions)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.Create(System.String,System.String,Microsoft.Azure.Devices.Client.IAuthenticationMethod,Microsoft.Azure.Devices.Client.ITransportSettings[],Microsoft.Azure.Devices.Client.ClientOptions)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.Create(System.String,System.String,Microsoft.Azure.Devices.Client.IAuthenticationMethod,Microsoft.Azure.Devices.Client.TransportType,Microsoft.Azure.Devices.Client.ClientOptions)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.CreateFromConnectionString(System.String,Microsoft.Azure.Devices.Client.ClientOptions)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.CreateFromConnectionString(System.String,Microsoft.Azure.Devices.Client.ITransportSettings[],Microsoft.Azure.Devices.Client.ClientOptions)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.CreateFromConnectionString(System.String,Microsoft.Azure.Devices.Client.TransportType,Microsoft.Azure.Devices.Client.ClientOptions)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.CreateFromEnvironmentAsync(Microsoft.Azure.Devices.Client.ClientOptions)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.CreateFromEnvironmentAsync(Microsoft.Azure.Devices.Client.ITransportSettings[],Microsoft.Azure.Devices.Client.ClientOptions)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.CreateFromEnvironmentAsync(Microsoft.Azure.Devices.Client.TransportType,Microsoft.Azure.Devices.Client.ClientOptions)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.Dispose" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.GetTwinAsync" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.GetTwinAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.InvokeMethodAsync(System.String,Microsoft.Azure.Devices.Client.MethodRequest)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.InvokeMethodAsync(System.String,Microsoft.Azure.Devices.Client.MethodRequest,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.InvokeMethodAsync(System.String,System.String,Microsoft.Azure.Devices.Client.MethodRequest)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.InvokeMethodAsync(System.String,System.String,Microsoft.Azure.Devices.Client.MethodRequest,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.OpenAsync" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.OpenAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.SendEventAsync(Microsoft.Azure.Devices.Client.Message)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.SendEventAsync(Microsoft.Azure.Devices.Client.Message,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.SendEventAsync(System.String,Microsoft.Azure.Devices.Client.Message)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.SendEventAsync(System.String,Microsoft.Azure.Devices.Client.Message,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.SendEventBatchAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Devices.Client.Message})" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.SendEventBatchAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Devices.Client.Message},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.SendEventBatchAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Devices.Client.Message})" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.SendEventBatchAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Devices.Client.Message},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.SetConnectionStatusChangesHandler(Microsoft.Azure.Devices.Client.ConnectionStatusChangesHandler)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.SetDesiredPropertyUpdateCallbackAsync(Microsoft.Azure.Devices.Client.DesiredPropertyUpdateCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.SetDesiredPropertyUpdateCallbackAsync(Microsoft.Azure.Devices.Client.DesiredPropertyUpdateCallback,System.Object,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.SetInputMessageHandlerAsync(System.String,Microsoft.Azure.Devices.Client.MessageHandler,System.Object)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.SetInputMessageHandlerAsync(System.String,Microsoft.Azure.Devices.Client.MessageHandler,System.Object,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.SetMessageHandlerAsync(Microsoft.Azure.Devices.Client.MessageHandler,System.Object)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.SetMessageHandlerAsync(Microsoft.Azure.Devices.Client.MessageHandler,System.Object,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.SetMethodDefaultHandlerAsync(Microsoft.Azure.Devices.Client.MethodCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.SetMethodDefaultHandlerAsync(Microsoft.Azure.Devices.Client.MethodCallback,System.Object,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.SetMethodHandlerAsync(System.String,Microsoft.Azure.Devices.Client.MethodCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.SetMethodHandlerAsync(System.String,Microsoft.Azure.Devices.Client.MethodCallback,System.Object,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.SetRetryPolicy(Microsoft.Azure.Devices.Client.IRetryPolicy)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.UpdateReportedPropertiesAsync(Microsoft.Azure.Devices.Shared.TwinCollection)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ModuleClient.UpdateReportedPropertiesAsync(Microsoft.Azure.Devices.Shared.TwinCollection,System.Threading.CancellationToken)" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ModuleClient.DiagnosticSamplingPercentage" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ModuleClient.OperationTimeoutInMilliseconds" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ModuleClient.ProductInfo" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.NoRetry" Id="T:Microsoft.Azure.Devices.Client.NoRetry">
      <Member Id="M:Microsoft.Azure.Devices.Client.NoRetry.#ctor" />
      <Member Id="M:Microsoft.Azure.Devices.Client.NoRetry.ShouldRetry(System.Int32,System.Exception,System.TimeSpan@)" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2" Id="T:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2">
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ContainsKey(`0)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.GetEnumerator" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#Add(System.Collections.Generic.KeyValuePair{`0,`1})" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#Clear" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#Contains(System.Collections.Generic.KeyValuePair{`0,`1})" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#Remove(System.Collections.Generic.KeyValuePair{`0,`1})" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#Generic#IDictionary&lt;TKey,TValue&gt;#Add(`0,`1)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#Generic#IDictionary&lt;TKey,TValue&gt;#Remove(`0)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#IDictionary#Add(System.Object,System.Object)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#IDictionary#Clear" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#IDictionary#Contains(System.Object)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#IDictionary#GetEnumerator" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#IDictionary#Remove(System.Object)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.TryGetValue(`0,`1@)" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.Count" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.Dictionary" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.Item(`0)" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.Keys" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#IsReadOnly" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#Generic#IDictionary&lt;TKey,TValue&gt;#Item(`0)" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#Generic#IDictionary&lt;TKey,TValue&gt;#Keys" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#Generic#IDictionary&lt;TKey,TValue&gt;#Values" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#ICollection#IsSynchronized" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#ICollection#SyncRoot" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#IDictionary#IsFixedSize" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#IDictionary#IsReadOnly" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#IDictionary#Item(System.Object)" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#IDictionary#Keys" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.System#Collections#IDictionary#Values" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.Values" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2/KeyCollection" Id="T:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.KeyCollection">
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.KeyCollection.CopyTo(`0[],System.Int32)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.KeyCollection.GetEnumerator" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.KeyCollection.System#Collections#Generic#ICollection&lt;TKey&gt;#Add(`0)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.KeyCollection.System#Collections#Generic#ICollection&lt;TKey&gt;#Clear" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.KeyCollection.System#Collections#Generic#ICollection&lt;TKey&gt;#Contains(`0)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.KeyCollection.System#Collections#Generic#ICollection&lt;TKey&gt;#Remove(`0)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.KeyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.KeyCollection.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.KeyCollection.Count" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.KeyCollection.System#Collections#Generic#ICollection&lt;TKey&gt;#IsReadOnly" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.KeyCollection.System#Collections#ICollection#IsSynchronized" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.KeyCollection.System#Collections#ICollection#SyncRoot" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2/ValueCollection" Id="T:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection">
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.CopyTo(`1[],System.Int32)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.GetEnumerator" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection&lt;TValue&gt;#Add(`1)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection&lt;TValue&gt;#Clear" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection&lt;TValue&gt;#Contains(`1)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection&lt;TValue&gt;#Remove(`1)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.Count" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection&lt;TValue&gt;#IsReadOnly" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.System#Collections#ICollection#IsSynchronized" />
      <Member Id="P:Microsoft.Azure.Devices.Client.ReadOnlyDictionary45`2.ValueCollection.System#Collections#ICollection#SyncRoot" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.ReceiveMessageCallback" Id="T:Microsoft.Azure.Devices.Client.ReceiveMessageCallback" />
    <Type Name="Microsoft.Azure.Devices.Client.RetryPolicyType" Id="T:Microsoft.Azure.Devices.Client.RetryPolicyType">
      <Member Id="F:Microsoft.Azure.Devices.Client.RetryPolicyType.Exponential_Backoff_With_Jitter" />
      <Member Id="F:Microsoft.Azure.Devices.Client.RetryPolicyType.No_Retry" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.SharedAccessSignatureBuilder" Id="T:Microsoft.Azure.Devices.Client.SharedAccessSignatureBuilder">
      <Member Id="M:Microsoft.Azure.Devices.Client.SharedAccessSignatureBuilder.#ctor" />
      <Member Id="M:Microsoft.Azure.Devices.Client.SharedAccessSignatureBuilder.Sign(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.SharedAccessSignatureBuilder.ToSignature" />
      <Member Id="P:Microsoft.Azure.Devices.Client.SharedAccessSignatureBuilder.Key" />
      <Member Id="P:Microsoft.Azure.Devices.Client.SharedAccessSignatureBuilder.KeyName" />
      <Member Id="P:Microsoft.Azure.Devices.Client.SharedAccessSignatureBuilder.Target" />
      <Member Id="P:Microsoft.Azure.Devices.Client.SharedAccessSignatureBuilder.TimeToLive" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.TransportType" Id="T:Microsoft.Azure.Devices.Client.TransportType">
      <Member Id="F:Microsoft.Azure.Devices.Client.TransportType.Amqp" />
      <Member Id="F:Microsoft.Azure.Devices.Client.TransportType.Amqp_Tcp_Only" />
      <Member Id="F:Microsoft.Azure.Devices.Client.TransportType.Amqp_WebSocket_Only" />
      <Member Id="F:Microsoft.Azure.Devices.Client.TransportType.Http1" />
      <Member Id="F:Microsoft.Azure.Devices.Client.TransportType.Mqtt" />
      <Member Id="F:Microsoft.Azure.Devices.Client.TransportType.Mqtt_Tcp_Only" />
      <Member Id="F:Microsoft.Azure.Devices.Client.TransportType.Mqtt_WebSocket_Only" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Devices.Client.Common">
    <Type Name="Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer" Id="T:Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer">
      <Member Id="F:Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.KeyValueSeparator" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.PropertySeparator" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.PropertySeparatorLength" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.Deserialize(System.String,System.Int32)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.Deserialize(System.String,System.Int32,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.Serialize(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer/TokenType" Id="T:Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.TokenType">
      <Member Id="F:Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.TokenType.Key" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.TokenType.Value" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Devices.Client.Errors">
    <Type Name="Microsoft.Azure.Devices.Client.Errors.ErrorCode" Id="T:Microsoft.Azure.Devices.Client.Errors.ErrorCode">
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.AuthorizationRulesExceededQuota" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.GarbageCollectionFailed" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.InvalidEventHubAccessRight" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.InvalidIotHubName" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.InvalidOperationId" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.IotHubActivationFailed" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.IotHubDeletionFailed" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.IotHubExportFailed" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.IotHubImportFailed" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.IotHubInvalidProperties" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.IotHubInvalidStateTransition" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.IotHubNameNotAvailable" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.IotHubNotFoundInDatabase" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.IotHubsExportFailed" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.IotHubsImportFailed" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.IotHubStateTransitionNotDefined" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.IotHubUpdateFailed" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.KeyNameNotFound" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.MultipleMatchingResourcesFound" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.NoMatchingResourceFound" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.NoMatchingResourcePoolFound" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.None" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.OrchestrationRunningOnIotHub" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.OrchestrationStateInvalid" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.ResourcePoolNotFound" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.SystemPropertiesNotAllowed" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.WinFabApplicationCleanupNotAttempted" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.WinFabApplicationUpgradeFailed" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Errors.ErrorCode.WinFabClusterUpgradeFailed" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Devices.Client.Exceptions">
    <Type Name="Microsoft.Azure.Devices.Client.Exceptions.DeviceMaximumQueueDepthExceededException" Id="T:Microsoft.Azure.Devices.Client.Exceptions.DeviceMaximumQueueDepthExceededException">
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.DeviceMaximumQueueDepthExceededException.#ctor" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.DeviceMaximumQueueDepthExceededException.#ctor(System.Int32)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.DeviceMaximumQueueDepthExceededException.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.DeviceMaximumQueueDepthExceededException.#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.Exceptions.DeviceMessageLockLostException" Id="T:Microsoft.Azure.Devices.Client.Exceptions.DeviceMessageLockLostException">
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.DeviceMessageLockLostException.#ctor" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.DeviceMessageLockLostException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.DeviceMessageLockLostException.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.DeviceMessageLockLostException.#ctor(System.String,System.Exception)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.DeviceMessageLockLostException.#ctor(System.String,System.Guid)" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.Exceptions.DeviceNotFoundException" Id="T:Microsoft.Azure.Devices.Client.Exceptions.DeviceNotFoundException">
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.DeviceNotFoundException.#ctor" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.DeviceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.DeviceNotFoundException.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.DeviceNotFoundException.#ctor(System.String,System.Exception)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.DeviceNotFoundException.#ctor(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.DeviceNotFoundException.#ctor(System.String,System.String,System.String)" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.Exceptions.IotHubCommunicationException" Id="T:Microsoft.Azure.Devices.Client.Exceptions.IotHubCommunicationException">
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.IotHubCommunicationException.#ctor" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.IotHubCommunicationException.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.IotHubCommunicationException.#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.Exceptions.IotHubException" Id="T:Microsoft.Azure.Devices.Client.Exceptions.IotHubException">
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.IotHubException.#ctor" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.IotHubException.#ctor(System.Exception)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.IotHubException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.IotHubException.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.IotHubException.#ctor(System.String,System.Boolean)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.IotHubException.#ctor(System.String,System.Boolean,System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.IotHubException.#ctor(System.String,System.Exception)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.IotHubException.#ctor(System.String,System.Exception,System.Boolean)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.IotHubException.#ctor(System.String,System.Exception,System.Boolean,System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.IotHubException.#ctor(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.IotHubException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Exceptions.IotHubException.IsTransient" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Exceptions.IotHubException.TrackingId" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.Exceptions.IotHubSuspendedException" Id="T:Microsoft.Azure.Devices.Client.Exceptions.IotHubSuspendedException">
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.IotHubSuspendedException.#ctor" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.IotHubSuspendedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.IotHubSuspendedException.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.IotHubSuspendedException.#ctor(System.String,System.Exception)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.IotHubSuspendedException.#ctor(System.String,System.String)" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.Exceptions.IotHubThrottledException" Id="T:Microsoft.Azure.Devices.Client.Exceptions.IotHubThrottledException">
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.IotHubThrottledException.#ctor" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.IotHubThrottledException.#ctor(System.Int32)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.IotHubThrottledException.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.IotHubThrottledException.#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.Exceptions.MessageTooLargeException" Id="T:Microsoft.Azure.Devices.Client.Exceptions.MessageTooLargeException">
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.MessageTooLargeException.#ctor" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.MessageTooLargeException.#ctor(System.Int32)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.MessageTooLargeException.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.MessageTooLargeException.#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.Exceptions.QuotaExceededException" Id="T:Microsoft.Azure.Devices.Client.Exceptions.QuotaExceededException">
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.QuotaExceededException.#ctor" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.QuotaExceededException.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.QuotaExceededException.#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.Exceptions.ServerBusyException" Id="T:Microsoft.Azure.Devices.Client.Exceptions.ServerBusyException">
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.ServerBusyException.#ctor" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.ServerBusyException.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.ServerBusyException.#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.Exceptions.ServerErrorException" Id="T:Microsoft.Azure.Devices.Client.Exceptions.ServerErrorException">
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.ServerErrorException.#ctor" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.ServerErrorException.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.ServerErrorException.#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.Exceptions.UnauthorizedException" Id="T:Microsoft.Azure.Devices.Client.Exceptions.UnauthorizedException">
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.UnauthorizedException.#ctor" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.UnauthorizedException.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Exceptions.UnauthorizedException.#ctor(System.String,System.Exception)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Devices.Client.HsmAuthentication">
    <Type Name="Microsoft.Azure.Devices.Client.HsmAuthentication.HttpHsmComunicationException" Id="T:Microsoft.Azure.Devices.Client.HsmAuthentication.HttpHsmComunicationException">
      <Member Id="M:Microsoft.Azure.Devices.Client.HsmAuthentication.HttpHsmComunicationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.HsmAuthentication.HttpHsmComunicationException.#ctor(System.String,System.Int32)" />
      <Member Id="P:Microsoft.Azure.Devices.Client.HsmAuthentication.HttpHsmComunicationException.StatusCode" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Devices.Client.Transport">
    <Type Name="Microsoft.Azure.Devices.Client.Transport.FileUploadCompletionNotification" Id="T:Microsoft.Azure.Devices.Client.Transport.FileUploadCompletionNotification">
      <Member Id="M:Microsoft.Azure.Devices.Client.Transport.FileUploadCompletionNotification.#ctor" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.FileUploadCompletionNotification.CorrelationId" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.FileUploadCompletionNotification.IsSuccess" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.FileUploadCompletionNotification.StatusCode" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.FileUploadCompletionNotification.StatusDescription" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.Transport.FileUploadSasUriRequest" Id="T:Microsoft.Azure.Devices.Client.Transport.FileUploadSasUriRequest">
      <Member Id="M:Microsoft.Azure.Devices.Client.Transport.FileUploadSasUriRequest.#ctor" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.FileUploadSasUriRequest.BlobName" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.Transport.FileUploadSasUriResponse" Id="T:Microsoft.Azure.Devices.Client.Transport.FileUploadSasUriResponse">
      <Member Id="M:Microsoft.Azure.Devices.Client.Transport.FileUploadSasUriResponse.#ctor" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Transport.FileUploadSasUriResponse.GetBlobUri" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.FileUploadSasUriResponse.BlobName" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.FileUploadSasUriResponse.ContainerName" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.FileUploadSasUriResponse.CorrelationId" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.FileUploadSasUriResponse.HostName" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.FileUploadSasUriResponse.SasToken" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Devices.Client.Transport.Mqtt">
    <Type Name="Microsoft.Azure.Devices.Client.Transport.Mqtt.ChannelMessageProcessingException" Id="T:Microsoft.Azure.Devices.Client.Transport.Mqtt.ChannelMessageProcessingException">
      <Member Id="M:Microsoft.Azure.Devices.Client.Transport.Mqtt.ChannelMessageProcessingException.#ctor(System.Exception,DotNetty.Transport.Channels.IChannelHandlerContext)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Transport.Mqtt.ChannelMessageProcessingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.ChannelMessageProcessingException.Context" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig" Id="T:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig">
      <Member Id="M:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.#ctor" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.GetOption``1(DotNetty.Transport.Channels.ChannelOption{``0})" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.SetOption(DotNetty.Transport.Channels.ChannelOption,System.Object)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.SetOption``1(DotNetty.Transport.Channels.ChannelOption{``0},``0)" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.Allocator" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.AutoRead" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.ConnectTimeout" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.MessageSizeEstimator" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.RecvByteBufAllocator" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.WriteBufferHighWaterMark" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.WriteBufferLowWaterMark" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannelConfig.WriteSpinCount" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.Transport.Mqtt.IWillMessage" Id="T:Microsoft.Azure.Devices.Client.Transport.Mqtt.IWillMessage">
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.IWillMessage.Message" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.IWillMessage.QoS" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings" Id="T:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings">
      <Member Id="M:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.#ctor(Microsoft.Azure.Devices.Client.TransportType)" />
      <Member Id="M:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.GetTransportType" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.CertificateRevocationCheck" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.CleanSession" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.ClientCertificate" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.ConnectArrivalTimeout" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.DefaultReceiveTimeout" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.DeviceReceiveAckCanTimeout" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.DeviceReceiveAckTimeout" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.DupPropertyName" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.HasWill" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.KeepAliveInSeconds" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.MaxOutboundRetransmissionEnforced" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.MaxPendingInboundMessages" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.Proxy" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.PublishToServerQoS" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.QoSPropertyName" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.ReceivingQoS" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.RemoteCertificateValidationCallback" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.RetainPropertyName" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportSettings.WillMessage" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.Transport.Mqtt.TransportState" Id="T:Microsoft.Azure.Devices.Client.Transport.Mqtt.TransportState">
      <Member Id="F:Microsoft.Azure.Devices.Client.Transport.Mqtt.TransportState.Closed" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Transport.Mqtt.TransportState.Error" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Transport.Mqtt.TransportState.NotInitialized" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Transport.Mqtt.TransportState.Open" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Transport.Mqtt.TransportState.Opening" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Transport.Mqtt.TransportState.Receiving" />
      <Member Id="F:Microsoft.Azure.Devices.Client.Transport.Mqtt.TransportState.Subscribing" />
    </Type>
    <Type Name="Microsoft.Azure.Devices.Client.Transport.Mqtt.WillMessage" Id="T:Microsoft.Azure.Devices.Client.Transport.Mqtt.WillMessage">
      <Member Id="M:Microsoft.Azure.Devices.Client.Transport.Mqtt.WillMessage.#ctor(DotNetty.Codecs.Mqtt.Packets.QualityOfService,Microsoft.Azure.Devices.Client.Message)" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.WillMessage.Message" />
      <Member Id="P:Microsoft.Azure.Devices.Client.Transport.Mqtt.WillMessage.QoS" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.Azure">
    <Type Name="Microsoft.Extensions.Azure.BlobClientBuilderExtensions" Id="T:Microsoft.Extensions.Azure.BlobClientBuilderExtensions">
      <Member Id="M:Microsoft.Extensions.Azure.BlobClientBuilderExtensions.AddBlobServiceClient``1(``0,System.String)" />
      <Member Id="M:Microsoft.Extensions.Azure.BlobClientBuilderExtensions.AddBlobServiceClient``1(``0,System.Uri)" />
      <Member Id="M:Microsoft.Extensions.Azure.BlobClientBuilderExtensions.AddBlobServiceClient``1(``0,System.Uri,Azure.Storage.StorageSharedKeyCredential)" />
      <Member Id="M:Microsoft.Extensions.Azure.BlobClientBuilderExtensions.AddBlobServiceClient``2(``0,``1)" />
    </Type>
    <Type Name="Microsoft.Extensions.Azure.CertificateClientBuilderExtensions" Id="T:Microsoft.Extensions.Azure.CertificateClientBuilderExtensions">
      <Member Id="M:Microsoft.Extensions.Azure.CertificateClientBuilderExtensions.AddCertificateClient``1(``0,System.Uri)" />
      <Member Id="M:Microsoft.Extensions.Azure.CertificateClientBuilderExtensions.AddCertificateClient``2(``0,``1)" />
    </Type>
    <Type Name="Microsoft.Extensions.Azure.DataLakeClientBuilderExtensions" Id="T:Microsoft.Extensions.Azure.DataLakeClientBuilderExtensions">
      <Member Id="M:Microsoft.Extensions.Azure.DataLakeClientBuilderExtensions.AddDataLakeServiceClient``1(``0,System.Uri)" />
      <Member Id="M:Microsoft.Extensions.Azure.DataLakeClientBuilderExtensions.AddDataLakeServiceClient``1(``0,System.Uri,Azure.Storage.StorageSharedKeyCredential)" />
      <Member Id="M:Microsoft.Extensions.Azure.DataLakeClientBuilderExtensions.AddDataLakeServiceClient``2(``0,``1)" />
    </Type>
    <Type Name="Microsoft.Extensions.Azure.KeyClientBuilderExtensions" Id="T:Microsoft.Extensions.Azure.KeyClientBuilderExtensions">
      <Member Id="M:Microsoft.Extensions.Azure.KeyClientBuilderExtensions.AddCryptographyClient``1(``0,System.Uri)" />
      <Member Id="M:Microsoft.Extensions.Azure.KeyClientBuilderExtensions.AddCryptographyClient``2(``0,``1)" />
      <Member Id="M:Microsoft.Extensions.Azure.KeyClientBuilderExtensions.AddKeyClient``1(``0,System.Uri)" />
      <Member Id="M:Microsoft.Extensions.Azure.KeyClientBuilderExtensions.AddKeyClient``2(``0,``1)" />
    </Type>
    <Type Name="Microsoft.Extensions.Azure.QueueClientBuilderExtensions" Id="T:Microsoft.Extensions.Azure.QueueClientBuilderExtensions">
      <Member Id="M:Microsoft.Extensions.Azure.QueueClientBuilderExtensions.AddQueueServiceClient``1(``0,System.String)" />
      <Member Id="M:Microsoft.Extensions.Azure.QueueClientBuilderExtensions.AddQueueServiceClient``1(``0,System.Uri)" />
      <Member Id="M:Microsoft.Extensions.Azure.QueueClientBuilderExtensions.AddQueueServiceClient``1(``0,System.Uri,Azure.Storage.StorageSharedKeyCredential)" />
      <Member Id="M:Microsoft.Extensions.Azure.QueueClientBuilderExtensions.AddQueueServiceClient``2(``0,``1)" />
    </Type>
    <Type Name="Microsoft.Extensions.Azure.SecretClientBuilderExtensions" Id="T:Microsoft.Extensions.Azure.SecretClientBuilderExtensions">
      <Member Id="M:Microsoft.Extensions.Azure.SecretClientBuilderExtensions.AddSecretClient``1(``0,System.Uri)" />
      <Member Id="M:Microsoft.Extensions.Azure.SecretClientBuilderExtensions.AddSecretClient``2(``0,``1)" />
    </Type>
    <Type Name="Microsoft.Extensions.Azure.ShareClientBuilderExtensions" Id="T:Microsoft.Extensions.Azure.ShareClientBuilderExtensions">
      <Member Id="M:Microsoft.Extensions.Azure.ShareClientBuilderExtensions.AddFileServiceClient``1(``0,System.String)" />
      <Member Id="M:Microsoft.Extensions.Azure.ShareClientBuilderExtensions.AddFileServiceClient``1(``0,System.Uri)" />
      <Member Id="M:Microsoft.Extensions.Azure.ShareClientBuilderExtensions.AddFileServiceClient``1(``0,System.Uri,Azure.Storage.StorageSharedKeyCredential)" />
      <Member Id="M:Microsoft.Extensions.Azure.ShareClientBuilderExtensions.AddFileServiceClient``2(``0,``1)" />
    </Type>
  </Namespace>
</Framework>