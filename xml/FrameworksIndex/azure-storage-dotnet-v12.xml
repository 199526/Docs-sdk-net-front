<?xml version="1.0" encoding="utf-8"?>
<Framework Name="azure-storage-dotnet-v12">
  <Assemblies>
    <Assembly Name="Azure.Storage.Blobs.Batch" Version="12.2.0.0" />
    <Assembly Name="Azure.Storage.Blobs" Version="12.3.0.0" />
    <Assembly Name="Azure.Storage.Common" Version="12.2.0.0" />
    <Assembly Name="Azure.Storage.Files.Shares" Version="12.1.0.0" />
    <Assembly Name="Azure.Storage.Queues" Version="12.2.0.0" />
    <Assembly Name="Microsoft.Azure.Management.Storage" Version="14.0.0.0" />
    <Assembly Name="Microsoft.Azure.Management.Storage.Fluent" Version="1.0.0.64" />
    <Assembly Name="Microsoft.Azure.Storage.Common" Version="11.1.0.0" />
  </Assemblies>
  <Namespace Name="Azure.Storage.Blobs">
    <Type Name="Azure.Storage.Blobs.BlobClient" Id="T:Azure.Storage.Blobs.BlobClient">
      <Member Id="M:Azure.Storage.Blobs.BlobClient.#ctor" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.#ctor(System.String,System.String,System.String)" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.#ctor(System.String,System.String,System.String,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.#ctor(System.Uri,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.Upload(System.IO.Stream)" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.Upload(System.IO.Stream,Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.IProgress{System.Int64},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.Upload(System.IO.Stream,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.Upload(System.IO.Stream,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.Upload(System.String)" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.Upload(System.String,Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.IProgress{System.Int64},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.Upload(System.String,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.Upload(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.IO.Stream)" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.IO.Stream,Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.IProgress{System.Int64},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.IO.Stream,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.IO.Stream,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.String)" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.String,Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.IProgress{System.Int64},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.String,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.String,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Azure.Storage.Blobs.BlobClientOptions" Id="T:Azure.Storage.Blobs.BlobClientOptions">
      <Member Id="M:Azure.Storage.Blobs.BlobClientOptions.#ctor(Azure.Storage.Blobs.BlobClientOptions.ServiceVersion)" />
      <Member Id="P:Azure.Storage.Blobs.BlobClientOptions.CustomerProvidedKey" />
      <Member Id="P:Azure.Storage.Blobs.BlobClientOptions.EncryptionScope" />
      <Member Id="P:Azure.Storage.Blobs.BlobClientOptions.GeoRedundantSecondaryUri" />
      <Member Id="P:Azure.Storage.Blobs.BlobClientOptions.Version" />
    </Type>
    <Type Name="Azure.Storage.Blobs.BlobClientOptions/ServiceVersion" Id="T:Azure.Storage.Blobs.BlobClientOptions.ServiceVersion">
      <Member Id="F:Azure.Storage.Blobs.BlobClientOptions.ServiceVersion.V2019_02_02" />
      <Member Id="F:Azure.Storage.Blobs.BlobClientOptions.ServiceVersion.V2019_07_07" />
    </Type>
    <Type Name="Azure.Storage.Blobs.BlobContainerClient" Id="T:Azure.Storage.Blobs.BlobContainerClient">
      <Member Id="F:Azure.Storage.Blobs.BlobContainerClient.LogsBlobContainerName" />
      <Member Id="F:Azure.Storage.Blobs.BlobContainerClient.RootBlobContainerName" />
      <Member Id="F:Azure.Storage.Blobs.BlobContainerClient.WebBlobContainerName" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.#ctor" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.#ctor(System.String,System.String)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.#ctor(System.String,System.String,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.#ctor(System.Uri,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.Create(Azure.Storage.Blobs.Models.PublicAccessType,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobContainerEncryptionScopeOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.Create(Azure.Storage.Blobs.Models.PublicAccessType,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.CreateAsync(Azure.Storage.Blobs.Models.PublicAccessType,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobContainerEncryptionScopeOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.CreateAsync(Azure.Storage.Blobs.Models.PublicAccessType,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.CreateClient(System.Uri,Azure.Storage.Blobs.BlobClientOptions,Azure.Core.Pipeline.HttpPipeline)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.CreateIfNotExists(Azure.Storage.Blobs.Models.PublicAccessType,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobContainerEncryptionScopeOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.CreateIfNotExists(Azure.Storage.Blobs.Models.PublicAccessType,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.CreateIfNotExistsAsync(Azure.Storage.Blobs.Models.PublicAccessType,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobContainerEncryptionScopeOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.CreateIfNotExistsAsync(Azure.Storage.Blobs.Models.PublicAccessType,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.Delete(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.DeleteAsync(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.DeleteBlob(System.String,Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.DeleteBlobAsync(System.String,Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.DeleteBlobIfExists(System.String,Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.DeleteBlobIfExistsAsync(System.String,Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.DeleteIfExists(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.DeleteIfExistsAsync(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.Exists(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.ExistsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.GetAccessPolicy(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.GetAccessPolicyAsync(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.GetBlobClient(System.String)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.GetBlobs(Azure.Storage.Blobs.Models.BlobTraits,Azure.Storage.Blobs.Models.BlobStates,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.GetBlobsAsync(Azure.Storage.Blobs.Models.BlobTraits,Azure.Storage.Blobs.Models.BlobStates,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.GetBlobsByHierarchy(Azure.Storage.Blobs.Models.BlobTraits,Azure.Storage.Blobs.Models.BlobStates,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.GetBlobsByHierarchyAsync(Azure.Storage.Blobs.Models.BlobTraits,Azure.Storage.Blobs.Models.BlobStates,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.GetProperties(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.GetPropertiesAsync(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.SetAccessPolicy(Azure.Storage.Blobs.Models.PublicAccessType,System.Collections.Generic.IEnumerable{Azure.Storage.Blobs.Models.BlobSignedIdentifier},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.SetAccessPolicyAsync(Azure.Storage.Blobs.Models.PublicAccessType,System.Collections.Generic.IEnumerable{Azure.Storage.Blobs.Models.BlobSignedIdentifier},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.SetMetadata(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.SetMetadataAsync(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.UploadBlob(System.String,System.IO.Stream,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobContainerClient.UploadBlobAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)" />
      <Member Id="P:Azure.Storage.Blobs.BlobContainerClient.AccountName" />
      <Member Id="P:Azure.Storage.Blobs.BlobContainerClient.Name" />
      <Member Id="P:Azure.Storage.Blobs.BlobContainerClient.Uri" />
    </Type>
    <Type Name="Azure.Storage.Blobs.BlobServiceClient" Id="T:Azure.Storage.Blobs.BlobServiceClient">
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.#ctor" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.#ctor(System.String)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.#ctor(System.String,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.#ctor(System.Uri,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.CreateBlobContainer(System.String,Azure.Storage.Blobs.Models.PublicAccessType,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.CreateBlobContainerAsync(System.String,Azure.Storage.Blobs.Models.PublicAccessType,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.CreateClient(System.Uri,Azure.Storage.Blobs.BlobClientOptions,Azure.Core.Pipeline.HttpPipelinePolicy,Azure.Core.Pipeline.HttpPipeline)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.DeleteBlobContainer(System.String,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.DeleteBlobContainerAsync(System.String,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.GetAccountInfo(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.GetAccountInfoAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.GetAuthenticationPolicy(Azure.Storage.Blobs.BlobServiceClient)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.GetBlobContainerClient(System.String)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.GetBlobContainers(Azure.Storage.Blobs.Models.BlobContainerTraits,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.GetBlobContainersAsync(Azure.Storage.Blobs.Models.BlobContainerTraits,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.GetClientOptions(Azure.Storage.Blobs.BlobServiceClient)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.GetHttpPipeline(Azure.Storage.Blobs.BlobServiceClient)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.GetProperties(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.GetPropertiesAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.GetStatistics(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.GetStatisticsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.GetUserDelegationKey(System.Nullable{System.DateTimeOffset},System.DateTimeOffset,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.GetUserDelegationKeyAsync(System.Nullable{System.DateTimeOffset},System.DateTimeOffset,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.SetProperties(Azure.Storage.Blobs.Models.BlobServiceProperties,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.BlobServiceClient.SetPropertiesAsync(Azure.Storage.Blobs.Models.BlobServiceProperties,System.Threading.CancellationToken)" />
      <Member Id="P:Azure.Storage.Blobs.BlobServiceClient.AccountName" />
      <Member Id="P:Azure.Storage.Blobs.BlobServiceClient.Uri" />
    </Type>
    <Type Name="Azure.Storage.Blobs.BlobUriBuilder" Id="T:Azure.Storage.Blobs.BlobUriBuilder">
      <Member Id="M:Azure.Storage.Blobs.BlobUriBuilder.#ctor(System.Uri)" />
      <Member Id="M:Azure.Storage.Blobs.BlobUriBuilder.ToString" />
      <Member Id="M:Azure.Storage.Blobs.BlobUriBuilder.ToUri" />
      <Member Id="P:Azure.Storage.Blobs.BlobUriBuilder.AccountName" />
      <Member Id="P:Azure.Storage.Blobs.BlobUriBuilder.BlobContainerName" />
      <Member Id="P:Azure.Storage.Blobs.BlobUriBuilder.BlobName" />
      <Member Id="P:Azure.Storage.Blobs.BlobUriBuilder.Host" />
      <Member Id="P:Azure.Storage.Blobs.BlobUriBuilder.Port" />
      <Member Id="P:Azure.Storage.Blobs.BlobUriBuilder.Query" />
      <Member Id="P:Azure.Storage.Blobs.BlobUriBuilder.Sas" />
      <Member Id="P:Azure.Storage.Blobs.BlobUriBuilder.Scheme" />
      <Member Id="P:Azure.Storage.Blobs.BlobUriBuilder.Snapshot" />
    </Type>
  </Namespace>
  <Namespace Name="Azure.Storage.Blobs.Models">
    <Type Name="Azure.Storage.Blobs.Models.AccessTier" Id="T:Azure.Storage.Blobs.Models.AccessTier">
      <Member Id="M:Azure.Storage.Blobs.Models.AccessTier.#ctor(System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Models.AccessTier.Equals(Azure.Storage.Blobs.Models.AccessTier)" />
      <Member Id="M:Azure.Storage.Blobs.Models.AccessTier.Equals(System.Object)" />
      <Member Id="M:Azure.Storage.Blobs.Models.AccessTier.GetHashCode" />
      <Member Id="M:Azure.Storage.Blobs.Models.AccessTier.op_Equality(Azure.Storage.Blobs.Models.AccessTier,Azure.Storage.Blobs.Models.AccessTier)" />
      <Member Id="M:Azure.Storage.Blobs.Models.AccessTier.op_Implicit(System.String)~Azure.Storage.Blobs.Models.AccessTier" />
      <Member Id="M:Azure.Storage.Blobs.Models.AccessTier.op_Inequality(Azure.Storage.Blobs.Models.AccessTier,Azure.Storage.Blobs.Models.AccessTier)" />
      <Member Id="M:Azure.Storage.Blobs.Models.AccessTier.ToString" />
      <Member Id="P:Azure.Storage.Blobs.Models.AccessTier.Archive" />
      <Member Id="P:Azure.Storage.Blobs.Models.AccessTier.Cool" />
      <Member Id="P:Azure.Storage.Blobs.Models.AccessTier.Hot" />
      <Member Id="P:Azure.Storage.Blobs.Models.AccessTier.P10" />
      <Member Id="P:Azure.Storage.Blobs.Models.AccessTier.P15" />
      <Member Id="P:Azure.Storage.Blobs.Models.AccessTier.P20" />
      <Member Id="P:Azure.Storage.Blobs.Models.AccessTier.P30" />
      <Member Id="P:Azure.Storage.Blobs.Models.AccessTier.P4" />
      <Member Id="P:Azure.Storage.Blobs.Models.AccessTier.P40" />
      <Member Id="P:Azure.Storage.Blobs.Models.AccessTier.P50" />
      <Member Id="P:Azure.Storage.Blobs.Models.AccessTier.P6" />
      <Member Id="P:Azure.Storage.Blobs.Models.AccessTier.P60" />
      <Member Id="P:Azure.Storage.Blobs.Models.AccessTier.P70" />
      <Member Id="P:Azure.Storage.Blobs.Models.AccessTier.P80" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.AccountInfo" Id="T:Azure.Storage.Blobs.Models.AccountInfo">
      <Member Id="P:Azure.Storage.Blobs.Models.AccountInfo.AccountKind" />
      <Member Id="P:Azure.Storage.Blobs.Models.AccountInfo.SkuName" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.AccountKind" Id="T:Azure.Storage.Blobs.Models.AccountKind">
      <Member Id="F:Azure.Storage.Blobs.Models.AccountKind.BlobStorage" />
      <Member Id="F:Azure.Storage.Blobs.Models.AccountKind.Storage" />
      <Member Id="F:Azure.Storage.Blobs.Models.AccountKind.StorageV2" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.AppendBlobRequestConditions" Id="T:Azure.Storage.Blobs.Models.AppendBlobRequestConditions">
      <Member Id="M:Azure.Storage.Blobs.Models.AppendBlobRequestConditions.#ctor" />
      <Member Id="P:Azure.Storage.Blobs.Models.AppendBlobRequestConditions.IfAppendPositionEqual" />
      <Member Id="P:Azure.Storage.Blobs.Models.AppendBlobRequestConditions.IfMaxSizeLessThanOrEqual" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.ArchiveStatus" Id="T:Azure.Storage.Blobs.Models.ArchiveStatus">
      <Member Id="F:Azure.Storage.Blobs.Models.ArchiveStatus.RehydratePendingToCool" />
      <Member Id="F:Azure.Storage.Blobs.Models.ArchiveStatus.RehydratePendingToHot" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobAccessPolicy" Id="T:Azure.Storage.Blobs.Models.BlobAccessPolicy">
      <Member Id="M:Azure.Storage.Blobs.Models.BlobAccessPolicy.#ctor" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobAccessPolicy.ExpiresOn" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobAccessPolicy.Permissions" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobAccessPolicy.StartsOn" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobAnalyticsLogging" Id="T:Azure.Storage.Blobs.Models.BlobAnalyticsLogging">
      <Member Id="M:Azure.Storage.Blobs.Models.BlobAnalyticsLogging.#ctor" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobAnalyticsLogging.Delete" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobAnalyticsLogging.Read" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobAnalyticsLogging.RetentionPolicy" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobAnalyticsLogging.Version" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobAnalyticsLogging.Write" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobAppendInfo" Id="T:Azure.Storage.Blobs.Models.BlobAppendInfo">
      <Member Id="P:Azure.Storage.Blobs.Models.BlobAppendInfo.BlobAppendOffset" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobAppendInfo.BlobCommittedBlockCount" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobAppendInfo.ContentCrc64" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobAppendInfo.ContentHash" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobAppendInfo.EncryptionKeySha256" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobAppendInfo.EncryptionScope" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobAppendInfo.ETag" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobAppendInfo.IsServerEncrypted" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobAppendInfo.LastModified" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobBlock" Id="T:Azure.Storage.Blobs.Models.BlobBlock">
      <Member Id="M:Azure.Storage.Blobs.Models.BlobBlock.Equals(Azure.Storage.Blobs.Models.BlobBlock)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobBlock.Equals(System.Object)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobBlock.GetHashCode" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobBlock.Name" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobBlock.Size" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobContainerAccessPolicy" Id="T:Azure.Storage.Blobs.Models.BlobContainerAccessPolicy">
      <Member Id="M:Azure.Storage.Blobs.Models.BlobContainerAccessPolicy.#ctor" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContainerAccessPolicy.BlobPublicAccess" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContainerAccessPolicy.ETag" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContainerAccessPolicy.LastModified" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContainerAccessPolicy.SignedIdentifiers" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobContainerEncryptionScopeOptions" Id="T:Azure.Storage.Blobs.Models.BlobContainerEncryptionScopeOptions">
      <Member Id="M:Azure.Storage.Blobs.Models.BlobContainerEncryptionScopeOptions.#ctor" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContainerEncryptionScopeOptions.DefaultEncryptionScope" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContainerEncryptionScopeOptions.PreventEncryptionScopeOverride" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobContainerInfo" Id="T:Azure.Storage.Blobs.Models.BlobContainerInfo">
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContainerInfo.ETag" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContainerInfo.LastModified" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobContainerItem" Id="T:Azure.Storage.Blobs.Models.BlobContainerItem">
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContainerItem.Name" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContainerItem.Properties" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobContainerProperties" Id="T:Azure.Storage.Blobs.Models.BlobContainerProperties">
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContainerProperties.DefaultEncryptionScope" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContainerProperties.ETag" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContainerProperties.HasImmutabilityPolicy" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContainerProperties.HasLegalHold" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContainerProperties.LastModified" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContainerProperties.LeaseDuration" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContainerProperties.LeaseState" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContainerProperties.LeaseStatus" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContainerProperties.Metadata" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContainerProperties.PreventEncryptionScopeOverride" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContainerProperties.PublicAccess" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobContainerTraits" Id="T:Azure.Storage.Blobs.Models.BlobContainerTraits">
      <Member Id="F:Azure.Storage.Blobs.Models.BlobContainerTraits.Metadata" />
      <Member Id="F:Azure.Storage.Blobs.Models.BlobContainerTraits.None" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobContentInfo" Id="T:Azure.Storage.Blobs.Models.BlobContentInfo">
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContentInfo.BlobSequenceNumber" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContentInfo.ContentHash" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContentInfo.EncryptionKeySha256" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContentInfo.EncryptionScope" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContentInfo.ETag" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobContentInfo.LastModified" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobCopyInfo" Id="T:Azure.Storage.Blobs.Models.BlobCopyInfo">
      <Member Id="P:Azure.Storage.Blobs.Models.BlobCopyInfo.CopyId" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobCopyInfo.CopyStatus" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobCopyInfo.ETag" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobCopyInfo.LastModified" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobCorsRule" Id="T:Azure.Storage.Blobs.Models.BlobCorsRule">
      <Member Id="M:Azure.Storage.Blobs.Models.BlobCorsRule.#ctor" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobCorsRule.AllowedHeaders" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobCorsRule.AllowedMethods" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobCorsRule.AllowedOrigins" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobCorsRule.ExposedHeaders" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobCorsRule.MaxAgeInSeconds" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobDownloadDetails" Id="T:Azure.Storage.Blobs.Models.BlobDownloadDetails">
      <Member Id="M:Azure.Storage.Blobs.Models.BlobDownloadDetails.#ctor" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.AcceptRanges" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.BlobCommittedBlockCount" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.BlobContentHash" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.BlobSequenceNumber" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.CacheControl" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.ContentDisposition" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.ContentEncoding" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.ContentLanguage" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.ContentRange" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.CopyCompletedOn" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.CopyId" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.CopyProgress" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.CopySource" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.CopyStatus" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.CopyStatusDescription" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.EncryptionKeySha256" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.EncryptionScope" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.ETag" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.IsServerEncrypted" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.LastModified" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.LeaseDuration" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.LeaseState" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.LeaseStatus" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadDetails.Metadata" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobDownloadInfo" Id="T:Azure.Storage.Blobs.Models.BlobDownloadInfo">
      <Member Id="M:Azure.Storage.Blobs.Models.BlobDownloadInfo.Dispose" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadInfo.BlobType" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadInfo.Content" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadInfo.ContentHash" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadInfo.ContentLength" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadInfo.ContentType" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobDownloadInfo.Details" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobErrorCode" Id="T:Azure.Storage.Blobs.Models.BlobErrorCode">
      <Member Id="M:Azure.Storage.Blobs.Models.BlobErrorCode.#ctor(System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobErrorCode.Equals(Azure.Storage.Blobs.Models.BlobErrorCode)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobErrorCode.Equals(System.Object)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobErrorCode.GetHashCode" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobErrorCode.op_Equality(Azure.Storage.Blobs.Models.BlobErrorCode,Azure.Storage.Blobs.Models.BlobErrorCode)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobErrorCode.op_Implicit(System.String)~Azure.Storage.Blobs.Models.BlobErrorCode" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobErrorCode.op_Inequality(Azure.Storage.Blobs.Models.BlobErrorCode,Azure.Storage.Blobs.Models.BlobErrorCode)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobErrorCode.ToString" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.AccountAlreadyExists" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.AccountBeingCreated" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.AccountIsDisabled" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.AppendPositionConditionNotMet" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.AuthenticationFailed" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.AuthorizationFailure" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.AuthorizationPermissionMismatch" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.AuthorizationProtocolMismatch" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.AuthorizationResourceTypeMismatch" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.AuthorizationServiceMismatch" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.AuthorizationSourceIPMismatch" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.BlobAlreadyExists" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.BlobArchived" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.BlobBeingRehydrated" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.BlobNotArchived" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.BlobNotFound" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.BlobOverwritten" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.BlobTierInadequateForContentLength" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.BlockCountExceedsLimit" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.BlockListTooLong" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.CannotChangeToLowerTier" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.CannotVerifyCopySource" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.ConditionHeadersNotSupported" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.ConditionNotMet" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.ContainerAlreadyExists" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.ContainerBeingDeleted" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.ContainerDisabled" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.ContainerNotFound" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.ContentLengthLargerThanTierLimit" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.CopyAcrossAccountsNotSupported" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.CopyIdMismatch" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.EmptyMetadataKey" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.FeatureVersionMismatch" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.IncrementalCopyBlobMismatch" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.IncrementalCopyOfEralierVersionSnapshotNotAllowed" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.IncrementalCopySourceMustBeSnapshot" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InfiniteLeaseDurationRequired" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InsufficientAccountPermissions" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InternalError" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidAuthenticationInfo" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidBlobOrBlock" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidBlobTier" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidBlobType" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidBlockId" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidBlockList" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidHeaderValue" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidHttpVerb" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidInput" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidMd5" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidMetadata" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidOperation" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidPageRange" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidQueryParameterValue" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidRange" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidResourceName" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidSourceBlobType" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidSourceBlobUrl" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidUri" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidVersionForPageBlobOperation" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidXmlDocument" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.InvalidXmlNodeValue" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.LeaseAlreadyBroken" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.LeaseAlreadyPresent" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.LeaseIdMismatchWithBlobOperation" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.LeaseIdMismatchWithContainerOperation" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.LeaseIdMismatchWithLeaseOperation" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.LeaseIdMissing" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.LeaseIsBreakingAndCannotBeAcquired" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.LeaseIsBreakingAndCannotBeChanged" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.LeaseIsBrokenAndCannotBeRenewed" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.LeaseLost" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.LeaseNotPresentWithBlobOperation" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.LeaseNotPresentWithContainerOperation" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.LeaseNotPresentWithLeaseOperation" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.MaxBlobSizeConditionNotMet" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.Md5Mismatch" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.MetadataTooLarge" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.MissingContentLengthHeader" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.MissingRequiredHeader" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.MissingRequiredQueryParameter" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.MissingRequiredXmlNode" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.MultipleConditionHeadersNotSupported" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.NoAuthenticationInformation" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.NoPendingCopyOperation" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.OperationNotAllowedOnIncrementalCopyBlob" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.OperationTimedOut" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.OutOfRangeInput" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.OutOfRangeQueryParameterValue" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.PendingCopyOperation" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.PreviousSnapshotCannotBeNewer" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.PreviousSnapshotNotFound" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.PreviousSnapshotOperationNotSupported" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.RequestBodyTooLarge" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.RequestUrlFailedToParse" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.ResourceAlreadyExists" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.ResourceNotFound" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.ResourceTypeMismatch" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.SequenceNumberConditionNotMet" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.SequenceNumberIncrementTooLarge" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.ServerBusy" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.SnaphotOperationRateExceeded" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.SnapshotCountExceeded" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.SnapshotsPresent" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.SourceConditionNotMet" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.SystemInUse" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.TargetConditionNotMet" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.UnauthorizedBlobOverwrite" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.UnsupportedHeader" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.UnsupportedHttpVerb" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.UnsupportedQueryParameter" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobErrorCode.UnsupportedXmlNode" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobGeoReplication" Id="T:Azure.Storage.Blobs.Models.BlobGeoReplication">
      <Member Id="P:Azure.Storage.Blobs.Models.BlobGeoReplication.LastSyncedOn" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobGeoReplication.Status" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobGeoReplicationStatus" Id="T:Azure.Storage.Blobs.Models.BlobGeoReplicationStatus">
      <Member Id="F:Azure.Storage.Blobs.Models.BlobGeoReplicationStatus.Bootstrap" />
      <Member Id="F:Azure.Storage.Blobs.Models.BlobGeoReplicationStatus.Live" />
      <Member Id="F:Azure.Storage.Blobs.Models.BlobGeoReplicationStatus.Unavailable" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobHierarchyItem" Id="T:Azure.Storage.Blobs.Models.BlobHierarchyItem">
      <Member Id="P:Azure.Storage.Blobs.Models.BlobHierarchyItem.Blob" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobHierarchyItem.IsBlob" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobHierarchyItem.IsPrefix" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobHierarchyItem.Prefix" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobHttpHeaders" Id="T:Azure.Storage.Blobs.Models.BlobHttpHeaders">
      <Member Id="M:Azure.Storage.Blobs.Models.BlobHttpHeaders.#ctor" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobHttpHeaders.Equals(System.Object)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobHttpHeaders.GetHashCode" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobHttpHeaders.ToString" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobHttpHeaders.CacheControl" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobHttpHeaders.ContentDisposition" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobHttpHeaders.ContentEncoding" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobHttpHeaders.ContentHash" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobHttpHeaders.ContentLanguage" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobHttpHeaders.ContentType" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobInfo" Id="T:Azure.Storage.Blobs.Models.BlobInfo">
      <Member Id="P:Azure.Storage.Blobs.Models.BlobInfo.BlobSequenceNumber" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobInfo.ETag" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobInfo.LastModified" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobItem" Id="T:Azure.Storage.Blobs.Models.BlobItem">
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItem.Deleted" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItem.Metadata" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItem.Name" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItem.Properties" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItem.Snapshot" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobItemProperties" Id="T:Azure.Storage.Blobs.Models.BlobItemProperties">
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.AccessTier" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.AccessTierChangedOn" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.AccessTierInferred" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.ArchiveStatus" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.BlobSequenceNumber" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.BlobType" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.CacheControl" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.ContentDisposition" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.ContentEncoding" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.ContentHash" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.ContentLanguage" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.ContentLength" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.ContentType" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.CopyCompletedOn" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.CopyId" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.CopyProgress" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.CopySource" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.CopyStatus" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.CopyStatusDescription" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.CreatedOn" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.CustomerProvidedKeySha256" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.DeletedOn" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.DestinationSnapshot" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.EncryptionScope" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.ETag" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.IncrementalCopy" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.LastModified" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.LeaseDuration" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.LeaseState" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.LeaseStatus" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.RemainingRetentionDays" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobItemProperties.ServerEncrypted" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobLease" Id="T:Azure.Storage.Blobs.Models.BlobLease">
      <Member Id="P:Azure.Storage.Blobs.Models.BlobLease.ETag" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobLease.LastModified" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobLease.LeaseId" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobLease.LeaseTime" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobMetrics" Id="T:Azure.Storage.Blobs.Models.BlobMetrics">
      <Member Id="M:Azure.Storage.Blobs.Models.BlobMetrics.#ctor" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobMetrics.Enabled" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobMetrics.IncludeApis" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobMetrics.RetentionPolicy" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobMetrics.Version" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobProperties" Id="T:Azure.Storage.Blobs.Models.BlobProperties">
      <Member Id="M:Azure.Storage.Blobs.Models.BlobProperties.#ctor" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.AcceptRanges" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.AccessTier" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.AccessTierChangedOn" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.AccessTierInferred" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.ArchiveStatus" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.BlobCommittedBlockCount" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.BlobSequenceNumber" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.BlobType" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.CacheControl" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.ContentDisposition" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.ContentEncoding" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.ContentHash" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.ContentLanguage" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.ContentLength" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.ContentType" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.CopyCompletedOn" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.CopyId" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.CopyProgress" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.CopySource" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.CopyStatus" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.CopyStatusDescription" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.CreatedOn" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.DestinationSnapshot" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.EncryptionKeySha256" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.EncryptionScope" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.ETag" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.IsIncrementalCopy" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.IsServerEncrypted" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.LastModified" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.LeaseDuration" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.LeaseState" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.LeaseStatus" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobProperties.Metadata" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobRequestConditions" Id="T:Azure.Storage.Blobs.Models.BlobRequestConditions">
      <Member Id="M:Azure.Storage.Blobs.Models.BlobRequestConditions.#ctor" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobRequestConditions.ToString" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobRequestConditions.LeaseId" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobRetentionPolicy" Id="T:Azure.Storage.Blobs.Models.BlobRetentionPolicy">
      <Member Id="M:Azure.Storage.Blobs.Models.BlobRetentionPolicy.#ctor" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobRetentionPolicy.Days" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobRetentionPolicy.Enabled" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobServiceProperties" Id="T:Azure.Storage.Blobs.Models.BlobServiceProperties">
      <Member Id="M:Azure.Storage.Blobs.Models.BlobServiceProperties.#ctor" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobServiceProperties.Cors" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobServiceProperties.DefaultServiceVersion" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobServiceProperties.DeleteRetentionPolicy" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobServiceProperties.HourMetrics" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobServiceProperties.Logging" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobServiceProperties.MinuteMetrics" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobServiceProperties.StaticWebsite" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobServiceStatistics" Id="T:Azure.Storage.Blobs.Models.BlobServiceStatistics">
      <Member Id="P:Azure.Storage.Blobs.Models.BlobServiceStatistics.GeoReplication" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobSignedIdentifier" Id="T:Azure.Storage.Blobs.Models.BlobSignedIdentifier">
      <Member Id="M:Azure.Storage.Blobs.Models.BlobSignedIdentifier.#ctor" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobSignedIdentifier.AccessPolicy" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobSignedIdentifier.Id" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobsModelFactory" Id="T:Azure.Storage.Blobs.Models.BlobsModelFactory">
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.AccountInfo(Azure.Storage.Blobs.Models.SkuName,Azure.Storage.Blobs.Models.AccountKind)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobAppendInfo(Azure.ETag,System.DateTimeOffset,System.Byte[],System.Byte[],System.String,System.Int32,System.Boolean,System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobAppendInfo(Azure.ETag,System.DateTimeOffset,System.Byte[],System.Byte[],System.String,System.Int32,System.Boolean,System.String,System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobBlock(System.String,System.Int32)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobContainerAccessPolicy(Azure.Storage.Blobs.Models.PublicAccessType,Azure.ETag,System.DateTimeOffset,System.Collections.Generic.IEnumerable{Azure.Storage.Blobs.Models.BlobSignedIdentifier})" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobContainerInfo(Azure.ETag,System.DateTimeOffset)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobContainerItem(System.String,Azure.Storage.Blobs.Models.BlobContainerProperties)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobContainerProperties(System.DateTimeOffset,Azure.ETag,System.Nullable{Azure.Storage.Blobs.Models.LeaseState},System.Nullable{Azure.Storage.Blobs.Models.LeaseDurationType},System.Nullable{Azure.Storage.Blobs.Models.PublicAccessType},System.Nullable{Azure.Storage.Blobs.Models.LeaseStatus},System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Boolean})" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobContainerProperties(System.DateTimeOffset,Azure.ETag,System.Nullable{Azure.Storage.Blobs.Models.LeaseStatus},System.Nullable{Azure.Storage.Blobs.Models.LeaseState},System.Nullable{Azure.Storage.Blobs.Models.LeaseDurationType},System.Nullable{Azure.Storage.Blobs.Models.PublicAccessType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IDictionary{System.String,System.String})" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobContentInfo(Azure.ETag,System.DateTimeOffset,System.Byte[],System.String,System.Int64)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobContentInfo(Azure.ETag,System.DateTimeOffset,System.Byte[],System.String,System.String,System.Int64)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobCopyInfo(Azure.ETag,System.DateTimeOffset,System.String,Azure.Storage.Blobs.Models.CopyStatus)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobDownloadInfo(System.DateTimeOffset,System.Int64,Azure.Storage.Blobs.Models.BlobType,System.Byte[],System.String,System.String,System.String,System.String,System.Uri,Azure.Storage.Blobs.Models.CopyStatus,System.String,Azure.Storage.Blobs.Models.LeaseDurationType,System.String,Azure.Storage.Blobs.Models.LeaseState,System.String,Azure.Storage.Blobs.Models.LeaseStatus,System.Byte[],System.String,Azure.ETag,System.Int32,System.String,System.Boolean,System.String,System.String,System.Int64,System.Byte[],System.Collections.Generic.IDictionary{System.String,System.String},System.IO.Stream,System.DateTimeOffset)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobDownloadInfo(System.DateTimeOffset,System.Int64,Azure.Storage.Blobs.Models.BlobType,System.Byte[],System.String,System.String,System.String,System.String,System.Uri,Azure.Storage.Blobs.Models.CopyStatus,System.String,Azure.Storage.Blobs.Models.LeaseDurationType,System.String,Azure.Storage.Blobs.Models.LeaseState,System.String,Azure.Storage.Blobs.Models.LeaseStatus,System.Byte[],System.String,Azure.ETag,System.Int32,System.String,System.Boolean,System.String,System.String,System.String,System.Int64,System.Byte[],System.Collections.Generic.IDictionary{System.String,System.String},System.IO.Stream,System.DateTimeOffset)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobGeoReplication(Azure.Storage.Blobs.Models.BlobGeoReplicationStatus,System.Nullable{System.DateTimeOffset})" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobHierarchyItem(System.String,Azure.Storage.Blobs.Models.BlobItem)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobInfo(Azure.ETag,System.DateTimeOffset)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobItem(System.String,System.Boolean,Azure.Storage.Blobs.Models.BlobItemProperties,System.String,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobItemProperties(System.Boolean,System.String,System.String,System.String,System.String,System.Byte[],System.String,System.String,System.Nullable{System.Int64},System.Nullable{Azure.Storage.Blobs.Models.BlobType},System.Nullable{Azure.Storage.Blobs.Models.LeaseStatus},System.Nullable{Azure.Storage.Blobs.Models.LeaseState},System.Nullable{Azure.Storage.Blobs.Models.LeaseDurationType},System.String,System.Nullable{Azure.Storage.Blobs.Models.CopyStatus},System.Uri,System.Nullable{System.Int64},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.Storage.Blobs.Models.ArchiveStatus},System.String,System.String,System.Nullable{Azure.ETag},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobItemProperties(System.Boolean,System.Uri,System.String,System.String,System.String,System.Byte[],System.String,System.String,System.Nullable{System.Int64},System.Nullable{Azure.Storage.Blobs.Models.BlobType},System.Nullable{Azure.Storage.Blobs.Models.LeaseStatus},System.Nullable{Azure.Storage.Blobs.Models.LeaseState},System.Nullable{Azure.Storage.Blobs.Models.LeaseDurationType},System.String,System.Nullable{Azure.Storage.Blobs.Models.CopyStatus},System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.Storage.Blobs.Models.ArchiveStatus},System.String,System.Nullable{Azure.ETag},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobLease(Azure.ETag,System.DateTimeOffset,System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobProperties(System.DateTimeOffset,Azure.Storage.Blobs.Models.LeaseDurationType,Azure.Storage.Blobs.Models.LeaseState,Azure.Storage.Blobs.Models.LeaseStatus,System.Int64,System.String,Azure.ETag,System.Byte[],System.String,System.String,System.String,System.Boolean,System.String,Azure.Storage.Blobs.Models.CopyStatus,System.Int64,System.Uri,System.String,System.String,System.Int32,System.String,System.Boolean,System.String,System.String,System.DateTimeOffset,System.String,Azure.Storage.Blobs.Models.BlobType,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.DateTimeOffset,System.DateTimeOffset,System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobProperties(System.DateTimeOffset,Azure.Storage.Blobs.Models.LeaseState,Azure.Storage.Blobs.Models.LeaseStatus,System.Int64,Azure.Storage.Blobs.Models.LeaseDurationType,Azure.ETag,System.Byte[],System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Int64,Azure.Storage.Blobs.Models.CopyStatus,System.String,System.Uri,System.Int32,System.String,System.Boolean,System.String,System.String,System.String,System.String,System.DateTimeOffset,System.String,Azure.Storage.Blobs.Models.BlobType,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.DateTimeOffset,System.DateTimeOffset,System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobServiceStatistics(Azure.Storage.Blobs.Models.BlobGeoReplication)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobSnapshotInfo(System.String,Azure.ETag,System.DateTimeOffset,System.Boolean)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlockInfo(System.Byte[],System.Byte[],System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlockInfo(System.Byte[],System.Byte[],System.String,System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlockList(System.Collections.Generic.IEnumerable{Azure.Storage.Blobs.Models.BlobBlock},System.Collections.Generic.IEnumerable{Azure.Storage.Blobs.Models.BlobBlock})" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.PageBlobInfo(Azure.ETag,System.DateTimeOffset,System.Int64)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.PageInfo(Azure.ETag,System.DateTimeOffset,System.Byte[],System.Byte[],System.Int64,System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.PageInfo(Azure.ETag,System.DateTimeOffset,System.Byte[],System.Byte[],System.Int64,System.String,System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.PageRangesInfo(System.DateTimeOffset,Azure.ETag,System.Int64,System.Collections.Generic.IEnumerable{Azure.HttpRange},System.Collections.Generic.IEnumerable{Azure.HttpRange})" />
      <Member Id="M:Azure.Storage.Blobs.Models.BlobsModelFactory.UserDelegationKey(System.String,System.String,System.String,System.String,System.String,System.DateTimeOffset,System.DateTimeOffset)" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobSnapshotInfo" Id="T:Azure.Storage.Blobs.Models.BlobSnapshotInfo">
      <Member Id="P:Azure.Storage.Blobs.Models.BlobSnapshotInfo.ETag" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobSnapshotInfo.IsServerEncrypted" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobSnapshotInfo.LastModified" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobSnapshotInfo.Snapshot" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobStates" Id="T:Azure.Storage.Blobs.Models.BlobStates">
      <Member Id="F:Azure.Storage.Blobs.Models.BlobStates.All" />
      <Member Id="F:Azure.Storage.Blobs.Models.BlobStates.Deleted" />
      <Member Id="F:Azure.Storage.Blobs.Models.BlobStates.None" />
      <Member Id="F:Azure.Storage.Blobs.Models.BlobStates.Snapshots" />
      <Member Id="F:Azure.Storage.Blobs.Models.BlobStates.Uncommitted" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobStaticWebsite" Id="T:Azure.Storage.Blobs.Models.BlobStaticWebsite">
      <Member Id="M:Azure.Storage.Blobs.Models.BlobStaticWebsite.#ctor" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobStaticWebsite.Enabled" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobStaticWebsite.ErrorDocument404Path" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlobStaticWebsite.IndexDocument" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobTraits" Id="T:Azure.Storage.Blobs.Models.BlobTraits">
      <Member Id="F:Azure.Storage.Blobs.Models.BlobTraits.All" />
      <Member Id="F:Azure.Storage.Blobs.Models.BlobTraits.CopyStatus" />
      <Member Id="F:Azure.Storage.Blobs.Models.BlobTraits.Metadata" />
      <Member Id="F:Azure.Storage.Blobs.Models.BlobTraits.None" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlobType" Id="T:Azure.Storage.Blobs.Models.BlobType">
      <Member Id="F:Azure.Storage.Blobs.Models.BlobType.Append" />
      <Member Id="F:Azure.Storage.Blobs.Models.BlobType.Block" />
      <Member Id="F:Azure.Storage.Blobs.Models.BlobType.Page" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlockInfo" Id="T:Azure.Storage.Blobs.Models.BlockInfo">
      <Member Id="P:Azure.Storage.Blobs.Models.BlockInfo.ContentCrc64" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlockInfo.ContentHash" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlockInfo.EncryptionKeySha256" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlockInfo.EncryptionScope" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlockList" Id="T:Azure.Storage.Blobs.Models.BlockList">
      <Member Id="P:Azure.Storage.Blobs.Models.BlockList.BlobContentLength" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlockList.CommittedBlocks" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlockList.ContentType" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlockList.ETag" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlockList.LastModified" />
      <Member Id="P:Azure.Storage.Blobs.Models.BlockList.UncommittedBlocks" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.BlockListTypes" Id="T:Azure.Storage.Blobs.Models.BlockListTypes">
      <Member Id="F:Azure.Storage.Blobs.Models.BlockListTypes.All" />
      <Member Id="F:Azure.Storage.Blobs.Models.BlockListTypes.Committed" />
      <Member Id="F:Azure.Storage.Blobs.Models.BlockListTypes.Uncommitted" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.CopyFromUriOperation" Id="T:Azure.Storage.Blobs.Models.CopyFromUriOperation">
      <Member Id="M:Azure.Storage.Blobs.Models.CopyFromUriOperation.#ctor" />
      <Member Id="M:Azure.Storage.Blobs.Models.CopyFromUriOperation.#ctor(System.String,Azure.Storage.Blobs.Specialized.BlobBaseClient)" />
      <Member Id="M:Azure.Storage.Blobs.Models.CopyFromUriOperation.GetRawResponse" />
      <Member Id="M:Azure.Storage.Blobs.Models.CopyFromUriOperation.UpdateStatus(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Models.CopyFromUriOperation.UpdateStatusAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Models.CopyFromUriOperation.WaitForCompletionAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Models.CopyFromUriOperation.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="P:Azure.Storage.Blobs.Models.CopyFromUriOperation.HasCompleted" />
      <Member Id="P:Azure.Storage.Blobs.Models.CopyFromUriOperation.HasValue" />
      <Member Id="P:Azure.Storage.Blobs.Models.CopyFromUriOperation.Id" />
      <Member Id="P:Azure.Storage.Blobs.Models.CopyFromUriOperation.Value" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.CopyStatus" Id="T:Azure.Storage.Blobs.Models.CopyStatus">
      <Member Id="F:Azure.Storage.Blobs.Models.CopyStatus.Aborted" />
      <Member Id="F:Azure.Storage.Blobs.Models.CopyStatus.Failed" />
      <Member Id="F:Azure.Storage.Blobs.Models.CopyStatus.Pending" />
      <Member Id="F:Azure.Storage.Blobs.Models.CopyStatus.Success" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.CustomerProvidedKey" Id="T:Azure.Storage.Blobs.Models.CustomerProvidedKey">
      <Member Id="M:Azure.Storage.Blobs.Models.CustomerProvidedKey.#ctor(System.Byte[])" />
      <Member Id="M:Azure.Storage.Blobs.Models.CustomerProvidedKey.#ctor(System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Models.CustomerProvidedKey.Equals(Azure.Storage.Blobs.Models.CustomerProvidedKey)" />
      <Member Id="M:Azure.Storage.Blobs.Models.CustomerProvidedKey.Equals(System.Object)" />
      <Member Id="M:Azure.Storage.Blobs.Models.CustomerProvidedKey.GetHashCode" />
      <Member Id="M:Azure.Storage.Blobs.Models.CustomerProvidedKey.op_Equality(Azure.Storage.Blobs.Models.CustomerProvidedKey,Azure.Storage.Blobs.Models.CustomerProvidedKey)" />
      <Member Id="M:Azure.Storage.Blobs.Models.CustomerProvidedKey.op_Inequality(Azure.Storage.Blobs.Models.CustomerProvidedKey,Azure.Storage.Blobs.Models.CustomerProvidedKey)" />
      <Member Id="M:Azure.Storage.Blobs.Models.CustomerProvidedKey.ToString" />
      <Member Id="P:Azure.Storage.Blobs.Models.CustomerProvidedKey.EncryptionAlgorithm" />
      <Member Id="P:Azure.Storage.Blobs.Models.CustomerProvidedKey.EncryptionKey" />
      <Member Id="P:Azure.Storage.Blobs.Models.CustomerProvidedKey.EncryptionKeyHash" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.DeleteSnapshotsOption" Id="T:Azure.Storage.Blobs.Models.DeleteSnapshotsOption">
      <Member Id="F:Azure.Storage.Blobs.Models.DeleteSnapshotsOption.IncludeSnapshots" />
      <Member Id="F:Azure.Storage.Blobs.Models.DeleteSnapshotsOption.None" />
      <Member Id="F:Azure.Storage.Blobs.Models.DeleteSnapshotsOption.OnlySnapshots" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.EncryptionAlgorithmType" Id="T:Azure.Storage.Blobs.Models.EncryptionAlgorithmType">
      <Member Id="F:Azure.Storage.Blobs.Models.EncryptionAlgorithmType.Aes256" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.LeaseDurationType" Id="T:Azure.Storage.Blobs.Models.LeaseDurationType">
      <Member Id="F:Azure.Storage.Blobs.Models.LeaseDurationType.Fixed" />
      <Member Id="F:Azure.Storage.Blobs.Models.LeaseDurationType.Infinite" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.LeaseState" Id="T:Azure.Storage.Blobs.Models.LeaseState">
      <Member Id="F:Azure.Storage.Blobs.Models.LeaseState.Available" />
      <Member Id="F:Azure.Storage.Blobs.Models.LeaseState.Breaking" />
      <Member Id="F:Azure.Storage.Blobs.Models.LeaseState.Broken" />
      <Member Id="F:Azure.Storage.Blobs.Models.LeaseState.Expired" />
      <Member Id="F:Azure.Storage.Blobs.Models.LeaseState.Leased" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.LeaseStatus" Id="T:Azure.Storage.Blobs.Models.LeaseStatus">
      <Member Id="F:Azure.Storage.Blobs.Models.LeaseStatus.Locked" />
      <Member Id="F:Azure.Storage.Blobs.Models.LeaseStatus.Unlocked" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.PageBlobInfo" Id="T:Azure.Storage.Blobs.Models.PageBlobInfo">
      <Member Id="P:Azure.Storage.Blobs.Models.PageBlobInfo.BlobSequenceNumber" />
      <Member Id="P:Azure.Storage.Blobs.Models.PageBlobInfo.ETag" />
      <Member Id="P:Azure.Storage.Blobs.Models.PageBlobInfo.LastModified" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.PageBlobRequestConditions" Id="T:Azure.Storage.Blobs.Models.PageBlobRequestConditions">
      <Member Id="M:Azure.Storage.Blobs.Models.PageBlobRequestConditions.#ctor" />
      <Member Id="P:Azure.Storage.Blobs.Models.PageBlobRequestConditions.IfSequenceNumberEqual" />
      <Member Id="P:Azure.Storage.Blobs.Models.PageBlobRequestConditions.IfSequenceNumberLessThan" />
      <Member Id="P:Azure.Storage.Blobs.Models.PageBlobRequestConditions.IfSequenceNumberLessThanOrEqual" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.PageInfo" Id="T:Azure.Storage.Blobs.Models.PageInfo">
      <Member Id="P:Azure.Storage.Blobs.Models.PageInfo.BlobSequenceNumber" />
      <Member Id="P:Azure.Storage.Blobs.Models.PageInfo.ContentCrc64" />
      <Member Id="P:Azure.Storage.Blobs.Models.PageInfo.ContentHash" />
      <Member Id="P:Azure.Storage.Blobs.Models.PageInfo.EncryptionKeySha256" />
      <Member Id="P:Azure.Storage.Blobs.Models.PageInfo.EncryptionScope" />
      <Member Id="P:Azure.Storage.Blobs.Models.PageInfo.ETag" />
      <Member Id="P:Azure.Storage.Blobs.Models.PageInfo.LastModified" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.PageRangesInfo" Id="T:Azure.Storage.Blobs.Models.PageRangesInfo">
      <Member Id="P:Azure.Storage.Blobs.Models.PageRangesInfo.BlobContentLength" />
      <Member Id="P:Azure.Storage.Blobs.Models.PageRangesInfo.ClearRanges" />
      <Member Id="P:Azure.Storage.Blobs.Models.PageRangesInfo.ETag" />
      <Member Id="P:Azure.Storage.Blobs.Models.PageRangesInfo.LastModified" />
      <Member Id="P:Azure.Storage.Blobs.Models.PageRangesInfo.PageRanges" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.PathRenameMode" Id="T:Azure.Storage.Blobs.Models.PathRenameMode">
      <Member Id="F:Azure.Storage.Blobs.Models.PathRenameMode.Legacy" />
      <Member Id="F:Azure.Storage.Blobs.Models.PathRenameMode.Posix" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.PublicAccessType" Id="T:Azure.Storage.Blobs.Models.PublicAccessType">
      <Member Id="F:Azure.Storage.Blobs.Models.PublicAccessType.Blob" />
      <Member Id="F:Azure.Storage.Blobs.Models.PublicAccessType.BlobContainer" />
      <Member Id="F:Azure.Storage.Blobs.Models.PublicAccessType.None" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.RehydratePriority" Id="T:Azure.Storage.Blobs.Models.RehydratePriority">
      <Member Id="F:Azure.Storage.Blobs.Models.RehydratePriority.High" />
      <Member Id="F:Azure.Storage.Blobs.Models.RehydratePriority.Standard" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.ReleasedObjectInfo" Id="T:Azure.Storage.Blobs.Models.ReleasedObjectInfo">
      <Member Id="M:Azure.Storage.Blobs.Models.ReleasedObjectInfo.#ctor(Azure.ETag,System.DateTimeOffset)" />
      <Member Id="M:Azure.Storage.Blobs.Models.ReleasedObjectInfo.Equals(System.Object)" />
      <Member Id="M:Azure.Storage.Blobs.Models.ReleasedObjectInfo.GetHashCode" />
      <Member Id="M:Azure.Storage.Blobs.Models.ReleasedObjectInfo.ToString" />
      <Member Id="P:Azure.Storage.Blobs.Models.ReleasedObjectInfo.ETag" />
      <Member Id="P:Azure.Storage.Blobs.Models.ReleasedObjectInfo.LastModified" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.SequenceNumberAction" Id="T:Azure.Storage.Blobs.Models.SequenceNumberAction">
      <Member Id="F:Azure.Storage.Blobs.Models.SequenceNumberAction.Increment" />
      <Member Id="F:Azure.Storage.Blobs.Models.SequenceNumberAction.Max" />
      <Member Id="F:Azure.Storage.Blobs.Models.SequenceNumberAction.Update" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.SkuName" Id="T:Azure.Storage.Blobs.Models.SkuName">
      <Member Id="F:Azure.Storage.Blobs.Models.SkuName.PremiumLrs" />
      <Member Id="F:Azure.Storage.Blobs.Models.SkuName.StandardGrs" />
      <Member Id="F:Azure.Storage.Blobs.Models.SkuName.StandardLrs" />
      <Member Id="F:Azure.Storage.Blobs.Models.SkuName.StandardRagrs" />
      <Member Id="F:Azure.Storage.Blobs.Models.SkuName.StandardZrs" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Models.UserDelegationKey" Id="T:Azure.Storage.Blobs.Models.UserDelegationKey">
      <Member Id="P:Azure.Storage.Blobs.Models.UserDelegationKey.SignedExpiresOn" />
      <Member Id="P:Azure.Storage.Blobs.Models.UserDelegationKey.SignedObjectId" />
      <Member Id="P:Azure.Storage.Blobs.Models.UserDelegationKey.SignedService" />
      <Member Id="P:Azure.Storage.Blobs.Models.UserDelegationKey.SignedStartsOn" />
      <Member Id="P:Azure.Storage.Blobs.Models.UserDelegationKey.SignedTenantId" />
      <Member Id="P:Azure.Storage.Blobs.Models.UserDelegationKey.SignedVersion" />
      <Member Id="P:Azure.Storage.Blobs.Models.UserDelegationKey.Value" />
    </Type>
  </Namespace>
  <Namespace Name="Azure.Storage.Blobs.Specialized">
    <Type Name="Azure.Storage.Blobs.Specialized.AppendBlobClient" Id="T:Azure.Storage.Blobs.Specialized.AppendBlobClient">
      <Member Id="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.#ctor" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.#ctor(System.String,System.String,System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.#ctor(System.String,System.String,System.String,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.#ctor(System.Uri,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.AppendBlock(System.IO.Stream,System.Byte[],Azure.Storage.Blobs.Models.AppendBlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.AppendBlockAsync(System.IO.Stream,System.Byte[],Azure.Storage.Blobs.Models.AppendBlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.AppendBlockFromUri(System.Uri,Azure.HttpRange,System.Byte[],Azure.Storage.Blobs.Models.AppendBlobRequestConditions,Azure.Storage.Blobs.Models.AppendBlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.AppendBlockFromUriAsync(System.Uri,Azure.HttpRange,System.Byte[],Azure.Storage.Blobs.Models.AppendBlobRequestConditions,Azure.Storage.Blobs.Models.AppendBlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.Create(Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.AppendBlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.CreateAsync(Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.AppendBlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.CreateIfNotExists(Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.CreateIfNotExistsAsync(Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.WithSnapshot(System.String)" />
      <Member Id="P:Azure.Storage.Blobs.Specialized.AppendBlobClient.AppendBlobMaxAppendBlockBytes" />
      <Member Id="P:Azure.Storage.Blobs.Specialized.AppendBlobClient.AppendBlobMaxBlocks" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Specialized.BlobBaseClient" Id="T:Azure.Storage.Blobs.Specialized.BlobBaseClient">
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.#ctor" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.#ctor(System.String,System.String,System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.#ctor(System.String,System.String,System.String,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.#ctor(System.Uri,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.AbortCopyFromUri(System.String,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.AbortCopyFromUriAsync(System.String,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.CreateSnapshot(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.CreateSnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.Delete(Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DeleteAsync(Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DeleteIfExists(Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DeleteIfExistsAsync(Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.Download" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.Download(Azure.HttpRange,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.Download(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadAsync" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadAsync(Azure.HttpRange,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadTo(System.IO.Stream)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadTo(System.IO.Stream,Azure.Storage.Blobs.Models.BlobRequestConditions,Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadTo(System.IO.Stream,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadTo(System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadTo(System.String,Azure.Storage.Blobs.Models.BlobRequestConditions,Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadTo(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadToAsync(System.IO.Stream)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadToAsync(System.IO.Stream,Azure.Storage.Blobs.Models.BlobRequestConditions,Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadToAsync(System.IO.Stream,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadToAsync(System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadToAsync(System.String,Azure.Storage.Blobs.Models.BlobRequestConditions,Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.DownloadToAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.Exists(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.ExistsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GetProperties(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.GetPropertiesAsync(Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.SetAccessTier(Azure.Storage.Blobs.Models.AccessTier,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.RehydratePriority},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.SetAccessTierAsync(Azure.Storage.Blobs.Models.AccessTier,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.RehydratePriority},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.SetHttpHeaders(Azure.Storage.Blobs.Models.BlobHttpHeaders,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.SetHttpHeadersAsync(Azure.Storage.Blobs.Models.BlobHttpHeaders,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.SetMetadata(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.SetMetadataAsync(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.StartCopyFromUri(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},Azure.Storage.Blobs.Models.BlobRequestConditions,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.RehydratePriority},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.StartCopyFromUriAsync(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},Azure.Storage.Blobs.Models.BlobRequestConditions,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.RehydratePriority},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.Undelete(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.UndeleteAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.WithSnapshot(System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBaseClient.WithSnapshotCore(System.String)" />
      <Member Id="P:Azure.Storage.Blobs.Specialized.BlobBaseClient.AccountName" />
      <Member Id="P:Azure.Storage.Blobs.Specialized.BlobBaseClient.BlobContainerName" />
      <Member Id="P:Azure.Storage.Blobs.Specialized.BlobBaseClient.Name" />
      <Member Id="P:Azure.Storage.Blobs.Specialized.BlobBaseClient.Uri" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Specialized.BlobBatch" Id="T:Azure.Storage.Blobs.Specialized.BlobBatch">
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBatch.#ctor" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBatch.#ctor(Azure.Storage.Blobs.Specialized.BlobBatchClient)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBatch.DeleteBlob(System.String,System.String,Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBatch.DeleteBlob(System.Uri,Azure.Storage.Blobs.Models.DeleteSnapshotsOption,Azure.Storage.Blobs.Models.BlobRequestConditions)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBatch.Dispose" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBatch.SetBlobAccessTier(System.String,System.String,Azure.Storage.Blobs.Models.AccessTier,System.Nullable{Azure.Storage.Blobs.Models.RehydratePriority},Azure.Storage.Blobs.Models.BlobRequestConditions)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBatch.SetBlobAccessTier(System.Uri,Azure.Storage.Blobs.Models.AccessTier,System.Nullable{Azure.Storage.Blobs.Models.RehydratePriority},Azure.Storage.Blobs.Models.BlobRequestConditions)" />
      <Member Id="P:Azure.Storage.Blobs.Specialized.BlobBatch.RequestCount" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Specialized.BlobBatchClient" Id="T:Azure.Storage.Blobs.Specialized.BlobBatchClient">
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBatchClient.#ctor" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBatchClient.#ctor(Azure.Storage.Blobs.BlobServiceClient)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBatchClient.CreateBatch" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBatchClient.DeleteBlobs(System.Collections.Generic.IEnumerable{System.Uri},Azure.Storage.Blobs.Models.DeleteSnapshotsOption,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBatchClient.DeleteBlobsAsync(System.Collections.Generic.IEnumerable{System.Uri},Azure.Storage.Blobs.Models.DeleteSnapshotsOption,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBatchClient.SetBlobsAccessTier(System.Collections.Generic.IEnumerable{System.Uri},Azure.Storage.Blobs.Models.AccessTier,System.Nullable{Azure.Storage.Blobs.Models.RehydratePriority},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBatchClient.SetBlobsAccessTierAsync(System.Collections.Generic.IEnumerable{System.Uri},Azure.Storage.Blobs.Models.AccessTier,System.Nullable{Azure.Storage.Blobs.Models.RehydratePriority},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBatchClient.SubmitBatch(Azure.Storage.Blobs.Specialized.BlobBatch,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobBatchClient.SubmitBatchAsync(Azure.Storage.Blobs.Specialized.BlobBatch,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="P:Azure.Storage.Blobs.Specialized.BlobBatchClient.Uri" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Specialized.BlobLeaseClient" Id="T:Azure.Storage.Blobs.Specialized.BlobLeaseClient">
      <Member Id="F:Azure.Storage.Blobs.Specialized.BlobLeaseClient.InfiniteLeaseDuration" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.#ctor" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.#ctor(Azure.Storage.Blobs.BlobContainerClient,System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.#ctor(Azure.Storage.Blobs.Specialized.BlobBaseClient,System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.Acquire(System.TimeSpan,Azure.RequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.AcquireAsync(System.TimeSpan,Azure.RequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.Break(System.Nullable{System.TimeSpan},Azure.RequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.BreakAsync(System.Nullable{System.TimeSpan},Azure.RequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.Change(System.String,Azure.RequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.ChangeAsync(System.String,Azure.RequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.Release(Azure.RequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.ReleaseAsync(Azure.RequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.ReleaseInternal(Azure.RequestConditions,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.Renew(Azure.RequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlobLeaseClient.RenewAsync(Azure.RequestConditions,System.Threading.CancellationToken)" />
      <Member Id="P:Azure.Storage.Blobs.Specialized.BlobLeaseClient.BlobClient" />
      <Member Id="P:Azure.Storage.Blobs.Specialized.BlobLeaseClient.BlobContainerClient" />
      <Member Id="P:Azure.Storage.Blobs.Specialized.BlobLeaseClient.LeaseId" />
      <Member Id="P:Azure.Storage.Blobs.Specialized.BlobLeaseClient.Uri" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Specialized.BlockBlobClient" Id="T:Azure.Storage.Blobs.Specialized.BlockBlobClient">
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.#ctor" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.#ctor(System.String,System.String,System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.#ctor(System.String,System.String,System.String,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.#ctor(System.Uri,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.CommitBlockList(System.Collections.Generic.IEnumerable{System.String},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.CommitBlockListAsync(System.Collections.Generic.IEnumerable{System.String},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.CreateClient(System.Uri,Azure.Storage.Blobs.BlobClientOptions,Azure.Core.Pipeline.HttpPipeline)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.GetBlockList(Azure.Storage.Blobs.Models.BlockListTypes,System.String,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.GetBlockListAsync(Azure.Storage.Blobs.Models.BlockListTypes,System.String,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.StageBlock(System.String,System.IO.Stream,System.Byte[],Azure.Storage.Blobs.Models.BlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.StageBlockAsync(System.String,System.IO.Stream,System.Byte[],Azure.Storage.Blobs.Models.BlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.StageBlockFromUri(System.Uri,System.String,Azure.HttpRange,System.Byte[],Azure.RequestConditions,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.StageBlockFromUriAsync(System.Uri,System.String,Azure.HttpRange,System.Byte[],Azure.RequestConditions,Azure.Storage.Blobs.Models.BlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.Upload(System.IO.Stream,Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.IProgress{System.Int64},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.UploadAsync(System.IO.Stream,Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.IProgress{System.Int64},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.WithSnapshot(System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.WithSnapshotCore(System.String)" />
      <Member Id="P:Azure.Storage.Blobs.Specialized.BlockBlobClient.BlockBlobMaxBlocks" />
      <Member Id="P:Azure.Storage.Blobs.Specialized.BlockBlobClient.BlockBlobMaxStageBlockBytes" />
      <Member Id="P:Azure.Storage.Blobs.Specialized.BlockBlobClient.BlockBlobMaxUploadBlobBytes" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Specialized.PageBlobClient" Id="T:Azure.Storage.Blobs.Specialized.PageBlobClient">
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.#ctor" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.#ctor(System.String,System.String,System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.#ctor(System.String,System.String,System.String,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.#ctor(System.Uri,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Blobs.BlobClientOptions)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.ClearPages(Azure.HttpRange,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.ClearPagesAsync(Azure.HttpRange,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.Create(System.Int64,System.Nullable{System.Int64},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.CreateAsync(System.Int64,System.Nullable{System.Int64},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.CreateIfNotExists(System.Int64,System.Nullable{System.Int64},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.CreateIfNotExistsAsync(System.Int64,System.Nullable{System.Int64},Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetManagedDiskPageRangesDiff(System.Nullable{Azure.HttpRange},System.String,System.Uri,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetManagedDiskPageRangesDiffAsync(System.Nullable{Azure.HttpRange},System.String,System.Uri,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetPageRanges(System.Nullable{Azure.HttpRange},System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetPageRangesAsync(System.Nullable{Azure.HttpRange},System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetPageRangesDiff(System.Nullable{Azure.HttpRange},System.String,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetPageRangesDiffAsync(System.Nullable{Azure.HttpRange},System.String,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.Resize(System.Int64,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.ResizeAsync(System.Int64,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.StartCopyIncremental(System.Uri,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.StartCopyIncrementalAsync(System.Uri,System.String,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UpdateSequenceNumber(Azure.Storage.Blobs.Models.SequenceNumberAction,System.Nullable{System.Int64},Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UpdateSequenceNumberAsync(Azure.Storage.Blobs.Models.SequenceNumberAction,System.Nullable{System.Int64},Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UploadPages(System.IO.Stream,System.Int64,System.Byte[],Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UploadPagesAsync(System.IO.Stream,System.Int64,System.Byte[],Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.IProgress{System.Int64},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UploadPagesFromUri(System.Uri,Azure.HttpRange,Azure.HttpRange,System.Byte[],Azure.Storage.Blobs.Models.PageBlobRequestConditions,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UploadPagesFromUriAsync(System.Uri,Azure.HttpRange,Azure.HttpRange,System.Byte[],Azure.Storage.Blobs.Models.PageBlobRequestConditions,Azure.Storage.Blobs.Models.PageBlobRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.WithSnapshot(System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.PageBlobClient.WithSnapshotCore(System.String)" />
      <Member Id="P:Azure.Storage.Blobs.Specialized.PageBlobClient.PageBlobMaxUploadPagesBytes" />
      <Member Id="P:Azure.Storage.Blobs.Specialized.PageBlobClient.PageBlobPageBytes" />
    </Type>
    <Type Name="Azure.Storage.Blobs.Specialized.SpecializedBlobExtensions" Id="T:Azure.Storage.Blobs.Specialized.SpecializedBlobExtensions">
      <Member Id="M:Azure.Storage.Blobs.Specialized.SpecializedBlobExtensions.GetAppendBlobClient(Azure.Storage.Blobs.BlobContainerClient,System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.SpecializedBlobExtensions.GetBlobBaseClient(Azure.Storage.Blobs.BlobContainerClient,System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.SpecializedBlobExtensions.GetBlobBatchClient(Azure.Storage.Blobs.BlobServiceClient)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.SpecializedBlobExtensions.GetBlobLeaseClient(Azure.Storage.Blobs.BlobContainerClient,System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.SpecializedBlobExtensions.GetBlobLeaseClient(Azure.Storage.Blobs.Specialized.BlobBaseClient,System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.SpecializedBlobExtensions.GetBlockBlobClient(Azure.Storage.Blobs.BlobContainerClient,System.String)" />
      <Member Id="M:Azure.Storage.Blobs.Specialized.SpecializedBlobExtensions.GetPageBlobClient(Azure.Storage.Blobs.BlobContainerClient,System.String)" />
    </Type>
  </Namespace>
  <Namespace Name="Azure.Storage.Files.Shares.Models">
    <Type Name="Azure.Storage.Files.Shares.Models.CloseHandlesResult" Id="T:Azure.Storage.Files.Shares.Models.CloseHandlesResult">
      <Member Id="P:Azure.Storage.Files.Shares.Models.CloseHandlesResult.ClosedHandlesCount" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.CloseHandlesResult.FailedHandlesCount" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.CopyStatus" Id="T:Azure.Storage.Files.Shares.Models.CopyStatus">
      <Member Id="F:Azure.Storage.Files.Shares.Models.CopyStatus.Aborted" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.CopyStatus.Failed" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.CopyStatus.Pending" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.CopyStatus.Success" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.FileLeaseReleaseInfo" Id="T:Azure.Storage.Files.Shares.Models.FileLeaseReleaseInfo">
      <Member Id="P:Azure.Storage.Files.Shares.Models.FileLeaseReleaseInfo.ETag" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.FileLeaseReleaseInfo.LastModified" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.FileModelFactory" Id="T:Azure.Storage.Files.Shares.Models.FileModelFactory">
      <Member Id="M:Azure.Storage.Files.Shares.Models.FileModelFactory.ClosedHandlesInfo(System.Int32)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.FileModelFactory.ClosedHandlesInfo(System.Int32,System.Int32)" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.FileSmbProperties" Id="T:Azure.Storage.Files.Shares.Models.FileSmbProperties">
      <Member Id="M:Azure.Storage.Files.Shares.Models.FileSmbProperties.Equals(System.Object)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.FileSmbProperties.GetHashCode" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.FileSmbProperties.FileAttributes" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.FileSmbProperties.FileChangedOn" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.FileSmbProperties.FileCreatedOn" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.FileSmbProperties.FileId" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.FileSmbProperties.FileLastWrittenOn" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.FileSmbProperties.FilePermissionKey" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.FileSmbProperties.ParentId" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.FilesModelFactory" Id="T:Azure.Storage.Files.Shares.Models.FilesModelFactory">
      <Member Id="M:Azure.Storage.Files.Shares.Models.FilesModelFactory.StorageDirectoryProperties(System.Collections.Generic.IDictionary{System.String,System.String},Azure.ETag,System.DateTimeOffset,System.Boolean,System.String,System.DateTimeOffset,System.DateTimeOffset,System.DateTimeOffset,System.String,System.String,System.String)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.FilesModelFactory.StorageFileDownloadInfo(System.DateTimeOffset,System.Collections.Generic.IEnumerable{System.String},System.String,System.DateTimeOffset,System.String,System.String,System.String,System.Uri,Azure.Storage.Files.Shares.Models.CopyStatus,System.Byte[],System.Boolean,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.DateTimeOffset,System.Byte[],System.DateTimeOffset,Azure.ETag,System.DateTimeOffset,System.String,System.String,System.String,System.String,System.Int64,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.IO.Stream,System.String)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.FilesModelFactory.StorageFileDownloadProperties(System.DateTimeOffset,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Azure.ETag,System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.DateTimeOffset,System.String,System.String,System.String,System.Uri,Azure.Storage.Files.Shares.Models.CopyStatus,System.Byte[],System.Boolean)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.FilesModelFactory.StorageFileInfo(Azure.ETag,System.DateTimeOffset,System.Boolean,System.String,System.String,System.DateTimeOffset,System.DateTimeOffset,System.DateTimeOffset,System.String,System.String)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.FilesModelFactory.StorageFileItem(System.Boolean,System.String,System.Nullable{System.Int64})" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.FilesModelFactory.StorageFileProperties(System.DateTimeOffset,System.Collections.Generic.IDictionary{System.String,System.String},System.Int64,System.String,Azure.ETag,System.Byte[],System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.DateTimeOffset,System.String,System.String,System.String,System.String,Azure.Storage.Files.Shares.Models.CopyStatus,System.Boolean,System.String,System.DateTimeOffset,System.DateTimeOffset,System.DateTimeOffset,System.String,System.String,System.String)" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.NtfsFileAttributes" Id="T:Azure.Storage.Files.Shares.Models.NtfsFileAttributes">
      <Member Id="F:Azure.Storage.Files.Shares.Models.NtfsFileAttributes.Archive" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.NtfsFileAttributes.Directory" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.NtfsFileAttributes.Hidden" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.NtfsFileAttributes.None" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.NtfsFileAttributes.NoScrubData" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.NtfsFileAttributes.NotContentIndexed" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.NtfsFileAttributes.Offline" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.NtfsFileAttributes.ReadOnly" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.NtfsFileAttributes.System" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.NtfsFileAttributes.Temporary" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.PermissionCopyMode" Id="T:Azure.Storage.Files.Shares.Models.PermissionCopyMode">
      <Member Id="F:Azure.Storage.Files.Shares.Models.PermissionCopyMode.Override" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.PermissionCopyMode.Source" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.PermissionInfo" Id="T:Azure.Storage.Files.Shares.Models.PermissionInfo">
      <Member Id="P:Azure.Storage.Files.Shares.Models.PermissionInfo.FilePermissionKey" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareAccessPolicy" Id="T:Azure.Storage.Files.Shares.Models.ShareAccessPolicy">
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareAccessPolicy.#ctor" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareAccessPolicy.ExpiresOn" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareAccessPolicy.Permissions" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareAccessPolicy.StartsOn" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareCorsRule" Id="T:Azure.Storage.Files.Shares.Models.ShareCorsRule">
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareCorsRule.#ctor" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareCorsRule.AllowedHeaders" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareCorsRule.AllowedMethods" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareCorsRule.AllowedOrigins" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareCorsRule.ExposedHeaders" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareCorsRule.MaxAgeInSeconds" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareDirectoryInfo" Id="T:Azure.Storage.Files.Shares.Models.ShareDirectoryInfo">
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareDirectoryInfo.ETag" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareDirectoryInfo.LastModified" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareDirectoryInfo.SmbProperties" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareDirectoryProperties" Id="T:Azure.Storage.Files.Shares.Models.ShareDirectoryProperties">
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareDirectoryProperties.ETag" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareDirectoryProperties.IsServerEncrypted" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareDirectoryProperties.LastModified" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareDirectoryProperties.Metadata" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareDirectoryProperties.SmbProperties" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareErrorCode" Id="T:Azure.Storage.Files.Shares.Models.ShareErrorCode">
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareErrorCode.#ctor(System.String)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareErrorCode.Equals(Azure.Storage.Files.Shares.Models.ShareErrorCode)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareErrorCode.Equals(System.Object)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareErrorCode.GetHashCode" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareErrorCode.op_Equality(Azure.Storage.Files.Shares.Models.ShareErrorCode,Azure.Storage.Files.Shares.Models.ShareErrorCode)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareErrorCode.op_Implicit(System.String)~Azure.Storage.Files.Shares.Models.ShareErrorCode" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareErrorCode.op_Inequality(Azure.Storage.Files.Shares.Models.ShareErrorCode,Azure.Storage.Files.Shares.Models.ShareErrorCode)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareErrorCode.ToString" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.AccountAlreadyExists" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.AccountBeingCreated" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.AccountIsDisabled" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.AuthenticationFailed" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.AuthorizationFailure" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.AuthorizationPermissionMismatch" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.AuthorizationProtocolMismatch" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.AuthorizationResourceTypeMismatch" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.AuthorizationServiceMismatch" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.AuthorizationSourceIPMismatch" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.CannotDeleteFileOrDirectory" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ClientCacheFlushDelay" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ConditionHeadersNotSupported" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ConditionNotMet" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ContainerQuotaDowngradeNotAllowed" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.DeletePending" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.DirectoryNotEmpty" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.EmptyMetadataKey" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.FeatureVersionMismatch" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.FileLockConflict" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.InsufficientAccountPermissions" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.InternalError" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.InvalidAuthenticationInfo" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.InvalidFileOrDirectoryPathName" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.InvalidHeaderValue" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.InvalidHttpVerb" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.InvalidInput" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.InvalidMd5" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.InvalidMetadata" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.InvalidQueryParameterValue" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.InvalidRange" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.InvalidResourceName" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.InvalidUri" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.InvalidXmlDocument" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.InvalidXmlNodeValue" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.Md5Mismatch" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.MetadataTooLarge" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.MissingContentLengthHeader" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.MissingRequiredHeader" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.MissingRequiredQueryParameter" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.MissingRequiredXmlNode" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.MultipleConditionHeadersNotSupported" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.OperationTimedOut" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.OutOfRangeInput" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.OutOfRangeQueryParameterValue" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ParentNotFound" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ReadOnlyAttribute" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.RequestBodyTooLarge" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.RequestUrlFailedToParse" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ResourceAlreadyExists" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ResourceNotFound" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ResourceTypeMismatch" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ServerBusy" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ShareAlreadyExists" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ShareBeingDeleted" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ShareDisabled" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ShareHasSnapshots" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ShareNotFound" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ShareSnapshotCountExceeded" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ShareSnapshotInProgress" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ShareSnapshotOperationNotSupported" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.SharingViolation" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.UnsupportedHeader" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.UnsupportedHttpVerb" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.UnsupportedQueryParameter" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.UnsupportedXmlNode" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareFileCopyInfo" Id="T:Azure.Storage.Files.Shares.Models.ShareFileCopyInfo">
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileCopyInfo.CopyId" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileCopyInfo.CopyStatus" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileCopyInfo.ETag" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileCopyInfo.LastModified" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails" Id="T:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails">
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.AcceptRanges" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.CacheControl" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.ContentDisposition" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.ContentEncoding" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.ContentLanguage" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.ContentRange" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.CopyCompletedOn" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.CopyId" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.CopyProgress" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.CopySource" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.CopyStatus" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.CopyStatusDescription" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.ETag" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.FileContentHash" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.IsServerEncrypted" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.LastModified" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.LeaseDuration" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.LeaseState" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.LeaseStatus" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.Metadata" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.SmbProperties" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareFileDownloadInfo" Id="T:Azure.Storage.Files.Shares.Models.ShareFileDownloadInfo">
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareFileDownloadInfo.Dispose" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadInfo.Content" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadInfo.ContentHash" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadInfo.ContentLength" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadInfo.ContentType" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadInfo.Details" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareFileHandle" Id="T:Azure.Storage.Files.Shares.Models.ShareFileHandle">
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileHandle.ClientIp" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileHandle.FileId" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileHandle.HandleId" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileHandle.LastReconnectedOn" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileHandle.OpenedOn" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileHandle.ParentId" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileHandle.Path" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileHandle.SessionId" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders" Id="T:Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders">
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders.#ctor" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders.Equals(System.Object)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders.GetHashCode" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders.CacheControl" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders.ContentDisposition" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders.ContentEncoding" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders.ContentHash" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders.ContentLanguage" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders.ContentType" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareFileInfo" Id="T:Azure.Storage.Files.Shares.Models.ShareFileInfo">
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileInfo.ETag" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileInfo.IsServerEncrypted" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileInfo.LastModified" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileInfo.SmbProperties" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareFileItem" Id="T:Azure.Storage.Files.Shares.Models.ShareFileItem">
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileItem.FileSize" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileItem.IsDirectory" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileItem.Name" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareFileLease" Id="T:Azure.Storage.Files.Shares.Models.ShareFileLease">
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileLease.ETag" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileLease.LastModified" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileLease.LeaseId" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareFileProperties" Id="T:Azure.Storage.Files.Shares.Models.ShareFileProperties">
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.CacheControl" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.ContentDisposition" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.ContentEncoding" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.ContentHash" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.ContentLanguage" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.ContentLength" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.ContentType" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.CopyCompletedOn" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.CopyId" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.CopyProgress" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.CopySource" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.CopyStatus" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.CopyStatusDescription" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.ETag" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.IsServerEncrypted" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.LastModified" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.LeaseDuration" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.LeaseState" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.LeaseStatus" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.Metadata" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.SmbProperties" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareFileRangeInfo" Id="T:Azure.Storage.Files.Shares.Models.ShareFileRangeInfo">
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileRangeInfo.ETag" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileRangeInfo.FileContentLength" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileRangeInfo.LastModified" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileRangeInfo.Ranges" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareFileRangeWriteType" Id="T:Azure.Storage.Files.Shares.Models.ShareFileRangeWriteType">
      <Member Id="F:Azure.Storage.Files.Shares.Models.ShareFileRangeWriteType.Clear" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.ShareFileRangeWriteType.Update" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" Id="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions">
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions.#ctor" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions.ToString" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions.LeaseId" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareFileUploadInfo" Id="T:Azure.Storage.Files.Shares.Models.ShareFileUploadInfo">
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileUploadInfo.ContentHash" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileUploadInfo.ETag" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileUploadInfo.IsServerEncrypted" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareFileUploadInfo.LastModified" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareInfo" Id="T:Azure.Storage.Files.Shares.Models.ShareInfo">
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareInfo.ETag" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareInfo.LastModified" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareItem" Id="T:Azure.Storage.Files.Shares.Models.ShareItem">
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareItem.Name" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareItem.Properties" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareItem.Snapshot" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareLeaseDuration" Id="T:Azure.Storage.Files.Shares.Models.ShareLeaseDuration">
      <Member Id="F:Azure.Storage.Files.Shares.Models.ShareLeaseDuration.Fixed" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.ShareLeaseDuration.Infinite" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareLeaseState" Id="T:Azure.Storage.Files.Shares.Models.ShareLeaseState">
      <Member Id="F:Azure.Storage.Files.Shares.Models.ShareLeaseState.Available" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.ShareLeaseState.Breaking" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.ShareLeaseState.Broken" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.ShareLeaseState.Expired" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.ShareLeaseState.Leased" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareLeaseStatus" Id="T:Azure.Storage.Files.Shares.Models.ShareLeaseStatus">
      <Member Id="F:Azure.Storage.Files.Shares.Models.ShareLeaseStatus.Locked" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.ShareLeaseStatus.Unlocked" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareMetrics" Id="T:Azure.Storage.Files.Shares.Models.ShareMetrics">
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareMetrics.#ctor" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareMetrics.Enabled" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareMetrics.IncludeApis" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareMetrics.RetentionPolicy" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareMetrics.Version" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareModelFactory" Id="T:Azure.Storage.Files.Shares.Models.ShareModelFactory">
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.FileLeaseReleaseInfo(Azure.ETag,System.DateTimeOffset)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.PermissionInfo(System.String)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.ShareFileCopyInfo(Azure.ETag,System.DateTimeOffset,System.String,Azure.Storage.Files.Shares.Models.CopyStatus)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.ShareFileHandle(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.ShareFileLease(Azure.ETag,System.DateTimeOffset,System.String)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.ShareFileRangeInfo(System.DateTimeOffset,Azure.ETag,System.Int64,System.Collections.Generic.IEnumerable{Azure.HttpRange})" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.ShareFileUploadInfo(Azure.ETag,System.DateTimeOffset,System.Byte[],System.Boolean)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.ShareInfo(Azure.ETag,System.DateTimeOffset)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.ShareItem(System.String,Azure.Storage.Files.Shares.Models.ShareProperties,System.String)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.ShareProperties(System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String})" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.ShareProperties(System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String})" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.ShareSnapshotInfo(System.String,Azure.ETag,System.DateTimeOffset)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.ShareStatistics(System.Int32)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.ShareStatistics(System.Int64)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.StorageClosedHandlesSegment(System.String,System.Int32)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.StorageClosedHandlesSegment(System.String,System.Int32,System.Int32)" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareProperties" Id="T:Azure.Storage.Files.Shares.Models.ShareProperties">
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareProperties.ETag" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareProperties.LastModified" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareProperties.Metadata" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareProperties.NextAllowedQuotaDowngradeTime" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareProperties.ProvisionedEgressMBps" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareProperties.ProvisionedIngressMBps" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareProperties.ProvisionedIops" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareProperties.QuotaInGB" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareRetentionPolicy" Id="T:Azure.Storage.Files.Shares.Models.ShareRetentionPolicy">
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareRetentionPolicy.#ctor" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareRetentionPolicy.Days" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareRetentionPolicy.Enabled" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareServiceProperties" Id="T:Azure.Storage.Files.Shares.Models.ShareServiceProperties">
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareServiceProperties.#ctor" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareServiceProperties.Cors" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareServiceProperties.HourMetrics" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareServiceProperties.MinuteMetrics" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareSignedIdentifier" Id="T:Azure.Storage.Files.Shares.Models.ShareSignedIdentifier">
      <Member Id="M:Azure.Storage.Files.Shares.Models.ShareSignedIdentifier.#ctor" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareSignedIdentifier.AccessPolicy" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareSignedIdentifier.Id" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.SharesModelFactory" Id="T:Azure.Storage.Files.Shares.Models.SharesModelFactory">
      <Member Id="M:Azure.Storage.Files.Shares.Models.SharesModelFactory.FileSmbProperties(System.Nullable{System.DateTimeOffset},System.String,System.String)" />
      <Member Id="M:Azure.Storage.Files.Shares.Models.SharesModelFactory.StorageDirectoryInfo(Azure.ETag,System.DateTimeOffset,System.String,System.String,System.DateTimeOffset,System.DateTimeOffset,System.DateTimeOffset,System.String,System.String)" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareSnapshotInfo" Id="T:Azure.Storage.Files.Shares.Models.ShareSnapshotInfo">
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareSnapshotInfo.ETag" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareSnapshotInfo.LastModified" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareSnapshotInfo.Snapshot" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareStates" Id="T:Azure.Storage.Files.Shares.Models.ShareStates">
      <Member Id="F:Azure.Storage.Files.Shares.Models.ShareStates.All" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.ShareStates.None" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.ShareStates.Snapshots" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareStatistics" Id="T:Azure.Storage.Files.Shares.Models.ShareStatistics">
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareStatistics.ShareUsageBytes" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.ShareStatistics.ShareUsageInBytes" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.ShareTraits" Id="T:Azure.Storage.Files.Shares.Models.ShareTraits">
      <Member Id="F:Azure.Storage.Files.Shares.Models.ShareTraits.All" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.ShareTraits.Metadata" />
      <Member Id="F:Azure.Storage.Files.Shares.Models.ShareTraits.None" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Models.StorageClosedHandlesSegment" Id="T:Azure.Storage.Files.Shares.Models.StorageClosedHandlesSegment">
      <Member Id="P:Azure.Storage.Files.Shares.Models.StorageClosedHandlesSegment.Marker" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.StorageClosedHandlesSegment.NumberOfHandlesClosed" />
      <Member Id="P:Azure.Storage.Files.Shares.Models.StorageClosedHandlesSegment.NumberOfHandlesFailedToClose" />
    </Type>
  </Namespace>
  <Namespace Name="Azure.Storage.Files.Shares">
    <Type Name="Azure.Storage.Files.Shares.ShareClient" Id="T:Azure.Storage.Files.Shares.ShareClient">
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.#ctor" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.#ctor(System.String,System.String)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.#ctor(System.String,System.String,Azure.Storage.Files.Shares.ShareClientOptions)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.#ctor(System.Uri,Azure.Storage.Files.Shares.ShareClientOptions)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Files.Shares.ShareClientOptions)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.Create(System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.CreateAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.CreateDirectory(System.String,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.CreateDirectoryAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.CreatePermission(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.CreatePermissionAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.CreateSnapshot(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.CreateSnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.Delete(System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.DeleteAsync(System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.DeleteDirectory(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.DeleteDirectoryAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.GetAccessPolicy(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.GetAccessPolicyAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.GetDirectoryClient(System.String)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.GetPermission(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.GetPermissionAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.GetProperties(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.GetPropertiesAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.GetRootDirectoryClient" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.GetStatistics(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.GetStatisticsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.SetAccessPolicy(System.Collections.Generic.IEnumerable{Azure.Storage.Files.Shares.Models.ShareSignedIdentifier},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.SetAccessPolicyAsync(System.Collections.Generic.IEnumerable{Azure.Storage.Files.Shares.Models.ShareSignedIdentifier},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.SetMetadata(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.SetMetadataAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.SetQuota(System.Int32,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.SetQuotaAsync(System.Int32,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareClient.WithSnapshot(System.String)" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareClient.AccountName" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareClient.Name" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareClient.Uri" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.ShareClientOptions" Id="T:Azure.Storage.Files.Shares.ShareClientOptions">
      <Member Id="M:Azure.Storage.Files.Shares.ShareClientOptions.#ctor(Azure.Storage.Files.Shares.ShareClientOptions.ServiceVersion)" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareClientOptions.Version" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.ShareClientOptions/ServiceVersion" Id="T:Azure.Storage.Files.Shares.ShareClientOptions.ServiceVersion">
      <Member Id="F:Azure.Storage.Files.Shares.ShareClientOptions.ServiceVersion.V2019_02_02" />
      <Member Id="F:Azure.Storage.Files.Shares.ShareClientOptions.ServiceVersion.V2019_07_07" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.ShareDirectoryClient" Id="T:Azure.Storage.Files.Shares.ShareDirectoryClient">
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.#ctor" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.#ctor(System.String,System.String,System.String)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.#ctor(System.String,System.String,System.String,Azure.Storage.Files.Shares.ShareClientOptions)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.#ctor(System.Uri,Azure.Storage.Files.Shares.ShareClientOptions)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Files.Shares.ShareClientOptions)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.Create(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.CreateAsync(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.CreateFile(System.String,System.Int64,Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.CreateFile(System.String,System.Int64,Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.CreateFileAsync(System.String,System.Int64,Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.CreateFileAsync(System.String,System.Int64,Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.CreateSubdirectory(System.String,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.CreateSubdirectoryAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.Delete(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteFile(System.String,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteFile(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteFileAsync(System.String,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteFileAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteSubdirectory(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteSubdirectoryAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.ForceCloseAllHandles(System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.ForceCloseAllHandlesAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.ForceCloseHandle(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.ForceCloseHandleAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetFileClient(System.String)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetFilesAndDirectories(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetFilesAndDirectoriesAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetHandles(System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetHandlesAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetProperties(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetPropertiesAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetSubdirectoryClient(System.String)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.SetHttpHeaders(Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.SetHttpHeadersAsync(Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.SetMetadata(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.SetMetadataAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareDirectoryClient.WithSnapshot(System.String)" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareDirectoryClient.AccountName" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareDirectoryClient.Name" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareDirectoryClient.Path" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareDirectoryClient.ShareName" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareDirectoryClient.Uri" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.ShareFileClient" Id="T:Azure.Storage.Files.Shares.ShareFileClient">
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.#ctor" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.#ctor(System.String,System.String,System.String)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.#ctor(System.String,System.String,System.String,Azure.Storage.Files.Shares.ShareClientOptions)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.#ctor(System.Uri,Azure.Storage.Files.Shares.ShareClientOptions)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Files.Shares.ShareClientOptions)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.AbortCopy(System.String,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.AbortCopy(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.AbortCopyAsync(System.String,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.AbortCopyAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.ClearRange(Azure.HttpRange,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.ClearRangeAsync(Azure.HttpRange,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.Create(System.Int64,Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.Create(System.Int64,Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.CreateAsync(System.Int64,Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.CreateAsync(System.Int64,Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.Delete(Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.Delete(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.DeleteAsync(Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.DeleteAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.Download(Azure.HttpRange,System.Boolean,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.Download(Azure.HttpRange,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.DownloadAsync(Azure.HttpRange,System.Boolean,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.DownloadAsync(Azure.HttpRange,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.ForceCloseAllHandles(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.ForceCloseAllHandlesAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.ForceCloseHandle(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.ForceCloseHandleAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.GetHandles(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.GetHandlesAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.GetProperties(Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.GetProperties(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.GetPropertiesAsync(Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.GetPropertiesAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.GetRangeList(Azure.HttpRange,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.GetRangeList(Azure.HttpRange,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.GetRangeListAsync(Azure.HttpRange,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.GetRangeListAsync(Azure.HttpRange,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.SetHttpHeaders(System.Nullable{System.Int64},Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders,Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.SetHttpHeaders(System.Nullable{System.Int64},Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders,Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.SetHttpHeadersAsync(System.Nullable{System.Int64},Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders,Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.SetHttpHeadersAsync(System.Nullable{System.Int64},Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders,Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.SetMetadata(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.SetMetadata(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.SetMetadataAsync(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.SetMetadataAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.StartCopy(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Nullable{Azure.Storage.Files.Shares.Models.PermissionCopyMode},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.StartCopy(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.StartCopyAsync(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Nullable{Azure.Storage.Files.Shares.Models.PermissionCopyMode},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.StartCopyAsync(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.Upload(System.IO.Stream,System.IProgress{System.Int64},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.Upload(System.IO.Stream,System.IProgress{System.Int64},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.UploadAsync(System.IO.Stream,System.IProgress{System.Int64},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.UploadAsync(System.IO.Stream,System.IProgress{System.Int64},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRange(Azure.HttpRange,System.IO.Stream,System.Byte[],System.IProgress{System.Int64},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRange(Azure.Storage.Files.Shares.Models.ShareFileRangeWriteType,Azure.HttpRange,System.IO.Stream,System.Byte[],System.IProgress{System.Int64},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRangeAsync(Azure.HttpRange,System.IO.Stream,System.Byte[],System.IProgress{System.Int64},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRangeAsync(Azure.Storage.Files.Shares.Models.ShareFileRangeWriteType,Azure.HttpRange,System.IO.Stream,System.Byte[],System.IProgress{System.Int64},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRangeFromUri(System.Uri,Azure.HttpRange,Azure.HttpRange,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRangeFromUri(System.Uri,Azure.HttpRange,Azure.HttpRange,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRangeFromUriAsync(System.Uri,Azure.HttpRange,Azure.HttpRange,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRangeFromUriAsync(System.Uri,Azure.HttpRange,Azure.HttpRange,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareFileClient.WithSnapshot(System.String)" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareFileClient.AccountName" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareFileClient.Name" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareFileClient.Path" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareFileClient.ShareName" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareFileClient.Uri" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.ShareServiceClient" Id="T:Azure.Storage.Files.Shares.ShareServiceClient">
      <Member Id="M:Azure.Storage.Files.Shares.ShareServiceClient.#ctor" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareServiceClient.#ctor(System.String)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareServiceClient.#ctor(System.String,Azure.Storage.Files.Shares.ShareClientOptions)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareServiceClient.#ctor(System.Uri,Azure.Storage.Files.Shares.ShareClientOptions)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareServiceClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Files.Shares.ShareClientOptions)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareServiceClient.CreateShare(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareServiceClient.CreateShareAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareServiceClient.DeleteShare(System.String,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareServiceClient.DeleteShareAsync(System.String,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareServiceClient.GetProperties(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareServiceClient.GetPropertiesAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareServiceClient.GetShareClient(System.String)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareServiceClient.GetShares(Azure.Storage.Files.Shares.Models.ShareTraits,Azure.Storage.Files.Shares.Models.ShareStates,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareServiceClient.GetSharesAsync(Azure.Storage.Files.Shares.Models.ShareTraits,Azure.Storage.Files.Shares.Models.ShareStates,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareServiceClient.SetProperties(Azure.Storage.Files.Shares.Models.ShareServiceProperties,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareServiceClient.SetPropertiesAsync(Azure.Storage.Files.Shares.Models.ShareServiceProperties,System.Threading.CancellationToken)" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareServiceClient.AccountName" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareServiceClient.Uri" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.ShareUriBuilder" Id="T:Azure.Storage.Files.Shares.ShareUriBuilder">
      <Member Id="M:Azure.Storage.Files.Shares.ShareUriBuilder.#ctor(System.Uri)" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareUriBuilder.ToString" />
      <Member Id="M:Azure.Storage.Files.Shares.ShareUriBuilder.ToUri" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareUriBuilder.AccountName" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareUriBuilder.DirectoryOrFilePath" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareUriBuilder.Host" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareUriBuilder.Port" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareUriBuilder.Query" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareUriBuilder.Sas" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareUriBuilder.Scheme" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareUriBuilder.ShareName" />
      <Member Id="P:Azure.Storage.Files.Shares.ShareUriBuilder.Snapshot" />
    </Type>
  </Namespace>
  <Namespace Name="Azure.Storage.Files.Shares.Specialized">
    <Type Name="Azure.Storage.Files.Shares.Specialized.ShareLeaseClient" Id="T:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient">
      <Member Id="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.#ctor" />
      <Member Id="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.#ctor(Azure.Storage.Files.Shares.ShareFileClient,System.String)" />
      <Member Id="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.Acquire(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.AcquireAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.Break(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.BreakAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.Change(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.ChangeAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.Release(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.ReleaseAsync(System.Threading.CancellationToken)" />
      <Member Id="P:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.FileClient" />
      <Member Id="P:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.LeaseId" />
      <Member Id="P:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.Uri" />
    </Type>
    <Type Name="Azure.Storage.Files.Shares.Specialized.SpecializedFileExtensions" Id="T:Azure.Storage.Files.Shares.Specialized.SpecializedFileExtensions">
      <Member Id="M:Azure.Storage.Files.Shares.Specialized.SpecializedFileExtensions.GetShareLeaseClient(Azure.Storage.Files.Shares.ShareFileClient,System.String)" />
    </Type>
  </Namespace>
  <Namespace Name="Azure.Storage.Queues.Models">
    <Type Name="Azure.Storage.Queues.Models.PeekedMessage" Id="T:Azure.Storage.Queues.Models.PeekedMessage">
      <Member Id="P:Azure.Storage.Queues.Models.PeekedMessage.DequeueCount" />
      <Member Id="P:Azure.Storage.Queues.Models.PeekedMessage.ExpiresOn" />
      <Member Id="P:Azure.Storage.Queues.Models.PeekedMessage.InsertedOn" />
      <Member Id="P:Azure.Storage.Queues.Models.PeekedMessage.MessageId" />
      <Member Id="P:Azure.Storage.Queues.Models.PeekedMessage.MessageText" />
    </Type>
    <Type Name="Azure.Storage.Queues.Models.QueueAccessPolicy" Id="T:Azure.Storage.Queues.Models.QueueAccessPolicy">
      <Member Id="M:Azure.Storage.Queues.Models.QueueAccessPolicy.#ctor" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueAccessPolicy.ExpiresOn" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueAccessPolicy.Permissions" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueAccessPolicy.StartsOn" />
    </Type>
    <Type Name="Azure.Storage.Queues.Models.QueueAnalyticsLogging" Id="T:Azure.Storage.Queues.Models.QueueAnalyticsLogging">
      <Member Id="M:Azure.Storage.Queues.Models.QueueAnalyticsLogging.#ctor" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueAnalyticsLogging.Delete" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueAnalyticsLogging.Read" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueAnalyticsLogging.RetentionPolicy" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueAnalyticsLogging.Version" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueAnalyticsLogging.Write" />
    </Type>
    <Type Name="Azure.Storage.Queues.Models.QueueCorsRule" Id="T:Azure.Storage.Queues.Models.QueueCorsRule">
      <Member Id="M:Azure.Storage.Queues.Models.QueueCorsRule.#ctor" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueCorsRule.AllowedHeaders" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueCorsRule.AllowedMethods" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueCorsRule.AllowedOrigins" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueCorsRule.ExposedHeaders" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueCorsRule.MaxAgeInSeconds" />
    </Type>
    <Type Name="Azure.Storage.Queues.Models.QueueErrorCode" Id="T:Azure.Storage.Queues.Models.QueueErrorCode">
      <Member Id="M:Azure.Storage.Queues.Models.QueueErrorCode.#ctor(System.String)" />
      <Member Id="M:Azure.Storage.Queues.Models.QueueErrorCode.Equals(Azure.Storage.Queues.Models.QueueErrorCode)" />
      <Member Id="M:Azure.Storage.Queues.Models.QueueErrorCode.Equals(System.Object)" />
      <Member Id="M:Azure.Storage.Queues.Models.QueueErrorCode.GetHashCode" />
      <Member Id="M:Azure.Storage.Queues.Models.QueueErrorCode.op_Equality(Azure.Storage.Queues.Models.QueueErrorCode,Azure.Storage.Queues.Models.QueueErrorCode)" />
      <Member Id="M:Azure.Storage.Queues.Models.QueueErrorCode.op_Implicit(System.String)~Azure.Storage.Queues.Models.QueueErrorCode" />
      <Member Id="M:Azure.Storage.Queues.Models.QueueErrorCode.op_Inequality(Azure.Storage.Queues.Models.QueueErrorCode,Azure.Storage.Queues.Models.QueueErrorCode)" />
      <Member Id="M:Azure.Storage.Queues.Models.QueueErrorCode.ToString" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.AccountAlreadyExists" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.AccountBeingCreated" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.AccountIsDisabled" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.AuthenticationFailed" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.AuthorizationFailure" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.AuthorizationPermissionMismatch" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.AuthorizationProtocolMismatch" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.AuthorizationResourceTypeMismatch" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.AuthorizationServiceMismatch" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.AuthorizationSourceIPMismatch" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.ConditionHeadersNotSupported" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.ConditionNotMet" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.EmptyMetadataKey" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.FeatureVersionMismatch" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.InsufficientAccountPermissions" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.InternalError" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.InvalidAuthenticationInfo" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.InvalidHeaderValue" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.InvalidHttpVerb" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.InvalidInput" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.InvalidMarker" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.InvalidMd5" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.InvalidMetadata" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.InvalidQueryParameterValue" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.InvalidRange" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.InvalidResourceName" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.InvalidUri" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.InvalidXmlDocument" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.InvalidXmlNodeValue" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.Md5Mismatch" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.MessageNotFound" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.MessageTooLarge" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.MetadataTooLarge" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.MissingContentLengthHeader" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.MissingRequiredHeader" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.MissingRequiredQueryParameter" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.MissingRequiredXmlNode" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.MultipleConditionHeadersNotSupported" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.OperationTimedOut" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.OutOfRangeInput" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.OutOfRangeQueryParameterValue" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.PopReceiptMismatch" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.QueueAlreadyExists" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.QueueBeingDeleted" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.QueueDisabled" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.QueueNotEmpty" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.QueueNotFound" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.RequestBodyTooLarge" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.RequestUrlFailedToParse" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.ResourceAlreadyExists" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.ResourceNotFound" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.ResourceTypeMismatch" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.ServerBusy" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.UnsupportedHeader" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.UnsupportedHttpVerb" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.UnsupportedQueryParameter" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueErrorCode.UnsupportedXmlNode" />
    </Type>
    <Type Name="Azure.Storage.Queues.Models.QueueGeoReplication" Id="T:Azure.Storage.Queues.Models.QueueGeoReplication">
      <Member Id="P:Azure.Storage.Queues.Models.QueueGeoReplication.LastSyncedOn" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueGeoReplication.Status" />
    </Type>
    <Type Name="Azure.Storage.Queues.Models.QueueGeoReplicationStatus" Id="T:Azure.Storage.Queues.Models.QueueGeoReplicationStatus">
      <Member Id="F:Azure.Storage.Queues.Models.QueueGeoReplicationStatus.Bootstrap" />
      <Member Id="F:Azure.Storage.Queues.Models.QueueGeoReplicationStatus.Live" />
      <Member Id="F:Azure.Storage.Queues.Models.QueueGeoReplicationStatus.Unavailable" />
    </Type>
    <Type Name="Azure.Storage.Queues.Models.QueueItem" Id="T:Azure.Storage.Queues.Models.QueueItem">
      <Member Id="P:Azure.Storage.Queues.Models.QueueItem.Metadata" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueItem.Name" />
    </Type>
    <Type Name="Azure.Storage.Queues.Models.QueueMessage" Id="T:Azure.Storage.Queues.Models.QueueMessage">
      <Member Id="M:Azure.Storage.Queues.Models.QueueMessage.Update(Azure.Storage.Queues.Models.UpdateReceipt)" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueMessage.DequeueCount" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueMessage.ExpiresOn" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueMessage.InsertedOn" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueMessage.MessageId" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueMessage.MessageText" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueMessage.NextVisibleOn" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueMessage.PopReceipt" />
    </Type>
    <Type Name="Azure.Storage.Queues.Models.QueueMetrics" Id="T:Azure.Storage.Queues.Models.QueueMetrics">
      <Member Id="M:Azure.Storage.Queues.Models.QueueMetrics.#ctor" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueMetrics.Enabled" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueMetrics.IncludeApis" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueMetrics.RetentionPolicy" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueMetrics.Version" />
    </Type>
    <Type Name="Azure.Storage.Queues.Models.QueueProperties" Id="T:Azure.Storage.Queues.Models.QueueProperties">
      <Member Id="M:Azure.Storage.Queues.Models.QueueProperties.#ctor" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueProperties.ApproximateMessagesCount" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueProperties.Metadata" />
    </Type>
    <Type Name="Azure.Storage.Queues.Models.QueueRetentionPolicy" Id="T:Azure.Storage.Queues.Models.QueueRetentionPolicy">
      <Member Id="M:Azure.Storage.Queues.Models.QueueRetentionPolicy.#ctor" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueRetentionPolicy.Days" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueRetentionPolicy.Enabled" />
    </Type>
    <Type Name="Azure.Storage.Queues.Models.QueueServiceProperties" Id="T:Azure.Storage.Queues.Models.QueueServiceProperties">
      <Member Id="M:Azure.Storage.Queues.Models.QueueServiceProperties.#ctor" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueServiceProperties.Cors" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueServiceProperties.HourMetrics" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueServiceProperties.Logging" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueServiceProperties.MinuteMetrics" />
    </Type>
    <Type Name="Azure.Storage.Queues.Models.QueueServiceStatistics" Id="T:Azure.Storage.Queues.Models.QueueServiceStatistics">
      <Member Id="P:Azure.Storage.Queues.Models.QueueServiceStatistics.GeoReplication" />
    </Type>
    <Type Name="Azure.Storage.Queues.Models.QueueSignedIdentifier" Id="T:Azure.Storage.Queues.Models.QueueSignedIdentifier">
      <Member Id="M:Azure.Storage.Queues.Models.QueueSignedIdentifier.#ctor" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueSignedIdentifier.AccessPolicy" />
      <Member Id="P:Azure.Storage.Queues.Models.QueueSignedIdentifier.Id" />
    </Type>
    <Type Name="Azure.Storage.Queues.Models.QueuesModelFactory" Id="T:Azure.Storage.Queues.Models.QueuesModelFactory">
      <Member Id="M:Azure.Storage.Queues.Models.QueuesModelFactory.PeekedMessage(System.String,System.String,System.Int64,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <Member Id="M:Azure.Storage.Queues.Models.QueuesModelFactory.QueueGeoReplication(Azure.Storage.Queues.Models.QueueGeoReplicationStatus,System.Nullable{System.DateTimeOffset})" />
      <Member Id="M:Azure.Storage.Queues.Models.QueuesModelFactory.QueueItem(System.String,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <Member Id="M:Azure.Storage.Queues.Models.QueuesModelFactory.QueueMessage(System.String,System.String,System.String,System.Int64,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <Member Id="M:Azure.Storage.Queues.Models.QueuesModelFactory.QueueProperties(System.Collections.Generic.IDictionary{System.String,System.String},System.Int32)" />
      <Member Id="M:Azure.Storage.Queues.Models.QueuesModelFactory.QueueServiceStatistics(Azure.Storage.Queues.Models.QueueGeoReplication)" />
      <Member Id="M:Azure.Storage.Queues.Models.QueuesModelFactory.SendReceipt(System.String,System.DateTimeOffset,System.DateTimeOffset,System.String,System.DateTimeOffset)" />
      <Member Id="M:Azure.Storage.Queues.Models.QueuesModelFactory.UpdateReceipt(System.String,System.DateTimeOffset)" />
    </Type>
    <Type Name="Azure.Storage.Queues.Models.QueueTraits" Id="T:Azure.Storage.Queues.Models.QueueTraits">
      <Member Id="F:Azure.Storage.Queues.Models.QueueTraits.Metadata" />
      <Member Id="F:Azure.Storage.Queues.Models.QueueTraits.None" />
    </Type>
    <Type Name="Azure.Storage.Queues.Models.SendReceipt" Id="T:Azure.Storage.Queues.Models.SendReceipt">
      <Member Id="P:Azure.Storage.Queues.Models.SendReceipt.ExpirationTime" />
      <Member Id="P:Azure.Storage.Queues.Models.SendReceipt.InsertionTime" />
      <Member Id="P:Azure.Storage.Queues.Models.SendReceipt.MessageId" />
      <Member Id="P:Azure.Storage.Queues.Models.SendReceipt.PopReceipt" />
      <Member Id="P:Azure.Storage.Queues.Models.SendReceipt.TimeNextVisible" />
    </Type>
    <Type Name="Azure.Storage.Queues.Models.UpdateReceipt" Id="T:Azure.Storage.Queues.Models.UpdateReceipt">
      <Member Id="P:Azure.Storage.Queues.Models.UpdateReceipt.NextVisibleOn" />
      <Member Id="P:Azure.Storage.Queues.Models.UpdateReceipt.PopReceipt" />
    </Type>
  </Namespace>
  <Namespace Name="Azure.Storage.Queues">
    <Type Name="Azure.Storage.Queues.QueueClient" Id="T:Azure.Storage.Queues.QueueClient">
      <Member Id="M:Azure.Storage.Queues.QueueClient.#ctor" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.#ctor(System.String,System.String)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.#ctor(System.String,System.String,Azure.Storage.Queues.QueueClientOptions)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Storage.Queues.QueueClientOptions)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.#ctor(System.Uri,Azure.Storage.Queues.QueueClientOptions)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Queues.QueueClientOptions)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.ClearMessages(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.ClearMessagesAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.Create(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.CreateAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.Delete(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.DeleteAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.DeleteMessage(System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.DeleteMessageAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.GetAccessPolicy(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.GetAccessPolicyAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.GetProperties(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.GetPropertiesAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.PeekMessages(System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.PeekMessagesAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.ReceiveMessages" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.ReceiveMessages(System.Nullable{System.Int32},System.Nullable{System.TimeSpan},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.ReceiveMessages(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.ReceiveMessagesAsync" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.ReceiveMessagesAsync(System.Nullable{System.Int32},System.Nullable{System.TimeSpan},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.ReceiveMessagesAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.SendMessage(System.String)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.SendMessage(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.SendMessage(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.SendMessageAsync(System.String)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.SendMessageAsync(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.SendMessageAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.SetAccessPolicy(System.Collections.Generic.IEnumerable{Azure.Storage.Queues.Models.QueueSignedIdentifier},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.SetAccessPolicyAsync(System.Collections.Generic.IEnumerable{Azure.Storage.Queues.Models.QueueSignedIdentifier},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.SetMetadata(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.SetMetadataAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.UpdateMessage(System.String,System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueClient.UpdateMessageAsync(System.String,System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)" />
      <Member Id="P:Azure.Storage.Queues.QueueClient.AccountName" />
      <Member Id="P:Azure.Storage.Queues.QueueClient.MaxPeekableMessages" />
      <Member Id="P:Azure.Storage.Queues.QueueClient.MessageMaxBytes" />
      <Member Id="P:Azure.Storage.Queues.QueueClient.MessagesUri" />
      <Member Id="P:Azure.Storage.Queues.QueueClient.Name" />
      <Member Id="P:Azure.Storage.Queues.QueueClient.Uri" />
    </Type>
    <Type Name="Azure.Storage.Queues.QueueClientOptions" Id="T:Azure.Storage.Queues.QueueClientOptions">
      <Member Id="M:Azure.Storage.Queues.QueueClientOptions.#ctor(Azure.Storage.Queues.QueueClientOptions.ServiceVersion)" />
      <Member Id="P:Azure.Storage.Queues.QueueClientOptions.GeoRedundantSecondaryUri" />
      <Member Id="P:Azure.Storage.Queues.QueueClientOptions.Version" />
    </Type>
    <Type Name="Azure.Storage.Queues.QueueClientOptions/ServiceVersion" Id="T:Azure.Storage.Queues.QueueClientOptions.ServiceVersion">
      <Member Id="F:Azure.Storage.Queues.QueueClientOptions.ServiceVersion.V2019_02_02" />
      <Member Id="F:Azure.Storage.Queues.QueueClientOptions.ServiceVersion.V2019_07_07" />
    </Type>
    <Type Name="Azure.Storage.Queues.QueueServiceClient" Id="T:Azure.Storage.Queues.QueueServiceClient">
      <Member Id="M:Azure.Storage.Queues.QueueServiceClient.#ctor" />
      <Member Id="M:Azure.Storage.Queues.QueueServiceClient.#ctor(System.String)" />
      <Member Id="M:Azure.Storage.Queues.QueueServiceClient.#ctor(System.String,Azure.Storage.Queues.QueueClientOptions)" />
      <Member Id="M:Azure.Storage.Queues.QueueServiceClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Storage.Queues.QueueClientOptions)" />
      <Member Id="M:Azure.Storage.Queues.QueueServiceClient.#ctor(System.Uri,Azure.Storage.Queues.QueueClientOptions)" />
      <Member Id="M:Azure.Storage.Queues.QueueServiceClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Queues.QueueClientOptions)" />
      <Member Id="M:Azure.Storage.Queues.QueueServiceClient.CreateQueue(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueServiceClient.CreateQueueAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueServiceClient.DeleteQueue(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueServiceClient.DeleteQueueAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueServiceClient.GetProperties(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueServiceClient.GetPropertiesAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueServiceClient.GetQueueClient(System.String)" />
      <Member Id="M:Azure.Storage.Queues.QueueServiceClient.GetQueues(Azure.Storage.Queues.Models.QueueTraits,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueServiceClient.GetQueuesAsync(Azure.Storage.Queues.Models.QueueTraits,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueServiceClient.GetStatistics(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueServiceClient.GetStatisticsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueServiceClient.SetProperties(Azure.Storage.Queues.Models.QueueServiceProperties,System.Threading.CancellationToken)" />
      <Member Id="M:Azure.Storage.Queues.QueueServiceClient.SetPropertiesAsync(Azure.Storage.Queues.Models.QueueServiceProperties,System.Threading.CancellationToken)" />
      <Member Id="P:Azure.Storage.Queues.QueueServiceClient.AccountName" />
      <Member Id="P:Azure.Storage.Queues.QueueServiceClient.Uri" />
    </Type>
    <Type Name="Azure.Storage.Queues.QueueUriBuilder" Id="T:Azure.Storage.Queues.QueueUriBuilder">
      <Member Id="M:Azure.Storage.Queues.QueueUriBuilder.#ctor(System.Uri)" />
      <Member Id="M:Azure.Storage.Queues.QueueUriBuilder.ToString" />
      <Member Id="M:Azure.Storage.Queues.QueueUriBuilder.ToUri" />
      <Member Id="P:Azure.Storage.Queues.QueueUriBuilder.AccountName" />
      <Member Id="P:Azure.Storage.Queues.QueueUriBuilder.Host" />
      <Member Id="P:Azure.Storage.Queues.QueueUriBuilder.MessageId" />
      <Member Id="P:Azure.Storage.Queues.QueueUriBuilder.Messages" />
      <Member Id="P:Azure.Storage.Queues.QueueUriBuilder.Port" />
      <Member Id="P:Azure.Storage.Queues.QueueUriBuilder.Query" />
      <Member Id="P:Azure.Storage.Queues.QueueUriBuilder.QueueName" />
      <Member Id="P:Azure.Storage.Queues.QueueUriBuilder.Sas" />
      <Member Id="P:Azure.Storage.Queues.QueueUriBuilder.Scheme" />
    </Type>
  </Namespace>
  <Namespace Name="Azure.Storage.Sas">
    <Type Name="Azure.Storage.Sas.AccountSasBuilder" Id="T:Azure.Storage.Sas.AccountSasBuilder">
      <Member Id="M:Azure.Storage.Sas.AccountSasBuilder.#ctor" />
      <Member Id="M:Azure.Storage.Sas.AccountSasBuilder.Equals(System.Object)" />
      <Member Id="M:Azure.Storage.Sas.AccountSasBuilder.GetHashCode" />
      <Member Id="M:Azure.Storage.Sas.AccountSasBuilder.SetPermissions(Azure.Storage.Sas.AccountSasPermissions)" />
      <Member Id="M:Azure.Storage.Sas.AccountSasBuilder.SetPermissions(System.String)" />
      <Member Id="M:Azure.Storage.Sas.AccountSasBuilder.ToSasQueryParameters(Azure.Storage.StorageSharedKeyCredential)" />
      <Member Id="M:Azure.Storage.Sas.AccountSasBuilder.ToString" />
      <Member Id="P:Azure.Storage.Sas.AccountSasBuilder.ExpiresOn" />
      <Member Id="P:Azure.Storage.Sas.AccountSasBuilder.IPRange" />
      <Member Id="P:Azure.Storage.Sas.AccountSasBuilder.Permissions" />
      <Member Id="P:Azure.Storage.Sas.AccountSasBuilder.Protocol" />
      <Member Id="P:Azure.Storage.Sas.AccountSasBuilder.ResourceTypes" />
      <Member Id="P:Azure.Storage.Sas.AccountSasBuilder.Services" />
      <Member Id="P:Azure.Storage.Sas.AccountSasBuilder.StartsOn" />
      <Member Id="P:Azure.Storage.Sas.AccountSasBuilder.Version" />
    </Type>
    <Type Name="Azure.Storage.Sas.AccountSasPermissions" Id="T:Azure.Storage.Sas.AccountSasPermissions">
      <Member Id="F:Azure.Storage.Sas.AccountSasPermissions.Add" />
      <Member Id="F:Azure.Storage.Sas.AccountSasPermissions.All" />
      <Member Id="F:Azure.Storage.Sas.AccountSasPermissions.Create" />
      <Member Id="F:Azure.Storage.Sas.AccountSasPermissions.Delete" />
      <Member Id="F:Azure.Storage.Sas.AccountSasPermissions.List" />
      <Member Id="F:Azure.Storage.Sas.AccountSasPermissions.Process" />
      <Member Id="F:Azure.Storage.Sas.AccountSasPermissions.Read" />
      <Member Id="F:Azure.Storage.Sas.AccountSasPermissions.Update" />
      <Member Id="F:Azure.Storage.Sas.AccountSasPermissions.Write" />
    </Type>
    <Type Name="Azure.Storage.Sas.AccountSasResourceTypes" Id="T:Azure.Storage.Sas.AccountSasResourceTypes">
      <Member Id="F:Azure.Storage.Sas.AccountSasResourceTypes.All" />
      <Member Id="F:Azure.Storage.Sas.AccountSasResourceTypes.Container" />
      <Member Id="F:Azure.Storage.Sas.AccountSasResourceTypes.Object" />
      <Member Id="F:Azure.Storage.Sas.AccountSasResourceTypes.Service" />
    </Type>
    <Type Name="Azure.Storage.Sas.AccountSasServices" Id="T:Azure.Storage.Sas.AccountSasServices">
      <Member Id="F:Azure.Storage.Sas.AccountSasServices.All" />
      <Member Id="F:Azure.Storage.Sas.AccountSasServices.Blobs" />
      <Member Id="F:Azure.Storage.Sas.AccountSasServices.Files" />
      <Member Id="F:Azure.Storage.Sas.AccountSasServices.Queues" />
      <Member Id="F:Azure.Storage.Sas.AccountSasServices.Tables" />
    </Type>
    <Type Name="Azure.Storage.Sas.BlobAccountSasPermissions" Id="T:Azure.Storage.Sas.BlobAccountSasPermissions">
      <Member Id="F:Azure.Storage.Sas.BlobAccountSasPermissions.Add" />
      <Member Id="F:Azure.Storage.Sas.BlobAccountSasPermissions.All" />
      <Member Id="F:Azure.Storage.Sas.BlobAccountSasPermissions.Create" />
      <Member Id="F:Azure.Storage.Sas.BlobAccountSasPermissions.Delete" />
      <Member Id="F:Azure.Storage.Sas.BlobAccountSasPermissions.List" />
      <Member Id="F:Azure.Storage.Sas.BlobAccountSasPermissions.Read" />
      <Member Id="F:Azure.Storage.Sas.BlobAccountSasPermissions.Write" />
    </Type>
    <Type Name="Azure.Storage.Sas.BlobContainerSasPermissions" Id="T:Azure.Storage.Sas.BlobContainerSasPermissions">
      <Member Id="F:Azure.Storage.Sas.BlobContainerSasPermissions.Add" />
      <Member Id="F:Azure.Storage.Sas.BlobContainerSasPermissions.All" />
      <Member Id="F:Azure.Storage.Sas.BlobContainerSasPermissions.Create" />
      <Member Id="F:Azure.Storage.Sas.BlobContainerSasPermissions.Delete" />
      <Member Id="F:Azure.Storage.Sas.BlobContainerSasPermissions.List" />
      <Member Id="F:Azure.Storage.Sas.BlobContainerSasPermissions.Read" />
      <Member Id="F:Azure.Storage.Sas.BlobContainerSasPermissions.Write" />
    </Type>
    <Type Name="Azure.Storage.Sas.BlobSasBuilder" Id="T:Azure.Storage.Sas.BlobSasBuilder">
      <Member Id="M:Azure.Storage.Sas.BlobSasBuilder.#ctor" />
      <Member Id="M:Azure.Storage.Sas.BlobSasBuilder.Equals(System.Object)" />
      <Member Id="M:Azure.Storage.Sas.BlobSasBuilder.GetHashCode" />
      <Member Id="M:Azure.Storage.Sas.BlobSasBuilder.SetPermissions(Azure.Storage.Sas.BlobAccountSasPermissions)" />
      <Member Id="M:Azure.Storage.Sas.BlobSasBuilder.SetPermissions(Azure.Storage.Sas.BlobContainerSasPermissions)" />
      <Member Id="M:Azure.Storage.Sas.BlobSasBuilder.SetPermissions(Azure.Storage.Sas.BlobSasPermissions)" />
      <Member Id="M:Azure.Storage.Sas.BlobSasBuilder.SetPermissions(Azure.Storage.Sas.SnapshotSasPermissions)" />
      <Member Id="M:Azure.Storage.Sas.BlobSasBuilder.SetPermissions(System.String)" />
      <Member Id="M:Azure.Storage.Sas.BlobSasBuilder.ToSasQueryParameters(Azure.Storage.Blobs.Models.UserDelegationKey,System.String)" />
      <Member Id="M:Azure.Storage.Sas.BlobSasBuilder.ToSasQueryParameters(Azure.Storage.StorageSharedKeyCredential)" />
      <Member Id="M:Azure.Storage.Sas.BlobSasBuilder.ToString" />
      <Member Id="P:Azure.Storage.Sas.BlobSasBuilder.BlobContainerName" />
      <Member Id="P:Azure.Storage.Sas.BlobSasBuilder.BlobName" />
      <Member Id="P:Azure.Storage.Sas.BlobSasBuilder.CacheControl" />
      <Member Id="P:Azure.Storage.Sas.BlobSasBuilder.ContentDisposition" />
      <Member Id="P:Azure.Storage.Sas.BlobSasBuilder.ContentEncoding" />
      <Member Id="P:Azure.Storage.Sas.BlobSasBuilder.ContentLanguage" />
      <Member Id="P:Azure.Storage.Sas.BlobSasBuilder.ContentType" />
      <Member Id="P:Azure.Storage.Sas.BlobSasBuilder.ExpiresOn" />
      <Member Id="P:Azure.Storage.Sas.BlobSasBuilder.Identifier" />
      <Member Id="P:Azure.Storage.Sas.BlobSasBuilder.IPRange" />
      <Member Id="P:Azure.Storage.Sas.BlobSasBuilder.Permissions" />
      <Member Id="P:Azure.Storage.Sas.BlobSasBuilder.Protocol" />
      <Member Id="P:Azure.Storage.Sas.BlobSasBuilder.Resource" />
      <Member Id="P:Azure.Storage.Sas.BlobSasBuilder.Snapshot" />
      <Member Id="P:Azure.Storage.Sas.BlobSasBuilder.StartsOn" />
      <Member Id="P:Azure.Storage.Sas.BlobSasBuilder.Version" />
    </Type>
    <Type Name="Azure.Storage.Sas.BlobSasPermissions" Id="T:Azure.Storage.Sas.BlobSasPermissions">
      <Member Id="F:Azure.Storage.Sas.BlobSasPermissions.Add" />
      <Member Id="F:Azure.Storage.Sas.BlobSasPermissions.All" />
      <Member Id="F:Azure.Storage.Sas.BlobSasPermissions.Create" />
      <Member Id="F:Azure.Storage.Sas.BlobSasPermissions.Delete" />
      <Member Id="F:Azure.Storage.Sas.BlobSasPermissions.Read" />
      <Member Id="F:Azure.Storage.Sas.BlobSasPermissions.Write" />
    </Type>
    <Type Name="Azure.Storage.Sas.BlobSasQueryParameters" Id="T:Azure.Storage.Sas.BlobSasQueryParameters">
      <Member Id="M:Azure.Storage.Sas.BlobSasQueryParameters.ToString" />
      <Member Id="P:Azure.Storage.Sas.BlobSasQueryParameters.Empty" />
      <Member Id="P:Azure.Storage.Sas.BlobSasQueryParameters.KeyExpiresOn" />
      <Member Id="P:Azure.Storage.Sas.BlobSasQueryParameters.KeyObjectId" />
      <Member Id="P:Azure.Storage.Sas.BlobSasQueryParameters.KeyService" />
      <Member Id="P:Azure.Storage.Sas.BlobSasQueryParameters.KeyStartsOn" />
      <Member Id="P:Azure.Storage.Sas.BlobSasQueryParameters.KeyTenantId" />
      <Member Id="P:Azure.Storage.Sas.BlobSasQueryParameters.KeyVersion" />
    </Type>
    <Type Name="Azure.Storage.Sas.QueueAccountSasPermissions" Id="T:Azure.Storage.Sas.QueueAccountSasPermissions">
      <Member Id="F:Azure.Storage.Sas.QueueAccountSasPermissions.Add" />
      <Member Id="F:Azure.Storage.Sas.QueueAccountSasPermissions.All" />
      <Member Id="F:Azure.Storage.Sas.QueueAccountSasPermissions.Delete" />
      <Member Id="F:Azure.Storage.Sas.QueueAccountSasPermissions.List" />
      <Member Id="F:Azure.Storage.Sas.QueueAccountSasPermissions.Process" />
      <Member Id="F:Azure.Storage.Sas.QueueAccountSasPermissions.Read" />
      <Member Id="F:Azure.Storage.Sas.QueueAccountSasPermissions.Update" />
      <Member Id="F:Azure.Storage.Sas.QueueAccountSasPermissions.Write" />
    </Type>
    <Type Name="Azure.Storage.Sas.QueueSasBuilder" Id="T:Azure.Storage.Sas.QueueSasBuilder">
      <Member Id="M:Azure.Storage.Sas.QueueSasBuilder.#ctor" />
      <Member Id="M:Azure.Storage.Sas.QueueSasBuilder.Equals(System.Object)" />
      <Member Id="M:Azure.Storage.Sas.QueueSasBuilder.GetHashCode" />
      <Member Id="M:Azure.Storage.Sas.QueueSasBuilder.SetPermissions(Azure.Storage.Sas.QueueAccountSasPermissions)" />
      <Member Id="M:Azure.Storage.Sas.QueueSasBuilder.SetPermissions(Azure.Storage.Sas.QueueSasPermissions)" />
      <Member Id="M:Azure.Storage.Sas.QueueSasBuilder.SetPermissions(System.String)" />
      <Member Id="M:Azure.Storage.Sas.QueueSasBuilder.ToSasQueryParameters(Azure.Storage.StorageSharedKeyCredential)" />
      <Member Id="M:Azure.Storage.Sas.QueueSasBuilder.ToString" />
      <Member Id="P:Azure.Storage.Sas.QueueSasBuilder.ExpiresOn" />
      <Member Id="P:Azure.Storage.Sas.QueueSasBuilder.Identifier" />
      <Member Id="P:Azure.Storage.Sas.QueueSasBuilder.IPRange" />
      <Member Id="P:Azure.Storage.Sas.QueueSasBuilder.Permissions" />
      <Member Id="P:Azure.Storage.Sas.QueueSasBuilder.Protocol" />
      <Member Id="P:Azure.Storage.Sas.QueueSasBuilder.QueueName" />
      <Member Id="P:Azure.Storage.Sas.QueueSasBuilder.StartsOn" />
      <Member Id="P:Azure.Storage.Sas.QueueSasBuilder.Version" />
    </Type>
    <Type Name="Azure.Storage.Sas.QueueSasPermissions" Id="T:Azure.Storage.Sas.QueueSasPermissions">
      <Member Id="F:Azure.Storage.Sas.QueueSasPermissions.Add" />
      <Member Id="F:Azure.Storage.Sas.QueueSasPermissions.All" />
      <Member Id="F:Azure.Storage.Sas.QueueSasPermissions.Process" />
      <Member Id="F:Azure.Storage.Sas.QueueSasPermissions.Read" />
      <Member Id="F:Azure.Storage.Sas.QueueSasPermissions.Update" />
    </Type>
    <Type Name="Azure.Storage.Sas.SasIPRange" Id="T:Azure.Storage.Sas.SasIPRange">
      <Member Id="M:Azure.Storage.Sas.SasIPRange.#ctor(System.Net.IPAddress,System.Net.IPAddress)" />
      <Member Id="M:Azure.Storage.Sas.SasIPRange.Equals(Azure.Storage.Sas.SasIPRange)" />
      <Member Id="M:Azure.Storage.Sas.SasIPRange.Equals(System.Object)" />
      <Member Id="M:Azure.Storage.Sas.SasIPRange.GetHashCode" />
      <Member Id="M:Azure.Storage.Sas.SasIPRange.op_Equality(Azure.Storage.Sas.SasIPRange,Azure.Storage.Sas.SasIPRange)" />
      <Member Id="M:Azure.Storage.Sas.SasIPRange.op_Inequality(Azure.Storage.Sas.SasIPRange,Azure.Storage.Sas.SasIPRange)" />
      <Member Id="M:Azure.Storage.Sas.SasIPRange.Parse(System.String)" />
      <Member Id="M:Azure.Storage.Sas.SasIPRange.ToString" />
      <Member Id="P:Azure.Storage.Sas.SasIPRange.End" />
      <Member Id="P:Azure.Storage.Sas.SasIPRange.Start" />
    </Type>
    <Type Name="Azure.Storage.Sas.SasProtocol" Id="T:Azure.Storage.Sas.SasProtocol">
      <Member Id="F:Azure.Storage.Sas.SasProtocol.Https" />
      <Member Id="F:Azure.Storage.Sas.SasProtocol.HttpsAndHttp" />
      <Member Id="F:Azure.Storage.Sas.SasProtocol.None" />
    </Type>
    <Type Name="Azure.Storage.Sas.SasQueryParameters" Id="T:Azure.Storage.Sas.SasQueryParameters">
      <Member Id="F:Azure.Storage.Sas.SasQueryParameters.DefaultSasVersion" />
      <Member Id="M:Azure.Storage.Sas.SasQueryParameters.#ctor" />
      <Member Id="M:Azure.Storage.Sas.SasQueryParameters.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})" />
      <Member Id="M:Azure.Storage.Sas.SasQueryParameters.#ctor(System.String,System.Nullable{Azure.Storage.Sas.AccountSasServices},System.Nullable{Azure.Storage.Sas.AccountSasResourceTypes},Azure.Storage.Sas.SasProtocol,System.DateTimeOffset,System.DateTimeOffset,Azure.Storage.Sas.SasIPRange,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)" />
      <Member Id="M:Azure.Storage.Sas.SasQueryParameters.Create(System.Collections.Generic.IDictionary{System.String,System.String})" />
      <Member Id="M:Azure.Storage.Sas.SasQueryParameters.Create(System.String,System.Nullable{Azure.Storage.Sas.AccountSasServices},System.Nullable{Azure.Storage.Sas.AccountSasResourceTypes},Azure.Storage.Sas.SasProtocol,System.DateTimeOffset,System.DateTimeOffset,Azure.Storage.Sas.SasIPRange,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)" />
      <Member Id="M:Azure.Storage.Sas.SasQueryParameters.ToString" />
      <Member Id="P:Azure.Storage.Sas.SasQueryParameters.CacheControl" />
      <Member Id="P:Azure.Storage.Sas.SasQueryParameters.ContentDisposition" />
      <Member Id="P:Azure.Storage.Sas.SasQueryParameters.ContentEncoding" />
      <Member Id="P:Azure.Storage.Sas.SasQueryParameters.ContentLanguage" />
      <Member Id="P:Azure.Storage.Sas.SasQueryParameters.ContentType" />
      <Member Id="P:Azure.Storage.Sas.SasQueryParameters.Empty" />
      <Member Id="P:Azure.Storage.Sas.SasQueryParameters.ExpiresOn" />
      <Member Id="P:Azure.Storage.Sas.SasQueryParameters.Identifier" />
      <Member Id="P:Azure.Storage.Sas.SasQueryParameters.IPRange" />
      <Member Id="P:Azure.Storage.Sas.SasQueryParameters.Permissions" />
      <Member Id="P:Azure.Storage.Sas.SasQueryParameters.Protocol" />
      <Member Id="P:Azure.Storage.Sas.SasQueryParameters.Resource" />
      <Member Id="P:Azure.Storage.Sas.SasQueryParameters.ResourceTypes" />
      <Member Id="P:Azure.Storage.Sas.SasQueryParameters.Services" />
      <Member Id="P:Azure.Storage.Sas.SasQueryParameters.Signature" />
      <Member Id="P:Azure.Storage.Sas.SasQueryParameters.StartsOn" />
      <Member Id="P:Azure.Storage.Sas.SasQueryParameters.Version" />
    </Type>
    <Type Name="Azure.Storage.Sas.ShareAccountSasPermissions" Id="T:Azure.Storage.Sas.ShareAccountSasPermissions">
      <Member Id="F:Azure.Storage.Sas.ShareAccountSasPermissions.Add" />
      <Member Id="F:Azure.Storage.Sas.ShareAccountSasPermissions.All" />
      <Member Id="F:Azure.Storage.Sas.ShareAccountSasPermissions.Create" />
      <Member Id="F:Azure.Storage.Sas.ShareAccountSasPermissions.Delete" />
      <Member Id="F:Azure.Storage.Sas.ShareAccountSasPermissions.List" />
      <Member Id="F:Azure.Storage.Sas.ShareAccountSasPermissions.Read" />
      <Member Id="F:Azure.Storage.Sas.ShareAccountSasPermissions.Write" />
    </Type>
    <Type Name="Azure.Storage.Sas.ShareFileSasPermissions" Id="T:Azure.Storage.Sas.ShareFileSasPermissions">
      <Member Id="F:Azure.Storage.Sas.ShareFileSasPermissions.All" />
      <Member Id="F:Azure.Storage.Sas.ShareFileSasPermissions.Create" />
      <Member Id="F:Azure.Storage.Sas.ShareFileSasPermissions.Delete" />
      <Member Id="F:Azure.Storage.Sas.ShareFileSasPermissions.Read" />
      <Member Id="F:Azure.Storage.Sas.ShareFileSasPermissions.Write" />
    </Type>
    <Type Name="Azure.Storage.Sas.ShareSasBuilder" Id="T:Azure.Storage.Sas.ShareSasBuilder">
      <Member Id="M:Azure.Storage.Sas.ShareSasBuilder.#ctor" />
      <Member Id="M:Azure.Storage.Sas.ShareSasBuilder.Equals(System.Object)" />
      <Member Id="M:Azure.Storage.Sas.ShareSasBuilder.GetHashCode" />
      <Member Id="M:Azure.Storage.Sas.ShareSasBuilder.SetPermissions(Azure.Storage.Sas.ShareAccountSasPermissions)" />
      <Member Id="M:Azure.Storage.Sas.ShareSasBuilder.SetPermissions(Azure.Storage.Sas.ShareFileSasPermissions)" />
      <Member Id="M:Azure.Storage.Sas.ShareSasBuilder.SetPermissions(Azure.Storage.Sas.ShareSasPermissions)" />
      <Member Id="M:Azure.Storage.Sas.ShareSasBuilder.SetPermissions(System.String)" />
      <Member Id="M:Azure.Storage.Sas.ShareSasBuilder.ToSasQueryParameters(Azure.Storage.StorageSharedKeyCredential)" />
      <Member Id="M:Azure.Storage.Sas.ShareSasBuilder.ToString" />
      <Member Id="P:Azure.Storage.Sas.ShareSasBuilder.CacheControl" />
      <Member Id="P:Azure.Storage.Sas.ShareSasBuilder.ContentDisposition" />
      <Member Id="P:Azure.Storage.Sas.ShareSasBuilder.ContentEncoding" />
      <Member Id="P:Azure.Storage.Sas.ShareSasBuilder.ContentLanguage" />
      <Member Id="P:Azure.Storage.Sas.ShareSasBuilder.ContentType" />
      <Member Id="P:Azure.Storage.Sas.ShareSasBuilder.ExpiresOn" />
      <Member Id="P:Azure.Storage.Sas.ShareSasBuilder.FilePath" />
      <Member Id="P:Azure.Storage.Sas.ShareSasBuilder.Identifier" />
      <Member Id="P:Azure.Storage.Sas.ShareSasBuilder.IPRange" />
      <Member Id="P:Azure.Storage.Sas.ShareSasBuilder.Permissions" />
      <Member Id="P:Azure.Storage.Sas.ShareSasBuilder.Protocol" />
      <Member Id="P:Azure.Storage.Sas.ShareSasBuilder.Resource" />
      <Member Id="P:Azure.Storage.Sas.ShareSasBuilder.ShareName" />
      <Member Id="P:Azure.Storage.Sas.ShareSasBuilder.StartsOn" />
      <Member Id="P:Azure.Storage.Sas.ShareSasBuilder.Version" />
    </Type>
    <Type Name="Azure.Storage.Sas.ShareSasPermissions" Id="T:Azure.Storage.Sas.ShareSasPermissions">
      <Member Id="F:Azure.Storage.Sas.ShareSasPermissions.All" />
      <Member Id="F:Azure.Storage.Sas.ShareSasPermissions.Create" />
      <Member Id="F:Azure.Storage.Sas.ShareSasPermissions.Delete" />
      <Member Id="F:Azure.Storage.Sas.ShareSasPermissions.List" />
      <Member Id="F:Azure.Storage.Sas.ShareSasPermissions.Read" />
      <Member Id="F:Azure.Storage.Sas.ShareSasPermissions.Write" />
    </Type>
    <Type Name="Azure.Storage.Sas.SnapshotSasPermissions" Id="T:Azure.Storage.Sas.SnapshotSasPermissions">
      <Member Id="F:Azure.Storage.Sas.SnapshotSasPermissions.All" />
      <Member Id="F:Azure.Storage.Sas.SnapshotSasPermissions.Delete" />
      <Member Id="F:Azure.Storage.Sas.SnapshotSasPermissions.Read" />
      <Member Id="F:Azure.Storage.Sas.SnapshotSasPermissions.Write" />
    </Type>
  </Namespace>
  <Namespace Name="Azure.Storage">
    <Type Name="Azure.Storage.StorageSharedKeyCredential" Id="T:Azure.Storage.StorageSharedKeyCredential">
      <Member Id="M:Azure.Storage.StorageSharedKeyCredential.#ctor(System.String,System.String)" />
      <Member Id="M:Azure.Storage.StorageSharedKeyCredential.ComputeSasSignature(Azure.Storage.StorageSharedKeyCredential,System.String)" />
      <Member Id="M:Azure.Storage.StorageSharedKeyCredential.SetAccountKey(System.String)" />
      <Member Id="P:Azure.Storage.StorageSharedKeyCredential.AccountName" />
    </Type>
    <Type Name="Azure.Storage.StorageTransferOptions" Id="T:Azure.Storage.StorageTransferOptions">
      <Member Id="M:Azure.Storage.StorageTransferOptions.Equals(Azure.Storage.StorageTransferOptions)" />
      <Member Id="M:Azure.Storage.StorageTransferOptions.Equals(System.Object)" />
      <Member Id="M:Azure.Storage.StorageTransferOptions.GetHashCode" />
      <Member Id="M:Azure.Storage.StorageTransferOptions.op_Equality(Azure.Storage.StorageTransferOptions,Azure.Storage.StorageTransferOptions)" />
      <Member Id="M:Azure.Storage.StorageTransferOptions.op_Inequality(Azure.Storage.StorageTransferOptions,Azure.Storage.StorageTransferOptions)" />
      <Member Id="P:Azure.Storage.StorageTransferOptions.MaximumConcurrency" />
      <Member Id="P:Azure.Storage.StorageTransferOptions.MaximumTransferLength" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Management.Storage">
    <Type Name="Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions" Id="T:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions">
      <Member Id="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.ClearLegalHold(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,System.Collections.Generic.IList{System.String})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.ClearLegalHoldAsync(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.Create(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.PublicAccess},System.Collections.Generic.IDictionary{System.String,System.String})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.CreateAsync(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.PublicAccess},System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.CreateOrUpdateImmutabilityPolicy(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,System.Int32,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.CreateOrUpdateImmutabilityPolicyAsync(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,System.Int32,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.Delete(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.DeleteImmutabilityPolicy(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.DeleteImmutabilityPolicyAsync(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.ExtendImmutabilityPolicy(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,System.String,System.Int32)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.ExtendImmutabilityPolicyAsync(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.Get(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.GetAsync(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.GetImmutabilityPolicy(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.GetImmutabilityPolicyAsync(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.Lease(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.LeaseContainerRequest)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.LeaseAsync(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.LeaseContainerRequest,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.List(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.ListAsync(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.ListNext(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.LockImmutabilityPolicy(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.LockImmutabilityPolicyAsync(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.SetLegalHold(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,System.Collections.Generic.IList{System.String})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.SetLegalHoldAsync(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.Update(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.PublicAccess},System.Collections.Generic.IDictionary{System.String,System.String})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.PublicAccess},System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.BlobServicesOperationsExtensions" Id="T:Microsoft.Azure.Management.Storage.BlobServicesOperationsExtensions">
      <Member Id="M:Microsoft.Azure.Management.Storage.BlobServicesOperationsExtensions.GetServiceProperties(Microsoft.Azure.Management.Storage.IBlobServicesOperations,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.BlobServicesOperationsExtensions.GetServicePropertiesAsync(Microsoft.Azure.Management.Storage.IBlobServicesOperations,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.BlobServicesOperationsExtensions.List(Microsoft.Azure.Management.Storage.IBlobServicesOperations,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.BlobServicesOperationsExtensions.ListAsync(Microsoft.Azure.Management.Storage.IBlobServicesOperations,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.BlobServicesOperationsExtensions.SetServiceProperties(Microsoft.Azure.Management.Storage.IBlobServicesOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Models.BlobServiceProperties)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.BlobServicesOperationsExtensions.SetServicePropertiesAsync(Microsoft.Azure.Management.Storage.IBlobServicesOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Models.BlobServiceProperties,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.FileServicesOperationsExtensions" Id="T:Microsoft.Azure.Management.Storage.FileServicesOperationsExtensions">
      <Member Id="M:Microsoft.Azure.Management.Storage.FileServicesOperationsExtensions.GetServiceProperties(Microsoft.Azure.Management.Storage.IFileServicesOperations,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.FileServicesOperationsExtensions.GetServicePropertiesAsync(Microsoft.Azure.Management.Storage.IFileServicesOperations,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.FileServicesOperationsExtensions.List(Microsoft.Azure.Management.Storage.IFileServicesOperations,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.FileServicesOperationsExtensions.ListAsync(Microsoft.Azure.Management.Storage.IFileServicesOperations,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.FileServicesOperationsExtensions.SetServiceProperties(Microsoft.Azure.Management.Storage.IFileServicesOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Models.CorsRules,Microsoft.Azure.Management.Storage.Models.DeleteRetentionPolicy)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.FileServicesOperationsExtensions.SetServicePropertiesAsync(Microsoft.Azure.Management.Storage.IFileServicesOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Models.CorsRules,Microsoft.Azure.Management.Storage.Models.DeleteRetentionPolicy,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.FileSharesOperationsExtensions" Id="T:Microsoft.Azure.Management.Storage.FileSharesOperationsExtensions">
      <Member Id="M:Microsoft.Azure.Management.Storage.FileSharesOperationsExtensions.Create(Microsoft.Azure.Management.Storage.IFileSharesOperations,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.FileSharesOperationsExtensions.CreateAsync(Microsoft.Azure.Management.Storage.IFileSharesOperations,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.FileSharesOperationsExtensions.Delete(Microsoft.Azure.Management.Storage.IFileSharesOperations,System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.FileSharesOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Storage.IFileSharesOperations,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.FileSharesOperationsExtensions.Get(Microsoft.Azure.Management.Storage.IFileSharesOperations,System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.FileSharesOperationsExtensions.GetAsync(Microsoft.Azure.Management.Storage.IFileSharesOperations,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.FileSharesOperationsExtensions.List(Microsoft.Azure.Management.Storage.IFileSharesOperations,System.String,System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.FileSharesOperationsExtensions.ListAsync(Microsoft.Azure.Management.Storage.IFileSharesOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.FileSharesOperationsExtensions.ListNext(Microsoft.Azure.Management.Storage.IFileSharesOperations,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.FileSharesOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Storage.IFileSharesOperations,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.FileSharesOperationsExtensions.Update(Microsoft.Azure.Management.Storage.IFileSharesOperations,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.FileSharesOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.Storage.IFileSharesOperations,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.IBlobContainersOperations" Id="T:Microsoft.Azure.Management.Storage.IBlobContainersOperations">
      <Member Id="M:Microsoft.Azure.Management.Storage.IBlobContainersOperations.ClearLegalHoldWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.IBlobContainersOperations.CreateOrUpdateImmutabilityPolicyWithHttpMessagesAsync(System.String,System.String,System.String,System.Int32,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.IBlobContainersOperations.CreateWithHttpMessagesAsync(System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.PublicAccess},System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.IBlobContainersOperations.DeleteImmutabilityPolicyWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.IBlobContainersOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.IBlobContainersOperations.ExtendImmutabilityPolicyWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.IBlobContainersOperations.GetImmutabilityPolicyWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.IBlobContainersOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.IBlobContainersOperations.LeaseWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.LeaseContainerRequest,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.IBlobContainersOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.IBlobContainersOperations.ListWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.IBlobContainersOperations.LockImmutabilityPolicyWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.IBlobContainersOperations.SetLegalHoldWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.IBlobContainersOperations.UpdateWithHttpMessagesAsync(System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.PublicAccess},System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.IBlobServicesOperations" Id="T:Microsoft.Azure.Management.Storage.IBlobServicesOperations">
      <Member Id="M:Microsoft.Azure.Management.Storage.IBlobServicesOperations.GetServicePropertiesWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.IBlobServicesOperations.ListWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.IBlobServicesOperations.SetServicePropertiesWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Models.BlobServiceProperties,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.IFileServicesOperations" Id="T:Microsoft.Azure.Management.Storage.IFileServicesOperations">
      <Member Id="M:Microsoft.Azure.Management.Storage.IFileServicesOperations.GetServicePropertiesWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.IFileServicesOperations.ListWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.IFileServicesOperations.SetServicePropertiesWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Models.CorsRules,Microsoft.Azure.Management.Storage.Models.DeleteRetentionPolicy,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.IFileSharesOperations" Id="T:Microsoft.Azure.Management.Storage.IFileSharesOperations">
      <Member Id="M:Microsoft.Azure.Management.Storage.IFileSharesOperations.CreateWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.IFileSharesOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.IFileSharesOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.IFileSharesOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.IFileSharesOperations.ListWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.IFileSharesOperations.UpdateWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.IManagementPoliciesOperations" Id="T:Microsoft.Azure.Management.Storage.IManagementPoliciesOperations">
      <Member Id="M:Microsoft.Azure.Management.Storage.IManagementPoliciesOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Models.ManagementPolicySchema,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.IManagementPoliciesOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.IManagementPoliciesOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.IOperations" Id="T:Microsoft.Azure.Management.Storage.IOperations">
      <Member Id="M:Microsoft.Azure.Management.Storage.IOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.IPrivateEndpointConnectionsOperations" Id="T:Microsoft.Azure.Management.Storage.IPrivateEndpointConnectionsOperations">
      <Member Id="M:Microsoft.Azure.Management.Storage.IPrivateEndpointConnectionsOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.IPrivateEndpointConnectionsOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.IPrivateEndpointConnectionsOperations.PutWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.PrivateEndpointConnection,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.IPrivateLinkResourcesOperations" Id="T:Microsoft.Azure.Management.Storage.IPrivateLinkResourcesOperations">
      <Member Id="M:Microsoft.Azure.Management.Storage.IPrivateLinkResourcesOperations.ListByStorageAccountWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.ISkusOperations" Id="T:Microsoft.Azure.Management.Storage.ISkusOperations">
      <Member Id="M:Microsoft.Azure.Management.Storage.ISkusOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.IStorageAccountsOperations" Id="T:Microsoft.Azure.Management.Storage.IStorageAccountsOperations">
      <Member Id="M:Microsoft.Azure.Management.Storage.IStorageAccountsOperations.BeginCreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.IStorageAccountsOperations.BeginFailoverWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.IStorageAccountsOperations.BeginRestoreBlobRangesWithHttpMessagesAsync(System.String,System.String,System.DateTime,System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.BlobRestoreRange},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.IStorageAccountsOperations.CheckNameAvailabilityWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.IStorageAccountsOperations.CreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.IStorageAccountsOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.IStorageAccountsOperations.FailoverWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.IStorageAccountsOperations.GetPropertiesWithHttpMessagesAsync(System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.StorageAccountExpand},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.IStorageAccountsOperations.ListAccountSASWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Models.AccountSasParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.IStorageAccountsOperations.ListByResourceGroupWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.IStorageAccountsOperations.ListKeysWithHttpMessagesAsync(System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.ListKeyExpand},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.IStorageAccountsOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.IStorageAccountsOperations.ListServiceSASWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Models.ServiceSasParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.IStorageAccountsOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.IStorageAccountsOperations.RegenerateKeyWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.IStorageAccountsOperations.RestoreBlobRangesWithHttpMessagesAsync(System.String,System.String,System.DateTime,System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.BlobRestoreRange},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.IStorageAccountsOperations.RevokeUserDelegationKeysWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.IStorageAccountsOperations.UpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.IStorageManagementClient" Id="T:Microsoft.Azure.Management.Storage.IStorageManagementClient">
      <Member Id="P:Microsoft.Azure.Management.Storage.IStorageManagementClient.AcceptLanguage" />
      <Member Id="P:Microsoft.Azure.Management.Storage.IStorageManagementClient.ApiVersion" />
      <Member Id="P:Microsoft.Azure.Management.Storage.IStorageManagementClient.BaseUri" />
      <Member Id="P:Microsoft.Azure.Management.Storage.IStorageManagementClient.BlobContainers" />
      <Member Id="P:Microsoft.Azure.Management.Storage.IStorageManagementClient.BlobServices" />
      <Member Id="P:Microsoft.Azure.Management.Storage.IStorageManagementClient.Credentials" />
      <Member Id="P:Microsoft.Azure.Management.Storage.IStorageManagementClient.DeserializationSettings" />
      <Member Id="P:Microsoft.Azure.Management.Storage.IStorageManagementClient.FileServices" />
      <Member Id="P:Microsoft.Azure.Management.Storage.IStorageManagementClient.FileShares" />
      <Member Id="P:Microsoft.Azure.Management.Storage.IStorageManagementClient.GenerateClientRequestId" />
      <Member Id="P:Microsoft.Azure.Management.Storage.IStorageManagementClient.LongRunningOperationRetryTimeout" />
      <Member Id="P:Microsoft.Azure.Management.Storage.IStorageManagementClient.ManagementPolicies" />
      <Member Id="P:Microsoft.Azure.Management.Storage.IStorageManagementClient.Operations" />
      <Member Id="P:Microsoft.Azure.Management.Storage.IStorageManagementClient.PrivateEndpointConnections" />
      <Member Id="P:Microsoft.Azure.Management.Storage.IStorageManagementClient.PrivateLinkResources" />
      <Member Id="P:Microsoft.Azure.Management.Storage.IStorageManagementClient.SerializationSettings" />
      <Member Id="P:Microsoft.Azure.Management.Storage.IStorageManagementClient.Skus" />
      <Member Id="P:Microsoft.Azure.Management.Storage.IStorageManagementClient.StorageAccounts" />
      <Member Id="P:Microsoft.Azure.Management.Storage.IStorageManagementClient.SubscriptionId" />
      <Member Id="P:Microsoft.Azure.Management.Storage.IStorageManagementClient.Usages" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.IUsagesOperations" Id="T:Microsoft.Azure.Management.Storage.IUsagesOperations">
      <Member Id="M:Microsoft.Azure.Management.Storage.IUsagesOperations.ListByLocationWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.ManagementPoliciesOperationsExtensions" Id="T:Microsoft.Azure.Management.Storage.ManagementPoliciesOperationsExtensions">
      <Member Id="M:Microsoft.Azure.Management.Storage.ManagementPoliciesOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.Storage.IManagementPoliciesOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Models.ManagementPolicySchema)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.ManagementPoliciesOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Storage.IManagementPoliciesOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Models.ManagementPolicySchema,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.ManagementPoliciesOperationsExtensions.Delete(Microsoft.Azure.Management.Storage.IManagementPoliciesOperations,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.ManagementPoliciesOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Storage.IManagementPoliciesOperations,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.ManagementPoliciesOperationsExtensions.Get(Microsoft.Azure.Management.Storage.IManagementPoliciesOperations,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.ManagementPoliciesOperationsExtensions.GetAsync(Microsoft.Azure.Management.Storage.IManagementPoliciesOperations,System.String,System.String,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.OperationsExtensions" Id="T:Microsoft.Azure.Management.Storage.OperationsExtensions">
      <Member Id="M:Microsoft.Azure.Management.Storage.OperationsExtensions.List(Microsoft.Azure.Management.Storage.IOperations)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.OperationsExtensions.ListAsync(Microsoft.Azure.Management.Storage.IOperations,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.PrivateEndpointConnectionsOperationsExtensions" Id="T:Microsoft.Azure.Management.Storage.PrivateEndpointConnectionsOperationsExtensions">
      <Member Id="M:Microsoft.Azure.Management.Storage.PrivateEndpointConnectionsOperationsExtensions.Delete(Microsoft.Azure.Management.Storage.IPrivateEndpointConnectionsOperations,System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.PrivateEndpointConnectionsOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Storage.IPrivateEndpointConnectionsOperations,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.PrivateEndpointConnectionsOperationsExtensions.Get(Microsoft.Azure.Management.Storage.IPrivateEndpointConnectionsOperations,System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.PrivateEndpointConnectionsOperationsExtensions.GetAsync(Microsoft.Azure.Management.Storage.IPrivateEndpointConnectionsOperations,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.PrivateEndpointConnectionsOperationsExtensions.Put(Microsoft.Azure.Management.Storage.IPrivateEndpointConnectionsOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.PrivateEndpointConnection)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.PrivateEndpointConnectionsOperationsExtensions.PutAsync(Microsoft.Azure.Management.Storage.IPrivateEndpointConnectionsOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.PrivateEndpointConnection,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.PrivateLinkResourcesOperationsExtensions" Id="T:Microsoft.Azure.Management.Storage.PrivateLinkResourcesOperationsExtensions">
      <Member Id="M:Microsoft.Azure.Management.Storage.PrivateLinkResourcesOperationsExtensions.ListByStorageAccount(Microsoft.Azure.Management.Storage.IPrivateLinkResourcesOperations,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.PrivateLinkResourcesOperationsExtensions.ListByStorageAccountAsync(Microsoft.Azure.Management.Storage.IPrivateLinkResourcesOperations,System.String,System.String,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.SkusOperationsExtensions" Id="T:Microsoft.Azure.Management.Storage.SkusOperationsExtensions">
      <Member Id="M:Microsoft.Azure.Management.Storage.SkusOperationsExtensions.List(Microsoft.Azure.Management.Storage.ISkusOperations)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.SkusOperationsExtensions.ListAsync(Microsoft.Azure.Management.Storage.ISkusOperations,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions" Id="T:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions">
      <Member Id="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.BeginCreate(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.BeginCreateAsync(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.BeginFailover(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.BeginFailoverAsync(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.BeginRestoreBlobRanges(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,System.DateTime,System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.BlobRestoreRange})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.BeginRestoreBlobRangesAsync(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,System.DateTime,System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.BlobRestoreRange},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.CheckNameAvailability(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.CheckNameAvailabilityAsync(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.Create(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.CreateAsync(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.Delete(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.Failover(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.FailoverAsync(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.GetProperties(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.StorageAccountExpand})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.GetPropertiesAsync(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.StorageAccountExpand},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.List(Microsoft.Azure.Management.Storage.IStorageAccountsOperations)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.ListAccountSAS(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Models.AccountSasParameters)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.ListAccountSASAsync(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Models.AccountSasParameters,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.ListAsync(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.ListByResourceGroup(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.ListByResourceGroupAsync(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.ListKeys(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.ListKeyExpand})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.ListKeysAsync(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.ListKeyExpand},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.ListNext(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.ListServiceSAS(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Models.ServiceSasParameters)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.ListServiceSASAsync(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Models.ServiceSasParameters,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.RegenerateKey(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.RegenerateKeyAsync(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.RestoreBlobRanges(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,System.DateTime,System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.BlobRestoreRange})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.RestoreBlobRangesAsync(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,System.DateTime,System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.BlobRestoreRange},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.RevokeUserDelegationKeys(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.RevokeUserDelegationKeysAsync(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.Update(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.StorageManagementClient" Id="T:Microsoft.Azure.Management.Storage.StorageManagementClient">
      <Member Id="M:Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])" />
      <Member Id="M:Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClient,System.Boolean)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])" />
      <Member Id="M:Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor(System.Net.Http.DelegatingHandler[])" />
      <Member Id="M:Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor(System.Net.Http.HttpClient,System.Boolean)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])" />
      <Member Id="M:Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])" />
      <Member Id="M:Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])" />
      <Member Id="M:Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor(System.Uri,System.Net.Http.DelegatingHandler[])" />
      <Member Id="M:Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor(System.Uri,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])" />
      <Member Id="P:Microsoft.Azure.Management.Storage.StorageManagementClient.AcceptLanguage" />
      <Member Id="P:Microsoft.Azure.Management.Storage.StorageManagementClient.ApiVersion" />
      <Member Id="P:Microsoft.Azure.Management.Storage.StorageManagementClient.BaseUri" />
      <Member Id="P:Microsoft.Azure.Management.Storage.StorageManagementClient.BlobContainers" />
      <Member Id="P:Microsoft.Azure.Management.Storage.StorageManagementClient.BlobServices" />
      <Member Id="P:Microsoft.Azure.Management.Storage.StorageManagementClient.Credentials" />
      <Member Id="P:Microsoft.Azure.Management.Storage.StorageManagementClient.DeserializationSettings" />
      <Member Id="P:Microsoft.Azure.Management.Storage.StorageManagementClient.FileServices" />
      <Member Id="P:Microsoft.Azure.Management.Storage.StorageManagementClient.FileShares" />
      <Member Id="P:Microsoft.Azure.Management.Storage.StorageManagementClient.GenerateClientRequestId" />
      <Member Id="P:Microsoft.Azure.Management.Storage.StorageManagementClient.LongRunningOperationRetryTimeout" />
      <Member Id="P:Microsoft.Azure.Management.Storage.StorageManagementClient.ManagementPolicies" />
      <Member Id="P:Microsoft.Azure.Management.Storage.StorageManagementClient.Operations" />
      <Member Id="P:Microsoft.Azure.Management.Storage.StorageManagementClient.PrivateEndpointConnections" />
      <Member Id="P:Microsoft.Azure.Management.Storage.StorageManagementClient.PrivateLinkResources" />
      <Member Id="P:Microsoft.Azure.Management.Storage.StorageManagementClient.SerializationSettings" />
      <Member Id="P:Microsoft.Azure.Management.Storage.StorageManagementClient.Skus" />
      <Member Id="P:Microsoft.Azure.Management.Storage.StorageManagementClient.StorageAccounts" />
      <Member Id="P:Microsoft.Azure.Management.Storage.StorageManagementClient.SubscriptionId" />
      <Member Id="P:Microsoft.Azure.Management.Storage.StorageManagementClient.Usages" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.UsagesOperationsExtensions" Id="T:Microsoft.Azure.Management.Storage.UsagesOperationsExtensions">
      <Member Id="M:Microsoft.Azure.Management.Storage.UsagesOperationsExtensions.ListByLocation(Microsoft.Azure.Management.Storage.IUsagesOperations,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.UsagesOperationsExtensions.ListByLocationAsync(Microsoft.Azure.Management.Storage.IUsagesOperations,System.String,System.Threading.CancellationToken)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Management.Storage.Fluent">
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.AccountStatuses" Id="T:Microsoft.Azure.Management.Storage.Fluent.AccountStatuses">
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.AccountStatuses.Primary" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.AccountStatuses.Secondary" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl" Id="T:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.CreateResourceAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Etag" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.GetInnerAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.HasImmutabilityPolicy" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.HasLegalHold" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Id" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.ImmutabilityPolicy" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.IsInCreateMode" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.LastModifiedTime" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.LeaseDuration" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.LeaseState" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.LeaseStatus" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.LegalHold" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Manager" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Metadata" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Microsoft#Azure#Management#Storage#Fluent#BlobContainer#Definition#IWithBlobService#WithExistingBlobService(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Microsoft#Azure#Management#Storage#Fluent#BlobContainer#Definition#IWithMetadata#WithMetadata(System.Collections.Generic.IDictionary{System.String,System.String})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Microsoft#Azure#Management#Storage#Fluent#BlobContainer#Definition#IWithMetadata#WithMetadata(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Microsoft#Azure#Management#Storage#Fluent#BlobContainer#Definition#IWithPublicAccess#WithPublicAccess(Microsoft.Azure.Management.Storage.Fluent.Models.PublicAccess)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Microsoft#Azure#Management#Storage#Fluent#BlobContainer#Update#IWithMetadata#WithMetadata(System.Collections.Generic.IDictionary{System.String,System.String})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Microsoft#Azure#Management#Storage#Fluent#BlobContainer#Update#IWithMetadata#WithMetadata(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Microsoft#Azure#Management#Storage#Fluent#BlobContainer#Update#IWithPublicAccess#WithPublicAccess(Microsoft.Azure.Management.Storage.Fluent.Models.PublicAccess)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Name" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.PublicAccess" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Type" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.WithExistingBlobService(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.WithMetadata(System.Collections.Generic.IDictionary{System.String,System.String})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.WithMetadata(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.WithPublicAccess(Microsoft.Azure.Management.Storage.Fluent.Models.PublicAccess)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Microsoft#Azure#Management#ResourceManager#Fluent#Core#IHasId#Id" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Microsoft#Azure#Management#ResourceManager#Fluent#Core#IHasManager&lt;Microsoft#Azure#Management#Storage#Fluent#StorageManager&gt;#Manager" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainer#Etag" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainer#HasImmutabilityPolicy" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainer#HasLegalHold" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainer#Id" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainer#ImmutabilityPolicy" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainer#LastModifiedTime" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainer#LeaseDuration" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainer#LeaseState" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainer#LeaseStatus" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainer#LegalHold" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainer#Metadata" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainer#Name" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainer#PublicAccess" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainer#Type" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl" Id="T:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.ClearLegalHoldAsync(System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.DefineContainer(System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.DefineImmutabilityPolicy(System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.DeleteAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.DeleteImmutabilityPolicyAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.ExtendImmutabilityPolicyAsync(System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.GetAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.GetImmutabilityPolicyAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.ListAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.LockImmutabilityPolicyAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.Manager" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainers#ClearLegalHoldAsync(System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainers#DefineContainer(System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainers#DefineImmutabilityPolicy(System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainers#DeleteAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainers#DeleteImmutabilityPolicyAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainers#ExtendImmutabilityPolicyAsync(System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainers#GetAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainers#GetImmutabilityPolicyAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainers#ListAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainers#LockImmutabilityPolicyAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainers#SetLegalHoldAsync(System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.SetLegalHoldAsync(System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.BlobContainersOperationsExtensions" Id="T:Microsoft.Azure.Management.Storage.Fluent.BlobContainersOperationsExtensions">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersOperationsExtensions.ClearLegalHoldAsync(Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations,System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersOperationsExtensions.CreateAsync(Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations,System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.PublicAccess},System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersOperationsExtensions.CreateOrUpdateImmutabilityPolicyAsync(Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations,System.String,System.String,System.String,System.Int32,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersOperationsExtensions.DeleteImmutabilityPolicyAsync(Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersOperationsExtensions.ExtendImmutabilityPolicyAsync(Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations,System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersOperationsExtensions.GetAsync(Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersOperationsExtensions.GetImmutabilityPolicyAsync(Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersOperationsExtensions.LeaseAsync(Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.LeaseContainerRequest,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersOperationsExtensions.ListAsync(Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersOperationsExtensions.LockImmutabilityPolicyAsync(Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersOperationsExtensions.SetLegalHoldAsync(Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations,System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations,System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.PublicAccess},System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl" Id="T:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.Cors" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.CreateResourceAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.DefaultServiceVersion" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.DeleteRetentionPolicy" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.GetInnerAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.Id" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.IsInCreateMode" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.Manager" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.Microsoft#Azure#Management#Storage#Fluent#BlobServiceProperties#Definition#IWithCors#WithCORSRule(Microsoft.Azure.Management.Storage.Fluent.Models.CorsRule)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.Microsoft#Azure#Management#Storage#Fluent#BlobServiceProperties#Definition#IWithCors#WithCORSRules(System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Fluent.Models.CorsRule})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.Microsoft#Azure#Management#Storage#Fluent#BlobServiceProperties#Definition#IWithDefaultServiceVersion#WithDefaultServiceVersion(System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.Microsoft#Azure#Management#Storage#Fluent#BlobServiceProperties#Definition#IWithDeleteRetentionPolicy#WithDeleteRetentionPolicy(Microsoft.Azure.Management.Storage.Fluent.Models.DeleteRetentionPolicy)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.Microsoft#Azure#Management#Storage#Fluent#BlobServiceProperties#Definition#IWithDeleteRetentionPolicy#WithDeleteRetentionPolicyDisabled" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.Microsoft#Azure#Management#Storage#Fluent#BlobServiceProperties#Definition#IWithDeleteRetentionPolicy#WithDeleteRetentionPolicyEnabled(System.Int32)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.Microsoft#Azure#Management#Storage#Fluent#BlobServiceProperties#Definition#IWithStorageAccount#WithExistingStorageAccount(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.Microsoft#Azure#Management#Storage#Fluent#BlobServiceProperties#Update#IWithCors#WithCORSRule(Microsoft.Azure.Management.Storage.Fluent.Models.CorsRule)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.Microsoft#Azure#Management#Storage#Fluent#BlobServiceProperties#Update#IWithCors#WithCORSRules(System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Fluent.Models.CorsRule})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.Microsoft#Azure#Management#Storage#Fluent#BlobServiceProperties#Update#IWithDefaultServiceVersion#WithDefaultServiceVersion(System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.Microsoft#Azure#Management#Storage#Fluent#BlobServiceProperties#Update#IWithDeleteRetentionPolicy#WithDeleteRetentionPolicy(Microsoft.Azure.Management.Storage.Fluent.Models.DeleteRetentionPolicy)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.Microsoft#Azure#Management#Storage#Fluent#BlobServiceProperties#Update#IWithDeleteRetentionPolicy#WithDeleteRetentionPolicyDisabled" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.Microsoft#Azure#Management#Storage#Fluent#BlobServiceProperties#Update#IWithDeleteRetentionPolicy#WithDeleteRetentionPolicyEnabled(System.Int32)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.Name" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.Type" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.UpdateResourceAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.WithCORSRule(Microsoft.Azure.Management.Storage.Fluent.Models.CorsRule)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.WithCORSRules(System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Fluent.Models.CorsRule})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.WithDefaultServiceVersion(System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.WithDeleteRetentionPolicy(Microsoft.Azure.Management.Storage.Fluent.Models.DeleteRetentionPolicy)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.WithDeleteRetentionPolicyDisabled" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.WithDeleteRetentionPolicyEnabled(System.Int32)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.WithExistingStorageAccount(System.String,System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.Microsoft#Azure#Management#ResourceManager#Fluent#Core#IHasId#Id" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.Microsoft#Azure#Management#ResourceManager#Fluent#Core#IHasManager&lt;Microsoft#Azure#Management#Storage#Fluent#StorageManager&gt;#Manager" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobServiceProperties#Cors" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobServiceProperties#DefaultServiceVersion" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobServiceProperties#DeleteRetentionPolicy" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobServiceProperties#Id" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobServiceProperties#Name" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.BlobServicePropertiesImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobServiceProperties#Type" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.BlobServicesImpl" Id="T:Microsoft.Azure.Management.Storage.Fluent.BlobServicesImpl">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicesImpl.Define(System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicesImpl.GetServicePropertiesAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicesImpl.Manager" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicesImpl.Microsoft#Azure#Management#ResourceManager#Fluent#Core#CollectionActions#ISupportsCreating&lt;Microsoft#Azure#Management#Storage#Fluent#BlobServiceProperties#Definition#IBlank&gt;#Define(System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicesImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobServices#GetServicePropertiesAsync(System.String,System.String,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.BlobServicesOperationsExtensions" Id="T:Microsoft.Azure.Management.Storage.Fluent.BlobServicesOperationsExtensions">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicesOperationsExtensions.GetServicePropertiesAsync(Microsoft.Azure.Management.Storage.Fluent.IBlobServicesOperations,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServicesOperationsExtensions.SetServicePropertiesAsync(Microsoft.Azure.Management.Storage.Fluent.IBlobServicesOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.BlobServicePropertiesInner,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.BlobTypes" Id="T:Microsoft.Azure.Management.Storage.Fluent.BlobTypes">
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.BlobTypes.BlockBlob" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.BlobTypes.Snapshot" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobTypes.#ctor" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.CheckNameAvailabilityResult" Id="T:Microsoft.Azure.Management.Storage.Fluent.CheckNameAvailabilityResult">
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.CheckNameAvailabilityResult.IsAvailable" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.CheckNameAvailabilityResult.IsAvailalbe" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.CheckNameAvailabilityResult.Message" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.CheckNameAvailabilityResult.Reason" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.IBlobContainer" Id="T:Microsoft.Azure.Management.Storage.Fluent.IBlobContainer">
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IBlobContainer.Etag" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IBlobContainer.HasImmutabilityPolicy" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IBlobContainer.HasLegalHold" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IBlobContainer.Id" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IBlobContainer.ImmutabilityPolicy" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IBlobContainer.LastModifiedTime" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IBlobContainer.LeaseDuration" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IBlobContainer.LeaseState" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IBlobContainer.LeaseStatus" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IBlobContainer.LegalHold" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IBlobContainer.Metadata" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IBlobContainer.Name" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IBlobContainer.PublicAccess" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IBlobContainer.Type" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.IBlobContainers" Id="T:Microsoft.Azure.Management.Storage.Fluent.IBlobContainers">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.ClearLegalHoldAsync(System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.DefineContainer(System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.DefineImmutabilityPolicy(System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.DeleteAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.DeleteImmutabilityPolicyAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.ExtendImmutabilityPolicyAsync(System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.GetAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.GetImmutabilityPolicyAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.ListAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.LockImmutabilityPolicyAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.SetLegalHoldAsync(System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations" Id="T:Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations.ClearLegalHoldWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations.CreateOrUpdateImmutabilityPolicyWithHttpMessagesAsync(System.String,System.String,System.String,System.Int32,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations.CreateWithHttpMessagesAsync(System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.PublicAccess},System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations.DeleteImmutabilityPolicyWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations.ExtendImmutabilityPolicyWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations.GetImmutabilityPolicyWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations.LeaseWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.LeaseContainerRequest,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations.ListWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations.LockImmutabilityPolicyWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations.SetLegalHoldWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations.UpdateWithHttpMessagesAsync(System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.PublicAccess},System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.IBlobServiceProperties" Id="T:Microsoft.Azure.Management.Storage.Fluent.IBlobServiceProperties">
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IBlobServiceProperties.Cors" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IBlobServiceProperties.DefaultServiceVersion" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IBlobServiceProperties.DeleteRetentionPolicy" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IBlobServiceProperties.Id" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IBlobServiceProperties.Name" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IBlobServiceProperties.Type" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.IBlobServices" Id="T:Microsoft.Azure.Management.Storage.Fluent.IBlobServices">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IBlobServices.GetServicePropertiesAsync(System.String,System.String,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.IBlobServicesOperations" Id="T:Microsoft.Azure.Management.Storage.Fluent.IBlobServicesOperations">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IBlobServicesOperations.GetServicePropertiesWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IBlobServicesOperations.SetServicePropertiesWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.BlobServicePropertiesInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.IImmutabilityPolicy" Id="T:Microsoft.Azure.Management.Storage.Fluent.IImmutabilityPolicy">
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IImmutabilityPolicy.Etag" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IImmutabilityPolicy.Id" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IImmutabilityPolicy.ImmutabilityPeriodSinceCreationInDays" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IImmutabilityPolicy.Name" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IImmutabilityPolicy.State" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IImmutabilityPolicy.Type" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.ILegalHold" Id="T:Microsoft.Azure.Management.Storage.Fluent.ILegalHold">
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.ILegalHold.HasLegalHold" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.ILegalHold.Tags" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.IListContainerItems" Id="T:Microsoft.Azure.Management.Storage.Fluent.IListContainerItems">
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IListContainerItems.Value" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.IManagementPolicies" Id="T:Microsoft.Azure.Management.Storage.Fluent.IManagementPolicies">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IManagementPolicies.DeleteAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IManagementPolicies.GetAsync(System.String,System.String,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.IManagementPoliciesOperations" Id="T:Microsoft.Azure.Management.Storage.Fluent.IManagementPoliciesOperations">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IManagementPoliciesOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicySchema,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IManagementPoliciesOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IManagementPoliciesOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.IManagementPolicy" Id="T:Microsoft.Azure.Management.Storage.Fluent.IManagementPolicy">
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IManagementPolicy.Id" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IManagementPolicy.LastModifiedTime" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IManagementPolicy.Name" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IManagementPolicy.Policy" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IManagementPolicy.Rules" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IManagementPolicy.Type" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicyImpl" Id="T:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicyImpl">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicyImpl.CreateResourceAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicyImpl.Etag" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicyImpl.GetInnerAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicyImpl.Id" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicyImpl.ImmutabilityPeriodSinceCreationInDays" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicyImpl.IsInCreateMode" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicyImpl.Manager" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicyImpl.Microsoft#Azure#Management#Storage#Fluent#ImmutabilityPolicy#Definition#IWithContainer#WithExistingContainer(System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicyImpl.Microsoft#Azure#Management#Storage#Fluent#ImmutabilityPolicy#Definition#IWithIfMatch#WithIfMatch(System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicyImpl.Microsoft#Azure#Management#Storage#Fluent#ImmutabilityPolicy#Definition#IWithImmutabilityPeriodSinceCreationInDays#WithImmutabilityPeriodSinceCreationInDays(System.Int32)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicyImpl.Microsoft#Azure#Management#Storage#Fluent#ImmutabilityPolicy#Update#IWithIfMatch#WithIfMatch(System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicyImpl.Microsoft#Azure#Management#Storage#Fluent#ImmutabilityPolicy#Update#IWithImmutabilityPeriodSinceCreationInDays#WithImmutabilityPeriodSinceCreationInDays(System.Int32)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicyImpl.Name" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicyImpl.State" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicyImpl.Type" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicyImpl.UpdateResourceAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicyImpl.WithExistingContainer(System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicyImpl.WithIfMatch(System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicyImpl.WithImmutabilityPeriodSinceCreationInDays(System.Int32)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicyImpl.Microsoft#Azure#Management#ResourceManager#Fluent#Core#IHasId#Id" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicyImpl.Microsoft#Azure#Management#ResourceManager#Fluent#Core#IHasManager&lt;Microsoft#Azure#Management#Storage#Fluent#StorageManager&gt;#Manager" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicyImpl.Microsoft#Azure#Management#Storage#Fluent#IImmutabilityPolicy#Etag" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicyImpl.Microsoft#Azure#Management#Storage#Fluent#IImmutabilityPolicy#Id" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicyImpl.Microsoft#Azure#Management#Storage#Fluent#IImmutabilityPolicy#ImmutabilityPeriodSinceCreationInDays" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicyImpl.Microsoft#Azure#Management#Storage#Fluent#IImmutabilityPolicy#Name" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicyImpl.Microsoft#Azure#Management#Storage#Fluent#IImmutabilityPolicy#State" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicyImpl.Microsoft#Azure#Management#Storage#Fluent#IImmutabilityPolicy#Type" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.IOperations" Id="T:Microsoft.Azure.Management.Storage.Fluent.IOperations">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.IPolicyRule" Id="T:Microsoft.Azure.Management.Storage.Fluent.IPolicyRule">
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IPolicyRule.ActionsOnBaseBlob" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IPolicyRule.ActionsOnSnapShot" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IPolicyRule.BlobTypesToFilterFor" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IPolicyRule.DaysAfterBaseBlobModificationUntilArchiving" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IPolicyRule.DaysAfterBaseBlobModificationUntilCooling" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IPolicyRule.DaysAfterBaseBlobModificationUntilDeleting" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IPolicyRule.DaysAfterSnapShotCreationUntilDeleting" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IPolicyRule.DeleteActionOnBaseBlobEnabled" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IPolicyRule.DeleteActionOnSnapShotEnabled" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IPolicyRule.Name" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IPolicyRule.PrefixesToFilterFor" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IPolicyRule.TierToArchiveActionOnBaseBlobEnabled" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IPolicyRule.TierToCoolActionOnBaseBlobEnabled" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IPolicyRule.Type" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.ISkusOperations" Id="T:Microsoft.Azure.Management.Storage.Fluent.ISkusOperations">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ISkusOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.IStorageAccount" Id="T:Microsoft.Azure.Management.Storage.Fluent.IStorageAccount">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IStorageAccount.GetKeys" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IStorageAccount.GetKeysAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IStorageAccount.RegenerateKey(System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IStorageAccount.RegenerateKeyAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccount.AccessTier" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccount.AccountStatuses" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccount.AzureFilesAadIntegration" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccount.CreationTime" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccount.CustomDomain" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccount.Encryption" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccount.EncryptionKeySource" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccount.EncryptionStatuses" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccount.EndPoints" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccount.HnsEnabled" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccount.Kind" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccount.LastGeoFailoverTime" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccount.ProvisioningState" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.IStorageAccountBeta" Id="T:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountBeta">
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountBeta.CanAccessFromAzureServices" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountBeta.CanReadLogEntriesFromAnyNetwork" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountBeta.CanReadMetricsFromAnyNetwork" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountBeta.IPAddressesWithAccess" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountBeta.IPAddressRangesWithAccess" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountBeta.IsAccessAllowedFromAllNetworks" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountBeta.NetworkSubnetsWithAccess" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountBeta.SkuType" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountBeta.SystemAssignedManagedServiceIdentityPrincipalId" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountBeta.SystemAssignedManagedServiceIdentityTenantId" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.IStorageAccountEncryptionStatus" Id="T:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountEncryptionStatus">
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountEncryptionStatus.IsEnabled" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountEncryptionStatus.LastEnabledTime" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountEncryptionStatus.StorageService" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.IStorageAccounts" Id="T:Microsoft.Azure.Management.Storage.Fluent.IStorageAccounts">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IStorageAccounts.CheckNameAvailability(System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IStorageAccounts.CheckNameAvailabilityAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IStorageAccounts.createSasToken(System.String,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IStorageAccounts.createSasTokenAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations" Id="T:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations.BeginCreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCreateParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations.BeginFailoverWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations.CheckNameAvailabilityWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations.CreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCreateParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations.FailoverWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations.GetPropertiesWithHttpMessagesAsync(System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountExpand},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations.ListAccountSASWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.AccountSasParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations.ListByResourceGroupWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations.ListKeysWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations.ListServiceSASWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations.RegenerateKeyWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations.RevokeUserDelegationKeysWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations.UpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountUpdateParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.IStorageManagementClient" Id="T:Microsoft.Azure.Management.Storage.Fluent.IStorageManagementClient">
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageManagementClient.AcceptLanguage" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageManagementClient.ApiVersion" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageManagementClient.BaseUri" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageManagementClient.BlobContainers" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageManagementClient.BlobServices" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageManagementClient.Credentials" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageManagementClient.DeserializationSettings" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageManagementClient.GenerateClientRequestId" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageManagementClient.LongRunningOperationRetryTimeout" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageManagementClient.ManagementPolicies" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageManagementClient.Operations" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageManagementClient.SerializationSettings" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageManagementClient.Skus" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageManagementClient.StorageAccounts" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageManagementClient.SubscriptionId" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageManagementClient.Usages" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.IStorageManager" Id="T:Microsoft.Azure.Management.Storage.Fluent.IStorageManager">
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageManager.BlobContainers" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageManager.BlobServices" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageManager.ManagementPolicies" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageManager.StorageAccounts" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageManager.StorageSkus" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageManager.Usages" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.IStorageSku" Id="T:Microsoft.Azure.Management.Storage.Fluent.IStorageSku">
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageSku.Capabilities" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageSku.Name" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageSku.Regions" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageSku.ResourceType" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageSku.Restrictions" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageSku.StorageAccountKind" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageSku.StorageAccountSku" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageSku.Tier" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.IStorageSkus" Id="T:Microsoft.Azure.Management.Storage.Fluent.IStorageSkus" />
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.IStorageUsage" Id="T:Microsoft.Azure.Management.Storage.Fluent.IStorageUsage">
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageUsage.CurrentValue" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageUsage.Limit" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageUsage.Name" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.IStorageUsage.Unit" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.IUsages" Id="T:Microsoft.Azure.Management.Storage.Fluent.IUsages" />
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.IUsagesOperations" Id="T:Microsoft.Azure.Management.Storage.Fluent.IUsagesOperations">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.IUsagesOperations.ListByLocationWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.LegalHoldImpl" Id="T:Microsoft.Azure.Management.Storage.Fluent.LegalHoldImpl">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.LegalHoldImpl.HasLegalHold" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.LegalHoldImpl.Manager" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.LegalHoldImpl.Tags" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.LegalHoldImpl.Microsoft#Azure#Management#ResourceManager#Fluent#Core#IHasManager&lt;Microsoft#Azure#Management#Storage#Fluent#StorageManager&gt;#Manager" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.LegalHoldImpl.Microsoft#Azure#Management#Storage#Fluent#ILegalHold#HasLegalHold" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.LegalHoldImpl.Microsoft#Azure#Management#Storage#Fluent#ILegalHold#Tags" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.ListContainerItemsImpl" Id="T:Microsoft.Azure.Management.Storage.Fluent.ListContainerItemsImpl">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ListContainerItemsImpl.Manager" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ListContainerItemsImpl.Value" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.ListContainerItemsImpl.Microsoft#Azure#Management#ResourceManager#Fluent#Core#IHasManager&lt;Microsoft#Azure#Management#Storage#Fluent#StorageManager&gt;#Manager" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.ListContainerItemsImpl.Microsoft#Azure#Management#Storage#Fluent#IListContainerItems#Value" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.ManagementPoliciesImpl" Id="T:Microsoft.Azure.Management.Storage.Fluent.ManagementPoliciesImpl">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPoliciesImpl.Define(System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPoliciesImpl.DeleteAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPoliciesImpl.GetAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPoliciesImpl.Manager" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPoliciesImpl.Microsoft#Azure#Management#ResourceManager#Fluent#Core#CollectionActions#ISupportsCreating&lt;Microsoft#Azure#Management#Storage#Fluent#ManagementPolicy#Definition#IBlank&gt;#Define(System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPoliciesImpl.Microsoft#Azure#Management#Storage#Fluent#IManagementPolicies#DeleteAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPoliciesImpl.Microsoft#Azure#Management#Storage#Fluent#IManagementPolicies#GetAsync(System.String,System.String,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.ManagementPoliciesOperationsExtensions" Id="T:Microsoft.Azure.Management.Storage.Fluent.ManagementPoliciesOperationsExtensions">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPoliciesOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Storage.Fluent.IManagementPoliciesOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicySchema,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPoliciesOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Storage.Fluent.IManagementPoliciesOperations,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPoliciesOperationsExtensions.GetAsync(Microsoft.Azure.Management.Storage.Fluent.IManagementPoliciesOperations,System.String,System.String,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.ManagementPolicyImpl" Id="T:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicyImpl">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicyImpl.CreateResourceAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicyImpl.DefineRule(System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicyImpl.GetInnerAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicyImpl.Id" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicyImpl.IsInCreateMode" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicyImpl.LastModifiedTime" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicyImpl.Manager" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicyImpl.Microsoft#Azure#Management#Storage#Fluent#ManagementPolicy#Definition#IWithRule#DefineRule(System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicyImpl.Microsoft#Azure#Management#Storage#Fluent#ManagementPolicy#Definition#IWithStorageAccount#WithExistingStorageAccount(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicyImpl.Microsoft#Azure#Management#Storage#Fluent#ManagementPolicy#Update#IRule#UpdateRule(System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicyImpl.Microsoft#Azure#Management#Storage#Fluent#ManagementPolicy#Update#IRule#WithoutRule(System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicyImpl.Microsoft#Azure#Management#Storage#Fluent#ManagementPolicy#Update#IWithPolicy#WithPolicy(Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicySchema)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicyImpl.Name" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicyImpl.Policy" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicyImpl.Rules" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicyImpl.Type" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicyImpl.UpdateRule(System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicyImpl.WithExistingStorageAccount(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicyImpl.WithoutRule(System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicyImpl.WithPolicy(Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicySchema)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicyImpl.Microsoft#Azure#Management#ResourceManager#Fluent#Core#IHasId#Id" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicyImpl.Microsoft#Azure#Management#ResourceManager#Fluent#Core#IHasManager&lt;Microsoft#Azure#Management#Storage#Fluent#StorageManager&gt;#Manager" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicyImpl.Microsoft#Azure#Management#Storage#Fluent#IManagementPolicy#Id" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicyImpl.Microsoft#Azure#Management#Storage#Fluent#IManagementPolicy#LastModifiedTime" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicyImpl.Microsoft#Azure#Management#Storage#Fluent#IManagementPolicy#Name" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicyImpl.Microsoft#Azure#Management#Storage#Fluent#IManagementPolicy#Policy" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicyImpl.Microsoft#Azure#Management#Storage#Fluent#IManagementPolicy#Rules" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicyImpl.Microsoft#Azure#Management#Storage#Fluent#IManagementPolicy#Type" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.OperationsExtensions" Id="T:Microsoft.Azure.Management.Storage.Fluent.OperationsExtensions">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.OperationsExtensions.ListAsync(Microsoft.Azure.Management.Storage.Fluent.IOperations,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl" Id="T:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.ActionsOnBaseBlob" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.ActionsOnSnapShot" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Attach" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.BlobTypesToFilterFor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.DaysAfterBaseBlobModificationUntilArchiving" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.DaysAfterBaseBlobModificationUntilCooling" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.DaysAfterBaseBlobModificationUntilDeleting" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.DaysAfterSnapShotCreationUntilDeleting" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.DeleteActionOnBaseBlobEnabled" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.DeleteActionOnSnapShotEnabled" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Inner" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#ResourceManager#Fluent#Core#ChildResourceActions#IAttachable&lt;Microsoft#Azure#Management#Storage#Fluent#ManagementPolicy#Definition#IWithCreate&gt;#Attach" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#PolicyRule#Definition#IWithBlobTypesToFilterFor#WithBlobTypesToFilterFor(System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Fluent.BlobTypes})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#PolicyRule#Definition#IWithBlobTypesToFilterFor#WithBlobTypeToFilterFor(Microsoft.Azure.Management.Storage.Fluent.BlobTypes)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#PolicyRule#Definition#IWithPolicyRuleType#WithLifecycleRuleType" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#PolicyRule#Definition#IWithPrefixesToFilterFor#WithPrefixesToFilterFor(System.Collections.Generic.IList{System.String})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#PolicyRule#Definition#IWithPrefixesToFilterFor#WithPrefixToFilterFor(System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#PolicyRule#Definition#IWithRuleActions#WithActionsOnBaseBlob(Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyBaseBlob)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#PolicyRule#Definition#IWithRuleActions#WithActionsOnSnapShot(Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicySnapShot)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#PolicyRule#Definition#IWithRuleActions#WithDeleteActionOnBaseBlob(System.Int32)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#PolicyRule#Definition#IWithRuleActions#WithDeleteActionOnSnapShot(System.Int32)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#PolicyRule#Definition#IWithRuleActions#WithTierToArchiveActionOnBaseBlob(System.Int32)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#PolicyRule#Definition#IWithRuleActions#WithTierToCoolActionOnBaseBlob(System.Int32)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#PolicyRule#Update#IWithActions#UpdateActionsOnBaseBlob(Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyBaseBlob)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#PolicyRule#Update#IWithActions#UpdateActionsOnSnapShot(Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicySnapShot)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#PolicyRule#Update#IWithActions#WithDeleteActionOnBaseBlob(System.Int32)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#PolicyRule#Update#IWithActions#WithDeleteActionOnSnapShot(System.Int32)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#PolicyRule#Update#IWithActions#WithTierToArchiveActionOnBaseBlob(System.Int32)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#PolicyRule#Update#IWithActions#WithTierToCoolActionOnBaseBlob(System.Int32)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#PolicyRule#Update#IWithBlobTypesToFilterFor#WithBlobTypesToFilterFor(System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Fluent.BlobTypes})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#PolicyRule#Update#IWithBlobTypesToFilterFor#WithBlobTypeToFilterFor(Microsoft.Azure.Management.Storage.Fluent.BlobTypes)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#PolicyRule#Update#IWithBlobTypesToFilterFor#WithBlobTypeToFilterForRemoved(Microsoft.Azure.Management.Storage.Fluent.BlobTypes)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#PolicyRule#Update#IWithPrefixesToFilterFor#WithoutPrefixesToFilterFor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#PolicyRule#Update#IWithPrefixesToFilterFor#WithPrefixesToFilterFor(System.Collections.Generic.IList{System.String})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#PolicyRule#Update#IWithPrefixesToFilterFor#WithPrefixToFilterFor(System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Name" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Parent" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.PrefixesToFilterFor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.TierToArchiveActionOnBaseBlobEnabled" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.TierToCoolActionOnBaseBlobEnabled" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Type" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.UpdateActionsOnBaseBlob(Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyBaseBlob)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.UpdateActionsOnSnapShot(Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicySnapShot)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.WithActionsOnBaseBlob(Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyBaseBlob)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.WithActionsOnSnapShot(Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicySnapShot)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.WithBlobTypesToFilterFor(System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Fluent.BlobTypes})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.WithBlobTypeToFilterFor(Microsoft.Azure.Management.Storage.Fluent.BlobTypes)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.WithBlobTypeToFilterForRemoved(Microsoft.Azure.Management.Storage.Fluent.BlobTypes)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.WithDeleteActionOnBaseBlob(System.Int32)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.WithDeleteActionOnSnapShot(System.Int32)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.WithLifecycleRuleType" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.WithoutPrefixesToFilterFor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.WithPrefixesToFilterFor(System.Collections.Generic.IList{System.String})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.WithPrefixToFilterFor(System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.WithTierToArchiveActionOnBaseBlob(System.Int32)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.WithTierToCoolActionOnBaseBlob(System.Int32)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#ResourceManager#Fluent#Core#IHasInner&lt;Microsoft#Azure#Management#Storage#Fluent#Models#ManagementPolicyRule&gt;#Inner" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#IPolicyRule#ActionsOnBaseBlob" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#IPolicyRule#ActionsOnSnapShot" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#IPolicyRule#BlobTypesToFilterFor" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#IPolicyRule#DaysAfterBaseBlobModificationUntilArchiving" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#IPolicyRule#DaysAfterBaseBlobModificationUntilCooling" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#IPolicyRule#DaysAfterBaseBlobModificationUntilDeleting" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#IPolicyRule#DaysAfterSnapShotCreationUntilDeleting" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#IPolicyRule#DeleteActionOnBaseBlobEnabled" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#IPolicyRule#DeleteActionOnSnapShotEnabled" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#IPolicyRule#Name" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#IPolicyRule#PrefixesToFilterFor" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#IPolicyRule#TierToArchiveActionOnBaseBlobEnabled" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#IPolicyRule#TierToCoolActionOnBaseBlobEnabled" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.PolicyRuleImpl.Microsoft#Azure#Management#Storage#Fluent#IPolicyRule#Type" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.PublicEndpoints" Id="T:Microsoft.Azure.Management.Storage.Fluent.PublicEndpoints">
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.PublicEndpoints.Primary" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.PublicEndpoints.Secondary" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.SkusOperationsExtensions" Id="T:Microsoft.Azure.Management.Storage.Fluent.SkusOperationsExtensions">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.SkusOperationsExtensions.ListAsync(Microsoft.Azure.Management.Storage.Fluent.ISkusOperations,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.StorageAccountEncryptionKeySource" Id="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccountEncryptionKeySource">
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.StorageAccountEncryptionKeySource.Microsoft_KeyVault" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.StorageAccountEncryptionKeySource.Microsoft_Storage" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountEncryptionKeySource.#ctor" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.StorageAccountSkuType" Id="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccountSkuType">
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.StorageAccountSkuType.Premium_LRS" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.StorageAccountSkuType.Standard_GRS" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.StorageAccountSkuType.Standard_LRS" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.StorageAccountSkuType.Standard_RAGRS" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.StorageAccountSkuType.Standard_ZRS" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountSkuType.FromSkuName(Microsoft.Azure.Management.Storage.Fluent.Models.SkuName)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.StorageAccountSkuType.Name" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperationsExtensions" Id="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperationsExtensions">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperationsExtensions.BeginCreateAsync(Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCreateParameters,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperationsExtensions.BeginFailoverAsync(Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperationsExtensions.CheckNameAvailabilityAsync(Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperationsExtensions.CreateAsync(Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCreateParameters,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperationsExtensions.FailoverAsync(Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperationsExtensions.GetPropertiesAsync(Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations,System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountExpand},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperationsExtensions.ListAccountSASAsync(Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.AccountSasParameters,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperationsExtensions.ListAsync(Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperationsExtensions.ListByResourceGroupAsync(Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperationsExtensions.ListKeysAsync(Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperationsExtensions.ListServiceSASAsync(Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperationsExtensions.RegenerateKeyAsync(Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperationsExtensions.RevokeUserDelegationKeysAsync(Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations,System.String,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccountsOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.Storage.Fluent.IStorageAccountsOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountUpdateParameters,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.StorageManagementClient" Id="T:Microsoft.Azure.Management.Storage.Fluent.StorageManagementClient">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageManagementClient.#ctor(Microsoft.Azure.Management.ResourceManager.Fluent.Core.RestClient)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageManagementClient.Initialize" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.StorageManagementClient.AcceptLanguage" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.StorageManagementClient.ApiVersion" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.StorageManagementClient.BlobContainers" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.StorageManagementClient.BlobServices" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.StorageManagementClient.DeserializationSettings" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.StorageManagementClient.GenerateClientRequestId" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.StorageManagementClient.LongRunningOperationRetryTimeout" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.StorageManagementClient.ManagementPolicies" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.StorageManagementClient.Operations" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.StorageManagementClient.SerializationSettings" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.StorageManagementClient.Skus" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.StorageManagementClient.StorageAccounts" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.StorageManagementClient.SubscriptionId" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.StorageManagementClient.Usages" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.StorageManager" Id="T:Microsoft.Azure.Management.Storage.Fluent.StorageManager">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageManager.Authenticate(Microsoft.Azure.Management.ResourceManager.Fluent.Authentication.AzureCredentials,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageManager.Authenticate(Microsoft.Azure.Management.ResourceManager.Fluent.Core.RestClient,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageManager.Configure" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.StorageManager.BlobContainers" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.StorageManager.BlobServices" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.StorageManager.ManagementPolicies" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.StorageManager.StorageAccounts" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.StorageManager.StorageSkus" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.StorageManager.Usages" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.StorageManager/Configurable" Id="T:Microsoft.Azure.Management.Storage.Fluent.StorageManager.Configurable">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageManager.Configurable.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageManager.Configurable.Authenticate(Microsoft.Azure.Management.ResourceManager.Fluent.Authentication.AzureCredentials,System.String)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.StorageManager/IConfigurable" Id="T:Microsoft.Azure.Management.Storage.Fluent.StorageManager.IConfigurable">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageManager.IConfigurable.Authenticate(Microsoft.Azure.Management.ResourceManager.Fluent.Authentication.AzureCredentials,System.String)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.StorageResourceType" Id="T:Microsoft.Azure.Management.Storage.Fluent.StorageResourceType">
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.StorageResourceType.Storage_Accounts" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageResourceType.#ctor" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.StorageService" Id="T:Microsoft.Azure.Management.Storage.Fluent.StorageService">
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.StorageService.Blob" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.StorageService.File" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.StorageService.Queue" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.StorageService.Table" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageService.#ctor" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.UsagesOperationsExtensions" Id="T:Microsoft.Azure.Management.Storage.Fluent.UsagesOperationsExtensions">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.UsagesOperationsExtensions.ListByLocationAsync(Microsoft.Azure.Management.Storage.Fluent.IUsagesOperations,System.String,System.Threading.CancellationToken)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Management.Storage.Fluent.BlobContainer.Definition">
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.BlobContainer.Definition.IBlank" Id="T:Microsoft.Azure.Management.Storage.Fluent.BlobContainer.Definition.IBlank" />
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.BlobContainer.Definition.IDefinition" Id="T:Microsoft.Azure.Management.Storage.Fluent.BlobContainer.Definition.IDefinition" />
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.BlobContainer.Definition.IWithBlobService" Id="T:Microsoft.Azure.Management.Storage.Fluent.BlobContainer.Definition.IWithBlobService">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainer.Definition.IWithBlobService.WithExistingBlobService(System.String,System.String)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.BlobContainer.Definition.IWithCreate" Id="T:Microsoft.Azure.Management.Storage.Fluent.BlobContainer.Definition.IWithCreate" />
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.BlobContainer.Definition.IWithMetadata" Id="T:Microsoft.Azure.Management.Storage.Fluent.BlobContainer.Definition.IWithMetadata">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainer.Definition.IWithMetadata.WithMetadata(System.Collections.Generic.IDictionary{System.String,System.String})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainer.Definition.IWithMetadata.WithMetadata(System.String,System.String)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.BlobContainer.Definition.IWithPublicAccess" Id="T:Microsoft.Azure.Management.Storage.Fluent.BlobContainer.Definition.IWithPublicAccess">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainer.Definition.IWithPublicAccess.WithPublicAccess(Microsoft.Azure.Management.Storage.Fluent.Models.PublicAccess)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Management.Storage.Fluent.BlobContainer.Update">
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.BlobContainer.Update.IUpdate" Id="T:Microsoft.Azure.Management.Storage.Fluent.BlobContainer.Update.IUpdate" />
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.BlobContainer.Update.IWithMetadata" Id="T:Microsoft.Azure.Management.Storage.Fluent.BlobContainer.Update.IWithMetadata">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainer.Update.IWithMetadata.WithMetadata(System.Collections.Generic.IDictionary{System.String,System.String})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainer.Update.IWithMetadata.WithMetadata(System.String,System.String)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.BlobContainer.Update.IWithPublicAccess" Id="T:Microsoft.Azure.Management.Storage.Fluent.BlobContainer.Update.IWithPublicAccess">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainer.Update.IWithPublicAccess.WithPublicAccess(Microsoft.Azure.Management.Storage.Fluent.Models.PublicAccess)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Definition">
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Definition.IBlank" Id="T:Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Definition.IBlank" />
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Definition.IDefinition" Id="T:Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Definition.IDefinition" />
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Definition.IWithCors" Id="T:Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Definition.IWithCors">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Definition.IWithCors.WithCORSRule(Microsoft.Azure.Management.Storage.Fluent.Models.CorsRule)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Definition.IWithCors.WithCORSRules(System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Fluent.Models.CorsRule})" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Definition.IWithCreate" Id="T:Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Definition.IWithCreate" />
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Definition.IWithDefaultServiceVersion" Id="T:Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Definition.IWithDefaultServiceVersion">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Definition.IWithDefaultServiceVersion.WithDefaultServiceVersion(System.String)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Definition.IWithDeleteRetentionPolicy" Id="T:Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Definition.IWithDeleteRetentionPolicy">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Definition.IWithDeleteRetentionPolicy.WithDeleteRetentionPolicy(Microsoft.Azure.Management.Storage.Fluent.Models.DeleteRetentionPolicy)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Definition.IWithDeleteRetentionPolicy.WithDeleteRetentionPolicyDisabled" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Definition.IWithDeleteRetentionPolicy.WithDeleteRetentionPolicyEnabled(System.Int32)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Definition.IWithStorageAccount" Id="T:Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Definition.IWithStorageAccount">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Definition.IWithStorageAccount.WithExistingStorageAccount(System.String,System.String)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Update">
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Update.IUpdate" Id="T:Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Update.IUpdate" />
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Update.IWithCors" Id="T:Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Update.IWithCors">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Update.IWithCors.WithCORSRule(Microsoft.Azure.Management.Storage.Fluent.Models.CorsRule)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Update.IWithCors.WithCORSRules(System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Fluent.Models.CorsRule})" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Update.IWithDefaultServiceVersion" Id="T:Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Update.IWithDefaultServiceVersion">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Update.IWithDefaultServiceVersion.WithDefaultServiceVersion(System.String)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Update.IWithDeleteRetentionPolicy" Id="T:Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Update.IWithDeleteRetentionPolicy">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Update.IWithDeleteRetentionPolicy.WithDeleteRetentionPolicy(Microsoft.Azure.Management.Storage.Fluent.Models.DeleteRetentionPolicy)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Update.IWithDeleteRetentionPolicy.WithDeleteRetentionPolicyDisabled" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.BlobServiceProperties.Update.IWithDeleteRetentionPolicy.WithDeleteRetentionPolicyEnabled(System.Int32)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicy.Definition">
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicy.Definition.IBlank" Id="T:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicy.Definition.IBlank" />
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicy.Definition.IDefinition" Id="T:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicy.Definition.IDefinition" />
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicy.Definition.IWithContainer" Id="T:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicy.Definition.IWithContainer">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicy.Definition.IWithContainer.WithExistingContainer(System.String,System.String,System.String)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicy.Definition.IWithCreate" Id="T:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicy.Definition.IWithCreate" />
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicy.Definition.IWithIfMatch" Id="T:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicy.Definition.IWithIfMatch">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicy.Definition.IWithIfMatch.WithIfMatch(System.String)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicy.Definition.IWithImmutabilityPeriodSinceCreationInDays" Id="T:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicy.Definition.IWithImmutabilityPeriodSinceCreationInDays">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicy.Definition.IWithImmutabilityPeriodSinceCreationInDays.WithImmutabilityPeriodSinceCreationInDays(System.Int32)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicy.Update">
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicy.Update.IUpdate" Id="T:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicy.Update.IUpdate" />
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicy.Update.IWithIfMatch" Id="T:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicy.Update.IWithIfMatch">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicy.Update.IWithIfMatch.WithIfMatch(System.String)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicy.Update.IWithImmutabilityPeriodSinceCreationInDays" Id="T:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicy.Update.IWithImmutabilityPeriodSinceCreationInDays">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicy.Update.IWithImmutabilityPeriodSinceCreationInDays.WithImmutabilityPeriodSinceCreationInDays(System.Int32)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Management.Storage.Fluent.ManagementPolicy.Definition">
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.ManagementPolicy.Definition.IBlank" Id="T:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicy.Definition.IBlank" />
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.ManagementPolicy.Definition.IDefinition" Id="T:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicy.Definition.IDefinition" />
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.ManagementPolicy.Definition.IWithCreate" Id="T:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicy.Definition.IWithCreate" />
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.ManagementPolicy.Definition.IWithRule" Id="T:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicy.Definition.IWithRule">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicy.Definition.IWithRule.DefineRule(System.String)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.ManagementPolicy.Definition.IWithStorageAccount" Id="T:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicy.Definition.IWithStorageAccount">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicy.Definition.IWithStorageAccount.WithExistingStorageAccount(System.String,System.String)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Management.Storage.Fluent.ManagementPolicy.Update">
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.ManagementPolicy.Update.IRule" Id="T:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicy.Update.IRule">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicy.Update.IRule.UpdateRule(System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicy.Update.IRule.WithoutRule(System.String)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.ManagementPolicy.Update.IUpdate" Id="T:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicy.Update.IUpdate" />
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.ManagementPolicy.Update.IWithPolicy" Id="T:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicy.Update.IWithPolicy">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.ManagementPolicy.Update.IWithPolicy.WithPolicy(Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicySchema)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Management.Storage.Fluent.Models">
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.AccessTier" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.AccessTier">
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.AccessTier.Cool" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.AccessTier.Hot" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.AccountSasParameters" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.AccountSasParameters">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.AccountSasParameters.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.AccountSasParameters.#ctor(Microsoft.Azure.Management.Storage.Fluent.Models.Services,Microsoft.Azure.Management.Storage.Fluent.Models.SignedResourceTypes,Microsoft.Azure.Management.Storage.Fluent.Models.Permissions,System.DateTime,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.HttpProtocol},System.Nullable{System.DateTime},System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.AccountSasParameters.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.AccountSasParameters.IPAddressOrRange" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.AccountSasParameters.KeyToSign" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.AccountSasParameters.Permissions" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.AccountSasParameters.Protocols" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.AccountSasParameters.ResourceTypes" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.AccountSasParameters.Services" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.AccountSasParameters.SharedAccessExpiryTime" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.AccountSasParameters.SharedAccessStartTime" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.AccountStatus" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.AccountStatus">
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.AccountStatus.Available" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.AccountStatus.Unavailable" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.Action" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.Action">
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.Action.Allow" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.Action1" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.Action1">
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.Action1.Acquire" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.Action1.Break" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.Action1.Change" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.Action1.Release" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.Action1.Renew" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.Action1.#ctor" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.AllowedMethods" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.AllowedMethods">
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.AllowedMethods.DELETE" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.AllowedMethods.GET" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.AllowedMethods.HEAD" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.AllowedMethods.MERGE" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.AllowedMethods.OPTIONS" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.AllowedMethods.POST" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.AllowedMethods.PUT" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.AllowedMethods.#ctor" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.AzureEntityResourceInner" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.AzureEntityResourceInner">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.AzureEntityResourceInner.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.AzureEntityResourceInner.#ctor(System.String,System.String,System.String,System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.AzureEntityResourceInner.Etag" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainerInner" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainerInner">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainerInner.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainerInner.#ctor(System.String,System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.PublicAccess},System.Nullable{System.DateTime},Microsoft.Azure.Management.Storage.Fluent.Models.LeaseStatus,Microsoft.Azure.Management.Storage.Fluent.Models.LeaseState,Microsoft.Azure.Management.Storage.Fluent.Models.LeaseDuration,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyProperties,Microsoft.Azure.Management.Storage.Fluent.Models.LegalHoldProperties,System.Nullable{System.Boolean},System.Nullable{System.Boolean})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainerInner.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainerInner.HasImmutabilityPolicy" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainerInner.HasLegalHold" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainerInner.ImmutabilityPolicy" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainerInner.LastModifiedTime" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainerInner.LeaseDuration" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainerInner.LeaseState" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainerInner.LeaseStatus" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainerInner.LegalHold" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainerInner.Metadata" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainerInner.PublicAccess" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersCreateOrUpdateImmutabilityPolicyHeaders" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersCreateOrUpdateImmutabilityPolicyHeaders">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersCreateOrUpdateImmutabilityPolicyHeaders.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersCreateOrUpdateImmutabilityPolicyHeaders.#ctor(System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersCreateOrUpdateImmutabilityPolicyHeaders.ETag" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersDeleteImmutabilityPolicyHeaders" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersDeleteImmutabilityPolicyHeaders">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersDeleteImmutabilityPolicyHeaders.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersDeleteImmutabilityPolicyHeaders.#ctor(System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersDeleteImmutabilityPolicyHeaders.ETag" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersExtendImmutabilityPolicyHeaders" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersExtendImmutabilityPolicyHeaders">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersExtendImmutabilityPolicyHeaders.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersExtendImmutabilityPolicyHeaders.#ctor(System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersExtendImmutabilityPolicyHeaders.ETag" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersGetImmutabilityPolicyHeaders" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersGetImmutabilityPolicyHeaders">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersGetImmutabilityPolicyHeaders.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersGetImmutabilityPolicyHeaders.#ctor(System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersGetImmutabilityPolicyHeaders.ETag" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersLockImmutabilityPolicyHeaders" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersLockImmutabilityPolicyHeaders">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersLockImmutabilityPolicyHeaders.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersLockImmutabilityPolicyHeaders.#ctor(System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersLockImmutabilityPolicyHeaders.ETag" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.BlobServicePropertiesInner" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.BlobServicePropertiesInner">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.BlobServicePropertiesInner.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.BlobServicePropertiesInner.#ctor(System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.CorsRules,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.DeleteRetentionPolicy)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.BlobServicePropertiesInner.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.BlobServicePropertiesInner.Cors" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.BlobServicePropertiesInner.DefaultServiceVersion" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.BlobServicePropertiesInner.DeleteRetentionPolicy" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.Bypass" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.Bypass">
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.Bypass.AzureServices" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.Bypass.Logging" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.Bypass.Metrics" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.Bypass.None" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.Bypass.#ctor" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.CheckNameAvailabilityResultInner" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.CheckNameAvailabilityResultInner">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.CheckNameAvailabilityResultInner.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.CheckNameAvailabilityResultInner.#ctor(System.Nullable{System.Boolean},System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.Reason},System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.CheckNameAvailabilityResultInner.Message" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.CheckNameAvailabilityResultInner.NameAvailable" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.CheckNameAvailabilityResultInner.Reason" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.CorsRule" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.CorsRule">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.CorsRule.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.CorsRule.#ctor(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Fluent.Models.AllowedMethods},System.Int32,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.CorsRule.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.CorsRule.AllowedHeaders" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.CorsRule.AllowedMethods" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.CorsRule.AllowedOrigins" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.CorsRule.ExposedHeaders" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.CorsRule.MaxAgeInSeconds" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.CorsRules" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.CorsRules">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.CorsRules.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.CorsRules.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Fluent.Models.CorsRule})" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.CorsRules.CorsRulesProperty" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.CustomDomain" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.CustomDomain">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.CustomDomain.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.CustomDomain.#ctor(System.String,System.Nullable{System.Boolean})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.CustomDomain.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.CustomDomain.Name" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.CustomDomain.UseSubDomainName" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.DateAfterCreation" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.DateAfterCreation">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.DateAfterCreation.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.DateAfterCreation.#ctor(System.Int32)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.DateAfterCreation.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.DateAfterCreation.DaysAfterCreationGreaterThan" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.DateAfterModification" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.DateAfterModification">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.DateAfterModification.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.DateAfterModification.#ctor(System.Int32)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.DateAfterModification.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.DateAfterModification.DaysAfterModificationGreaterThan" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.DefaultAction" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.DefaultAction">
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.DefaultAction.Allow" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.DefaultAction.Deny" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.DeleteRetentionPolicy" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.DeleteRetentionPolicy">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.DeleteRetentionPolicy.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.DeleteRetentionPolicy.#ctor(System.Nullable{System.Boolean},System.Nullable{System.Int32})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.DeleteRetentionPolicy.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.DeleteRetentionPolicy.Days" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.DeleteRetentionPolicy.Enabled" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.Dimension" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.Dimension">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.Dimension.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.Dimension.#ctor(System.String,System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.Dimension.DisplayName" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.Dimension.Name" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.Encryption" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.Encryption">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.Encryption.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.Encryption.#ctor(Microsoft.Azure.Management.Storage.Fluent.Models.KeySource,Microsoft.Azure.Management.Storage.Fluent.Models.EncryptionServices,Microsoft.Azure.Management.Storage.Fluent.Models.KeyVaultProperties)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.Encryption.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.Encryption.KeySource" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.Encryption.KeyVaultProperties" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.Encryption.Services" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.EncryptionService" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.EncryptionService">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.EncryptionService.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.EncryptionService.#ctor(System.Nullable{System.Boolean},System.Nullable{System.DateTime})" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.EncryptionService.Enabled" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.EncryptionService.LastEnabledTime" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.EncryptionServices" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.EncryptionServices">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.EncryptionServices.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.EncryptionServices.#ctor(Microsoft.Azure.Management.Storage.Fluent.Models.EncryptionService,Microsoft.Azure.Management.Storage.Fluent.Models.EncryptionService,Microsoft.Azure.Management.Storage.Fluent.Models.EncryptionService,Microsoft.Azure.Management.Storage.Fluent.Models.EncryptionService)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.EncryptionServices.Blob" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.EncryptionServices.File" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.EncryptionServices.Queue" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.EncryptionServices.Table" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.Endpoints" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.Endpoints">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.Endpoints.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.Endpoints.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.Endpoints.Blob" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.Endpoints.Dfs" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.Endpoints.File" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.Endpoints.Queue" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.Endpoints.Table" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.Endpoints.Web" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.GeoReplicationStats" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.GeoReplicationStats">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.GeoReplicationStats.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.GeoReplicationStats.#ctor(Microsoft.Azure.Management.Storage.Fluent.Models.GeoReplicationStatus,System.Nullable{System.DateTime},System.Nullable{System.Boolean})" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.GeoReplicationStats.CanFailover" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.GeoReplicationStats.LastSyncTime" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.GeoReplicationStats.Status" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.GeoReplicationStatus" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.GeoReplicationStatus">
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.GeoReplicationStatus.Bootstrap" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.GeoReplicationStatus.Live" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.GeoReplicationStatus.Unavailable" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.GeoReplicationStatus.#ctor" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.HttpProtocol" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.HttpProtocol">
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.HttpProtocol.Https" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.HttpProtocol.Httpshttp" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.Identity" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.Identity">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.Identity.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.Identity.#ctor(System.String,System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.Identity.PrincipalId" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.Identity.TenantId" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.Identity.Type" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyInner" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyInner">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyInner.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyInner.#ctor(System.Int32,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyState)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyInner.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyInner.ImmutabilityPeriodSinceCreationInDays" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyInner.State" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyProperties" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyProperties">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyProperties.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyProperties.#ctor(System.Int32,Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyState,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Fluent.Models.UpdateHistoryProperty})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyProperties.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyProperties.Etag" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyProperties.ImmutabilityPeriodSinceCreationInDays" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyProperties.State" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyProperties.UpdateHistory" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyState" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyState">
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyState.Locked" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyState.Unlocked" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyState.#ctor" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyUpdateType" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyUpdateType">
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyUpdateType.Extend" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyUpdateType.Lock" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyUpdateType.Put" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyUpdateType.#ctor" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.IPRule" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.IPRule">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.IPRule.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.IPRule.#ctor(System.String,System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.Action})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.IPRule.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.IPRule.Action" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.IPRule.IPAddressOrRange" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.KeyPermission" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.KeyPermission">
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.KeyPermission.Full" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.KeyPermission.Read" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.KeySource" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.KeySource">
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.KeySource.MicrosoftKeyvault" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.KeySource.MicrosoftStorage" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.KeySource.#ctor" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.KeyVaultProperties" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.KeyVaultProperties">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.KeyVaultProperties.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.KeyVaultProperties.#ctor(System.String,System.String,System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.KeyVaultProperties.KeyName" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.KeyVaultProperties.KeyVaultUri" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.KeyVaultProperties.KeyVersion" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.Kind" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.Kind">
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.Kind.BlobStorage" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.Kind.BlockBlobStorage" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.Kind.FileStorage" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.Kind.Storage" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.Kind.StorageV2" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.LeaseContainerRequest" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.LeaseContainerRequest">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.LeaseContainerRequest.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.LeaseContainerRequest.#ctor(Microsoft.Azure.Management.Storage.Fluent.Models.Action1,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.LeaseContainerRequest.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.LeaseContainerRequest.Action" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.LeaseContainerRequest.BreakPeriod" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.LeaseContainerRequest.LeaseDuration" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.LeaseContainerRequest.LeaseId" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.LeaseContainerRequest.ProposedLeaseId" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.LeaseContainerResponseInner" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.LeaseContainerResponseInner">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.LeaseContainerResponseInner.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.LeaseContainerResponseInner.#ctor(System.String,System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.LeaseContainerResponseInner.LeaseId" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.LeaseContainerResponseInner.LeaseTimeSeconds" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.LeaseDuration" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.LeaseDuration">
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.LeaseDuration.Fixed" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.LeaseDuration.Infinite" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.LeaseDuration.#ctor" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.LeaseState" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.LeaseState">
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.LeaseState.Available" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.LeaseState.Breaking" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.LeaseState.Broken" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.LeaseState.Expired" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.LeaseState.Leased" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.LeaseState.#ctor" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.LeaseStatus" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.LeaseStatus">
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.LeaseStatus.Locked" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.LeaseStatus.Unlocked" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.LeaseStatus.#ctor" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.LegalHoldInner" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.LegalHoldInner">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.LegalHoldInner.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.LegalHoldInner.#ctor(System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.LegalHoldInner.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.LegalHoldInner.HasLegalHold" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.LegalHoldInner.Tags" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.LegalHoldProperties" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.LegalHoldProperties">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.LegalHoldProperties.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.LegalHoldProperties.#ctor(System.Nullable{System.Boolean},System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Fluent.Models.TagProperty})" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.LegalHoldProperties.HasLegalHold" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.LegalHoldProperties.Tags" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.ListAccountSasResponseInner" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.ListAccountSasResponseInner">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.ListAccountSasResponseInner.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.ListAccountSasResponseInner.#ctor(System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ListAccountSasResponseInner.AccountSasToken" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.ListContainerItem" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.ListContainerItem">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.ListContainerItem.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.ListContainerItem.#ctor(System.String,System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.PublicAccess},System.Nullable{System.DateTime},Microsoft.Azure.Management.Storage.Fluent.Models.LeaseStatus,Microsoft.Azure.Management.Storage.Fluent.Models.LeaseState,Microsoft.Azure.Management.Storage.Fluent.Models.LeaseDuration,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyProperties,Microsoft.Azure.Management.Storage.Fluent.Models.LegalHoldProperties,System.Nullable{System.Boolean},System.Nullable{System.Boolean})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.ListContainerItem.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ListContainerItem.HasImmutabilityPolicy" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ListContainerItem.HasLegalHold" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ListContainerItem.ImmutabilityPolicy" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ListContainerItem.LastModifiedTime" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ListContainerItem.LeaseDuration" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ListContainerItem.LeaseState" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ListContainerItem.LeaseStatus" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ListContainerItem.LegalHold" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ListContainerItem.Metadata" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ListContainerItem.PublicAccess" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.ListContainerItemsInner" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.ListContainerItemsInner">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.ListContainerItemsInner.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.ListContainerItemsInner.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Fluent.Models.ListContainerItem})" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ListContainerItemsInner.Value" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.ListServiceSasResponseInner" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.ListServiceSasResponseInner">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.ListServiceSasResponseInner.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.ListServiceSasResponseInner.#ctor(System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ListServiceSasResponseInner.ServiceSasToken" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyAction" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyAction">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyAction.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyAction.#ctor(Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyBaseBlob,Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicySnapShot)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyAction.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyAction.BaseBlob" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyAction.Snapshot" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyBaseBlob" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyBaseBlob">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyBaseBlob.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyBaseBlob.#ctor(Microsoft.Azure.Management.Storage.Fluent.Models.DateAfterModification,Microsoft.Azure.Management.Storage.Fluent.Models.DateAfterModification,Microsoft.Azure.Management.Storage.Fluent.Models.DateAfterModification)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyBaseBlob.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyBaseBlob.Delete" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyBaseBlob.TierToArchive" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyBaseBlob.TierToCool" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyDefinition" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyDefinition">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyDefinition.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyDefinition.#ctor(Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyAction,Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyFilter)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyDefinition.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyDefinition.Actions" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyDefinition.Filters" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyFilter" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyFilter">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyFilter.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyFilter.#ctor(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyFilter.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyFilter.BlobTypes" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyFilter.PrefixMatch" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyInner" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyInner">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyInner.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyInner.#ctor(Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicySchema,System.String,System.String,System.String,System.Nullable{System.DateTime})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyInner.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyInner.LastModifiedTime" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyInner.Policy" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyRule" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyRule">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyRule.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyRule.#ctor(System.String,Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyDefinition,System.Nullable{System.Boolean})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyRule.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyRule.Definition" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyRule.Enabled" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyRule.Name" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyRule.Type" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicySchema" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicySchema">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicySchema.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicySchema.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyRule})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicySchema.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicySchema.Rules" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicySnapShot" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicySnapShot">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicySnapShot.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicySnapShot.#ctor(Microsoft.Azure.Management.Storage.Fluent.Models.DateAfterCreation)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicySnapShot.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicySnapShot.Delete" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.MetricSpecification" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.MetricSpecification">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.MetricSpecification.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.MetricSpecification.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Fluent.Models.Dimension},System.String,System.Nullable{System.Boolean},System.String,System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.MetricSpecification.AggregationType" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.MetricSpecification.Category" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.MetricSpecification.Dimensions" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.MetricSpecification.DisplayDescription" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.MetricSpecification.DisplayName" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.MetricSpecification.FillGapWithZero" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.MetricSpecification.Name" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.MetricSpecification.ResourceIdDimensionNameOverride" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.MetricSpecification.Unit" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.NetworkRuleSet" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.NetworkRuleSet">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.NetworkRuleSet.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.NetworkRuleSet.#ctor(Microsoft.Azure.Management.Storage.Fluent.Models.DefaultAction,Microsoft.Azure.Management.Storage.Fluent.Models.Bypass,System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Fluent.Models.VirtualNetworkRule},System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Fluent.Models.IPRule})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.NetworkRuleSet.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.NetworkRuleSet.Bypass" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.NetworkRuleSet.DefaultAction" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.NetworkRuleSet.IpRules" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.NetworkRuleSet.VirtualNetworkRules" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.OperationDisplay" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.OperationDisplay">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.OperationDisplay.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.OperationDisplay.#ctor(System.String,System.String,System.String,System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.OperationDisplay.Description" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.OperationDisplay.Operation" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.OperationDisplay.Provider" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.OperationDisplay.Resource" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.OperationInner" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.OperationInner">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.OperationInner.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.OperationInner.#ctor(System.String,Microsoft.Azure.Management.Storage.Fluent.Models.OperationDisplay,System.String,Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSpecification)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.OperationInner.Display" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.OperationInner.Name" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.OperationInner.Origin" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.OperationInner.ServiceSpecification" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.Page`1" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.Page`1">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.Page`1.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.Page`1.GetEnumerator" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.Page`1.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.Page`1.NextPageLink" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.Permissions" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.Permissions">
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.Permissions.A" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.Permissions.C" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.Permissions.D" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.Permissions.L" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.Permissions.P" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.Permissions.R" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.Permissions.U" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.Permissions.W" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.Permissions.#ctor" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.ProvisioningState" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.ProvisioningState">
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.ProvisioningState.Creating" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.ProvisioningState.ResolvingDNS" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.ProvisioningState.Succeeded" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.ProxyResourceInner" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.ProxyResourceInner">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.ProxyResourceInner.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.ProxyResourceInner.#ctor(System.String,System.String,System.String)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.PublicAccess" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.PublicAccess">
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.PublicAccess.Blob" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.PublicAccess.Container" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.PublicAccess.None" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.Reason" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.Reason">
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.Reason.AccountNameInvalid" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.Reason.AlreadyExists" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.ReasonCode" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.ReasonCode">
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.ReasonCode.NotAvailableForSubscription" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.ReasonCode.QuotaId" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.ReasonCode.#ctor" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.Restriction" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.Restriction">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.Restriction.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.Restriction.#ctor(System.String,System.Collections.Generic.IList{System.String},Microsoft.Azure.Management.Storage.Fluent.Models.ReasonCode)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.Restriction.ReasonCode" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.Restriction.Type" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.Restriction.Values" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.Services" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.Services">
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.Services.B" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.Services.F" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.Services.Q" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.Services.T" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.Services.#ctor" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters.#ctor(System.String,Microsoft.Azure.Management.Storage.Fluent.Models.SignedResource,Microsoft.Azure.Management.Storage.Fluent.Models.Permissions,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.HttpProtocol},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters.CacheControl" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters.CanonicalizedResource" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters.ContentDisposition" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters.ContentEncoding" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters.ContentLanguage" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters.ContentType" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters.Identifier" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters.IPAddressOrRange" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters.KeyToSign" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters.PartitionKeyEnd" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters.PartitionKeyStart" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters.Permissions" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters.Protocols" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters.Resource" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters.RowKeyEnd" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters.RowKeyStart" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters.SharedAccessExpiryTime" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSasParameters.SharedAccessStartTime" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSpecification" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSpecification">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSpecification.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSpecification.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Fluent.Models.MetricSpecification})" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.ServiceSpecification.MetricSpecifications" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.SignedResource" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.SignedResource">
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.SignedResource.B" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.SignedResource.C" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.SignedResource.F" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.SignedResource.S" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.SignedResource.#ctor" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.SignedResourceTypes" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.SignedResourceTypes">
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.SignedResourceTypes.C" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.SignedResourceTypes.O" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.SignedResourceTypes.S" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.SignedResourceTypes.#ctor" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.SKUCapability" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.SKUCapability">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.SKUCapability.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.SKUCapability.#ctor(System.String,System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.SKUCapability.Name" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.SKUCapability.Value" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.SkuInner" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.SkuInner">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.SkuInner.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.SkuInner.#ctor(Microsoft.Azure.Management.Storage.Fluent.Models.SkuName,System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.SkuTier},System.String,System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.Kind},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Fluent.Models.SKUCapability},System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Fluent.Models.Restriction})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.SkuInner.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.SkuInner.Capabilities" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.SkuInner.Kind" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.SkuInner.Locations" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.SkuInner.Name" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.SkuInner.ResourceType" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.SkuInner.Restrictions" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.SkuInner.Tier" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.SkuName" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.SkuName">
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.SkuName.PremiumLRS" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.SkuName.StandardGRS" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.SkuName.StandardLRS" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.SkuName.StandardRAGRS" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.SkuName.StandardZRS" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.SkuName.#ctor" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.SkuTier" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.SkuTier">
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.SkuTier.Premium" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.SkuTier.Standard" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.State" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.State">
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.State.Deprovisioning" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.State.Failed" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.State.NetworkSourceDeleted" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.State.Provisioning" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.State.Succeeded" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCheckNameAvailabilityParameters" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCheckNameAvailabilityParameters">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCheckNameAvailabilityParameters.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCheckNameAvailabilityParameters.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCheckNameAvailabilityParameters.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCheckNameAvailabilityParameters.Name" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCheckNameAvailabilityParameters.Type" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCreateParameters" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCreateParameters">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCreateParameters.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCreateParameters.#ctor(Microsoft.Azure.Management.Storage.Fluent.Models.SkuInner,Microsoft.Azure.Management.Storage.Fluent.Models.Kind,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.Storage.Fluent.Models.Identity,Microsoft.Azure.Management.Storage.Fluent.Models.CustomDomain,Microsoft.Azure.Management.Storage.Fluent.Models.Encryption,Microsoft.Azure.Management.Storage.Fluent.Models.NetworkRuleSet,System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.AccessTier},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCreateParameters.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCreateParameters.AccessTier" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCreateParameters.CustomDomain" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCreateParameters.EnableAzureFilesAadIntegration" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCreateParameters.EnableHttpsTrafficOnly" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCreateParameters.Encryption" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCreateParameters.Identity" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCreateParameters.IsHnsEnabled" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCreateParameters.Kind" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCreateParameters.Location" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCreateParameters.NetworkRuleSet" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCreateParameters.Sku" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountCreateParameters.Tags" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountExpand" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountExpand">
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountExpand.GeoReplicationStats" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.Storage.Fluent.Models.SkuInner,System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.Kind},Microsoft.Azure.Management.Storage.Fluent.Models.Identity,System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.ProvisioningState},Microsoft.Azure.Management.Storage.Fluent.Models.Endpoints,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.AccountStatus},System.Nullable{System.DateTime},System.String,System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.AccountStatus},System.Nullable{System.DateTime},Microsoft.Azure.Management.Storage.Fluent.Models.CustomDomain,Microsoft.Azure.Management.Storage.Fluent.Models.Endpoints,Microsoft.Azure.Management.Storage.Fluent.Models.Encryption,System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.AccessTier},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.Azure.Management.Storage.Fluent.Models.NetworkRuleSet,System.Nullable{System.Boolean},Microsoft.Azure.Management.Storage.Fluent.Models.GeoReplicationStats,System.Nullable{System.Boolean})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner.AccessTier" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner.CreationTime" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner.CustomDomain" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner.EnableAzureFilesAadIntegration" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner.EnableHttpsTrafficOnly" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner.Encryption" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner.FailoverInProgress" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner.GeoReplicationStats" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner.Identity" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner.IsHnsEnabled" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner.Kind" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner.LastGeoFailoverTime" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner.NetworkRuleSet" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner.PrimaryEndpoints" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner.PrimaryLocation" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner.ProvisioningState" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner.SecondaryEndpoints" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner.SecondaryLocation" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner.Sku" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner.StatusOfPrimary" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountInner.StatusOfSecondary" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountKey" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountKey">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountKey.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountKey.#ctor(System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.KeyPermission})" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountKey.KeyName" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountKey.Permissions" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountKey.Value" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountListKeysResultInner" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountListKeysResultInner">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountListKeysResultInner.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountListKeysResultInner.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountKey})" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountListKeysResultInner.Keys" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountRegenerateKeyParameters" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountRegenerateKeyParameters">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountRegenerateKeyParameters.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountRegenerateKeyParameters.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountRegenerateKeyParameters.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountRegenerateKeyParameters.KeyName" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountUpdateParameters" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountUpdateParameters">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountUpdateParameters.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountUpdateParameters.#ctor(Microsoft.Azure.Management.Storage.Fluent.Models.SkuInner,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.Storage.Fluent.Models.Identity,Microsoft.Azure.Management.Storage.Fluent.Models.CustomDomain,Microsoft.Azure.Management.Storage.Fluent.Models.Encryption,System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.AccessTier},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.Azure.Management.Storage.Fluent.Models.NetworkRuleSet,System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.Kind})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountUpdateParameters.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountUpdateParameters.AccessTier" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountUpdateParameters.CustomDomain" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountUpdateParameters.EnableAzureFilesAadIntegration" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountUpdateParameters.EnableHttpsTrafficOnly" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountUpdateParameters.Encryption" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountUpdateParameters.Identity" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountUpdateParameters.Kind" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountUpdateParameters.NetworkRuleSet" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountUpdateParameters.Sku" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.StorageAccountUpdateParameters.Tags" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.TagProperty" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.TagProperty">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.TagProperty.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.TagProperty.#ctor(System.String,System.Nullable{System.DateTime},System.String,System.String,System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.TagProperty.ObjectIdentifier" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.TagProperty.Tag" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.TagProperty.TenantId" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.TagProperty.Timestamp" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.TagProperty.Upn" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.TrackedResourceInner" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.TrackedResourceInner">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.TrackedResourceInner.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.TrackedResourceInner.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.TrackedResourceInner.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.TrackedResourceInner.Location" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.TrackedResourceInner.Tags" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.UpdateHistoryProperty" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.UpdateHistoryProperty">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.UpdateHistoryProperty.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.UpdateHistoryProperty.#ctor(Microsoft.Azure.Management.Storage.Fluent.Models.ImmutabilityPolicyUpdateType,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.String,System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.UpdateHistoryProperty.ImmutabilityPeriodSinceCreationInDays" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.UpdateHistoryProperty.ObjectIdentifier" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.UpdateHistoryProperty.TenantId" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.UpdateHistoryProperty.Timestamp" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.UpdateHistoryProperty.Update" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.UpdateHistoryProperty.Upn" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.UsageInner" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.UsageInner">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.UsageInner.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.UsageInner.#ctor(System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.UsageUnit},System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.Azure.Management.Storage.Fluent.Models.UsageName)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.UsageInner.CurrentValue" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.UsageInner.Limit" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.UsageInner.Name" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.UsageInner.Unit" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.UsageName" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.UsageName">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.UsageName.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.UsageName.#ctor(System.String,System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.UsageName.LocalizedValue" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.UsageName.Value" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.UsageUnit" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.UsageUnit">
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.UsageUnit.Bytes" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.UsageUnit.BytesPerSecond" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.UsageUnit.Count" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.UsageUnit.CountsPerSecond" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.UsageUnit.Percent" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Fluent.Models.UsageUnit.Seconds" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.Models.VirtualNetworkRule" Id="T:Microsoft.Azure.Management.Storage.Fluent.Models.VirtualNetworkRule">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.VirtualNetworkRule.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.VirtualNetworkRule.#ctor(System.String,System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.Action},System.Nullable{Microsoft.Azure.Management.Storage.Fluent.Models.State})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.Models.VirtualNetworkRule.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.VirtualNetworkRule.Action" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.VirtualNetworkRule.State" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Fluent.Models.VirtualNetworkRule.VirtualNetworkResourceId" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Definition">
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Definition.IBlank" Id="T:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Definition.IBlank" />
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Definition.IDefinition" Id="T:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Definition.IDefinition" />
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Definition.IPrefixActionFork" Id="T:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Definition.IPrefixActionFork" />
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Definition.IWithBlobTypesToFilterFor" Id="T:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Definition.IWithBlobTypesToFilterFor">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Definition.IWithBlobTypesToFilterFor.WithBlobTypesToFilterFor(System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Fluent.BlobTypes})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Definition.IWithBlobTypesToFilterFor.WithBlobTypeToFilterFor(Microsoft.Azure.Management.Storage.Fluent.BlobTypes)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Definition.IWithPolicyRuleAttachable" Id="T:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Definition.IWithPolicyRuleAttachable" />
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Definition.IWithPolicyRuleType" Id="T:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Definition.IWithPolicyRuleType">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Definition.IWithPolicyRuleType.WithLifecycleRuleType" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Definition.IWithPrefixesToFilterFor" Id="T:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Definition.IWithPrefixesToFilterFor">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Definition.IWithPrefixesToFilterFor.WithPrefixesToFilterFor(System.Collections.Generic.IList{System.String})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Definition.IWithPrefixesToFilterFor.WithPrefixToFilterFor(System.String)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Definition.IWithRuleActions" Id="T:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Definition.IWithRuleActions">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Definition.IWithRuleActions.WithActionsOnBaseBlob(Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyBaseBlob)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Definition.IWithRuleActions.WithActionsOnSnapShot(Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicySnapShot)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Definition.IWithRuleActions.WithDeleteActionOnBaseBlob(System.Int32)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Definition.IWithRuleActions.WithDeleteActionOnSnapShot(System.Int32)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Definition.IWithRuleActions.WithTierToArchiveActionOnBaseBlob(System.Int32)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Definition.IWithRuleActions.WithTierToCoolActionOnBaseBlob(System.Int32)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Update">
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Update.IUpdate" Id="T:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Update.IUpdate" />
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Update.IWithActions" Id="T:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Update.IWithActions">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Update.IWithActions.UpdateActionsOnBaseBlob(Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicyBaseBlob)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Update.IWithActions.UpdateActionsOnSnapShot(Microsoft.Azure.Management.Storage.Fluent.Models.ManagementPolicySnapShot)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Update.IWithActions.WithDeleteActionOnBaseBlob(System.Int32)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Update.IWithActions.WithDeleteActionOnSnapShot(System.Int32)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Update.IWithActions.WithTierToArchiveActionOnBaseBlob(System.Int32)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Update.IWithActions.WithTierToCoolActionOnBaseBlob(System.Int32)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Update.IWithBlobTypesToFilterFor" Id="T:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Update.IWithBlobTypesToFilterFor">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Update.IWithBlobTypesToFilterFor.WithBlobTypesToFilterFor(System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Fluent.BlobTypes})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Update.IWithBlobTypesToFilterFor.WithBlobTypeToFilterFor(Microsoft.Azure.Management.Storage.Fluent.BlobTypes)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Update.IWithBlobTypesToFilterFor.WithBlobTypeToFilterForRemoved(Microsoft.Azure.Management.Storage.Fluent.BlobTypes)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Update.IWithPrefixesToFilterFor" Id="T:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Update.IWithPrefixesToFilterFor">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Update.IWithPrefixesToFilterFor.WithoutPrefixesToFilterFor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Update.IWithPrefixesToFilterFor.WithPrefixesToFilterFor(System.Collections.Generic.IList{System.String})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.PolicyRule.Update.IWithPrefixesToFilterFor.WithPrefixToFilterFor(System.String)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition">
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IBlank" Id="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IBlank" />
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IDefinition" Id="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IDefinition" />
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithAccessTraffic" Id="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithAccessTraffic">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithAccessTraffic.WithOnlyHttpsTraffic" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithAzureFilesAadIntegration" Id="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithAzureFilesAadIntegration">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithAzureFilesAadIntegration.WithAzureFilesAadIntegrationEnabled(System.Boolean)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithBlobStorageAccountKind" Id="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithBlobStorageAccountKind">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithBlobStorageAccountKind.WithBlobStorageAccountKind" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithBlockBlobStorageAccountKind" Id="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithBlockBlobStorageAccountKind">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithBlockBlobStorageAccountKind.WithBlockBlobStorageAccountKind" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithCreate" Id="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithCreate" />
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithCreateAndAccessTier" Id="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithCreateAndAccessTier">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithCreateAndAccessTier.WithAccessTier(Microsoft.Azure.Management.Storage.Fluent.Models.AccessTier)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithCustomDomain" Id="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithCustomDomain">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithCustomDomain.WithCustomDomain(Microsoft.Azure.Management.Storage.Fluent.Models.CustomDomain)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithCustomDomain.WithCustomDomain(System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithCustomDomain.WithCustomDomain(System.String,System.Boolean)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithEncryption" Id="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithEncryption">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithEncryption.WithEncryption" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithEncryptionBeta" Id="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithEncryptionBeta">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithEncryptionBeta.WithBlobEncryption" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithEncryptionBeta.WithEncryptionKeyFromKeyVault(System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithEncryptionBeta.WithFileEncryption" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithEncryptionBeta.WithoutBlobEncryption" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithEncryptionBeta.WithoutFileEncryption" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithFileStorageAccountKind" Id="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithFileStorageAccountKind">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithFileStorageAccountKind.WithFileStorageAccountKind" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithGeneralPurposeAccountKind" Id="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithGeneralPurposeAccountKind">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithGeneralPurposeAccountKind.WithGeneralPurposeAccountKind" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithGeneralPurposeAccountKind.WithGeneralPurposeAccountKindV2" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithGroup" Id="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithGroup" />
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithHns" Id="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithHns">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithHns.WithHnsEnabled(System.Boolean)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithManagedServiceIdentity" Id="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithManagedServiceIdentity" />
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithManagedServiceIdentityBeta" Id="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithManagedServiceIdentityBeta">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithManagedServiceIdentityBeta.WithSystemAssignedManagedServiceIdentity" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithNetworkAccess" Id="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithNetworkAccess">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithNetworkAccess.WithAccessFromAllNetworks" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithNetworkAccess.WithAccessFromAzureServices" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithNetworkAccess.WithAccessFromIpAddress(System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithNetworkAccess.WithAccessFromIpAddressRange(System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithNetworkAccess.WithAccessFromNetworkSubnet(System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithNetworkAccess.WithAccessFromSelectedNetworks" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithNetworkAccess.WithReadAccessToLogEntriesFromAnyNetwork" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithNetworkAccess.WithReadAccessToMetricsFromAnyNetwork" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithSku" Id="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithSku">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithSku.WithSku(Microsoft.Azure.Management.Storage.Fluent.Models.SkuName)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithSkuBeta" Id="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithSkuBeta">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Definition.IWithSkuBeta.WithSku(Microsoft.Azure.Management.Storage.Fluent.StorageAccountSkuType)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update">
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IUpdate" Id="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IUpdate" />
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithAccessTier" Id="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithAccessTier">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithAccessTier.WithAccessTier(Microsoft.Azure.Management.Storage.Fluent.Models.AccessTier)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithAccessTraffic" Id="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithAccessTraffic">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithAccessTraffic.WithHttpAndHttpsTraffic" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithAccessTraffic.WithOnlyHttpsTraffic" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithAzureFilesAadIntegration" Id="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithAzureFilesAadIntegration">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithAzureFilesAadIntegration.WithAzureFilesAadIntegrationEnabled(System.Boolean)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithCustomDomain" Id="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithCustomDomain">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithCustomDomain.WithCustomDomain(Microsoft.Azure.Management.Storage.Fluent.Models.CustomDomain)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithCustomDomain.WithCustomDomain(System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithCustomDomain.WithCustomDomain(System.String,System.Boolean)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithEncryption" Id="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithEncryption">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithEncryption.WithEncryption" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithEncryption.WithoutEncryption" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithEncryptionBeta" Id="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithEncryptionBeta">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithEncryptionBeta.WithBlobEncryption" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithEncryptionBeta.WithEncryptionKeyFromKeyVault(System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithEncryptionBeta.WithFileEncryption" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithEncryptionBeta.WithoutBlobEncryption" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithEncryptionBeta.WithoutFileEncryption" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithManagedServiceIdentity" Id="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithManagedServiceIdentity" />
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithManagedServiceIdentityBeta" Id="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithManagedServiceIdentityBeta">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithManagedServiceIdentityBeta.WithSystemAssignedManagedServiceIdentity" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithNetworkAccess" Id="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithNetworkAccess">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithNetworkAccess.WithAccessFromAllNetworks" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithNetworkAccess.WithAccessFromAzureServices" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithNetworkAccess.WithAccessFromIpAddress(System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithNetworkAccess.WithAccessFromIpAddressRange(System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithNetworkAccess.WithAccessFromNetworkSubnet(System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithNetworkAccess.WithAccessFromSelectedNetworks" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithNetworkAccess.WithoutAccessFromAzureServices" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithNetworkAccess.WithoutIpAddressAccess(System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithNetworkAccess.WithoutIpAddressRangeAccess(System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithNetworkAccess.WithoutNetworkSubnetAccess(System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithNetworkAccess.WithoutReadAccessToLoggingFromAnyNetwork" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithNetworkAccess.WithoutReadAccessToMetricsFromAnyNetwork" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithNetworkAccess.WithReadAccessToLogEntriesFromAnyNetwork" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithNetworkAccess.WithReadAccessToMetricsFromAnyNetwork" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithSku" Id="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithSku">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithSku.WithSku(Microsoft.Azure.Management.Storage.Fluent.Models.SkuName)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithSkuBeta" Id="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithSkuBeta">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithSkuBeta.WithSku(Microsoft.Azure.Management.Storage.Fluent.StorageAccountSkuType)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithUpgrade" Id="T:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithUpgrade">
      <Member Id="M:Microsoft.Azure.Management.Storage.Fluent.StorageAccount.Update.IWithUpgrade.UpgradeToGeneralPurposeAccountKindV2" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Management.Storage.Models">
    <Type Name="Microsoft.Azure.Management.Storage.Models.AccessTier" Id="T:Microsoft.Azure.Management.Storage.Models.AccessTier">
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.AccessTier.Cool" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.AccessTier.Hot" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.AccountSasParameters" Id="T:Microsoft.Azure.Management.Storage.Models.AccountSasParameters">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.AccountSasParameters.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.AccountSasParameters.#ctor(System.String,System.String,System.String,System.DateTime,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.HttpProtocol},System.Nullable{System.DateTime},System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.AccountSasParameters.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.AccountSasParameters.IPAddressOrRange" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.AccountSasParameters.KeyToSign" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.AccountSasParameters.Permissions" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.AccountSasParameters.Protocols" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.AccountSasParameters.ResourceTypes" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.AccountSasParameters.Services" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.AccountSasParameters.SharedAccessExpiryTime" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.AccountSasParameters.SharedAccessStartTime" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.AccountStatus" Id="T:Microsoft.Azure.Management.Storage.Models.AccountStatus">
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.AccountStatus.Available" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.AccountStatus.Unavailable" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.Action" Id="T:Microsoft.Azure.Management.Storage.Models.Action">
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.Action.Allow" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.ActiveDirectoryProperties" Id="T:Microsoft.Azure.Management.Storage.Models.ActiveDirectoryProperties">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ActiveDirectoryProperties.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ActiveDirectoryProperties.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ActiveDirectoryProperties.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ActiveDirectoryProperties.AzureStorageSid" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ActiveDirectoryProperties.DomainGuid" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ActiveDirectoryProperties.DomainName" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ActiveDirectoryProperties.DomainSid" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ActiveDirectoryProperties.ForestName" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ActiveDirectoryProperties.NetBiosDomainName" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.AzureEntityResource" Id="T:Microsoft.Azure.Management.Storage.Models.AzureEntityResource">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.AzureEntityResource.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.AzureEntityResource.#ctor(System.String,System.String,System.String,System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.AzureEntityResource.Etag" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.AzureFilesIdentityBasedAuthentication" Id="T:Microsoft.Azure.Management.Storage.Models.AzureFilesIdentityBasedAuthentication">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.AzureFilesIdentityBasedAuthentication.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.AzureFilesIdentityBasedAuthentication.#ctor(System.String,Microsoft.Azure.Management.Storage.Models.ActiveDirectoryProperties)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.AzureFilesIdentityBasedAuthentication.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.AzureFilesIdentityBasedAuthentication.ActiveDirectoryProperties" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.AzureFilesIdentityBasedAuthentication.DirectoryServiceOptions" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.BlobContainer" Id="T:Microsoft.Azure.Management.Storage.Models.BlobContainer">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.BlobContainer.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.BlobContainer.#ctor(System.String,System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.PublicAccess},System.Nullable{System.DateTime},System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicyProperties,Microsoft.Azure.Management.Storage.Models.LegalHoldProperties,System.Nullable{System.Boolean},System.Nullable{System.Boolean})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.BlobContainer.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.BlobContainer.HasImmutabilityPolicy" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.BlobContainer.HasLegalHold" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.BlobContainer.ImmutabilityPolicy" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.BlobContainer.LastModifiedTime" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.BlobContainer.LeaseDuration" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.BlobContainer.LeaseState" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.BlobContainer.LeaseStatus" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.BlobContainer.LegalHold" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.BlobContainer.Metadata" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.BlobContainer.PublicAccess" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.BlobContainersCreateOrUpdateImmutabilityPolicyHeaders" Id="T:Microsoft.Azure.Management.Storage.Models.BlobContainersCreateOrUpdateImmutabilityPolicyHeaders">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.BlobContainersCreateOrUpdateImmutabilityPolicyHeaders.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.BlobContainersCreateOrUpdateImmutabilityPolicyHeaders.#ctor(System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.BlobContainersCreateOrUpdateImmutabilityPolicyHeaders.ETag" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.BlobContainersDeleteImmutabilityPolicyHeaders" Id="T:Microsoft.Azure.Management.Storage.Models.BlobContainersDeleteImmutabilityPolicyHeaders">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.BlobContainersDeleteImmutabilityPolicyHeaders.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.BlobContainersDeleteImmutabilityPolicyHeaders.#ctor(System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.BlobContainersDeleteImmutabilityPolicyHeaders.ETag" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.BlobContainersExtendImmutabilityPolicyHeaders" Id="T:Microsoft.Azure.Management.Storage.Models.BlobContainersExtendImmutabilityPolicyHeaders">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.BlobContainersExtendImmutabilityPolicyHeaders.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.BlobContainersExtendImmutabilityPolicyHeaders.#ctor(System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.BlobContainersExtendImmutabilityPolicyHeaders.ETag" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.BlobContainersGetImmutabilityPolicyHeaders" Id="T:Microsoft.Azure.Management.Storage.Models.BlobContainersGetImmutabilityPolicyHeaders">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.BlobContainersGetImmutabilityPolicyHeaders.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.BlobContainersGetImmutabilityPolicyHeaders.#ctor(System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.BlobContainersGetImmutabilityPolicyHeaders.ETag" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.BlobContainersLockImmutabilityPolicyHeaders" Id="T:Microsoft.Azure.Management.Storage.Models.BlobContainersLockImmutabilityPolicyHeaders">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.BlobContainersLockImmutabilityPolicyHeaders.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.BlobContainersLockImmutabilityPolicyHeaders.#ctor(System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.BlobContainersLockImmutabilityPolicyHeaders.ETag" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.BlobRestoreParameters" Id="T:Microsoft.Azure.Management.Storage.Models.BlobRestoreParameters">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.BlobRestoreParameters.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.BlobRestoreParameters.#ctor(System.DateTime,System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.BlobRestoreRange})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.BlobRestoreParameters.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.BlobRestoreParameters.BlobRanges" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.BlobRestoreParameters.TimeToRestore" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.BlobRestoreProgressStatus" Id="T:Microsoft.Azure.Management.Storage.Models.BlobRestoreProgressStatus">
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.BlobRestoreProgressStatus.Complete" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.BlobRestoreProgressStatus.Failed" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.BlobRestoreProgressStatus.InProgress" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.BlobRestoreRange" Id="T:Microsoft.Azure.Management.Storage.Models.BlobRestoreRange">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.BlobRestoreRange.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.BlobRestoreRange.#ctor(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.BlobRestoreRange.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.BlobRestoreRange.EndRange" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.BlobRestoreRange.StartRange" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.BlobRestoreStatus" Id="T:Microsoft.Azure.Management.Storage.Models.BlobRestoreStatus">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.BlobRestoreStatus.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.BlobRestoreStatus.#ctor(System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.BlobRestoreParameters)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.BlobRestoreStatus.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.BlobRestoreStatus.FailureReason" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.BlobRestoreStatus.Parameters" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.BlobRestoreStatus.RestoreId" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.BlobRestoreStatus.Status" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.BlobServiceProperties" Id="T:Microsoft.Azure.Management.Storage.Models.BlobServiceProperties">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.BlobServiceProperties.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.BlobServiceProperties.#ctor(System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.CorsRules,System.String,Microsoft.Azure.Management.Storage.Models.DeleteRetentionPolicy,System.Nullable{System.Boolean},Microsoft.Azure.Management.Storage.Models.ChangeFeed,Microsoft.Azure.Management.Storage.Models.RestorePolicyProperties,Microsoft.Azure.Management.Storage.Models.Sku)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.BlobServiceProperties.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.BlobServiceProperties.AutomaticSnapshotPolicyEnabled" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.BlobServiceProperties.ChangeFeed" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.BlobServiceProperties.Cors" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.BlobServiceProperties.DefaultServiceVersion" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.BlobServiceProperties.DeleteRetentionPolicy" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.BlobServiceProperties.RestorePolicy" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.BlobServiceProperties.Sku" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.Bypass" Id="T:Microsoft.Azure.Management.Storage.Models.Bypass">
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.Bypass.AzureServices" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.Bypass.Logging" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.Bypass.Metrics" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.Bypass.None" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.ChangeFeed" Id="T:Microsoft.Azure.Management.Storage.Models.ChangeFeed">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ChangeFeed.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ChangeFeed.#ctor(System.Nullable{System.Boolean})" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ChangeFeed.Enabled" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult" Id="T:Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult.#ctor(System.Nullable{System.Boolean},System.Nullable{Microsoft.Azure.Management.Storage.Models.Reason},System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult.Message" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult.NameAvailable" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult.Reason" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.CorsRule" Id="T:Microsoft.Azure.Management.Storage.Models.CorsRule">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.CorsRule.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.CorsRule.#ctor(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Int32,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.CorsRule.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.CorsRule.AllowedHeaders" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.CorsRule.AllowedMethods" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.CorsRule.AllowedOrigins" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.CorsRule.ExposedHeaders" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.CorsRule.MaxAgeInSeconds" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.CorsRules" Id="T:Microsoft.Azure.Management.Storage.Models.CorsRules">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.CorsRules.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.CorsRules.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.CorsRule})" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.CorsRules.CorsRulesProperty" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.CustomDomain" Id="T:Microsoft.Azure.Management.Storage.Models.CustomDomain">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.CustomDomain.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.CustomDomain.#ctor(System.String,System.Nullable{System.Boolean})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.CustomDomain.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.CustomDomain.Name" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.CustomDomain.UseSubDomainName" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.DateAfterCreation" Id="T:Microsoft.Azure.Management.Storage.Models.DateAfterCreation">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.DateAfterCreation.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.DateAfterCreation.#ctor(System.Double)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.DateAfterCreation.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.DateAfterCreation.DaysAfterCreationGreaterThan" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.DateAfterModification" Id="T:Microsoft.Azure.Management.Storage.Models.DateAfterModification">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.DateAfterModification.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.DateAfterModification.#ctor(System.Double)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.DateAfterModification.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.DateAfterModification.DaysAfterModificationGreaterThan" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.DefaultAction" Id="T:Microsoft.Azure.Management.Storage.Models.DefaultAction">
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.DefaultAction.Allow" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.DefaultAction.Deny" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.DeleteRetentionPolicy" Id="T:Microsoft.Azure.Management.Storage.Models.DeleteRetentionPolicy">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.DeleteRetentionPolicy.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.DeleteRetentionPolicy.#ctor(System.Nullable{System.Boolean},System.Nullable{System.Int32})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.DeleteRetentionPolicy.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.DeleteRetentionPolicy.Days" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.DeleteRetentionPolicy.Enabled" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.Dimension" Id="T:Microsoft.Azure.Management.Storage.Models.Dimension">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.Dimension.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.Dimension.#ctor(System.String,System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.Dimension.DisplayName" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.Dimension.Name" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.DirectoryServiceOptions" Id="T:Microsoft.Azure.Management.Storage.Models.DirectoryServiceOptions">
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.DirectoryServiceOptions.AADDS" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.DirectoryServiceOptions.AD" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.DirectoryServiceOptions.None" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.Encryption" Id="T:Microsoft.Azure.Management.Storage.Models.Encryption">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.Encryption.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.Encryption.#ctor(System.String,Microsoft.Azure.Management.Storage.Models.EncryptionServices,Microsoft.Azure.Management.Storage.Models.KeyVaultProperties)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.Encryption.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.Encryption.KeySource" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.Encryption.KeyVaultProperties" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.Encryption.Services" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.EncryptionService" Id="T:Microsoft.Azure.Management.Storage.Models.EncryptionService">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.EncryptionService.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.EncryptionService.#ctor(System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.EncryptionService.Enabled" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.EncryptionService.KeyType" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.EncryptionService.LastEnabledTime" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.EncryptionServices" Id="T:Microsoft.Azure.Management.Storage.Models.EncryptionServices">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.EncryptionServices.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.EncryptionServices.#ctor(Microsoft.Azure.Management.Storage.Models.EncryptionService,Microsoft.Azure.Management.Storage.Models.EncryptionService,Microsoft.Azure.Management.Storage.Models.EncryptionService,Microsoft.Azure.Management.Storage.Models.EncryptionService)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.EncryptionServices.Blob" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.EncryptionServices.File" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.EncryptionServices.Queue" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.EncryptionServices.Table" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.Endpoints" Id="T:Microsoft.Azure.Management.Storage.Models.Endpoints">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.Endpoints.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.Endpoints.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.StorageAccountMicrosoftEndpoints,Microsoft.Azure.Management.Storage.Models.StorageAccountInternetEndpoints)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.Endpoints.Blob" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.Endpoints.Dfs" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.Endpoints.File" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.Endpoints.InternetEndpoints" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.Endpoints.MicrosoftEndpoints" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.Endpoints.Queue" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.Endpoints.Table" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.Endpoints.Web" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.ErrorResponse" Id="T:Microsoft.Azure.Management.Storage.Models.ErrorResponse">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ErrorResponse.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ErrorResponse.#ctor(System.String,System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ErrorResponse.Code" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ErrorResponse.Message" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.ErrorResponseException" Id="T:Microsoft.Azure.Management.Storage.Models.ErrorResponseException">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ErrorResponseException.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ErrorResponseException.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ErrorResponseException.#ctor(System.String,System.Exception)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ErrorResponseException.Body" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ErrorResponseException.Request" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ErrorResponseException.Response" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.FileServiceItems" Id="T:Microsoft.Azure.Management.Storage.Models.FileServiceItems">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.FileServiceItems.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.FileServiceItems.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.FileServiceProperties})" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.FileServiceItems.Value" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.FileServiceProperties" Id="T:Microsoft.Azure.Management.Storage.Models.FileServiceProperties">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.FileServiceProperties.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.FileServiceProperties.#ctor(System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.CorsRules,Microsoft.Azure.Management.Storage.Models.DeleteRetentionPolicy,Microsoft.Azure.Management.Storage.Models.Sku)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.FileServiceProperties.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.FileServiceProperties.Cors" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.FileServiceProperties.ShareDeleteRetentionPolicy" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.FileServiceProperties.Sku" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.FileShare" Id="T:Microsoft.Azure.Management.Storage.Models.FileShare">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.FileShare.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.FileShare.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.FileShare.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.FileShare.LastModifiedTime" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.FileShare.Metadata" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.FileShare.ShareQuota" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.FileShareItem" Id="T:Microsoft.Azure.Management.Storage.Models.FileShareItem">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.FileShareItem.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.FileShareItem.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.FileShareItem.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.FileShareItem.LastModifiedTime" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.FileShareItem.Metadata" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.FileShareItem.ShareQuota" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.GeoReplicationStats" Id="T:Microsoft.Azure.Management.Storage.Models.GeoReplicationStats">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.GeoReplicationStats.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.GeoReplicationStats.#ctor(System.String,System.Nullable{System.DateTime},System.Nullable{System.Boolean})" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.GeoReplicationStats.CanFailover" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.GeoReplicationStats.LastSyncTime" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.GeoReplicationStats.Status" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.GeoReplicationStatus" Id="T:Microsoft.Azure.Management.Storage.Models.GeoReplicationStatus">
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.GeoReplicationStatus.Bootstrap" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.GeoReplicationStatus.Live" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.GeoReplicationStatus.Unavailable" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.HttpProtocol" Id="T:Microsoft.Azure.Management.Storage.Models.HttpProtocol">
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.HttpProtocol.Https" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.HttpProtocol.Httpshttp" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.Identity" Id="T:Microsoft.Azure.Management.Storage.Models.Identity">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.Identity.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.Identity.#ctor(System.String,System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.Identity.PrincipalId" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.Identity.TenantId" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.Identity.Type" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicy" Id="T:Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicy">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicy.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicy.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicy.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicy.ImmutabilityPeriodSinceCreationInDays" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicy.State" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicyProperties" Id="T:Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicyProperties">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicyProperties.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicyProperties.#ctor(System.Int32,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.UpdateHistoryProperty})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicyProperties.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicyProperties.Etag" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicyProperties.ImmutabilityPeriodSinceCreationInDays" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicyProperties.State" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicyProperties.UpdateHistory" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicyState" Id="T:Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicyState">
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicyState.Locked" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicyState.Unlocked" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicyUpdateType" Id="T:Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicyUpdateType">
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicyUpdateType.Extend" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicyUpdateType.Lock" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicyUpdateType.Put" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.IPRule" Id="T:Microsoft.Azure.Management.Storage.Models.IPRule">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.IPRule.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.IPRule.#ctor(System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.Action})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.IPRule.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.IPRule.Action" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.IPRule.IPAddressOrRange" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.KeyPermission" Id="T:Microsoft.Azure.Management.Storage.Models.KeyPermission">
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.KeyPermission.Full" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.KeyPermission.Read" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.KeySource" Id="T:Microsoft.Azure.Management.Storage.Models.KeySource">
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.KeySource.MicrosoftKeyvault" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.KeySource.MicrosoftStorage" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.KeyType" Id="T:Microsoft.Azure.Management.Storage.Models.KeyType">
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.KeyType.Account" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.KeyType.Service" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.KeyVaultProperties" Id="T:Microsoft.Azure.Management.Storage.Models.KeyVaultProperties">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.KeyVaultProperties.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.KeyVaultProperties.#ctor(System.String,System.String,System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.KeyVaultProperties.KeyName" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.KeyVaultProperties.KeyVaultUri" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.KeyVaultProperties.KeyVersion" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.Kind" Id="T:Microsoft.Azure.Management.Storage.Models.Kind">
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.Kind.BlobStorage" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.Kind.BlockBlobStorage" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.Kind.FileStorage" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.Kind.Storage" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.Kind.StorageV2" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.LargeFileSharesState" Id="T:Microsoft.Azure.Management.Storage.Models.LargeFileSharesState">
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.LargeFileSharesState.Disabled" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.LargeFileSharesState.Enabled" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.LeaseContainerRequest" Id="T:Microsoft.Azure.Management.Storage.Models.LeaseContainerRequest">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.LeaseContainerRequest.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.LeaseContainerRequest.#ctor(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.LeaseContainerRequest.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.LeaseContainerRequest.Action" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.LeaseContainerRequest.BreakPeriod" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.LeaseContainerRequest.LeaseDuration" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.LeaseContainerRequest.LeaseId" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.LeaseContainerRequest.ProposedLeaseId" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.LeaseContainerResponse" Id="T:Microsoft.Azure.Management.Storage.Models.LeaseContainerResponse">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.LeaseContainerResponse.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.LeaseContainerResponse.#ctor(System.String,System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.LeaseContainerResponse.LeaseId" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.LeaseContainerResponse.LeaseTimeSeconds" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.LeaseDuration" Id="T:Microsoft.Azure.Management.Storage.Models.LeaseDuration">
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.LeaseDuration.Fixed" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.LeaseDuration.Infinite" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.LeaseState" Id="T:Microsoft.Azure.Management.Storage.Models.LeaseState">
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.LeaseState.Available" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.LeaseState.Breaking" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.LeaseState.Broken" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.LeaseState.Expired" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.LeaseState.Leased" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.LeaseStatus" Id="T:Microsoft.Azure.Management.Storage.Models.LeaseStatus">
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.LeaseStatus.Locked" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.LeaseStatus.Unlocked" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.LegalHold" Id="T:Microsoft.Azure.Management.Storage.Models.LegalHold">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.LegalHold.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.LegalHold.#ctor(System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.LegalHold.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.LegalHold.HasLegalHold" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.LegalHold.Tags" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.LegalHoldProperties" Id="T:Microsoft.Azure.Management.Storage.Models.LegalHoldProperties">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.LegalHoldProperties.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.LegalHoldProperties.#ctor(System.Nullable{System.Boolean},System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.TagProperty})" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.LegalHoldProperties.HasLegalHold" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.LegalHoldProperties.Tags" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.ListAccountSasResponse" Id="T:Microsoft.Azure.Management.Storage.Models.ListAccountSasResponse">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ListAccountSasResponse.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ListAccountSasResponse.#ctor(System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ListAccountSasResponse.AccountSasToken" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.ListContainerItem" Id="T:Microsoft.Azure.Management.Storage.Models.ListContainerItem">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ListContainerItem.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ListContainerItem.#ctor(System.String,System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.PublicAccess},System.Nullable{System.DateTime},System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicyProperties,Microsoft.Azure.Management.Storage.Models.LegalHoldProperties,System.Nullable{System.Boolean},System.Nullable{System.Boolean})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ListContainerItem.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ListContainerItem.HasImmutabilityPolicy" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ListContainerItem.HasLegalHold" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ListContainerItem.ImmutabilityPolicy" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ListContainerItem.LastModifiedTime" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ListContainerItem.LeaseDuration" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ListContainerItem.LeaseState" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ListContainerItem.LeaseStatus" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ListContainerItem.LegalHold" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ListContainerItem.Metadata" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ListContainerItem.PublicAccess" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.ListKeyExpand" Id="T:Microsoft.Azure.Management.Storage.Models.ListKeyExpand">
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.ListKeyExpand.Kerb" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.ListServiceSasResponse" Id="T:Microsoft.Azure.Management.Storage.Models.ListServiceSasResponse">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ListServiceSasResponse.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ListServiceSasResponse.#ctor(System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ListServiceSasResponse.ServiceSasToken" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.ManagementPolicy" Id="T:Microsoft.Azure.Management.Storage.Models.ManagementPolicy">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicy.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicy.#ctor(Microsoft.Azure.Management.Storage.Models.ManagementPolicySchema,System.String,System.String,System.String,System.Nullable{System.DateTime})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicy.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ManagementPolicy.LastModifiedTime" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ManagementPolicy.Policy" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.ManagementPolicyAction" Id="T:Microsoft.Azure.Management.Storage.Models.ManagementPolicyAction">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicyAction.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicyAction.#ctor(Microsoft.Azure.Management.Storage.Models.ManagementPolicyBaseBlob,Microsoft.Azure.Management.Storage.Models.ManagementPolicySnapShot)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicyAction.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ManagementPolicyAction.BaseBlob" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ManagementPolicyAction.Snapshot" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.ManagementPolicyBaseBlob" Id="T:Microsoft.Azure.Management.Storage.Models.ManagementPolicyBaseBlob">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicyBaseBlob.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicyBaseBlob.#ctor(Microsoft.Azure.Management.Storage.Models.DateAfterModification,Microsoft.Azure.Management.Storage.Models.DateAfterModification,Microsoft.Azure.Management.Storage.Models.DateAfterModification)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicyBaseBlob.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ManagementPolicyBaseBlob.Delete" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ManagementPolicyBaseBlob.TierToArchive" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ManagementPolicyBaseBlob.TierToCool" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.ManagementPolicyDefinition" Id="T:Microsoft.Azure.Management.Storage.Models.ManagementPolicyDefinition">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicyDefinition.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicyDefinition.#ctor(Microsoft.Azure.Management.Storage.Models.ManagementPolicyAction,Microsoft.Azure.Management.Storage.Models.ManagementPolicyFilter)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicyDefinition.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ManagementPolicyDefinition.Actions" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ManagementPolicyDefinition.Filters" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.ManagementPolicyFilter" Id="T:Microsoft.Azure.Management.Storage.Models.ManagementPolicyFilter">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicyFilter.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicyFilter.#ctor(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicyFilter.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ManagementPolicyFilter.BlobTypes" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ManagementPolicyFilter.PrefixMatch" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.ManagementPolicyRule" Id="T:Microsoft.Azure.Management.Storage.Models.ManagementPolicyRule">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicyRule.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicyRule.#ctor(System.String,Microsoft.Azure.Management.Storage.Models.ManagementPolicyDefinition,System.Nullable{System.Boolean})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicyRule.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ManagementPolicyRule.Definition" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ManagementPolicyRule.Enabled" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ManagementPolicyRule.Name" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ManagementPolicyRule.Type" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.ManagementPolicySchema" Id="T:Microsoft.Azure.Management.Storage.Models.ManagementPolicySchema">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicySchema.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicySchema.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.ManagementPolicyRule})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicySchema.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ManagementPolicySchema.Rules" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.ManagementPolicySnapShot" Id="T:Microsoft.Azure.Management.Storage.Models.ManagementPolicySnapShot">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicySnapShot.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicySnapShot.#ctor(Microsoft.Azure.Management.Storage.Models.DateAfterCreation)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicySnapShot.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ManagementPolicySnapShot.Delete" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.MetricSpecification" Id="T:Microsoft.Azure.Management.Storage.Models.MetricSpecification">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.MetricSpecification.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.MetricSpecification.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.Dimension},System.String,System.Nullable{System.Boolean},System.String,System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.MetricSpecification.AggregationType" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.MetricSpecification.Category" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.MetricSpecification.Dimensions" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.MetricSpecification.DisplayDescription" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.MetricSpecification.DisplayName" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.MetricSpecification.FillGapWithZero" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.MetricSpecification.Name" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.MetricSpecification.ResourceIdDimensionNameOverride" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.MetricSpecification.Unit" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.NetworkRuleSet" Id="T:Microsoft.Azure.Management.Storage.Models.NetworkRuleSet">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.NetworkRuleSet.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.NetworkRuleSet.#ctor(Microsoft.Azure.Management.Storage.Models.DefaultAction,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.VirtualNetworkRule},System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.IPRule})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.NetworkRuleSet.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.NetworkRuleSet.Bypass" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.NetworkRuleSet.DefaultAction" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.NetworkRuleSet.IpRules" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.NetworkRuleSet.VirtualNetworkRules" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.Operation" Id="T:Microsoft.Azure.Management.Storage.Models.Operation">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.Operation.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.Operation.#ctor(System.String,Microsoft.Azure.Management.Storage.Models.OperationDisplay,System.String,Microsoft.Azure.Management.Storage.Models.ServiceSpecification)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.Operation.Display" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.Operation.Name" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.Operation.Origin" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.Operation.ServiceSpecification" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.OperationDisplay" Id="T:Microsoft.Azure.Management.Storage.Models.OperationDisplay">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.OperationDisplay.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.OperationDisplay.#ctor(System.String,System.String,System.String,System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.OperationDisplay.Description" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.OperationDisplay.Operation" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.OperationDisplay.Provider" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.OperationDisplay.Resource" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.Page`1" Id="T:Microsoft.Azure.Management.Storage.Models.Page`1">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.Page`1.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.Page`1.GetEnumerator" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.Page`1.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.Page`1.NextPageLink" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.Page1`1" Id="T:Microsoft.Azure.Management.Storage.Models.Page1`1">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.Page1`1.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.Page1`1.GetEnumerator" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.Page1`1.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.Page1`1.NextPageLink" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.Permissions" Id="T:Microsoft.Azure.Management.Storage.Models.Permissions">
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.Permissions.A" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.Permissions.C" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.Permissions.D" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.Permissions.L" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.Permissions.P" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.Permissions.R" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.Permissions.U" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.Permissions.W" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.PrivateEndpoint" Id="T:Microsoft.Azure.Management.Storage.Models.PrivateEndpoint">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.PrivateEndpoint.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.PrivateEndpoint.#ctor(System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.PrivateEndpoint.Id" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.PrivateEndpointConnection" Id="T:Microsoft.Azure.Management.Storage.Models.PrivateEndpointConnection">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.PrivateEndpointConnection.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.PrivateEndpointConnection.#ctor(Microsoft.Azure.Management.Storage.Models.PrivateLinkServiceConnectionState,System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.PrivateEndpoint,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.PrivateEndpointConnection.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.PrivateEndpointConnection.PrivateEndpoint" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.PrivateEndpointConnection.PrivateLinkServiceConnectionState" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.PrivateEndpointConnection.ProvisioningState" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.PrivateEndpointConnectionProvisioningState" Id="T:Microsoft.Azure.Management.Storage.Models.PrivateEndpointConnectionProvisioningState">
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.PrivateEndpointConnectionProvisioningState.Creating" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.PrivateEndpointConnectionProvisioningState.Deleting" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.PrivateEndpointConnectionProvisioningState.Failed" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.PrivateEndpointConnectionProvisioningState.Succeeded" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.PrivateEndpointServiceConnectionStatus" Id="T:Microsoft.Azure.Management.Storage.Models.PrivateEndpointServiceConnectionStatus">
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.PrivateEndpointServiceConnectionStatus.Approved" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.PrivateEndpointServiceConnectionStatus.Pending" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.PrivateEndpointServiceConnectionStatus.Rejected" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.PrivateLinkResource" Id="T:Microsoft.Azure.Management.Storage.Models.PrivateLinkResource">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.PrivateLinkResource.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.PrivateLinkResource.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.PrivateLinkResource.GroupId" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.PrivateLinkResource.RequiredMembers" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.PrivateLinkResource.RequiredZoneNames" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.PrivateLinkResourceListResult" Id="T:Microsoft.Azure.Management.Storage.Models.PrivateLinkResourceListResult">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.PrivateLinkResourceListResult.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.PrivateLinkResourceListResult.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.PrivateLinkResource})" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.PrivateLinkResourceListResult.Value" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.PrivateLinkServiceConnectionState" Id="T:Microsoft.Azure.Management.Storage.Models.PrivateLinkServiceConnectionState">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.PrivateLinkServiceConnectionState.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.PrivateLinkServiceConnectionState.#ctor(System.String,System.String,System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.PrivateLinkServiceConnectionState.ActionRequired" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.PrivateLinkServiceConnectionState.Description" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.PrivateLinkServiceConnectionState.Status" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.ProvisioningState" Id="T:Microsoft.Azure.Management.Storage.Models.ProvisioningState">
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.ProvisioningState.Creating" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.ProvisioningState.ResolvingDNS" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.ProvisioningState.Succeeded" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.ProxyResource" Id="T:Microsoft.Azure.Management.Storage.Models.ProxyResource">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ProxyResource.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ProxyResource.#ctor(System.String,System.String,System.String)" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.PublicAccess" Id="T:Microsoft.Azure.Management.Storage.Models.PublicAccess">
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.PublicAccess.Blob" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.PublicAccess.Container" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.PublicAccess.None" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.Reason" Id="T:Microsoft.Azure.Management.Storage.Models.Reason">
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.Reason.AccountNameInvalid" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.Reason.AlreadyExists" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.ReasonCode" Id="T:Microsoft.Azure.Management.Storage.Models.ReasonCode">
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.ReasonCode.NotAvailableForSubscription" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.ReasonCode.QuotaId" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.Resource" Id="T:Microsoft.Azure.Management.Storage.Models.Resource">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.Resource.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.Resource.#ctor(System.String,System.String,System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.Resource.Id" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.Resource.Name" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.Resource.Type" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.RestorePolicyProperties" Id="T:Microsoft.Azure.Management.Storage.Models.RestorePolicyProperties">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.RestorePolicyProperties.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.RestorePolicyProperties.#ctor(System.Boolean,System.Nullable{System.Int32})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.RestorePolicyProperties.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.RestorePolicyProperties.Days" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.RestorePolicyProperties.Enabled" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.Restriction" Id="T:Microsoft.Azure.Management.Storage.Models.Restriction">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.Restriction.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.Restriction.#ctor(System.String,System.Collections.Generic.IList{System.String},System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.Restriction.ReasonCode" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.Restriction.Type" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.Restriction.Values" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.RoutingChoice" Id="T:Microsoft.Azure.Management.Storage.Models.RoutingChoice">
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.RoutingChoice.InternetRouting" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.RoutingChoice.MicrosoftRouting" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.RoutingPreference" Id="T:Microsoft.Azure.Management.Storage.Models.RoutingPreference">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.RoutingPreference.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.RoutingPreference.#ctor(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean})" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.RoutingPreference.PublishInternetEndpoints" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.RoutingPreference.PublishMicrosoftEndpoints" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.RoutingPreference.RoutingChoice" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.Services" Id="T:Microsoft.Azure.Management.Storage.Models.Services">
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.Services.B" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.Services.F" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.Services.Q" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.Services.T" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.ServiceSasParameters" Id="T:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.#ctor(System.String,System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.HttpProtocol},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.CacheControl" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.CanonicalizedResource" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.ContentDisposition" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.ContentEncoding" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.ContentLanguage" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.ContentType" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Identifier" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.IPAddressOrRange" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.KeyToSign" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.PartitionKeyEnd" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.PartitionKeyStart" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Permissions" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Protocols" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Resource" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.RowKeyEnd" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.RowKeyStart" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.SharedAccessExpiryTime" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.SharedAccessStartTime" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.ServiceSpecification" Id="T:Microsoft.Azure.Management.Storage.Models.ServiceSpecification">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ServiceSpecification.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.ServiceSpecification.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.MetricSpecification})" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.ServiceSpecification.MetricSpecifications" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.SignedResource" Id="T:Microsoft.Azure.Management.Storage.Models.SignedResource">
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.SignedResource.B" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.SignedResource.C" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.SignedResource.F" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.SignedResource.S" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.SignedResourceTypes" Id="T:Microsoft.Azure.Management.Storage.Models.SignedResourceTypes">
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.SignedResourceTypes.C" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.SignedResourceTypes.O" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.SignedResourceTypes.S" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.Sku" Id="T:Microsoft.Azure.Management.Storage.Models.Sku">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.Sku.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.Sku.#ctor(System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.SkuTier})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.Sku.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.Sku.Name" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.Sku.Tier" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.SKUCapability" Id="T:Microsoft.Azure.Management.Storage.Models.SKUCapability">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.SKUCapability.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.SKUCapability.#ctor(System.String,System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.SKUCapability.Name" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.SKUCapability.Value" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.SkuInformation" Id="T:Microsoft.Azure.Management.Storage.Models.SkuInformation">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.SkuInformation.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.SkuInformation.#ctor(System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.SkuTier},System.String,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.SKUCapability},System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.Restriction})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.SkuInformation.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.SkuInformation.Capabilities" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.SkuInformation.Kind" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.SkuInformation.Locations" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.SkuInformation.Name" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.SkuInformation.ResourceType" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.SkuInformation.Restrictions" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.SkuInformation.Tier" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.SkuName" Id="T:Microsoft.Azure.Management.Storage.Models.SkuName">
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.SkuName.PremiumLRS" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.SkuName.PremiumZRS" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.SkuName.StandardGRS" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.SkuName.StandardGZRS" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.SkuName.StandardLRS" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.SkuName.StandardRAGRS" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.SkuName.StandardRAGZRS" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.SkuName.StandardZRS" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.SkuTier" Id="T:Microsoft.Azure.Management.Storage.Models.SkuTier">
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.SkuTier.Premium" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.SkuTier.Standard" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.State" Id="T:Microsoft.Azure.Management.Storage.Models.State">
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.State.Deprovisioning" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.State.Failed" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.State.NetworkSourceDeleted" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.State.Provisioning" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.State.Succeeded" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.StorageAccount" Id="T:Microsoft.Azure.Management.Storage.Models.StorageAccount">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.StorageAccount.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.StorageAccount.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.Storage.Models.Sku,System.String,Microsoft.Azure.Management.Storage.Models.Identity,System.Nullable{Microsoft.Azure.Management.Storage.Models.ProvisioningState},Microsoft.Azure.Management.Storage.Models.Endpoints,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.AccountStatus},System.Nullable{System.DateTime},System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.AccountStatus},System.Nullable{System.DateTime},Microsoft.Azure.Management.Storage.Models.CustomDomain,Microsoft.Azure.Management.Storage.Models.Endpoints,Microsoft.Azure.Management.Storage.Models.Encryption,System.Nullable{Microsoft.Azure.Management.Storage.Models.AccessTier},Microsoft.Azure.Management.Storage.Models.AzureFilesIdentityBasedAuthentication,System.Nullable{System.Boolean},Microsoft.Azure.Management.Storage.Models.NetworkRuleSet,System.Nullable{System.Boolean},Microsoft.Azure.Management.Storage.Models.GeoReplicationStats,System.Nullable{System.Boolean},System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.PrivateEndpointConnection},Microsoft.Azure.Management.Storage.Models.RoutingPreference,Microsoft.Azure.Management.Storage.Models.BlobRestoreStatus)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.StorageAccount.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.AccessTier" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.AzureFilesIdentityBasedAuthentication" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.BlobRestoreStatus" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.CreationTime" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.CustomDomain" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.EnableHttpsTrafficOnly" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.Encryption" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.FailoverInProgress" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.GeoReplicationStats" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.Identity" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.IsHnsEnabled" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.Kind" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.LargeFileSharesState" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.LastGeoFailoverTime" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.NetworkRuleSet" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.PrimaryEndpoints" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.PrimaryLocation" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.PrivateEndpointConnections" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.ProvisioningState" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.RoutingPreference" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.SecondaryEndpoints" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.SecondaryLocation" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.Sku" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.StatusOfPrimary" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.StatusOfSecondary" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.StorageAccountCheckNameAvailabilityParameters" Id="T:Microsoft.Azure.Management.Storage.Models.StorageAccountCheckNameAvailabilityParameters">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.StorageAccountCheckNameAvailabilityParameters.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.StorageAccountCheckNameAvailabilityParameters.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.StorageAccountCheckNameAvailabilityParameters.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccountCheckNameAvailabilityParameters.Name" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccountCheckNameAvailabilityParameters.Type" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters" Id="T:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.#ctor(Microsoft.Azure.Management.Storage.Models.Sku,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.Storage.Models.Identity,Microsoft.Azure.Management.Storage.Models.CustomDomain,Microsoft.Azure.Management.Storage.Models.Encryption,Microsoft.Azure.Management.Storage.Models.NetworkRuleSet,System.Nullable{Microsoft.Azure.Management.Storage.Models.AccessTier},Microsoft.Azure.Management.Storage.Models.AzureFilesIdentityBasedAuthentication,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,Microsoft.Azure.Management.Storage.Models.RoutingPreference)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.AccessTier" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.AzureFilesIdentityBasedAuthentication" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.CustomDomain" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.EnableHttpsTrafficOnly" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Encryption" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Identity" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.IsHnsEnabled" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Kind" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.LargeFileSharesState" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Location" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.NetworkRuleSet" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.RoutingPreference" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Sku" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Tags" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.StorageAccountExpand" Id="T:Microsoft.Azure.Management.Storage.Models.StorageAccountExpand">
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.StorageAccountExpand.BlobRestoreStatus" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.StorageAccountExpand.GeoReplicationStats" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.StorageAccountInternetEndpoints" Id="T:Microsoft.Azure.Management.Storage.Models.StorageAccountInternetEndpoints">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.StorageAccountInternetEndpoints.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.StorageAccountInternetEndpoints.#ctor(System.String,System.String,System.String,System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccountInternetEndpoints.Blob" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccountInternetEndpoints.Dfs" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccountInternetEndpoints.File" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccountInternetEndpoints.Web" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.StorageAccountKey" Id="T:Microsoft.Azure.Management.Storage.Models.StorageAccountKey">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.StorageAccountKey.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.StorageAccountKey.#ctor(System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.KeyPermission})" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccountKey.KeyName" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccountKey.Permissions" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccountKey.Value" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.StorageAccountListKeysResult" Id="T:Microsoft.Azure.Management.Storage.Models.StorageAccountListKeysResult">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.StorageAccountListKeysResult.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.StorageAccountListKeysResult.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.StorageAccountKey})" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccountListKeysResult.Keys" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.StorageAccountMicrosoftEndpoints" Id="T:Microsoft.Azure.Management.Storage.Models.StorageAccountMicrosoftEndpoints">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.StorageAccountMicrosoftEndpoints.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.StorageAccountMicrosoftEndpoints.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccountMicrosoftEndpoints.Blob" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccountMicrosoftEndpoints.Dfs" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccountMicrosoftEndpoints.File" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccountMicrosoftEndpoints.Queue" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccountMicrosoftEndpoints.Table" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccountMicrosoftEndpoints.Web" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.StorageAccountRegenerateKeyParameters" Id="T:Microsoft.Azure.Management.Storage.Models.StorageAccountRegenerateKeyParameters">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.StorageAccountRegenerateKeyParameters.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.StorageAccountRegenerateKeyParameters.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.StorageAccountRegenerateKeyParameters.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccountRegenerateKeyParameters.KeyName" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters" Id="T:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.#ctor(Microsoft.Azure.Management.Storage.Models.Sku,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.Storage.Models.Identity,Microsoft.Azure.Management.Storage.Models.CustomDomain,Microsoft.Azure.Management.Storage.Models.Encryption,System.Nullable{Microsoft.Azure.Management.Storage.Models.AccessTier},Microsoft.Azure.Management.Storage.Models.AzureFilesIdentityBasedAuthentication,System.Nullable{System.Boolean},Microsoft.Azure.Management.Storage.Models.NetworkRuleSet,System.String,Microsoft.Azure.Management.Storage.Models.RoutingPreference,System.String)" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.AccessTier" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.AzureFilesIdentityBasedAuthentication" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.CustomDomain" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.EnableHttpsTrafficOnly" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.Encryption" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.Identity" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.Kind" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.LargeFileSharesState" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.NetworkRuleSet" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.RoutingPreference" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.Sku" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.Tags" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.TagProperty" Id="T:Microsoft.Azure.Management.Storage.Models.TagProperty">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.TagProperty.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.TagProperty.#ctor(System.String,System.Nullable{System.DateTime},System.String,System.String,System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.TagProperty.ObjectIdentifier" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.TagProperty.Tag" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.TagProperty.TenantId" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.TagProperty.Timestamp" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.TagProperty.Upn" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.TrackedResource" Id="T:Microsoft.Azure.Management.Storage.Models.TrackedResource">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.TrackedResource.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.TrackedResource.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.TrackedResource.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.TrackedResource.Location" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.TrackedResource.Tags" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.UpdateHistoryProperty" Id="T:Microsoft.Azure.Management.Storage.Models.UpdateHistoryProperty">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.UpdateHistoryProperty.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.UpdateHistoryProperty.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.String,System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.UpdateHistoryProperty.ImmutabilityPeriodSinceCreationInDays" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.UpdateHistoryProperty.ObjectIdentifier" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.UpdateHistoryProperty.TenantId" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.UpdateHistoryProperty.Timestamp" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.UpdateHistoryProperty.Update" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.UpdateHistoryProperty.Upn" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.Usage" Id="T:Microsoft.Azure.Management.Storage.Models.Usage">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.Usage.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.Usage.#ctor(System.Nullable{Microsoft.Azure.Management.Storage.Models.UsageUnit},System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.Azure.Management.Storage.Models.UsageName)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.Usage.CurrentValue" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.Usage.Limit" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.Usage.Name" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.Usage.Unit" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.UsageName" Id="T:Microsoft.Azure.Management.Storage.Models.UsageName">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.UsageName.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.UsageName.#ctor(System.String,System.String)" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.UsageName.LocalizedValue" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.UsageName.Value" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.UsageUnit" Id="T:Microsoft.Azure.Management.Storage.Models.UsageUnit">
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.UsageUnit.Bytes" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.UsageUnit.BytesPerSecond" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.UsageUnit.Count" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.UsageUnit.CountsPerSecond" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.UsageUnit.Percent" />
      <Member Id="F:Microsoft.Azure.Management.Storage.Models.UsageUnit.Seconds" />
    </Type>
    <Type Name="Microsoft.Azure.Management.Storage.Models.VirtualNetworkRule" Id="T:Microsoft.Azure.Management.Storage.Models.VirtualNetworkRule">
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.VirtualNetworkRule.#ctor" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.VirtualNetworkRule.#ctor(System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.Action},System.Nullable{Microsoft.Azure.Management.Storage.Models.State})" />
      <Member Id="M:Microsoft.Azure.Management.Storage.Models.VirtualNetworkRule.Validate" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.VirtualNetworkRule.Action" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.VirtualNetworkRule.State" />
      <Member Id="P:Microsoft.Azure.Management.Storage.Models.VirtualNetworkRule.VirtualNetworkResourceId" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Storage">
    <Type Name="Microsoft.Azure.Storage.AccessCondition" Id="T:Microsoft.Azure.Storage.AccessCondition">
      <Member Id="M:Microsoft.Azure.Storage.AccessCondition.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.AccessCondition.Clone" />
      <Member Id="M:Microsoft.Azure.Storage.AccessCondition.GenerateEmptyCondition" />
      <Member Id="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfAppendPositionEqualCondition(System.Int64)" />
      <Member Id="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfExistsCondition" />
      <Member Id="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfMatchCondition(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfMaxSizeLessThanOrEqualCondition(System.Int64)" />
      <Member Id="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfModifiedSinceCondition(System.DateTimeOffset)" />
      <Member Id="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfNoneMatchCondition(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfNotExistsCondition" />
      <Member Id="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfNotModifiedSinceCondition(System.DateTimeOffset)" />
      <Member Id="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfSequenceNumberEqualCondition(System.Int64)" />
      <Member Id="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfSequenceNumberLessThanCondition(System.Int64)" />
      <Member Id="M:Microsoft.Azure.Storage.AccessCondition.GenerateIfSequenceNumberLessThanOrEqualCondition(System.Int64)" />
      <Member Id="M:Microsoft.Azure.Storage.AccessCondition.GenerateLeaseCondition(System.String)" />
      <Member Id="P:Microsoft.Azure.Storage.AccessCondition.IfAppendPositionEqual" />
      <Member Id="P:Microsoft.Azure.Storage.AccessCondition.IfMatchContentCrc" />
      <Member Id="P:Microsoft.Azure.Storage.AccessCondition.IfMatchETag" />
      <Member Id="P:Microsoft.Azure.Storage.AccessCondition.IfMaxSizeLessThanOrEqual" />
      <Member Id="P:Microsoft.Azure.Storage.AccessCondition.IfModifiedSinceTime" />
      <Member Id="P:Microsoft.Azure.Storage.AccessCondition.IfNoneMatchContentCrc" />
      <Member Id="P:Microsoft.Azure.Storage.AccessCondition.IfNoneMatchETag" />
      <Member Id="P:Microsoft.Azure.Storage.AccessCondition.IfNotModifiedSinceTime" />
      <Member Id="P:Microsoft.Azure.Storage.AccessCondition.IfSequenceNumberEqual" />
      <Member Id="P:Microsoft.Azure.Storage.AccessCondition.IfSequenceNumberLessThan" />
      <Member Id="P:Microsoft.Azure.Storage.AccessCondition.IfSequenceNumberLessThanOrEqual" />
      <Member Id="P:Microsoft.Azure.Storage.AccessCondition.LeaseId" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.AuthenticationScheme" Id="T:Microsoft.Azure.Storage.AuthenticationScheme">
      <Member Id="F:Microsoft.Azure.Storage.AuthenticationScheme.SharedKey" />
      <Member Id="F:Microsoft.Azure.Storage.AuthenticationScheme.SharedKeyLite" />
      <Member Id="F:Microsoft.Azure.Storage.AuthenticationScheme.Token" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.CloudStorageAccount" Id="T:Microsoft.Azure.Storage.CloudStorageAccount">
      <Member Id="M:Microsoft.Azure.Storage.CloudStorageAccount.#ctor(Microsoft.Azure.Storage.Auth.StorageCredentials,Microsoft.Azure.Storage.StorageUri,Microsoft.Azure.Storage.StorageUri,Microsoft.Azure.Storage.StorageUri,Microsoft.Azure.Storage.StorageUri)" />
      <Member Id="M:Microsoft.Azure.Storage.CloudStorageAccount.#ctor(Microsoft.Azure.Storage.Auth.StorageCredentials,System.Boolean)" />
      <Member Id="M:Microsoft.Azure.Storage.CloudStorageAccount.#ctor(Microsoft.Azure.Storage.Auth.StorageCredentials,System.String,System.Boolean)" />
      <Member Id="M:Microsoft.Azure.Storage.CloudStorageAccount.#ctor(Microsoft.Azure.Storage.Auth.StorageCredentials,System.String,System.String,System.Boolean)" />
      <Member Id="M:Microsoft.Azure.Storage.CloudStorageAccount.#ctor(Microsoft.Azure.Storage.Auth.StorageCredentials,System.Uri,System.Uri,System.Uri,System.Uri)" />
      <Member Id="M:Microsoft.Azure.Storage.CloudStorageAccount.GetSharedAccessSignature(Microsoft.Azure.Storage.SharedAccessAccountPolicy)" />
      <Member Id="M:Microsoft.Azure.Storage.CloudStorageAccount.Parse(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.CloudStorageAccount.ToString" />
      <Member Id="M:Microsoft.Azure.Storage.CloudStorageAccount.ToString(System.Boolean)" />
      <Member Id="M:Microsoft.Azure.Storage.CloudStorageAccount.TryParse(System.String,Microsoft.Azure.Storage.CloudStorageAccount@)" />
      <Member Id="P:Microsoft.Azure.Storage.CloudStorageAccount.BlobEndpoint" />
      <Member Id="P:Microsoft.Azure.Storage.CloudStorageAccount.BlobStorageUri" />
      <Member Id="P:Microsoft.Azure.Storage.CloudStorageAccount.Credentials" />
      <Member Id="P:Microsoft.Azure.Storage.CloudStorageAccount.DevelopmentStorageAccount" />
      <Member Id="P:Microsoft.Azure.Storage.CloudStorageAccount.FileEndpoint" />
      <Member Id="P:Microsoft.Azure.Storage.CloudStorageAccount.FileStorageUri" />
      <Member Id="P:Microsoft.Azure.Storage.CloudStorageAccount.QueueEndpoint" />
      <Member Id="P:Microsoft.Azure.Storage.CloudStorageAccount.QueueStorageUri" />
      <Member Id="P:Microsoft.Azure.Storage.CloudStorageAccount.TableEndpoint" />
      <Member Id="P:Microsoft.Azure.Storage.CloudStorageAccount.TableStorageUri" />
      <Member Id="P:Microsoft.Azure.Storage.CloudStorageAccount.UseV1MD5" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.DoesServiceRequestAttribute" Id="T:Microsoft.Azure.Storage.DoesServiceRequestAttribute">
      <Member Id="M:Microsoft.Azure.Storage.DoesServiceRequestAttribute.#ctor" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.IBufferManager" Id="T:Microsoft.Azure.Storage.IBufferManager">
      <Member Id="M:Microsoft.Azure.Storage.IBufferManager.GetDefaultBufferSize" />
      <Member Id="M:Microsoft.Azure.Storage.IBufferManager.ReturnBuffer(System.Byte[])" />
      <Member Id="M:Microsoft.Azure.Storage.IBufferManager.TakeBuffer(System.Int32)" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.ICancellableAsyncResult" Id="T:Microsoft.Azure.Storage.ICancellableAsyncResult">
      <Member Id="M:Microsoft.Azure.Storage.ICancellableAsyncResult.Cancel" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.IContinuationToken" Id="T:Microsoft.Azure.Storage.IContinuationToken">
      <Member Id="P:Microsoft.Azure.Storage.IContinuationToken.TargetLocation" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.IPAddressOrRange" Id="T:Microsoft.Azure.Storage.IPAddressOrRange">
      <Member Id="M:Microsoft.Azure.Storage.IPAddressOrRange.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.IPAddressOrRange.#ctor(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.IPAddressOrRange.ToString" />
      <Member Id="P:Microsoft.Azure.Storage.IPAddressOrRange.Address" />
      <Member Id="P:Microsoft.Azure.Storage.IPAddressOrRange.IsSingleAddress" />
      <Member Id="P:Microsoft.Azure.Storage.IPAddressOrRange.MaximumAddress" />
      <Member Id="P:Microsoft.Azure.Storage.IPAddressOrRange.MinimumAddress" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.IRequestOptions" Id="T:Microsoft.Azure.Storage.IRequestOptions">
      <Member Id="P:Microsoft.Azure.Storage.IRequestOptions.LocationMode" />
      <Member Id="P:Microsoft.Azure.Storage.IRequestOptions.MaximumExecutionTime" />
      <Member Id="P:Microsoft.Azure.Storage.IRequestOptions.RequireEncryption" />
      <Member Id="P:Microsoft.Azure.Storage.IRequestOptions.RetryPolicy" />
      <Member Id="P:Microsoft.Azure.Storage.IRequestOptions.ServerTimeout" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.LogLevel" Id="T:Microsoft.Azure.Storage.LogLevel">
      <Member Id="F:Microsoft.Azure.Storage.LogLevel.Error" />
      <Member Id="F:Microsoft.Azure.Storage.LogLevel.Informational" />
      <Member Id="F:Microsoft.Azure.Storage.LogLevel.Off" />
      <Member Id="F:Microsoft.Azure.Storage.LogLevel.Verbose" />
      <Member Id="F:Microsoft.Azure.Storage.LogLevel.Warning" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.NameValidator" Id="T:Microsoft.Azure.Storage.NameValidator">
      <Member Id="M:Microsoft.Azure.Storage.NameValidator.ValidateBlobName(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.NameValidator.ValidateContainerName(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.NameValidator.ValidateDirectoryName(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.NameValidator.ValidateFileName(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.NameValidator.ValidateQueueName(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.NameValidator.ValidateShareName(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.NameValidator.ValidateTableName(System.String)" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.OperationContext" Id="T:Microsoft.Azure.Storage.OperationContext">
      <Member Id="E:Microsoft.Azure.Storage.OperationContext.GlobalRequestCompleted" />
      <Member Id="E:Microsoft.Azure.Storage.OperationContext.GlobalResponseReceived" />
      <Member Id="E:Microsoft.Azure.Storage.OperationContext.GlobalRetrying" />
      <Member Id="E:Microsoft.Azure.Storage.OperationContext.GlobalSendingRequest" />
      <Member Id="E:Microsoft.Azure.Storage.OperationContext.RequestCompleted" />
      <Member Id="E:Microsoft.Azure.Storage.OperationContext.ResponseReceived" />
      <Member Id="E:Microsoft.Azure.Storage.OperationContext.Retrying" />
      <Member Id="E:Microsoft.Azure.Storage.OperationContext.SendingRequest" />
      <Member Id="M:Microsoft.Azure.Storage.OperationContext.#ctor" />
      <Member Id="P:Microsoft.Azure.Storage.OperationContext.ClientRequestID" />
      <Member Id="P:Microsoft.Azure.Storage.OperationContext.CustomUserAgent" />
      <Member Id="P:Microsoft.Azure.Storage.OperationContext.DefaultLogLevel" />
      <Member Id="P:Microsoft.Azure.Storage.OperationContext.EndTime" />
      <Member Id="P:Microsoft.Azure.Storage.OperationContext.LastResult" />
      <Member Id="P:Microsoft.Azure.Storage.OperationContext.LogLevel" />
      <Member Id="P:Microsoft.Azure.Storage.OperationContext.RequestResults" />
      <Member Id="P:Microsoft.Azure.Storage.OperationContext.StartTime" />
      <Member Id="P:Microsoft.Azure.Storage.OperationContext.UserHeaders" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.RequestEventArgs" Id="T:Microsoft.Azure.Storage.RequestEventArgs">
      <Member Id="M:Microsoft.Azure.Storage.RequestEventArgs.#ctor(Microsoft.Azure.Storage.RequestResult)" />
      <Member Id="P:Microsoft.Azure.Storage.RequestEventArgs.Request" />
      <Member Id="P:Microsoft.Azure.Storage.RequestEventArgs.RequestInformation" />
      <Member Id="P:Microsoft.Azure.Storage.RequestEventArgs.Response" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.RequestResult" Id="T:Microsoft.Azure.Storage.RequestResult">
      <Member Id="M:Microsoft.Azure.Storage.RequestResult.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.RequestResult.ReadXmlAsync(System.Xml.XmlReader)" />
      <Member Id="M:Microsoft.Azure.Storage.RequestResult.TranslateFromExceptionMessage(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.RequestResult.WriteXml(System.Xml.XmlWriter)" />
      <Member Id="P:Microsoft.Azure.Storage.RequestResult.ContentCrc64" />
      <Member Id="P:Microsoft.Azure.Storage.RequestResult.ContentMd5" />
      <Member Id="P:Microsoft.Azure.Storage.RequestResult.EgressBytes" />
      <Member Id="P:Microsoft.Azure.Storage.RequestResult.EncryptionKeySHA256" />
      <Member Id="P:Microsoft.Azure.Storage.RequestResult.EndTime" />
      <Member Id="P:Microsoft.Azure.Storage.RequestResult.ErrorCode" />
      <Member Id="P:Microsoft.Azure.Storage.RequestResult.Etag" />
      <Member Id="P:Microsoft.Azure.Storage.RequestResult.Exception" />
      <Member Id="P:Microsoft.Azure.Storage.RequestResult.ExtendedErrorInformation" />
      <Member Id="P:Microsoft.Azure.Storage.RequestResult.HttpStatusCode" />
      <Member Id="P:Microsoft.Azure.Storage.RequestResult.HttpStatusMessage" />
      <Member Id="P:Microsoft.Azure.Storage.RequestResult.IngressBytes" />
      <Member Id="P:Microsoft.Azure.Storage.RequestResult.IsRequestServerEncrypted" />
      <Member Id="P:Microsoft.Azure.Storage.RequestResult.IsServiceEncrypted" />
      <Member Id="P:Microsoft.Azure.Storage.RequestResult.RequestDate" />
      <Member Id="P:Microsoft.Azure.Storage.RequestResult.ServiceRequestID" />
      <Member Id="P:Microsoft.Azure.Storage.RequestResult.StartTime" />
      <Member Id="P:Microsoft.Azure.Storage.RequestResult.TargetLocation" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.ResultSegment`1" Id="T:Microsoft.Azure.Storage.ResultSegment`1">
      <Member Id="P:Microsoft.Azure.Storage.ResultSegment`1.ContinuationToken" />
      <Member Id="P:Microsoft.Azure.Storage.ResultSegment`1.Results" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.SharedAccessAccountPermissions" Id="T:Microsoft.Azure.Storage.SharedAccessAccountPermissions">
      <Member Id="F:Microsoft.Azure.Storage.SharedAccessAccountPermissions.Add" />
      <Member Id="F:Microsoft.Azure.Storage.SharedAccessAccountPermissions.Create" />
      <Member Id="F:Microsoft.Azure.Storage.SharedAccessAccountPermissions.Delete" />
      <Member Id="F:Microsoft.Azure.Storage.SharedAccessAccountPermissions.List" />
      <Member Id="F:Microsoft.Azure.Storage.SharedAccessAccountPermissions.None" />
      <Member Id="F:Microsoft.Azure.Storage.SharedAccessAccountPermissions.ProcessMessages" />
      <Member Id="F:Microsoft.Azure.Storage.SharedAccessAccountPermissions.Read" />
      <Member Id="F:Microsoft.Azure.Storage.SharedAccessAccountPermissions.Update" />
      <Member Id="F:Microsoft.Azure.Storage.SharedAccessAccountPermissions.Write" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.SharedAccessAccountPolicy" Id="T:Microsoft.Azure.Storage.SharedAccessAccountPolicy">
      <Member Id="M:Microsoft.Azure.Storage.SharedAccessAccountPolicy.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.SharedAccessAccountPolicy.PermissionsToString(Microsoft.Azure.Storage.SharedAccessAccountPermissions)" />
      <Member Id="M:Microsoft.Azure.Storage.SharedAccessAccountPolicy.ResourceTypesToString(Microsoft.Azure.Storage.SharedAccessAccountResourceTypes)" />
      <Member Id="M:Microsoft.Azure.Storage.SharedAccessAccountPolicy.ServicesToString(Microsoft.Azure.Storage.SharedAccessAccountServices)" />
      <Member Id="P:Microsoft.Azure.Storage.SharedAccessAccountPolicy.IPAddressOrRange" />
      <Member Id="P:Microsoft.Azure.Storage.SharedAccessAccountPolicy.Permissions" />
      <Member Id="P:Microsoft.Azure.Storage.SharedAccessAccountPolicy.Protocols" />
      <Member Id="P:Microsoft.Azure.Storage.SharedAccessAccountPolicy.ResourceTypes" />
      <Member Id="P:Microsoft.Azure.Storage.SharedAccessAccountPolicy.Services" />
      <Member Id="P:Microsoft.Azure.Storage.SharedAccessAccountPolicy.SharedAccessExpiryTime" />
      <Member Id="P:Microsoft.Azure.Storage.SharedAccessAccountPolicy.SharedAccessStartTime" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.SharedAccessAccountResourceTypes" Id="T:Microsoft.Azure.Storage.SharedAccessAccountResourceTypes">
      <Member Id="F:Microsoft.Azure.Storage.SharedAccessAccountResourceTypes.Container" />
      <Member Id="F:Microsoft.Azure.Storage.SharedAccessAccountResourceTypes.None" />
      <Member Id="F:Microsoft.Azure.Storage.SharedAccessAccountResourceTypes.Object" />
      <Member Id="F:Microsoft.Azure.Storage.SharedAccessAccountResourceTypes.Service" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.SharedAccessAccountServices" Id="T:Microsoft.Azure.Storage.SharedAccessAccountServices">
      <Member Id="F:Microsoft.Azure.Storage.SharedAccessAccountServices.Blob" />
      <Member Id="F:Microsoft.Azure.Storage.SharedAccessAccountServices.File" />
      <Member Id="F:Microsoft.Azure.Storage.SharedAccessAccountServices.None" />
      <Member Id="F:Microsoft.Azure.Storage.SharedAccessAccountServices.Queue" />
      <Member Id="F:Microsoft.Azure.Storage.SharedAccessAccountServices.Table" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.SharedAccessProtocol" Id="T:Microsoft.Azure.Storage.SharedAccessProtocol">
      <Member Id="F:Microsoft.Azure.Storage.SharedAccessProtocol.HttpsOnly" />
      <Member Id="F:Microsoft.Azure.Storage.SharedAccessProtocol.HttpsOrHttp" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.StorageException" Id="T:Microsoft.Azure.Storage.StorageException">
      <Member Id="M:Microsoft.Azure.Storage.StorageException.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.StorageException.#ctor(Microsoft.Azure.Storage.RequestResult,System.String,System.Exception)" />
      <Member Id="M:Microsoft.Azure.Storage.StorageException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:Microsoft.Azure.Storage.StorageException.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.StorageException.#ctor(System.String,System.Exception)" />
      <Member Id="M:Microsoft.Azure.Storage.StorageException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:Microsoft.Azure.Storage.StorageException.ToString" />
      <Member Id="M:Microsoft.Azure.Storage.StorageException.TranslateExceptionAsync(System.Exception,Microsoft.Azure.Storage.RequestResult,System.Func{System.IO.Stream,System.Threading.CancellationToken,System.Threading.Tasks.Task{Microsoft.Azure.Storage.StorageExtendedErrorInformation}},System.Threading.CancellationToken,System.Net.Http.HttpResponseMessage)" />
      <Member Id="P:Microsoft.Azure.Storage.StorageException.RequestInformation" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.StorageExtendedErrorInformation" Id="T:Microsoft.Azure.Storage.StorageExtendedErrorInformation">
      <Member Id="M:Microsoft.Azure.Storage.StorageExtendedErrorInformation.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.StorageExtendedErrorInformation.ReadFromStreamAsync(System.IO.Stream)" />
      <Member Id="M:Microsoft.Azure.Storage.StorageExtendedErrorInformation.ReadFromStreamAsync(System.IO.Stream,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.StorageExtendedErrorInformation.ReadXmlAsync(System.Xml.XmlReader,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.StorageExtendedErrorInformation.WriteXml(System.Xml.XmlWriter)" />
      <Member Id="P:Microsoft.Azure.Storage.StorageExtendedErrorInformation.AdditionalDetails" />
      <Member Id="P:Microsoft.Azure.Storage.StorageExtendedErrorInformation.ErrorCode" />
      <Member Id="P:Microsoft.Azure.Storage.StorageExtendedErrorInformation.ErrorMessage" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.StorageLocation" Id="T:Microsoft.Azure.Storage.StorageLocation">
      <Member Id="F:Microsoft.Azure.Storage.StorageLocation.Primary" />
      <Member Id="F:Microsoft.Azure.Storage.StorageLocation.Secondary" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.StorageUri" Id="T:Microsoft.Azure.Storage.StorageUri">
      <Member Id="M:Microsoft.Azure.Storage.StorageUri.#ctor(System.Uri)" />
      <Member Id="M:Microsoft.Azure.Storage.StorageUri.#ctor(System.Uri,System.Uri)" />
      <Member Id="M:Microsoft.Azure.Storage.StorageUri.Equals(Microsoft.Azure.Storage.StorageUri)" />
      <Member Id="M:Microsoft.Azure.Storage.StorageUri.Equals(System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.StorageUri.GetHashCode" />
      <Member Id="M:Microsoft.Azure.Storage.StorageUri.GetUri(Microsoft.Azure.Storage.StorageLocation)" />
      <Member Id="M:Microsoft.Azure.Storage.StorageUri.op_Equality(Microsoft.Azure.Storage.StorageUri,Microsoft.Azure.Storage.StorageUri)" />
      <Member Id="M:Microsoft.Azure.Storage.StorageUri.op_Inequality(Microsoft.Azure.Storage.StorageUri,Microsoft.Azure.Storage.StorageUri)" />
      <Member Id="M:Microsoft.Azure.Storage.StorageUri.ToString" />
      <Member Id="P:Microsoft.Azure.Storage.StorageUri.PrimaryUri" />
      <Member Id="P:Microsoft.Azure.Storage.StorageUri.SecondaryUri" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.UserDelegationKey" Id="T:Microsoft.Azure.Storage.UserDelegationKey">
      <Member Id="M:Microsoft.Azure.Storage.UserDelegationKey.#ctor" />
      <Member Id="P:Microsoft.Azure.Storage.UserDelegationKey.SignedExpiry" />
      <Member Id="P:Microsoft.Azure.Storage.UserDelegationKey.SignedOid" />
      <Member Id="P:Microsoft.Azure.Storage.UserDelegationKey.SignedService" />
      <Member Id="P:Microsoft.Azure.Storage.UserDelegationKey.SignedStart" />
      <Member Id="P:Microsoft.Azure.Storage.UserDelegationKey.SignedTid" />
      <Member Id="P:Microsoft.Azure.Storage.UserDelegationKey.SignedVersion" />
      <Member Id="P:Microsoft.Azure.Storage.UserDelegationKey.Value" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Storage.Auth">
    <Type Name="Microsoft.Azure.Storage.Auth.NewTokenAndFrequency" Id="T:Microsoft.Azure.Storage.Auth.NewTokenAndFrequency">
      <Member Id="M:Microsoft.Azure.Storage.Auth.NewTokenAndFrequency.#ctor(System.String,System.Nullable{System.TimeSpan})" />
      <Member Id="P:Microsoft.Azure.Storage.Auth.NewTokenAndFrequency.Frequency" />
      <Member Id="P:Microsoft.Azure.Storage.Auth.NewTokenAndFrequency.Token" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Auth.RenewTokenFuncAsync" Id="T:Microsoft.Azure.Storage.Auth.RenewTokenFuncAsync" />
    <Type Name="Microsoft.Azure.Storage.Auth.StorageCredentials" Id="T:Microsoft.Azure.Storage.Auth.StorageCredentials">
      <Member Id="M:Microsoft.Azure.Storage.Auth.StorageCredentials.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.Auth.StorageCredentials.#ctor(Microsoft.Azure.Storage.Auth.TokenCredential)" />
      <Member Id="M:Microsoft.Azure.Storage.Auth.StorageCredentials.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Auth.StorageCredentials.#ctor(System.String,System.Byte[])" />
      <Member Id="M:Microsoft.Azure.Storage.Auth.StorageCredentials.#ctor(System.String,System.Byte[],System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Auth.StorageCredentials.#ctor(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Auth.StorageCredentials.#ctor(System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Auth.StorageCredentials.Equals(Microsoft.Azure.Storage.Auth.StorageCredentials)" />
      <Member Id="M:Microsoft.Azure.Storage.Auth.StorageCredentials.ExportBase64EncodedKey" />
      <Member Id="M:Microsoft.Azure.Storage.Auth.StorageCredentials.ExportKey" />
      <Member Id="M:Microsoft.Azure.Storage.Auth.StorageCredentials.TransformUri(Microsoft.Azure.Storage.StorageUri)" />
      <Member Id="M:Microsoft.Azure.Storage.Auth.StorageCredentials.TransformUri(System.Uri)" />
      <Member Id="M:Microsoft.Azure.Storage.Auth.StorageCredentials.UpdateKey(System.Byte[])" />
      <Member Id="M:Microsoft.Azure.Storage.Auth.StorageCredentials.UpdateKey(System.Byte[],System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Auth.StorageCredentials.UpdateKey(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Auth.StorageCredentials.UpdateKey(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Auth.StorageCredentials.UpdateSASToken(System.String)" />
      <Member Id="P:Microsoft.Azure.Storage.Auth.StorageCredentials.AccountName" />
      <Member Id="P:Microsoft.Azure.Storage.Auth.StorageCredentials.IsAnonymous" />
      <Member Id="P:Microsoft.Azure.Storage.Auth.StorageCredentials.IsSAS" />
      <Member Id="P:Microsoft.Azure.Storage.Auth.StorageCredentials.IsSharedKey" />
      <Member Id="P:Microsoft.Azure.Storage.Auth.StorageCredentials.IsToken" />
      <Member Id="P:Microsoft.Azure.Storage.Auth.StorageCredentials.KeyName" />
      <Member Id="P:Microsoft.Azure.Storage.Auth.StorageCredentials.SASSignature" />
      <Member Id="P:Microsoft.Azure.Storage.Auth.StorageCredentials.SASToken" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Auth.TokenCredential" Id="T:Microsoft.Azure.Storage.Auth.TokenCredential">
      <Member Id="M:Microsoft.Azure.Storage.Auth.TokenCredential.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Auth.TokenCredential.#ctor(System.String,Microsoft.Azure.Storage.Auth.RenewTokenFuncAsync,System.Object,System.TimeSpan)" />
      <Member Id="M:Microsoft.Azure.Storage.Auth.TokenCredential.Dispose" />
      <Member Id="P:Microsoft.Azure.Storage.Auth.TokenCredential.Token" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Storage.Core.Auth">
    <Type Name="Microsoft.Azure.Storage.Core.Auth.ICanonicalizer" Id="T:Microsoft.Azure.Storage.Core.Auth.ICanonicalizer">
      <Member Id="M:Microsoft.Azure.Storage.Core.Auth.ICanonicalizer.CanonicalizeHttpRequest(System.Net.Http.HttpRequestMessage,System.String)" />
      <Member Id="P:Microsoft.Azure.Storage.Core.Auth.ICanonicalizer.AuthorizationScheme" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Core.Auth.SharedKeyCanonicalizer" Id="T:Microsoft.Azure.Storage.Core.Auth.SharedKeyCanonicalizer">
      <Member Id="M:Microsoft.Azure.Storage.Core.Auth.SharedKeyCanonicalizer.CanonicalizeHttpRequest(System.Net.Http.HttpRequestMessage,System.String)" />
      <Member Id="P:Microsoft.Azure.Storage.Core.Auth.SharedKeyCanonicalizer.AuthorizationScheme" />
      <Member Id="P:Microsoft.Azure.Storage.Core.Auth.SharedKeyCanonicalizer.Instance" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Core.Auth.SharedKeyLiteCanonicalizer" Id="T:Microsoft.Azure.Storage.Core.Auth.SharedKeyLiteCanonicalizer">
      <Member Id="M:Microsoft.Azure.Storage.Core.Auth.SharedKeyLiteCanonicalizer.CanonicalizeHttpRequest(System.Net.Http.HttpRequestMessage,System.String)" />
      <Member Id="P:Microsoft.Azure.Storage.Core.Auth.SharedKeyLiteCanonicalizer.AuthorizationScheme" />
      <Member Id="P:Microsoft.Azure.Storage.Core.Auth.SharedKeyLiteCanonicalizer.Instance" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Storage.Core">
    <Type Name="Microsoft.Azure.Storage.Core.MultiBufferMemoryStream" Id="T:Microsoft.Azure.Storage.Core.MultiBufferMemoryStream">
      <Member Id="M:Microsoft.Azure.Storage.Core.MultiBufferMemoryStream.#ctor(Microsoft.Azure.Storage.IBufferManager,System.Int32)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.MultiBufferMemoryStream.BeginFastCopyTo(System.IO.Stream,System.Nullable{System.DateTime},System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.MultiBufferMemoryStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.MultiBufferMemoryStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.MultiBufferMemoryStream.ComputeCRC64Hash" />
      <Member Id="M:Microsoft.Azure.Storage.Core.MultiBufferMemoryStream.ComputeMD5Hash" />
      <Member Id="M:Microsoft.Azure.Storage.Core.MultiBufferMemoryStream.Dispose(System.Boolean)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.MultiBufferMemoryStream.EndFastCopyTo(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.MultiBufferMemoryStream.EndRead(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.MultiBufferMemoryStream.EndWrite(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.MultiBufferMemoryStream.FastCopyTo(System.IO.Stream,System.Nullable{System.DateTime})" />
      <Member Id="M:Microsoft.Azure.Storage.Core.MultiBufferMemoryStream.FastCopyToAsync(System.IO.Stream,System.Nullable{System.DateTime},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.MultiBufferMemoryStream.Flush" />
      <Member Id="M:Microsoft.Azure.Storage.Core.MultiBufferMemoryStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.MultiBufferMemoryStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.MultiBufferMemoryStream.SetLength(System.Int64)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.MultiBufferMemoryStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <Member Id="P:Microsoft.Azure.Storage.Core.MultiBufferMemoryStream.CanRead" />
      <Member Id="P:Microsoft.Azure.Storage.Core.MultiBufferMemoryStream.CanSeek" />
      <Member Id="P:Microsoft.Azure.Storage.Core.MultiBufferMemoryStream.CanWrite" />
      <Member Id="P:Microsoft.Azure.Storage.Core.MultiBufferMemoryStream.Length" />
      <Member Id="P:Microsoft.Azure.Storage.Core.MultiBufferMemoryStream.Position" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Core.NullType" Id="T:Microsoft.Azure.Storage.Core.NullType" />
    <Type Name="Microsoft.Azure.Storage.Core.SasQueryBuilder" Id="T:Microsoft.Azure.Storage.Core.SasQueryBuilder">
      <Member Id="M:Microsoft.Azure.Storage.Core.SasQueryBuilder.#ctor(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.SasQueryBuilder.Add(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.SasQueryBuilder.AddToUri(System.Uri)" />
      <Member Id="P:Microsoft.Azure.Storage.Core.SasQueryBuilder.RequireHttps" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Core.SyncMemoryStream" Id="T:Microsoft.Azure.Storage.Core.SyncMemoryStream">
      <Member Id="M:Microsoft.Azure.Storage.Core.SyncMemoryStream.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.Core.SyncMemoryStream.#ctor(System.Byte[])" />
      <Member Id="M:Microsoft.Azure.Storage.Core.SyncMemoryStream.#ctor(System.Byte[],System.Int32)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.SyncMemoryStream.#ctor(System.Byte[],System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.SyncMemoryStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.SyncMemoryStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.SyncMemoryStream.EndRead(System.IAsyncResult)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.SyncMemoryStream.EndWrite(System.IAsyncResult)" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Core.UriQueryBuilder" Id="T:Microsoft.Azure.Storage.Core.UriQueryBuilder">
      <Member Id="M:Microsoft.Azure.Storage.Core.UriQueryBuilder.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.Core.UriQueryBuilder.#ctor(Microsoft.Azure.Storage.Core.UriQueryBuilder)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.UriQueryBuilder.Add(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.UriQueryBuilder.AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      <Member Id="M:Microsoft.Azure.Storage.Core.UriQueryBuilder.AddToUri(Microsoft.Azure.Storage.StorageUri)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.UriQueryBuilder.AddToUri(System.Uri)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.UriQueryBuilder.AddToUriCore(System.Uri)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.UriQueryBuilder.ContainsQueryStringName(System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.UriQueryBuilder.ToString" />
      <Member Id="P:Microsoft.Azure.Storage.Core.UriQueryBuilder.Item(System.String)" />
      <Member Id="P:Microsoft.Azure.Storage.Core.UriQueryBuilder.Parameters" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Storage.Core.Util">
    <Type Name="Microsoft.Azure.Storage.Core.Util.AsyncManualResetEvent" Id="T:Microsoft.Azure.Storage.Core.Util.AsyncManualResetEvent">
      <Member Id="M:Microsoft.Azure.Storage.Core.Util.AsyncManualResetEvent.#ctor(System.Boolean)" />
      <Member Id="M:Microsoft.Azure.Storage.Core.Util.AsyncManualResetEvent.Reset" />
      <Member Id="M:Microsoft.Azure.Storage.Core.Util.AsyncManualResetEvent.Set" />
      <Member Id="M:Microsoft.Azure.Storage.Core.Util.AsyncManualResetEvent.WaitAsync" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Core.Util.StorageProgress" Id="T:Microsoft.Azure.Storage.Core.Util.StorageProgress">
      <Member Id="M:Microsoft.Azure.Storage.Core.Util.StorageProgress.#ctor(System.Int64)" />
      <Member Id="P:Microsoft.Azure.Storage.Core.Util.StorageProgress.BytesTransferred" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Storage.RetryPolicies">
    <Type Name="Microsoft.Azure.Storage.RetryPolicies.ExponentialRetry" Id="T:Microsoft.Azure.Storage.RetryPolicies.ExponentialRetry">
      <Member Id="M:Microsoft.Azure.Storage.RetryPolicies.ExponentialRetry.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.RetryPolicies.ExponentialRetry.#ctor(System.TimeSpan,System.Int32)" />
      <Member Id="M:Microsoft.Azure.Storage.RetryPolicies.ExponentialRetry.CreateInstance" />
      <Member Id="M:Microsoft.Azure.Storage.RetryPolicies.ExponentialRetry.Evaluate(Microsoft.Azure.Storage.RetryPolicies.RetryContext,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.RetryPolicies.ExponentialRetry.ShouldRetry(System.Int32,System.Int32,System.Exception,System.TimeSpan@,Microsoft.Azure.Storage.OperationContext)" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.RetryPolicies.IExtendedRetryPolicy" Id="T:Microsoft.Azure.Storage.RetryPolicies.IExtendedRetryPolicy">
      <Member Id="M:Microsoft.Azure.Storage.RetryPolicies.IExtendedRetryPolicy.Evaluate(Microsoft.Azure.Storage.RetryPolicies.RetryContext,Microsoft.Azure.Storage.OperationContext)" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.RetryPolicies.IRetryPolicy" Id="T:Microsoft.Azure.Storage.RetryPolicies.IRetryPolicy">
      <Member Id="M:Microsoft.Azure.Storage.RetryPolicies.IRetryPolicy.CreateInstance" />
      <Member Id="M:Microsoft.Azure.Storage.RetryPolicies.IRetryPolicy.ShouldRetry(System.Int32,System.Int32,System.Exception,System.TimeSpan@,Microsoft.Azure.Storage.OperationContext)" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.RetryPolicies.LinearRetry" Id="T:Microsoft.Azure.Storage.RetryPolicies.LinearRetry">
      <Member Id="M:Microsoft.Azure.Storage.RetryPolicies.LinearRetry.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.RetryPolicies.LinearRetry.#ctor(System.TimeSpan,System.Int32)" />
      <Member Id="M:Microsoft.Azure.Storage.RetryPolicies.LinearRetry.CreateInstance" />
      <Member Id="M:Microsoft.Azure.Storage.RetryPolicies.LinearRetry.Evaluate(Microsoft.Azure.Storage.RetryPolicies.RetryContext,Microsoft.Azure.Storage.OperationContext)" />
      <Member Id="M:Microsoft.Azure.Storage.RetryPolicies.LinearRetry.ShouldRetry(System.Int32,System.Int32,System.Exception,System.TimeSpan@,Microsoft.Azure.Storage.OperationContext)" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.RetryPolicies.LocationMode" Id="T:Microsoft.Azure.Storage.RetryPolicies.LocationMode">
      <Member Id="F:Microsoft.Azure.Storage.RetryPolicies.LocationMode.PrimaryOnly" />
      <Member Id="F:Microsoft.Azure.Storage.RetryPolicies.LocationMode.PrimaryThenSecondary" />
      <Member Id="F:Microsoft.Azure.Storage.RetryPolicies.LocationMode.SecondaryOnly" />
      <Member Id="F:Microsoft.Azure.Storage.RetryPolicies.LocationMode.SecondaryThenPrimary" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.RetryPolicies.NoRetry" Id="T:Microsoft.Azure.Storage.RetryPolicies.NoRetry">
      <Member Id="M:Microsoft.Azure.Storage.RetryPolicies.NoRetry.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.RetryPolicies.NoRetry.CreateInstance" />
      <Member Id="M:Microsoft.Azure.Storage.RetryPolicies.NoRetry.ShouldRetry(System.Int32,System.Int32,System.Exception,System.TimeSpan@,Microsoft.Azure.Storage.OperationContext)" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.RetryPolicies.RetryContext" Id="T:Microsoft.Azure.Storage.RetryPolicies.RetryContext">
      <Member Id="M:Microsoft.Azure.Storage.RetryPolicies.RetryContext.ToString" />
      <Member Id="P:Microsoft.Azure.Storage.RetryPolicies.RetryContext.CurrentRetryCount" />
      <Member Id="P:Microsoft.Azure.Storage.RetryPolicies.RetryContext.LastRequestResult" />
      <Member Id="P:Microsoft.Azure.Storage.RetryPolicies.RetryContext.LocationMode" />
      <Member Id="P:Microsoft.Azure.Storage.RetryPolicies.RetryContext.NextLocation" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.RetryPolicies.RetryInfo" Id="T:Microsoft.Azure.Storage.RetryPolicies.RetryInfo">
      <Member Id="M:Microsoft.Azure.Storage.RetryPolicies.RetryInfo.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.RetryPolicies.RetryInfo.#ctor(Microsoft.Azure.Storage.RetryPolicies.RetryContext)" />
      <Member Id="M:Microsoft.Azure.Storage.RetryPolicies.RetryInfo.ToString" />
      <Member Id="P:Microsoft.Azure.Storage.RetryPolicies.RetryInfo.RetryInterval" />
      <Member Id="P:Microsoft.Azure.Storage.RetryPolicies.RetryInfo.TargetLocation" />
      <Member Id="P:Microsoft.Azure.Storage.RetryPolicies.RetryInfo.UpdatedLocationMode" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Azure.Storage.Shared.Protocol">
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.AccountProperties" Id="T:Microsoft.Azure.Storage.Shared.Protocol.AccountProperties">
      <Member Id="M:Microsoft.Azure.Storage.Shared.Protocol.AccountProperties.#ctor" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.AccountProperties.AccountKind" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.AccountProperties.SkuName" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.Checksum" Id="T:Microsoft.Azure.Storage.Shared.Protocol.Checksum">
      <Member Id="M:Microsoft.Azure.Storage.Shared.Protocol.Checksum.#ctor(System.String,System.String)" />
      <Member Id="M:Microsoft.Azure.Storage.Shared.Protocol.Checksum.op_Implicit(System.String)~Microsoft.Azure.Storage.Shared.Protocol.Checksum" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.Checksum.CRC64" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.Checksum.MD5" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.Checksum.None" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.ChecksumOptions" Id="T:Microsoft.Azure.Storage.Shared.Protocol.ChecksumOptions">
      <Member Id="M:Microsoft.Azure.Storage.Shared.Protocol.ChecksumOptions.#ctor" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.ChecksumOptions.DisableContentCRC64Validation" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.ChecksumOptions.DisableContentMD5Validation" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.ChecksumOptions.StoreContentMD5" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.ChecksumOptions.UseTransactionalCRC64" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.ChecksumOptions.UseTransactionalMD5" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.Constants" Id="T:Microsoft.Azure.Storage.Shared.Protocol.Constants">
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AccessPolicy" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AccessTierChangeTimeElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AccessTierElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AccessTierInferred" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AES256" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AppendBlobValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ArchiveStatusElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.BlobElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.BlobPrefixElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.BlobsElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.BlobTypeElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.BlockBlobValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.BlockElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.BlockListElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.CacheControlElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ClearRangeElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ClientIpElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.CommittedBlocksElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.CommittedElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ContainerElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ContainerNameElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ContainersElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ContentEncodingElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ContentLanguageElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ContentLengthElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ContentMD5Element" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ContentTypeElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.CopyAbortedValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.CopyCompletionTimeElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.CopyDestinationSnapshotElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.CopyFailedValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.CopyIdElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.CopyPendingValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.CopyProgressElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.CopySourceElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.CopyStatusDescriptionElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.CopyStatusElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.CopySuccessValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.CreationTimeElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.DefaultClientSideTimeout" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.DefaultParallelDownloadRangeSizeBytes" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.DefaultSubStreamBufferSize" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.DefaultWriteBlockSizeBytes" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.DeletedElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.DeletedTimeElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.DelimiterElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.DequeueCountElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.DirectoryPathElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.EndElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.EntriesElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.EnumerationResultsElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ErrorCode" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ErrorExceptionMessage" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ErrorExceptionStackTrace" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ErrorMessage" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ErrorRootElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.EtagElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ExpirationTimeElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.Expiry" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.FileDirectoryElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.FileElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.FileHandleListElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.FileIdElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.FileRangeElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.FileRangeListElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.GB" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.GeoBootstrapValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.GeoLiveValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.GeoUnavailableValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HandleElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HandleIdElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HasImmutabilityPolicyElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HasLegalHoldElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.Id" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.IncrementalCopy" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.InsertionTimeElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.InvalidMetadataName" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.KB" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.KeyInfo" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.LastModifiedElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.LastReconnectTimeElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.LatestElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.LeaseAvailableValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.LeaseBreakingValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.LeaseBrokenValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.LeaseDurationElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.LeasedValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.LeaseExpiredValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.LeaseFixedValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.LeaseInfiniteValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.LeaseStateElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.LeaseStatusElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.LockedValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MarkerElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MaxAppendBlockSize" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MaxBlobSize" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MaxBlockNumber" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MaxBlockSize" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MaxIdleTimeMs" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MaximumAllowedTimeout" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MaximumBreakLeasePeriod" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MaximumLeaseDuration" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MaximumRetryBackoff" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MaxMaximumExecutionTime" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MaxParallelOperationThreadCount" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MaxRangeGetContentCRC64Size" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MaxRangeGetContentMD5Size" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MaxResults" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MaxResultsElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MaxRetainedVersionsPerBlob" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MaxSharedAccessPolicyIdentifiers" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MaxSingleUploadBlobSize" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MaxSubOperationPerBatch" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MB" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MessageElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MessageIdElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.Messages" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MessagesElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MessageTextElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MetadataElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MinimumBreakLeasePeriod" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MinimumLeaseDuration" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.MinLargeBlockSize" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.NameElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.NextMarkerElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.OpenTimeElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.PageBlobValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.PageListElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.PageRangeElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.PageSize" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ParentIdElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.PathElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.Permission" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.PopReceiptElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.PrefixElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.PropertiesElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.PublicAccessElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueueElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueueNameElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueuesElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QuotaElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.RehydratePendingToCool" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.RehydratePendingToHot" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.RemainingRetentionDaysElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ServerEncryptionElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ServiceEndpointElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.SessionIdElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ShareElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ShareNameElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.SharesElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.SignedExpiry" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.SignedIdentifier" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.SignedIdentifiers" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.SignedOid" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.SignedService" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.SignedStart" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.SignedTid" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.SignedVersion" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.SizeElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.SnapshotElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.Start" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.StartElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.TimeNextVisibleElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.UncommittedBlocksElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.UncommittedElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.UnlockedValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.UrlElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.UserDelegationKey" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.Value" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.Constants/AnalyticsConstants" Id="T:Microsoft.Azure.Storage.Shared.Protocol.Constants.AnalyticsConstants">
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AnalyticsConstants.LoggingVersionV1" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AnalyticsConstants.LogsContainer" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AnalyticsConstants.MetricsCapacityBlob" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AnalyticsConstants.MetricsHourPrimaryTransactionsBlob" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AnalyticsConstants.MetricsHourPrimaryTransactionsFile" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AnalyticsConstants.MetricsHourPrimaryTransactionsQueue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AnalyticsConstants.MetricsHourPrimaryTransactionsTable" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AnalyticsConstants.MetricsHourSecondaryTransactionsBlob" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AnalyticsConstants.MetricsHourSecondaryTransactionsFile" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AnalyticsConstants.MetricsHourSecondaryTransactionsQueue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AnalyticsConstants.MetricsHourSecondaryTransactionsTable" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AnalyticsConstants.MetricsMinutePrimaryTransactionsBlob" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AnalyticsConstants.MetricsMinutePrimaryTransactionsFile" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AnalyticsConstants.MetricsMinutePrimaryTransactionsQueue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AnalyticsConstants.MetricsMinutePrimaryTransactionsTable" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AnalyticsConstants.MetricsMinuteSecondaryTransactionsBlob" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AnalyticsConstants.MetricsMinuteSecondaryTransactionsFile" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AnalyticsConstants.MetricsMinuteSecondaryTransactionsQueue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AnalyticsConstants.MetricsMinuteSecondaryTransactionsTable" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.AnalyticsConstants.MetricsVersionV1" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.Constants/ContinuationConstants" Id="T:Microsoft.Azure.Storage.Shared.Protocol.Constants.ContinuationConstants">
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ContinuationConstants.BlobType" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ContinuationConstants.ContinuationTopElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ContinuationConstants.CurrentVersion" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ContinuationConstants.FileType" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ContinuationConstants.NextMarkerElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ContinuationConstants.NextPartitionKeyElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ContinuationConstants.NextRowKeyElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ContinuationConstants.NextTableNameElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ContinuationConstants.QueueType" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ContinuationConstants.TableType" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ContinuationConstants.TargetLocationElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ContinuationConstants.TypeElement" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.ContinuationConstants.VersionElement" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.Constants/EncryptionConstants" Id="T:Microsoft.Azure.Storage.Shared.Protocol.Constants.EncryptionConstants">
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.EncryptionConstants.AgentMetadataKey" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.EncryptionConstants.AgentMetadataValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.EncryptionConstants.BlobEncryptionData" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.EncryptionConstants.TableEncryptionKeyDetails" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.EncryptionConstants.TableEncryptionPropertyDetails" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.Constants/HeaderConstants" Id="T:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants">
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.AccessTierChangeTimeHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.AccessTierHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.AccessTierInferredHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.AllFileHandles" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.AppendBlob" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.ApproximateMessagesCount" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.ArchiveStatusHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.BlobAppendOffset" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.BlobCacheControlHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.BlobCommittedBlockCount" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.BlobContentDispositionRequestHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.BlobContentEncodingHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.BlobContentLanguageHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.BlobContentLengthHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.BlobContentMD5Header" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.BlobContentTypeHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.BlobPublicAccess" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.BlobSequenceNumber" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.BlobType" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.BlockBlob" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.ClientProvidedEncryptionSuccess" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.ClientProvidedEncyptionAlgorithm" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.ClientProvidedEncyptionKey" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.ClientProvidedEncyptionKeyAlgorithmSource" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.ClientProvidedEncyptionKeyHash" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.ClientProvidedEncyptionKeyHashSource" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.ClientProvidedEncyptionKeySource" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.ClientRequestIdHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.ContainerPublicAccessType" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.ContentCrc64Header" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.ContentDispositionResponseHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.ContentLanguageHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.ContentLengthHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.CopyActionAbort" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.CopyActionHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.CopyCompletionTimeHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.CopyDescriptionHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.CopyDestinationSnapshotHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.CopyIdHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.CopyProgressHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.CopySourceHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.CopyStatusHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.CopyTypeHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.CreationTimeHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.Date" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.DeleteSnapshotHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.EtagHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.FalseHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.File" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.FileAttributes" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.FileAttributesNone" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.FileCacheControlHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.FileChangeTime" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.FileContentCRC64Header" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.FileContentDispositionRequestHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.FileContentEncodingHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.FileContentLanguageHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.FileContentLengthHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.FileContentMD5Header" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.FileContentTypeHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.FileCreationTime" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.FileId" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.FileLastWriteTime" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.FileParentId" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.FilePermission" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.FilePermissionInherit" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.FilePermissionKey" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.FileRangeWrite" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.FileTimeNow" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.FileType" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.HandleId" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.HasImmutabilityPolicyHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.HasLegalHoldHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.IfAppendPositionEqualHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.IfMaxSizeLessThanOrEqualHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.IfSequenceNumberEqHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.IfSequenceNumberLEHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.IfSequenceNumberLTHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.IncludeSnapshotsValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.IncrementalCopyHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.KeyNameHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.LeaseActionHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.LeaseBreakPeriodHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.LeaseDurationHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.LeaseIdHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.LeaseState" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.LeaseStatus" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.LeaseTimeHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.Marker" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.NextVisibleTime" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.NumHandlesClosed" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.PageBlob" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.PageWrite" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.PeekOnly" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.PopReceipt" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.PrefixForStorageHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.PrefixForStorageMetadata" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.PrefixForStorageProperties" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.Preserve" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.ProposedLeaseIdHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.RangeContentCRC64Header" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.RangeContentMD5Header" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.RangeHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.RangeHeaderFormat" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.Recursive" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.RehydratePriorityHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.RequestIdHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.RequiresSyncHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.SequenceNumberAction" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.ServerEncrypted" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.ServerRequestEncrypted" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.ShareQuota" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.ShareSize" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.SnapshotHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.SnapshotsOnlyValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.SourceContentMD5Header" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.SourceIfMatchCrcHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.SourceIfMatchHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.SourceIfModifiedSinceHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.SourceIfNoneMatchCrcHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.SourceIfNoneMatchHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.SourceIfUnmodifiedSinceHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.SourceRangeHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.StorageVersionHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.TargetStorageVersion" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.TrueHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.UserAgent" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.UserAgentComment" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.UserAgentProductName" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.HeaderConstants.UserAgentProductVersion" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.Constants/QueryConstants" Id="T:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants">
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.ApiVersion" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.BlobResourceType" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.BlobSnapshotResourceType" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.CacheControl" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.Component" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.ContainerResourceType" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.ContentDisposition" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.ContentEncoding" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.ContentLanguage" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.ContentType" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.CopyId" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.EndPartitionKey" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.EndRowKey" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.Marker" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.MessageTimeToLive" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.NumOfMessages" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.PopReceipt" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.ResourceType" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.SasTableName" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.ShareSnapshot" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.Signature" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.SignedExpiry" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.SignedIdentifier" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.SignedIP" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.SignedKey" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.SignedKeyExpiry" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.SignedKeyOid" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.SignedKeyService" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.SignedKeyStart" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.SignedKeyTid" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.SignedKeyVersion" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.SignedPermissions" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.SignedProtocols" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.SignedResource" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.SignedResourceTypes" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.SignedServices" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.SignedStart" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.SignedVersion" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.Snapshot" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.StartPartitionKey" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.StartRowKey" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.QueryConstants.VisibilityTimeout" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.Constants/VersionConstants" Id="T:Microsoft.Azure.Storage.Shared.Protocol.Constants.VersionConstants">
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.VersionConstants.August2013" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.Constants.VersionConstants.February2012" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.CorsHttpMethods" Id="T:Microsoft.Azure.Storage.Shared.Protocol.CorsHttpMethods">
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.CorsHttpMethods.Connect" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.CorsHttpMethods.Delete" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.CorsHttpMethods.Get" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.CorsHttpMethods.Head" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.CorsHttpMethods.Merge" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.CorsHttpMethods.None" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.CorsHttpMethods.Options" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.CorsHttpMethods.Patch" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.CorsHttpMethods.Post" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.CorsHttpMethods.Put" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.CorsHttpMethods.Trace" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.CorsProperties" Id="T:Microsoft.Azure.Storage.Shared.Protocol.CorsProperties">
      <Member Id="M:Microsoft.Azure.Storage.Shared.Protocol.CorsProperties.#ctor" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.CorsProperties.CorsRules" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.CorsRule" Id="T:Microsoft.Azure.Storage.Shared.Protocol.CorsRule">
      <Member Id="M:Microsoft.Azure.Storage.Shared.Protocol.CorsRule.#ctor" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.CorsRule.AllowedHeaders" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.CorsRule.AllowedMethods" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.CorsRule.AllowedOrigins" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.CorsRule.ExposedHeaders" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.CorsRule.MaxAgeInSeconds" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.DeleteRetentionPolicy" Id="T:Microsoft.Azure.Storage.Shared.Protocol.DeleteRetentionPolicy">
      <Member Id="M:Microsoft.Azure.Storage.Shared.Protocol.DeleteRetentionPolicy.#ctor" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.DeleteRetentionPolicy.Enabled" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.DeleteRetentionPolicy.RetentionDays" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.GeoReplicationStats" Id="T:Microsoft.Azure.Storage.Shared.Protocol.GeoReplicationStats">
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.GeoReplicationStats.LastSyncTime" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.GeoReplicationStats.Status" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.GeoReplicationStatus" Id="T:Microsoft.Azure.Storage.Shared.Protocol.GeoReplicationStatus">
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.GeoReplicationStatus.Bootstrap" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.GeoReplicationStatus.Live" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.GeoReplicationStatus.Unavailable" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.ListingContext" Id="T:Microsoft.Azure.Storage.Shared.Protocol.ListingContext">
      <Member Id="M:Microsoft.Azure.Storage.Shared.Protocol.ListingContext.#ctor(System.String,System.Nullable{System.Int32})" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.ListingContext.Marker" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.ListingContext.MaxResults" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.ListingContext.Prefix" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.LoggingOperations" Id="T:Microsoft.Azure.Storage.Shared.Protocol.LoggingOperations">
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.LoggingOperations.All" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.LoggingOperations.Delete" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.LoggingOperations.None" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.LoggingOperations.Read" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.LoggingOperations.Write" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.LoggingProperties" Id="T:Microsoft.Azure.Storage.Shared.Protocol.LoggingProperties">
      <Member Id="M:Microsoft.Azure.Storage.Shared.Protocol.LoggingProperties.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.Shared.Protocol.LoggingProperties.#ctor(System.String)" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.LoggingProperties.LoggingOperations" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.LoggingProperties.RetentionDays" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.LoggingProperties.Version" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.MetricsLevel" Id="T:Microsoft.Azure.Storage.Shared.Protocol.MetricsLevel">
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.MetricsLevel.None" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.MetricsLevel.Service" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.MetricsLevel.ServiceAndApi" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.MetricsProperties" Id="T:Microsoft.Azure.Storage.Shared.Protocol.MetricsProperties">
      <Member Id="M:Microsoft.Azure.Storage.Shared.Protocol.MetricsProperties.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.Shared.Protocol.MetricsProperties.#ctor(System.String)" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.MetricsProperties.MetricsLevel" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.MetricsProperties.RetentionDays" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.MetricsProperties.Version" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.ResponseParsingBase`1" Id="T:Microsoft.Azure.Storage.Shared.Protocol.ResponseParsingBase`1">
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.ResponseParsingBase`1.allObjectsParsed" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.ResponseParsingBase`1.outstandingObjectsToParse" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.ResponseParsingBase`1.reader" />
      <Member Id="M:Microsoft.Azure.Storage.Shared.Protocol.ResponseParsingBase`1.#ctor(System.IO.Stream)" />
      <Member Id="M:Microsoft.Azure.Storage.Shared.Protocol.ResponseParsingBase`1.Dispose" />
      <Member Id="M:Microsoft.Azure.Storage.Shared.Protocol.ResponseParsingBase`1.Dispose(System.Boolean)" />
      <Member Id="M:Microsoft.Azure.Storage.Shared.Protocol.ResponseParsingBase`1.ParseXml" />
      <Member Id="M:Microsoft.Azure.Storage.Shared.Protocol.ResponseParsingBase`1.Variable(System.Boolean@)" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.ResponseParsingBase`1.ObjectsToParse" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties" Id="T:Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties">
      <Member Id="M:Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties.#ctor" />
      <Member Id="M:Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties.#ctor(Microsoft.Azure.Storage.Shared.Protocol.LoggingProperties,Microsoft.Azure.Storage.Shared.Protocol.MetricsProperties,Microsoft.Azure.Storage.Shared.Protocol.MetricsProperties,Microsoft.Azure.Storage.Shared.Protocol.CorsProperties,Microsoft.Azure.Storage.Shared.Protocol.DeleteRetentionPolicy)" />
      <Member Id="M:Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties.#ctor(Microsoft.Azure.Storage.Shared.Protocol.LoggingProperties,Microsoft.Azure.Storage.Shared.Protocol.MetricsProperties,Microsoft.Azure.Storage.Shared.Protocol.MetricsProperties,Microsoft.Azure.Storage.Shared.Protocol.CorsProperties,Microsoft.Azure.Storage.Shared.Protocol.DeleteRetentionPolicy,Microsoft.Azure.Storage.Shared.Protocol.StaticWebsiteProperties)" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties.Cors" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties.DefaultServiceVersion" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties.DeleteRetentionPolicy" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties.HourMetrics" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties.Logging" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties.MinuteMetrics" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.ServiceProperties.StaticWebsite" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.ServiceStats" Id="T:Microsoft.Azure.Storage.Shared.Protocol.ServiceStats">
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.ServiceStats.GeoReplication" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.StaticWebsiteProperties" Id="T:Microsoft.Azure.Storage.Shared.Protocol.StaticWebsiteProperties">
      <Member Id="M:Microsoft.Azure.Storage.Shared.Protocol.StaticWebsiteProperties.#ctor" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.StaticWebsiteProperties.Enabled" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.StaticWebsiteProperties.ErrorDocument404Path" />
      <Member Id="P:Microsoft.Azure.Storage.Shared.Protocol.StaticWebsiteProperties.IndexDocument" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings" Id="T:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings">
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.AccountAlreadyExists" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.AccountBeingCreated" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.AccountIsDisabled" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.AuthenticationFailed" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.ConditionHeadersNotSupported" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.ConditionNotMet" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.ContainerAlreadyExists" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.ContainerBeingDeleted" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.ContainerDisabled" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.ContainerNotFound" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.Crc64Mismatch" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.EmptyMetadataKey" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.InsufficientAccountPermissions" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.InternalError" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.InvalidAuthenticationInfo" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.InvalidCrc64" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.InvalidHeaderValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.InvalidHttpVerb" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.InvalidInput" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.InvalidMd5" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.InvalidMetadata" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.InvalidQueryParameterValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.InvalidRange" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.InvalidResourceName" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.InvalidUri" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.InvalidXmlDocument" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.InvalidXmlNodeValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.Md5Mismatch" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.MetadataTooLarge" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.MissingContentLengthHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.MissingRequiredHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.MissingRequiredQueryParameter" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.MissingRequiredXmlNode" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.MultipleConditionHeadersNotSupported" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.OperationTimedOut" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.OutOfRangeInput" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.OutOfRangeQueryParameterValue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.RequestBodyTooLarge" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.RequestUrlFailedToParse" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.ResourceAlreadyExists" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.ResourceNotFound" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.ResourceTypeMismatch" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.ServerBusy" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.UnsupportedHeader" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.UnsupportedHttpVerb" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.UnsupportedQueryParameter" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageErrorCodeStrings.UnsupportedXmlNode" />
    </Type>
    <Type Name="Microsoft.Azure.Storage.Shared.Protocol.StorageService" Id="T:Microsoft.Azure.Storage.Shared.Protocol.StorageService">
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageService.Blob" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageService.File" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageService.Queue" />
      <Member Id="F:Microsoft.Azure.Storage.Shared.Protocol.StorageService.Table" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.Extensions.Azure">
    <Type Name="Microsoft.Extensions.Azure.BlobClientBuilderExtensions" Id="T:Microsoft.Extensions.Azure.BlobClientBuilderExtensions">
      <Member Id="M:Microsoft.Extensions.Azure.BlobClientBuilderExtensions.AddBlobServiceClient``1(``0,System.String)" />
      <Member Id="M:Microsoft.Extensions.Azure.BlobClientBuilderExtensions.AddBlobServiceClient``1(``0,System.Uri)" />
      <Member Id="M:Microsoft.Extensions.Azure.BlobClientBuilderExtensions.AddBlobServiceClient``1(``0,System.Uri,Azure.Storage.StorageSharedKeyCredential)" />
      <Member Id="M:Microsoft.Extensions.Azure.BlobClientBuilderExtensions.AddBlobServiceClient``2(``0,``1)" />
    </Type>
    <Type Name="Microsoft.Extensions.Azure.QueueClientBuilderExtensions" Id="T:Microsoft.Extensions.Azure.QueueClientBuilderExtensions">
      <Member Id="M:Microsoft.Extensions.Azure.QueueClientBuilderExtensions.AddQueueServiceClient``1(``0,System.String)" />
      <Member Id="M:Microsoft.Extensions.Azure.QueueClientBuilderExtensions.AddQueueServiceClient``1(``0,System.Uri)" />
      <Member Id="M:Microsoft.Extensions.Azure.QueueClientBuilderExtensions.AddQueueServiceClient``1(``0,System.Uri,Azure.Storage.StorageSharedKeyCredential)" />
      <Member Id="M:Microsoft.Extensions.Azure.QueueClientBuilderExtensions.AddQueueServiceClient``2(``0,``1)" />
    </Type>
    <Type Name="Microsoft.Extensions.Azure.ShareClientBuilderExtensions" Id="T:Microsoft.Extensions.Azure.ShareClientBuilderExtensions">
      <Member Id="M:Microsoft.Extensions.Azure.ShareClientBuilderExtensions.AddFileServiceClient``1(``0,System.String)" />
      <Member Id="M:Microsoft.Extensions.Azure.ShareClientBuilderExtensions.AddFileServiceClient``1(``0,System.Uri)" />
      <Member Id="M:Microsoft.Extensions.Azure.ShareClientBuilderExtensions.AddFileServiceClient``1(``0,System.Uri,Azure.Storage.StorageSharedKeyCredential)" />
      <Member Id="M:Microsoft.Extensions.Azure.ShareClientBuilderExtensions.AddFileServiceClient``2(``0,``1)" />
    </Type>
  </Namespace>
</Framework>