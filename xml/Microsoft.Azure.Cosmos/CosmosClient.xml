<Type Name="CosmosClient" FullName="Microsoft.Azure.Cosmos.CosmosClient">
  <TypeSignature Language="C#" Value="public class CosmosClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi CosmosClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Cosmos.CosmosClient" />
  <TypeSignature Language="VB.NET" Value="Public Class CosmosClient&#xA;Implements IDisposable" />
  <TypeSignature Language="F#" Value="type CosmosClient = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Cosmos.Client</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.18</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Provides a client-side logical representation of the Azure Cosmos DB database account.
            This client can be used to configure and execute requests in the Azure Cosmos DB database service.
            
            CosmosClient is thread-safe. Its recommended to maintain a single instance of CosmosClient per lifetime 
            of the application which enables efficient connection management and performance.
            </summary>
    <remarks>
      <seealso href="https://docs.microsoft.com/azure/cosmos-db/distribute-data-globally" />
      <seealso href="https://docs.microsoft.com/azure/cosmos-db/partitioning-overview" />
      <seealso href="https://docs.microsoft.com/azure/cosmos-db/request-units" />
    </remarks>
    <example>
             This example create a <see cref="T:Microsoft.Azure.Cosmos.CosmosClient" />, <see cref="T:Microsoft.Azure.Cosmos.CosmosDatabase" />, and a <see cref="T:Microsoft.Azure.Cosmos.CosmosContainer" />.
             The CosmosClient uses the <see cref="P:Microsoft.Azure.Cosmos.CosmosClient.CosmosConfiguration" /> to get all the configuration values.
             <code language="c#"><![CDATA[
             CosmosConfiguration cosmosConfiguration = new CosmosConfiguration(
                 accountEndPoint: "https://testcosmos.documents.azure.com:443/",
                 accountKey: "SuperSecretKey")
                 .UseCurrentRegion(LocationNames.EastUS2, LocationNames.WestUS);
             
             using (CosmosClient cosmosClient = new CosmosClient(cosmosConfiguration))
             {
                 CosmosDatabase db = await client.Databases.CreateAsync(Guid.NewGuid().ToString())
                 CosmosContainer container = await db.Containers.CreateAsync(Guid.NewGuid().ToString());
             }
            ]]></code></example>
    <example>
             This example create a <see cref="T:Microsoft.Azure.Cosmos.CosmosClient" />, <see cref="T:Microsoft.Azure.Cosmos.CosmosDatabase" />, and a <see cref="T:Microsoft.Azure.Cosmos.CosmosContainer" />.
             The CosmosClient is created with the AccountEndpoint and AccountKey.
             <code language="c#"><![CDATA[
             using (CosmosClient cosmosClient = new CosmosClient(
                 accountEndPoint: "https://testcosmos.documents.azure.com:443/",
                 accountKey: "SuperSecretKey"))
             {
                 CosmosDatabase db = await client.Databases.CreateAsync(Guid.NewGuid().ToString())
                 CosmosContainer container = await db.Containers.CreateAsync(Guid.NewGuid().ToString());
             }
            ]]></code></example>
    <example>
             This example create a <see cref="T:Microsoft.Azure.Cosmos.CosmosClient" />, <see cref="T:Microsoft.Azure.Cosmos.CosmosDatabase" />, and a <see cref="T:Microsoft.Azure.Cosmos.CosmosContainer" />.
             The CosmosClient is created with the connection string.
             <code language="c#"><![CDATA[
             using (CosmosClient cosmosClient = new CosmosClient(
                 connectionString: "AccountEndpoint=https://testcosmos.documents.azure.com:443/;AccountKey=SuperSecretKey;"))
             {
                 CosmosDatabase db = await client.Databases.CreateAsync(Guid.NewGuid().ToString())
                 CosmosContainer container = await db.Containers.CreateAsync(Guid.NewGuid().ToString());
             }
            ]]></code></example>
    <example>
            This example create a <see cref="T:Microsoft.Azure.Cosmos.CosmosClient" />, <see cref="T:Microsoft.Azure.Cosmos.Database" />, and a <see cref="T:Microsoft.Azure.Cosmos.Container" />.
            The CosmosClient uses the <see cref="T:Microsoft.Azure.Cosmos.CosmosClientOptions" /> to get all the configuration values.
            <code language="c#"><![CDATA[
            CosmosClientBuilder cosmosClientBuilder = new CosmosClientBuilder(
                accountEndpoint: "https://testcosmos.documents.azure.com:443/",
                accountKey: "SuperSecretKey")
                .WithApplicationRegion(LocationNames.EastUS2);
            
            using (CosmosClient cosmosClient = cosmosClientBuilder.Build())
            {
                Database db = await client.CreateDatabaseAsync(Guid.NewGuid().ToString())
                Container container = await db.CreateContainerAsync(Guid.NewGuid().ToString());
            }
            ]]></code></example>
    <example>
            This example create a <see cref="T:Microsoft.Azure.Cosmos.CosmosClient" />, <see cref="T:Microsoft.Azure.Cosmos.Database" />, and a <see cref="T:Microsoft.Azure.Cosmos.Container" />.
            The CosmosClient is created with the AccountEndpoint and AccountKey.
            <code language="c#"><![CDATA[
            using (CosmosClient cosmosClient = new CosmosClient(
                accountEndpoint: "https://testcosmos.documents.azure.com:443/",
                accountKey: "SuperSecretKey"))
            {
                Database db = await client.CreateDatabaseAsync(Guid.NewGuid().ToString())
                Container container = await db.Containers.CreateContainerAsync(Guid.NewGuid().ToString());
            }
            ]]></code></example>
    <example>
            This example create a <see cref="T:Microsoft.Azure.Cosmos.CosmosClient" />, <see cref="T:Microsoft.Azure.Cosmos.Database" />, and a <see cref="T:Microsoft.Azure.Cosmos.Container" />.
            The CosmosClient is created with the connection string.
            <code language="c#"><![CDATA[
            using (CosmosClient cosmosClient = new CosmosClient(
                connectionString: "AccountEndpoint=https://testcosmos.documents.azure.com:443/;AccountKey=SuperSecretKey;"))
            {
                Database db = await client.CreateDatabaseAsync(Guid.NewGuid().ToString())
                Container container = await db.Containers.CreateContainerAsync(Guid.NewGuid().ToString());
            }
            ]]></code></example>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CosmosClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Cosmos.CosmosClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Cosmos.Client</AssemblyName>
        <AssemblyVersion>3.0.0.18</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Create a new CosmosClient used for mock testing
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CosmosClient (string connectionString, Microsoft.Azure.Cosmos.CosmosClientOptions clientOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, class Microsoft.Azure.Cosmos.CosmosClientOptions clientOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Cosmos.CosmosClient.#ctor(System.String,Microsoft.Azure.Cosmos.CosmosClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, Optional clientOptions As CosmosClientOptions = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Cosmos.CosmosClient : string * Microsoft.Azure.Cosmos.CosmosClientOptions -&gt; Microsoft.Azure.Cosmos.CosmosClient" Usage="new Microsoft.Azure.Cosmos.CosmosClient (connectionString, clientOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Cosmos.Client</AssemblyName>
        <AssemblyVersion>3.0.0.18</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="clientOptions" Type="Microsoft.Azure.Cosmos.CosmosClientOptions" />
      </Parameters>
      <Docs>
        <param name="connectionString">The connection string to the cosmos account. Example: https://mycosmosaccount.documents.azure.com:443/;AccountKey=SuperSecretKey;</param>
        <param name="clientOptions">(Optional) client options</param>
        <summary>
            Create a new CosmosClient with the connection
            </summary>
        <remarks>To be added.</remarks>
        <example>
            This example creates a CosmosClient
            <code language="c#"><![CDATA[
            using (CosmosClient cosmosClient = new CosmosClient(
                connectionString: "https://testcosmos.documents.azure.com:443/;AccountKey=SuperSecretKey;"))
            {
                // Create a database and other CosmosClient operations
            }
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CosmosClient (string accountEndpoint, string accountKey, Microsoft.Azure.Cosmos.CosmosClientOptions clientOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string accountEndpoint, string accountKey, class Microsoft.Azure.Cosmos.CosmosClientOptions clientOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Cosmos.CosmosClient.#ctor(System.String,System.String,Microsoft.Azure.Cosmos.CosmosClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (accountEndpoint As String, accountKey As String, Optional clientOptions As CosmosClientOptions = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Cosmos.CosmosClient : string * string * Microsoft.Azure.Cosmos.CosmosClientOptions -&gt; Microsoft.Azure.Cosmos.CosmosClient" Usage="new Microsoft.Azure.Cosmos.CosmosClient (accountEndpoint, accountKey, clientOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Cosmos.Client</AssemblyName>
        <AssemblyVersion>3.0.0.18</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="accountEndpoint" Type="System.String" />
        <Parameter Name="accountKey" Type="System.String" />
        <Parameter Name="clientOptions" Type="Microsoft.Azure.Cosmos.CosmosClientOptions" />
      </Parameters>
      <Docs>
        <param name="accountEndpoint">The cosmos service endpoint to use to create the client.</param>
        <param name="accountKey">The cosmos account key to use to create the client.</param>
        <param name="clientOptions">(Optional) client options</param>
        <summary>
            Create a new CosmosClient with the account endpoint URI string and account key
            </summary>
        <remarks>To be added.</remarks>
        <example>
            This example creates a CosmosClient
            <code language="c#"><![CDATA[
            using (CosmosClient cosmosClient = new CosmosClient(
                accountEndPoint: "https://testcosmos.documents.azure.com:443/",
                accountKey: "SuperSecretKey"))
            {
                // Create a database and other CosmosClient operations
            }
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="ClientOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Cosmos.CosmosClientOptions ClientOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Cosmos.CosmosClientOptions ClientOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Cosmos.CosmosClient.ClientOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientOptions As CosmosClientOptions" />
      <MemberSignature Language="F#" Value="member this.ClientOptions : Microsoft.Azure.Cosmos.CosmosClientOptions" Usage="Microsoft.Azure.Cosmos.CosmosClient.ClientOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Cosmos.Client</AssemblyName>
        <AssemblyVersion>3.0.0.18</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Cosmos.CosmosClientOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The <see cref="T:Microsoft.Azure.Cosmos.CosmosClientOptions" /> used initialize CosmosClient
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDatabaseAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Cosmos.DatabaseResponse&gt; CreateDatabaseAsync (string id, Nullable&lt;int&gt; throughput = null, Microsoft.Azure.Cosmos.RequestOptions requestOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Cosmos.DatabaseResponse&gt; CreateDatabaseAsync(string id, valuetype System.Nullable`1&lt;int32&gt; throughput, class Microsoft.Azure.Cosmos.RequestOptions requestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Cosmos.CosmosClient.CreateDatabaseAsync(System.String,System.Nullable{System.Int32},Microsoft.Azure.Cosmos.RequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CreateDatabaseAsync : string * Nullable&lt;int&gt; * Microsoft.Azure.Cosmos.RequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Cosmos.DatabaseResponse&gt;&#xA;override this.CreateDatabaseAsync : string * Nullable&lt;int&gt; * Microsoft.Azure.Cosmos.RequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Cosmos.DatabaseResponse&gt;" Usage="cosmosClient.CreateDatabaseAsync (id, throughput, requestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Cosmos.Client</AssemblyName>
        <AssemblyVersion>3.0.0.18</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Cosmos.DatabaseResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="throughput" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="requestOptions" Type="Microsoft.Azure.Cosmos.RequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="id">The database id.</param>
        <param name="throughput">(Optional) The throughput provisioned for a database in measurement of Request Units per second in the Azure Cosmos DB service.</param>
        <param name="requestOptions">(Optional) A set of options that can be set.</param>
        <param name="cancellationToken">(Optional) <see cref="T:System.Threading.CancellationToken" /> representing request cancellation.</param>
        <summary>
             Send a request for creating a database.
            
             A database manages users, permissions and a set of containers.
             Each Azure Cosmos DB Database Account is able to support multiple independent named databases,
             with the database being the logical container for data.
            
             Each Database consists of one or more containers, each of which in turn contain one or more
             documents. Since databases are an administrative resource, the Service Master Key will be
             required in order to access and successfully complete any action using the User APIs.
             </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:Microsoft.Azure.Cosmos.DatabaseResponse" /> which wraps a <see cref="T:Microsoft.Azure.Cosmos.DatabaseProperties" /> containing the resource record.</returns>
        <remarks>
          <seealso href="https://docs.microsoft.com/azure/cosmos-db/request-units" /> for details on provision throughput.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDatabaseIfNotExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Cosmos.DatabaseResponse&gt; CreateDatabaseIfNotExistsAsync (string id, Nullable&lt;int&gt; throughput = null, Microsoft.Azure.Cosmos.RequestOptions requestOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Cosmos.DatabaseResponse&gt; CreateDatabaseIfNotExistsAsync(string id, valuetype System.Nullable`1&lt;int32&gt; throughput, class Microsoft.Azure.Cosmos.RequestOptions requestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Cosmos.CosmosClient.CreateDatabaseIfNotExistsAsync(System.String,System.Nullable{System.Int32},Microsoft.Azure.Cosmos.RequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CreateDatabaseIfNotExistsAsync : string * Nullable&lt;int&gt; * Microsoft.Azure.Cosmos.RequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Cosmos.DatabaseResponse&gt;&#xA;override this.CreateDatabaseIfNotExistsAsync : string * Nullable&lt;int&gt; * Microsoft.Azure.Cosmos.RequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Cosmos.DatabaseResponse&gt;" Usage="cosmosClient.CreateDatabaseIfNotExistsAsync (id, throughput, requestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Cosmos.Client</AssemblyName>
        <AssemblyVersion>3.0.0.18</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Cosmos.DatabaseResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="throughput" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="requestOptions" Type="Microsoft.Azure.Cosmos.RequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="id">The database id.</param>
        <param name="throughput">(Optional) The throughput provisioned for a database in measurement of Request Units per second in the Azure Cosmos DB service.</param>
        <param name="requestOptions">(Optional) A set of additional options that can be set.</param>
        <param name="cancellationToken">(Optional) <see cref="T:System.Threading.CancellationToken" /> representing request cancellation.</param>
        <summary>
             Check if a database exists, and if it doesn't, create it.
             This will make a read operation, and if the database is not found it will do a create operation.
            
             A database manages users, permissions and a set of containers.
             Each Azure Cosmos DB Database Account is able to support multiple independent named databases,
             with the database being the logical container for data.
            
             Each Database consists of one or more containers, each of which in turn contain one or more
             documents. Since databases are an administrative resource, the Service Master Key will be
             required in order to access and successfully complete any action using the User APIs.
             </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:Microsoft.Azure.Cosmos.DatabaseResponse" /> which wraps a <see cref="T:Microsoft.Azure.Cosmos.DatabaseProperties" /> containing the resource record.</returns>
        <remarks>
          <seealso href="https://docs.microsoft.com/azure/cosmos-db/request-units" /> for details on provision throughput.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDatabaseStreamAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Cosmos.ResponseMessage&gt; CreateDatabaseStreamAsync (Microsoft.Azure.Cosmos.DatabaseProperties databaseProperties, Nullable&lt;int&gt; throughput = null, Microsoft.Azure.Cosmos.RequestOptions requestOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Cosmos.ResponseMessage&gt; CreateDatabaseStreamAsync(class Microsoft.Azure.Cosmos.DatabaseProperties databaseProperties, valuetype System.Nullable`1&lt;int32&gt; throughput, class Microsoft.Azure.Cosmos.RequestOptions requestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Cosmos.CosmosClient.CreateDatabaseStreamAsync(Microsoft.Azure.Cosmos.DatabaseProperties,System.Nullable{System.Int32},Microsoft.Azure.Cosmos.RequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CreateDatabaseStreamAsync : Microsoft.Azure.Cosmos.DatabaseProperties * Nullable&lt;int&gt; * Microsoft.Azure.Cosmos.RequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Cosmos.ResponseMessage&gt;&#xA;override this.CreateDatabaseStreamAsync : Microsoft.Azure.Cosmos.DatabaseProperties * Nullable&lt;int&gt; * Microsoft.Azure.Cosmos.RequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Cosmos.ResponseMessage&gt;" Usage="cosmosClient.CreateDatabaseStreamAsync (databaseProperties, throughput, requestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Cosmos.Client</AssemblyName>
        <AssemblyVersion>3.0.0.18</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Cosmos.ResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseProperties" Type="Microsoft.Azure.Cosmos.DatabaseProperties" />
        <Parameter Name="throughput" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="requestOptions" Type="Microsoft.Azure.Cosmos.RequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="databaseProperties">The database properties</param>
        <param name="throughput">(Optional) The throughput provisioned for a database in measurement of Request Units per second in the Azure Cosmos DB service.</param>
        <param name="requestOptions">(Optional) A set of options that can be set.</param>
        <param name="cancellationToken">(Optional) <see cref="T:System.Threading.CancellationToken" /> representing request cancellation.</param>
        <summary>
             Send a request for creating a database.
            
             A database manages users, permissions and a set of containers.
             Each Azure Cosmos DB Database Account is able to support multiple independent named databases,
             with the database being the logical container for data.
            
             Each Database consists of one or more containers, each of which in turn contain one or more
             documents. Since databases are an administrative resource, the Service Master Key will be
             required in order to access and successfully complete any action using the User APIs.
             </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:Microsoft.Azure.Cosmos.DatabaseResponse" /> which wraps a <see cref="T:Microsoft.Azure.Cosmos.DatabaseProperties" /> containing the resource record.</returns>
        <remarks>
          <seealso href="https://docs.microsoft.com/azure/cosmos-db/request-units" /> for details on provision throughput.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Cosmos.CosmosClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="cosmosClient.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Cosmos.Client</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.18</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Dispose of cosmos client
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Cosmos.CosmosClient.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="cosmosClient.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Cosmos.Client</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.18</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">True if disposing</param>
        <summary>
            Dispose of cosmos client
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Endpoint">
      <MemberSignature Language="C#" Value="public virtual Uri Endpoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Endpoint" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Cosmos.CosmosClient.Endpoint" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Endpoint As Uri" />
      <MemberSignature Language="F#" Value="member this.Endpoint : Uri" Usage="Microsoft.Azure.Cosmos.CosmosClient.Endpoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Cosmos.Client</AssemblyName>
        <AssemblyVersion>3.0.0.18</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the endpoint Uri for the Azure Cosmos DB service.
            </summary>
        <value>
            The Uri for the account endpoint.
            </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="GetContainer">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Cosmos.Container GetContainer (string databaseId, string containerId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Cosmos.Container GetContainer(string databaseId, string containerId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Cosmos.CosmosClient.GetContainer(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainer (databaseId As String, containerId As String) As Container" />
      <MemberSignature Language="F#" Value="abstract member GetContainer : string * string -&gt; Microsoft.Azure.Cosmos.Container&#xA;override this.GetContainer : string * string -&gt; Microsoft.Azure.Cosmos.Container" Usage="cosmosClient.GetContainer (databaseId, containerId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Cosmos.Client</AssemblyName>
        <AssemblyVersion>3.0.0.18</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Cosmos.Container</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseId" Type="System.String" />
        <Parameter Name="containerId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="databaseId">cosmos database name</param>
        <param name="containerId">cosmos container name</param>
        <summary>
            Get cosmos container proxy. 
            </summary>
        <returns>Cosmos container proxy</returns>
        <remarks>Proxy existence doesn't guarantee either database or container existence.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDatabase">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Cosmos.Database GetDatabase (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Cosmos.Database GetDatabase(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Cosmos.CosmosClient.GetDatabase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDatabase (id As String) As Database" />
      <MemberSignature Language="F#" Value="abstract member GetDatabase : string -&gt; Microsoft.Azure.Cosmos.Database&#xA;override this.GetDatabase : string -&gt; Microsoft.Azure.Cosmos.Database" Usage="cosmosClient.GetDatabase id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Cosmos.Client</AssemblyName>
        <AssemblyVersion>3.0.0.18</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Cosmos.Database</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">The cosmos database id</param>
        <summary>
            Returns a reference to a database object. 
            </summary>
        <returns>Cosmos database proxy</returns>
        <remarks>
            Note that the database must be explicitly created, if it does not already exist, before
            you can read from it or write to it.
            </remarks>
        <example>
          <code language="c#"><![CDATA[
            Database db = this.cosmosClient.GetDatabase("myDatabaseId"];
            DatabaseResponse response = await db.ReadAsync();
            ]]></code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="GetDatabaseIterator">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Azure.Cosmos.FeedIterator&lt;Microsoft.Azure.Cosmos.DatabaseProperties&gt; GetDatabaseIterator (Nullable&lt;int&gt; maxItemCount = null, string continuationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Cosmos.FeedIterator`1&lt;class Microsoft.Azure.Cosmos.DatabaseProperties&gt; GetDatabaseIterator(valuetype System.Nullable`1&lt;int32&gt; maxItemCount, string continuationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Cosmos.CosmosClient.GetDatabaseIterator(System.Nullable{System.Int32},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDatabaseIterator (Optional maxItemCount As Nullable(Of Integer) = null, Optional continuationToken As String = null) As FeedIterator(Of DatabaseProperties)" />
      <MemberSignature Language="F#" Value="abstract member GetDatabaseIterator : Nullable&lt;int&gt; * string -&gt; Microsoft.Azure.Cosmos.FeedIterator&lt;Microsoft.Azure.Cosmos.DatabaseProperties&gt;&#xA;override this.GetDatabaseIterator : Nullable&lt;int&gt; * string -&gt; Microsoft.Azure.Cosmos.FeedIterator&lt;Microsoft.Azure.Cosmos.DatabaseProperties&gt;" Usage="cosmosClient.GetDatabaseIterator (maxItemCount, continuationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Cosmos.Client</AssemblyName>
        <AssemblyVersion>3.0.0.18</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Cosmos.FeedIterator&lt;Microsoft.Azure.Cosmos.DatabaseProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxItemCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="continuationToken" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="maxItemCount">The max item count to return as part of the query</param>
        <param name="continuationToken">The continuation token in the Azure Cosmos DB service.</param>
        <summary>
            Gets an iterator to go through all the databases for the account
            </summary>
        <returns>An iterator to go through the databases.</returns>
        <remarks>To be added.</remarks>
        <example>
            Get an iterator for all the database under the cosmos account
            <code language="c#"><![CDATA[
            FeedIterator<DatabaseProperties> feedIterator = this.cosmosClient.GetDatabasesIterator();
            {
                foreach (DatabaseProperties databaseProperties in  await feedIterator.FetchNextSetAsync())
                {
                    Console.WriteLine(databaseProperties.Id); 
                }
            }
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="ReadAccountAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Cosmos.AccountProperties&gt; ReadAccountAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Cosmos.AccountProperties&gt; ReadAccountAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Cosmos.CosmosClient.ReadAccountAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadAccountAsync () As Task(Of AccountProperties)" />
      <MemberSignature Language="F#" Value="abstract member ReadAccountAsync : unit -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Cosmos.AccountProperties&gt;&#xA;override this.ReadAccountAsync : unit -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Cosmos.AccountProperties&gt;" Usage="cosmosClient.ReadAccountAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Cosmos.Client</AssemblyName>
        <AssemblyVersion>3.0.0.18</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Cosmos.AccountProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Read the <see cref="T:Microsoft.Azure.Cosmos.AccountProperties" /> from the Azure Cosmos DB service as an asynchronous operation.
            </summary>
        <returns>
            A <see cref="T:Microsoft.Azure.Cosmos.AccountProperties" /> wrapped in a <see cref="T:System.Threading.Tasks.Task" /> object.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>