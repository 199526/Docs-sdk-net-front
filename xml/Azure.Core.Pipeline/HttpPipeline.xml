<Type Name="HttpPipeline" FullName="Azure.Core.Pipeline.HttpPipeline">
  <TypeSignature Language="C#" Value="public class HttpPipeline" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpPipeline extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Core.Pipeline.HttpPipeline" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpPipeline" />
  <TypeSignature Language="F#" Value="type HttpPipeline = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents a primitive for sending HTTP requests and receiving responses extensible by adding <see cref="T:Azure.Core.Pipeline.HttpPipelinePolicy" /> processing steps.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpPipeline (Azure.Core.Pipeline.HttpPipelineTransport transport, Azure.Core.Pipeline.HttpPipelinePolicy[] policies = default, Azure.Core.Pipeline.ResponseClassifier responseClassifier = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Azure.Core.Pipeline.HttpPipelineTransport transport, class Azure.Core.Pipeline.HttpPipelinePolicy[] policies, class Azure.Core.Pipeline.ResponseClassifier responseClassifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Core.Pipeline.HttpPipeline.#ctor(Azure.Core.Pipeline.HttpPipelineTransport,Azure.Core.Pipeline.HttpPipelinePolicy[],Azure.Core.Pipeline.ResponseClassifier)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transport As HttpPipelineTransport, Optional policies As HttpPipelinePolicy() = null, Optional responseClassifier As ResponseClassifier = null)" />
      <MemberSignature Language="F#" Value="new Azure.Core.Pipeline.HttpPipeline : Azure.Core.Pipeline.HttpPipelineTransport * Azure.Core.Pipeline.HttpPipelinePolicy[] * Azure.Core.Pipeline.ResponseClassifier -&gt; Azure.Core.Pipeline.HttpPipeline" Usage="new Azure.Core.Pipeline.HttpPipeline (transport, policies, responseClassifier)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transport" Type="Azure.Core.Pipeline.HttpPipelineTransport" />
        <Parameter Name="policies" Type="Azure.Core.Pipeline.HttpPipelinePolicy[]" />
        <Parameter Name="responseClassifier" Type="Azure.Core.Pipeline.ResponseClassifier" />
      </Parameters>
      <Docs>
        <param name="transport">To be added.</param>
        <param name="policies">To be added.</param>
        <param name="responseClassifier">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRequest">
      <MemberSignature Language="C#" Value="public Azure.Core.Request CreateRequest ();" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Azure.Core.Request CreateRequest() cil managed" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="DocId" Value="M:Azure.Core.Pipeline.HttpPipeline.CreateRequest" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRequest () As Request" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="member this.CreateRequest : unit -&gt; Azure.Core.Request" Usage="httpPipeline.CreateRequest " FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Core</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Request</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Creates a new <see cref="T:Azure.Core.Request" /> instance.
            </summary>
        <returns>The request.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendRequest">
      <MemberSignature Language="C#" Value="public Azure.Response SendRequest (Azure.Request request, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Azure.Response SendRequest(class Azure.Request request, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Core.Pipeline.HttpPipeline.SendRequest(Azure.Request,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendRequest (request As Request, cancellationToken As CancellationToken) As Response" />
      <MemberSignature Language="F#" Value="member this.SendRequest : Azure.Request * System.Threading.CancellationToken -&gt; Azure.Response" Usage="httpPipeline.SendRequest (request, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Azure.Request" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendRequestAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Azure.Response&gt; SendRequestAsync (Azure.Request request, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; SendRequestAsync(class Azure.Request request, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Core.Pipeline.HttpPipeline.SendRequestAsync(Azure.Request,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendRequestAsync (request As Request, cancellationToken As CancellationToken) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="member this.SendRequestAsync : Azure.Request * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="httpPipeline.SendRequestAsync (request, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Azure.Request" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
