<Overview>
  <Assemblies>
    <Assembly Name="Microsoft.Azure.KeyVault" Version="3.0.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 b5 fc 90 e7 02 7f 67 87 1e 77 3a 8f de 89 38 c8 1d d4 02 ba 65 b9 20 1d 60 59 3e 96 c4 92 65 1e 88 9c c1 3f 14 15 eb b5 3f ac 11 31 ae 0b d3 33 c5 ee 60 21 67 2d 97 18 ea 31 a8 ae bd 0d a0 07 2f 25 d8 7d ba 6f c9 0f fd 59 8e d4 da 35 e4 4c 39 8c 45 43 07 e8 e3 3b 84 26 14 3d ae c9 f5 96 83 6f 97 c8 f7 47 50 e5 97 5c 64 e2 18 9f 45 de f4 6b 2a 2b 12 47 ad c3 65 2b f5 c3 08 05 5d a9 ]</AssemblyPublicKey>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCompany("Microsoft")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyConfiguration("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCopyright("Copyright (c) Microsoft Corporation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyDescription("Azure Key Vault enables users to store and use cryptographic keys within the Microsoft Azure environment. Azure Key Vault supports multiple key types and algorithms and enables the use of Hardware Security Modules (HSM) for high value customer keys. In addition, Azure Key Vault allows users to securely store secrets in a Key Vault; secrets are limited size octet objects and Azure Key Vault applies no specific semantics to these objects. A Key Vault may contain a mix of keys and secrets at the same time, and access control for the two types of object is independently controlled. Users, subject to appropriate authorization, may: 1) Manage cryptographic keys using Create, Import, Update, Delete and other operations 2) Manage secrets using Get, Set, Delete and other operations 3) Use cryptographic keys with Sign/Verify, WrapKey/UnwrapKey and Encrypt/Decrypt operations. Operations against Key Vaults are authenticated and authorized using Azure Active Directory.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyFileVersion("3.0.0.0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyProduct("Azure .NET SDK")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTitle("Microsoft Azure Key Vault")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTrademark("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Resources.NeutralResourcesLanguage("en")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.CompilationRelaxations(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Versioning.TargetFramework(".NETFramework,Version=v4.5.2", FrameworkDisplayName=".NET Framework 4.5.2")</AttributeName>
        </Attribute>
      </Attributes>
    </Assembly>
  </Assemblies>
  <Remarks>To be added.</Remarks>
  <Copyright>To be added.</Copyright>
  <Types>
    <Namespace Name="Microsoft.Azure.KeyVault">
      <Type Name="CertificateIdentifier" Kind="Class" />
      <Type Name="CertificateIssuerIdentifier" Kind="Class" />
      <Type Name="CertificateOperationIdentifier" Kind="Class" />
      <Type Name="DeletedCertificateIdentifier" Kind="Class" />
      <Type Name="DeletedKeyIdentifier" Kind="Class" />
      <Type Name="DeletedSecretIdentifier" Kind="Class" />
      <Type Name="HttpBearerChallenge" Kind="Class" />
      <Type Name="HttpBearerChallengeCache" Kind="Class" />
      <Type Name="IKeyVaultClient" Kind="Interface" />
      <Type Name="KeyIdentifier" Kind="Class" />
      <Type Name="KeyVaultClient" Kind="Class" />
      <Type Name="KeyVaultClient+AuthenticationCallback" Kind="Delegate" />
      <Type Name="KeyVaultClientExtensions" Kind="Class" />
      <Type Name="KeyVaultCredential" Kind="Class" />
      <Type Name="ObjectIdentifier" Kind="Class" />
      <Type Name="SasDefinitionIdentifier" Kind="Class" />
      <Type Name="SecretIdentifier" Kind="Class" />
      <Type Name="StorageAccountIdentifier" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Azure.KeyVault.Models">
      <Type Name="Action" Kind="Class" />
      <Type Name="ActionType" Kind="Enumeration" />
      <Type Name="AdministratorDetails" Kind="Class" />
      <Type Name="Attributes" Kind="Class" />
      <Type Name="BackupCertificateResult" Kind="Class" />
      <Type Name="BackupKeyResult" Kind="Class" />
      <Type Name="BackupSecretResult" Kind="Class" />
      <Type Name="BackupStorageResult" Kind="Class" />
      <Type Name="CertificateAttributes" Kind="Class" />
      <Type Name="CertificateBundle" Kind="Class" />
      <Type Name="CertificateContentType" Kind="Class" />
      <Type Name="CertificateCreateParameters" Kind="Class" />
      <Type Name="CertificateImportParameters" Kind="Class" />
      <Type Name="CertificateIssuerItem" Kind="Class" />
      <Type Name="CertificateIssuerSetParameters" Kind="Class" />
      <Type Name="CertificateIssuerUpdateParameters" Kind="Class" />
      <Type Name="CertificateItem" Kind="Class" />
      <Type Name="CertificateMergeParameters" Kind="Class" />
      <Type Name="CertificateOperation" Kind="Class" />
      <Type Name="CertificateOperationUpdateParameter" Kind="Class" />
      <Type Name="CertificatePolicy" Kind="Class" />
      <Type Name="CertificateRestoreParameters" Kind="Class" />
      <Type Name="CertificateUpdateParameters" Kind="Class" />
      <Type Name="Contact" Kind="Class" />
      <Type Name="Contacts" Kind="Class" />
      <Type Name="DeletedCertificateBundle" Kind="Class" />
      <Type Name="DeletedCertificateItem" Kind="Class" />
      <Type Name="DeletedKeyBundle" Kind="Class" />
      <Type Name="DeletedKeyItem" Kind="Class" />
      <Type Name="DeletedSasDefinitionBundle" Kind="Class" />
      <Type Name="DeletedSasDefinitionItem" Kind="Class" />
      <Type Name="DeletedSecretBundle" Kind="Class" />
      <Type Name="DeletedSecretItem" Kind="Class" />
      <Type Name="DeletedStorageAccountItem" Kind="Class" />
      <Type Name="DeletedStorageBundle" Kind="Class" />
      <Type Name="DeletionRecoveryLevel" Kind="Class" />
      <Type Name="Error" Kind="Class" />
      <Type Name="IssuerAttributes" Kind="Class" />
      <Type Name="IssuerBundle" Kind="Class" />
      <Type Name="IssuerCredentials" Kind="Class" />
      <Type Name="IssuerParameters" Kind="Class" />
      <Type Name="KeyAttributes" Kind="Class" />
      <Type Name="KeyBundle" Kind="Class" />
      <Type Name="KeyCreateParameters" Kind="Class" />
      <Type Name="KeyImportParameters" Kind="Class" />
      <Type Name="KeyItem" Kind="Class" />
      <Type Name="KeyOperationResult" Kind="Class" />
      <Type Name="KeyOperationsParameters" Kind="Class" />
      <Type Name="KeyProperties" Kind="Class" />
      <Type Name="KeyRestoreParameters" Kind="Class" />
      <Type Name="KeySignParameters" Kind="Class" />
      <Type Name="KeyUpdateParameters" Kind="Class" />
      <Type Name="KeyUsageType" Kind="Class" />
      <Type Name="KeyVaultError" Kind="Class" />
      <Type Name="KeyVaultErrorException" Kind="Class" />
      <Type Name="KeyVerifyParameters" Kind="Class" />
      <Type Name="KeyVerifyResult" Kind="Class" />
      <Type Name="LifetimeAction" Kind="Class" />
      <Type Name="NewKeyParameters" Kind="Class" />
      <Type Name="OrganizationDetails" Kind="Class" />
      <Type Name="Page`1" DisplayName="Page&lt;T&gt;" Kind="Class" />
      <Type Name="PendingCertificateSigningRequestResult" Kind="Class" />
      <Type Name="SasDefinitionAttributes" Kind="Class" />
      <Type Name="SasDefinitionBundle" Kind="Class" />
      <Type Name="SasDefinitionCreateParameters" Kind="Class" />
      <Type Name="SasDefinitionItem" Kind="Class" />
      <Type Name="SasDefinitionUpdateParameters" Kind="Class" />
      <Type Name="SasTokenType" Kind="Class" />
      <Type Name="SecretAttributes" Kind="Class" />
      <Type Name="SecretBundle" Kind="Class" />
      <Type Name="SecretItem" Kind="Class" />
      <Type Name="SecretProperties" Kind="Class" />
      <Type Name="SecretRestoreParameters" Kind="Class" />
      <Type Name="SecretSetParameters" Kind="Class" />
      <Type Name="SecretUpdateParameters" Kind="Class" />
      <Type Name="StorageAccountAttributes" Kind="Class" />
      <Type Name="StorageAccountCreateParameters" Kind="Class" />
      <Type Name="StorageAccountItem" Kind="Class" />
      <Type Name="StorageAccountRegenerteKeyParameters" Kind="Class" />
      <Type Name="StorageAccountUpdateParameters" Kind="Class" />
      <Type Name="StorageBundle" Kind="Class" />
      <Type Name="StorageRestoreParameters" Kind="Class" />
      <Type Name="SubjectAlternativeNames" Kind="Class" />
      <Type Name="Trigger" Kind="Class" />
      <Type Name="X509CertificateProperties" Kind="Class" />
    </Namespace>
  </Types>
  <Title>Microsoft.Azure.KeyVault</Title>
  <ExtensionMethods>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="BackupCertificateAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.BackupCertificateResult&gt; BackupCertificateAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string certificateName, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.BackupCertificateResult&gt; BackupCertificateAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string certificateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.BackupCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member BackupCertificateAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.BackupCertificateResult&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.BackupCertificateAsync (operations, vaultBaseUrl, certificateName, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.BackupCertificateResult&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="certificateName" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="certificateName">
            The name of the certificate.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Backs up the specified certificate.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.BackupCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="BackupKeyAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.BackupKeyResult&gt; BackupKeyAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string keyName, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.BackupKeyResult&gt; BackupKeyAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string keyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.BackupKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member BackupKeyAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.BackupKeyResult&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.BackupKeyAsync (operations, vaultBaseUrl, keyName, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.BackupKeyResult&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="keyName" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="keyName">
            The name of the key.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Requests that a backup of the specified key be downloaded to the client.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.BackupKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="BackupSecretAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.BackupSecretResult&gt; BackupSecretAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string secretName, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.BackupSecretResult&gt; BackupSecretAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string secretName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.BackupSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member BackupSecretAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.BackupSecretResult&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.BackupSecretAsync (operations, vaultBaseUrl, secretName, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.BackupSecretResult&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="secretName" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="secretName">
            The name of the secret.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Backs up the specified secret.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.BackupSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="BackupStorageAccountAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.BackupStorageResult&gt; BackupStorageAccountAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string storageAccountName, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.BackupStorageResult&gt; BackupStorageAccountAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string storageAccountName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.BackupStorageAccountAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member BackupStorageAccountAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.BackupStorageResult&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.BackupStorageAccountAsync (operations, vaultBaseUrl, storageAccountName, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.BackupStorageResult&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="storageAccountName" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="storageAccountName">
            The name of the storage account.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Backs up the specified storage account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.BackupStorageAccountAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="CreateCertificateAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificateOperation&gt; CreateCertificateAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string certificateName, Microsoft.Azure.KeyVault.Models.CertificatePolicy certificatePolicy = null, Microsoft.Azure.KeyVault.Models.CertificateAttributes certificateAttributes = null, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.CertificateOperation&gt; CreateCertificateAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string certificateName, class Microsoft.Azure.KeyVault.Models.CertificatePolicy certificatePolicy, class Microsoft.Azure.KeyVault.Models.CertificateAttributes certificateAttributes, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.CreateCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member CreateCertificateAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * Microsoft.Azure.KeyVault.Models.CertificatePolicy * Microsoft.Azure.KeyVault.Models.CertificateAttributes * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificateOperation&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.CreateCertificateAsync (operations, vaultBaseUrl, certificateName, certificatePolicy, certificateAttributes, tags, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificateOperation&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="certificateName" Type="System.String" />
          <Parameter Name="certificatePolicy" Type="Microsoft.Azure.KeyVault.Models.CertificatePolicy" />
          <Parameter Name="certificateAttributes" Type="Microsoft.Azure.KeyVault.Models.CertificateAttributes" />
          <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="certificateName">
            The name of the certificate.
            </param>
          <param name="certificatePolicy">
            The management policy for the certificate.
            </param>
          <param name="certificateAttributes">
            The attributes of the certificate (optional).
            </param>
          <param name="tags">
            Application specific metadata in the form of key-value pairs.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Creates a new certificate.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.CreateCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="CreateKeyAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyBundle&gt; CreateKeyAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string keyName, Microsoft.Azure.KeyVault.Models.NewKeyParameters parameters, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.KeyBundle&gt; CreateKeyAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string keyName, class Microsoft.Azure.KeyVault.Models.NewKeyParameters parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.CreateKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,Microsoft.Azure.KeyVault.Models.NewKeyParameters,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member CreateKeyAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * Microsoft.Azure.KeyVault.Models.NewKeyParameters * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.CreateKeyAsync (operations, vaultBaseUrl, keyName, parameters, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="keyName" Type="System.String" />
          <Parameter Name="parameters" Type="Microsoft.Azure.KeyVault.Models.NewKeyParameters" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">To be added.</param>
          <param name="vaultBaseUrl">To be added.</param>
          <param name="keyName">To be added.</param>
          <param name="parameters">To be added.</param>
          <param name="cancellationToken">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.CreateKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,Microsoft.Azure.KeyVault.Models.NewKeyParameters,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="CreateKeyAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyBundle&gt; CreateKeyAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string keyName, string kty, Nullable&lt;int&gt; keySize = null, System.Collections.Generic.IList&lt;string&gt; keyOps = null, Microsoft.Azure.KeyVault.Models.KeyAttributes keyAttributes = null, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = null, string curve = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.KeyBundle&gt; CreateKeyAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string keyName, string kty, valuetype System.Nullable`1&lt;int32&gt; keySize, class System.Collections.Generic.IList`1&lt;string&gt; keyOps, class Microsoft.Azure.KeyVault.Models.KeyAttributes keyAttributes, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, string curve, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.CreateKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.IList{System.String},Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member CreateKeyAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * string * Nullable&lt;int&gt; * System.Collections.Generic.IList&lt;string&gt; * Microsoft.Azure.KeyVault.Models.KeyAttributes * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.CreateKeyAsync (operations, vaultBaseUrl, keyName, kty, keySize, keyOps, keyAttributes, tags, curve, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="keyName" Type="System.String" />
          <Parameter Name="kty" Type="System.String" />
          <Parameter Name="keySize" Type="System.Nullable&lt;System.Int32&gt;" />
          <Parameter Name="keyOps" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
          <Parameter Name="keyAttributes" Type="Microsoft.Azure.KeyVault.Models.KeyAttributes" />
          <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
          <Parameter Name="curve" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="keyName">
            The name for the new key. The system will generate the version name for the
            new key.
            </param>
          <param name="kty">
            The type of key to create. For valid values, see JsonWebKeyType. Possible
            values include: 'EC', 'EC-HSM', 'RSA', 'RSA-HSM', 'oct'
            </param>
          <param name="keySize">
            The key size in bytes. For example, 1024 or 2048.
            </param>
          <param name="keyOps" />
          <param name="keyAttributes" />
          <param name="tags">
            Application specific metadata in the form of key-value pairs.
            </param>
          <param name="curve">
            Elliptic curve name. For valid values, see JsonWebKeyCurveName. Possible
            values include: 'P-256', 'P-384', 'P-521', 'SECP256K1'
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Creates a new key, stores it, then returns key parameters and attributes to
            the client.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.CreateKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.IList{System.String},Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="DecryptAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyOperationResult&gt; DecryptAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string keyIdentifier, string algorithm, byte[] cipherText, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.KeyOperationResult&gt; DecryptAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string keyIdentifier, string algorithm, unsigned int8[] cipherText, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Byte[],System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member DecryptAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyOperationResult&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptAsync (operations, keyIdentifier, algorithm, cipherText, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyOperationResult&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="keyIdentifier" Type="System.String" />
          <Parameter Name="algorithm" Type="System.String" />
          <Parameter Name="cipherText" Type="System.Byte[]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">To be added.</param>
          <param name="keyIdentifier">The full key identifier</param>
          <param name="algorithm">The algorithm. For more information on possible algorithm types, see JsonWebKeyEncryptionAlgorithm.</param>
          <param name="cipherText">The cipher text</param>
          <param name="cancellationToken">Optional cancellation token</param>
          <summary>
            Decrypts a single block of encrypted data
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Byte[],System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="DecryptAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyOperationResult&gt; DecryptAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string keyName, string keyVersion, string algorithm, byte[] value, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.KeyOperationResult&gt; DecryptAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string keyName, string keyVersion, string algorithm, unsigned int8[] value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Byte[],System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member DecryptAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * string * string * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyOperationResult&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptAsync (operations, vaultBaseUrl, keyName, keyVersion, algorithm, value, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyOperationResult&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="keyName" Type="System.String" />
          <Parameter Name="keyVersion" Type="System.String" />
          <Parameter Name="algorithm" Type="System.String" />
          <Parameter Name="value" Type="System.Byte[]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="keyName">
            The name of the key.
            </param>
          <param name="keyVersion">
            The version of the key.
            </param>
          <param name="algorithm">
            algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256',
            'RSA1_5'
            </param>
          <param name="value" />
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Decrypts a single block of encrypted data.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Byte[],System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="DeleteCertificateAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.DeletedCertificateBundle&gt; DeleteCertificateAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string certificateName, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.DeletedCertificateBundle&gt; DeleteCertificateAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string certificateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member DeleteCertificateAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.DeletedCertificateBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateAsync (operations, vaultBaseUrl, certificateName, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.DeletedCertificateBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="certificateName" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="certificateName">
            The name of the certificate.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Deletes a certificate from a specified key vault.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="DeleteCertificateContactsAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.Contacts&gt; DeleteCertificateContactsAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.Contacts&gt; DeleteCertificateContactsAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateContactsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member DeleteCertificateContactsAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.Contacts&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateContactsAsync (operations, vaultBaseUrl, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.Contacts&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Deletes the certificate contacts for a specified key vault.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateContactsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="DeleteCertificateIssuerAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.IssuerBundle&gt; DeleteCertificateIssuerAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string issuerName, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.IssuerBundle&gt; DeleteCertificateIssuerAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string issuerName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateIssuerAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member DeleteCertificateIssuerAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.IssuerBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateIssuerAsync (operations, vaultBaseUrl, issuerName, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.IssuerBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="issuerName" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="issuerName">
            The name of the issuer.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Deletes the specified certificate issuer.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateIssuerAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="DeleteCertificateOperationAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificateOperation&gt; DeleteCertificateOperationAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string certificateName, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.CertificateOperation&gt; DeleteCertificateOperationAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string certificateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateOperationAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member DeleteCertificateOperationAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificateOperation&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateOperationAsync (operations, vaultBaseUrl, certificateName, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificateOperation&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="certificateName" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="certificateName">
            The name of the certificate.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Deletes the creation operation for a specific certificate.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateOperationAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="DeleteKeyAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.DeletedKeyBundle&gt; DeleteKeyAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string keyName, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.DeletedKeyBundle&gt; DeleteKeyAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string keyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member DeleteKeyAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.DeletedKeyBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteKeyAsync (operations, vaultBaseUrl, keyName, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.DeletedKeyBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="keyName" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="keyName">
            The name of the key to delete.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Deletes a key of any type from storage in Azure Key Vault.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="DeleteSasDefinitionAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.DeletedSasDefinitionBundle&gt; DeleteSasDefinitionAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string storageAccountName, string sasDefinitionName, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.DeletedSasDefinitionBundle&gt; DeleteSasDefinitionAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string storageAccountName, string sasDefinitionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteSasDefinitionAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member DeleteSasDefinitionAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.DeletedSasDefinitionBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteSasDefinitionAsync (operations, vaultBaseUrl, storageAccountName, sasDefinitionName, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.DeletedSasDefinitionBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="storageAccountName" Type="System.String" />
          <Parameter Name="sasDefinitionName" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="storageAccountName">
            The name of the storage account.
            </param>
          <param name="sasDefinitionName">
            The name of the SAS definition.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Deletes a SAS definition from a specified storage account. This operation
            requires the storage/deletesas permission.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteSasDefinitionAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="DeleteSecretAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.DeletedSecretBundle&gt; DeleteSecretAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string secretName, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.DeletedSecretBundle&gt; DeleteSecretAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string secretName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member DeleteSecretAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.DeletedSecretBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteSecretAsync (operations, vaultBaseUrl, secretName, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.DeletedSecretBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="secretName" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="secretName">
            The name of the secret.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Deletes a secret from a specified key vault.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="DeleteStorageAccountAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.DeletedStorageBundle&gt; DeleteStorageAccountAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string storageAccountName, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.DeletedStorageBundle&gt; DeleteStorageAccountAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string storageAccountName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteStorageAccountAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member DeleteStorageAccountAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.DeletedStorageBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteStorageAccountAsync (operations, vaultBaseUrl, storageAccountName, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.DeletedStorageBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="storageAccountName" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="storageAccountName">
            The name of the storage account.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Deletes a storage account. This operation requires the storage/delete
            permission.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteStorageAccountAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="EncryptAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyOperationResult&gt; EncryptAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string keyIdentifier, string algorithm, byte[] plainText, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.KeyOperationResult&gt; EncryptAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string keyIdentifier, string algorithm, unsigned int8[] plainText, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Byte[],System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member EncryptAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyOperationResult&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptAsync (operations, keyIdentifier, algorithm, plainText, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyOperationResult&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="keyIdentifier" Type="System.String" />
          <Parameter Name="algorithm" Type="System.String" />
          <Parameter Name="plainText" Type="System.Byte[]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">To be added.</param>
          <param name="keyIdentifier">The full key identifier</param>
          <param name="algorithm">The algorithm. For more information on possible algorithm types, see JsonWebKeyEncryptionAlgorithm.</param>
          <param name="plainText">The plain text</param>
          <param name="cancellationToken">Optional cancellation token</param>
          <summary>
            Encrypts a single block of data. The amount of data that may be encrypted is determined
            by the target key type and the encryption algorithm.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Byte[],System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="EncryptAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyOperationResult&gt; EncryptAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string keyName, string keyVersion, string algorithm, byte[] value, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.KeyOperationResult&gt; EncryptAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string keyName, string keyVersion, string algorithm, unsigned int8[] value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Byte[],System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member EncryptAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * string * string * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyOperationResult&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptAsync (operations, vaultBaseUrl, keyName, keyVersion, algorithm, value, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyOperationResult&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="keyName" Type="System.String" />
          <Parameter Name="keyVersion" Type="System.String" />
          <Parameter Name="algorithm" Type="System.String" />
          <Parameter Name="value" Type="System.Byte[]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="keyName">
            The name of the key.
            </param>
          <param name="keyVersion">
            The version of the key.
            </param>
          <param name="algorithm">
            algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256',
            'RSA1_5'
            </param>
          <param name="value" />
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Encrypts an arbitrary sequence of bytes using an encryption key that is
            stored in a key vault.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Byte[],System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="GetCertificateAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificateBundle&gt; GetCertificateAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string certificateName, string certificateVersion, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.CertificateBundle&gt; GetCertificateAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string certificateName, string certificateVersion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetCertificateAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificateBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateAsync (operations, vaultBaseUrl, certificateName, certificateVersion, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificateBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="certificateName" Type="System.String" />
          <Parameter Name="certificateVersion" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="certificateName">
            The name of the certificate in the given vault.
            </param>
          <param name="certificateVersion">
            The version of the certificate.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Gets information about a certificate.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="GetCertificateAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificateBundle&gt; GetCertificateAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string certificateName, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.CertificateBundle&gt; GetCertificateAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string certificateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetCertificateAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificateBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateAsync (operations, vaultBaseUrl, certificateName, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificateBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="certificateName" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">To be added.</param>
          <param name="vaultBaseUrl">The URL for the vault containing the certificate.</param>
          <param name="certificateName">The name of the certificate in the given vault.</param>
          <param name="cancellationToken">Optional cancellation token</param>
          <summary>
            Gets a certificate.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="GetCertificateAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificateBundle&gt; GetCertificateAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string certificateIdentifier, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.CertificateBundle&gt; GetCertificateAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string certificateIdentifier, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetCertificateAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificateBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateAsync (operations, certificateIdentifier, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificateBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="certificateIdentifier" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">To be added.</param>
          <param name="certificateIdentifier">The URL for the certificate.</param>
          <param name="cancellationToken">Optional cancellation token</param>
          <summary>
            Gets a certificate.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="GetCertificateContactsAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.Contacts&gt; GetCertificateContactsAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.Contacts&gt; GetCertificateContactsAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateContactsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetCertificateContactsAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.Contacts&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateContactsAsync (operations, vaultBaseUrl, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.Contacts&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Lists the certificate contacts for a specified key vault.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateContactsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="GetCertificateIssuerAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.IssuerBundle&gt; GetCertificateIssuerAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string issuerName, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.IssuerBundle&gt; GetCertificateIssuerAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string issuerName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateIssuerAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetCertificateIssuerAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.IssuerBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateIssuerAsync (operations, vaultBaseUrl, issuerName, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.IssuerBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="issuerName" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="issuerName">
            The name of the issuer.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Lists the specified certificate issuer.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateIssuerAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="GetCertificateIssuersAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.CertificateIssuerItem&gt;&gt; GetCertificateIssuersAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, Nullable&lt;int&gt; maxresults = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.KeyVault.Models.CertificateIssuerItem&gt;&gt; GetCertificateIssuersAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, valuetype System.Nullable`1&lt;int32&gt; maxresults, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateIssuersAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetCertificateIssuersAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.CertificateIssuerItem&gt;&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateIssuersAsync (operations, vaultBaseUrl, maxresults, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.CertificateIssuerItem&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="maxresults" Type="System.Nullable&lt;System.Int32&gt;" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="maxresults">
            Maximum number of results to return in a page. If not specified the service
            will return up to 25 results.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            List certificate issuers for a specified key vault.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateIssuersAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="GetCertificateIssuersNextAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.CertificateIssuerItem&gt;&gt; GetCertificateIssuersNextAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.KeyVault.Models.CertificateIssuerItem&gt;&gt; GetCertificateIssuersNextAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string nextPageLink, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateIssuersNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetCertificateIssuersNextAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.CertificateIssuerItem&gt;&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateIssuersNextAsync (operations, nextPageLink, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.CertificateIssuerItem&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="nextPageLink" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            List certificate issuers for a specified key vault.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateIssuersNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="GetCertificateOperationAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificateOperation&gt; GetCertificateOperationAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string certificateName, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.CertificateOperation&gt; GetCertificateOperationAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string certificateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateOperationAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetCertificateOperationAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificateOperation&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateOperationAsync (operations, vaultBaseUrl, certificateName, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificateOperation&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="certificateName" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="certificateName">
            The name of the certificate.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Gets the creation operation of a certificate.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateOperationAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="GetCertificatePolicyAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificatePolicy&gt; GetCertificatePolicyAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string certificateName, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.CertificatePolicy&gt; GetCertificatePolicyAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string certificateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificatePolicyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetCertificatePolicyAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificatePolicy&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificatePolicyAsync (operations, vaultBaseUrl, certificateName, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificatePolicy&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="certificateName" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="certificateName">
            The name of the certificate in a given key vault.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Lists the policy for a certificate.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificatePolicyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="GetCertificatesAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.CertificateItem&gt;&gt; GetCertificatesAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, Nullable&lt;int&gt; maxresults = null, Nullable&lt;bool&gt; includePending = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.KeyVault.Models.CertificateItem&gt;&gt; GetCertificatesAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, valuetype System.Nullable`1&lt;int32&gt; maxresults, valuetype System.Nullable`1&lt;bool&gt; includePending, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificatesAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetCertificatesAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.CertificateItem&gt;&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificatesAsync (operations, vaultBaseUrl, maxresults, includePending, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.CertificateItem&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="maxresults" Type="System.Nullable&lt;System.Int32&gt;" />
          <Parameter Name="includePending" Type="System.Nullable&lt;System.Boolean&gt;" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="maxresults">
            Maximum number of results to return in a page. If not specified the service
            will return up to 25 results.
            </param>
          <param name="includePending">
            Specifies whether to include certificates which are not completely
            provisioned.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            List certificates in a specified key vault
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificatesAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="GetCertificatesNextAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.CertificateItem&gt;&gt; GetCertificatesNextAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.KeyVault.Models.CertificateItem&gt;&gt; GetCertificatesNextAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string nextPageLink, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificatesNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetCertificatesNextAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.CertificateItem&gt;&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificatesNextAsync (operations, nextPageLink, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.CertificateItem&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="nextPageLink" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            List certificates in a specified key vault
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificatesNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="GetCertificateVersionsAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.CertificateItem&gt;&gt; GetCertificateVersionsAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string certificateName, Nullable&lt;int&gt; maxresults = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.KeyVault.Models.CertificateItem&gt;&gt; GetCertificateVersionsAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string certificateName, valuetype System.Nullable`1&lt;int32&gt; maxresults, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateVersionsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetCertificateVersionsAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.CertificateItem&gt;&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateVersionsAsync (operations, vaultBaseUrl, certificateName, maxresults, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.CertificateItem&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="certificateName" Type="System.String" />
          <Parameter Name="maxresults" Type="System.Nullable&lt;System.Int32&gt;" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="certificateName">
            The name of the certificate.
            </param>
          <param name="maxresults">
            Maximum number of results to return in a page. If not specified the service
            will return up to 25 results.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            List the versions of a certificate.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateVersionsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="GetCertificateVersionsNextAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.CertificateItem&gt;&gt; GetCertificateVersionsNextAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.KeyVault.Models.CertificateItem&gt;&gt; GetCertificateVersionsNextAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string nextPageLink, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateVersionsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetCertificateVersionsNextAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.CertificateItem&gt;&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateVersionsNextAsync (operations, nextPageLink, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.CertificateItem&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="nextPageLink" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            List the versions of a certificate.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateVersionsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="GetDeletedCertificateAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.DeletedCertificateBundle&gt; GetDeletedCertificateAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string certificateName, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.DeletedCertificateBundle&gt; GetDeletedCertificateAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string certificateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetDeletedCertificateAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.DeletedCertificateBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedCertificateAsync (operations, vaultBaseUrl, certificateName, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.DeletedCertificateBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="certificateName" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="certificateName">
            The name of the certificate
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Retrieves information about the specified deleted certificate.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="GetDeletedCertificatesAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.DeletedCertificateItem&gt;&gt; GetDeletedCertificatesAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, Nullable&lt;int&gt; maxresults = null, Nullable&lt;bool&gt; includePending = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.KeyVault.Models.DeletedCertificateItem&gt;&gt; GetDeletedCertificatesAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, valuetype System.Nullable`1&lt;int32&gt; maxresults, valuetype System.Nullable`1&lt;bool&gt; includePending, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedCertificatesAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetDeletedCertificatesAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.DeletedCertificateItem&gt;&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedCertificatesAsync (operations, vaultBaseUrl, maxresults, includePending, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.DeletedCertificateItem&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="maxresults" Type="System.Nullable&lt;System.Int32&gt;" />
          <Parameter Name="includePending" Type="System.Nullable&lt;System.Boolean&gt;" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="maxresults">
            Maximum number of results to return in a page. If not specified the service
            will return up to 25 results.
            </param>
          <param name="includePending">
            Specifies whether to include certificates which are not completely
            provisioned.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Lists the deleted certificates in the specified vault currently available
            for recovery.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedCertificatesAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="GetDeletedCertificatesNextAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.DeletedCertificateItem&gt;&gt; GetDeletedCertificatesNextAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.KeyVault.Models.DeletedCertificateItem&gt;&gt; GetDeletedCertificatesNextAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string nextPageLink, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedCertificatesNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetDeletedCertificatesNextAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.DeletedCertificateItem&gt;&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedCertificatesNextAsync (operations, nextPageLink, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.DeletedCertificateItem&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="nextPageLink" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Lists the deleted certificates in the specified vault currently available
            for recovery.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedCertificatesNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="GetDeletedKeyAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.DeletedKeyBundle&gt; GetDeletedKeyAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string keyName, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.DeletedKeyBundle&gt; GetDeletedKeyAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string keyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetDeletedKeyAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.DeletedKeyBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedKeyAsync (operations, vaultBaseUrl, keyName, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.DeletedKeyBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="keyName" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="keyName">
            The name of the key.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Gets the public part of a deleted key.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="GetDeletedKeysAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.DeletedKeyItem&gt;&gt; GetDeletedKeysAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, Nullable&lt;int&gt; maxresults = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.KeyVault.Models.DeletedKeyItem&gt;&gt; GetDeletedKeysAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, valuetype System.Nullable`1&lt;int32&gt; maxresults, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedKeysAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetDeletedKeysAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.DeletedKeyItem&gt;&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedKeysAsync (operations, vaultBaseUrl, maxresults, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.DeletedKeyItem&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="maxresults" Type="System.Nullable&lt;System.Int32&gt;" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="maxresults">
            Maximum number of results to return in a page. If not specified the service
            will return up to 25 results.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Lists the deleted keys in the specified vault.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedKeysAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="GetDeletedKeysNextAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.DeletedKeyItem&gt;&gt; GetDeletedKeysNextAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.KeyVault.Models.DeletedKeyItem&gt;&gt; GetDeletedKeysNextAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string nextPageLink, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedKeysNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetDeletedKeysNextAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.DeletedKeyItem&gt;&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedKeysNextAsync (operations, nextPageLink, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.DeletedKeyItem&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="nextPageLink" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Lists the deleted keys in the specified vault.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedKeysNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="GetDeletedSasDefinitionAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.DeletedSasDefinitionBundle&gt; GetDeletedSasDefinitionAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string storageAccountName, string sasDefinitionName, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.DeletedSasDefinitionBundle&gt; GetDeletedSasDefinitionAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string storageAccountName, string sasDefinitionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedSasDefinitionAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetDeletedSasDefinitionAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.DeletedSasDefinitionBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedSasDefinitionAsync (operations, vaultBaseUrl, storageAccountName, sasDefinitionName, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.DeletedSasDefinitionBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="storageAccountName" Type="System.String" />
          <Parameter Name="sasDefinitionName" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="storageAccountName">
            The name of the storage account.
            </param>
          <param name="sasDefinitionName">
            The name of the SAS definition.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Gets the specified deleted sas definition.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedSasDefinitionAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="GetDeletedSasDefinitionsAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.DeletedSasDefinitionItem&gt;&gt; GetDeletedSasDefinitionsAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string storageAccountName, Nullable&lt;int&gt; maxresults = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.KeyVault.Models.DeletedSasDefinitionItem&gt;&gt; GetDeletedSasDefinitionsAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string storageAccountName, valuetype System.Nullable`1&lt;int32&gt; maxresults, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedSasDefinitionsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetDeletedSasDefinitionsAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.DeletedSasDefinitionItem&gt;&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedSasDefinitionsAsync (operations, vaultBaseUrl, storageAccountName, maxresults, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.DeletedSasDefinitionItem&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="storageAccountName" Type="System.String" />
          <Parameter Name="maxresults" Type="System.Nullable&lt;System.Int32&gt;" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="storageAccountName">
            The name of the storage account.
            </param>
          <param name="maxresults">
            Maximum number of results to return in a page. If not specified the service
            will return up to 25 results.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Lists deleted SAS definitions for the specified vault and storage account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedSasDefinitionsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="GetDeletedSasDefinitionsNextAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.DeletedSasDefinitionItem&gt;&gt; GetDeletedSasDefinitionsNextAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.KeyVault.Models.DeletedSasDefinitionItem&gt;&gt; GetDeletedSasDefinitionsNextAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string nextPageLink, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedSasDefinitionsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetDeletedSasDefinitionsNextAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.DeletedSasDefinitionItem&gt;&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedSasDefinitionsNextAsync (operations, nextPageLink, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.DeletedSasDefinitionItem&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="nextPageLink" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Lists deleted SAS definitions for the specified vault and storage account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedSasDefinitionsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="GetDeletedSecretAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.DeletedSecretBundle&gt; GetDeletedSecretAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string secretName, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.DeletedSecretBundle&gt; GetDeletedSecretAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string secretName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetDeletedSecretAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.DeletedSecretBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedSecretAsync (operations, vaultBaseUrl, secretName, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.DeletedSecretBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="secretName" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="secretName">
            The name of the secret.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Gets the specified deleted secret.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="GetDeletedSecretsAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.DeletedSecretItem&gt;&gt; GetDeletedSecretsAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, Nullable&lt;int&gt; maxresults = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.KeyVault.Models.DeletedSecretItem&gt;&gt; GetDeletedSecretsAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, valuetype System.Nullable`1&lt;int32&gt; maxresults, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedSecretsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetDeletedSecretsAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.DeletedSecretItem&gt;&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedSecretsAsync (operations, vaultBaseUrl, maxresults, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.DeletedSecretItem&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="maxresults" Type="System.Nullable&lt;System.Int32&gt;" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="maxresults">
            Maximum number of results to return in a page. If not specified the service
            will return up to 25 results.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Lists deleted secrets for the specified vault.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedSecretsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="GetDeletedSecretsNextAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.DeletedSecretItem&gt;&gt; GetDeletedSecretsNextAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.KeyVault.Models.DeletedSecretItem&gt;&gt; GetDeletedSecretsNextAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string nextPageLink, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedSecretsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetDeletedSecretsNextAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.DeletedSecretItem&gt;&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedSecretsNextAsync (operations, nextPageLink, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.DeletedSecretItem&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="nextPageLink" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Lists deleted secrets for the specified vault.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedSecretsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="GetDeletedStorageAccountAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.DeletedStorageBundle&gt; GetDeletedStorageAccountAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string storageAccountName, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.DeletedStorageBundle&gt; GetDeletedStorageAccountAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string storageAccountName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedStorageAccountAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetDeletedStorageAccountAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.DeletedStorageBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedStorageAccountAsync (operations, vaultBaseUrl, storageAccountName, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.DeletedStorageBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="storageAccountName" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="storageAccountName">
            The name of the storage account.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Gets the specified deleted storage account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedStorageAccountAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="GetDeletedStorageAccountsAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.DeletedStorageAccountItem&gt;&gt; GetDeletedStorageAccountsAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, Nullable&lt;int&gt; maxresults = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.KeyVault.Models.DeletedStorageAccountItem&gt;&gt; GetDeletedStorageAccountsAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, valuetype System.Nullable`1&lt;int32&gt; maxresults, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedStorageAccountsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetDeletedStorageAccountsAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.DeletedStorageAccountItem&gt;&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedStorageAccountsAsync (operations, vaultBaseUrl, maxresults, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.DeletedStorageAccountItem&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="maxresults" Type="System.Nullable&lt;System.Int32&gt;" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="maxresults">
            Maximum number of results to return in a page. If not specified the service
            will return up to 25 results.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Lists deleted storage accounts for the specified vault.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedStorageAccountsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="GetDeletedStorageAccountsNextAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.DeletedStorageAccountItem&gt;&gt; GetDeletedStorageAccountsNextAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.KeyVault.Models.DeletedStorageAccountItem&gt;&gt; GetDeletedStorageAccountsNextAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string nextPageLink, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedStorageAccountsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetDeletedStorageAccountsNextAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.DeletedStorageAccountItem&gt;&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedStorageAccountsNextAsync (operations, nextPageLink, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.DeletedStorageAccountItem&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="nextPageLink" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Lists deleted storage accounts for the specified vault.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetDeletedStorageAccountsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="GetKeyAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyBundle&gt; GetKeyAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string keyName, string keyVersion, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.KeyBundle&gt; GetKeyAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string keyName, string keyVersion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetKeyAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyAsync (operations, vaultBaseUrl, keyName, keyVersion, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="keyName" Type="System.String" />
          <Parameter Name="keyVersion" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="keyName">
            The name of the key to get.
            </param>
          <param name="keyVersion">
            Adding the version parameter retrieves a specific version of a key.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Gets the public part of a stored key.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="GetKeyAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyBundle&gt; GetKeyAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string keyName, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.KeyBundle&gt; GetKeyAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string keyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetKeyAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyAsync (operations, vaultBaseUrl, keyName, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="keyName" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">To be added.</param>
          <param name="vaultBaseUrl">The vault name, e.g. https://myvault.vault.azure.net</param>
          <param name="keyName">The key name</param>
          <param name="cancellationToken">Optional cancellation token</param>
          <summary>
            Retrieves the public portion of a key plus its attributes
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="GetKeyAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyBundle&gt; GetKeyAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string keyIdentifier, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.KeyBundle&gt; GetKeyAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string keyIdentifier, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetKeyAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyAsync (operations, keyIdentifier, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="keyIdentifier" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">To be added.</param>
          <param name="keyIdentifier">The key identifier</param>
          <param name="cancellationToken">Optional cancellation token</param>
          <summary>
            Retrieves the public portion of a key plus its attributes
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="GetKeysAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.KeyItem&gt;&gt; GetKeysAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, Nullable&lt;int&gt; maxresults = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.KeyVault.Models.KeyItem&gt;&gt; GetKeysAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, valuetype System.Nullable`1&lt;int32&gt; maxresults, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeysAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetKeysAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.KeyItem&gt;&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeysAsync (operations, vaultBaseUrl, maxresults, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.KeyItem&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="maxresults" Type="System.Nullable&lt;System.Int32&gt;" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="maxresults">
            Maximum number of results to return in a page. If not specified the service
            will return up to 25 results.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            List keys in the specified vault.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeysAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="GetKeysNextAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.KeyItem&gt;&gt; GetKeysNextAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.KeyVault.Models.KeyItem&gt;&gt; GetKeysNextAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string nextPageLink, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeysNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetKeysNextAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.KeyItem&gt;&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeysNextAsync (operations, nextPageLink, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.KeyItem&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="nextPageLink" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            List keys in the specified vault.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeysNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="GetKeyVersionsAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.KeyItem&gt;&gt; GetKeyVersionsAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string keyName, Nullable&lt;int&gt; maxresults = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.KeyVault.Models.KeyItem&gt;&gt; GetKeyVersionsAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string keyName, valuetype System.Nullable`1&lt;int32&gt; maxresults, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyVersionsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetKeyVersionsAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.KeyItem&gt;&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyVersionsAsync (operations, vaultBaseUrl, keyName, maxresults, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.KeyItem&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="keyName" Type="System.String" />
          <Parameter Name="maxresults" Type="System.Nullable&lt;System.Int32&gt;" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="keyName">
            The name of the key.
            </param>
          <param name="maxresults">
            Maximum number of results to return in a page. If not specified the service
            will return up to 25 results.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Retrieves a list of individual key versions with the same key name.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyVersionsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="GetKeyVersionsNextAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.KeyItem&gt;&gt; GetKeyVersionsNextAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.KeyVault.Models.KeyItem&gt;&gt; GetKeyVersionsNextAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string nextPageLink, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyVersionsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetKeyVersionsNextAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.KeyItem&gt;&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyVersionsNextAsync (operations, nextPageLink, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.KeyItem&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="nextPageLink" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Retrieves a list of individual key versions with the same key name.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyVersionsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="GetPendingCertificateSigningRequestAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; GetPendingCertificateSigningRequestAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string certificateName, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; GetPendingCertificateSigningRequestAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string certificateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetPendingCertificateSigningRequestAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetPendingCertificateSigningRequestAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetPendingCertificateSigningRequestAsync (operations, vaultBaseUrl, certificateName, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="certificateName" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">To be added.</param>
          <param name="vaultBaseUrl">The URL for the vault containing the certificate</param>
          <param name="certificateName">The name of the certificate</param>
          <param name="cancellationToken">Optional cancellation token</param>
          <summary>
            Gets the Base64 pending certificate signing request (PKCS-10) 
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetPendingCertificateSigningRequestAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="GetSasDefinitionAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.SasDefinitionBundle&gt; GetSasDefinitionAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string storageAccountName, string sasDefinitionName, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.SasDefinitionBundle&gt; GetSasDefinitionAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string storageAccountName, string sasDefinitionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSasDefinitionAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetSasDefinitionAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.SasDefinitionBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSasDefinitionAsync (operations, vaultBaseUrl, storageAccountName, sasDefinitionName, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.SasDefinitionBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="storageAccountName" Type="System.String" />
          <Parameter Name="sasDefinitionName" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="storageAccountName">
            The name of the storage account.
            </param>
          <param name="sasDefinitionName">
            The name of the SAS definition.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Gets information about a SAS definition for the specified storage account.
            This operation requires the storage/getsas permission.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSasDefinitionAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="GetSasDefinitionsAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.SasDefinitionItem&gt;&gt; GetSasDefinitionsAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string storageAccountName, Nullable&lt;int&gt; maxresults = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.KeyVault.Models.SasDefinitionItem&gt;&gt; GetSasDefinitionsAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string storageAccountName, valuetype System.Nullable`1&lt;int32&gt; maxresults, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSasDefinitionsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetSasDefinitionsAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.SasDefinitionItem&gt;&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSasDefinitionsAsync (operations, vaultBaseUrl, storageAccountName, maxresults, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.SasDefinitionItem&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="storageAccountName" Type="System.String" />
          <Parameter Name="maxresults" Type="System.Nullable&lt;System.Int32&gt;" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="storageAccountName">
            The name of the storage account.
            </param>
          <param name="maxresults">
            Maximum number of results to return in a page. If not specified the service
            will return up to 25 results.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            List storage SAS definitions for the given storage account. This operation
            requires the storage/listsas permission.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSasDefinitionsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="GetSasDefinitionsNextAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.SasDefinitionItem&gt;&gt; GetSasDefinitionsNextAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.KeyVault.Models.SasDefinitionItem&gt;&gt; GetSasDefinitionsNextAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string nextPageLink, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSasDefinitionsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetSasDefinitionsNextAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.SasDefinitionItem&gt;&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSasDefinitionsNextAsync (operations, nextPageLink, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.SasDefinitionItem&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="nextPageLink" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            List storage SAS definitions for the given storage account. This operation
            requires the storage/listsas permission.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSasDefinitionsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="GetSecretAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.SecretBundle&gt; GetSecretAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string secretName, string secretVersion, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.SecretBundle&gt; GetSecretAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string secretName, string secretVersion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetSecretAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.SecretBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretAsync (operations, vaultBaseUrl, secretName, secretVersion, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.SecretBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="secretName" Type="System.String" />
          <Parameter Name="secretVersion" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="secretName">
            The name of the secret.
            </param>
          <param name="secretVersion">
            The version of the secret.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Get a specified secret from a given key vault.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="GetSecretAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.SecretBundle&gt; GetSecretAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string secretName, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.SecretBundle&gt; GetSecretAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string secretName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetSecretAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.SecretBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretAsync (operations, vaultBaseUrl, secretName, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.SecretBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="secretName" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">To be added.</param>
          <param name="vaultBaseUrl">The URL for the vault containing the secrets.</param>
          <param name="secretName">The name the secret in the given vault.</param>
          <param name="cancellationToken">Optional cancellation token</param>
          <summary>
            Gets a secret.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="GetSecretAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.SecretBundle&gt; GetSecretAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string secretIdentifier, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.SecretBundle&gt; GetSecretAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string secretIdentifier, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetSecretAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.SecretBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretAsync (operations, secretIdentifier, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.SecretBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="secretIdentifier" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">To be added.</param>
          <param name="secretIdentifier">The URL for the secret.</param>
          <param name="cancellationToken">Optional cancellation token</param>
          <summary>
            Gets a secret.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="GetSecretsAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.SecretItem&gt;&gt; GetSecretsAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, Nullable&lt;int&gt; maxresults = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.KeyVault.Models.SecretItem&gt;&gt; GetSecretsAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, valuetype System.Nullable`1&lt;int32&gt; maxresults, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetSecretsAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.SecretItem&gt;&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretsAsync (operations, vaultBaseUrl, maxresults, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.SecretItem&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="maxresults" Type="System.Nullable&lt;System.Int32&gt;" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="maxresults">
            Maximum number of results to return in a page. If not specified, the
            service will return up to 25 results.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            List secrets in a specified key vault.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="GetSecretsNextAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.SecretItem&gt;&gt; GetSecretsNextAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.KeyVault.Models.SecretItem&gt;&gt; GetSecretsNextAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string nextPageLink, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetSecretsNextAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.SecretItem&gt;&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretsNextAsync (operations, nextPageLink, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.SecretItem&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="nextPageLink" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            List secrets in a specified key vault.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="GetSecretVersionsAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.SecretItem&gt;&gt; GetSecretVersionsAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string secretName, Nullable&lt;int&gt; maxresults = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.KeyVault.Models.SecretItem&gt;&gt; GetSecretVersionsAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string secretName, valuetype System.Nullable`1&lt;int32&gt; maxresults, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretVersionsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetSecretVersionsAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.SecretItem&gt;&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretVersionsAsync (operations, vaultBaseUrl, secretName, maxresults, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.SecretItem&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="secretName" Type="System.String" />
          <Parameter Name="maxresults" Type="System.Nullable&lt;System.Int32&gt;" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="secretName">
            The name of the secret.
            </param>
          <param name="maxresults">
            Maximum number of results to return in a page. If not specified, the
            service will return up to 25 results.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            List all versions of the specified secret.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretVersionsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="GetSecretVersionsNextAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.SecretItem&gt;&gt; GetSecretVersionsNextAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.KeyVault.Models.SecretItem&gt;&gt; GetSecretVersionsNextAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string nextPageLink, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretVersionsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetSecretVersionsNextAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.SecretItem&gt;&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretVersionsNextAsync (operations, nextPageLink, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.SecretItem&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="nextPageLink" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            List all versions of the specified secret.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretVersionsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="GetStorageAccountAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.StorageBundle&gt; GetStorageAccountAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string storageAccountName, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.StorageBundle&gt; GetStorageAccountAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string storageAccountName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetStorageAccountAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetStorageAccountAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.StorageBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetStorageAccountAsync (operations, vaultBaseUrl, storageAccountName, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.StorageBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="storageAccountName" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="storageAccountName">
            The name of the storage account.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Gets information about a specified storage account. This operation requires
            the storage/get permission.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetStorageAccountAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="GetStorageAccountsAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.StorageAccountItem&gt;&gt; GetStorageAccountsAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, Nullable&lt;int&gt; maxresults = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.KeyVault.Models.StorageAccountItem&gt;&gt; GetStorageAccountsAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, valuetype System.Nullable`1&lt;int32&gt; maxresults, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetStorageAccountsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetStorageAccountsAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.StorageAccountItem&gt;&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetStorageAccountsAsync (operations, vaultBaseUrl, maxresults, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.StorageAccountItem&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="maxresults" Type="System.Nullable&lt;System.Int32&gt;" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="maxresults">
            Maximum number of results to return in a page. If not specified the service
            will return up to 25 results.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            List storage accounts managed by the specified key vault. This operation
            requires the storage/list permission.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetStorageAccountsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="GetStorageAccountsNextAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.StorageAccountItem&gt;&gt; GetStorageAccountsNextAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.KeyVault.Models.StorageAccountItem&gt;&gt; GetStorageAccountsNextAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string nextPageLink, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetStorageAccountsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetStorageAccountsNextAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.StorageAccountItem&gt;&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetStorageAccountsNextAsync (operations, nextPageLink, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.KeyVault.Models.StorageAccountItem&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="nextPageLink" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            List storage accounts managed by the specified key vault. This operation
            requires the storage/list permission.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetStorageAccountsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="ImportCertificateAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificateBundle&gt; ImportCertificateAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string certificateName, System.Security.Cryptography.X509Certificates.X509Certificate2Collection certificateCollection, Microsoft.Azure.KeyVault.Models.CertificatePolicy certificatePolicy, Microsoft.Azure.KeyVault.Models.CertificateAttributes certificateAttributes = null, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.CertificateBundle&gt; ImportCertificateAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string certificateName, class System.Security.Cryptography.X509Certificates.X509Certificate2Collection certificateCollection, class Microsoft.Azure.KeyVault.Models.CertificatePolicy certificatePolicy, class Microsoft.Azure.KeyVault.Models.CertificateAttributes certificateAttributes, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Security.Cryptography.X509Certificates.X509Certificate2Collection,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member ImportCertificateAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * System.Security.Cryptography.X509Certificates.X509Certificate2Collection * Microsoft.Azure.KeyVault.Models.CertificatePolicy * Microsoft.Azure.KeyVault.Models.CertificateAttributes * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificateBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportCertificateAsync (operations, vaultBaseUrl, certificateName, certificateCollection, certificatePolicy, certificateAttributes, tags, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificateBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="certificateName" Type="System.String" />
          <Parameter Name="certificateCollection" Type="System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />
          <Parameter Name="certificatePolicy" Type="Microsoft.Azure.KeyVault.Models.CertificatePolicy" />
          <Parameter Name="certificateAttributes" Type="Microsoft.Azure.KeyVault.Models.CertificateAttributes" />
          <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">To be added.</param>
          <param name="vaultBaseUrl">The URL for the vault containing the certificate</param>
          <param name="certificateName">The name of the certificate</param>
          <param name="certificateCollection">The certificate collection with the private key</param>
          <param name="certificatePolicy">The management policy for the certificate</param>
          <param name="certificateAttributes">The attributes of the certificate (optional)</param>
          <param name="tags">Application-specific metadata in the form of key-value pairs</param>
          <param name="cancellationToken">Optional cancellation token</param>
          <summary>
            Imports a new certificate version. If this is the first version, the certificate resource is created.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Security.Cryptography.X509Certificates.X509Certificate2Collection,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="ImportCertificateAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificateBundle&gt; ImportCertificateAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string certificateName, string base64EncodedCertificate, string password = null, Microsoft.Azure.KeyVault.Models.CertificatePolicy certificatePolicy = null, Microsoft.Azure.KeyVault.Models.CertificateAttributes certificateAttributes = null, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.CertificateBundle&gt; ImportCertificateAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string certificateName, string base64EncodedCertificate, string password, class Microsoft.Azure.KeyVault.Models.CertificatePolicy certificatePolicy, class Microsoft.Azure.KeyVault.Models.CertificateAttributes certificateAttributes, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member ImportCertificateAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * string * string * Microsoft.Azure.KeyVault.Models.CertificatePolicy * Microsoft.Azure.KeyVault.Models.CertificateAttributes * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificateBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportCertificateAsync (operations, vaultBaseUrl, certificateName, base64EncodedCertificate, password, certificatePolicy, certificateAttributes, tags, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificateBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="certificateName" Type="System.String" />
          <Parameter Name="base64EncodedCertificate" Type="System.String" />
          <Parameter Name="password" Type="System.String" />
          <Parameter Name="certificatePolicy" Type="Microsoft.Azure.KeyVault.Models.CertificatePolicy" />
          <Parameter Name="certificateAttributes" Type="Microsoft.Azure.KeyVault.Models.CertificateAttributes" />
          <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="certificateName">
            The name of the certificate.
            </param>
          <param name="base64EncodedCertificate">
            Base64 encoded representation of the certificate object to import. This
            certificate needs to contain the private key.
            </param>
          <param name="password">
            If the private key in base64EncodedCertificate is encrypted, the password
            used for encryption.
            </param>
          <param name="certificatePolicy">
            The management policy for the certificate.
            </param>
          <param name="certificateAttributes">
            The attributes of the certificate (optional).
            </param>
          <param name="tags">
            Application specific metadata in the form of key-value pairs.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Imports a certificate into a specified key vault.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="ImportKeyAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyBundle&gt; ImportKeyAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string keyName, Microsoft.Azure.KeyVault.Models.KeyBundle keyBundle, Nullable&lt;bool&gt; importToHardware = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.KeyBundle&gt; ImportKeyAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string keyName, class Microsoft.Azure.KeyVault.Models.KeyBundle keyBundle, valuetype System.Nullable`1&lt;bool&gt; importToHardware, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,Microsoft.Azure.KeyVault.Models.KeyBundle,System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member ImportKeyAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * Microsoft.Azure.KeyVault.Models.KeyBundle * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportKeyAsync (operations, vaultBaseUrl, keyName, keyBundle, importToHardware, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="keyName" Type="System.String" />
          <Parameter Name="keyBundle" Type="Microsoft.Azure.KeyVault.Models.KeyBundle" />
          <Parameter Name="importToHardware" Type="System.Nullable&lt;System.Boolean&gt;" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">To be added.</param>
          <param name="vaultBaseUrl">The vault name, e.g. https://myvault.vault.azure.net</param>
          <param name="keyName">The key name</param>
          <param name="keyBundle"> Key bundle </param>
          <param name="importToHardware">Whether to import as a hardware key (HSM) or software key </param>
          <param name="cancellationToken">Optional cancellation token</param>
          <summary>
            Imports a key into the specified vault
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,Microsoft.Azure.KeyVault.Models.KeyBundle,System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="ImportKeyAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyBundle&gt; ImportKeyAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string keyName, Microsoft.Azure.KeyVault.WebKey.JsonWebKey key, Nullable&lt;bool&gt; hsm = null, Microsoft.Azure.KeyVault.Models.KeyAttributes keyAttributes = null, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.KeyBundle&gt; ImportKeyAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string keyName, class Microsoft.Azure.KeyVault.WebKey.JsonWebKey key, valuetype System.Nullable`1&lt;bool&gt; hsm, class Microsoft.Azure.KeyVault.Models.KeyAttributes keyAttributes, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.Nullable{System.Boolean},Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member ImportKeyAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * Microsoft.Azure.KeyVault.WebKey.JsonWebKey * Nullable&lt;bool&gt; * Microsoft.Azure.KeyVault.Models.KeyAttributes * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportKeyAsync (operations, vaultBaseUrl, keyName, key, hsm, keyAttributes, tags, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="keyName" Type="System.String" />
          <Parameter Name="key" Type="Microsoft.Azure.KeyVault.WebKey.JsonWebKey" />
          <Parameter Name="hsm" Type="System.Nullable&lt;System.Boolean&gt;" />
          <Parameter Name="keyAttributes" Type="Microsoft.Azure.KeyVault.Models.KeyAttributes" />
          <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="keyName">
            Name for the imported key.
            </param>
          <param name="key">
            The Json web key
            </param>
          <param name="hsm">
            Whether to import as a hardware key (HSM) or software key.
            </param>
          <param name="keyAttributes">
            The key management attributes.
            </param>
          <param name="tags">
            Application specific metadata in the form of key-value pairs.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Imports an externally created key, stores it, and returns key parameters
            and attributes to the client.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.Nullable{System.Boolean},Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="MergeCertificateAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificateBundle&gt; MergeCertificateAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string certificateName, System.Collections.Generic.IList&lt;byte[]&gt; x509Certificates, Microsoft.Azure.KeyVault.Models.CertificateAttributes certificateAttributes = null, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.CertificateBundle&gt; MergeCertificateAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string certificateName, class System.Collections.Generic.IList`1&lt;unsigned int8[]&gt; x509Certificates, class Microsoft.Azure.KeyVault.Models.CertificateAttributes certificateAttributes, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.MergeCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Collections.Generic.IList{System.Byte[]},Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member MergeCertificateAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * System.Collections.Generic.IList&lt;byte[]&gt; * Microsoft.Azure.KeyVault.Models.CertificateAttributes * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificateBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.MergeCertificateAsync (operations, vaultBaseUrl, certificateName, x509Certificates, certificateAttributes, tags, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificateBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="certificateName" Type="System.String" />
          <Parameter Name="x509Certificates" Type="System.Collections.Generic.IList&lt;System.Byte[]&gt;" />
          <Parameter Name="certificateAttributes" Type="Microsoft.Azure.KeyVault.Models.CertificateAttributes" />
          <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="certificateName">
            The name of the certificate.
            </param>
          <param name="x509Certificates">
            The certificate or the certificate chain to merge.
            </param>
          <param name="certificateAttributes">
            The attributes of the certificate (optional).
            </param>
          <param name="tags">
            Application specific metadata in the form of key-value pairs.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Merges a certificate or a certificate chain with a key pair existing on the
            server.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.MergeCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Collections.Generic.IList{System.Byte[]},Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="MergeCertificateAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificateBundle&gt; MergeCertificateAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string certificateName, System.Security.Cryptography.X509Certificates.X509Certificate2Collection x509Certificates, Microsoft.Azure.KeyVault.Models.CertificateAttributes certificateAttributes = null, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.CertificateBundle&gt; MergeCertificateAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string certificateName, class System.Security.Cryptography.X509Certificates.X509Certificate2Collection x509Certificates, class Microsoft.Azure.KeyVault.Models.CertificateAttributes certificateAttributes, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.MergeCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Security.Cryptography.X509Certificates.X509Certificate2Collection,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member MergeCertificateAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * System.Security.Cryptography.X509Certificates.X509Certificate2Collection * Microsoft.Azure.KeyVault.Models.CertificateAttributes * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificateBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.MergeCertificateAsync (operations, vaultBaseUrl, certificateName, x509Certificates, certificateAttributes, tags, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificateBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="certificateName" Type="System.String" />
          <Parameter Name="x509Certificates" Type="System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />
          <Parameter Name="certificateAttributes" Type="Microsoft.Azure.KeyVault.Models.CertificateAttributes" />
          <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">To be added.</param>
          <param name="vaultBaseUrl">The URL for the vault containing the certificate</param>
          <param name="certificateName">The name of the certificate</param>
          <param name="x509Certificates">The certificate or the certificte chain to merge</param>
          <param name="certificateAttributes">The attributes of the certificate (optional)</param>
          <param name="tags">Application-specific metadata in the form of key-value pairs</param>
          <param name="cancellationToken">Optional cancellation token</param>
          <summary>
            Merges a certificate or a certificate chain with a key pair existing on the server.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.MergeCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Security.Cryptography.X509Certificates.X509Certificate2Collection,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="PurgeDeletedCertificateAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task PurgeDeletedCertificateAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string certificateName, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task PurgeDeletedCertificateAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string certificateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.PurgeDeletedCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member PurgeDeletedCertificateAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.PurgeDeletedCertificateAsync (operations, vaultBaseUrl, certificateName, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="certificateName" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="certificateName">
            The name of the certificate
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Permanently deletes the specified deleted certificate.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.PurgeDeletedCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="PurgeDeletedCertificateAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task PurgeDeletedCertificateAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string recoveryId, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task PurgeDeletedCertificateAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string recoveryId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.PurgeDeletedCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member PurgeDeletedCertificateAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.PurgeDeletedCertificateAsync (operations, recoveryId, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="recoveryId" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">To be added.</param>
          <param name="recoveryId">The recoveryId of the deleted certificate, returned from deletion.</param>
          <param name="cancellationToken">Optional cancellation token</param>
          <summary>
            Purges the deleted certificate with immediate effect.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.PurgeDeletedCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="PurgeDeletedKeyAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task PurgeDeletedKeyAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string keyName, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task PurgeDeletedKeyAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string keyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.PurgeDeletedKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member PurgeDeletedKeyAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.PurgeDeletedKeyAsync (operations, vaultBaseUrl, keyName, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="keyName" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="keyName">
            The name of the key
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Permanently deletes the specified key.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.PurgeDeletedKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="PurgeDeletedKeyAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task PurgeDeletedKeyAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string recoveryId, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task PurgeDeletedKeyAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string recoveryId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.PurgeDeletedKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member PurgeDeletedKeyAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.PurgeDeletedKeyAsync (operations, recoveryId, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="recoveryId" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">To be added.</param>
          <param name="recoveryId">The recoveryId of the deleted key, returned from deletion.</param>
          <param name="cancellationToken">Optional cancellation token</param>
          <summary>
            Purges the deleted key immediately.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.PurgeDeletedKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="PurgeDeletedSecretAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task PurgeDeletedSecretAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string secretName, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task PurgeDeletedSecretAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string secretName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.PurgeDeletedSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member PurgeDeletedSecretAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.PurgeDeletedSecretAsync (operations, vaultBaseUrl, secretName, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="secretName" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="secretName">
            The name of the secret.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Permanently deletes the specified secret.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.PurgeDeletedSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="PurgeDeletedSecretAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task PurgeDeletedSecretAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string recoveryId, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task PurgeDeletedSecretAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string recoveryId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.PurgeDeletedSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member PurgeDeletedSecretAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.PurgeDeletedSecretAsync (operations, recoveryId, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="recoveryId" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">To be added.</param>
          <param name="recoveryId">The recoveryId of the deleted secret, returned from deletion.</param>
          <param name="cancellationToken">Optional cancellation token</param>
          <summary>
            Purges the deleted secret immediately.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.PurgeDeletedSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="PurgeDeletedStorageAccountAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task PurgeDeletedStorageAccountAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string storageAccountName, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task PurgeDeletedStorageAccountAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string storageAccountName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.PurgeDeletedStorageAccountAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member PurgeDeletedStorageAccountAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.PurgeDeletedStorageAccountAsync (operations, vaultBaseUrl, storageAccountName, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="storageAccountName" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="storageAccountName">
            The name of the storage account.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Permanently deletes the specified storage account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.PurgeDeletedStorageAccountAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="RecoverDeletedCertificateAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificateBundle&gt; RecoverDeletedCertificateAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string certificateName, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.CertificateBundle&gt; RecoverDeletedCertificateAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string certificateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RecoverDeletedCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member RecoverDeletedCertificateAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificateBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RecoverDeletedCertificateAsync (operations, vaultBaseUrl, certificateName, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificateBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="certificateName" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="certificateName">
            The name of the deleted certificate
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Recovers the deleted certificate back to its current version under
            /certificates.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RecoverDeletedCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="RecoverDeletedCertificateAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificateBundle&gt; RecoverDeletedCertificateAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string recoveryId, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.CertificateBundle&gt; RecoverDeletedCertificateAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string recoveryId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RecoverDeletedCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member RecoverDeletedCertificateAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificateBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RecoverDeletedCertificateAsync (operations, recoveryId, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificateBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="recoveryId" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">To be added.</param>
          <param name="recoveryId">The recoveryId of the deleted certificate, returned from deletion.</param>
          <param name="cancellationToken">Optional cancellation token</param>
          <summary>
            Recovers the deleted certificate.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RecoverDeletedCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="RecoverDeletedKeyAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyBundle&gt; RecoverDeletedKeyAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string keyName, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.KeyBundle&gt; RecoverDeletedKeyAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string keyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RecoverDeletedKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member RecoverDeletedKeyAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RecoverDeletedKeyAsync (operations, vaultBaseUrl, keyName, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="keyName" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="keyName">
            The name of the deleted key.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Recovers the deleted key to its latest version.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RecoverDeletedKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="RecoverDeletedKeyAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyBundle&gt; RecoverDeletedKeyAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string recoveryId, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.KeyBundle&gt; RecoverDeletedKeyAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string recoveryId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RecoverDeletedKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member RecoverDeletedKeyAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RecoverDeletedKeyAsync (operations, recoveryId, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="recoveryId" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">To be added.</param>
          <param name="recoveryId">The recoveryId of the deleted key, returned from deletion.</param>
          <param name="cancellationToken">Optional cancellation token</param>
          <summary>
            Recovers the deleted key.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RecoverDeletedKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="RecoverDeletedSasDefinitionAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.SasDefinitionBundle&gt; RecoverDeletedSasDefinitionAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string storageAccountName, string sasDefinitionName, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.SasDefinitionBundle&gt; RecoverDeletedSasDefinitionAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string storageAccountName, string sasDefinitionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RecoverDeletedSasDefinitionAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member RecoverDeletedSasDefinitionAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.SasDefinitionBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RecoverDeletedSasDefinitionAsync (operations, vaultBaseUrl, storageAccountName, sasDefinitionName, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.SasDefinitionBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="storageAccountName" Type="System.String" />
          <Parameter Name="sasDefinitionName" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="storageAccountName">
            The name of the storage account.
            </param>
          <param name="sasDefinitionName">
            The name of the SAS definition.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Recovers the deleted SAS definition.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RecoverDeletedSasDefinitionAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="RecoverDeletedSecretAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.SecretBundle&gt; RecoverDeletedSecretAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string secretName, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.SecretBundle&gt; RecoverDeletedSecretAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string secretName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RecoverDeletedSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member RecoverDeletedSecretAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.SecretBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RecoverDeletedSecretAsync (operations, vaultBaseUrl, secretName, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.SecretBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="secretName" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="secretName">
            The name of the deleted secret.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Recovers the deleted secret to the latest version.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RecoverDeletedSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="RecoverDeletedSecretAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.SecretBundle&gt; RecoverDeletedSecretAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string recoveryId, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.SecretBundle&gt; RecoverDeletedSecretAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string recoveryId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RecoverDeletedSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member RecoverDeletedSecretAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.SecretBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RecoverDeletedSecretAsync (operations, recoveryId, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.SecretBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="recoveryId" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">To be added.</param>
          <param name="recoveryId">The recoveryId of the deleted secret, returned from deletion.</param>
          <param name="cancellationToken">Optional cancellation token</param>
          <summary>
            Recovers the deleted secret.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RecoverDeletedSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="RecoverDeletedStorageAccountAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.StorageBundle&gt; RecoverDeletedStorageAccountAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string storageAccountName, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.StorageBundle&gt; RecoverDeletedStorageAccountAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string storageAccountName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RecoverDeletedStorageAccountAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member RecoverDeletedStorageAccountAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.StorageBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RecoverDeletedStorageAccountAsync (operations, vaultBaseUrl, storageAccountName, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.StorageBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="storageAccountName" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="storageAccountName">
            The name of the storage account.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Recovers the deleted storage account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RecoverDeletedStorageAccountAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="RegenerateStorageAccountKeyAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.StorageBundle&gt; RegenerateStorageAccountKeyAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string storageAccountName, string keyName, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.StorageBundle&gt; RegenerateStorageAccountKeyAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string storageAccountName, string keyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RegenerateStorageAccountKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member RegenerateStorageAccountKeyAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.StorageBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RegenerateStorageAccountKeyAsync (operations, vaultBaseUrl, storageAccountName, keyName, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.StorageBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="storageAccountName" Type="System.String" />
          <Parameter Name="keyName" Type="System.String" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="storageAccountName">
            The name of the storage account.
            </param>
          <param name="keyName">
            The storage account key name.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Regenerates the specified key value for the given storage account. This
            operation requires the storage/regeneratekey permission.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RegenerateStorageAccountKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="RestoreCertificateAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificateBundle&gt; RestoreCertificateAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, byte[] certificateBundleBackup, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.CertificateBundle&gt; RestoreCertificateAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, unsigned int8[] certificateBundleBackup, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RestoreCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Byte[],System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member RestoreCertificateAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificateBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RestoreCertificateAsync (operations, vaultBaseUrl, certificateBundleBackup, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificateBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="certificateBundleBackup" Type="System.Byte[]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="certificateBundleBackup">
            The backup blob associated with a certificate bundle.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Restores a backed up certificate to a vault.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RestoreCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Byte[],System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="RestoreKeyAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyBundle&gt; RestoreKeyAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, byte[] keyBundleBackup, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.KeyBundle&gt; RestoreKeyAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, unsigned int8[] keyBundleBackup, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RestoreKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Byte[],System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member RestoreKeyAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RestoreKeyAsync (operations, vaultBaseUrl, keyBundleBackup, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="keyBundleBackup" Type="System.Byte[]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="keyBundleBackup">
            The backup blob associated with a key bundle.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Restores a backed up key to a vault.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RestoreKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Byte[],System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="RestoreSecretAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.SecretBundle&gt; RestoreSecretAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, byte[] secretBundleBackup, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.SecretBundle&gt; RestoreSecretAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, unsigned int8[] secretBundleBackup, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RestoreSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Byte[],System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member RestoreSecretAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.SecretBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RestoreSecretAsync (operations, vaultBaseUrl, secretBundleBackup, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.SecretBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="secretBundleBackup" Type="System.Byte[]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="secretBundleBackup">
            The backup blob associated with a secret bundle.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Restores a backed up secret to a vault.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RestoreSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Byte[],System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="RestoreStorageAccountAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.StorageBundle&gt; RestoreStorageAccountAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, byte[] storageBundleBackup, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.StorageBundle&gt; RestoreStorageAccountAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, unsigned int8[] storageBundleBackup, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RestoreStorageAccountAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Byte[],System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member RestoreStorageAccountAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.StorageBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RestoreStorageAccountAsync (operations, vaultBaseUrl, storageBundleBackup, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.StorageBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="storageBundleBackup" Type="System.Byte[]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="storageBundleBackup">
            The backup blob associated with a storage account.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Restores a backed up storage account to a vault.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RestoreStorageAccountAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Byte[],System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="SetCertificateContactsAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.Contacts&gt; SetCertificateContactsAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, Microsoft.Azure.KeyVault.Models.Contacts contacts, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.Contacts&gt; SetCertificateContactsAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, class Microsoft.Azure.KeyVault.Models.Contacts contacts, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetCertificateContactsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,Microsoft.Azure.KeyVault.Models.Contacts,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member SetCertificateContactsAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * Microsoft.Azure.KeyVault.Models.Contacts * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.Contacts&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetCertificateContactsAsync (operations, vaultBaseUrl, contacts, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.Contacts&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="contacts" Type="Microsoft.Azure.KeyVault.Models.Contacts" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="contacts">
            The contacts for the key vault certificate.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Sets the certificate contacts for the specified key vault.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetCertificateContactsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,Microsoft.Azure.KeyVault.Models.Contacts,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="SetCertificateIssuerAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.IssuerBundle&gt; SetCertificateIssuerAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string issuerName, string provider, Microsoft.Azure.KeyVault.Models.IssuerCredentials credentials = null, Microsoft.Azure.KeyVault.Models.OrganizationDetails organizationDetails = null, Microsoft.Azure.KeyVault.Models.IssuerAttributes attributes = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.IssuerBundle&gt; SetCertificateIssuerAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string issuerName, string provider, class Microsoft.Azure.KeyVault.Models.IssuerCredentials credentials, class Microsoft.Azure.KeyVault.Models.OrganizationDetails organizationDetails, class Microsoft.Azure.KeyVault.Models.IssuerAttributes attributes, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetCertificateIssuerAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.IssuerCredentials,Microsoft.Azure.KeyVault.Models.OrganizationDetails,Microsoft.Azure.KeyVault.Models.IssuerAttributes,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member SetCertificateIssuerAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * string * Microsoft.Azure.KeyVault.Models.IssuerCredentials * Microsoft.Azure.KeyVault.Models.OrganizationDetails * Microsoft.Azure.KeyVault.Models.IssuerAttributes * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.IssuerBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetCertificateIssuerAsync (operations, vaultBaseUrl, issuerName, provider, credentials, organizationDetails, attributes, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.IssuerBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="issuerName" Type="System.String" />
          <Parameter Name="provider" Type="System.String" />
          <Parameter Name="credentials" Type="Microsoft.Azure.KeyVault.Models.IssuerCredentials" />
          <Parameter Name="organizationDetails" Type="Microsoft.Azure.KeyVault.Models.OrganizationDetails" />
          <Parameter Name="attributes" Type="Microsoft.Azure.KeyVault.Models.IssuerAttributes" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="issuerName">
            The name of the issuer.
            </param>
          <param name="provider">
            The issuer provider.
            </param>
          <param name="credentials">
            The credentials to be used for the issuer.
            </param>
          <param name="organizationDetails">
            Details of the organization as provided to the issuer.
            </param>
          <param name="attributes">
            Attributes of the issuer object.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Sets the specified certificate issuer.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetCertificateIssuerAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.IssuerCredentials,Microsoft.Azure.KeyVault.Models.OrganizationDetails,Microsoft.Azure.KeyVault.Models.IssuerAttributes,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="SetSasDefinitionAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.SasDefinitionBundle&gt; SetSasDefinitionAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string storageAccountName, string sasDefinitionName, string templateUri, string sasType, string validityPeriod, Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes sasDefinitionAttributes = null, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.SasDefinitionBundle&gt; SetSasDefinitionAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string storageAccountName, string sasDefinitionName, string templateUri, string sasType, string validityPeriod, class Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes sasDefinitionAttributes, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetSasDefinitionAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member SetSasDefinitionAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * string * string * string * string * Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.SasDefinitionBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetSasDefinitionAsync (operations, vaultBaseUrl, storageAccountName, sasDefinitionName, templateUri, sasType, validityPeriod, sasDefinitionAttributes, tags, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.SasDefinitionBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="storageAccountName" Type="System.String" />
          <Parameter Name="sasDefinitionName" Type="System.String" />
          <Parameter Name="templateUri" Type="System.String" />
          <Parameter Name="sasType" Type="System.String" />
          <Parameter Name="validityPeriod" Type="System.String" />
          <Parameter Name="sasDefinitionAttributes" Type="Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes" />
          <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="storageAccountName">
            The name of the storage account.
            </param>
          <param name="sasDefinitionName">
            The name of the SAS definition.
            </param>
          <param name="templateUri">
            The SAS definition token template signed with an arbitrary key.  Tokens
            created according to the SAS definition will have the same properties as
            the template.
            </param>
          <param name="sasType">
            The type of SAS token the SAS definition will create. Possible values
            include: 'account', 'service'
            </param>
          <param name="validityPeriod">
            The validity period of SAS tokens created according to the SAS definition.
            </param>
          <param name="sasDefinitionAttributes">
            The attributes of the SAS definition.
            </param>
          <param name="tags">
            Application specific metadata in the form of key-value pairs.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Creates or updates a new SAS definition for the specified storage account.
            This operation requires the storage/setsas permission.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetSasDefinitionAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="SetSecretAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.SecretBundle&gt; SetSecretAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string secretName, string value, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = null, string contentType = null, Microsoft.Azure.KeyVault.Models.SecretAttributes secretAttributes = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.SecretBundle&gt; SetSecretAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string secretName, string value, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, string contentType, class Microsoft.Azure.KeyVault.Models.SecretAttributes secretAttributes, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Azure.KeyVault.Models.SecretAttributes,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member SetSecretAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Azure.KeyVault.Models.SecretAttributes * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.SecretBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetSecretAsync (operations, vaultBaseUrl, secretName, value, tags, contentType, secretAttributes, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.SecretBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="secretName" Type="System.String" />
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
          <Parameter Name="contentType" Type="System.String" />
          <Parameter Name="secretAttributes" Type="Microsoft.Azure.KeyVault.Models.SecretAttributes" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="secretName">
            The name of the secret.
            </param>
          <param name="value">
            The value of the secret.
            </param>
          <param name="tags">
            Application specific metadata in the form of key-value pairs.
            </param>
          <param name="contentType">
            Type of the secret value such as a password.
            </param>
          <param name="secretAttributes">
            The secret management attributes.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Sets a secret in a specified key vault.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Azure.KeyVault.Models.SecretAttributes,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="SetStorageAccountAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.StorageBundle&gt; SetStorageAccountAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string storageAccountName, string resourceId, string activeKeyName, bool autoRegenerateKey, string regenerationPeriod = null, Microsoft.Azure.KeyVault.Models.StorageAccountAttributes storageAccountAttributes = null, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.StorageBundle&gt; SetStorageAccountAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string storageAccountName, string resourceId, string activeKeyName, bool autoRegenerateKey, string regenerationPeriod, class Microsoft.Azure.KeyVault.Models.StorageAccountAttributes storageAccountAttributes, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetStorageAccountAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Boolean,System.String,Microsoft.Azure.KeyVault.Models.StorageAccountAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member SetStorageAccountAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * string * string * bool * string * Microsoft.Azure.KeyVault.Models.StorageAccountAttributes * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.StorageBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetStorageAccountAsync (operations, vaultBaseUrl, storageAccountName, resourceId, activeKeyName, autoRegenerateKey, regenerationPeriod, storageAccountAttributes, tags, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.StorageBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="storageAccountName" Type="System.String" />
          <Parameter Name="resourceId" Type="System.String" />
          <Parameter Name="activeKeyName" Type="System.String" />
          <Parameter Name="autoRegenerateKey" Type="System.Boolean" />
          <Parameter Name="regenerationPeriod" Type="System.String" />
          <Parameter Name="storageAccountAttributes" Type="Microsoft.Azure.KeyVault.Models.StorageAccountAttributes" />
          <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="storageAccountName">
            The name of the storage account.
            </param>
          <param name="resourceId">
            Storage account resource id.
            </param>
          <param name="activeKeyName">
            Current active storage account key name.
            </param>
          <param name="autoRegenerateKey">
            whether keyvault should manage the storage account for the user.
            </param>
          <param name="regenerationPeriod">
            The key regeneration time duration specified in ISO-8601 format.
            </param>
          <param name="storageAccountAttributes">
            The attributes of the storage account.
            </param>
          <param name="tags">
            Application specific metadata in the form of key-value pairs.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Creates or updates a new storage account. This operation requires the
            storage/set permission.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetStorageAccountAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Boolean,System.String,Microsoft.Azure.KeyVault.Models.StorageAccountAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="SignAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyOperationResult&gt; SignAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string keyIdentifier, string algorithm, byte[] digest, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.KeyOperationResult&gt; SignAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string keyIdentifier, string algorithm, unsigned int8[] digest, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Byte[],System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member SignAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyOperationResult&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync (operations, keyIdentifier, algorithm, digest, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyOperationResult&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="keyIdentifier" Type="System.String" />
          <Parameter Name="algorithm" Type="System.String" />
          <Parameter Name="digest" Type="System.Byte[]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">To be added.</param>
          <param name="keyIdentifier"> The global key identifier of the signing key </param>
          <param name="algorithm">The signing algorithm. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm. </param>
          <param name="digest">The digest value to sign</param>
          <param name="cancellationToken">Optional cancellation token</param>
          <summary>
            Creates a signature from a digest using the specified key in the vault
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Byte[],System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="SignAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyOperationResult&gt; SignAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string keyName, string keyVersion, string algorithm, byte[] value, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.KeyOperationResult&gt; SignAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string keyName, string keyVersion, string algorithm, unsigned int8[] value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Byte[],System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member SignAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * string * string * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyOperationResult&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync (operations, vaultBaseUrl, keyName, keyVersion, algorithm, value, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyOperationResult&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="keyName" Type="System.String" />
          <Parameter Name="keyVersion" Type="System.String" />
          <Parameter Name="algorithm" Type="System.String" />
          <Parameter Name="value" Type="System.Byte[]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="keyName">
            The name of the key.
            </param>
          <param name="keyVersion">
            The version of the key.
            </param>
          <param name="algorithm">
            The signing/verification algorithm identifier. For more information on
            possible algorithm types, see JsonWebKeySignatureAlgorithm. Possible values
            include: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL',
            'ES256', 'ES384', 'ES512', 'ECDSA256'
            </param>
          <param name="value" />
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Creates a signature from a digest using the specified key.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Byte[],System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="UnwrapKeyAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyOperationResult&gt; UnwrapKeyAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string keyIdentifier, string algorithm, byte[] wrappedKey, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.KeyOperationResult&gt; UnwrapKeyAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string keyIdentifier, string algorithm, unsigned int8[] wrappedKey, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Byte[],System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member UnwrapKeyAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyOperationResult&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync (operations, keyIdentifier, algorithm, wrappedKey, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyOperationResult&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="keyIdentifier" Type="System.String" />
          <Parameter Name="algorithm" Type="System.String" />
          <Parameter Name="wrappedKey" Type="System.Byte[]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">To be added.</param>
          <param name="keyIdentifier"> The global key identifier of the wrapping/unwrapping key </param>
          <param name="algorithm">The unwrap algorithm. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm.</param>
          <param name="wrappedKey">The wrapped symmetric key</param>
          <param name="cancellationToken">Optional cancellation token</param>
          <summary>
            Unwraps a symmetric key using the specified key in the vault
                that has initially been used for wrapping the key.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Byte[],System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="UnwrapKeyAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyOperationResult&gt; UnwrapKeyAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string keyName, string keyVersion, string algorithm, byte[] value, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.KeyOperationResult&gt; UnwrapKeyAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string keyName, string keyVersion, string algorithm, unsigned int8[] value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Byte[],System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member UnwrapKeyAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * string * string * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyOperationResult&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync (operations, vaultBaseUrl, keyName, keyVersion, algorithm, value, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyOperationResult&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="keyName" Type="System.String" />
          <Parameter Name="keyVersion" Type="System.String" />
          <Parameter Name="algorithm" Type="System.String" />
          <Parameter Name="value" Type="System.Byte[]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="keyName">
            The name of the key.
            </param>
          <param name="keyVersion">
            The version of the key.
            </param>
          <param name="algorithm">
            algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256',
            'RSA1_5'
            </param>
          <param name="value" />
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Unwraps a symmetric key using the specified key that was initially used for
            wrapping that key.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Byte[],System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="UpdateCertificateAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificateBundle&gt; UpdateCertificateAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string certificateIdentifier, Microsoft.Azure.KeyVault.Models.CertificatePolicy certificatePolicy = null, Microsoft.Azure.KeyVault.Models.CertificateAttributes certificateAttributes = null, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.CertificateBundle&gt; UpdateCertificateAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string certificateIdentifier, class Microsoft.Azure.KeyVault.Models.CertificatePolicy certificatePolicy, class Microsoft.Azure.KeyVault.Models.CertificateAttributes certificateAttributes, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member UpdateCertificateAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * Microsoft.Azure.KeyVault.Models.CertificatePolicy * Microsoft.Azure.KeyVault.Models.CertificateAttributes * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificateBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateAsync (operations, certificateIdentifier, certificatePolicy, certificateAttributes, tags, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificateBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="certificateIdentifier" Type="System.String" />
          <Parameter Name="certificatePolicy" Type="Microsoft.Azure.KeyVault.Models.CertificatePolicy" />
          <Parameter Name="certificateAttributes" Type="Microsoft.Azure.KeyVault.Models.CertificateAttributes" />
          <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">To be added.</param>
          <param name="certificateIdentifier">The URL for the certificate.</param>
          <param name="certificatePolicy">The management policy for the certificate.</param>
          <param name="certificateAttributes">The attributes of the certificate (optional)</param>
          <param name="tags">Application-specific metadata in the form of key-value pairs</param>
          <param name="cancellationToken">Optional cancellation token</param>
          <summary>
            Updates a certificate version.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="UpdateCertificateAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificateBundle&gt; UpdateCertificateAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string certificateName, string certificateVersion, Microsoft.Azure.KeyVault.Models.CertificatePolicy certificatePolicy = null, Microsoft.Azure.KeyVault.Models.CertificateAttributes certificateAttributes = null, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.CertificateBundle&gt; UpdateCertificateAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string certificateName, string certificateVersion, class Microsoft.Azure.KeyVault.Models.CertificatePolicy certificatePolicy, class Microsoft.Azure.KeyVault.Models.CertificateAttributes certificateAttributes, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member UpdateCertificateAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * string * Microsoft.Azure.KeyVault.Models.CertificatePolicy * Microsoft.Azure.KeyVault.Models.CertificateAttributes * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificateBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateAsync (operations, vaultBaseUrl, certificateName, certificateVersion, certificatePolicy, certificateAttributes, tags, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificateBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="certificateName" Type="System.String" />
          <Parameter Name="certificateVersion" Type="System.String" />
          <Parameter Name="certificatePolicy" Type="Microsoft.Azure.KeyVault.Models.CertificatePolicy" />
          <Parameter Name="certificateAttributes" Type="Microsoft.Azure.KeyVault.Models.CertificateAttributes" />
          <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="certificateName">
            The name of the certificate in the given key vault.
            </param>
          <param name="certificateVersion">
            The version of the certificate.
            </param>
          <param name="certificatePolicy">
            The management policy for the certificate.
            </param>
          <param name="certificateAttributes">
            The attributes of the certificate (optional).
            </param>
          <param name="tags">
            Application specific metadata in the form of key-value pairs.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Updates the specified attributes associated with the given certificate.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="UpdateCertificateIssuerAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.IssuerBundle&gt; UpdateCertificateIssuerAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string issuerName, string provider = null, Microsoft.Azure.KeyVault.Models.IssuerCredentials credentials = null, Microsoft.Azure.KeyVault.Models.OrganizationDetails organizationDetails = null, Microsoft.Azure.KeyVault.Models.IssuerAttributes attributes = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.IssuerBundle&gt; UpdateCertificateIssuerAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string issuerName, string provider, class Microsoft.Azure.KeyVault.Models.IssuerCredentials credentials, class Microsoft.Azure.KeyVault.Models.OrganizationDetails organizationDetails, class Microsoft.Azure.KeyVault.Models.IssuerAttributes attributes, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateIssuerAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.IssuerCredentials,Microsoft.Azure.KeyVault.Models.OrganizationDetails,Microsoft.Azure.KeyVault.Models.IssuerAttributes,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member UpdateCertificateIssuerAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * string * Microsoft.Azure.KeyVault.Models.IssuerCredentials * Microsoft.Azure.KeyVault.Models.OrganizationDetails * Microsoft.Azure.KeyVault.Models.IssuerAttributes * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.IssuerBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateIssuerAsync (operations, vaultBaseUrl, issuerName, provider, credentials, organizationDetails, attributes, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.IssuerBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="issuerName" Type="System.String" />
          <Parameter Name="provider" Type="System.String" />
          <Parameter Name="credentials" Type="Microsoft.Azure.KeyVault.Models.IssuerCredentials" />
          <Parameter Name="organizationDetails" Type="Microsoft.Azure.KeyVault.Models.OrganizationDetails" />
          <Parameter Name="attributes" Type="Microsoft.Azure.KeyVault.Models.IssuerAttributes" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="issuerName">
            The name of the issuer.
            </param>
          <param name="provider">
            The issuer provider.
            </param>
          <param name="credentials">
            The credentials to be used for the issuer.
            </param>
          <param name="organizationDetails">
            Details of the organization as provided to the issuer.
            </param>
          <param name="attributes">
            Attributes of the issuer object.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Updates the specified certificate issuer.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateIssuerAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.IssuerCredentials,Microsoft.Azure.KeyVault.Models.OrganizationDetails,Microsoft.Azure.KeyVault.Models.IssuerAttributes,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="UpdateCertificateOperationAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificateOperation&gt; UpdateCertificateOperationAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string certificateName, bool cancellationRequested, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.CertificateOperation&gt; UpdateCertificateOperationAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string certificateName, bool cancellationRequested, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateOperationAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Boolean,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member UpdateCertificateOperationAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificateOperation&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateOperationAsync (operations, vaultBaseUrl, certificateName, cancellationRequested, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificateOperation&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="certificateName" Type="System.String" />
          <Parameter Name="cancellationRequested" Type="System.Boolean" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="certificateName">
            The name of the certificate.
            </param>
          <param name="cancellationRequested">
            Indicates if cancellation was requested on the certificate operation.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Updates a certificate operation.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateOperationAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Boolean,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="UpdateCertificatePolicyAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificatePolicy&gt; UpdateCertificatePolicyAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string certificateName, Microsoft.Azure.KeyVault.Models.CertificatePolicy certificatePolicy, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.CertificatePolicy&gt; UpdateCertificatePolicyAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string certificateName, class Microsoft.Azure.KeyVault.Models.CertificatePolicy certificatePolicy, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificatePolicyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member UpdateCertificatePolicyAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * Microsoft.Azure.KeyVault.Models.CertificatePolicy * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificatePolicy&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificatePolicyAsync (operations, vaultBaseUrl, certificateName, certificatePolicy, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.CertificatePolicy&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="certificateName" Type="System.String" />
          <Parameter Name="certificatePolicy" Type="Microsoft.Azure.KeyVault.Models.CertificatePolicy" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="certificateName">
            The name of the certificate in the given vault.
            </param>
          <param name="certificatePolicy">
            The policy for the certificate.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Updates the policy for a certificate.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificatePolicyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="UpdateKeyAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyBundle&gt; UpdateKeyAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string keyName, string keyVersion, System.Collections.Generic.IList&lt;string&gt; keyOps = null, Microsoft.Azure.KeyVault.Models.KeyAttributes keyAttributes = null, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.KeyBundle&gt; UpdateKeyAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string keyName, string keyVersion, class System.Collections.Generic.IList`1&lt;string&gt; keyOps, class Microsoft.Azure.KeyVault.Models.KeyAttributes keyAttributes, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Collections.Generic.IList{System.String},Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member UpdateKeyAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * string * System.Collections.Generic.IList&lt;string&gt; * Microsoft.Azure.KeyVault.Models.KeyAttributes * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateKeyAsync (operations, vaultBaseUrl, keyName, keyVersion, keyOps, keyAttributes, tags, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="keyName" Type="System.String" />
          <Parameter Name="keyVersion" Type="System.String" />
          <Parameter Name="keyOps" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
          <Parameter Name="keyAttributes" Type="Microsoft.Azure.KeyVault.Models.KeyAttributes" />
          <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="keyName">
            The name of key to update.
            </param>
          <param name="keyVersion">
            The version of the key to update.
            </param>
          <param name="keyOps">
            Json web key operations. For more information on possible key operations,
            see JsonWebKeyOperation.
            </param>
          <param name="keyAttributes" />
          <param name="tags">
            Application specific metadata in the form of key-value pairs.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            The update key operation changes specified attributes of a stored key and
            can be applied to any key type and key version stored in Azure Key Vault.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Collections.Generic.IList{System.String},Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="UpdateKeyAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyBundle&gt; UpdateKeyAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string keyName, string[] keyOps = null, Microsoft.Azure.KeyVault.Models.KeyAttributes attributes = null, System.Collections.Generic.Dictionary&lt;string,string&gt; tags = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.KeyBundle&gt; UpdateKeyAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string keyName, string[] keyOps, class Microsoft.Azure.KeyVault.Models.KeyAttributes attributes, class System.Collections.Generic.Dictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String[],Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.Dictionary{System.String,System.String},System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member UpdateKeyAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * string[] * Microsoft.Azure.KeyVault.Models.KeyAttributes * System.Collections.Generic.Dictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateKeyAsync (operations, vaultBaseUrl, keyName, keyOps, attributes, tags, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="keyName" Type="System.String" />
          <Parameter Name="keyOps" Type="System.String[]" />
          <Parameter Name="attributes" Type="Microsoft.Azure.KeyVault.Models.KeyAttributes" />
          <Parameter Name="tags" Type="System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">To be added.</param>
          <param name="vaultBaseUrl">The vault name, e.g. https://myvault.vault.azure.net</param>
          <param name="keyName">The key name</param>
          <param name="keyOps">Json web key operations. For more information on possible key operations, see JsonWebKeyOperation.</param>
          <param name="attributes">The new attributes for the key. For more information on key attributes, see KeyAttributes.</param>
          <param name="tags">Application-specific metadata in the form of key-value pairs</param>
          <param name="cancellationToken">To be added.</param>
          <summary>
            Updates the Key Attributes associated with the specified key
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String[],Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.Dictionary{System.String,System.String},System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="UpdateKeyAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyBundle&gt; UpdateKeyAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string keyIdentifier, string[] keyOps = null, Microsoft.Azure.KeyVault.Models.KeyAttributes attributes = null, System.Collections.Generic.Dictionary&lt;string,string&gt; tags = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.KeyBundle&gt; UpdateKeyAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string keyIdentifier, string[] keyOps, class Microsoft.Azure.KeyVault.Models.KeyAttributes attributes, class System.Collections.Generic.Dictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String[],Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.Dictionary{System.String,System.String},System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member UpdateKeyAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string[] * Microsoft.Azure.KeyVault.Models.KeyAttributes * System.Collections.Generic.Dictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateKeyAsync (operations, keyIdentifier, keyOps, attributes, tags, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="keyIdentifier" Type="System.String" />
          <Parameter Name="keyOps" Type="System.String[]" />
          <Parameter Name="attributes" Type="Microsoft.Azure.KeyVault.Models.KeyAttributes" />
          <Parameter Name="tags" Type="System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">To be added.</param>
          <param name="keyIdentifier">The key identifier</param>
          <param name="keyOps">Json web key operations. For more information, see JsonWebKeyOperation.</param>
          <param name="attributes">The new attributes for the key. For more information on key attributes, see KeyAttributes.</param>
          <param name="tags">Application-specific metadata in the form of key-value pairs</param>
          <param name="cancellationToken">Optional cancellation token</param>
          <summary>
            Updates the Key Attributes associated with the specified key
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String[],Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.Dictionary{System.String,System.String},System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="UpdateSasDefinitionAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.SasDefinitionBundle&gt; UpdateSasDefinitionAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string storageAccountName, string sasDefinitionName, string templateUri = null, string sasType = null, string validityPeriod = null, Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes sasDefinitionAttributes = null, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.SasDefinitionBundle&gt; UpdateSasDefinitionAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string storageAccountName, string sasDefinitionName, string templateUri, string sasType, string validityPeriod, class Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes sasDefinitionAttributes, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateSasDefinitionAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member UpdateSasDefinitionAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * string * string * string * string * Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.SasDefinitionBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateSasDefinitionAsync (operations, vaultBaseUrl, storageAccountName, sasDefinitionName, templateUri, sasType, validityPeriod, sasDefinitionAttributes, tags, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.SasDefinitionBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="storageAccountName" Type="System.String" />
          <Parameter Name="sasDefinitionName" Type="System.String" />
          <Parameter Name="templateUri" Type="System.String" />
          <Parameter Name="sasType" Type="System.String" />
          <Parameter Name="validityPeriod" Type="System.String" />
          <Parameter Name="sasDefinitionAttributes" Type="Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes" />
          <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="storageAccountName">
            The name of the storage account.
            </param>
          <param name="sasDefinitionName">
            The name of the SAS definition.
            </param>
          <param name="templateUri">
            The SAS definition token template signed with an arbitrary key.  Tokens
            created according to the SAS definition will have the same properties as
            the template.
            </param>
          <param name="sasType">
            The type of SAS token the SAS definition will create. Possible values
            include: 'account', 'service'
            </param>
          <param name="validityPeriod">
            The validity period of SAS tokens created according to the SAS definition.
            </param>
          <param name="sasDefinitionAttributes">
            The attributes of the SAS definition.
            </param>
          <param name="tags">
            Application specific metadata in the form of key-value pairs.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Updates the specified attributes associated with the given SAS definition.
            This operation requires the storage/setsas permission.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateSasDefinitionAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.SasDefinitionAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="UpdateSecretAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.SecretBundle&gt; UpdateSecretAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string secretIdentifier, string contentType = null, Microsoft.Azure.KeyVault.Models.SecretAttributes secretAttributes = null, System.Collections.Generic.Dictionary&lt;string,string&gt; tags = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.SecretBundle&gt; UpdateSecretAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string secretIdentifier, string contentType, class Microsoft.Azure.KeyVault.Models.SecretAttributes secretAttributes, class System.Collections.Generic.Dictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,Microsoft.Azure.KeyVault.Models.SecretAttributes,System.Collections.Generic.Dictionary{System.String,System.String},System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member UpdateSecretAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * Microsoft.Azure.KeyVault.Models.SecretAttributes * System.Collections.Generic.Dictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.SecretBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateSecretAsync (operations, secretIdentifier, contentType, secretAttributes, tags, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.SecretBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="secretIdentifier" Type="System.String" />
          <Parameter Name="contentType" Type="System.String" />
          <Parameter Name="secretAttributes" Type="Microsoft.Azure.KeyVault.Models.SecretAttributes" />
          <Parameter Name="tags" Type="System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">To be added.</param>
          <param name="secretIdentifier">The URL of the secret</param>
          <param name="contentType">Type of the secret value such as password.</param>
          <param name="secretAttributes">Attributes for the secret. For more information on possible attributes, see SecretAttributes.</param>
          <param name="tags">Application-specific metadata in the form of key-value pairs</param>
          <param name="cancellationToken">Optional cancellation token</param>
          <summary>
            Updates the attributes associated with the specified secret
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,Microsoft.Azure.KeyVault.Models.SecretAttributes,System.Collections.Generic.Dictionary{System.String,System.String},System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="UpdateSecretAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.SecretBundle&gt; UpdateSecretAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string secretName, string secretVersion, string contentType = null, Microsoft.Azure.KeyVault.Models.SecretAttributes secretAttributes = null, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.SecretBundle&gt; UpdateSecretAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string secretName, string secretVersion, string contentType, class Microsoft.Azure.KeyVault.Models.SecretAttributes secretAttributes, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.SecretAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member UpdateSecretAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * string * string * Microsoft.Azure.KeyVault.Models.SecretAttributes * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.SecretBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateSecretAsync (operations, vaultBaseUrl, secretName, secretVersion, contentType, secretAttributes, tags, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.SecretBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="secretName" Type="System.String" />
          <Parameter Name="secretVersion" Type="System.String" />
          <Parameter Name="contentType" Type="System.String" />
          <Parameter Name="secretAttributes" Type="Microsoft.Azure.KeyVault.Models.SecretAttributes" />
          <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="secretName">
            The name of the secret.
            </param>
          <param name="secretVersion">
            The version of the secret.
            </param>
          <param name="contentType">
            Type of the secret value such as a password.
            </param>
          <param name="secretAttributes">
            The secret management attributes.
            </param>
          <param name="tags">
            Application specific metadata in the form of key-value pairs.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Updates the attributes associated with a specified secret in a given key
            vault.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.SecretAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="UpdateStorageAccountAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.StorageBundle&gt; UpdateStorageAccountAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string storageAccountName, string activeKeyName = null, Nullable&lt;bool&gt; autoRegenerateKey = null, string regenerationPeriod = null, Microsoft.Azure.KeyVault.Models.StorageAccountAttributes storageAccountAttributes = null, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.StorageBundle&gt; UpdateStorageAccountAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string storageAccountName, string activeKeyName, valuetype System.Nullable`1&lt;bool&gt; autoRegenerateKey, string regenerationPeriod, class Microsoft.Azure.KeyVault.Models.StorageAccountAttributes storageAccountAttributes, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateStorageAccountAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,Microsoft.Azure.KeyVault.Models.StorageAccountAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member UpdateStorageAccountAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * string * Nullable&lt;bool&gt; * string * Microsoft.Azure.KeyVault.Models.StorageAccountAttributes * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.StorageBundle&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateStorageAccountAsync (operations, vaultBaseUrl, storageAccountName, activeKeyName, autoRegenerateKey, regenerationPeriod, storageAccountAttributes, tags, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.StorageBundle&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="storageAccountName" Type="System.String" />
          <Parameter Name="activeKeyName" Type="System.String" />
          <Parameter Name="autoRegenerateKey" Type="System.Nullable&lt;System.Boolean&gt;" />
          <Parameter Name="regenerationPeriod" Type="System.String" />
          <Parameter Name="storageAccountAttributes" Type="Microsoft.Azure.KeyVault.Models.StorageAccountAttributes" />
          <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="storageAccountName">
            The name of the storage account.
            </param>
          <param name="activeKeyName">
            The current active storage account key name.
            </param>
          <param name="autoRegenerateKey">
            whether keyvault should manage the storage account for the user.
            </param>
          <param name="regenerationPeriod">
            The key regeneration time duration specified in ISO-8601 format.
            </param>
          <param name="storageAccountAttributes">
            The attributes of the storage account.
            </param>
          <param name="tags">
            Application specific metadata in the form of key-value pairs.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Updates the specified attributes associated with the given storage account.
            This operation requires the storage/set/update permission.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateStorageAccountAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,Microsoft.Azure.KeyVault.Models.StorageAccountAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="VerifyAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; VerifyAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string keyIdentifier, string algorithm, byte[] digest, byte[] signature, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; VerifyAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string keyIdentifier, string algorithm, unsigned int8[] digest, unsigned int8[] signature, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Byte[],System.Byte[],System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member VerifyAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * byte[] * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync (operations, keyIdentifier, algorithm, digest, signature, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="keyIdentifier" Type="System.String" />
          <Parameter Name="algorithm" Type="System.String" />
          <Parameter Name="digest" Type="System.Byte[]" />
          <Parameter Name="signature" Type="System.Byte[]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">To be added.</param>
          <param name="keyIdentifier"> The global key identifier of the key used for signing </param>
          <param name="algorithm"> The signing/verification algorithm. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm.</param>
          <param name="digest"> The digest used for signing </param>
          <param name="signature"> The signature to be verified </param>
          <param name="cancellationToken">Optional cancellation token</param>
          <summary>
            Verifies a signature using the specified key
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Byte[],System.Byte[],System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="VerifyAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyVerifyResult&gt; VerifyAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string keyName, string keyVersion, string algorithm, byte[] digest, byte[] signature, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.KeyVerifyResult&gt; VerifyAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string keyName, string keyVersion, string algorithm, unsigned int8[] digest, unsigned int8[] signature, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Byte[],System.Byte[],System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member VerifyAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * string * string * byte[] * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyVerifyResult&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync (operations, vaultBaseUrl, keyName, keyVersion, algorithm, digest, signature, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyVerifyResult&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="keyName" Type="System.String" />
          <Parameter Name="keyVersion" Type="System.String" />
          <Parameter Name="algorithm" Type="System.String" />
          <Parameter Name="digest" Type="System.Byte[]" />
          <Parameter Name="signature" Type="System.Byte[]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="keyName">
            The name of the key.
            </param>
          <param name="keyVersion">
            The version of the key.
            </param>
          <param name="algorithm">
            The signing/verification algorithm. For more information on possible
            algorithm types, see JsonWebKeySignatureAlgorithm. Possible values include:
            'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256',
            'ES384', 'ES512', 'ECDSA256'
            </param>
          <param name="digest">
            The digest used for signing.
            </param>
          <param name="signature">
            The signature to be verified.
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Verifies a signature using a specified key.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Byte[],System.Byte[],System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="WrapKeyAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyOperationResult&gt; WrapKeyAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string keyIdentifier, string algorithm, byte[] key, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.KeyOperationResult&gt; WrapKeyAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string keyIdentifier, string algorithm, unsigned int8[] key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Byte[],System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member WrapKeyAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyOperationResult&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync (operations, keyIdentifier, algorithm, key, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyOperationResult&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="keyIdentifier" Type="System.String" />
          <Parameter Name="algorithm" Type="System.String" />
          <Parameter Name="key" Type="System.Byte[]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">To be added.</param>
          <param name="keyIdentifier"> The global key identifier of the key used for wrapping </param>
          <param name="algorithm"> The wrap algorithm. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm.</param>
          <param name="key"> The symmetric key </param>
          <param name="cancellationToken">Optional cancellation token</param>
          <summary>
            Wraps a symmetric key using the specified key
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Byte[],System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.KeyVault.IKeyVaultClient" />
      </Targets>
      <Member MemberName="WrapKeyAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyOperationResult&gt; WrapKeyAsync (this Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string keyName, string keyVersion, string algorithm, byte[] value, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Models.KeyOperationResult&gt; WrapKeyAsync(class Microsoft.Azure.KeyVault.IKeyVaultClient operations, string vaultBaseUrl, string keyName, string keyVersion, string algorithm, unsigned int8[] value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Byte[],System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member WrapKeyAsync : Microsoft.Azure.KeyVault.IKeyVaultClient * string * string * string * string * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyOperationResult&gt;" Usage="Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync (operations, vaultBaseUrl, keyName, keyVersion, algorithm, value, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Models.KeyOperationResult&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.KeyVault.IKeyVaultClient" RefType="this" />
          <Parameter Name="vaultBaseUrl" Type="System.String" />
          <Parameter Name="keyName" Type="System.String" />
          <Parameter Name="keyVersion" Type="System.String" />
          <Parameter Name="algorithm" Type="System.String" />
          <Parameter Name="value" Type="System.Byte[]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="vaultBaseUrl">
            The vault name, for example https://myvault.vault.azure.net.
            </param>
          <param name="keyName">
            The name of the key.
            </param>
          <param name="keyVersion">
            The version of the key.
            </param>
          <param name="algorithm">
            algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256',
            'RSA1_5'
            </param>
          <param name="value" />
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Wraps a symmetric key using a specified key.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.KeyVault.KeyVaultClientExtensions" Member="M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Byte[],System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
  </ExtensionMethods>
</Overview>
