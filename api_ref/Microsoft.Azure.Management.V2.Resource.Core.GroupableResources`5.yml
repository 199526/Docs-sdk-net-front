items:
- uid: Microsoft.Azure.Management.V2.Resource.Core.GroupableResources`5
  commentId: T:Microsoft.Azure.Management.V2.Resource.Core.GroupableResources`5
  id: GroupableResources`5
  parent: Microsoft.Azure.Management.V2.Resource.Core
  children:
  - Microsoft.Azure.Management.V2.Resource.Core.GroupableResources`5.#ctor(`3,`4)
  - Microsoft.Azure.Management.V2.Resource.Core.GroupableResources`5.GetByGroup(System.String,System.String)
  - Microsoft.Azure.Management.V2.Resource.Core.GroupableResources`5.GetByGroupAsync(System.String,System.String)
  - Microsoft.Azure.Management.V2.Resource.Core.GroupableResources`5.GetByGroupAsync(System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.V2.Resource.Core.GroupableResources`5.GetById(System.String)
  - Microsoft.Azure.Management.V2.Resource.Core.GroupableResources`5.GetByIdAsync(System.String)
  - Microsoft.Azure.Management.V2.Resource.Core.GroupableResources`5.GetByIdAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.V2.Resource.Core.GroupableResources`5.InnerCollection
  - Microsoft.Azure.Management.V2.Resource.Core.GroupableResources`5.MyManager
  langs:
  - csharp
  - vb
  name: GroupableResources<IFluentResourceT, FluentResourceT, InnerResourceT, InnerCollectionT, ManagerT>
  fullName: Microsoft.Azure.Management.V2.Resource.Core.GroupableResources<IFluentResourceT, FluentResourceT, InnerResourceT, InnerCollectionT, ManagerT>
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/GroupableResources.cs
      branch: c09fd548dd5625bdfafd1e6eff301aa537692f0d
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GroupableResources
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/GroupableResources.cs
    startLine: 10
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core
  syntax:
    content: 'public abstract class GroupableResources<IFluentResourceT, FluentResourceT, InnerResourceT, InnerCollectionT, ManagerT> : CreatableWrappers<IFluentResourceT, FluentResourceT, InnerResourceT>, ISupportsGettingByGroup<IFluentResourceT>, ISupportsGettingById<IFluentResourceT> where IFluentResourceT : IGroupableResource where FluentResourceT : IFluentResourceT where ManagerT : IManagerBase'
    content.vb: >-
      Public MustInherit Class GroupableResources(Of IFluentResourceT As IGroupableResource, FluentResourceT As IFluentResourceT, InnerResourceT, InnerCollectionT, ManagerT As IManagerBase)
          Inherits CreatableWrappers(Of IFluentResourceT, FluentResourceT, InnerResourceT)
          Implements ISupportsGettingByGroup(Of IFluentResourceT), ISupportsGettingById(Of IFluentResourceT)
    typeParameters:
    - id: IFluentResourceT
    - id: FluentResourceT
    - id: InnerResourceT
    - id: InnerCollectionT
    - id: ManagerT
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers{{IFluentResourceT},{FluentResourceT},{InnerResourceT}}
  - Microsoft.Azure.Management.V2.Resource.Core.CreatableWrappers{{IFluentResourceT},{FluentResourceT},{InnerResourceT}}
  implements:
  - Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup{{IFluentResourceT}}
  - Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById{{IFluentResourceT}}
  inheritedMembers:
  - Microsoft.Azure.Management.V2.Resource.Core.CreatableWrappers{{IFluentResourceT},{FluentResourceT},{InnerResourceT}}.WrapModel(System.String)
  - Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers{{IFluentResourceT},{FluentResourceT},{InnerResourceT}}.WrapModel({InnerResourceT})
  - Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers{{IFluentResourceT},{FluentResourceT},{InnerResourceT}}.WrapList(Microsoft.Azure.Management.V2.Resource.Core.PagedList{{InnerResourceT}})
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.GroupableResources(Of IFluentResourceT, FluentResourceT, InnerResourceT, InnerCollectionT, ManagerT)
  name.vb: GroupableResources(Of IFluentResourceT, FluentResourceT, InnerResourceT, InnerCollectionT, ManagerT)
- uid: Microsoft.Azure.Management.V2.Resource.Core.GroupableResources`5.#ctor(`3,`4)
  commentId: M:Microsoft.Azure.Management.V2.Resource.Core.GroupableResources`5.#ctor(`3,`4)
  id: '#ctor(`3,`4)'
  parent: Microsoft.Azure.Management.V2.Resource.Core.GroupableResources`5
  langs:
  - csharp
  - vb
  name: GroupableResources(InnerCollectionT, ManagerT)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.GroupableResources<IFluentResourceT, FluentResourceT, InnerResourceT, InnerCollectionT, ManagerT>.GroupableResources(InnerCollectionT, ManagerT)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/GroupableResources.cs
      branch: c09fd548dd5625bdfafd1e6eff301aa537692f0d
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/GroupableResources.cs
    startLine: 18
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core
  syntax:
    content: protected GroupableResources(InnerCollectionT innerCollection, ManagerT manager)
    content.vb: Protected Sub New(innerCollection As InnerCollectionT, manager As ManagerT)
    parameters:
    - id: innerCollection
      type: '{InnerCollectionT}'
    - id: manager
      type: '{ManagerT}'
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.GroupableResources(Of IFluentResourceT, FluentResourceT, InnerResourceT, InnerCollectionT, ManagerT).GroupableResources(InnerCollectionT, ManagerT)
- uid: Microsoft.Azure.Management.V2.Resource.Core.GroupableResources`5.InnerCollection
  commentId: P:Microsoft.Azure.Management.V2.Resource.Core.GroupableResources`5.InnerCollection
  id: InnerCollection
  parent: Microsoft.Azure.Management.V2.Resource.Core.GroupableResources`5
  langs:
  - csharp
  - vb
  name: InnerCollection
  fullName: Microsoft.Azure.Management.V2.Resource.Core.GroupableResources<IFluentResourceT, FluentResourceT, InnerResourceT, InnerCollectionT, ManagerT>.InnerCollection
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/GroupableResources.cs
      branch: c09fd548dd5625bdfafd1e6eff301aa537692f0d
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: InnerCollection
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/GroupableResources.cs
    startLine: 24
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core
  syntax:
    content: protected InnerCollectionT InnerCollection { get; }
    content.vb: Protected ReadOnly Property InnerCollection As InnerCollectionT
    parameters: []
    return:
      type: '{InnerCollectionT}'
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.GroupableResources(Of IFluentResourceT, FluentResourceT, InnerResourceT, InnerCollectionT, ManagerT).InnerCollection
- uid: Microsoft.Azure.Management.V2.Resource.Core.GroupableResources`5.MyManager
  commentId: P:Microsoft.Azure.Management.V2.Resource.Core.GroupableResources`5.MyManager
  id: MyManager
  parent: Microsoft.Azure.Management.V2.Resource.Core.GroupableResources`5
  langs:
  - csharp
  - vb
  name: MyManager
  fullName: Microsoft.Azure.Management.V2.Resource.Core.GroupableResources<IFluentResourceT, FluentResourceT, InnerResourceT, InnerCollectionT, ManagerT>.MyManager
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/GroupableResources.cs
      branch: c09fd548dd5625bdfafd1e6eff301aa537692f0d
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MyManager
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/GroupableResources.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core
  syntax:
    content: protected ManagerT MyManager { get; }
    content.vb: Protected ReadOnly Property MyManager As ManagerT
    parameters: []
    return:
      type: '{ManagerT}'
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.GroupableResources(Of IFluentResourceT, FluentResourceT, InnerResourceT, InnerCollectionT, ManagerT).MyManager
- uid: Microsoft.Azure.Management.V2.Resource.Core.GroupableResources`5.GetByGroupAsync(System.String,System.String)
  commentId: M:Microsoft.Azure.Management.V2.Resource.Core.GroupableResources`5.GetByGroupAsync(System.String,System.String)
  id: GetByGroupAsync(System.String,System.String)
  parent: Microsoft.Azure.Management.V2.Resource.Core.GroupableResources`5
  langs:
  - csharp
  - vb
  name: GetByGroupAsync(String, String)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.GroupableResources<IFluentResourceT, FluentResourceT, InnerResourceT, InnerCollectionT, ManagerT>.GetByGroupAsync(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/GroupableResources.cs
      branch: c09fd548dd5625bdfafd1e6eff301aa537692f0d
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetByGroupAsync
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/GroupableResources.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core
  syntax:
    content: public abstract Task<IFluentResourceT> GetByGroupAsync(string groupName, string name)
    content.vb: Public MustOverride Function GetByGroupAsync(groupName As String, name As String) As Task(Of IFluentResourceT)
    parameters:
    - id: groupName
      type: System.String
    - id: name
      type: System.String
    return:
      type: System.Threading.Tasks.Task{{IFluentResourceT}}
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.GroupableResources(Of IFluentResourceT, FluentResourceT, InnerResourceT, InnerCollectionT, ManagerT).GetByGroupAsync(System.String, System.String)
- uid: Microsoft.Azure.Management.V2.Resource.Core.GroupableResources`5.GetByGroup(System.String,System.String)
  commentId: M:Microsoft.Azure.Management.V2.Resource.Core.GroupableResources`5.GetByGroup(System.String,System.String)
  id: GetByGroup(System.String,System.String)
  parent: Microsoft.Azure.Management.V2.Resource.Core.GroupableResources`5
  langs:
  - csharp
  - vb
  name: GetByGroup(String, String)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.GroupableResources<IFluentResourceT, FluentResourceT, InnerResourceT, InnerCollectionT, ManagerT>.GetByGroup(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/GroupableResources.cs
      branch: c09fd548dd5625bdfafd1e6eff301aa537692f0d
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetByGroup
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/GroupableResources.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core
  syntax:
    content: public IFluentResourceT GetByGroup(string groupName, string name)
    content.vb: Public Function GetByGroup(groupName As String, name As String) As IFluentResourceT
    parameters:
    - id: groupName
      type: System.String
    - id: name
      type: System.String
    return:
      type: '{IFluentResourceT}'
  implements:
  - Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup{{IFluentResourceT}}.GetByGroup(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.GroupableResources(Of IFluentResourceT, FluentResourceT, InnerResourceT, InnerCollectionT, ManagerT).GetByGroup(System.String, System.String)
- uid: Microsoft.Azure.Management.V2.Resource.Core.GroupableResources`5.GetByIdAsync(System.String)
  commentId: M:Microsoft.Azure.Management.V2.Resource.Core.GroupableResources`5.GetByIdAsync(System.String)
  id: GetByIdAsync(System.String)
  parent: Microsoft.Azure.Management.V2.Resource.Core.GroupableResources`5
  langs:
  - csharp
  - vb
  name: GetByIdAsync(String)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.GroupableResources<IFluentResourceT, FluentResourceT, InnerResourceT, InnerCollectionT, ManagerT>.GetByIdAsync(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/GroupableResources.cs
      branch: c09fd548dd5625bdfafd1e6eff301aa537692f0d
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetByIdAsync
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/GroupableResources.cs
    startLine: 41
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core
  syntax:
    content: public Task<IFluentResourceT> GetByIdAsync(string id)
    content.vb: Public Function GetByIdAsync(id As String) As Task(Of IFluentResourceT)
    parameters:
    - id: id
      type: System.String
    return:
      type: System.Threading.Tasks.Task{{IFluentResourceT}}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.GroupableResources(Of IFluentResourceT, FluentResourceT, InnerResourceT, InnerCollectionT, ManagerT).GetByIdAsync(System.String)
- uid: Microsoft.Azure.Management.V2.Resource.Core.GroupableResources`5.GetById(System.String)
  commentId: M:Microsoft.Azure.Management.V2.Resource.Core.GroupableResources`5.GetById(System.String)
  id: GetById(System.String)
  parent: Microsoft.Azure.Management.V2.Resource.Core.GroupableResources`5
  langs:
  - csharp
  - vb
  name: GetById(String)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.GroupableResources<IFluentResourceT, FluentResourceT, InnerResourceT, InnerCollectionT, ManagerT>.GetById(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/GroupableResources.cs
      branch: c09fd548dd5625bdfafd1e6eff301aa537692f0d
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetById
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/GroupableResources.cs
    startLine: 49
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core
  syntax:
    content: public IFluentResourceT GetById(string id)
    content.vb: Public Function GetById(id As String) As IFluentResourceT
    parameters:
    - id: id
      type: System.String
    return:
      type: '{IFluentResourceT}'
  implements:
  - Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById{{IFluentResourceT}}.GetById(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.GroupableResources(Of IFluentResourceT, FluentResourceT, InnerResourceT, InnerCollectionT, ManagerT).GetById(System.String)
- uid: Microsoft.Azure.Management.V2.Resource.Core.GroupableResources`5.GetByIdAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.V2.Resource.Core.GroupableResources`5.GetByIdAsync(System.String,System.Threading.CancellationToken)
  id: GetByIdAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.V2.Resource.Core.GroupableResources`5
  langs:
  - csharp
  - vb
  name: GetByIdAsync(String, CancellationToken)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.GroupableResources<IFluentResourceT, FluentResourceT, InnerResourceT, InnerCollectionT, ManagerT>.GetByIdAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/GroupableResources.cs
      branch: c09fd548dd5625bdfafd1e6eff301aa537692f0d
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetByIdAsync
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/GroupableResources.cs
    startLine: 54
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core
  syntax:
    content: public Task<IFluentResourceT> GetByIdAsync(string id, CancellationToken cancellationToken = null)
    content.vb: Public Function GetByIdAsync(id As String, cancellationToken As CancellationToken = Nothing) As Task(Of IFluentResourceT)
    parameters:
    - id: id
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{{IFluentResourceT}}
  implements:
  - Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById{{IFluentResourceT}}.GetByIdAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.GroupableResources(Of IFluentResourceT, FluentResourceT, InnerResourceT, InnerCollectionT, ManagerT).GetByIdAsync(System.String, System.Threading.CancellationToken)
- uid: Microsoft.Azure.Management.V2.Resource.Core.GroupableResources`5.GetByGroupAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.V2.Resource.Core.GroupableResources`5.GetByGroupAsync(System.String,System.String,System.Threading.CancellationToken)
  id: GetByGroupAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.V2.Resource.Core.GroupableResources`5
  langs:
  - csharp
  - vb
  name: GetByGroupAsync(String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.GroupableResources<IFluentResourceT, FluentResourceT, InnerResourceT, InnerCollectionT, ManagerT>.GetByGroupAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/GroupableResources.cs
      branch: c09fd548dd5625bdfafd1e6eff301aa537692f0d
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetByGroupAsync
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/GroupableResources.cs
    startLine: 59
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core
  syntax:
    content: public Task<IFluentResourceT> GetByGroupAsync(string resourceGroupName, string name, CancellationToken cancellationToken = null)
    content.vb: Public Function GetByGroupAsync(resourceGroupName As String, name As String, cancellationToken As CancellationToken = Nothing) As Task(Of IFluentResourceT)
    parameters:
    - id: resourceGroupName
      type: System.String
    - id: name
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{{IFluentResourceT}}
  implements:
  - Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup{{IFluentResourceT}}.GetByGroupAsync(System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.GroupableResources(Of IFluentResourceT, FluentResourceT, InnerResourceT, InnerCollectionT, ManagerT).GetByGroupAsync(System.String, System.String, System.Threading.CancellationToken)
references:
- uid: Microsoft.Azure.Management.V2.Resource.Core
  isExternal: false
  name: Microsoft.Azure.Management.V2.Resource.Core
  fullName: Microsoft.Azure.Management.V2.Resource.Core
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers{{IFluentResourceT},{FluentResourceT},{InnerResourceT}}
  parent: Microsoft.Azure.Management.V2.Resource.Core
  definition: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers`3
  name: ReadableWrappers<IFluentResourceT, FluentResourceT, InnerResourceT>
  fullName: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers<IFluentResourceT, FluentResourceT, InnerResourceT>
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers(Of IFluentResourceT, FluentResourceT, InnerResourceT)
  name.vb: ReadableWrappers(Of IFluentResourceT, FluentResourceT, InnerResourceT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers`3
    name: ReadableWrappers
    fullName: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers
  - name: <
    fullName: <
  - name: IFluentResourceT
    fullName: IFluentResourceT
  - name: ', '
    fullName: ', '
  - name: FluentResourceT
    fullName: FluentResourceT
  - name: ', '
    fullName: ', '
  - name: InnerResourceT
    fullName: InnerResourceT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers`3
    name: ReadableWrappers
    fullName: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers
  - name: '(Of '
    fullName: '(Of '
  - name: IFluentResourceT
    fullName: IFluentResourceT
  - name: ', '
    fullName: ', '
  - name: FluentResourceT
    fullName: FluentResourceT
  - name: ', '
    fullName: ', '
  - name: InnerResourceT
    fullName: InnerResourceT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.V2.Resource.Core.CreatableWrappers{{IFluentResourceT},{FluentResourceT},{InnerResourceT}}
  parent: Microsoft.Azure.Management.V2.Resource.Core
  definition: Microsoft.Azure.Management.V2.Resource.Core.CreatableWrappers`3
  name: CreatableWrappers<IFluentResourceT, FluentResourceT, InnerResourceT>
  fullName: Microsoft.Azure.Management.V2.Resource.Core.CreatableWrappers<IFluentResourceT, FluentResourceT, InnerResourceT>
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.CreatableWrappers(Of IFluentResourceT, FluentResourceT, InnerResourceT)
  name.vb: CreatableWrappers(Of IFluentResourceT, FluentResourceT, InnerResourceT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.CreatableWrappers`3
    name: CreatableWrappers
    fullName: Microsoft.Azure.Management.V2.Resource.Core.CreatableWrappers
  - name: <
    fullName: <
  - name: IFluentResourceT
    fullName: IFluentResourceT
  - name: ', '
    fullName: ', '
  - name: FluentResourceT
    fullName: FluentResourceT
  - name: ', '
    fullName: ', '
  - name: InnerResourceT
    fullName: InnerResourceT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.CreatableWrappers`3
    name: CreatableWrappers
    fullName: Microsoft.Azure.Management.V2.Resource.Core.CreatableWrappers
  - name: '(Of '
    fullName: '(Of '
  - name: IFluentResourceT
    fullName: IFluentResourceT
  - name: ', '
    fullName: ', '
  - name: FluentResourceT
    fullName: FluentResourceT
  - name: ', '
    fullName: ', '
  - name: InnerResourceT
    fullName: InnerResourceT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup{{IFluentResourceT}}
  parent: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions
  definition: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup`1
  name: ISupportsGettingByGroup<IFluentResourceT>
  fullName: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup<IFluentResourceT>
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup(Of IFluentResourceT)
  name.vb: ISupportsGettingByGroup(Of IFluentResourceT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup`1
    name: ISupportsGettingByGroup
    fullName: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup
  - name: <
    fullName: <
  - name: IFluentResourceT
    fullName: IFluentResourceT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup`1
    name: ISupportsGettingByGroup
    fullName: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup
  - name: '(Of '
    fullName: '(Of '
  - name: IFluentResourceT
    fullName: IFluentResourceT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById{{IFluentResourceT}}
  parent: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions
  definition: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById`1
  name: ISupportsGettingById<IFluentResourceT>
  fullName: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById<IFluentResourceT>
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById(Of IFluentResourceT)
  name.vb: ISupportsGettingById(Of IFluentResourceT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById`1
    name: ISupportsGettingById
    fullName: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById
  - name: <
    fullName: <
  - name: IFluentResourceT
    fullName: IFluentResourceT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById`1
    name: ISupportsGettingById
    fullName: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById
  - name: '(Of '
    fullName: '(Of '
  - name: IFluentResourceT
    fullName: IFluentResourceT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.V2.Resource.Core.CreatableWrappers{{IFluentResourceT},{FluentResourceT},{InnerResourceT}}.WrapModel(System.String)
  parent: Microsoft.Azure.Management.V2.Resource.Core.CreatableWrappers{{IFluentResourceT},{FluentResourceT},{InnerResourceT}}
  definition: Microsoft.Azure.Management.V2.Resource.Core.CreatableWrappers`3.WrapModel(System.String)
  name: WrapModel(String)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.CreatableWrappers<IFluentResourceT, FluentResourceT, InnerResourceT>.WrapModel(System.String)
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.CreatableWrappers(Of IFluentResourceT, FluentResourceT, InnerResourceT).WrapModel(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.CreatableWrappers`3.WrapModel(System.String)
    name: WrapModel
    fullName: Microsoft.Azure.Management.V2.Resource.Core.CreatableWrappers<IFluentResourceT, FluentResourceT, InnerResourceT>.WrapModel
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.CreatableWrappers`3.WrapModel(System.String)
    name: WrapModel
    fullName: Microsoft.Azure.Management.V2.Resource.Core.CreatableWrappers(Of IFluentResourceT, FluentResourceT, InnerResourceT).WrapModel
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers{{IFluentResourceT},{FluentResourceT},{InnerResourceT}}.WrapModel({InnerResourceT})
  parent: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers{{IFluentResourceT},{FluentResourceT},{InnerResourceT}}
  definition: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers`3.WrapModel(`2)
  name: WrapModel(InnerResourceT)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers<IFluentResourceT, FluentResourceT, InnerResourceT>.WrapModel(InnerResourceT)
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers(Of IFluentResourceT, FluentResourceT, InnerResourceT).WrapModel(InnerResourceT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers`3.WrapModel(`2)
    name: WrapModel
    fullName: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers<IFluentResourceT, FluentResourceT, InnerResourceT>.WrapModel
  - name: (
    fullName: (
  - name: InnerResourceT
    fullName: InnerResourceT
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers`3.WrapModel(`2)
    name: WrapModel
    fullName: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers(Of IFluentResourceT, FluentResourceT, InnerResourceT).WrapModel
  - name: (
    fullName: (
  - name: InnerResourceT
    fullName: InnerResourceT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers{{IFluentResourceT},{FluentResourceT},{InnerResourceT}}.WrapList(Microsoft.Azure.Management.V2.Resource.Core.PagedList{{InnerResourceT}})
  parent: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers{{IFluentResourceT},{FluentResourceT},{InnerResourceT}}
  definition: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers`3.WrapList(Microsoft.Azure.Management.V2.Resource.Core.PagedList{`2})
  name: WrapList(PagedList<InnerResourceT>)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers<IFluentResourceT, FluentResourceT, InnerResourceT>.WrapList(Microsoft.Azure.Management.V2.Resource.Core.PagedList<InnerResourceT>)
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers(Of IFluentResourceT, FluentResourceT, InnerResourceT).WrapList(Microsoft.Azure.Management.V2.Resource.Core.PagedList(Of InnerResourceT))
  name.vb: WrapList(PagedList(Of InnerResourceT))
  spec.csharp:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers`3.WrapList(Microsoft.Azure.Management.V2.Resource.Core.PagedList{`2})
    name: WrapList
    fullName: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers<IFluentResourceT, FluentResourceT, InnerResourceT>.WrapList
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.V2.Resource.Core.PagedList`1
    name: PagedList
    fullName: Microsoft.Azure.Management.V2.Resource.Core.PagedList
  - name: <
    fullName: <
  - name: InnerResourceT
    fullName: InnerResourceT
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers`3.WrapList(Microsoft.Azure.Management.V2.Resource.Core.PagedList{`2})
    name: WrapList
    fullName: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers(Of IFluentResourceT, FluentResourceT, InnerResourceT).WrapList
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.V2.Resource.Core.PagedList`1
    name: PagedList
    fullName: Microsoft.Azure.Management.V2.Resource.Core.PagedList
  - name: '(Of '
    fullName: '(Of '
  - name: InnerResourceT
    fullName: InnerResourceT
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers`3
  parent: Microsoft.Azure.Management.V2.Resource.Core
  isExternal: false
  name: ReadableWrappers<IFluentResourceT, FluentResourceT, InnerResourceT>
  fullName: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers<IFluentResourceT, FluentResourceT, InnerResourceT>
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers(Of IFluentResourceT, FluentResourceT, InnerResourceT)
  name.vb: ReadableWrappers(Of IFluentResourceT, FluentResourceT, InnerResourceT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers`3
    name: ReadableWrappers
    fullName: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers
  - name: <
    fullName: <
  - name: IFluentResourceT
    fullName: IFluentResourceT
  - name: ', '
    fullName: ', '
  - name: FluentResourceT
    fullName: FluentResourceT
  - name: ', '
    fullName: ', '
  - name: InnerResourceT
    fullName: InnerResourceT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers`3
    name: ReadableWrappers
    fullName: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers
  - name: '(Of '
    fullName: '(Of '
  - name: IFluentResourceT
    fullName: IFluentResourceT
  - name: ', '
    fullName: ', '
  - name: FluentResourceT
    fullName: FluentResourceT
  - name: ', '
    fullName: ', '
  - name: InnerResourceT
    fullName: InnerResourceT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.V2.Resource.Core.CreatableWrappers`3
  parent: Microsoft.Azure.Management.V2.Resource.Core
  isExternal: false
  name: CreatableWrappers<IFluentResourceT, FluentResourceT, InnerResourceT>
  fullName: Microsoft.Azure.Management.V2.Resource.Core.CreatableWrappers<IFluentResourceT, FluentResourceT, InnerResourceT>
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.CreatableWrappers(Of IFluentResourceT, FluentResourceT, InnerResourceT)
  name.vb: CreatableWrappers(Of IFluentResourceT, FluentResourceT, InnerResourceT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.CreatableWrappers`3
    name: CreatableWrappers
    fullName: Microsoft.Azure.Management.V2.Resource.Core.CreatableWrappers
  - name: <
    fullName: <
  - name: IFluentResourceT
    fullName: IFluentResourceT
  - name: ', '
    fullName: ', '
  - name: FluentResourceT
    fullName: FluentResourceT
  - name: ', '
    fullName: ', '
  - name: InnerResourceT
    fullName: InnerResourceT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.CreatableWrappers`3
    name: CreatableWrappers
    fullName: Microsoft.Azure.Management.V2.Resource.Core.CreatableWrappers
  - name: '(Of '
    fullName: '(Of '
  - name: IFluentResourceT
    fullName: IFluentResourceT
  - name: ', '
    fullName: ', '
  - name: FluentResourceT
    fullName: FluentResourceT
  - name: ', '
    fullName: ', '
  - name: InnerResourceT
    fullName: InnerResourceT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup`1
  parent: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions
  isExternal: false
  name: ISupportsGettingByGroup<T>
  fullName: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup<T>
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup(Of T)
  name.vb: ISupportsGettingByGroup(Of T)
  spec.csharp:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup`1
    name: ISupportsGettingByGroup
    fullName: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup`1
    name: ISupportsGettingByGroup
    fullName: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions
  isExternal: false
  name: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions
  fullName: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions
- uid: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById`1
  parent: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions
  isExternal: false
  name: ISupportsGettingById<T>
  fullName: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById<T>
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById(Of T)
  name.vb: ISupportsGettingById(Of T)
  spec.csharp:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById`1
    name: ISupportsGettingById
    fullName: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById`1
    name: ISupportsGettingById
    fullName: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.V2.Resource.Core.CreatableWrappers`3.WrapModel(System.String)
  parent: Microsoft.Azure.Management.V2.Resource.Core.CreatableWrappers`3
  isExternal: true
  name: WrapModel(String)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.CreatableWrappers<IFluentResourceT, FluentResourceT, InnerResourceT>.WrapModel(System.String)
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.CreatableWrappers(Of IFluentResourceT, FluentResourceT, InnerResourceT).WrapModel(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.CreatableWrappers`3.WrapModel(System.String)
    name: WrapModel
    fullName: Microsoft.Azure.Management.V2.Resource.Core.CreatableWrappers<IFluentResourceT, FluentResourceT, InnerResourceT>.WrapModel
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.CreatableWrappers`3.WrapModel(System.String)
    name: WrapModel
    fullName: Microsoft.Azure.Management.V2.Resource.Core.CreatableWrappers(Of IFluentResourceT, FluentResourceT, InnerResourceT).WrapModel
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers`3.WrapModel(`2)
  parent: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers`3
  isExternal: false
  name: WrapModel(InnerResourceT)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers<IFluentResourceT, FluentResourceT, InnerResourceT>.WrapModel(InnerResourceT)
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers(Of IFluentResourceT, FluentResourceT, InnerResourceT).WrapModel(InnerResourceT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers`3.WrapModel(`2)
    name: WrapModel
    fullName: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers<IFluentResourceT, FluentResourceT, InnerResourceT>.WrapModel
  - name: (
    fullName: (
  - name: InnerResourceT
    fullName: InnerResourceT
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers`3.WrapModel(`2)
    name: WrapModel
    fullName: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers(Of IFluentResourceT, FluentResourceT, InnerResourceT).WrapModel
  - name: (
    fullName: (
  - name: InnerResourceT
    fullName: InnerResourceT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers`3.WrapList(Microsoft.Azure.Management.V2.Resource.Core.PagedList{`2})
  parent: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers`3
  isExternal: false
  name: WrapList(PagedList<InnerResourceT>)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers<IFluentResourceT, FluentResourceT, InnerResourceT>.WrapList(Microsoft.Azure.Management.V2.Resource.Core.PagedList<InnerResourceT>)
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers(Of IFluentResourceT, FluentResourceT, InnerResourceT).WrapList(Microsoft.Azure.Management.V2.Resource.Core.PagedList(Of InnerResourceT))
  name.vb: WrapList(PagedList(Of InnerResourceT))
  spec.csharp:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers`3.WrapList(Microsoft.Azure.Management.V2.Resource.Core.PagedList{`2})
    name: WrapList
    fullName: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers<IFluentResourceT, FluentResourceT, InnerResourceT>.WrapList
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.V2.Resource.Core.PagedList`1
    name: PagedList
    fullName: Microsoft.Azure.Management.V2.Resource.Core.PagedList
  - name: <
    fullName: <
  - name: InnerResourceT
    fullName: InnerResourceT
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers`3.WrapList(Microsoft.Azure.Management.V2.Resource.Core.PagedList{`2})
    name: WrapList
    fullName: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers(Of IFluentResourceT, FluentResourceT, InnerResourceT).WrapList
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.V2.Resource.Core.PagedList`1
    name: PagedList
    fullName: Microsoft.Azure.Management.V2.Resource.Core.PagedList
  - name: '(Of '
    fullName: '(Of '
  - name: InnerResourceT
    fullName: InnerResourceT
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: '{InnerCollectionT}'
  isExternal: false
  name: InnerCollectionT
  fullName: InnerCollectionT
- uid: '{ManagerT}'
  isExternal: false
  name: ManagerT
  fullName: ManagerT
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Threading.Tasks.Task{{IFluentResourceT}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IFluentResourceT>
  fullName: System.Threading.Tasks.Task<IFluentResourceT>
  fullname.vb: System.Threading.Tasks.Task(Of IFluentResourceT)
  name.vb: Task(Of IFluentResourceT)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: IFluentResourceT
    fullName: IFluentResourceT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: IFluentResourceT
    fullName: IFluentResourceT
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup{{IFluentResourceT}}.GetByGroup(System.String,System.String)
  parent: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup{{IFluentResourceT}}
  definition: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup`1.GetByGroup(System.String,System.String)
  name: GetByGroup(String, String)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup<IFluentResourceT>.GetByGroup(System.String, System.String)
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup(Of IFluentResourceT).GetByGroup(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup`1.GetByGroup(System.String,System.String)
    name: GetByGroup
    fullName: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup<IFluentResourceT>.GetByGroup
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup`1.GetByGroup(System.String,System.String)
    name: GetByGroup
    fullName: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup(Of IFluentResourceT).GetByGroup
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: '{IFluentResourceT}'
  isExternal: false
  name: IFluentResourceT
  fullName: IFluentResourceT
- uid: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup`1.GetByGroup(System.String,System.String)
  parent: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup`1
  isExternal: true
  name: GetByGroup(String, String)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup<T>.GetByGroup(System.String, System.String)
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup(Of T).GetByGroup(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup`1.GetByGroup(System.String,System.String)
    name: GetByGroup
    fullName: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup<T>.GetByGroup
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup`1.GetByGroup(System.String,System.String)
    name: GetByGroup
    fullName: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup(Of T).GetByGroup
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById{{IFluentResourceT}}.GetById(System.String)
  parent: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById{{IFluentResourceT}}
  definition: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById`1.GetById(System.String)
  name: GetById(String)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById<IFluentResourceT>.GetById(System.String)
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById(Of IFluentResourceT).GetById(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById`1.GetById(System.String)
    name: GetById
    fullName: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById<IFluentResourceT>.GetById
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById`1.GetById(System.String)
    name: GetById
    fullName: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById(Of IFluentResourceT).GetById
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById`1.GetById(System.String)
  parent: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById`1
  isExternal: true
  name: GetById(String)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById<T>.GetById(System.String)
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById(Of T).GetById(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById`1.GetById(System.String)
    name: GetById
    fullName: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById<T>.GetById
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById`1.GetById(System.String)
    name: GetById
    fullName: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById(Of T).GetById
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById{{IFluentResourceT}}.GetByIdAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById{{IFluentResourceT}}
  definition: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById`1.GetByIdAsync(System.String,System.Threading.CancellationToken)
  name: GetByIdAsync(String, CancellationToken)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById<IFluentResourceT>.GetByIdAsync(System.String, System.Threading.CancellationToken)
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById(Of IFluentResourceT).GetByIdAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById`1.GetByIdAsync(System.String,System.Threading.CancellationToken)
    name: GetByIdAsync
    fullName: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById<IFluentResourceT>.GetByIdAsync
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById`1.GetByIdAsync(System.String,System.Threading.CancellationToken)
    name: GetByIdAsync
    fullName: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById(Of IFluentResourceT).GetByIdAsync
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById`1.GetByIdAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById`1
  isExternal: true
  name: GetByIdAsync(String, CancellationToken)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById<T>.GetByIdAsync(System.String, System.Threading.CancellationToken)
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById(Of T).GetByIdAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById`1.GetByIdAsync(System.String,System.Threading.CancellationToken)
    name: GetByIdAsync
    fullName: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById<T>.GetByIdAsync
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById`1.GetByIdAsync(System.String,System.Threading.CancellationToken)
    name: GetByIdAsync
    fullName: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingById(Of T).GetByIdAsync
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup{{IFluentResourceT}}.GetByGroupAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup{{IFluentResourceT}}
  definition: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup`1.GetByGroupAsync(System.String,System.String,System.Threading.CancellationToken)
  name: GetByGroupAsync(String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup<IFluentResourceT>.GetByGroupAsync(System.String, System.String, System.Threading.CancellationToken)
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup(Of IFluentResourceT).GetByGroupAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup`1.GetByGroupAsync(System.String,System.String,System.Threading.CancellationToken)
    name: GetByGroupAsync
    fullName: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup<IFluentResourceT>.GetByGroupAsync
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup`1.GetByGroupAsync(System.String,System.String,System.Threading.CancellationToken)
    name: GetByGroupAsync
    fullName: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup(Of IFluentResourceT).GetByGroupAsync
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup`1.GetByGroupAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup`1
  isExternal: true
  name: GetByGroupAsync(String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup<T>.GetByGroupAsync(System.String, System.String, System.Threading.CancellationToken)
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup(Of T).GetByGroupAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup`1.GetByGroupAsync(System.String,System.String,System.Threading.CancellationToken)
    name: GetByGroupAsync
    fullName: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup<T>.GetByGroupAsync
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup`1.GetByGroupAsync(System.String,System.String,System.Threading.CancellationToken)
    name: GetByGroupAsync
    fullName: Microsoft.Azure.Management.V2.Resource.Core.CollectionActions.ISupportsGettingByGroup(Of T).GetByGroupAsync
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
