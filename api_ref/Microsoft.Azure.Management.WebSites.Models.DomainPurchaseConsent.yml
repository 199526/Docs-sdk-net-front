items:
- uid: Microsoft.Azure.Management.WebSites.Models.DomainPurchaseConsent
  commentId: T:Microsoft.Azure.Management.WebSites.Models.DomainPurchaseConsent
  id: DomainPurchaseConsent
  parent: Microsoft.Azure.Management.WebSites.Models
  children:
  - Microsoft.Azure.Management.WebSites.Models.DomainPurchaseConsent.#ctor
  - Microsoft.Azure.Management.WebSites.Models.DomainPurchaseConsent.#ctor(System.Collections.Generic.IList{System.String},System.String,System.Nullable{System.DateTime})
  - Microsoft.Azure.Management.WebSites.Models.DomainPurchaseConsent.AgreedAt
  - Microsoft.Azure.Management.WebSites.Models.DomainPurchaseConsent.AgreedBy
  - Microsoft.Azure.Management.WebSites.Models.DomainPurchaseConsent.AgreementKeys
  langs:
  - csharp
  - vb
  name: DomainPurchaseConsent
  fullName: Microsoft.Azure.Management.WebSites.Models.DomainPurchaseConsent
  type: Class
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/DomainPurchaseConsent.cs
      branch: ddb12890afed95d791fcb3d7a4af9681569bbabd
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DomainPurchaseConsent
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/DomainPurchaseConsent.cs
    startLine: 22
  assemblies:
  - Microsoft.Azure.Management.Websites
  packages:
  - Microsoft.Azure.Management.Websites(1.3.2-preview)
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nDomain purchase consent object representing acceptance of applicable\nlegal agreements\n"
  example: []
  syntax:
    content: public class DomainPurchaseConsent
    content.vb: Public Class DomainPurchaseConsent
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.WebSites.Models.DomainPurchaseConsent.#ctor
  commentId: M:Microsoft.Azure.Management.WebSites.Models.DomainPurchaseConsent.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.WebSites.Models.DomainPurchaseConsent
  langs:
  - csharp
  - vb
  name: DomainPurchaseConsent()
  fullName: Microsoft.Azure.Management.WebSites.Models.DomainPurchaseConsent.DomainPurchaseConsent()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/DomainPurchaseConsent.cs
      branch: ddb12890afed95d791fcb3d7a4af9681569bbabd
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/DomainPurchaseConsent.cs
    startLine: 27
  assemblies:
  - Microsoft.Azure.Management.Websites
  packages:
  - Microsoft.Azure.Management.Websites(1.3.2-preview)
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the DomainPurchaseConsent class.\n"
  example: []
  syntax:
    content: public DomainPurchaseConsent()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.DomainPurchaseConsent.#ctor(System.Collections.Generic.IList{System.String},System.String,System.Nullable{System.DateTime})
  commentId: M:Microsoft.Azure.Management.WebSites.Models.DomainPurchaseConsent.#ctor(System.Collections.Generic.IList{System.String},System.String,System.Nullable{System.DateTime})
  id: '#ctor(System.Collections.Generic.IList{System.String},System.String,System.Nullable{System.DateTime})'
  parent: Microsoft.Azure.Management.WebSites.Models.DomainPurchaseConsent
  langs:
  - csharp
  - vb
  name: DomainPurchaseConsent(IList<String>, String, Nullable<DateTime>)
  fullName: Microsoft.Azure.Management.WebSites.Models.DomainPurchaseConsent.DomainPurchaseConsent(System.Collections.Generic.IList<System.String>, System.String, System.Nullable<System.DateTime>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/DomainPurchaseConsent.cs
      branch: ddb12890afed95d791fcb3d7a4af9681569bbabd
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/DomainPurchaseConsent.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Management.Websites
  packages:
  - Microsoft.Azure.Management.Websites(1.3.2-preview)
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the DomainPurchaseConsent class.\n"
  example: []
  syntax:
    content: public DomainPurchaseConsent(IList<string> agreementKeys = null, string agreedBy = null, DateTime? agreedAt = null)
    content.vb: Public Sub New(agreementKeys As IList(Of String) = Nothing, agreedBy As String = Nothing, agreedAt As Date? = Nothing)
    parameters:
    - id: agreementKeys
      type: System.Collections.Generic.IList{System.String}
    - id: agreedBy
      type: System.String
    - id: agreedAt
      type: System.Nullable{System.DateTime}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.WebSites.Models.DomainPurchaseConsent.DomainPurchaseConsent(System.Collections.Generic.IList(Of System.String), System.String, System.Nullable(Of System.DateTime))
  name.vb: DomainPurchaseConsent(IList(Of String), String, Nullable(Of DateTime))
- uid: Microsoft.Azure.Management.WebSites.Models.DomainPurchaseConsent.AgreementKeys
  commentId: P:Microsoft.Azure.Management.WebSites.Models.DomainPurchaseConsent.AgreementKeys
  id: AgreementKeys
  parent: Microsoft.Azure.Management.WebSites.Models.DomainPurchaseConsent
  langs:
  - csharp
  - vb
  name: AgreementKeys
  fullName: Microsoft.Azure.Management.WebSites.Models.DomainPurchaseConsent.AgreementKeys
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/DomainPurchaseConsent.cs
      branch: ddb12890afed95d791fcb3d7a4af9681569bbabd
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AgreementKeys
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/DomainPurchaseConsent.cs
    startLine: 44
  assemblies:
  - Microsoft.Azure.Management.Websites
  packages:
  - Microsoft.Azure.Management.Websites(1.3.2-preview)
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nList of applicable legal agreement keys. This list can be\nretrieved using ListLegalAgreements Api under TopLevelDomain\nresource\n"
  example: []
  syntax:
    content: public IList<string> AgreementKeys { get; set; }
    content.vb: Public Property AgreementKeys As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.DomainPurchaseConsent.AgreedBy
  commentId: P:Microsoft.Azure.Management.WebSites.Models.DomainPurchaseConsent.AgreedBy
  id: AgreedBy
  parent: Microsoft.Azure.Management.WebSites.Models.DomainPurchaseConsent
  langs:
  - csharp
  - vb
  name: AgreedBy
  fullName: Microsoft.Azure.Management.WebSites.Models.DomainPurchaseConsent.AgreedBy
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/DomainPurchaseConsent.cs
      branch: ddb12890afed95d791fcb3d7a4af9681569bbabd
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AgreedBy
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/DomainPurchaseConsent.cs
    startLine: 50
  assemblies:
  - Microsoft.Azure.Management.Websites
  packages:
  - Microsoft.Azure.Management.Websites(1.3.2-preview)
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nClient IP address\n"
  example: []
  syntax:
    content: public string AgreedBy { get; set; }
    content.vb: Public Property AgreedBy As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.DomainPurchaseConsent.AgreedAt
  commentId: P:Microsoft.Azure.Management.WebSites.Models.DomainPurchaseConsent.AgreedAt
  id: AgreedAt
  parent: Microsoft.Azure.Management.WebSites.Models.DomainPurchaseConsent
  langs:
  - csharp
  - vb
  name: AgreedAt
  fullName: Microsoft.Azure.Management.WebSites.Models.DomainPurchaseConsent.AgreedAt
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/DomainPurchaseConsent.cs
      branch: ddb12890afed95d791fcb3d7a4af9681569bbabd
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AgreedAt
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/DomainPurchaseConsent.cs
    startLine: 56
  assemblies:
  - Microsoft.Azure.Management.Websites
  packages:
  - Microsoft.Azure.Management.Websites(1.3.2-preview)
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nTimestamp when the agreements were accepted\n"
  example: []
  syntax:
    content: public DateTime? AgreedAt { get; set; }
    content.vb: Public Property AgreedAt As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: Microsoft.Azure.Management.WebSites.Models
  fullName: Microsoft.Azure.Management.WebSites.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: true
  name: IList<T>
  fullName: System.Collections.Generic.IList<T>
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
