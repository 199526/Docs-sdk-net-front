### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.Scheduler.Models.GetCloudServiceResourceState
  commentId: T:Microsoft.WindowsAzure.Management.Scheduler.Models.GetCloudServiceResourceState
  id: GetCloudServiceResourceState
  parent: Microsoft.WindowsAzure.Management.Scheduler.Models
  children:
  - Microsoft.WindowsAzure.Management.Scheduler.Models.GetCloudServiceResourceState.NotFound
  - Microsoft.WindowsAzure.Management.Scheduler.Models.GetCloudServiceResourceState.Paused
  - Microsoft.WindowsAzure.Management.Scheduler.Models.GetCloudServiceResourceState.Started
  - Microsoft.WindowsAzure.Management.Scheduler.Models.GetCloudServiceResourceState.Stopped
  - Microsoft.WindowsAzure.Management.Scheduler.Models.GetCloudServiceResourceState.Unknown
  langs:
  - csharp
  - vb
  name: GetCloudServiceResourceState
  nameWithType: GetCloudServiceResourceState
  fullName: Microsoft.WindowsAzure.Management.Scheduler.Models.GetCloudServiceResourceState
  type: Class
  source:
    remote:
      path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/GetCloudServiceResourceState.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetCloudServiceResourceState
    path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/GetCloudServiceResourceState.cs
    startLine: 29
  assemblies:
  - Microsoft.WindowsAzure.Management.Scheduler
  namespace: Microsoft.WindowsAzure.Management.Scheduler.Models
  summary: "\nSpecifies the state for a cloud service resource.\n"
  example: []
  syntax:
    content: public static class GetCloudServiceResourceState
    content.vb: Public Module GetCloudServiceResourceState
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.WindowsAzure.Management.Scheduler.Models.GetCloudServiceResourceState.Unknown
  commentId: F:Microsoft.WindowsAzure.Management.Scheduler.Models.GetCloudServiceResourceState.Unknown
  id: Unknown
  parent: Microsoft.WindowsAzure.Management.Scheduler.Models.GetCloudServiceResourceState
  langs:
  - csharp
  - vb
  name: Unknown
  nameWithType: GetCloudServiceResourceState.Unknown
  fullName: Microsoft.WindowsAzure.Management.Scheduler.Models.GetCloudServiceResourceState.Unknown
  type: Field
  source:
    remote:
      path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/GetCloudServiceResourceState.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Unknown
    path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/GetCloudServiceResourceState.cs
    startLine: 35
  assemblies:
  - Microsoft.WindowsAzure.Management.Scheduler
  namespace: Microsoft.WindowsAzure.Management.Scheduler.Models
  summary: "\nThe resource state is unknown, there may have been a communicaiton\nfailure, or the resource has not yet been processed.\n"
  example: []
  syntax:
    content: public const string Unknown = "Unknown"
    content.vb: Public Const Unknown As String = "Unknown"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.Management.Scheduler.Models.GetCloudServiceResourceState.NotFound
  commentId: F:Microsoft.WindowsAzure.Management.Scheduler.Models.GetCloudServiceResourceState.NotFound
  id: NotFound
  parent: Microsoft.WindowsAzure.Management.Scheduler.Models.GetCloudServiceResourceState
  langs:
  - csharp
  - vb
  name: NotFound
  nameWithType: GetCloudServiceResourceState.NotFound
  fullName: Microsoft.WindowsAzure.Management.Scheduler.Models.GetCloudServiceResourceState.NotFound
  type: Field
  source:
    remote:
      path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/GetCloudServiceResourceState.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: NotFound
    path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/GetCloudServiceResourceState.cs
    startLine: 41
  assemblies:
  - Microsoft.WindowsAzure.Management.Scheduler
  namespace: Microsoft.WindowsAzure.Management.Scheduler.Models
  summary: "\nThe resource provider did not respond with information for the\nresource.\n"
  example: []
  syntax:
    content: public const string NotFound = "NotFound"
    content.vb: Public Const NotFound As String = "NotFound"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.Management.Scheduler.Models.GetCloudServiceResourceState.Started
  commentId: F:Microsoft.WindowsAzure.Management.Scheduler.Models.GetCloudServiceResourceState.Started
  id: Started
  parent: Microsoft.WindowsAzure.Management.Scheduler.Models.GetCloudServiceResourceState
  langs:
  - csharp
  - vb
  name: Started
  nameWithType: GetCloudServiceResourceState.Started
  fullName: Microsoft.WindowsAzure.Management.Scheduler.Models.GetCloudServiceResourceState.Started
  type: Field
  source:
    remote:
      path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/GetCloudServiceResourceState.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Started
    path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/GetCloudServiceResourceState.cs
    startLine: 46
  assemblies:
  - Microsoft.WindowsAzure.Management.Scheduler
  namespace: Microsoft.WindowsAzure.Management.Scheduler.Models
  summary: "\nThe resource has started and is running fine.\n"
  example: []
  syntax:
    content: public const string Started = "Started"
    content.vb: Public Const Started As String = "Started"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.Management.Scheduler.Models.GetCloudServiceResourceState.Stopped
  commentId: F:Microsoft.WindowsAzure.Management.Scheduler.Models.GetCloudServiceResourceState.Stopped
  id: Stopped
  parent: Microsoft.WindowsAzure.Management.Scheduler.Models.GetCloudServiceResourceState
  langs:
  - csharp
  - vb
  name: Stopped
  nameWithType: GetCloudServiceResourceState.Stopped
  fullName: Microsoft.WindowsAzure.Management.Scheduler.Models.GetCloudServiceResourceState.Stopped
  type: Field
  source:
    remote:
      path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/GetCloudServiceResourceState.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Stopped
    path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/GetCloudServiceResourceState.cs
    startLine: 51
  assemblies:
  - Microsoft.WindowsAzure.Management.Scheduler
  namespace: Microsoft.WindowsAzure.Management.Scheduler.Models
  summary: "\nThe resource was stopped due to an issue.\n"
  example: []
  syntax:
    content: public const string Stopped = "Stopped"
    content.vb: Public Const Stopped As String = "Stopped"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.Management.Scheduler.Models.GetCloudServiceResourceState.Paused
  commentId: F:Microsoft.WindowsAzure.Management.Scheduler.Models.GetCloudServiceResourceState.Paused
  id: Paused
  parent: Microsoft.WindowsAzure.Management.Scheduler.Models.GetCloudServiceResourceState
  langs:
  - csharp
  - vb
  name: Paused
  nameWithType: GetCloudServiceResourceState.Paused
  fullName: Microsoft.WindowsAzure.Management.Scheduler.Models.GetCloudServiceResourceState.Paused
  type: Field
  source:
    remote:
      path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/GetCloudServiceResourceState.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Paused
    path: src/ServiceManagement/Scheduler/SchedulerManagement/Generated/Models/GetCloudServiceResourceState.cs
    startLine: 57
  assemblies:
  - Microsoft.WindowsAzure.Management.Scheduler
  namespace: Microsoft.WindowsAzure.Management.Scheduler.Models
  summary: "\nThe resource was temporarily put on hold. This may be due to a\nmonetary event.\n"
  example: []
  syntax:
    content: public const string Paused = "Paused"
    content.vb: Public Const Paused As String = "Paused"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Microsoft.WindowsAzure.Management.Scheduler.Models
  commentId: N:Microsoft.WindowsAzure.Management.Scheduler.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Scheduler.Models
  nameWithType: Microsoft.WindowsAzure.Management.Scheduler.Models
  fullName: Microsoft.WindowsAzure.Management.Scheduler.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
