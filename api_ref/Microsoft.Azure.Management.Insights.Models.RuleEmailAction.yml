items:
- uid: Microsoft.Azure.Management.Insights.Models.RuleEmailAction
  commentId: T:Microsoft.Azure.Management.Insights.Models.RuleEmailAction
  id: RuleEmailAction
  parent: Microsoft.Azure.Management.Insights.Models
  children:
  - Microsoft.Azure.Management.Insights.Models.RuleEmailAction.#ctor
  - Microsoft.Azure.Management.Insights.Models.RuleEmailAction.#ctor(System.Nullable{System.Boolean},System.Collections.Generic.IList{System.String})
  - Microsoft.Azure.Management.Insights.Models.RuleEmailAction.CustomEmails
  - Microsoft.Azure.Management.Insights.Models.RuleEmailAction.SendToServiceOwners
  langs:
  - csharp
  - vb
  name: RuleEmailAction
  fullName: Microsoft.Azure.Management.Insights.Models.RuleEmailAction
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Insights/Microsoft.Azure.Insights/Generated/Management/Insights/Models/RuleEmailAction.cs
      branch: 4dc4bf42758194ef2b3a6bcf7711274d02e79f41
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RuleEmailAction
    path: src/ResourceManagement/Insights/Microsoft.Azure.Insights/Generated/Management/Insights/Models/RuleEmailAction.cs
    startLine: 16
  assemblies:
  - Microsoft.Azure.Insights
  packages:
  - Microsoft.Azure.Insights(0.14.0-preview)
  namespace: Microsoft.Azure.Management.Insights.Models
  summary: "\nSpecifies the action to send email when the rule condition is\nevaluated.\n"
  example: []
  syntax:
    content: 'public class RuleEmailAction : RuleAction'
    content.vb: >-
      Public Class RuleEmailAction
          Inherits RuleAction
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.Insights.Models.RuleAction
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Insights.Models.RuleEmailAction.#ctor
  commentId: M:Microsoft.Azure.Management.Insights.Models.RuleEmailAction.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Insights.Models.RuleEmailAction
  langs:
  - csharp
  - vb
  name: RuleEmailAction()
  fullName: Microsoft.Azure.Management.Insights.Models.RuleEmailAction.RuleEmailAction()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Insights/Microsoft.Azure.Insights/Generated/Management/Insights/Models/RuleEmailAction.cs
      branch: 4dc4bf42758194ef2b3a6bcf7711274d02e79f41
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Insights/Microsoft.Azure.Insights/Generated/Management/Insights/Models/RuleEmailAction.cs
    startLine: 22
  assemblies:
  - Microsoft.Azure.Insights
  packages:
  - Microsoft.Azure.Insights(0.14.0-preview)
  namespace: Microsoft.Azure.Management.Insights.Models
  summary: "\nInitializes a new instance of the RuleEmailAction class.\n"
  example: []
  syntax:
    content: public RuleEmailAction()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Insights.Models.RuleEmailAction.#ctor(System.Nullable{System.Boolean},System.Collections.Generic.IList{System.String})
  commentId: M:Microsoft.Azure.Management.Insights.Models.RuleEmailAction.#ctor(System.Nullable{System.Boolean},System.Collections.Generic.IList{System.String})
  id: '#ctor(System.Nullable{System.Boolean},System.Collections.Generic.IList{System.String})'
  parent: Microsoft.Azure.Management.Insights.Models.RuleEmailAction
  langs:
  - csharp
  - vb
  name: RuleEmailAction(Nullable<Boolean>, IList<String>)
  fullName: Microsoft.Azure.Management.Insights.Models.RuleEmailAction.RuleEmailAction(System.Nullable<System.Boolean>, System.Collections.Generic.IList<System.String>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Insights/Microsoft.Azure.Insights/Generated/Management/Insights/Models/RuleEmailAction.cs
      branch: 4dc4bf42758194ef2b3a6bcf7711274d02e79f41
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Insights/Microsoft.Azure.Insights/Generated/Management/Insights/Models/RuleEmailAction.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Insights
  packages:
  - Microsoft.Azure.Insights(0.14.0-preview)
  namespace: Microsoft.Azure.Management.Insights.Models
  summary: "\nInitializes a new instance of the RuleEmailAction class.\n"
  example: []
  syntax:
    content: public RuleEmailAction(bool ? sendToServiceOwners = null, IList<string> customEmails = null)
    content.vb: Public Sub New(sendToServiceOwners As Boolean? = Nothing, customEmails As IList(Of String) = Nothing)
    parameters:
    - id: sendToServiceOwners
      type: System.Nullable{System.Boolean}
      description: >-
        the flag to send e-mails to the

        service owners. Whether the administrators (service and

        co-adiminstrators) of the service should be notified when the

        alert is activated.
    - id: customEmails
      type: System.Collections.Generic.IList{System.String}
      description: >-
        the list of administrator's custom

        email addresses notifiy of the activation of the alert.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Insights.Models.RuleEmailAction.RuleEmailAction(System.Nullable(Of System.Boolean), System.Collections.Generic.IList(Of System.String))
  name.vb: RuleEmailAction(Nullable(Of Boolean), IList(Of String))
- uid: Microsoft.Azure.Management.Insights.Models.RuleEmailAction.SendToServiceOwners
  commentId: P:Microsoft.Azure.Management.Insights.Models.RuleEmailAction.SendToServiceOwners
  id: SendToServiceOwners
  parent: Microsoft.Azure.Management.Insights.Models.RuleEmailAction
  langs:
  - csharp
  - vb
  name: SendToServiceOwners
  fullName: Microsoft.Azure.Management.Insights.Models.RuleEmailAction.SendToServiceOwners
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Insights/Microsoft.Azure.Insights/Generated/Management/Insights/Models/RuleEmailAction.cs
      branch: 4dc4bf42758194ef2b3a6bcf7711274d02e79f41
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SendToServiceOwners
    path: src/ResourceManagement/Insights/Microsoft.Azure.Insights/Generated/Management/Insights/Models/RuleEmailAction.cs
    startLine: 44
  assemblies:
  - Microsoft.Azure.Insights
  packages:
  - Microsoft.Azure.Insights(0.14.0-preview)
  namespace: Microsoft.Azure.Management.Insights.Models
  summary: "\nGets or sets the flag to send e-mails to the service owners.\nWhether the administrators (service and co-adiminstrators) of the\nservice should be notified when the alert is activated.\n"
  example: []
  syntax:
    content: public bool ? SendToServiceOwners { get; set; }
    content.vb: Public Property SendToServiceOwners As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Insights.Models.RuleEmailAction.CustomEmails
  commentId: P:Microsoft.Azure.Management.Insights.Models.RuleEmailAction.CustomEmails
  id: CustomEmails
  parent: Microsoft.Azure.Management.Insights.Models.RuleEmailAction
  langs:
  - csharp
  - vb
  name: CustomEmails
  fullName: Microsoft.Azure.Management.Insights.Models.RuleEmailAction.CustomEmails
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Insights/Microsoft.Azure.Insights/Generated/Management/Insights/Models/RuleEmailAction.cs
      branch: 4dc4bf42758194ef2b3a6bcf7711274d02e79f41
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CustomEmails
    path: src/ResourceManagement/Insights/Microsoft.Azure.Insights/Generated/Management/Insights/Models/RuleEmailAction.cs
    startLine: 51
  assemblies:
  - Microsoft.Azure.Insights
  packages:
  - Microsoft.Azure.Insights(0.14.0-preview)
  namespace: Microsoft.Azure.Management.Insights.Models
  summary: "\nGets or sets the list of administrator's custom email addresses\nnotifiy of the activation of the alert.\n"
  example: []
  syntax:
    content: public IList<string> CustomEmails { get; set; }
    content.vb: Public Property CustomEmails As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Insights.Models
  isExternal: false
  name: Microsoft.Azure.Management.Insights.Models
  fullName: Microsoft.Azure.Management.Insights.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.Insights.Models.RuleAction
  parent: Microsoft.Azure.Management.Insights.Models
  isExternal: false
  name: RuleAction
  fullName: Microsoft.Azure.Management.Insights.Models.RuleAction
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: true
  name: IList<T>
  fullName: System.Collections.Generic.IList<T>
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
