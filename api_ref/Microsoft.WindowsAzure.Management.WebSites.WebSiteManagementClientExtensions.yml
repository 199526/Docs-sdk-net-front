### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.WebSites.WebSiteManagementClientExtensions
  commentId: T:Microsoft.WindowsAzure.Management.WebSites.WebSiteManagementClientExtensions
  id: WebSiteManagementClientExtensions
  parent: Microsoft.WindowsAzure.Management.WebSites
  children:
  - Microsoft.WindowsAzure.Management.WebSites.WebSiteManagementClientExtensions.GetOperationStatus(Microsoft.WindowsAzure.Management.WebSites.IWebSiteManagementClient,System.String,System.String,System.String)
  - Microsoft.WindowsAzure.Management.WebSites.WebSiteManagementClientExtensions.GetOperationStatusAsync(Microsoft.WindowsAzure.Management.WebSites.IWebSiteManagementClient,System.String,System.String,System.String)
  - Microsoft.WindowsAzure.Management.WebSites.WebSiteManagementClientExtensions.RegisterSubscription(Microsoft.WindowsAzure.Management.WebSites.IWebSiteManagementClient)
  - Microsoft.WindowsAzure.Management.WebSites.WebSiteManagementClientExtensions.RegisterSubscriptionAsync(Microsoft.WindowsAzure.Management.WebSites.IWebSiteManagementClient)
  - Microsoft.WindowsAzure.Management.WebSites.WebSiteManagementClientExtensions.UnregisterSubscription(Microsoft.WindowsAzure.Management.WebSites.IWebSiteManagementClient)
  - Microsoft.WindowsAzure.Management.WebSites.WebSiteManagementClientExtensions.UnregisterSubscriptionAsync(Microsoft.WindowsAzure.Management.WebSites.IWebSiteManagementClient)
  langs:
  - csharp
  - vb
  name: WebSiteManagementClientExtensions
  nameWithType: WebSiteManagementClientExtensions
  fullName: Microsoft.WindowsAzure.Management.WebSites.WebSiteManagementClientExtensions
  type: Class
  source:
    remote:
      path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/WebSiteManagementClientExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WebSiteManagementClientExtensions
    path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/WebSiteManagementClientExtensions.cs
    startLine: 39
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites
  summary: "\nThe Web Sites Management API provides a RESTful set of web services\nthat interact with the Windows Azure Web Sites service to manage your\nweb sites. The API has entities that capture the relationship between\nan end user and Windows Azure Web Sites service.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/dn166981.aspx for\nmore information)\n"
  example: []
  syntax:
    content: public static class WebSiteManagementClientExtensions
    content.vb: Public Module WebSiteManagementClientExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.WindowsAzure.Management.WebSites.WebSiteManagementClientExtensions.GetOperationStatus(Microsoft.WindowsAzure.Management.WebSites.IWebSiteManagementClient,System.String,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.WebSites.WebSiteManagementClientExtensions.GetOperationStatus(Microsoft.WindowsAzure.Management.WebSites.IWebSiteManagementClient,System.String,System.String,System.String)
  id: GetOperationStatus(Microsoft.WindowsAzure.Management.WebSites.IWebSiteManagementClient,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.WebSites.WebSiteManagementClientExtensions
  langs:
  - csharp
  - vb
  name: GetOperationStatus(IWebSiteManagementClient, String, String, String)
  nameWithType: WebSiteManagementClientExtensions.GetOperationStatus(IWebSiteManagementClient, String, String, String)
  fullName: Microsoft.WindowsAzure.Management.WebSites.WebSiteManagementClientExtensions.GetOperationStatus(Microsoft.WindowsAzure.Management.WebSites.IWebSiteManagementClient, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/WebSiteManagementClientExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetOperationStatus
    path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/WebSiteManagementClientExtensions.cs
    startLine: 73
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites
  summary: "\nThe Get Operation Status operation returns the status of the\nspecified operation. After calling a long-running operation, you\ncan call Get Operation Status to determine whether the operation\nhas succeeded, failed, timed out, or is still in progress.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/ee460783.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static WebSiteOperationStatusResponse GetOperationStatus(this IWebSiteManagementClient operations, string webSpaceName, string siteName, string operationId)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetOperationStatus(operations As IWebSiteManagementClient, webSpaceName As String, siteName As String, operationId As String) As WebSiteOperationStatusResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.WebSites.IWebSiteManagementClient
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.WebSites.IWebSiteManagementClient.\n"
    - id: webSpaceName
      type: System.String
      description: "\nRequired. The name of the webspace for the website where the\noperation was targeted.\n"
    - id: siteName
      type: System.String
      description: "\nRequired. The name of the site where the operation was targeted.\n"
    - id: operationId
      type: System.String
      description: "\nRequired. The operation ID for the operation you wish to track. The\noperation ID is returned in the ID field in the body of the\nresponse for long-running operations.\n"
    return:
      type: Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteOperationStatusResponse
      description: "\nThe response body contains the status of the specified long-running\noperation, indicating whether it has succeeded, is inprogress, has\ntimed out, or has failed. Note that this status is distinct from\nthe HTTP status code returned for the Get Operation Status\noperation itself. If the long-running operation failed, the\nresponse body includes error information regarding the failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.WebSites.WebSiteManagementClientExtensions.GetOperationStatusAsync(Microsoft.WindowsAzure.Management.WebSites.IWebSiteManagementClient,System.String,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.WebSites.WebSiteManagementClientExtensions.GetOperationStatusAsync(Microsoft.WindowsAzure.Management.WebSites.IWebSiteManagementClient,System.String,System.String,System.String)
  id: GetOperationStatusAsync(Microsoft.WindowsAzure.Management.WebSites.IWebSiteManagementClient,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.WebSites.WebSiteManagementClientExtensions
  langs:
  - csharp
  - vb
  name: GetOperationStatusAsync(IWebSiteManagementClient, String, String, String)
  nameWithType: WebSiteManagementClientExtensions.GetOperationStatusAsync(IWebSiteManagementClient, String, String, String)
  fullName: Microsoft.WindowsAzure.Management.WebSites.WebSiteManagementClientExtensions.GetOperationStatusAsync(Microsoft.WindowsAzure.Management.WebSites.IWebSiteManagementClient, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/WebSiteManagementClientExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetOperationStatusAsync
    path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/WebSiteManagementClientExtensions.cs
    startLine: 114
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites
  summary: "\nThe Get Operation Status operation returns the status of the\nspecified operation. After calling a long-running operation, you\ncan call Get Operation Status to determine whether the operation\nhas succeeded, failed, timed out, or is still in progress.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/ee460783.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static Task<WebSiteOperationStatusResponse> GetOperationStatusAsync(this IWebSiteManagementClient operations, string webSpaceName, string siteName, string operationId)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetOperationStatusAsync(operations As IWebSiteManagementClient, webSpaceName As String, siteName As String, operationId As String) As Task(Of WebSiteOperationStatusResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.WebSites.IWebSiteManagementClient
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.WebSites.IWebSiteManagementClient.\n"
    - id: webSpaceName
      type: System.String
      description: "\nRequired. The name of the webspace for the website where the\noperation was targeted.\n"
    - id: siteName
      type: System.String
      description: "\nRequired. The name of the site where the operation was targeted.\n"
    - id: operationId
      type: System.String
      description: "\nRequired. The operation ID for the operation you wish to track. The\noperation ID is returned in the ID field in the body of the\nresponse for long-running operations.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteOperationStatusResponse}
      description: "\nThe response body contains the status of the specified long-running\noperation, indicating whether it has succeeded, is inprogress, has\ntimed out, or has failed. Note that this status is distinct from\nthe HTTP status code returned for the Get Operation Status\noperation itself. If the long-running operation failed, the\nresponse body includes error information regarding the failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.WebSites.WebSiteManagementClientExtensions.RegisterSubscription(Microsoft.WindowsAzure.Management.WebSites.IWebSiteManagementClient)
  commentId: M:Microsoft.WindowsAzure.Management.WebSites.WebSiteManagementClientExtensions.RegisterSubscription(Microsoft.WindowsAzure.Management.WebSites.IWebSiteManagementClient)
  id: RegisterSubscription(Microsoft.WindowsAzure.Management.WebSites.IWebSiteManagementClient)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.WebSites.WebSiteManagementClientExtensions
  langs:
  - csharp
  - vb
  name: RegisterSubscription(IWebSiteManagementClient)
  nameWithType: WebSiteManagementClientExtensions.RegisterSubscription(IWebSiteManagementClient)
  fullName: Microsoft.WindowsAzure.Management.WebSites.WebSiteManagementClientExtensions.RegisterSubscription(Microsoft.WindowsAzure.Management.WebSites.IWebSiteManagementClient)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/WebSiteManagementClientExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RegisterSubscription
    path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/WebSiteManagementClientExtensions.cs
    startLine: 130
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites
  summary: "\nRegister your subscription to use Azure Web Sites.\n"
  example: []
  syntax:
    content: public static AzureOperationResponse RegisterSubscription(this IWebSiteManagementClient operations)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RegisterSubscription(operations As IWebSiteManagementClient) As AzureOperationResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.WebSites.IWebSiteManagementClient
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.WebSites.IWebSiteManagementClient.\n"
    return:
      type: AzureOperationResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.WebSites.WebSiteManagementClientExtensions.RegisterSubscriptionAsync(Microsoft.WindowsAzure.Management.WebSites.IWebSiteManagementClient)
  commentId: M:Microsoft.WindowsAzure.Management.WebSites.WebSiteManagementClientExtensions.RegisterSubscriptionAsync(Microsoft.WindowsAzure.Management.WebSites.IWebSiteManagementClient)
  id: RegisterSubscriptionAsync(Microsoft.WindowsAzure.Management.WebSites.IWebSiteManagementClient)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.WebSites.WebSiteManagementClientExtensions
  langs:
  - csharp
  - vb
  name: RegisterSubscriptionAsync(IWebSiteManagementClient)
  nameWithType: WebSiteManagementClientExtensions.RegisterSubscriptionAsync(IWebSiteManagementClient)
  fullName: Microsoft.WindowsAzure.Management.WebSites.WebSiteManagementClientExtensions.RegisterSubscriptionAsync(Microsoft.WindowsAzure.Management.WebSites.IWebSiteManagementClient)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/WebSiteManagementClientExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RegisterSubscriptionAsync
    path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/WebSiteManagementClientExtensions.cs
    startLine: 150
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites
  summary: "\nRegister your subscription to use Azure Web Sites.\n"
  example: []
  syntax:
    content: public static Task<AzureOperationResponse> RegisterSubscriptionAsync(this IWebSiteManagementClient operations)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RegisterSubscriptionAsync(operations As IWebSiteManagementClient) As Task(Of AzureOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.WebSites.IWebSiteManagementClient
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.WebSites.IWebSiteManagementClient.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.WebSites.WebSiteManagementClientExtensions.UnregisterSubscription(Microsoft.WindowsAzure.Management.WebSites.IWebSiteManagementClient)
  commentId: M:Microsoft.WindowsAzure.Management.WebSites.WebSiteManagementClientExtensions.UnregisterSubscription(Microsoft.WindowsAzure.Management.WebSites.IWebSiteManagementClient)
  id: UnregisterSubscription(Microsoft.WindowsAzure.Management.WebSites.IWebSiteManagementClient)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.WebSites.WebSiteManagementClientExtensions
  langs:
  - csharp
  - vb
  name: UnregisterSubscription(IWebSiteManagementClient)
  nameWithType: WebSiteManagementClientExtensions.UnregisterSubscription(IWebSiteManagementClient)
  fullName: Microsoft.WindowsAzure.Management.WebSites.WebSiteManagementClientExtensions.UnregisterSubscription(Microsoft.WindowsAzure.Management.WebSites.IWebSiteManagementClient)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/WebSiteManagementClientExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UnregisterSubscription
    path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/WebSiteManagementClientExtensions.cs
    startLine: 166
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites
  summary: "\nUnregister your subscription to use Azure Web Sites.\n"
  example: []
  syntax:
    content: public static AzureOperationResponse UnregisterSubscription(this IWebSiteManagementClient operations)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UnregisterSubscription(operations As IWebSiteManagementClient) As AzureOperationResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.WebSites.IWebSiteManagementClient
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.WebSites.IWebSiteManagementClient.\n"
    return:
      type: AzureOperationResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.WebSites.WebSiteManagementClientExtensions.UnregisterSubscriptionAsync(Microsoft.WindowsAzure.Management.WebSites.IWebSiteManagementClient)
  commentId: M:Microsoft.WindowsAzure.Management.WebSites.WebSiteManagementClientExtensions.UnregisterSubscriptionAsync(Microsoft.WindowsAzure.Management.WebSites.IWebSiteManagementClient)
  id: UnregisterSubscriptionAsync(Microsoft.WindowsAzure.Management.WebSites.IWebSiteManagementClient)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.WebSites.WebSiteManagementClientExtensions
  langs:
  - csharp
  - vb
  name: UnregisterSubscriptionAsync(IWebSiteManagementClient)
  nameWithType: WebSiteManagementClientExtensions.UnregisterSubscriptionAsync(IWebSiteManagementClient)
  fullName: Microsoft.WindowsAzure.Management.WebSites.WebSiteManagementClientExtensions.UnregisterSubscriptionAsync(Microsoft.WindowsAzure.Management.WebSites.IWebSiteManagementClient)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/WebSiteManagementClientExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UnregisterSubscriptionAsync
    path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/WebSiteManagementClientExtensions.cs
    startLine: 186
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites
  summary: "\nUnregister your subscription to use Azure Web Sites.\n"
  example: []
  syntax:
    content: public static Task<AzureOperationResponse> UnregisterSubscriptionAsync(this IWebSiteManagementClient operations)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UnregisterSubscriptionAsync(operations As IWebSiteManagementClient) As Task(Of AzureOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.WebSites.IWebSiteManagementClient
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.WebSites.IWebSiteManagementClient.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.WindowsAzure.Management.WebSites
  commentId: N:Microsoft.WindowsAzure.Management.WebSites
  isExternal: false
  name: Microsoft.WindowsAzure.Management.WebSites
  nameWithType: Microsoft.WindowsAzure.Management.WebSites
  fullName: Microsoft.WindowsAzure.Management.WebSites
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.Management.WebSites.IWebSiteManagementClient
  commentId: T:Microsoft.WindowsAzure.Management.WebSites.IWebSiteManagementClient
  parent: Microsoft.WindowsAzure.Management.WebSites
  isExternal: false
  name: IWebSiteManagementClient
  nameWithType: IWebSiteManagementClient
  fullName: Microsoft.WindowsAzure.Management.WebSites.IWebSiteManagementClient
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteOperationStatusResponse
  commentId: T:Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteOperationStatusResponse
  parent: Microsoft.WindowsAzure.Management.WebSites.Models
  isExternal: false
  name: WebSiteOperationStatusResponse
  nameWithType: WebSiteOperationStatusResponse
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteOperationStatusResponse
- uid: Microsoft.WindowsAzure.Management.WebSites.Models
  commentId: N:Microsoft.WindowsAzure.Management.WebSites.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.WebSites.Models
  nameWithType: Microsoft.WindowsAzure.Management.WebSites.Models
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models
- uid: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteOperationStatusResponse}
  commentId: T:System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteOperationStatusResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<WebSiteOperationStatusResponse>
  nameWithType: Task<WebSiteOperationStatusResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteOperationStatusResponse>
  nameWithType.vb: Task(Of WebSiteOperationStatusResponse)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteOperationStatusResponse)
  name.vb: Task(Of WebSiteOperationStatusResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteOperationStatusResponse
    name: WebSiteOperationStatusResponse
    nameWithType: WebSiteOperationStatusResponse
    fullName: Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteOperationStatusResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteOperationStatusResponse
    name: WebSiteOperationStatusResponse
    nameWithType: WebSiteOperationStatusResponse
    fullName: Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteOperationStatusResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: AzureOperationResponse
  isExternal: true
  name: AzureOperationResponse
  nameWithType: AzureOperationResponse
  fullName: AzureOperationResponse
- uid: System.Threading.Tasks.Task{AzureOperationResponse}
  commentId: T:System.Threading.Tasks.Task{AzureOperationResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AzureOperationResponse>
  nameWithType: Task<AzureOperationResponse>
  fullName: System.Threading.Tasks.Task<AzureOperationResponse>
  nameWithType.vb: Task(Of AzureOperationResponse)
  fullname.vb: System.Threading.Tasks.Task(Of AzureOperationResponse)
  name.vb: Task(Of AzureOperationResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AzureOperationResponse
    name: AzureOperationResponse
    nameWithType: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AzureOperationResponse
    name: AzureOperationResponse
    nameWithType: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
