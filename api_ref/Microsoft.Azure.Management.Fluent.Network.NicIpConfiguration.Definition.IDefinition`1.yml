items:
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IDefinition`1
  commentId: T:Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IDefinition`1
  id: IDefinition`1
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition
  children: []
  langs:
  - csharp
  - vb
  name: IDefinition<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IDefinition<ParentT>
  type: Interface
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/NicIpConfiguration/Definition/IDefinition.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IDefinition
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/NicIpConfiguration/Definition/IDefinition.cs
    startLine: 140
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition
  syntax:
    content: 'public interface IDefinition<ParentT> : IBlank<ParentT>, IWithAttach<ParentT>, IInDefinition<ParentT>, IWithPublicIpAddress<ParentT>, IWithPublicIpAddress<IWithAttach<ParentT>>, IWithExistingPublicIpAddress<IWithAttach<ParentT>>, IWithNewPublicIpAddress<IWithAttach<ParentT>>, IWithLoadBalancer<ParentT>, IWithNetwork<ParentT>, IWithSubnet<ParentT>, IWithPrivateIp<ParentT>, IWithPrivateIpAddress<IWithAttach<ParentT>>'
    content.vb: >-
      Public Interface IDefinition(Of ParentT)
          Inherits IBlank(Of ParentT), IWithAttach(Of ParentT), IWithNetwork(Of ParentT), IWithSubnet(Of ParentT), IWithPrivateIp(Of ParentT)
    typeParameters:
    - id: ParentT
  inheritedMembers:
  - Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{{ParentT}}}.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  - Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{{ParentT}}}.WithExistingPublicIpAddress(System.String)
  - Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{{ParentT}}}.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  - Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{{ParentT}}}.WithNewPublicIpAddress
  - Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{{ParentT}}}.WithNewPublicIpAddress(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer{{ParentT}}.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer{{ParentT}}.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork{{ParentT}}.WithNewNetwork(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork})
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork{{ParentT}}.WithNewNetwork(System.String,System.String)
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork{{ParentT}}.WithNewNetwork(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork{{ParentT}}.WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet{{ParentT}}.WithSubnet(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp{{ParentT}}.WithPrivateIpVersion(System.String)
  - Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{{ParentT}}}.WithPrivateIpAddressDynamic
  - Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{{ParentT}}}.WithPrivateIpAddressStatic(System.String)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IDefinition(Of ParentT)
  name.vb: IDefinition(Of ParentT)
references:
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{{ParentT}}}.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{{ParentT}}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  name: WithExistingPublicIpAddress(IPublicIpAddress)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<ParentT>>.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach(Of ParentT)).WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<ParentT>>.WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach(Of ParentT)).WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{{ParentT}}}.WithExistingPublicIpAddress(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{{ParentT}}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(System.String)
  name: WithExistingPublicIpAddress(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<ParentT>>.WithExistingPublicIpAddress(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach(Of ParentT)).WithExistingPublicIpAddress(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(System.String)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<ParentT>>.WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(System.String)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach(Of ParentT)).WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{{ParentT}}}.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{{ParentT}}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  name: WithNewPublicIpAddress(ICreatable<IPublicIpAddress>)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<ParentT>>.WithNewPublicIpAddress(ICreatable<Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress>)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach(Of ParentT)).WithNewPublicIpAddress(ICreatable(Of Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress))
  name.vb: WithNewPublicIpAddress(ICreatable(Of IPublicIpAddress))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<ParentT>>.WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach(Of ParentT)).WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{{ParentT}}}.WithNewPublicIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{{ParentT}}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress
  name: WithNewPublicIpAddress()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<ParentT>>.WithNewPublicIpAddress()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach(Of ParentT)).WithNewPublicIpAddress()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<ParentT>>.WithNewPublicIpAddress
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach(Of ParentT)).WithNewPublicIpAddress
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{{ParentT}}}.WithNewPublicIpAddress(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{{ParentT}}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress(System.String)
  name: WithNewPublicIpAddress(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<ParentT>>.WithNewPublicIpAddress(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach(Of ParentT)).WithNewPublicIpAddress(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress(System.String)
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<ParentT>>.WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress(System.String)
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach(Of ParentT)).WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer{{ParentT}}.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer{{ParentT}}
  definition: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer`1.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  name: WithExistingLoadBalancerBackend(ILoadBalancer, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer<ParentT>.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer, System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer(Of ParentT).WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer`1.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
    name: WithExistingLoadBalancerBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer<ParentT>.WithExistingLoadBalancerBackend
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    name: ILoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer`1.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
    name: WithExistingLoadBalancerBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer(Of ParentT).WithExistingLoadBalancerBackend
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    name: ILoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer{{ParentT}}.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer{{ParentT}}
  definition: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer`1.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  name: WithExistingLoadBalancerInboundNatRule(ILoadBalancer, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer<ParentT>.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer, System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer(Of ParentT).WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer`1.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
    name: WithExistingLoadBalancerInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer<ParentT>.WithExistingLoadBalancerInboundNatRule
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    name: ILoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer`1.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
    name: WithExistingLoadBalancerInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer(Of ParentT).WithExistingLoadBalancerInboundNatRule
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    name: ILoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork{{ParentT}}.WithNewNetwork(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork})
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork{{ParentT}}
  definition: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1.WithNewNetwork(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork})
  name: WithNewNetwork(ICreatable<INetwork>)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<ParentT>.WithNewNetwork(ICreatable<Microsoft.Azure.Management.Fluent.Network.INetwork>)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork(Of ParentT).WithNewNetwork(ICreatable(Of Microsoft.Azure.Management.Fluent.Network.INetwork))
  name.vb: WithNewNetwork(ICreatable(Of INetwork))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1.WithNewNetwork(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork})
    name: WithNewNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<ParentT>.WithNewNetwork
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1.WithNewNetwork(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork})
    name: WithNewNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork(Of ParentT).WithNewNetwork
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork{{ParentT}}.WithNewNetwork(System.String,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork{{ParentT}}
  definition: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1.WithNewNetwork(System.String,System.String)
  name: WithNewNetwork(String, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<ParentT>.WithNewNetwork(System.String, System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork(Of ParentT).WithNewNetwork(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1.WithNewNetwork(System.String,System.String)
    name: WithNewNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<ParentT>.WithNewNetwork
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1.WithNewNetwork(System.String,System.String)
    name: WithNewNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork(Of ParentT).WithNewNetwork
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork{{ParentT}}.WithNewNetwork(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork{{ParentT}}
  definition: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1.WithNewNetwork(System.String)
  name: WithNewNetwork(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<ParentT>.WithNewNetwork(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork(Of ParentT).WithNewNetwork(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1.WithNewNetwork(System.String)
    name: WithNewNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<ParentT>.WithNewNetwork
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1.WithNewNetwork(System.String)
    name: WithNewNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork(Of ParentT).WithNewNetwork
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork{{ParentT}}.WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork{{ParentT}}
  definition: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1.WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  name: WithExistingNetwork(INetwork)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<ParentT>.WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork(Of ParentT).WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1.WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
    name: WithExistingNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<ParentT>.WithExistingNetwork
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1.WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
    name: WithExistingNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork(Of ParentT).WithExistingNetwork
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet{{ParentT}}.WithSubnet(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet{{ParentT}}
  definition: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet`1.WithSubnet(System.String)
  name: WithSubnet(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet<ParentT>.WithSubnet(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet(Of ParentT).WithSubnet(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet`1.WithSubnet(System.String)
    name: WithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet<ParentT>.WithSubnet
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet`1.WithSubnet(System.String)
    name: WithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet(Of ParentT).WithSubnet
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp{{ParentT}}.WithPrivateIpVersion(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp{{ParentT}}
  definition: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp`1.WithPrivateIpVersion(System.String)
  name: WithPrivateIpVersion(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp<ParentT>.WithPrivateIpVersion(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp(Of ParentT).WithPrivateIpVersion(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp`1.WithPrivateIpVersion(System.String)
    name: WithPrivateIpVersion
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp<ParentT>.WithPrivateIpVersion
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp`1.WithPrivateIpVersion(System.String)
    name: WithPrivateIpVersion
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp(Of ParentT).WithPrivateIpVersion
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{{ParentT}}}.WithPrivateIpAddressDynamic
  parent: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{{ParentT}}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1.WithPrivateIpAddressDynamic
  name: WithPrivateIpAddressDynamic()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<ParentT>>.WithPrivateIpAddressDynamic()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach(Of ParentT)).WithPrivateIpAddressDynamic()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1.WithPrivateIpAddressDynamic
    name: WithPrivateIpAddressDynamic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<ParentT>>.WithPrivateIpAddressDynamic
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1.WithPrivateIpAddressDynamic
    name: WithPrivateIpAddressDynamic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach(Of ParentT)).WithPrivateIpAddressDynamic
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{{ParentT}}}.WithPrivateIpAddressStatic(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{{ParentT}}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1.WithPrivateIpAddressStatic(System.String)
  name: WithPrivateIpAddressStatic(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<ParentT>>.WithPrivateIpAddressStatic(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach(Of ParentT)).WithPrivateIpAddressStatic(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1.WithPrivateIpAddressStatic(System.String)
    name: WithPrivateIpAddressStatic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<ParentT>>.WithPrivateIpAddressStatic
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1.WithPrivateIpAddressStatic(System.String)
    name: WithPrivateIpAddressStatic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach(Of ParentT)).WithPrivateIpAddressStatic
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1
  isExternal: false
  name: WithExistingPublicIpAddress(IPublicIpAddress)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress<ReturnT>.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress(Of ReturnT).WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress<ReturnT>.WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress(Of ReturnT).WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{{ParentT}}}
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1
  name: IWithExistingPublicIpAddress<IWithAttach<ParentT>>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<ParentT>>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach(Of ParentT))
  name.vb: IWithExistingPublicIpAddress(Of IWithAttach(Of ParentT))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1
    name: IWithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1
    name: IWithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1
  isExternal: true
  name: WithExistingPublicIpAddress(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress<ReturnT>.WithExistingPublicIpAddress(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress(Of ReturnT).WithExistingPublicIpAddress(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(System.String)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress<ReturnT>.WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(System.String)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress(Of ReturnT).WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1
  isExternal: true
  name: WithNewPublicIpAddress(ICreatable<IPublicIpAddress>)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress<ReturnT>.WithNewPublicIpAddress(ICreatable<Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress>)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress(Of ReturnT).WithNewPublicIpAddress(ICreatable(Of Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress))
  name.vb: WithNewPublicIpAddress(ICreatable(Of IPublicIpAddress))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress<ReturnT>.WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress(Of ReturnT).WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{{ParentT}}}
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1
  name: IWithNewPublicIpAddress<IWithAttach<ParentT>>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<ParentT>>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach(Of ParentT))
  name.vb: IWithNewPublicIpAddress(Of IWithAttach(Of ParentT))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1
    name: IWithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1
    name: IWithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1
  isExternal: false
  name: WithNewPublicIpAddress()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress<ReturnT>.WithNewPublicIpAddress()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress(Of ReturnT).WithNewPublicIpAddress()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress<ReturnT>.WithNewPublicIpAddress
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress(Of ReturnT).WithNewPublicIpAddress
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1
  isExternal: true
  name: WithNewPublicIpAddress(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress<ReturnT>.WithNewPublicIpAddress(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress(Of ReturnT).WithNewPublicIpAddress(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress(System.String)
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress<ReturnT>.WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress(System.String)
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress(Of ReturnT).WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer`1.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer`1
  isExternal: true
  name: WithExistingLoadBalancerBackend(ILoadBalancer, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer<ParentT>.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer, System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer(Of ParentT).WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer`1.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
    name: WithExistingLoadBalancerBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer<ParentT>.WithExistingLoadBalancerBackend
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    name: ILoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer`1.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
    name: WithExistingLoadBalancerBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer(Of ParentT).WithExistingLoadBalancerBackend
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    name: ILoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer{{ParentT}}
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer`1
  name: IWithLoadBalancer<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer(Of ParentT)
  name.vb: IWithLoadBalancer(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer`1
    name: IWithLoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer`1
    name: IWithLoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer`1.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer`1
  isExternal: true
  name: WithExistingLoadBalancerInboundNatRule(ILoadBalancer, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer<ParentT>.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer, System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer(Of ParentT).WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer`1.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
    name: WithExistingLoadBalancerInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer<ParentT>.WithExistingLoadBalancerInboundNatRule
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    name: ILoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer`1.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
    name: WithExistingLoadBalancerInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer(Of ParentT).WithExistingLoadBalancerInboundNatRule
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    name: ILoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1.WithNewNetwork(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork})
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1
  isExternal: true
  name: WithNewNetwork(ICreatable<INetwork>)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<ParentT>.WithNewNetwork(ICreatable<Microsoft.Azure.Management.Fluent.Network.INetwork>)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork(Of ParentT).WithNewNetwork(ICreatable(Of Microsoft.Azure.Management.Fluent.Network.INetwork))
  name.vb: WithNewNetwork(ICreatable(Of INetwork))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1.WithNewNetwork(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork})
    name: WithNewNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<ParentT>.WithNewNetwork
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1.WithNewNetwork(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork})
    name: WithNewNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork(Of ParentT).WithNewNetwork
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork{{ParentT}}
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1
  name: IWithNetwork<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork(Of ParentT)
  name.vb: IWithNetwork(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1
    name: IWithNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1
    name: IWithNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1.WithNewNetwork(System.String,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1
  isExternal: true
  name: WithNewNetwork(String, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<ParentT>.WithNewNetwork(System.String, System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork(Of ParentT).WithNewNetwork(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1.WithNewNetwork(System.String,System.String)
    name: WithNewNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<ParentT>.WithNewNetwork
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1.WithNewNetwork(System.String,System.String)
    name: WithNewNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork(Of ParentT).WithNewNetwork
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1.WithNewNetwork(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1
  isExternal: true
  name: WithNewNetwork(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<ParentT>.WithNewNetwork(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork(Of ParentT).WithNewNetwork(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1.WithNewNetwork(System.String)
    name: WithNewNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<ParentT>.WithNewNetwork
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1.WithNewNetwork(System.String)
    name: WithNewNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork(Of ParentT).WithNewNetwork
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1.WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1
  isExternal: false
  name: WithExistingNetwork(INetwork)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<ParentT>.WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork(Of ParentT).WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1.WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
    name: WithExistingNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<ParentT>.WithExistingNetwork
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1.WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
    name: WithExistingNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork(Of ParentT).WithExistingNetwork
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet`1.WithSubnet(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet`1
  isExternal: true
  name: WithSubnet(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet<ParentT>.WithSubnet(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet(Of ParentT).WithSubnet(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet`1.WithSubnet(System.String)
    name: WithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet<ParentT>.WithSubnet
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet`1.WithSubnet(System.String)
    name: WithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet(Of ParentT).WithSubnet
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet{{ParentT}}
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet`1
  name: IWithSubnet<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet(Of ParentT)
  name.vb: IWithSubnet(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet`1
    name: IWithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet`1
    name: IWithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp`1.WithPrivateIpVersion(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp`1
  isExternal: true
  name: WithPrivateIpVersion(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp<ParentT>.WithPrivateIpVersion(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp(Of ParentT).WithPrivateIpVersion(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp`1.WithPrivateIpVersion(System.String)
    name: WithPrivateIpVersion
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp<ParentT>.WithPrivateIpVersion
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp`1.WithPrivateIpVersion(System.String)
    name: WithPrivateIpVersion
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp(Of ParentT).WithPrivateIpVersion
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp{{ParentT}}
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp`1
  name: IWithPrivateIp<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp(Of ParentT)
  name.vb: IWithPrivateIp(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp`1
    name: IWithPrivateIp
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp`1
    name: IWithPrivateIp
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1.WithPrivateIpAddressDynamic
  parent: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1
  isExternal: false
  name: WithPrivateIpAddressDynamic()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<ReturnT>.WithPrivateIpAddressDynamic()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress(Of ReturnT).WithPrivateIpAddressDynamic()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1.WithPrivateIpAddressDynamic
    name: WithPrivateIpAddressDynamic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<ReturnT>.WithPrivateIpAddressDynamic
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1.WithPrivateIpAddressDynamic
    name: WithPrivateIpAddressDynamic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress(Of ReturnT).WithPrivateIpAddressDynamic
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{{ParentT}}}
  parent: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1
  name: IWithPrivateIpAddress<IWithAttach<ParentT>>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<ParentT>>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach(Of ParentT))
  name.vb: IWithPrivateIpAddress(Of IWithAttach(Of ParentT))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1
    name: IWithPrivateIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1
    name: IWithPrivateIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1.WithPrivateIpAddressStatic(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1
  isExternal: true
  name: WithPrivateIpAddressStatic(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<ReturnT>.WithPrivateIpAddressStatic(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress(Of ReturnT).WithPrivateIpAddressStatic(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1.WithPrivateIpAddressStatic(System.String)
    name: WithPrivateIpAddressStatic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<ReturnT>.WithPrivateIpAddressStatic
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1.WithPrivateIpAddressStatic(System.String)
    name: WithPrivateIpAddressStatic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress(Of ReturnT).WithPrivateIpAddressStatic
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition
  isExternal: false
  name: IWithExistingPublicIpAddress<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress(Of ReturnT)
  name.vb: IWithExistingPublicIpAddress(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1
    name: IWithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1
    name: IWithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition
  isExternal: false
  name: IWithNewPublicIpAddress<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress(Of ReturnT)
  name.vb: IWithNewPublicIpAddress(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1
    name: IWithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1
    name: IWithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer`1
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition
  isExternal: false
  name: IWithLoadBalancer<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer(Of ParentT)
  name.vb: IWithLoadBalancer(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer`1
    name: IWithLoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer`1
    name: IWithLoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition
  isExternal: false
  name: IWithNetwork<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork(Of ParentT)
  name.vb: IWithNetwork(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1
    name: IWithNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1
    name: IWithNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet`1
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition
  isExternal: false
  name: IWithSubnet<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet(Of ParentT)
  name.vb: IWithSubnet(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet`1
    name: IWithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet`1
    name: IWithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp`1
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition
  isExternal: false
  name: IWithPrivateIp<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp(Of ParentT)
  name.vb: IWithPrivateIp(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp`1
    name: IWithPrivateIp
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp`1
    name: IWithPrivateIp
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition
  isExternal: false
  name: IWithPrivateIpAddress<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress(Of ReturnT)
  name.vb: IWithPrivateIpAddress(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1
    name: IWithPrivateIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1
    name: IWithPrivateIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition
