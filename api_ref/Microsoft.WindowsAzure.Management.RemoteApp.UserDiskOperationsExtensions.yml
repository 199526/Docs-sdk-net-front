### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.RemoteApp.UserDiskOperationsExtensions
  commentId: T:Microsoft.WindowsAzure.Management.RemoteApp.UserDiskOperationsExtensions
  id: UserDiskOperationsExtensions
  parent: Microsoft.WindowsAzure.Management.RemoteApp
  children:
  - Microsoft.WindowsAzure.Management.RemoteApp.UserDiskOperationsExtensions.Copy(Microsoft.WindowsAzure.Management.RemoteApp.IUserDiskOperations,System.String,System.String,System.String,System.Boolean)
  - Microsoft.WindowsAzure.Management.RemoteApp.UserDiskOperationsExtensions.CopyAsync(Microsoft.WindowsAzure.Management.RemoteApp.IUserDiskOperations,System.String,System.String,System.String,System.Boolean)
  - Microsoft.WindowsAzure.Management.RemoteApp.UserDiskOperationsExtensions.Delete(Microsoft.WindowsAzure.Management.RemoteApp.IUserDiskOperations,System.String,System.String)
  - Microsoft.WindowsAzure.Management.RemoteApp.UserDiskOperationsExtensions.DeleteAsync(Microsoft.WindowsAzure.Management.RemoteApp.IUserDiskOperations,System.String,System.String)
  langs:
  - csharp
  - vb
  name: UserDiskOperationsExtensions
  nameWithType: UserDiskOperationsExtensions
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.UserDiskOperationsExtensions
  type: Class
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/UserDiskOperationsExtensions.cs
      branch: d500760ed1df3f9ecfc1190f640525feeba47480
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: UserDiskOperationsExtensions
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/UserDiskOperationsExtensions.cs
    startLine: 33
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp
  summary: "\nRmoteApp management client\n"
  example: []
  syntax:
    content: public static class UserDiskOperationsExtensions
    content.vb: Public Module UserDiskOperationsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.WindowsAzure.Management.RemoteApp.UserDiskOperationsExtensions.Copy(Microsoft.WindowsAzure.Management.RemoteApp.IUserDiskOperations,System.String,System.String,System.String,System.Boolean)
  commentId: M:Microsoft.WindowsAzure.Management.RemoteApp.UserDiskOperationsExtensions.Copy(Microsoft.WindowsAzure.Management.RemoteApp.IUserDiskOperations,System.String,System.String,System.String,System.Boolean)
  id: Copy(Microsoft.WindowsAzure.Management.RemoteApp.IUserDiskOperations,System.String,System.String,System.String,System.Boolean)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.RemoteApp.UserDiskOperationsExtensions
  langs:
  - csharp
  - vb
  name: Copy(IUserDiskOperations, String, String, String, Boolean)
  nameWithType: UserDiskOperationsExtensions.Copy(IUserDiskOperations, String, String, String, Boolean)
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.UserDiskOperationsExtensions.Copy(Microsoft.WindowsAzure.Management.RemoteApp.IUserDiskOperations, System.String, System.String, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/UserDiskOperationsExtensions.cs
      branch: d500760ed1df3f9ecfc1190f640525feeba47480
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Copy
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/UserDiskOperationsExtensions.cs
    startLine: 60
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp
  summary: "\nCopy user disk from one collection to the other and keep the source\nuser disk.\n"
  example: []
  syntax:
    content: public static AzureOperationResponse Copy(this IUserDiskOperations operations, string srcCollectionName, string dstCollectionName, string userUpn, bool overwriteExistingUserDisk)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Copy(operations As IUserDiskOperations, srcCollectionName As String, dstCollectionName As String, userUpn As String, overwriteExistingUserDisk As Boolean) As AzureOperationResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.RemoteApp.IUserDiskOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.RemoteApp.IUserDiskOperations.\n"
    - id: srcCollectionName
      type: System.String
      description: "\nRequired. The source collection name.\n"
    - id: dstCollectionName
      type: System.String
      description: "\nRequired. The destination collection name.\n"
    - id: userUpn
      type: System.String
      description: "\nRequired. The user upn.\n"
    - id: overwriteExistingUserDisk
      type: System.Boolean
      description: "\nRequired. A flag denoting if the request is to overwrite the\nexisting user disk\n"
    return:
      type: AzureOperationResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.RemoteApp.UserDiskOperationsExtensions.CopyAsync(Microsoft.WindowsAzure.Management.RemoteApp.IUserDiskOperations,System.String,System.String,System.String,System.Boolean)
  commentId: M:Microsoft.WindowsAzure.Management.RemoteApp.UserDiskOperationsExtensions.CopyAsync(Microsoft.WindowsAzure.Management.RemoteApp.IUserDiskOperations,System.String,System.String,System.String,System.Boolean)
  id: CopyAsync(Microsoft.WindowsAzure.Management.RemoteApp.IUserDiskOperations,System.String,System.String,System.String,System.Boolean)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.RemoteApp.UserDiskOperationsExtensions
  langs:
  - csharp
  - vb
  name: CopyAsync(IUserDiskOperations, String, String, String, Boolean)
  nameWithType: UserDiskOperationsExtensions.CopyAsync(IUserDiskOperations, String, String, String, Boolean)
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.UserDiskOperationsExtensions.CopyAsync(Microsoft.WindowsAzure.Management.RemoteApp.IUserDiskOperations, System.String, System.String, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/UserDiskOperationsExtensions.cs
      branch: d500760ed1df3f9ecfc1190f640525feeba47480
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: CopyAsync
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/UserDiskOperationsExtensions.cs
    startLine: 94
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp
  summary: "\nCopy user disk from one collection to the other and keep the source\nuser disk.\n"
  example: []
  syntax:
    content: public static Task<AzureOperationResponse> CopyAsync(this IUserDiskOperations operations, string srcCollectionName, string dstCollectionName, string userUpn, bool overwriteExistingUserDisk)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CopyAsync(operations As IUserDiskOperations, srcCollectionName As String, dstCollectionName As String, userUpn As String, overwriteExistingUserDisk As Boolean) As Task(Of AzureOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.RemoteApp.IUserDiskOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.RemoteApp.IUserDiskOperations.\n"
    - id: srcCollectionName
      type: System.String
      description: "\nRequired. The source collection name.\n"
    - id: dstCollectionName
      type: System.String
      description: "\nRequired. The destination collection name.\n"
    - id: userUpn
      type: System.String
      description: "\nRequired. The user upn.\n"
    - id: overwriteExistingUserDisk
      type: System.Boolean
      description: "\nRequired. A flag denoting if the request is to overwrite the\nexisting user disk\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.RemoteApp.UserDiskOperationsExtensions.Delete(Microsoft.WindowsAzure.Management.RemoteApp.IUserDiskOperations,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.RemoteApp.UserDiskOperationsExtensions.Delete(Microsoft.WindowsAzure.Management.RemoteApp.IUserDiskOperations,System.String,System.String)
  id: Delete(Microsoft.WindowsAzure.Management.RemoteApp.IUserDiskOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.RemoteApp.UserDiskOperationsExtensions
  langs:
  - csharp
  - vb
  name: Delete(IUserDiskOperations, String, String)
  nameWithType: UserDiskOperationsExtensions.Delete(IUserDiskOperations, String, String)
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.UserDiskOperationsExtensions.Delete(Microsoft.WindowsAzure.Management.RemoteApp.IUserDiskOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/UserDiskOperationsExtensions.cs
      branch: d500760ed1df3f9ecfc1190f640525feeba47480
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Delete
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/UserDiskOperationsExtensions.cs
    startLine: 116
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp
  summary: "\nDeletes the given user disk.\n"
  example: []
  syntax:
    content: public static AzureOperationResponse Delete(this IUserDiskOperations operations, string collectionName, string userUpn)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Delete(operations As IUserDiskOperations, collectionName As String, userUpn As String) As AzureOperationResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.RemoteApp.IUserDiskOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.RemoteApp.IUserDiskOperations.\n"
    - id: collectionName
      type: System.String
      description: "\nRequired. The RemoteApp collection name.\n"
    - id: userUpn
      type: System.String
      description: "\nRequired. The user upn.\n"
    return:
      type: AzureOperationResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.RemoteApp.UserDiskOperationsExtensions.DeleteAsync(Microsoft.WindowsAzure.Management.RemoteApp.IUserDiskOperations,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.RemoteApp.UserDiskOperationsExtensions.DeleteAsync(Microsoft.WindowsAzure.Management.RemoteApp.IUserDiskOperations,System.String,System.String)
  id: DeleteAsync(Microsoft.WindowsAzure.Management.RemoteApp.IUserDiskOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.RemoteApp.UserDiskOperationsExtensions
  langs:
  - csharp
  - vb
  name: DeleteAsync(IUserDiskOperations, String, String)
  nameWithType: UserDiskOperationsExtensions.DeleteAsync(IUserDiskOperations, String, String)
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.UserDiskOperationsExtensions.DeleteAsync(Microsoft.WindowsAzure.Management.RemoteApp.IUserDiskOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/UserDiskOperationsExtensions.cs
      branch: d500760ed1df3f9ecfc1190f640525feeba47480
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: DeleteAsync
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/UserDiskOperationsExtensions.cs
    startLine: 142
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp
  summary: "\nDeletes the given user disk.\n"
  example: []
  syntax:
    content: public static Task<AzureOperationResponse> DeleteAsync(this IUserDiskOperations operations, string collectionName, string userUpn)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteAsync(operations As IUserDiskOperations, collectionName As String, userUpn As String) As Task(Of AzureOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.RemoteApp.IUserDiskOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.RemoteApp.IUserDiskOperations.\n"
    - id: collectionName
      type: System.String
      description: "\nRequired. The RemoteApp collection name.\n"
    - id: userUpn
      type: System.String
      description: "\nRequired. The user upn.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.WindowsAzure.Management.RemoteApp
  commentId: N:Microsoft.WindowsAzure.Management.RemoteApp
  isExternal: false
  name: Microsoft.WindowsAzure.Management.RemoteApp
  nameWithType: Microsoft.WindowsAzure.Management.RemoteApp
  fullName: Microsoft.WindowsAzure.Management.RemoteApp
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.Management.RemoteApp.IUserDiskOperations
  commentId: T:Microsoft.WindowsAzure.Management.RemoteApp.IUserDiskOperations
  parent: Microsoft.WindowsAzure.Management.RemoteApp
  isExternal: false
  name: IUserDiskOperations
  nameWithType: IUserDiskOperations
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.IUserDiskOperations
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: AzureOperationResponse
  isExternal: true
  name: AzureOperationResponse
  nameWithType: AzureOperationResponse
  fullName: AzureOperationResponse
- uid: System.Threading.Tasks.Task{AzureOperationResponse}
  commentId: T:System.Threading.Tasks.Task{AzureOperationResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AzureOperationResponse>
  nameWithType: Task<AzureOperationResponse>
  fullName: System.Threading.Tasks.Task<AzureOperationResponse>
  nameWithType.vb: Task(Of AzureOperationResponse)
  fullname.vb: System.Threading.Tasks.Task(Of AzureOperationResponse)
  name.vb: Task(Of AzureOperationResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AzureOperationResponse
    name: AzureOperationResponse
    nameWithType: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AzureOperationResponse
    name: AzureOperationResponse
    nameWithType: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
