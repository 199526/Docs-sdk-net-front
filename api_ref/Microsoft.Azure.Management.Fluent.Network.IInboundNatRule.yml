items:
- uid: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule
  commentId: T:Microsoft.Azure.Management.Fluent.Network.IInboundNatRule
  id: IInboundNatRule
  parent: Microsoft.Azure.Management.Fluent.Network
  children:
  - Microsoft.Azure.Management.Fluent.Network.IInboundNatRule.BackendNetworkInterfaceId
  - Microsoft.Azure.Management.Fluent.Network.IInboundNatRule.BackendNicIpConfigurationName
  - Microsoft.Azure.Management.Fluent.Network.IInboundNatRule.FrontendPort
  - Microsoft.Azure.Management.Fluent.Network.IInboundNatRule.IdleTimeoutInMinutes
  langs:
  - csharp
  - vb
  name: IInboundNatRule
  fullName: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule
  type: Interface
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/IInboundNatRule.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IInboundNatRule
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/IInboundNatRule.cs
    startLine: 10
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nAn immutable client-side representation of an inbound NAT rule.\n"
  example: []
  syntax:
    content: 'public interface IInboundNatRule : IHasFrontend, IHasBackendPort, IHasProtocol<string>, IHasFloatingIp, IWrapper<InboundNatRuleInner>, IChildResource<ILoadBalancer>'
    content.vb: >-
      Public Interface IInboundNatRule
          Inherits IHasFrontend, IHasBackendPort, IHasProtocol(Of String), IHasFloatingIp, IWrapper(Of InboundNatRuleInner), IChildResource(Of ILoadBalancer)
  inheritedMembers:
  - Microsoft.Azure.Management.Fluent.Network.IHasFrontend.Frontend
  - Microsoft.Azure.Management.Fluent.Network.IHasBackendPort.BackendPort
  - Microsoft.Azure.Management.Fluent.Network.IHasProtocol{System.String}.Protocol
  - Microsoft.Azure.Management.Fluent.Network.IHasFloatingIp.FloatingIpEnabled
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule.BackendNicIpConfigurationName
  commentId: P:Microsoft.Azure.Management.Fluent.Network.IInboundNatRule.BackendNicIpConfigurationName
  id: BackendNicIpConfigurationName
  parent: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule
  langs:
  - csharp
  - vb
  name: BackendNicIpConfigurationName
  fullName: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule.BackendNicIpConfigurationName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/IInboundNatRule.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BackendNicIpConfigurationName
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/IInboundNatRule.cs
    startLine: 19
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: string BackendNicIpConfigurationName { get; }
    content.vb: ReadOnly Property BackendNicIpConfigurationName As String
    parameters: []
    return:
      type: System.String
      description: the name of the IP configuration within the network interface associated with this NAT rule
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule.BackendNetworkInterfaceId
  commentId: P:Microsoft.Azure.Management.Fluent.Network.IInboundNatRule.BackendNetworkInterfaceId
  id: BackendNetworkInterfaceId
  parent: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule
  langs:
  - csharp
  - vb
  name: BackendNetworkInterfaceId
  fullName: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule.BackendNetworkInterfaceId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/IInboundNatRule.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BackendNetworkInterfaceId
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/IInboundNatRule.cs
    startLine: 22
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: string BackendNetworkInterfaceId { get; }
    content.vb: ReadOnly Property BackendNetworkInterfaceId As String
    parameters: []
    return:
      type: System.String
      description: the resource ID of the network interface assigned as the backend of this inbound NAT rule
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule.FrontendPort
  commentId: P:Microsoft.Azure.Management.Fluent.Network.IInboundNatRule.FrontendPort
  id: FrontendPort
  parent: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule
  langs:
  - csharp
  - vb
  name: FrontendPort
  fullName: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule.FrontendPort
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/IInboundNatRule.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: FrontendPort
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/IInboundNatRule.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: int ? FrontendPort { get; }
    content.vb: ReadOnly Property FrontendPort As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: the frontend port number associated with this NAT rule
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule.IdleTimeoutInMinutes
  commentId: P:Microsoft.Azure.Management.Fluent.Network.IInboundNatRule.IdleTimeoutInMinutes
  id: IdleTimeoutInMinutes
  parent: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule
  langs:
  - csharp
  - vb
  name: IdleTimeoutInMinutes
  fullName: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule.IdleTimeoutInMinutes
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/IInboundNatRule.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IdleTimeoutInMinutes
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/IInboundNatRule.cs
    startLine: 28
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: int ? IdleTimeoutInMinutes { get; }
    content.vb: ReadOnly Property IdleTimeoutInMinutes As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: the number of minutes before an idle connection is closed
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network
  fullName: Microsoft.Azure.Management.Fluent.Network
- uid: Microsoft.Azure.Management.Fluent.Network.IHasFrontend.Frontend
  parent: Microsoft.Azure.Management.Fluent.Network.IHasFrontend
  isExternal: false
  name: Frontend()
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasFrontend.Frontend()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasFrontend.Frontend
    name: Frontend
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasFrontend.Frontend
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasFrontend.Frontend
    name: Frontend
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasFrontend.Frontend
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.IHasBackendPort.BackendPort
  parent: Microsoft.Azure.Management.Fluent.Network.IHasBackendPort
  isExternal: false
  name: BackendPort
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasBackendPort.BackendPort
- uid: Microsoft.Azure.Management.Fluent.Network.IHasProtocol{System.String}.Protocol
  parent: Microsoft.Azure.Management.Fluent.Network.IHasProtocol{System.String}
  definition: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1.Protocol
  name: Protocol()
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasProtocol<System.String>.Protocol()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.IHasProtocol(Of System.String).Protocol()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1.Protocol
    name: Protocol
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasProtocol<System.String>.Protocol
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1.Protocol
    name: Protocol
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasProtocol(Of System.String).Protocol
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.IHasFloatingIp.FloatingIpEnabled
  parent: Microsoft.Azure.Management.Fluent.Network.IHasFloatingIp
  isExternal: false
  name: FloatingIpEnabled
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasFloatingIp.FloatingIpEnabled
- uid: Microsoft.Azure.Management.Fluent.Network.IHasFrontend
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: IHasFrontend
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasFrontend
- uid: Microsoft.Azure.Management.Fluent.Network.IHasBackendPort
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: IHasBackendPort
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasBackendPort
- uid: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1.Protocol
  parent: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1
  isExternal: false
  name: Protocol()
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasProtocol<ProtocolT>.Protocol()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.IHasProtocol(Of ProtocolT).Protocol()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1.Protocol
    name: Protocol
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasProtocol<ProtocolT>.Protocol
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1.Protocol
    name: Protocol
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasProtocol(Of ProtocolT).Protocol
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.IHasProtocol{System.String}
  parent: Microsoft.Azure.Management.Fluent.Network
  definition: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1
  name: IHasProtocol<String>
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasProtocol<System.String>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.IHasProtocol(Of System.String)
  name.vb: IHasProtocol(Of String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1
    name: IHasProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasProtocol
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1
    name: IHasProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasProtocol
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.IHasFloatingIp
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: IHasFloatingIp
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasFloatingIp
- uid: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: IHasProtocol<ProtocolT>
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasProtocol<ProtocolT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.IHasProtocol(Of ProtocolT)
  name.vb: IHasProtocol(Of ProtocolT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1
    name: IHasProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasProtocol
  - name: <
    fullName: <
  - name: ProtocolT
    fullName: ProtocolT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1
    name: IHasProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasProtocol
  - name: '(Of '
    fullName: '(Of '
  - name: ProtocolT
    fullName: ProtocolT
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
