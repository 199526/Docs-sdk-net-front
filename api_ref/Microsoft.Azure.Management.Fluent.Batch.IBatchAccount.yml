items:
- uid: Microsoft.Azure.Management.Fluent.Batch.IBatchAccount
  commentId: T:Microsoft.Azure.Management.Fluent.Batch.IBatchAccount
  id: IBatchAccount
  parent: Microsoft.Azure.Management.Fluent.Batch
  children:
  - Microsoft.Azure.Management.Fluent.Batch.IBatchAccount.AccountEndpoint
  - Microsoft.Azure.Management.Fluent.Batch.IBatchAccount.ActiveJobAndJobScheduleQuota
  - Microsoft.Azure.Management.Fluent.Batch.IBatchAccount.Applications
  - Microsoft.Azure.Management.Fluent.Batch.IBatchAccount.AutoStorage
  - Microsoft.Azure.Management.Fluent.Batch.IBatchAccount.CoreQuota
  - Microsoft.Azure.Management.Fluent.Batch.IBatchAccount.GetKeys
  - Microsoft.Azure.Management.Fluent.Batch.IBatchAccount.PoolQuota
  - Microsoft.Azure.Management.Fluent.Batch.IBatchAccount.ProvisioningState
  - Microsoft.Azure.Management.Fluent.Batch.IBatchAccount.RegenerateKeys(Microsoft.Azure.Management.Batch.Models.AccountKeyType)
  - Microsoft.Azure.Management.Fluent.Batch.IBatchAccount.SynchronizeAutoStorageKeys
  langs:
  - csharp
  - vb
  name: IBatchAccount
  fullName: Microsoft.Azure.Management.Fluent.Batch.IBatchAccount
  type: Interface
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IBatchAccount.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IBatchAccount
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IBatchAccount.cs
    startLine: 14
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Batch
  summary: "\nAn immutable client-side representation of an Azure batch account.\n"
  example: []
  syntax:
    content: 'public interface IBatchAccount : IGroupableResource, IRefreshable<IBatchAccount>, IUpdatable<IUpdate>, IWrapper<BatchAccountInner>'
    content.vb: >-
      Public Interface IBatchAccount
          Inherits IGroupableResource, IRefreshable(Of IBatchAccount), IUpdatable(Of IUpdate), IWrapper(Of BatchAccountInner)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Azure.Management.Fluent.Batch.IBatchAccount.ProvisioningState
  commentId: P:Microsoft.Azure.Management.Fluent.Batch.IBatchAccount.ProvisioningState
  id: ProvisioningState
  parent: Microsoft.Azure.Management.Fluent.Batch.IBatchAccount
  langs:
  - csharp
  - vb
  name: ProvisioningState
  fullName: Microsoft.Azure.Management.Fluent.Batch.IBatchAccount.ProvisioningState
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IBatchAccount.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ProvisioningState
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IBatchAccount.cs
    startLine: 22
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Batch
  example: []
  syntax:
    content: ProvisioningState ProvisioningState { get; }
    content.vb: ReadOnly Property ProvisioningState As ProvisioningState
    parameters: []
    return:
      type: Microsoft.Azure.Management.Batch.Models.ProvisioningState
      description: 'the provisioned state of the resource. Possible values include:'
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Batch.IBatchAccount.AccountEndpoint
  commentId: P:Microsoft.Azure.Management.Fluent.Batch.IBatchAccount.AccountEndpoint
  id: AccountEndpoint
  parent: Microsoft.Azure.Management.Fluent.Batch.IBatchAccount
  langs:
  - csharp
  - vb
  name: AccountEndpoint
  fullName: Microsoft.Azure.Management.Fluent.Batch.IBatchAccount.AccountEndpoint
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IBatchAccount.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AccountEndpoint
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IBatchAccount.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Batch
  example: []
  syntax:
    content: string AccountEndpoint { get; }
    content.vb: ReadOnly Property AccountEndpoint As String
    parameters: []
    return:
      type: System.String
      description: Get the accountEndpoint value.
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Batch.IBatchAccount.AutoStorage
  commentId: P:Microsoft.Azure.Management.Fluent.Batch.IBatchAccount.AutoStorage
  id: AutoStorage
  parent: Microsoft.Azure.Management.Fluent.Batch.IBatchAccount
  langs:
  - csharp
  - vb
  name: AutoStorage
  fullName: Microsoft.Azure.Management.Fluent.Batch.IBatchAccount.AutoStorage
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IBatchAccount.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AutoStorage
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IBatchAccount.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Batch
  example: []
  syntax:
    content: AutoStorageProperties AutoStorage { get; }
    content.vb: ReadOnly Property AutoStorage As AutoStorageProperties
    parameters: []
    return:
      type: Microsoft.Azure.Management.Batch.Models.AutoStorageProperties
      description: the properties and status of any auto storage account associated with
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Batch.IBatchAccount.CoreQuota
  commentId: P:Microsoft.Azure.Management.Fluent.Batch.IBatchAccount.CoreQuota
  id: CoreQuota
  parent: Microsoft.Azure.Management.Fluent.Batch.IBatchAccount
  langs:
  - csharp
  - vb
  name: CoreQuota
  fullName: Microsoft.Azure.Management.Fluent.Batch.IBatchAccount.CoreQuota
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IBatchAccount.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CoreQuota
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IBatchAccount.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Batch
  example: []
  syntax:
    content: int CoreQuota { get; }
    content.vb: ReadOnly Property CoreQuota As Integer
    parameters: []
    return:
      type: System.Int32
      description: the core quota for this BatchAccount account
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Batch.IBatchAccount.PoolQuota
  commentId: P:Microsoft.Azure.Management.Fluent.Batch.IBatchAccount.PoolQuota
  id: PoolQuota
  parent: Microsoft.Azure.Management.Fluent.Batch.IBatchAccount
  langs:
  - csharp
  - vb
  name: PoolQuota
  fullName: Microsoft.Azure.Management.Fluent.Batch.IBatchAccount.PoolQuota
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IBatchAccount.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PoolQuota
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IBatchAccount.cs
    startLine: 35
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Batch
  example: []
  syntax:
    content: int PoolQuota { get; }
    content.vb: ReadOnly Property PoolQuota As Integer
    parameters: []
    return:
      type: System.Int32
      description: the pool quota for this BatchAccount account
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Batch.IBatchAccount.ActiveJobAndJobScheduleQuota
  commentId: P:Microsoft.Azure.Management.Fluent.Batch.IBatchAccount.ActiveJobAndJobScheduleQuota
  id: ActiveJobAndJobScheduleQuota
  parent: Microsoft.Azure.Management.Fluent.Batch.IBatchAccount
  langs:
  - csharp
  - vb
  name: ActiveJobAndJobScheduleQuota
  fullName: Microsoft.Azure.Management.Fluent.Batch.IBatchAccount.ActiveJobAndJobScheduleQuota
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IBatchAccount.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ActiveJobAndJobScheduleQuota
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IBatchAccount.cs
    startLine: 38
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Batch
  example: []
  syntax:
    content: int ActiveJobAndJobScheduleQuota { get; }
    content.vb: ReadOnly Property ActiveJobAndJobScheduleQuota As Integer
    parameters: []
    return:
      type: System.Int32
      description: the active job and job schedule quota for this BatchAccount account
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Batch.IBatchAccount.GetKeys
  commentId: M:Microsoft.Azure.Management.Fluent.Batch.IBatchAccount.GetKeys
  id: GetKeys
  parent: Microsoft.Azure.Management.Fluent.Batch.IBatchAccount
  langs:
  - csharp
  - vb
  name: GetKeys()
  fullName: Microsoft.Azure.Management.Fluent.Batch.IBatchAccount.GetKeys()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IBatchAccount.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetKeys
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IBatchAccount.cs
    startLine: 41
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Batch
  example: []
  syntax:
    content: BatchAccountKeys GetKeys()
    content.vb: Function GetKeys As BatchAccountKeys
    return:
      type: Microsoft.Azure.Management.Fluent.Batch.BatchAccountKeys
      description: the access keys for this batch account
- uid: Microsoft.Azure.Management.Fluent.Batch.IBatchAccount.RegenerateKeys(Microsoft.Azure.Management.Batch.Models.AccountKeyType)
  commentId: M:Microsoft.Azure.Management.Fluent.Batch.IBatchAccount.RegenerateKeys(Microsoft.Azure.Management.Batch.Models.AccountKeyType)
  id: RegenerateKeys(Microsoft.Azure.Management.Batch.Models.AccountKeyType)
  parent: Microsoft.Azure.Management.Fluent.Batch.IBatchAccount
  langs:
  - csharp
  - vb
  name: RegenerateKeys(AccountKeyType)
  fullName: Microsoft.Azure.Management.Fluent.Batch.IBatchAccount.RegenerateKeys(Microsoft.Azure.Management.Batch.Models.AccountKeyType)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IBatchAccount.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RegenerateKeys
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IBatchAccount.cs
    startLine: 48
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Batch
  summary: "\nRegenerates the access keys for batch account.\n"
  example: []
  syntax:
    content: BatchAccountKeys RegenerateKeys(AccountKeyType keyType)
    content.vb: Function RegenerateKeys(keyType As AccountKeyType) As BatchAccountKeys
    parameters:
    - id: keyType
      type: Microsoft.Azure.Management.Batch.Models.AccountKeyType
      description: keyType either primary or secondary key to be regenerated
    return:
      type: Microsoft.Azure.Management.Fluent.Batch.BatchAccountKeys
      description: the access keys for this batch account
- uid: Microsoft.Azure.Management.Fluent.Batch.IBatchAccount.SynchronizeAutoStorageKeys
  commentId: M:Microsoft.Azure.Management.Fluent.Batch.IBatchAccount.SynchronizeAutoStorageKeys
  id: SynchronizeAutoStorageKeys
  parent: Microsoft.Azure.Management.Fluent.Batch.IBatchAccount
  langs:
  - csharp
  - vb
  name: SynchronizeAutoStorageKeys()
  fullName: Microsoft.Azure.Management.Fluent.Batch.IBatchAccount.SynchronizeAutoStorageKeys()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IBatchAccount.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SynchronizeAutoStorageKeys
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IBatchAccount.cs
    startLine: 53
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Batch
  summary: "\nSynchronize the storage account keys for batch account.\n"
  example: []
  syntax:
    content: void SynchronizeAutoStorageKeys()
    content.vb: Sub SynchronizeAutoStorageKeys
- uid: Microsoft.Azure.Management.Fluent.Batch.IBatchAccount.Applications
  commentId: P:Microsoft.Azure.Management.Fluent.Batch.IBatchAccount.Applications
  id: Applications
  parent: Microsoft.Azure.Management.Fluent.Batch.IBatchAccount
  langs:
  - csharp
  - vb
  name: Applications
  fullName: Microsoft.Azure.Management.Fluent.Batch.IBatchAccount.Applications
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IBatchAccount.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Applications
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IBatchAccount.cs
    startLine: 56
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Batch
  example: []
  syntax:
    content: IDictionary<string, IApplication> Applications { get; }
    content.vb: ReadOnly Property Applications As IDictionary(Of String, IApplication)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.Fluent.Batch.IApplication}
      description: the application in this batch account.
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Microsoft.Azure.Management.Fluent.Batch
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Batch
  fullName: Microsoft.Azure.Management.Fluent.Batch
- uid: Microsoft.Azure.Management.Batch.Models.ProvisioningState
  parent: Microsoft.Azure.Management.Batch.Models
  isExternal: false
  name: ProvisioningState
  fullName: Microsoft.Azure.Management.Batch.Models.ProvisioningState
- uid: Microsoft.Azure.Management.Batch.Models
  isExternal: false
  name: Microsoft.Azure.Management.Batch.Models
  fullName: Microsoft.Azure.Management.Batch.Models
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Management.Batch.Models.AutoStorageProperties
  parent: Microsoft.Azure.Management.Batch.Models
  isExternal: false
  name: AutoStorageProperties
  fullName: Microsoft.Azure.Management.Batch.Models.AutoStorageProperties
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: Microsoft.Azure.Management.Fluent.Batch.BatchAccountKeys
  parent: Microsoft.Azure.Management.Fluent.Batch
  isExternal: false
  name: BatchAccountKeys
  fullName: Microsoft.Azure.Management.Fluent.Batch.BatchAccountKeys
- uid: Microsoft.Azure.Management.Batch.Models.AccountKeyType
  parent: Microsoft.Azure.Management.Batch.Models
  isExternal: false
  name: AccountKeyType
  fullName: Microsoft.Azure.Management.Batch.Models.AccountKeyType
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.Fluent.Batch.IApplication}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, IApplication>
  fullName: System.Collections.Generic.IDictionary<System.String, Microsoft.Azure.Management.Fluent.Batch.IApplication>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, Microsoft.Azure.Management.Fluent.Batch.IApplication)
  name.vb: IDictionary(Of String, IApplication)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Fluent.Batch.IApplication
    name: IApplication
    fullName: Microsoft.Azure.Management.Fluent.Batch.IApplication
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Fluent.Batch.IApplication
    name: IApplication
    fullName: Microsoft.Azure.Management.Fluent.Batch.IApplication
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
