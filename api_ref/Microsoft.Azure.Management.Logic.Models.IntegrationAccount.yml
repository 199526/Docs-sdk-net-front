items:
- uid: Microsoft.Azure.Management.Logic.Models.IntegrationAccount
  commentId: T:Microsoft.Azure.Management.Logic.Models.IntegrationAccount
  id: IntegrationAccount
  parent: Microsoft.Azure.Management.Logic.Models
  children:
  - Microsoft.Azure.Management.Logic.Models.IntegrationAccount.#ctor
  - Microsoft.Azure.Management.Logic.Models.IntegrationAccount.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Object,Microsoft.Azure.Management.Logic.Models.IntegrationAccountSku)
  - Microsoft.Azure.Management.Logic.Models.IntegrationAccount.Properties
  - Microsoft.Azure.Management.Logic.Models.IntegrationAccount.Sku
  langs:
  - csharp
  - vb
  name: IntegrationAccount
  fullName: Microsoft.Azure.Management.Logic.Models.IntegrationAccount
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/IntegrationAccount.cs
      branch: d379d8d7cc630da30685344b7f7b0698c456763f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IntegrationAccount
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/IntegrationAccount.cs
    startLine: 18
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic.Models
  syntax:
    content: 'public class IntegrationAccount : IntegrationAccountResource'
    content.vb: >-
      Public Class IntegrationAccount
          Inherits IntegrationAccountResource
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.Logic.Models.IntegrationAccountResource
  inheritedMembers:
  - Microsoft.Azure.Management.Logic.Models.IntegrationAccountResource.Id
  - Microsoft.Azure.Management.Logic.Models.IntegrationAccountResource.Name
  - Microsoft.Azure.Management.Logic.Models.IntegrationAccountResource.Type
  - Microsoft.Azure.Management.Logic.Models.IntegrationAccountResource.Location
  - Microsoft.Azure.Management.Logic.Models.IntegrationAccountResource.Tags
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Logic.Models.IntegrationAccount.#ctor
  commentId: M:Microsoft.Azure.Management.Logic.Models.IntegrationAccount.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Logic.Models.IntegrationAccount
  langs:
  - csharp
  - vb
  name: IntegrationAccount()
  fullName: Microsoft.Azure.Management.Logic.Models.IntegrationAccount.IntegrationAccount()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/IntegrationAccount.cs
      branch: d379d8d7cc630da30685344b7f7b0698c456763f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/IntegrationAccount.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic.Models
  summary: "\nInitializes a new instance of the IntegrationAccount class.\n"
  example: []
  syntax:
    content: public IntegrationAccount()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Logic.Models.IntegrationAccount.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Object,Microsoft.Azure.Management.Logic.Models.IntegrationAccountSku)
  commentId: M:Microsoft.Azure.Management.Logic.Models.IntegrationAccount.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Object,Microsoft.Azure.Management.Logic.Models.IntegrationAccountSku)
  id: '#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Object,Microsoft.Azure.Management.Logic.Models.IntegrationAccountSku)'
  parent: Microsoft.Azure.Management.Logic.Models.IntegrationAccount
  langs:
  - csharp
  - vb
  name: IntegrationAccount(String, String, String, String, IDictionary<String, String>, Object, IntegrationAccountSku)
  fullName: Microsoft.Azure.Management.Logic.Models.IntegrationAccount.IntegrationAccount(System.String, System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.String>, System.Object, Microsoft.Azure.Management.Logic.Models.IntegrationAccountSku)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/IntegrationAccount.cs
      branch: d379d8d7cc630da30685344b7f7b0698c456763f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/IntegrationAccount.cs
    startLine: 28
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic.Models
  summary: "\nInitializes a new instance of the IntegrationAccount class.\n"
  example: []
  syntax:
    content: public IntegrationAccount(string id = null, string name = null, string type = null, string location = null, IDictionary<string, string> tags = null, object properties = null, IntegrationAccountSku sku = null)
    content.vb: Public Sub New(id As String = Nothing, name As String = Nothing, type As String = Nothing, location As String = Nothing, tags As IDictionary(Of String, String) = Nothing, properties As Object = Nothing, sku As IntegrationAccountSku = Nothing)
    parameters:
    - id: id
      type: System.String
    - id: name
      type: System.String
    - id: type
      type: System.String
    - id: location
      type: System.String
    - id: tags
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    - id: properties
      type: System.Object
    - id: sku
      type: Microsoft.Azure.Management.Logic.Models.IntegrationAccountSku
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Logic.Models.IntegrationAccount.IntegrationAccount(System.String, System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.String), System.Object, Microsoft.Azure.Management.Logic.Models.IntegrationAccountSku)
  name.vb: IntegrationAccount(String, String, String, String, IDictionary(Of String, String), Object, IntegrationAccountSku)
- uid: Microsoft.Azure.Management.Logic.Models.IntegrationAccount.Properties
  commentId: P:Microsoft.Azure.Management.Logic.Models.IntegrationAccount.Properties
  id: Properties
  parent: Microsoft.Azure.Management.Logic.Models.IntegrationAccount
  langs:
  - csharp
  - vb
  name: Properties
  fullName: Microsoft.Azure.Management.Logic.Models.IntegrationAccount.Properties
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/IntegrationAccount.cs
      branch: d379d8d7cc630da30685344b7f7b0698c456763f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Properties
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/IntegrationAccount.cs
    startLine: 38
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic.Models
  summary: "\nGets or sets the integration account properties.\n"
  example: []
  syntax:
    content: public object Properties { get; set; }
    content.vb: Public Property Properties As Object
    parameters: []
    return:
      type: System.Object
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Logic.Models.IntegrationAccount.Sku
  commentId: P:Microsoft.Azure.Management.Logic.Models.IntegrationAccount.Sku
  id: Sku
  parent: Microsoft.Azure.Management.Logic.Models.IntegrationAccount
  langs:
  - csharp
  - vb
  name: Sku
  fullName: Microsoft.Azure.Management.Logic.Models.IntegrationAccount.Sku
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/IntegrationAccount.cs
      branch: d379d8d7cc630da30685344b7f7b0698c456763f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Sku
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/IntegrationAccount.cs
    startLine: 44
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic.Models
  summary: "\nGets or sets the sku.\n"
  example: []
  syntax:
    content: public IntegrationAccountSku Sku { get; set; }
    content.vb: Public Property Sku As IntegrationAccountSku
    parameters: []
    return:
      type: Microsoft.Azure.Management.Logic.Models.IntegrationAccountSku
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Logic.Models
  isExternal: false
  name: Microsoft.Azure.Management.Logic.Models
  fullName: Microsoft.Azure.Management.Logic.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.Logic.Models.IntegrationAccountResource
  parent: Microsoft.Azure.Management.Logic.Models
  isExternal: false
  name: IntegrationAccountResource
  fullName: Microsoft.Azure.Management.Logic.Models.IntegrationAccountResource
- uid: Microsoft.Azure.Management.Logic.Models.IntegrationAccountResource.Id
  parent: Microsoft.Azure.Management.Logic.Models.IntegrationAccountResource
  isExternal: false
  name: Id
  fullName: Microsoft.Azure.Management.Logic.Models.IntegrationAccountResource.Id
- uid: Microsoft.Azure.Management.Logic.Models.IntegrationAccountResource.Name
  parent: Microsoft.Azure.Management.Logic.Models.IntegrationAccountResource
  isExternal: false
  name: Name
  fullName: Microsoft.Azure.Management.Logic.Models.IntegrationAccountResource.Name
- uid: Microsoft.Azure.Management.Logic.Models.IntegrationAccountResource.Type
  parent: Microsoft.Azure.Management.Logic.Models.IntegrationAccountResource
  isExternal: false
  name: Type
  fullName: Microsoft.Azure.Management.Logic.Models.IntegrationAccountResource.Type
- uid: Microsoft.Azure.Management.Logic.Models.IntegrationAccountResource.Location
  parent: Microsoft.Azure.Management.Logic.Models.IntegrationAccountResource
  isExternal: false
  name: Location
  fullName: Microsoft.Azure.Management.Logic.Models.IntegrationAccountResource.Location
- uid: Microsoft.Azure.Management.Logic.Models.IntegrationAccountResource.Tags
  parent: Microsoft.Azure.Management.Logic.Models.IntegrationAccountResource
  isExternal: false
  name: Tags
  fullName: Microsoft.Azure.Management.Logic.Models.IntegrationAccountResource.Tags
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Logic.Models.IntegrationAccountSku
  parent: Microsoft.Azure.Management.Logic.Models
  isExternal: false
  name: IntegrationAccountSku
  fullName: Microsoft.Azure.Management.Logic.Models.IntegrationAccountSku
- uid: System.Collections.Generic.IDictionary`2
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
