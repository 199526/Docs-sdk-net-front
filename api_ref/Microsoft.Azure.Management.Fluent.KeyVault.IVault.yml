items:
- uid: Microsoft.Azure.Management.Fluent.KeyVault.IVault
  commentId: T:Microsoft.Azure.Management.Fluent.KeyVault.IVault
  id: IVault
  parent: Microsoft.Azure.Management.Fluent.KeyVault
  children:
  - Microsoft.Azure.Management.Fluent.KeyVault.IVault.AccessPolicies
  - Microsoft.Azure.Management.Fluent.KeyVault.IVault.EnabledForDeployment
  - Microsoft.Azure.Management.Fluent.KeyVault.IVault.EnabledForDiskEncryption
  - Microsoft.Azure.Management.Fluent.KeyVault.IVault.EnabledForTemplateDeployment
  - Microsoft.Azure.Management.Fluent.KeyVault.IVault.Sku
  - Microsoft.Azure.Management.Fluent.KeyVault.IVault.TenantId
  - Microsoft.Azure.Management.Fluent.KeyVault.IVault.VaultUri
  langs:
  - csharp
  - vb
  name: IVault
  fullName: Microsoft.Azure.Management.Fluent.KeyVault.IVault
  type: Interface
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Domain/IVault.cs
      branch: b5400192ce8d5df11f466ed2ca49a6bb436c128e
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IVault
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Domain/IVault.cs
    startLine: 14
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.KeyVault
  summary: "\nAn immutable client-side representation of an Azure Key Vault.\n"
  example: []
  syntax:
    content: 'public interface IVault : IGroupableResource, IRefreshable<IVault>, IUpdatable<IUpdate>, IWrapper<VaultInner>'
    content.vb: >-
      Public Interface IVault
          Inherits IGroupableResource, IRefreshable(Of IVault), IUpdatable(Of IUpdate), IWrapper(Of VaultInner)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Azure.Management.Fluent.KeyVault.IVault.VaultUri
  commentId: P:Microsoft.Azure.Management.Fluent.KeyVault.IVault.VaultUri
  id: VaultUri
  parent: Microsoft.Azure.Management.Fluent.KeyVault.IVault
  langs:
  - csharp
  - vb
  name: VaultUri
  fullName: Microsoft.Azure.Management.Fluent.KeyVault.IVault.VaultUri
  type: Property
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Domain/IVault.cs
      branch: b5400192ce8d5df11f466ed2ca49a6bb436c128e
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VaultUri
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Domain/IVault.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.KeyVault
  example: []
  syntax:
    content: string VaultUri { get; }
    content.vb: ReadOnly Property VaultUri As String
    parameters: []
    return:
      type: System.String
      description: the URI of the vault for performing operations on keys and secrets.
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.KeyVault.IVault.TenantId
  commentId: P:Microsoft.Azure.Management.Fluent.KeyVault.IVault.TenantId
  id: TenantId
  parent: Microsoft.Azure.Management.Fluent.KeyVault.IVault
  langs:
  - csharp
  - vb
  name: TenantId
  fullName: Microsoft.Azure.Management.Fluent.KeyVault.IVault.TenantId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Domain/IVault.cs
      branch: b5400192ce8d5df11f466ed2ca49a6bb436c128e
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TenantId
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Domain/IVault.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.KeyVault
  example: []
  syntax:
    content: string TenantId { get; }
    content.vb: ReadOnly Property TenantId As String
    parameters: []
    return:
      type: System.String
      description: the Azure Active Directory tenant ID that should be used for
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.KeyVault.IVault.Sku
  commentId: P:Microsoft.Azure.Management.Fluent.KeyVault.IVault.Sku
  id: Sku
  parent: Microsoft.Azure.Management.Fluent.KeyVault.IVault
  langs:
  - csharp
  - vb
  name: Sku
  fullName: Microsoft.Azure.Management.Fluent.KeyVault.IVault.Sku
  type: Property
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Domain/IVault.cs
      branch: b5400192ce8d5df11f466ed2ca49a6bb436c128e
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Sku
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Domain/IVault.cs
    startLine: 28
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.KeyVault
  example: []
  syntax:
    content: Sku Sku { get; }
    content.vb: ReadOnly Property Sku As Sku
    parameters: []
    return:
      type: Microsoft.Azure.Management.KeyVault.Models.Sku
      description: SKU details.
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.KeyVault.IVault.AccessPolicies
  commentId: M:Microsoft.Azure.Management.Fluent.KeyVault.IVault.AccessPolicies
  id: AccessPolicies
  parent: Microsoft.Azure.Management.Fluent.KeyVault.IVault
  langs:
  - csharp
  - vb
  name: AccessPolicies()
  fullName: Microsoft.Azure.Management.Fluent.KeyVault.IVault.AccessPolicies()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Domain/IVault.cs
      branch: b5400192ce8d5df11f466ed2ca49a6bb436c128e
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AccessPolicies
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Domain/IVault.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.KeyVault
  example: []
  syntax:
    content: IList<IAccessPolicy> AccessPolicies()
    content.vb: Function AccessPolicies As IList(Of IAccessPolicy)
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Fluent.KeyVault.IAccessPolicy}
      description: an array of 0 to 16 identities that have access to the key vault. All
- uid: Microsoft.Azure.Management.Fluent.KeyVault.IVault.EnabledForDeployment
  commentId: P:Microsoft.Azure.Management.Fluent.KeyVault.IVault.EnabledForDeployment
  id: EnabledForDeployment
  parent: Microsoft.Azure.Management.Fluent.KeyVault.IVault
  langs:
  - csharp
  - vb
  name: EnabledForDeployment
  fullName: Microsoft.Azure.Management.Fluent.KeyVault.IVault.EnabledForDeployment
  type: Property
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Domain/IVault.cs
      branch: b5400192ce8d5df11f466ed2ca49a6bb436c128e
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EnabledForDeployment
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Domain/IVault.cs
    startLine: 37
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.KeyVault
  example: []
  syntax:
    content: bool ? EnabledForDeployment { get; }
    content.vb: ReadOnly Property EnabledForDeployment As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
      description: whether Azure Virtual Machines are permitted to
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.KeyVault.IVault.EnabledForDiskEncryption
  commentId: P:Microsoft.Azure.Management.Fluent.KeyVault.IVault.EnabledForDiskEncryption
  id: EnabledForDiskEncryption
  parent: Microsoft.Azure.Management.Fluent.KeyVault.IVault
  langs:
  - csharp
  - vb
  name: EnabledForDiskEncryption
  fullName: Microsoft.Azure.Management.Fluent.KeyVault.IVault.EnabledForDiskEncryption
  type: Property
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Domain/IVault.cs
      branch: b5400192ce8d5df11f466ed2ca49a6bb436c128e
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EnabledForDiskEncryption
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Domain/IVault.cs
    startLine: 41
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.KeyVault
  example: []
  syntax:
    content: bool ? EnabledForDiskEncryption { get; }
    content.vb: ReadOnly Property EnabledForDiskEncryption As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
      description: whether Azure Disk Encryption is permitted to
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.KeyVault.IVault.EnabledForTemplateDeployment
  commentId: P:Microsoft.Azure.Management.Fluent.KeyVault.IVault.EnabledForTemplateDeployment
  id: EnabledForTemplateDeployment
  parent: Microsoft.Azure.Management.Fluent.KeyVault.IVault
  langs:
  - csharp
  - vb
  name: EnabledForTemplateDeployment
  fullName: Microsoft.Azure.Management.Fluent.KeyVault.IVault.EnabledForTemplateDeployment
  type: Property
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Domain/IVault.cs
      branch: b5400192ce8d5df11f466ed2ca49a6bb436c128e
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EnabledForTemplateDeployment
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Domain/IVault.cs
    startLine: 45
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.KeyVault
  example: []
  syntax:
    content: bool ? EnabledForTemplateDeployment { get; }
    content.vb: ReadOnly Property EnabledForTemplateDeployment As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
      description: whether Azure Resource Manager is permitted to
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Microsoft.Azure.Management.Fluent.KeyVault
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.KeyVault
  fullName: Microsoft.Azure.Management.Fluent.KeyVault
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Management.KeyVault.Models.Sku
  parent: Microsoft.Azure.Management.KeyVault.Models
  isExternal: false
  name: Sku
  fullName: Microsoft.Azure.Management.KeyVault.Models.Sku
- uid: Microsoft.Azure.Management.KeyVault.Models
  isExternal: false
  name: Microsoft.Azure.Management.KeyVault.Models
  fullName: Microsoft.Azure.Management.KeyVault.Models
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Fluent.KeyVault.IAccessPolicy}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IAccessPolicy>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Fluent.KeyVault.IAccessPolicy>
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Fluent.KeyVault.IAccessPolicy)
  name.vb: IList(Of IAccessPolicy)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.KeyVault.IAccessPolicy
    name: IAccessPolicy
    fullName: Microsoft.Azure.Management.Fluent.KeyVault.IAccessPolicy
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.KeyVault.IAccessPolicy
    name: IAccessPolicy
    fullName: Microsoft.Azure.Management.Fluent.KeyVault.IAccessPolicy
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: true
  name: IList<T>
  fullName: System.Collections.Generic.IList<T>
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
