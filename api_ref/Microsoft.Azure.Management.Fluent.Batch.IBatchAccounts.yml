items:
- uid: Microsoft.Azure.Management.Fluent.Batch.IBatchAccounts
  commentId: T:Microsoft.Azure.Management.Fluent.Batch.IBatchAccounts
  id: IBatchAccounts
  parent: Microsoft.Azure.Management.Fluent.Batch
  children:
  - Microsoft.Azure.Management.Fluent.Batch.IBatchAccounts.GetBatchAccountQuotaByLocation(Region)
  langs:
  - csharp
  - vb
  name: IBatchAccounts
  fullName: Microsoft.Azure.Management.Fluent.Batch.IBatchAccounts
  type: Interface
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IBatchAccounts.cs
      branch: 33fd3ea99c60bab0a8ccbb1cd87328cb5e82e49f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IBatchAccounts
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IBatchAccounts.cs
    startLine: 12
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Batch
  summary: "\nEntry point to batch account management API.\n"
  example: []
  syntax:
    content: 'public interface IBatchAccounts : ISupportsCreating<IBlank>, ISupportsListing<IBatchAccount>, ISupportsListingByGroup<IBatchAccount>, ISupportsGettingByGroup<IBatchAccount>, ISupportsGettingById<IBatchAccount>, ISupportsDeleting, ISupportsDeletingByGroup, ISupportsBatchCreation<IBatchAccount>'
    content.vb: >-
      Public Interface IBatchAccounts
          Inherits ISupportsCreating(Of IBlank), ISupportsListing(Of IBatchAccount), ISupportsListingByGroup(Of IBatchAccount), ISupportsGettingByGroup(Of IBatchAccount), ISupportsGettingById(Of IBatchAccount), ISupportsDeleting, ISupportsDeletingByGroup, ISupportsBatchCreation(Of IBatchAccount)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Azure.Management.Fluent.Batch.IBatchAccounts.GetBatchAccountQuotaByLocation(Region)
  commentId: M:Microsoft.Azure.Management.Fluent.Batch.IBatchAccounts.GetBatchAccountQuotaByLocation(Region)
  id: GetBatchAccountQuotaByLocation(Region)
  parent: Microsoft.Azure.Management.Fluent.Batch.IBatchAccounts
  langs:
  - csharp
  - vb
  name: GetBatchAccountQuotaByLocation(Region)
  fullName: Microsoft.Azure.Management.Fluent.Batch.IBatchAccounts.GetBatchAccountQuotaByLocation(Region)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IBatchAccounts.cs
      branch: 33fd3ea99c60bab0a8ccbb1cd87328cb5e82e49f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetBatchAccountQuotaByLocation
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IBatchAccounts.cs
    startLine: 27
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Batch
  summary: "\nQueries the number of the batch account can be created in specified region`.\n"
  example: []
  syntax:
    content: int GetBatchAccountQuotaByLocation(Region region)
    content.vb: Function GetBatchAccountQuotaByLocation(region As Region) As Integer
    parameters:
    - id: region
      type: Region
      description: region the region in for which to check quota
    return:
      type: System.Int32
      description: whether the number of batch accounts can be created in specified region.
references:
- uid: Microsoft.Azure.Management.Fluent.Batch
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Batch
  fullName: Microsoft.Azure.Management.Fluent.Batch
- uid: Region
  isExternal: true
  name: Region
  fullName: Region
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System
  isExternal: false
  name: System
  fullName: System
