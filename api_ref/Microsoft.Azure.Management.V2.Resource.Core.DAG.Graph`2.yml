items:
- uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2
  commentId: T:Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2
  id: Graph`2
  parent: Microsoft.Azure.Management.V2.Resource.Core.DAG
  children:
  - Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2.#ctor
  - Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2.AddNode(`1)
  - Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2.Contains(System.String)
  - Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2.GetNode(System.String)
  - Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2.graph
  - Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2.Visit(System.Action{`1})
  langs:
  - csharp
  - vb
  name: Graph<NodeDataT, NodeT>
  fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph<NodeDataT, NodeT>
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/DAG/Graph.cs
      branch: cd270513306c57dd9b30d6848211d164d0a1fb5b
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Graph
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/DAG/Graph.cs
    startLine: 8
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core.DAG
  syntax:
    content: >-
      public class Graph<NodeDataT, NodeT>
          where NodeT : Node<NodeDataT>
    content.vb: Public Class Graph(Of NodeDataT, NodeT As Node(Of NodeDataT))
    typeParameters:
    - id: NodeDataT
    - id: NodeT
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph(Of NodeDataT, NodeT)
  name.vb: Graph(Of NodeDataT, NodeT)
- uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2.graph
  commentId: F:Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2.graph
  id: graph
  parent: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2
  langs:
  - csharp
  - vb
  name: graph
  fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph<NodeDataT, NodeT>.graph
  type: Field
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/DAG/Graph.cs
      branch: cd270513306c57dd9b30d6848211d164d0a1fb5b
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: graph
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/DAG/Graph.cs
    startLine: 10
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core.DAG
  syntax:
    content: protected IDictionary<string, NodeT> graph
    content.vb: Protected graph As IDictionary(Of String, NodeT)
    return:
      type: System.Collections.Generic.IDictionary{System.String,{NodeT}}
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph(Of NodeDataT, NodeT).graph
- uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2.#ctor
  commentId: M:Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2
  langs:
  - csharp
  - vb
  name: Graph()
  fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph<NodeDataT, NodeT>.Graph()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/DAG/Graph.cs
      branch: cd270513306c57dd9b30d6848211d164d0a1fb5b
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/DAG/Graph.cs
    startLine: 13
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core.DAG
  syntax:
    content: public Graph()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph(Of NodeDataT, NodeT).Graph()
- uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2.AddNode(`1)
  commentId: M:Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2.AddNode(`1)
  id: AddNode(`1)
  parent: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2
  langs:
  - csharp
  - vb
  name: AddNode(NodeT)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph<NodeDataT, NodeT>.AddNode(NodeT)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/DAG/Graph.cs
      branch: cd270513306c57dd9b30d6848211d164d0a1fb5b
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AddNode
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/DAG/Graph.cs
    startLine: 19
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core.DAG
  syntax:
    content: public void AddNode(NodeT node)
    content.vb: Public Sub AddNode(node As NodeT)
    parameters:
    - id: node
      type: '{NodeT}'
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph(Of NodeDataT, NodeT).AddNode(NodeT)
- uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2.Contains(System.String)
  commentId: M:Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2.Contains(System.String)
  id: Contains(System.String)
  parent: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2
  langs:
  - csharp
  - vb
  name: Contains(String)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph<NodeDataT, NodeT>.Contains(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/DAG/Graph.cs
      branch: cd270513306c57dd9b30d6848211d164d0a1fb5b
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Contains
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/DAG/Graph.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core.DAG
  syntax:
    content: public bool Contains(string key)
    content.vb: Public Function Contains(key As String) As Boolean
    parameters:
    - id: key
      type: System.String
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph(Of NodeDataT, NodeT).Contains(System.String)
- uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2.GetNode(System.String)
  commentId: M:Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2.GetNode(System.String)
  id: GetNode(System.String)
  parent: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2
  langs:
  - csharp
  - vb
  name: GetNode(String)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph<NodeDataT, NodeT>.GetNode(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/DAG/Graph.cs
      branch: cd270513306c57dd9b30d6848211d164d0a1fb5b
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetNode
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/DAG/Graph.cs
    startLine: 35
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core.DAG
  syntax:
    content: public NodeT GetNode(string key)
    content.vb: Public Function GetNode(key As String) As NodeT
    parameters:
    - id: key
      type: System.String
    return:
      type: '{NodeT}'
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph(Of NodeDataT, NodeT).GetNode(System.String)
- uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2.Visit(System.Action{`1})
  commentId: M:Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2.Visit(System.Action{`1})
  id: Visit(System.Action{`1})
  parent: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2
  langs:
  - csharp
  - vb
  name: Visit(Action<NodeT>)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph<NodeDataT, NodeT>.Visit(System.Action<NodeT>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/DAG/Graph.cs
      branch: cd270513306c57dd9b30d6848211d164d0a1fb5b
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Visit
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/DAG/Graph.cs
    startLine: 45
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core.DAG
  syntax:
    content: public void Visit(Action<NodeT> visitor)
    content.vb: Public Sub Visit(visitor As Action(Of NodeT))
    parameters:
    - id: visitor
      type: System.Action{{NodeT}}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph(Of NodeDataT, NodeT).Visit(System.Action(Of NodeT))
  name.vb: Visit(Action(Of NodeT))
references:
- uid: Microsoft.Azure.Management.V2.Resource.Core.DAG
  isExternal: false
  name: Microsoft.Azure.Management.V2.Resource.Core.DAG
  fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.Generic.IDictionary{System.String,{NodeT}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, NodeT>
  fullName: System.Collections.Generic.IDictionary<System.String, NodeT>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, NodeT)
  name.vb: IDictionary(Of String, NodeT)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - name: NodeT
    fullName: NodeT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - name: NodeT
    fullName: NodeT
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: '{NodeT}'
  isExternal: false
  name: NodeT
  fullName: NodeT
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.Action{{NodeT}}
  parent: System
  definition: System.Action`1
  name: Action<NodeT>
  fullName: System.Action<NodeT>
  fullname.vb: System.Action(Of NodeT)
  name.vb: Action(Of NodeT)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    fullName: System.Action
    isExternal: true
  - name: <
    fullName: <
  - name: NodeT
    fullName: NodeT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: NodeT
    fullName: NodeT
  - name: )
    fullName: )
- uid: System.Action`1
  parent: System
  isExternal: true
  name: Action<T>
  fullName: System.Action<T>
  fullname.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    fullName: System.Action
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
