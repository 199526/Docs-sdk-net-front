### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.Compute.Models.UpgradeStatus
  commentId: T:Microsoft.WindowsAzure.Management.Compute.Models.UpgradeStatus
  id: UpgradeStatus
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  children:
  - Microsoft.WindowsAzure.Management.Compute.Models.UpgradeStatus.#ctor
  - Microsoft.WindowsAzure.Management.Compute.Models.UpgradeStatus.CurrentUpgradeDomain
  - Microsoft.WindowsAzure.Management.Compute.Models.UpgradeStatus.CurrentUpgradeDomainState
  - Microsoft.WindowsAzure.Management.Compute.Models.UpgradeStatus.UpgradeType
  langs:
  - csharp
  - vb
  name: UpgradeStatus
  nameWithType: UpgradeStatus
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.UpgradeStatus
  type: Class
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/UpgradeStatus.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UpgradeStatus
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/UpgradeStatus.cs
    startLine: 30
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\nContains upgrade details of the deployment.\n"
  example: []
  syntax:
    content: public class UpgradeStatus
    content.vb: Public Class UpgradeStatus
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.Compute.Models.UpgradeStatus.CurrentUpgradeDomain
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.UpgradeStatus.CurrentUpgradeDomain
  id: CurrentUpgradeDomain
  parent: Microsoft.WindowsAzure.Management.Compute.Models.UpgradeStatus
  langs:
  - csharp
  - vb
  name: CurrentUpgradeDomain
  nameWithType: UpgradeStatus.CurrentUpgradeDomain
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.UpgradeStatus.CurrentUpgradeDomain
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/UpgradeStatus.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CurrentUpgradeDomain
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/UpgradeStatus.cs
    startLine: 40
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\nOptional. An integer value that identifies the current upgrade\ndomain. Upgrade domains are identified with a zero-based index:\nthe first upgrade domain has an ID of 0, the second has an ID of\n1, and so on.\n"
  example: []
  syntax:
    content: public int CurrentUpgradeDomain { get; set; }
    content.vb: Public Property CurrentUpgradeDomain As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.UpgradeStatus.CurrentUpgradeDomainState
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.UpgradeStatus.CurrentUpgradeDomainState
  id: CurrentUpgradeDomainState
  parent: Microsoft.WindowsAzure.Management.Compute.Models.UpgradeStatus
  langs:
  - csharp
  - vb
  name: CurrentUpgradeDomainState
  nameWithType: UpgradeStatus.CurrentUpgradeDomainState
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.UpgradeStatus.CurrentUpgradeDomainState
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/UpgradeStatus.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CurrentUpgradeDomainState
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/UpgradeStatus.cs
    startLine: 52
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\nOptional. The current state of the upgrade. Possible values are\nBefore and During\n"
  example: []
  syntax:
    content: public UpgradeDomainState CurrentUpgradeDomainState { get; set; }
    content.vb: Public Property CurrentUpgradeDomainState As UpgradeDomainState
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Management.Compute.Models.UpgradeDomainState
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.UpgradeStatus.UpgradeType
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.UpgradeStatus.UpgradeType
  id: UpgradeType
  parent: Microsoft.WindowsAzure.Management.Compute.Models.UpgradeStatus
  langs:
  - csharp
  - vb
  name: UpgradeType
  nameWithType: UpgradeStatus.UpgradeType
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.UpgradeStatus.UpgradeType
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/UpgradeStatus.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UpgradeType
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/UpgradeStatus.cs
    startLine: 64
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\nOptional. The type of the upgrade. Possible values are Auto and\nManual.\n"
  example: []
  syntax:
    content: public DeploymentUpgradeType UpgradeType { get; set; }
    content.vb: Public Property UpgradeType As DeploymentUpgradeType
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeType
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.UpgradeStatus.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.Compute.Models.UpgradeStatus.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.Compute.Models.UpgradeStatus
  langs:
  - csharp
  - vb
  name: UpgradeStatus()
  nameWithType: UpgradeStatus.UpgradeStatus()
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.UpgradeStatus.UpgradeStatus()
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/UpgradeStatus.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/UpgradeStatus.cs
    startLine: 73
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\nInitializes a new instance of the UpgradeStatus class.\n"
  example: []
  syntax:
    content: public UpgradeStatus()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.Compute.Models
  commentId: N:Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Compute.Models
  nameWithType: Microsoft.WindowsAzure.Management.Compute.Models
  fullName: Microsoft.WindowsAzure.Management.Compute.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.WindowsAzure.Management.Compute.Models.UpgradeDomainState
  commentId: T:Microsoft.WindowsAzure.Management.Compute.Models.UpgradeDomainState
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: UpgradeDomainState
  nameWithType: UpgradeDomainState
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.UpgradeDomainState
- uid: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeType
  commentId: T:Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeType
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: DeploymentUpgradeType
  nameWithType: DeploymentUpgradeType
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeType
