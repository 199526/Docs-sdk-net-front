items:
- uid: Microsoft.Azure.Management.Logic.Models.RecurrenceSchedule
  commentId: T:Microsoft.Azure.Management.Logic.Models.RecurrenceSchedule
  id: RecurrenceSchedule
  parent: Microsoft.Azure.Management.Logic.Models
  children:
  - Microsoft.Azure.Management.Logic.Models.RecurrenceSchedule.#ctor
  - Microsoft.Azure.Management.Logic.Models.RecurrenceSchedule.#ctor(System.Collections.Generic.IList{System.Nullable{System.Int32}},System.Collections.Generic.IList{System.Nullable{System.Int32}},System.Collections.Generic.IList{System.Nullable{Microsoft.Azure.Management.Logic.Models.DaysOfWeek}},System.Collections.Generic.IList{System.Nullable{System.Int32}},System.Collections.Generic.IList{Microsoft.Azure.Management.Logic.Models.RecurrenceScheduleOccurrence})
  - Microsoft.Azure.Management.Logic.Models.RecurrenceSchedule.Hours
  - Microsoft.Azure.Management.Logic.Models.RecurrenceSchedule.Minutes
  - Microsoft.Azure.Management.Logic.Models.RecurrenceSchedule.MonthDays
  - Microsoft.Azure.Management.Logic.Models.RecurrenceSchedule.MonthlyOccurrences
  - Microsoft.Azure.Management.Logic.Models.RecurrenceSchedule.WeekDays
  langs:
  - csharp
  - vb
  name: RecurrenceSchedule
  fullName: Microsoft.Azure.Management.Logic.Models.RecurrenceSchedule
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/RecurrenceSchedule.cs
      branch: 2d793328d097bcb56ec8f92d3d36ef0ffe249a1d
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RecurrenceSchedule
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/RecurrenceSchedule.cs
    startLine: 18
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic.Models
  syntax:
    content: public class RecurrenceSchedule
    content.vb: Public Class RecurrenceSchedule
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Logic.Models.RecurrenceSchedule.#ctor
  commentId: M:Microsoft.Azure.Management.Logic.Models.RecurrenceSchedule.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Logic.Models.RecurrenceSchedule
  langs:
  - csharp
  - vb
  name: RecurrenceSchedule()
  fullName: Microsoft.Azure.Management.Logic.Models.RecurrenceSchedule.RecurrenceSchedule()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/RecurrenceSchedule.cs
      branch: 2d793328d097bcb56ec8f92d3d36ef0ffe249a1d
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/RecurrenceSchedule.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic.Models
  summary: "\nInitializes a new instance of the RecurrenceSchedule class.\n"
  example: []
  syntax:
    content: public RecurrenceSchedule()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Logic.Models.RecurrenceSchedule.#ctor(System.Collections.Generic.IList{System.Nullable{System.Int32}},System.Collections.Generic.IList{System.Nullable{System.Int32}},System.Collections.Generic.IList{System.Nullable{Microsoft.Azure.Management.Logic.Models.DaysOfWeek}},System.Collections.Generic.IList{System.Nullable{System.Int32}},System.Collections.Generic.IList{Microsoft.Azure.Management.Logic.Models.RecurrenceScheduleOccurrence})
  commentId: M:Microsoft.Azure.Management.Logic.Models.RecurrenceSchedule.#ctor(System.Collections.Generic.IList{System.Nullable{System.Int32}},System.Collections.Generic.IList{System.Nullable{System.Int32}},System.Collections.Generic.IList{System.Nullable{Microsoft.Azure.Management.Logic.Models.DaysOfWeek}},System.Collections.Generic.IList{System.Nullable{System.Int32}},System.Collections.Generic.IList{Microsoft.Azure.Management.Logic.Models.RecurrenceScheduleOccurrence})
  id: '#ctor(System.Collections.Generic.IList{System.Nullable{System.Int32}},System.Collections.Generic.IList{System.Nullable{System.Int32}},System.Collections.Generic.IList{System.Nullable{Microsoft.Azure.Management.Logic.Models.DaysOfWeek}},System.Collections.Generic.IList{System.Nullable{System.Int32}},System.Collections.Generic.IList{Microsoft.Azure.Management.Logic.Models.RecurrenceScheduleOccurrence})'
  parent: Microsoft.Azure.Management.Logic.Models.RecurrenceSchedule
  langs:
  - csharp
  - vb
  name: RecurrenceSchedule(IList<Nullable<Int32>>, IList<Nullable<Int32>>, IList<Nullable<DaysOfWeek>>, IList<Nullable<Int32>>, IList<RecurrenceScheduleOccurrence>)
  fullName: Microsoft.Azure.Management.Logic.Models.RecurrenceSchedule.RecurrenceSchedule(System.Collections.Generic.IList<System.Nullable<System.Int32>>, System.Collections.Generic.IList<System.Nullable<System.Int32>>, System.Collections.Generic.IList<System.Nullable<Microsoft.Azure.Management.Logic.Models.DaysOfWeek>>, System.Collections.Generic.IList<System.Nullable<System.Int32>>, System.Collections.Generic.IList<Microsoft.Azure.Management.Logic.Models.RecurrenceScheduleOccurrence>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/RecurrenceSchedule.cs
      branch: 2d793328d097bcb56ec8f92d3d36ef0ffe249a1d
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/RecurrenceSchedule.cs
    startLine: 28
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic.Models
  summary: "\nInitializes a new instance of the RecurrenceSchedule class.\n"
  example: []
  syntax:
    content: public RecurrenceSchedule(IList<int ? > minutes = null, IList<int ? > hours = null, IList<DaysOfWeek? > weekDays = null, IList<int ? > monthDays = null, IList<RecurrenceScheduleOccurrence> monthlyOccurrences = null)
    content.vb: Public Sub New(minutes As IList(Of Integer?) = Nothing, hours As IList(Of Integer?) = Nothing, weekDays As IList(Of DaysOfWeek?) = Nothing, monthDays As IList(Of Integer?) = Nothing, monthlyOccurrences As IList(Of RecurrenceScheduleOccurrence) = Nothing)
    parameters:
    - id: minutes
      type: System.Collections.Generic.IList{System.Nullable{System.Int32}}
    - id: hours
      type: System.Collections.Generic.IList{System.Nullable{System.Int32}}
    - id: weekDays
      type: System.Collections.Generic.IList{System.Nullable{Microsoft.Azure.Management.Logic.Models.DaysOfWeek}}
    - id: monthDays
      type: System.Collections.Generic.IList{System.Nullable{System.Int32}}
    - id: monthlyOccurrences
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Logic.Models.RecurrenceScheduleOccurrence}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Logic.Models.RecurrenceSchedule.RecurrenceSchedule(System.Collections.Generic.IList(Of System.Nullable(Of System.Int32)), System.Collections.Generic.IList(Of System.Nullable(Of System.Int32)), System.Collections.Generic.IList(Of System.Nullable(Of Microsoft.Azure.Management.Logic.Models.DaysOfWeek)), System.Collections.Generic.IList(Of System.Nullable(Of System.Int32)), System.Collections.Generic.IList(Of Microsoft.Azure.Management.Logic.Models.RecurrenceScheduleOccurrence))
  name.vb: RecurrenceSchedule(IList(Of Nullable(Of Int32)), IList(Of Nullable(Of Int32)), IList(Of Nullable(Of DaysOfWeek)), IList(Of Nullable(Of Int32)), IList(Of RecurrenceScheduleOccurrence))
- uid: Microsoft.Azure.Management.Logic.Models.RecurrenceSchedule.Minutes
  commentId: P:Microsoft.Azure.Management.Logic.Models.RecurrenceSchedule.Minutes
  id: Minutes
  parent: Microsoft.Azure.Management.Logic.Models.RecurrenceSchedule
  langs:
  - csharp
  - vb
  name: Minutes
  fullName: Microsoft.Azure.Management.Logic.Models.RecurrenceSchedule.Minutes
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/RecurrenceSchedule.cs
      branch: 2d793328d097bcb56ec8f92d3d36ef0ffe249a1d
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Minutes
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/RecurrenceSchedule.cs
    startLine: 40
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic.Models
  summary: "\nGets or sets gets or sets the minutes.\n"
  example: []
  syntax:
    content: public IList<int ? > Minutes { get; set; }
    content.vb: Public Property Minutes As IList(Of Integer?)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Nullable{System.Int32}}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Logic.Models.RecurrenceSchedule.Hours
  commentId: P:Microsoft.Azure.Management.Logic.Models.RecurrenceSchedule.Hours
  id: Hours
  parent: Microsoft.Azure.Management.Logic.Models.RecurrenceSchedule
  langs:
  - csharp
  - vb
  name: Hours
  fullName: Microsoft.Azure.Management.Logic.Models.RecurrenceSchedule.Hours
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/RecurrenceSchedule.cs
      branch: 2d793328d097bcb56ec8f92d3d36ef0ffe249a1d
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Hours
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/RecurrenceSchedule.cs
    startLine: 46
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic.Models
  summary: "\nGets or sets gets or sets the hours.\n"
  example: []
  syntax:
    content: public IList<int ? > Hours { get; set; }
    content.vb: Public Property Hours As IList(Of Integer?)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Nullable{System.Int32}}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Logic.Models.RecurrenceSchedule.WeekDays
  commentId: P:Microsoft.Azure.Management.Logic.Models.RecurrenceSchedule.WeekDays
  id: WeekDays
  parent: Microsoft.Azure.Management.Logic.Models.RecurrenceSchedule
  langs:
  - csharp
  - vb
  name: WeekDays
  fullName: Microsoft.Azure.Management.Logic.Models.RecurrenceSchedule.WeekDays
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/RecurrenceSchedule.cs
      branch: 2d793328d097bcb56ec8f92d3d36ef0ffe249a1d
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WeekDays
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/RecurrenceSchedule.cs
    startLine: 52
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic.Models
  summary: "\nGets or sets gets or sets the days of the week.\n"
  example: []
  syntax:
    content: public IList<DaysOfWeek? > WeekDays { get; set; }
    content.vb: Public Property WeekDays As IList(Of DaysOfWeek?)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Nullable{Microsoft.Azure.Management.Logic.Models.DaysOfWeek}}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Logic.Models.RecurrenceSchedule.MonthDays
  commentId: P:Microsoft.Azure.Management.Logic.Models.RecurrenceSchedule.MonthDays
  id: MonthDays
  parent: Microsoft.Azure.Management.Logic.Models.RecurrenceSchedule
  langs:
  - csharp
  - vb
  name: MonthDays
  fullName: Microsoft.Azure.Management.Logic.Models.RecurrenceSchedule.MonthDays
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/RecurrenceSchedule.cs
      branch: 2d793328d097bcb56ec8f92d3d36ef0ffe249a1d
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MonthDays
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/RecurrenceSchedule.cs
    startLine: 58
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic.Models
  summary: "\nGets or sets gets or sets the month days.\n"
  example: []
  syntax:
    content: public IList<int ? > MonthDays { get; set; }
    content.vb: Public Property MonthDays As IList(Of Integer?)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Nullable{System.Int32}}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Logic.Models.RecurrenceSchedule.MonthlyOccurrences
  commentId: P:Microsoft.Azure.Management.Logic.Models.RecurrenceSchedule.MonthlyOccurrences
  id: MonthlyOccurrences
  parent: Microsoft.Azure.Management.Logic.Models.RecurrenceSchedule
  langs:
  - csharp
  - vb
  name: MonthlyOccurrences
  fullName: Microsoft.Azure.Management.Logic.Models.RecurrenceSchedule.MonthlyOccurrences
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/RecurrenceSchedule.cs
      branch: 2d793328d097bcb56ec8f92d3d36ef0ffe249a1d
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MonthlyOccurrences
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/RecurrenceSchedule.cs
    startLine: 64
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic.Models
  summary: "\nGets or sets gets or sets the monthly occurrences.\n"
  example: []
  syntax:
    content: public IList<RecurrenceScheduleOccurrence> MonthlyOccurrences { get; set; }
    content.vb: Public Property MonthlyOccurrences As IList(Of RecurrenceScheduleOccurrence)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Logic.Models.RecurrenceScheduleOccurrence}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Logic.Models
  isExternal: false
  name: Microsoft.Azure.Management.Logic.Models
  fullName: Microsoft.Azure.Management.Logic.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.Generic.IList{System.Nullable{System.Int32}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Nullable<Int32>>
  fullName: System.Collections.Generic.IList<System.Nullable<System.Int32>>
  fullname.vb: System.Collections.Generic.IList(Of System.Nullable(Of System.Int32))
  name.vb: IList(Of Nullable(Of Int32))
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList{System.Nullable{Microsoft.Azure.Management.Logic.Models.DaysOfWeek}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Nullable<DaysOfWeek>>
  fullName: System.Collections.Generic.IList<System.Nullable<Microsoft.Azure.Management.Logic.Models.DaysOfWeek>>
  fullname.vb: System.Collections.Generic.IList(Of System.Nullable(Of Microsoft.Azure.Management.Logic.Models.DaysOfWeek))
  name.vb: IList(Of Nullable(Of DaysOfWeek))
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Logic.Models.DaysOfWeek
    name: DaysOfWeek
    fullName: Microsoft.Azure.Management.Logic.Models.DaysOfWeek
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Logic.Models.DaysOfWeek
    name: DaysOfWeek
    fullName: Microsoft.Azure.Management.Logic.Models.DaysOfWeek
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Logic.Models.RecurrenceScheduleOccurrence}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<RecurrenceScheduleOccurrence>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Logic.Models.RecurrenceScheduleOccurrence>
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Logic.Models.RecurrenceScheduleOccurrence)
  name.vb: IList(Of RecurrenceScheduleOccurrence)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Logic.Models.RecurrenceScheduleOccurrence
    name: RecurrenceScheduleOccurrence
    fullName: Microsoft.Azure.Management.Logic.Models.RecurrenceScheduleOccurrence
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Logic.Models.RecurrenceScheduleOccurrence
    name: RecurrenceScheduleOccurrence
    fullName: Microsoft.Azure.Management.Logic.Models.RecurrenceScheduleOccurrence
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: true
  name: IList<T>
  fullName: System.Collections.Generic.IList<T>
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
