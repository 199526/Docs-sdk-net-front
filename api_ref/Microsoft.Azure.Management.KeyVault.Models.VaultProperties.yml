items:
- uid: Microsoft.Azure.Management.KeyVault.Models.VaultProperties
  commentId: T:Microsoft.Azure.Management.KeyVault.Models.VaultProperties
  id: VaultProperties
  parent: Microsoft.Azure.Management.KeyVault.Models
  children:
  - Microsoft.Azure.Management.KeyVault.Models.VaultProperties.#ctor
  - Microsoft.Azure.Management.KeyVault.Models.VaultProperties.#ctor(System.Guid,Microsoft.Azure.Management.KeyVault.Models.Sku,System.Collections.Generic.IList{Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  - Microsoft.Azure.Management.KeyVault.Models.VaultProperties.AccessPolicies
  - Microsoft.Azure.Management.KeyVault.Models.VaultProperties.EnabledForDeployment
  - Microsoft.Azure.Management.KeyVault.Models.VaultProperties.EnabledForDiskEncryption
  - Microsoft.Azure.Management.KeyVault.Models.VaultProperties.EnabledForTemplateDeployment
  - Microsoft.Azure.Management.KeyVault.Models.VaultProperties.Sku
  - Microsoft.Azure.Management.KeyVault.Models.VaultProperties.TenantId
  - Microsoft.Azure.Management.KeyVault.Models.VaultProperties.Validate
  - Microsoft.Azure.Management.KeyVault.Models.VaultProperties.VaultUri
  langs:
  - csharp
  - vb
  name: VaultProperties
  fullName: Microsoft.Azure.Management.KeyVault.Models.VaultProperties
  type: Class
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/VaultProperties.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VaultProperties
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/VaultProperties.cs
    startLine: 15
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.KeyVault.Models
  summary: "\nProperties of the vault\n"
  example: []
  syntax:
    content: public class VaultProperties
    content.vb: Public Class VaultProperties
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.KeyVault.Models.VaultProperties.#ctor
  commentId: M:Microsoft.Azure.Management.KeyVault.Models.VaultProperties.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.KeyVault.Models.VaultProperties
  langs:
  - csharp
  - vb
  name: VaultProperties()
  fullName: Microsoft.Azure.Management.KeyVault.Models.VaultProperties.VaultProperties()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/VaultProperties.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/VaultProperties.cs
    startLine: 20
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.KeyVault.Models
  summary: "\nInitializes a new instance of the VaultProperties class.\n"
  example: []
  syntax:
    content: public VaultProperties()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.KeyVault.Models.VaultProperties.#ctor(System.Guid,Microsoft.Azure.Management.KeyVault.Models.Sku,System.Collections.Generic.IList{Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  commentId: M:Microsoft.Azure.Management.KeyVault.Models.VaultProperties.#ctor(System.Guid,Microsoft.Azure.Management.KeyVault.Models.Sku,System.Collections.Generic.IList{Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  id: '#ctor(System.Guid,Microsoft.Azure.Management.KeyVault.Models.Sku,System.Collections.Generic.IList{Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})'
  parent: Microsoft.Azure.Management.KeyVault.Models.VaultProperties
  langs:
  - csharp
  - vb
  name: VaultProperties(Guid, Sku, IList<AccessPolicyEntry>, String, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>)
  fullName: Microsoft.Azure.Management.KeyVault.Models.VaultProperties.VaultProperties(System.Guid, Microsoft.Azure.Management.KeyVault.Models.Sku, System.Collections.Generic.IList<Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry>, System.String, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/VaultProperties.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/VaultProperties.cs
    startLine: 46
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.KeyVault.Models
  summary: "\nInitializes a new instance of the VaultProperties class.\n"
  example: []
  syntax:
    content: public VaultProperties(Guid tenantId, Sku sku, IList<AccessPolicyEntry> accessPolicies, string vaultUri = null, bool ? enabledForDeployment = null, bool ? enabledForDiskEncryption = null, bool ? enabledForTemplateDeployment = null)
    content.vb: Public Sub New(tenantId As Guid, sku As Sku, accessPolicies As IList(Of AccessPolicyEntry), vaultUri As String = Nothing, enabledForDeployment As Boolean? = Nothing, enabledForDiskEncryption As Boolean? = Nothing, enabledForTemplateDeployment As Boolean? = Nothing)
    parameters:
    - id: tenantId
      type: System.Guid
      description: >-
        The Azure Active Directory tenant ID that

        should be used for authenticating requests to the key

        vault.
    - id: sku
      type: Microsoft.Azure.Management.KeyVault.Models.Sku
      description: SKU details
    - id: accessPolicies
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry}
      description: >-
        An array of 0 to 16 identities that

        have access to the key vault. All identities in the array must

        use the same tenant ID as the key vault's tenant ID.
    - id: vaultUri
      type: System.String
      description: >-
        The URI of the vault for performing

        operations on keys and secrets.
    - id: enabledForDeployment
      type: System.Nullable{System.Boolean}
      description: >-
        Property to specify whether

        Azure Virtual Machines are permitted to retrieve certificates

        stored as secrets from the key vault.
    - id: enabledForDiskEncryption
      type: System.Nullable{System.Boolean}
      description: >-
        Property to specify whether

        Azure Disk Encryption is permitted to retrieve secrets from the

        vault and unwrap keys.
    - id: enabledForTemplateDeployment
      type: System.Nullable{System.Boolean}
      description: >-
        Property to specify

        whether Azure Resource Manager is permitted to retrieve secrets

        from the key vault.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.KeyVault.Models.VaultProperties.VaultProperties(System.Guid, Microsoft.Azure.Management.KeyVault.Models.Sku, System.Collections.Generic.IList(Of Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry), System.String, System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean))
  name.vb: VaultProperties(Guid, Sku, IList(Of AccessPolicyEntry), String, Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean))
- uid: Microsoft.Azure.Management.KeyVault.Models.VaultProperties.VaultUri
  commentId: P:Microsoft.Azure.Management.KeyVault.Models.VaultProperties.VaultUri
  id: VaultUri
  parent: Microsoft.Azure.Management.KeyVault.Models.VaultProperties
  langs:
  - csharp
  - vb
  name: VaultUri
  fullName: Microsoft.Azure.Management.KeyVault.Models.VaultProperties.VaultUri
  type: Property
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/VaultProperties.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VaultUri
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/VaultProperties.cs
    startLine: 62
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.KeyVault.Models
  summary: "\nGets or sets the URI of the vault for performing operations on\nkeys and secrets.\n"
  example: []
  syntax:
    content: public string VaultUri { get; set; }
    content.vb: Public Property VaultUri As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.KeyVault.Models.VaultProperties.TenantId
  commentId: P:Microsoft.Azure.Management.KeyVault.Models.VaultProperties.TenantId
  id: TenantId
  parent: Microsoft.Azure.Management.KeyVault.Models.VaultProperties
  langs:
  - csharp
  - vb
  name: TenantId
  fullName: Microsoft.Azure.Management.KeyVault.Models.VaultProperties.TenantId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/VaultProperties.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TenantId
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/VaultProperties.cs
    startLine: 69
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.KeyVault.Models
  summary: "\nGets or sets the Azure Active Directory tenant ID that should be\nused for authenticating requests to the key vault.\n"
  example: []
  syntax:
    content: public Guid TenantId { get; set; }
    content.vb: Public Property TenantId As Guid
    parameters: []
    return:
      type: System.Guid
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.KeyVault.Models.VaultProperties.Sku
  commentId: P:Microsoft.Azure.Management.KeyVault.Models.VaultProperties.Sku
  id: Sku
  parent: Microsoft.Azure.Management.KeyVault.Models.VaultProperties
  langs:
  - csharp
  - vb
  name: Sku
  fullName: Microsoft.Azure.Management.KeyVault.Models.VaultProperties.Sku
  type: Property
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/VaultProperties.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Sku
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/VaultProperties.cs
    startLine: 75
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.KeyVault.Models
  summary: "\nGets or sets SKU details\n"
  example: []
  syntax:
    content: public Sku Sku { get; set; }
    content.vb: Public Property Sku As Sku
    parameters: []
    return:
      type: Microsoft.Azure.Management.KeyVault.Models.Sku
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.KeyVault.Models.VaultProperties.AccessPolicies
  commentId: P:Microsoft.Azure.Management.KeyVault.Models.VaultProperties.AccessPolicies
  id: AccessPolicies
  parent: Microsoft.Azure.Management.KeyVault.Models.VaultProperties
  langs:
  - csharp
  - vb
  name: AccessPolicies
  fullName: Microsoft.Azure.Management.KeyVault.Models.VaultProperties.AccessPolicies
  type: Property
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/VaultProperties.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AccessPolicies
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/VaultProperties.cs
    startLine: 83
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.KeyVault.Models
  summary: "\nGets or sets an array of 0 to 16 identities that have access to\nthe key vault. All identities in the array must use the same\ntenant ID as the key vault's tenant ID.\n"
  example: []
  syntax:
    content: public IList<AccessPolicyEntry> AccessPolicies { get; set; }
    content.vb: Public Property AccessPolicies As IList(Of AccessPolicyEntry)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.KeyVault.Models.VaultProperties.EnabledForDeployment
  commentId: P:Microsoft.Azure.Management.KeyVault.Models.VaultProperties.EnabledForDeployment
  id: EnabledForDeployment
  parent: Microsoft.Azure.Management.KeyVault.Models.VaultProperties
  langs:
  - csharp
  - vb
  name: EnabledForDeployment
  fullName: Microsoft.Azure.Management.KeyVault.Models.VaultProperties.EnabledForDeployment
  type: Property
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/VaultProperties.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EnabledForDeployment
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/VaultProperties.cs
    startLine: 91
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.KeyVault.Models
  summary: "\nGets or sets property to specify whether Azure Virtual Machines\nare permitted to retrieve certificates stored as secrets from the\nkey vault.\n"
  example: []
  syntax:
    content: public bool ? EnabledForDeployment { get; set; }
    content.vb: Public Property EnabledForDeployment As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.KeyVault.Models.VaultProperties.EnabledForDiskEncryption
  commentId: P:Microsoft.Azure.Management.KeyVault.Models.VaultProperties.EnabledForDiskEncryption
  id: EnabledForDiskEncryption
  parent: Microsoft.Azure.Management.KeyVault.Models.VaultProperties
  langs:
  - csharp
  - vb
  name: EnabledForDiskEncryption
  fullName: Microsoft.Azure.Management.KeyVault.Models.VaultProperties.EnabledForDiskEncryption
  type: Property
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/VaultProperties.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EnabledForDiskEncryption
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/VaultProperties.cs
    startLine: 98
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.KeyVault.Models
  summary: "\nGets or sets property to specify whether Azure Disk Encryption is\npermitted to retrieve secrets from the vault and unwrap keys.\n"
  example: []
  syntax:
    content: public bool ? EnabledForDiskEncryption { get; set; }
    content.vb: Public Property EnabledForDiskEncryption As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.KeyVault.Models.VaultProperties.EnabledForTemplateDeployment
  commentId: P:Microsoft.Azure.Management.KeyVault.Models.VaultProperties.EnabledForTemplateDeployment
  id: EnabledForTemplateDeployment
  parent: Microsoft.Azure.Management.KeyVault.Models.VaultProperties
  langs:
  - csharp
  - vb
  name: EnabledForTemplateDeployment
  fullName: Microsoft.Azure.Management.KeyVault.Models.VaultProperties.EnabledForTemplateDeployment
  type: Property
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/VaultProperties.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EnabledForTemplateDeployment
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/VaultProperties.cs
    startLine: 105
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.KeyVault.Models
  summary: "\nGets or sets property to specify whether Azure Resource Manager is\npermitted to retrieve secrets from the key vault.\n"
  example: []
  syntax:
    content: public bool ? EnabledForTemplateDeployment { get; set; }
    content.vb: Public Property EnabledForTemplateDeployment As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.KeyVault.Models.VaultProperties.Validate
  commentId: M:Microsoft.Azure.Management.KeyVault.Models.VaultProperties.Validate
  id: Validate
  parent: Microsoft.Azure.Management.KeyVault.Models.VaultProperties
  langs:
  - csharp
  - vb
  name: Validate()
  fullName: Microsoft.Azure.Management.KeyVault.Models.VaultProperties.Validate()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/VaultProperties.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/VaultProperties.cs
    startLine: 114
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.KeyVault.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Management.KeyVault.Models
  isExternal: false
  name: Microsoft.Azure.Management.KeyVault.Models
  fullName: Microsoft.Azure.Management.KeyVault.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  fullName: System.Guid
- uid: Microsoft.Azure.Management.KeyVault.Models.Sku
  parent: Microsoft.Azure.Management.KeyVault.Models
  isExternal: false
  name: Sku
  fullName: Microsoft.Azure.Management.KeyVault.Models.Sku
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<AccessPolicyEntry>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry>
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry)
  name.vb: IList(Of AccessPolicyEntry)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry
    name: AccessPolicyEntry
    fullName: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry
    name: AccessPolicyEntry
    fullName: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: true
  name: IList<T>
  fullName: System.Collections.Generic.IList<T>
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
