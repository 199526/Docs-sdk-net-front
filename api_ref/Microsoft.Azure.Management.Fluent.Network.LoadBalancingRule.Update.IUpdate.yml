items:
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
  commentId: T:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
  id: IUpdate
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update
  children: []
  langs:
  - csharp
  - vb
  name: IUpdate
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
  type: Interface
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/LoadBalancingRule/Update/IUpdate.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IUpdate
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/LoadBalancingRule/Update/IUpdate.cs
    startLine: 61
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update
  summary: "\nThe entirety of a load balancing rule update as part of a load balancer update.\n"
  example: []
  syntax:
    content: 'public interface IUpdate : ISettable<IUpdate>, IWithFrontendPort, IWithFrontend, IWithFrontend<IUpdate>, IWithProtocol, IWithProtocol<IUpdate, string>, IWithBackendPort, IWithBackendPort<IUpdate>, IWithFloatingIp, IWithFloatingIp<IUpdate>, IWithIdleTimeoutInMinutes, IWithLoadDistribution'
    content.vb: >-
      Public Interface IUpdate
          Inherits ISettable(Of IUpdate), IWithFrontendPort, IWithFrontend, IWithProtocol, IWithBackendPort, IWithFloatingIp, IWithIdleTimeoutInMinutes, IWithLoadDistribution
  inheritedMembers:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithFrontendPort.WithFrontendPort(System.Int32)
  - Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate}.WithFrontend(System.String)
  - Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate,System.String}.WithProtocol(System.String)
  - Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate}.WithBackendPort(System.Int32)
  - Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate}.WithFloatingIpEnabled
  - Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate}.WithFloatingIpDisabled
  - Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate}.WithFloatingIp(System.Boolean)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithIdleTimeoutInMinutes.WithIdleTimeoutInMinutes(System.Int32)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithLoadDistribution.WithLoadDistribution(System.String)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
references:
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithFrontendPort.WithFrontendPort(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithFrontendPort
  isExternal: true
  name: WithFrontendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithFrontendPort.WithFrontendPort(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithFrontendPort.WithFrontendPort(System.Int32)
    name: WithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithFrontendPort.WithFrontendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithFrontendPort.WithFrontendPort(System.Int32)
    name: WithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithFrontendPort.WithFrontendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate}.WithFrontend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate}
  definition: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1.WithFrontend(System.String)
  name: WithFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate>.WithFrontend(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate).WithFrontend(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1.WithFrontend(System.String)
    name: WithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate>.WithFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1.WithFrontend(System.String)
    name: WithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate).WithFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate,System.String}.WithProtocol(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate,System.String}
  definition: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2.WithProtocol(`1)
  name: WithProtocol(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate, System.String>.WithProtocol(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate, System.String).WithProtocol(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate, System.String>.WithProtocol
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate, System.String).WithProtocol
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate}.WithBackendPort(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate}
  definition: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1.WithBackendPort(System.Int32)
  name: WithBackendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate>.WithBackendPort(System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate).WithBackendPort(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1.WithBackendPort(System.Int32)
    name: WithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate>.WithBackendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1.WithBackendPort(System.Int32)
    name: WithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate).WithBackendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate}.WithFloatingIpEnabled
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate}
  definition: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIpEnabled
  name: WithFloatingIpEnabled()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate>.WithFloatingIpEnabled()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate).WithFloatingIpEnabled()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIpEnabled
    name: WithFloatingIpEnabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate>.WithFloatingIpEnabled
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIpEnabled
    name: WithFloatingIpEnabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate).WithFloatingIpEnabled
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate}.WithFloatingIpDisabled
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate}
  definition: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIpDisabled
  name: WithFloatingIpDisabled()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate>.WithFloatingIpDisabled()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate).WithFloatingIpDisabled()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIpDisabled
    name: WithFloatingIpDisabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate>.WithFloatingIpDisabled
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIpDisabled
    name: WithFloatingIpDisabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate).WithFloatingIpDisabled
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate}.WithFloatingIp(System.Boolean)
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate}
  definition: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIp(System.Boolean)
  name: WithFloatingIp(Boolean)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate>.WithFloatingIp(System.Boolean)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate).WithFloatingIp(System.Boolean)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIp(System.Boolean)
    name: WithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate>.WithFloatingIp
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIp(System.Boolean)
    name: WithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate).WithFloatingIp
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithIdleTimeoutInMinutes.WithIdleTimeoutInMinutes(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithIdleTimeoutInMinutes
  isExternal: true
  name: WithIdleTimeoutInMinutes(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithIdleTimeoutInMinutes.WithIdleTimeoutInMinutes(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithIdleTimeoutInMinutes.WithIdleTimeoutInMinutes(System.Int32)
    name: WithIdleTimeoutInMinutes
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithIdleTimeoutInMinutes.WithIdleTimeoutInMinutes
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithIdleTimeoutInMinutes.WithIdleTimeoutInMinutes(System.Int32)
    name: WithIdleTimeoutInMinutes
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithIdleTimeoutInMinutes.WithIdleTimeoutInMinutes
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithLoadDistribution.WithLoadDistribution(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithLoadDistribution
  isExternal: true
  name: WithLoadDistribution(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithLoadDistribution.WithLoadDistribution(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithLoadDistribution.WithLoadDistribution(System.String)
    name: WithLoadDistribution
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithLoadDistribution.WithLoadDistribution
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithLoadDistribution.WithLoadDistribution(System.String)
    name: WithLoadDistribution
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithLoadDistribution.WithLoadDistribution
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithFrontendPort
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update
  isExternal: false
  name: IWithFrontendPort
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithFrontendPort
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1.WithFrontend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1
  isExternal: true
  name: WithFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend<ReturnT>.WithFrontend(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend(Of ReturnT).WithFrontend(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1.WithFrontend(System.String)
    name: WithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend<ReturnT>.WithFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1.WithFrontend(System.String)
    name: WithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend(Of ReturnT).WithFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update
  definition: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1
  name: IWithFrontend<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate)
  name.vb: IWithFrontend(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2.WithProtocol(`1)
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2
  isExternal: false
  name: WithProtocol(ProtocolT)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol<ReturnT, ProtocolT>.WithProtocol(ProtocolT)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol(Of ReturnT, ProtocolT).WithProtocol(ProtocolT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol<ReturnT, ProtocolT>.WithProtocol
  - name: (
    fullName: (
  - name: ProtocolT
    fullName: ProtocolT
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol(Of ReturnT, ProtocolT).WithProtocol
  - name: (
    fullName: (
  - name: ProtocolT
    fullName: ProtocolT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate,System.String}
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update
  definition: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2
  name: IWithProtocol<IUpdate, String>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate, System.String>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate, System.String)
  name.vb: IWithProtocol(Of IUpdate, String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1.WithBackendPort(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1
  isExternal: true
  name: WithBackendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort<ReturnT>.WithBackendPort(System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort(Of ReturnT).WithBackendPort(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1.WithBackendPort(System.Int32)
    name: WithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort<ReturnT>.WithBackendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1.WithBackendPort(System.Int32)
    name: WithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort(Of ReturnT).WithBackendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update
  definition: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1
  name: IWithBackendPort<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate)
  name.vb: IWithBackendPort(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIpEnabled
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1
  isExternal: false
  name: WithFloatingIpEnabled()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<ReturnT>.WithFloatingIpEnabled()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp(Of ReturnT).WithFloatingIpEnabled()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIpEnabled
    name: WithFloatingIpEnabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<ReturnT>.WithFloatingIpEnabled
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIpEnabled
    name: WithFloatingIpEnabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp(Of ReturnT).WithFloatingIpEnabled
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update
  definition: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1
  name: IWithFloatingIp<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate)
  name.vb: IWithFloatingIp(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1
    name: IWithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1
    name: IWithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIpDisabled
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1
  isExternal: false
  name: WithFloatingIpDisabled()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<ReturnT>.WithFloatingIpDisabled()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp(Of ReturnT).WithFloatingIpDisabled()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIpDisabled
    name: WithFloatingIpDisabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<ReturnT>.WithFloatingIpDisabled
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIpDisabled
    name: WithFloatingIpDisabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp(Of ReturnT).WithFloatingIpDisabled
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIp(System.Boolean)
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1
  isExternal: true
  name: WithFloatingIp(Boolean)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<ReturnT>.WithFloatingIp(System.Boolean)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp(Of ReturnT).WithFloatingIp(System.Boolean)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIp(System.Boolean)
    name: WithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<ReturnT>.WithFloatingIp
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIp(System.Boolean)
    name: WithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp(Of ReturnT).WithFloatingIp
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithIdleTimeoutInMinutes
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update
  isExternal: false
  name: IWithIdleTimeoutInMinutes
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithIdleTimeoutInMinutes
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithLoadDistribution
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update
  isExternal: false
  name: IWithLoadDistribution
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithLoadDistribution
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update
  isExternal: false
  name: IWithFrontend<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend(Of ReturnT)
  name.vb: IWithFrontend(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update
  isExternal: false
  name: IWithProtocol<ReturnT, ProtocolT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol<ReturnT, ProtocolT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol(Of ReturnT, ProtocolT)
  name.vb: IWithProtocol(Of ReturnT, ProtocolT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: ', '
    fullName: ', '
  - name: ProtocolT
    fullName: ProtocolT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: ', '
    fullName: ', '
  - name: ProtocolT
    fullName: ProtocolT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update
  isExternal: false
  name: IWithBackendPort<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort(Of ReturnT)
  name.vb: IWithBackendPort(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update
  isExternal: false
  name: IWithFloatingIp<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp(Of ReturnT)
  name.vb: IWithFloatingIp(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1
    name: IWithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1
    name: IWithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update
