items:
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IUpdate
  commentId: T:Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IUpdate
  id: IUpdate
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update
  children:
  - Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IUpdate.WithPatchSchedule(Microsoft.Azure.Management.Fluent.Redis.Models.DayOfWeek,System.Int32)
  - Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IUpdate.WithPatchSchedule(Microsoft.Azure.Management.Fluent.Redis.Models.DayOfWeek,System.Int32,System.Nullable{System.TimeSpan})
  - Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IUpdate.WithPatchSchedule(Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry)
  - Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IUpdate.WithPatchSchedule(System.Collections.Generic.IList{Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry})
  - Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IUpdate.WithShardCount(System.Int32)
  - Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IUpdate.WithStaticIP(System.String)
  - Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IUpdate.WithSubnet(IGroupableResource,System.String)
  langs:
  - csharp
  - vb
  name: IUpdate
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IUpdate
  type: Interface
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Domain/RedisCache/Update/IUpdate.cs
      branch: a22251cda68f724317d3ae2d0ae390f6642eb358
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IUpdate
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Domain/RedisCache/Update/IUpdate.cs
    startLine: 75
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update
  summary: "\nThe template for a Redis Cache update operation, containing all the settings that can be modified.\n"
  example: []
  syntax:
    content: 'public interface IUpdate : IAppliable<IRedisCache>, IUpdateWithTags<IUpdate>, IWithSku, IWithNonSslPort, IWithRedisConfiguration'
    content.vb: >-
      Public Interface IUpdate
          Inherits IAppliable(Of IRedisCache), IUpdateWithTags(Of IUpdate), IWithSku, IWithNonSslPort, IWithRedisConfiguration
  inheritedMembers:
  - Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithSku.WithBasicSku(System.Int32)
  - Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithSku.WithStandardSku
  - Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithSku.WithStandardSku(System.Int32)
  - Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithSku.WithPremiumSku
  - Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithSku.WithPremiumSku(System.Int32)
  - Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithNonSslPort.WithNonSslPort
  - Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithNonSslPort.WithoutNonSslPort
  - Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithRedisConfiguration.WithRedisConfiguration(System.Collections.Generic.IDictionary{System.String,System.String})
  - Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithRedisConfiguration.WithRedisConfiguration(System.String,System.String)
  - Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithRedisConfiguration.WithoutRedisConfiguration
  - Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithRedisConfiguration.WithoutRedisConfiguration(System.String)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IUpdate.WithSubnet(IGroupableResource,System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IUpdate.WithSubnet(IGroupableResource,System.String)
  id: WithSubnet(IGroupableResource,System.String)
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IUpdate
  langs:
  - csharp
  - vb
  name: WithSubnet(IGroupableResource, String)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IUpdate.WithSubnet(IGroupableResource, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Domain/RedisCache/Update/IUpdate.cs
      branch: a22251cda68f724317d3ae2d0ae390f6642eb358
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithSubnet
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Domain/RedisCache/Update/IUpdate.cs
    startLine: 88
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update
  summary: "\nAssigns the specified subnet to this instance of Redis Cache.\n"
  example: []
  syntax:
    content: IUpdate WithSubnet(IGroupableResource networkResource, string subnetName)
    content.vb: Function WithSubnet(networkResource As IGroupableResource, subnetName As String) As IUpdate
    parameters:
    - id: networkResource
      type: IGroupableResource
      description: networkResource instance of Network object.
    - id: subnetName
      type: System.String
      description: subnetName the name of the subnet.
    return:
      type: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IUpdate
      description: the next stage of Redis Cache update.
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IUpdate.WithStaticIP(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IUpdate.WithStaticIP(System.String)
  id: WithStaticIP(System.String)
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IUpdate
  langs:
  - csharp
  - vb
  name: WithStaticIP(String)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IUpdate.WithStaticIP(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Domain/RedisCache/Update/IUpdate.cs
      branch: a22251cda68f724317d3ae2d0ae390f6642eb358
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithStaticIP
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Domain/RedisCache/Update/IUpdate.cs
    startLine: 95
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update
  summary: "\nSets Redis Cache static IP. Required when deploying a Redis Cache inside an existing Azure Virtual Network.\n"
  example: []
  syntax:
    content: IUpdate WithStaticIP(string staticIP)
    content.vb: Function WithStaticIP(staticIP As String) As IUpdate
    parameters:
    - id: staticIP
      type: System.String
      description: staticIP the staticIP value to set.
    return:
      type: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IUpdate
      description: the next stage of Redis Cache update.
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IUpdate.WithShardCount(System.Int32)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IUpdate.WithShardCount(System.Int32)
  id: WithShardCount(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IUpdate
  langs:
  - csharp
  - vb
  name: WithShardCount(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IUpdate.WithShardCount(System.Int32)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Domain/RedisCache/Update/IUpdate.cs
      branch: a22251cda68f724317d3ae2d0ae390f6642eb358
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithShardCount
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Domain/RedisCache/Update/IUpdate.cs
    startLine: 102
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update
  summary: "\nThe number of shards to be created on a Premium Cluster Cache.\n"
  example: []
  syntax:
    content: IUpdate WithShardCount(int shardCount)
    content.vb: Function WithShardCount(shardCount As Integer) As IUpdate
    parameters:
    - id: shardCount
      type: System.Int32
      description: shardCount the shard count value to set.
    return:
      type: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IUpdate
      description: the next stage of Redis Cache update.
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IUpdate.WithPatchSchedule(Microsoft.Azure.Management.Fluent.Redis.Models.DayOfWeek,System.Int32)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IUpdate.WithPatchSchedule(Microsoft.Azure.Management.Fluent.Redis.Models.DayOfWeek,System.Int32)
  id: WithPatchSchedule(Microsoft.Azure.Management.Fluent.Redis.Models.DayOfWeek,System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IUpdate
  langs:
  - csharp
  - vb
  name: WithPatchSchedule(DayOfWeek, Int32)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IUpdate.WithPatchSchedule(Microsoft.Azure.Management.Fluent.Redis.Models.DayOfWeek, System.Int32)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Domain/RedisCache/Update/IUpdate.cs
      branch: a22251cda68f724317d3ae2d0ae390f6642eb358
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithPatchSchedule
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Domain/RedisCache/Update/IUpdate.cs
    startLine: 110
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update
  summary: "\nPatch schedule on a Premium Cluster Cache.\n"
  example: []
  syntax:
    content: IUpdate WithPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc)
    content.vb: Function WithPatchSchedule(dayOfWeek As DayOfWeek, startHourUtc As Integer) As IUpdate
    parameters:
    - id: dayOfWeek
      type: Microsoft.Azure.Management.Fluent.Redis.Models.DayOfWeek
      description: dayOfWeek day of week when cache can be patched.
    - id: startHourUtc
      type: System.Int32
      description: startHourUtc start hour after which cache patching can start.
    return:
      type: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IUpdate
      description: the next stage of Redis Cache with Premium SKU definition.
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IUpdate.WithPatchSchedule(Microsoft.Azure.Management.Fluent.Redis.Models.DayOfWeek,System.Int32,System.Nullable{System.TimeSpan})
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IUpdate.WithPatchSchedule(Microsoft.Azure.Management.Fluent.Redis.Models.DayOfWeek,System.Int32,System.Nullable{System.TimeSpan})
  id: WithPatchSchedule(Microsoft.Azure.Management.Fluent.Redis.Models.DayOfWeek,System.Int32,System.Nullable{System.TimeSpan})
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IUpdate
  langs:
  - csharp
  - vb
  name: WithPatchSchedule(DayOfWeek, Int32, Nullable<TimeSpan>)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IUpdate.WithPatchSchedule(Microsoft.Azure.Management.Fluent.Redis.Models.DayOfWeek, System.Int32, System.Nullable<System.TimeSpan>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Domain/RedisCache/Update/IUpdate.cs
      branch: a22251cda68f724317d3ae2d0ae390f6642eb358
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithPatchSchedule
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Domain/RedisCache/Update/IUpdate.cs
    startLine: 119
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update
  summary: "\nThe number of shards to be created on a Premium Cluster Cache.\n"
  example: []
  syntax:
    content: IUpdate WithPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc, TimeSpan? maintenanceWindow)
    content.vb: Function WithPatchSchedule(dayOfWeek As DayOfWeek, startHourUtc As Integer, maintenanceWindow As TimeSpan?) As IUpdate
    parameters:
    - id: dayOfWeek
      type: Microsoft.Azure.Management.Fluent.Redis.Models.DayOfWeek
      description: dayOfWeek day of week when cache can be patched.
    - id: startHourUtc
      type: System.Int32
      description: startHourUtc start hour after which cache patching can start.
    - id: maintenanceWindow
      type: System.Nullable{System.TimeSpan}
      description: maintenanceWindow ISO8601 timespan specifying how much time cache patching can take.
    return:
      type: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IUpdate
      description: the next stage of Redis Cache with Premium SKU definition.
  fullName.vb: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IUpdate.WithPatchSchedule(Microsoft.Azure.Management.Fluent.Redis.Models.DayOfWeek, System.Int32, System.Nullable(Of System.TimeSpan))
  name.vb: WithPatchSchedule(DayOfWeek, Int32, Nullable(Of TimeSpan))
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IUpdate.WithPatchSchedule(Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IUpdate.WithPatchSchedule(Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry)
  id: WithPatchSchedule(Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry)
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IUpdate
  langs:
  - csharp
  - vb
  name: WithPatchSchedule(ScheduleEntry)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IUpdate.WithPatchSchedule(Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Domain/RedisCache/Update/IUpdate.cs
      branch: a22251cda68f724317d3ae2d0ae390f6642eb358
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithPatchSchedule
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Domain/RedisCache/Update/IUpdate.cs
    startLine: 126
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update
  summary: "\nPatch schedule on a Premium Cluster Cache.\n"
  example: []
  syntax:
    content: IUpdate WithPatchSchedule(ScheduleEntry scheduleEntry)
    content.vb: Function WithPatchSchedule(scheduleEntry As ScheduleEntry) As IUpdate
    parameters:
    - id: scheduleEntry
      type: Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry
      description: scheduleEntry Patch schedule entry for Premium Redis Cache.
    return:
      type: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IUpdate
      description: the next stage of Redis Cache with Premium SKU definition.
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IUpdate.WithPatchSchedule(System.Collections.Generic.IList{Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry})
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IUpdate.WithPatchSchedule(System.Collections.Generic.IList{Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry})
  id: WithPatchSchedule(System.Collections.Generic.IList{Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry})
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IUpdate
  langs:
  - csharp
  - vb
  name: WithPatchSchedule(IList<ScheduleEntry>)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IUpdate.WithPatchSchedule(System.Collections.Generic.IList<Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Domain/RedisCache/Update/IUpdate.cs
      branch: a22251cda68f724317d3ae2d0ae390f6642eb358
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithPatchSchedule
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Domain/RedisCache/Update/IUpdate.cs
    startLine: 133
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update
  summary: "\nPatch schedule on a Premium Cluster Cache.\n"
  example: []
  syntax:
    content: IUpdate WithPatchSchedule(IList<ScheduleEntry> scheduleEntry)
    content.vb: Function WithPatchSchedule(scheduleEntry As IList(Of ScheduleEntry)) As IUpdate
    parameters:
    - id: scheduleEntry
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry}
      description: scheduleEntry List of patch schedule entries for Premium Redis Cache.
    return:
      type: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IUpdate
      description: the next stage of Redis Cache with Premium SKU definition.
  fullName.vb: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IUpdate.WithPatchSchedule(System.Collections.Generic.IList(Of Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry))
  name.vb: WithPatchSchedule(IList(Of ScheduleEntry))
references:
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithSku.WithBasicSku(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithSku
  isExternal: true
  name: WithBasicSku(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithSku.WithBasicSku(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithSku.WithBasicSku(System.Int32)
    name: WithBasicSku
    fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithSku.WithBasicSku
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithSku.WithBasicSku(System.Int32)
    name: WithBasicSku
    fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithSku.WithBasicSku
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithSku.WithStandardSku
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithSku
  isExternal: false
  name: WithStandardSku()
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithSku.WithStandardSku()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithSku.WithStandardSku
    name: WithStandardSku
    fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithSku.WithStandardSku
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithSku.WithStandardSku
    name: WithStandardSku
    fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithSku.WithStandardSku
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithSku.WithStandardSku(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithSku
  isExternal: true
  name: WithStandardSku(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithSku.WithStandardSku(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithSku.WithStandardSku(System.Int32)
    name: WithStandardSku
    fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithSku.WithStandardSku
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithSku.WithStandardSku(System.Int32)
    name: WithStandardSku
    fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithSku.WithStandardSku
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithSku.WithPremiumSku
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithSku
  isExternal: false
  name: WithPremiumSku()
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithSku.WithPremiumSku()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithSku.WithPremiumSku
    name: WithPremiumSku
    fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithSku.WithPremiumSku
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithSku.WithPremiumSku
    name: WithPremiumSku
    fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithSku.WithPremiumSku
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithSku.WithPremiumSku(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithSku
  isExternal: true
  name: WithPremiumSku(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithSku.WithPremiumSku(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithSku.WithPremiumSku(System.Int32)
    name: WithPremiumSku
    fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithSku.WithPremiumSku
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithSku.WithPremiumSku(System.Int32)
    name: WithPremiumSku
    fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithSku.WithPremiumSku
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithNonSslPort.WithNonSslPort
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithNonSslPort
  isExternal: false
  name: WithNonSslPort()
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithNonSslPort.WithNonSslPort()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithNonSslPort.WithNonSslPort
    name: WithNonSslPort
    fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithNonSslPort.WithNonSslPort
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithNonSslPort.WithNonSslPort
    name: WithNonSslPort
    fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithNonSslPort.WithNonSslPort
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithNonSslPort.WithoutNonSslPort
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithNonSslPort
  isExternal: false
  name: WithoutNonSslPort()
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithNonSslPort.WithoutNonSslPort()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithNonSslPort.WithoutNonSslPort
    name: WithoutNonSslPort
    fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithNonSslPort.WithoutNonSslPort
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithNonSslPort.WithoutNonSslPort
    name: WithoutNonSslPort
    fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithNonSslPort.WithoutNonSslPort
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithRedisConfiguration.WithRedisConfiguration(System.Collections.Generic.IDictionary{System.String,System.String})
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithRedisConfiguration
  isExternal: true
  name: WithRedisConfiguration(IDictionary<String, String>)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithRedisConfiguration.WithRedisConfiguration(System.Collections.Generic.IDictionary<System.String, System.String>)
  fullname.vb: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithRedisConfiguration.WithRedisConfiguration(System.Collections.Generic.IDictionary(Of System.String, System.String))
  name.vb: WithRedisConfiguration(IDictionary(Of String, String))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithRedisConfiguration.WithRedisConfiguration(System.Collections.Generic.IDictionary{System.String,System.String})
    name: WithRedisConfiguration
    fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithRedisConfiguration.WithRedisConfiguration
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithRedisConfiguration.WithRedisConfiguration(System.Collections.Generic.IDictionary{System.String,System.String})
    name: WithRedisConfiguration
    fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithRedisConfiguration.WithRedisConfiguration
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithRedisConfiguration.WithRedisConfiguration(System.String,System.String)
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithRedisConfiguration
  isExternal: true
  name: WithRedisConfiguration(String, String)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithRedisConfiguration.WithRedisConfiguration(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithRedisConfiguration.WithRedisConfiguration(System.String,System.String)
    name: WithRedisConfiguration
    fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithRedisConfiguration.WithRedisConfiguration
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithRedisConfiguration.WithRedisConfiguration(System.String,System.String)
    name: WithRedisConfiguration
    fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithRedisConfiguration.WithRedisConfiguration
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithRedisConfiguration.WithoutRedisConfiguration
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithRedisConfiguration
  isExternal: false
  name: WithoutRedisConfiguration()
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithRedisConfiguration.WithoutRedisConfiguration()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithRedisConfiguration.WithoutRedisConfiguration
    name: WithoutRedisConfiguration
    fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithRedisConfiguration.WithoutRedisConfiguration
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithRedisConfiguration.WithoutRedisConfiguration
    name: WithoutRedisConfiguration
    fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithRedisConfiguration.WithoutRedisConfiguration
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithRedisConfiguration.WithoutRedisConfiguration(System.String)
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithRedisConfiguration
  isExternal: true
  name: WithoutRedisConfiguration(String)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithRedisConfiguration.WithoutRedisConfiguration(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithRedisConfiguration.WithoutRedisConfiguration(System.String)
    name: WithoutRedisConfiguration
    fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithRedisConfiguration.WithoutRedisConfiguration
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithRedisConfiguration.WithoutRedisConfiguration(System.String)
    name: WithoutRedisConfiguration
    fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithRedisConfiguration.WithoutRedisConfiguration
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithSku
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update
  isExternal: false
  name: IWithSku
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithSku
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithNonSslPort
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update
  isExternal: false
  name: IWithNonSslPort
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithNonSslPort
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithRedisConfiguration
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update
  isExternal: false
  name: IWithRedisConfiguration
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IWithRedisConfiguration
- uid: IGroupableResource
  isExternal: true
  name: IGroupableResource
  fullName: IGroupableResource
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IUpdate
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update
  isExternal: false
  name: IUpdate
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Update.IUpdate
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: Microsoft.Azure.Management.Fluent.Redis.Models.DayOfWeek
  parent: Microsoft.Azure.Management.Fluent.Redis.Models
  isExternal: false
  name: DayOfWeek
  fullName: Microsoft.Azure.Management.Fluent.Redis.Models.DayOfWeek
- uid: Microsoft.Azure.Management.Fluent.Redis.Models
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Redis.Models
  fullName: Microsoft.Azure.Management.Fluent.Redis.Models
- uid: System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  fullname.vb: System.Nullable(Of System.TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry
  parent: Microsoft.Azure.Management.Fluent.Redis.Models
  isExternal: false
  name: ScheduleEntry
  fullName: Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ScheduleEntry>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry>
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry)
  name.vb: IList(Of ScheduleEntry)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry
    name: ScheduleEntry
    fullName: Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry
    name: ScheduleEntry
    fullName: Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: true
  name: IList<T>
  fullName: System.Collections.Generic.IList<T>
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
