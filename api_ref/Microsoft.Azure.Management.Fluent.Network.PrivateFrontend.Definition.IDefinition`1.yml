items:
- uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IDefinition`1
  commentId: T:Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IDefinition`1
  id: IDefinition`1
  parent: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition
  children: []
  langs:
  - csharp
  - vb
  name: IDefinition<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IDefinition<ParentT>
  type: Interface
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/PrivateFrontend/Definition/IDefinition.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IDefinition
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/PrivateFrontend/Definition/IDefinition.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition
  syntax:
    content: 'public interface IDefinition<ParentT> : IBlank<ParentT>, IWithAttach<ParentT>, IInDefinitionAlt<ParentT>, IWithPrivateIpAddress<IWithAttach<ParentT>>, IWithSubnet<ParentT>, Resource.Core.HasSubnet.Definition.IWithSubnet<IWithAttach<ParentT>>'
    content.vb: >-
      Public Interface IDefinition(Of ParentT)
          Inherits IBlank(Of ParentT), IWithAttach(Of ParentT), IWithSubnet(Of ParentT)
    typeParameters:
    - id: ParentT
  inheritedMembers:
  - Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach{{ParentT}}}.WithPrivateIpAddressDynamic
  - Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach{{ParentT}}}.WithPrivateIpAddressStatic(System.String)
  - Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet{{ParentT}}.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IDefinition(Of ParentT)
  name.vb: IDefinition(Of ParentT)
references:
- uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach{{ParentT}}}.WithPrivateIpAddressDynamic
  parent: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach{{ParentT}}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1.WithPrivateIpAddressDynamic
  name: WithPrivateIpAddressDynamic()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach<ParentT>>.WithPrivateIpAddressDynamic()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress(Of Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach(Of ParentT)).WithPrivateIpAddressDynamic()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1.WithPrivateIpAddressDynamic
    name: WithPrivateIpAddressDynamic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach<ParentT>>.WithPrivateIpAddressDynamic
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1.WithPrivateIpAddressDynamic
    name: WithPrivateIpAddressDynamic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress(Of Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach(Of ParentT)).WithPrivateIpAddressDynamic
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach{{ParentT}}}.WithPrivateIpAddressStatic(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach{{ParentT}}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1.WithPrivateIpAddressStatic(System.String)
  name: WithPrivateIpAddressStatic(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach<ParentT>>.WithPrivateIpAddressStatic(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress(Of Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach(Of ParentT)).WithPrivateIpAddressStatic(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1.WithPrivateIpAddressStatic(System.String)
    name: WithPrivateIpAddressStatic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach<ParentT>>.WithPrivateIpAddressStatic
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1.WithPrivateIpAddressStatic(System.String)
    name: WithPrivateIpAddressStatic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress(Of Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach(Of ParentT)).WithPrivateIpAddressStatic
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet{{ParentT}}.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet{{ParentT}}
  definition: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet`1.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  name: WithExistingSubnet(INetwork, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet<ParentT>.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork, System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet(Of ParentT).WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet`1.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
    name: WithExistingSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet<ParentT>.WithExistingSubnet
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet`1.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
    name: WithExistingSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet(Of ParentT).WithExistingSubnet
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1.WithPrivateIpAddressDynamic
  parent: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1
  isExternal: false
  name: WithPrivateIpAddressDynamic()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<ReturnT>.WithPrivateIpAddressDynamic()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress(Of ReturnT).WithPrivateIpAddressDynamic()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1.WithPrivateIpAddressDynamic
    name: WithPrivateIpAddressDynamic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<ReturnT>.WithPrivateIpAddressDynamic
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1.WithPrivateIpAddressDynamic
    name: WithPrivateIpAddressDynamic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress(Of ReturnT).WithPrivateIpAddressDynamic
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach{{ParentT}}}
  parent: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1
  name: IWithPrivateIpAddress<IWithAttach<ParentT>>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach<ParentT>>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress(Of Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach(Of ParentT))
  name.vb: IWithPrivateIpAddress(Of IWithAttach(Of ParentT))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1
    name: IWithPrivateIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1
    name: IWithPrivateIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1.WithPrivateIpAddressStatic(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1
  isExternal: true
  name: WithPrivateIpAddressStatic(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<ReturnT>.WithPrivateIpAddressStatic(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress(Of ReturnT).WithPrivateIpAddressStatic(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1.WithPrivateIpAddressStatic(System.String)
    name: WithPrivateIpAddressStatic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<ReturnT>.WithPrivateIpAddressStatic
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1.WithPrivateIpAddressStatic(System.String)
    name: WithPrivateIpAddressStatic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress(Of ReturnT).WithPrivateIpAddressStatic
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet`1.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet`1
  isExternal: true
  name: WithExistingSubnet(INetwork, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet<ParentT>.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork, System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet(Of ParentT).WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet`1.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
    name: WithExistingSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet<ParentT>.WithExistingSubnet
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet`1.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
    name: WithExistingSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet(Of ParentT).WithExistingSubnet
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet{{ParentT}}
  parent: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet`1
  name: IWithSubnet<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet(Of ParentT)
  name.vb: IWithSubnet(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet`1
    name: IWithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet`1
    name: IWithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition
  isExternal: false
  name: IWithPrivateIpAddress<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress(Of ReturnT)
  name.vb: IWithPrivateIpAddress(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1
    name: IWithPrivateIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1
    name: IWithPrivateIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition
- uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet`1
  parent: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition
  isExternal: false
  name: IWithSubnet<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet(Of ParentT)
  name.vb: IWithSubnet(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet`1
    name: IWithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet`1
    name: IWithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
