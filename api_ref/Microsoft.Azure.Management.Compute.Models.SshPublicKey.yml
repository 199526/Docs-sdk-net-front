items:
- uid: Microsoft.Azure.Management.Compute.Models.SshPublicKey
  commentId: T:Microsoft.Azure.Management.Compute.Models.SshPublicKey
  id: SshPublicKey
  parent: Microsoft.Azure.Management.Compute.Models
  children:
  - Microsoft.Azure.Management.Compute.Models.SshPublicKey.#ctor
  - Microsoft.Azure.Management.Compute.Models.SshPublicKey.#ctor(System.String,System.String)
  - Microsoft.Azure.Management.Compute.Models.SshPublicKey.KeyData
  - Microsoft.Azure.Management.Compute.Models.SshPublicKey.Path
  langs:
  - csharp
  - vb
  name: SshPublicKey
  fullName: Microsoft.Azure.Management.Compute.Models.SshPublicKey
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.V2.Compute/Generated/Models/SshPublicKey.cs
      branch: 5314ea29e61dbf96da9eec18d63cf62f07475e8a
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SshPublicKey
    path: src/ResourceManagement/Compute/Microsoft.Azure.Management.V2.Compute/Generated/Models/SshPublicKey.cs
    startLine: 16
  assemblies:
  - Microsoft.Azure.Management.V2.Compute
  packages:
  - Microsoft.Azure.Management.V2.Compute(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nContains information about SSH certificate public key and the path on\nthe Linux VM where the public key is placed.\n"
  example: []
  syntax:
    content: public class SshPublicKey
    content.vb: Public Class SshPublicKey
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Compute.Models.SshPublicKey.#ctor
  commentId: M:Microsoft.Azure.Management.Compute.Models.SshPublicKey.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Compute.Models.SshPublicKey
  langs:
  - csharp
  - vb
  name: SshPublicKey()
  fullName: Microsoft.Azure.Management.Compute.Models.SshPublicKey.SshPublicKey()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.V2.Compute/Generated/Models/SshPublicKey.cs
      branch: 5314ea29e61dbf96da9eec18d63cf62f07475e8a
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Compute/Microsoft.Azure.Management.V2.Compute/Generated/Models/SshPublicKey.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.V2.Compute
  packages:
  - Microsoft.Azure.Management.V2.Compute(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nInitializes a new instance of the SshPublicKey class.\n"
  example: []
  syntax:
    content: public SshPublicKey()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.SshPublicKey.#ctor(System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Compute.Models.SshPublicKey.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Microsoft.Azure.Management.Compute.Models.SshPublicKey
  langs:
  - csharp
  - vb
  name: SshPublicKey(String, String)
  fullName: Microsoft.Azure.Management.Compute.Models.SshPublicKey.SshPublicKey(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.V2.Compute/Generated/Models/SshPublicKey.cs
      branch: 5314ea29e61dbf96da9eec18d63cf62f07475e8a
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Compute/Microsoft.Azure.Management.V2.Compute/Generated/Models/SshPublicKey.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Management.V2.Compute
  packages:
  - Microsoft.Azure.Management.V2.Compute(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nInitializes a new instance of the SshPublicKey class.\n"
  example: []
  syntax:
    content: public SshPublicKey(string path = null, string keyData = null)
    content.vb: Public Sub New(path As String = Nothing, keyData As String = Nothing)
    parameters:
    - id: path
      type: System.String
      description: >-
        the full path on the created VM where SSH

        public key is stored. If the file already exists, the specified

        key is appended to the file.
    - id: keyData
      type: System.String
      description: >-
        Certificate public key used to authenticate

        with VM through SSH.The certificate must be in Pem format with or

        without headers.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.SshPublicKey.Path
  commentId: P:Microsoft.Azure.Management.Compute.Models.SshPublicKey.Path
  id: Path
  parent: Microsoft.Azure.Management.Compute.Models.SshPublicKey
  langs:
  - csharp
  - vb
  name: Path
  fullName: Microsoft.Azure.Management.Compute.Models.SshPublicKey.Path
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.V2.Compute/Generated/Models/SshPublicKey.cs
      branch: 5314ea29e61dbf96da9eec18d63cf62f07475e8a
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Path
    path: src/ResourceManagement/Compute/Microsoft.Azure.Management.V2.Compute/Generated/Models/SshPublicKey.cs
    startLine: 43
  assemblies:
  - Microsoft.Azure.Management.V2.Compute
  packages:
  - Microsoft.Azure.Management.V2.Compute(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets the full path on the created VM where SSH public key\nis stored. If the file already exists, the specified key is\nappended to the file.\n"
  example: []
  syntax:
    content: public string Path { get; set; }
    content.vb: Public Property Path As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.SshPublicKey.KeyData
  commentId: P:Microsoft.Azure.Management.Compute.Models.SshPublicKey.KeyData
  id: KeyData
  parent: Microsoft.Azure.Management.Compute.Models.SshPublicKey
  langs:
  - csharp
  - vb
  name: KeyData
  fullName: Microsoft.Azure.Management.Compute.Models.SshPublicKey.KeyData
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.V2.Compute/Generated/Models/SshPublicKey.cs
      branch: 5314ea29e61dbf96da9eec18d63cf62f07475e8a
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KeyData
    path: src/ResourceManagement/Compute/Microsoft.Azure.Management.V2.Compute/Generated/Models/SshPublicKey.cs
    startLine: 51
  assemblies:
  - Microsoft.Azure.Management.V2.Compute
  packages:
  - Microsoft.Azure.Management.V2.Compute(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nGets or sets certificate public key used to authenticate with VM\nthrough SSH.The certificate must be in Pem format with or without\nheaders.\n"
  example: []
  syntax:
    content: public string KeyData { get; set; }
    content.vb: Public Property KeyData As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: Microsoft.Azure.Management.Compute.Models
  fullName: Microsoft.Azure.Management.Compute.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
