items:
- uid: Microsoft.Azure.Management.Insights.Models.RecurrentSchedule
  commentId: T:Microsoft.Azure.Management.Insights.Models.RecurrentSchedule
  id: RecurrentSchedule
  parent: Microsoft.Azure.Management.Insights.Models
  children:
  - Microsoft.Azure.Management.Insights.Models.RecurrentSchedule.#ctor
  - Microsoft.Azure.Management.Insights.Models.RecurrentSchedule.#ctor(System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.Nullable{System.Int32}},System.Collections.Generic.IList{System.Nullable{System.Int32}})
  - Microsoft.Azure.Management.Insights.Models.RecurrentSchedule.Days
  - Microsoft.Azure.Management.Insights.Models.RecurrentSchedule.Hours
  - Microsoft.Azure.Management.Insights.Models.RecurrentSchedule.Minutes
  - Microsoft.Azure.Management.Insights.Models.RecurrentSchedule.TimeZone
  langs:
  - csharp
  - vb
  name: RecurrentSchedule
  fullName: Microsoft.Azure.Management.Insights.Models.RecurrentSchedule
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Insights/Microsoft.Azure.Insights/Generated/Management/Insights/Models/RecurrentSchedule.cs
      branch: d379d8d7cc630da30685344b7f7b0698c456763f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RecurrentSchedule
    path: src/ResourceManagement/Insights/Microsoft.Azure.Insights/Generated/Management/Insights/Models/RecurrentSchedule.cs
    startLine: 15
  assemblies:
  - Microsoft.Azure.Insights
  packages:
  - Microsoft.Azure.Insights(0.14.0-preview)
  namespace: Microsoft.Azure.Management.Insights.Models
  summary: "\nThe scheduling constraints for when the profile begins.\n"
  example: []
  syntax:
    content: public class RecurrentSchedule
    content.vb: Public Class RecurrentSchedule
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Insights.Models.RecurrentSchedule.#ctor
  commentId: M:Microsoft.Azure.Management.Insights.Models.RecurrentSchedule.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Insights.Models.RecurrentSchedule
  langs:
  - csharp
  - vb
  name: RecurrentSchedule()
  fullName: Microsoft.Azure.Management.Insights.Models.RecurrentSchedule.RecurrentSchedule()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Insights/Microsoft.Azure.Insights/Generated/Management/Insights/Models/RecurrentSchedule.cs
      branch: d379d8d7cc630da30685344b7f7b0698c456763f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Insights/Microsoft.Azure.Insights/Generated/Management/Insights/Models/RecurrentSchedule.cs
    startLine: 20
  assemblies:
  - Microsoft.Azure.Insights
  packages:
  - Microsoft.Azure.Insights(0.14.0-preview)
  namespace: Microsoft.Azure.Management.Insights.Models
  summary: "\nInitializes a new instance of the RecurrentSchedule class.\n"
  example: []
  syntax:
    content: public RecurrentSchedule()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Insights.Models.RecurrentSchedule.#ctor(System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.Nullable{System.Int32}},System.Collections.Generic.IList{System.Nullable{System.Int32}})
  commentId: M:Microsoft.Azure.Management.Insights.Models.RecurrentSchedule.#ctor(System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.Nullable{System.Int32}},System.Collections.Generic.IList{System.Nullable{System.Int32}})
  id: '#ctor(System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.Nullable{System.Int32}},System.Collections.Generic.IList{System.Nullable{System.Int32}})'
  parent: Microsoft.Azure.Management.Insights.Models.RecurrentSchedule
  langs:
  - csharp
  - vb
  name: RecurrentSchedule(String, IList<String>, IList<Nullable<Int32>>, IList<Nullable<Int32>>)
  fullName: Microsoft.Azure.Management.Insights.Models.RecurrentSchedule.RecurrentSchedule(System.String, System.Collections.Generic.IList<System.String>, System.Collections.Generic.IList<System.Nullable<System.Int32>>, System.Collections.Generic.IList<System.Nullable<System.Int32>>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Insights/Microsoft.Azure.Insights/Generated/Management/Insights/Models/RecurrentSchedule.cs
      branch: d379d8d7cc630da30685344b7f7b0698c456763f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Insights/Microsoft.Azure.Insights/Generated/Management/Insights/Models/RecurrentSchedule.cs
    startLine: 35
  assemblies:
  - Microsoft.Azure.Insights
  packages:
  - Microsoft.Azure.Insights(0.14.0-preview)
  namespace: Microsoft.Azure.Management.Insights.Models
  summary: "\nInitializes a new instance of the RecurrentSchedule class.\n"
  example: []
  syntax:
    content: public RecurrentSchedule(string timeZone = null, IList<string> days = null, IList<int ? > hours = null, IList<int ? > minutes = null)
    content.vb: Public Sub New(timeZone As String = Nothing, days As IList(Of String) = Nothing, hours As IList(Of Integer?) = Nothing, minutes As IList(Of Integer?) = Nothing)
    parameters:
    - id: timeZone
      type: System.String
      description: >-
        the time zone for the hours of the profile.

        See examples of valid timezone ids over here:

        https://msdn.microsoft.com/en-us/library/azure/dn931928.aspx
    - id: days
      type: System.Collections.Generic.IList{System.String}
      description: >-
        the collection of days that the profile takes

        effect on. Possible values are Sunday through Saturday.
    - id: hours
      type: System.Collections.Generic.IList{System.Nullable{System.Int32}}
      description: >-
        A collection of hours that the profile takes

        effect on. Values supported are 0 to 23 on the 24-hour clock

        (AM/PM times are not supported).
    - id: minutes
      type: System.Collections.Generic.IList{System.Nullable{System.Int32}}
      description: >-
        A collection of minutes at which the profile

        takes effect at.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Insights.Models.RecurrentSchedule.RecurrentSchedule(System.String, System.Collections.Generic.IList(Of System.String), System.Collections.Generic.IList(Of System.Nullable(Of System.Int32)), System.Collections.Generic.IList(Of System.Nullable(Of System.Int32)))
  name.vb: RecurrentSchedule(String, IList(Of String), IList(Of Nullable(Of Int32)), IList(Of Nullable(Of Int32)))
- uid: Microsoft.Azure.Management.Insights.Models.RecurrentSchedule.TimeZone
  commentId: P:Microsoft.Azure.Management.Insights.Models.RecurrentSchedule.TimeZone
  id: TimeZone
  parent: Microsoft.Azure.Management.Insights.Models.RecurrentSchedule
  langs:
  - csharp
  - vb
  name: TimeZone
  fullName: Microsoft.Azure.Management.Insights.Models.RecurrentSchedule.TimeZone
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Insights/Microsoft.Azure.Insights/Generated/Management/Insights/Models/RecurrentSchedule.cs
      branch: d379d8d7cc630da30685344b7f7b0698c456763f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TimeZone
    path: src/ResourceManagement/Insights/Microsoft.Azure.Insights/Generated/Management/Insights/Models/RecurrentSchedule.cs
    startLine: 48
  assemblies:
  - Microsoft.Azure.Insights
  packages:
  - Microsoft.Azure.Insights(0.14.0-preview)
  namespace: Microsoft.Azure.Management.Insights.Models
  summary: "\nGets or sets the time zone for the hours of the profile. See\nexamples of valid timezone ids over here:\nhttps://msdn.microsoft.com/en-us/library/azure/dn931928.aspx\n"
  example: []
  syntax:
    content: public string TimeZone { get; set; }
    content.vb: Public Property TimeZone As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Insights.Models.RecurrentSchedule.Days
  commentId: P:Microsoft.Azure.Management.Insights.Models.RecurrentSchedule.Days
  id: Days
  parent: Microsoft.Azure.Management.Insights.Models.RecurrentSchedule
  langs:
  - csharp
  - vb
  name: Days
  fullName: Microsoft.Azure.Management.Insights.Models.RecurrentSchedule.Days
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Insights/Microsoft.Azure.Insights/Generated/Management/Insights/Models/RecurrentSchedule.cs
      branch: d379d8d7cc630da30685344b7f7b0698c456763f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Days
    path: src/ResourceManagement/Insights/Microsoft.Azure.Insights/Generated/Management/Insights/Models/RecurrentSchedule.cs
    startLine: 55
  assemblies:
  - Microsoft.Azure.Insights
  packages:
  - Microsoft.Azure.Insights(0.14.0-preview)
  namespace: Microsoft.Azure.Management.Insights.Models
  summary: "\nGets or sets the collection of days that the profile takes effect\non. Possible values are Sunday through Saturday.\n"
  example: []
  syntax:
    content: public IList<string> Days { get; set; }
    content.vb: Public Property Days As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Insights.Models.RecurrentSchedule.Hours
  commentId: P:Microsoft.Azure.Management.Insights.Models.RecurrentSchedule.Hours
  id: Hours
  parent: Microsoft.Azure.Management.Insights.Models.RecurrentSchedule
  langs:
  - csharp
  - vb
  name: Hours
  fullName: Microsoft.Azure.Management.Insights.Models.RecurrentSchedule.Hours
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Insights/Microsoft.Azure.Insights/Generated/Management/Insights/Models/RecurrentSchedule.cs
      branch: d379d8d7cc630da30685344b7f7b0698c456763f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Hours
    path: src/ResourceManagement/Insights/Microsoft.Azure.Insights/Generated/Management/Insights/Models/RecurrentSchedule.cs
    startLine: 63
  assemblies:
  - Microsoft.Azure.Insights
  packages:
  - Microsoft.Azure.Insights(0.14.0-preview)
  namespace: Microsoft.Azure.Management.Insights.Models
  summary: "\nGets or sets a collection of hours that the profile takes effect\non. Values supported are 0 to 23 on the 24-hour clock (AM/PM\ntimes are not supported).\n"
  example: []
  syntax:
    content: public IList<int ? > Hours { get; set; }
    content.vb: Public Property Hours As IList(Of Integer?)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Nullable{System.Int32}}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Insights.Models.RecurrentSchedule.Minutes
  commentId: P:Microsoft.Azure.Management.Insights.Models.RecurrentSchedule.Minutes
  id: Minutes
  parent: Microsoft.Azure.Management.Insights.Models.RecurrentSchedule
  langs:
  - csharp
  - vb
  name: Minutes
  fullName: Microsoft.Azure.Management.Insights.Models.RecurrentSchedule.Minutes
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Insights/Microsoft.Azure.Insights/Generated/Management/Insights/Models/RecurrentSchedule.cs
      branch: d379d8d7cc630da30685344b7f7b0698c456763f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Minutes
    path: src/ResourceManagement/Insights/Microsoft.Azure.Insights/Generated/Management/Insights/Models/RecurrentSchedule.cs
    startLine: 70
  assemblies:
  - Microsoft.Azure.Insights
  packages:
  - Microsoft.Azure.Insights(0.14.0-preview)
  namespace: Microsoft.Azure.Management.Insights.Models
  summary: "\nGets or sets a collection of minutes at which the profile takes\neffect at.\n"
  example: []
  syntax:
    content: public IList<int ? > Minutes { get; set; }
    content.vb: Public Property Minutes As IList(Of Integer?)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Nullable{System.Int32}}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Insights.Models
  isExternal: false
  name: Microsoft.Azure.Management.Insights.Models
  fullName: Microsoft.Azure.Management.Insights.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList{System.Nullable{System.Int32}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Nullable<Int32>>
  fullName: System.Collections.Generic.IList<System.Nullable<System.Int32>>
  fullname.vb: System.Collections.Generic.IList(Of System.Nullable(Of System.Int32))
  name.vb: IList(Of Nullable(Of Int32))
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: true
  name: IList<T>
  fullName: System.Collections.Generic.IList<T>
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
