### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions
  commentId: T:Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions
  id: CrossConnectionOperationsExtensions
  parent: Microsoft.WindowsAzure.Management.ExpressRoute
  children:
  - Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.BeginNew(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations,System.String)
  - Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.BeginNewAsync(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations,System.String)
  - Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.BeginUpdate(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations,System.String,Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionUpdateParameters)
  - Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.BeginUpdateAsync(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations,System.String,Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionUpdateParameters)
  - Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.Get(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations,System.String)
  - Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.GetAsync(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations,System.String)
  - Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.GetOperationStatus(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations,System.String)
  - Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.GetOperationStatusAsync(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations,System.String)
  - Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.List(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations)
  - Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.ListAsync(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations)
  - Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.New(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations,System.String)
  - Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.NewAsync(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations,System.String)
  - Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.Update(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations,System.String,Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionUpdateParameters)
  - Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.UpdateAsync(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations,System.String,Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionUpdateParameters)
  langs:
  - csharp
  - vb
  name: CrossConnectionOperationsExtensions
  nameWithType: CrossConnectionOperationsExtensions
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions
  type: Class
  source:
    remote:
      commit:
        author:
          date: 2016-08-08T08:43:31.3158954Z
    id: CrossConnectionOperationsExtensions
    path: C:/TeamCity/buildAgent/work/5da8a3841a6cb95c/azure-sdk-for-net/src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/CrossConnectionOperationsExtensions.cs
    startLine: 39
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute
  summary: "\nThe Express Route API provides programmatic access to the functionality\nneeded by the customer to set up Dedicated Circuits and Dedicated\nCircuit Links. The Express Route Customer API is a REST API. All API\noperations are performed over SSL and mutually authenticated using\nX.509 v3 certificates.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/ee460799.aspx for\nmore information)\n"
  example: []
  syntax:
    content: public static class CrossConnectionOperationsExtensions
    content.vb: Public Module CrossConnectionOperationsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.BeginNew(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.BeginNew(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations,System.String)
  id: BeginNew(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginNew(ICrossConnectionOperations, String)
  nameWithType: CrossConnectionOperationsExtensions.BeginNew(ICrossConnectionOperations, String)
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.BeginNew(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations, System.String)
  type: Method
  source:
    remote:
      commit:
        author:
          date: 2016-08-08T08:43:31.3158954Z
    id: BeginNew
    path: C:/TeamCity/buildAgent/work/5da8a3841a6cb95c/azure-sdk-for-net/src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/CrossConnectionOperationsExtensions.cs
    startLine: 56
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute
  summary: "\nThe New Cross Connection operation provisions a cross connection\nfor as dedicated circuit.\n"
  example: []
  syntax:
    content: public static ExpressRouteOperationResponse BeginNew(this ICrossConnectionOperations operations, string serviceKey)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginNew(operations As ICrossConnectionOperations, serviceKey As String) As ExpressRouteOperationResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations.\n"
    - id: serviceKey
      type: System.String
      description: "\nRequired. Service key of the dedicated circuit.\n"
    return:
      type: Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.BeginNewAsync(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.BeginNewAsync(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations,System.String)
  id: BeginNewAsync(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginNewAsync(ICrossConnectionOperations, String)
  nameWithType: CrossConnectionOperationsExtensions.BeginNewAsync(ICrossConnectionOperations, String)
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.BeginNewAsync(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations, System.String)
  type: Method
  source:
    remote:
      commit:
        author:
          date: 2016-08-08T08:43:31.3158954Z
    id: BeginNewAsync
    path: C:/TeamCity/buildAgent/work/5da8a3841a6cb95c/azure-sdk-for-net/src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/CrossConnectionOperationsExtensions.cs
    startLine: 80
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute
  summary: "\nThe New Cross Connection operation provisions a cross connection\nfor as dedicated circuit.\n"
  example: []
  syntax:
    content: public static Task<ExpressRouteOperationResponse> BeginNewAsync(this ICrossConnectionOperations operations, string serviceKey)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginNewAsync(operations As ICrossConnectionOperations, serviceKey As String) As Task(Of ExpressRouteOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations.\n"
    - id: serviceKey
      type: System.String
      description: "\nRequired. Service key of the dedicated circuit.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.BeginUpdate(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations,System.String,Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionUpdateParameters)
  commentId: M:Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.BeginUpdate(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations,System.String,Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionUpdateParameters)
  id: BeginUpdate(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations,System.String,Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionUpdateParameters)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginUpdate(ICrossConnectionOperations, String, CrossConnectionUpdateParameters)
  nameWithType: CrossConnectionOperationsExtensions.BeginUpdate(ICrossConnectionOperations, String, CrossConnectionUpdateParameters)
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.BeginUpdate(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations, System.String, Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionUpdateParameters)
  type: Method
  source:
    remote:
      commit:
        author:
          date: 2016-08-08T08:43:31.3158954Z
    id: BeginUpdate
    path: C:/TeamCity/buildAgent/work/5da8a3841a6cb95c/azure-sdk-for-net/src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/CrossConnectionOperationsExtensions.cs
    startLine: 105
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute
  summary: "\nThe Update Cross Connection operation updates an existing cross\nconnection.\n"
  example: []
  syntax:
    content: public static ExpressRouteOperationResponse BeginUpdate(this ICrossConnectionOperations operations, string serviceKey, CrossConnectionUpdateParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginUpdate(operations As ICrossConnectionOperations, serviceKey As String, parameters As CrossConnectionUpdateParameters) As ExpressRouteOperationResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations.\n"
    - id: serviceKey
      type: System.String
      description: "\nRequired. The service key representing the relationship between\nAzure and the customer.\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionUpdateParameters
      description: "\nRequired. Parameters supplied to the Update CrossConnection\noperation.\n"
    return:
      type: Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.BeginUpdateAsync(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations,System.String,Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionUpdateParameters)
  commentId: M:Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.BeginUpdateAsync(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations,System.String,Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionUpdateParameters)
  id: BeginUpdateAsync(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations,System.String,Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionUpdateParameters)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginUpdateAsync(ICrossConnectionOperations, String, CrossConnectionUpdateParameters)
  nameWithType: CrossConnectionOperationsExtensions.BeginUpdateAsync(ICrossConnectionOperations, String, CrossConnectionUpdateParameters)
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.BeginUpdateAsync(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations, System.String, Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionUpdateParameters)
  type: Method
  source:
    remote:
      commit:
        author:
          date: 2016-08-08T08:43:31.3158954Z
    id: BeginUpdateAsync
    path: C:/TeamCity/buildAgent/work/5da8a3841a6cb95c/azure-sdk-for-net/src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/CrossConnectionOperationsExtensions.cs
    startLine: 134
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute
  summary: "\nThe Update Cross Connection operation updates an existing cross\nconnection.\n"
  example: []
  syntax:
    content: public static Task<ExpressRouteOperationResponse> BeginUpdateAsync(this ICrossConnectionOperations operations, string serviceKey, CrossConnectionUpdateParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginUpdateAsync(operations As ICrossConnectionOperations, serviceKey As String, parameters As CrossConnectionUpdateParameters) As Task(Of ExpressRouteOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations.\n"
    - id: serviceKey
      type: System.String
      description: "\nRequired. The service key representing the relationship between\nAzure and the customer.\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionUpdateParameters
      description: "\nRequired. Parameters supplied to the Update CrossConnection\noperation.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.Get(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.Get(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations,System.String)
  id: Get(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions
  langs:
  - csharp
  - vb
  name: Get(ICrossConnectionOperations, String)
  nameWithType: CrossConnectionOperationsExtensions.Get(ICrossConnectionOperations, String)
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.Get(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations, System.String)
  type: Method
  source:
    remote:
      commit:
        author:
          date: 2016-08-08T08:43:31.3158954Z
    id: Get
    path: C:/TeamCity/buildAgent/work/5da8a3841a6cb95c/azure-sdk-for-net/src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/CrossConnectionOperationsExtensions.cs
    startLine: 154
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute
  summary: "\nThe Get Cross Connection operation retrieves the Cross Connection\ninformation for the Dedicated Circuit with the specified service\nkey.\n"
  example: []
  syntax:
    content: public static CrossConnectionGetResponse Get(this ICrossConnectionOperations operations, string serviceKey)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Get(operations As ICrossConnectionOperations, serviceKey As String) As CrossConnectionGetResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations.\n"
    - id: serviceKey
      type: System.String
      description: "\nRequired. The servicee key representing the dedicated circuit.\n"
    return:
      type: Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionGetResponse
      description: "\nThe Get Cross Connection Operation Response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.GetAsync(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.GetAsync(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations,System.String)
  id: GetAsync(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetAsync(ICrossConnectionOperations, String)
  nameWithType: CrossConnectionOperationsExtensions.GetAsync(ICrossConnectionOperations, String)
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.GetAsync(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations, System.String)
  type: Method
  source:
    remote:
      commit:
        author:
          date: 2016-08-08T08:43:31.3158954Z
    id: GetAsync
    path: C:/TeamCity/buildAgent/work/5da8a3841a6cb95c/azure-sdk-for-net/src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/CrossConnectionOperationsExtensions.cs
    startLine: 178
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute
  summary: "\nThe Get Cross Connection operation retrieves the Cross Connection\ninformation for the Dedicated Circuit with the specified service\nkey.\n"
  example: []
  syntax:
    content: public static Task<CrossConnectionGetResponse> GetAsync(this ICrossConnectionOperations operations, string serviceKey)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAsync(operations As ICrossConnectionOperations, serviceKey As String) As Task(Of CrossConnectionGetResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations.\n"
    - id: serviceKey
      type: System.String
      description: "\nRequired. The servicee key representing the dedicated circuit.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionGetResponse}
      description: "\nThe Get Cross Connection Operation Response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.GetOperationStatus(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.GetOperationStatus(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations,System.String)
  id: GetOperationStatus(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetOperationStatus(ICrossConnectionOperations, String)
  nameWithType: CrossConnectionOperationsExtensions.GetOperationStatus(ICrossConnectionOperations, String)
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.GetOperationStatus(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations, System.String)
  type: Method
  source:
    remote:
      commit:
        author:
          date: 2016-08-08T08:43:31.3158954Z
    id: GetOperationStatus
    path: C:/TeamCity/buildAgent/work/5da8a3841a6cb95c/azure-sdk-for-net/src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/CrossConnectionOperationsExtensions.cs
    startLine: 207
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute
  summary: "\nThe Get Express Route operation status gets information on the\nstatus of Express Route operations in Windows Azure.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/jj154112.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static ExpressRouteOperationStatusResponse GetOperationStatus(this ICrossConnectionOperations operations, string operationId)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetOperationStatus(operations As ICrossConnectionOperations, operationId As String) As ExpressRouteOperationStatusResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations.\n"
    - id: operationId
      type: System.String
      description: "\nRequired. The id  of the operation.\n"
    return:
      type: Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself.  If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request.  If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request, and also includes error\ninformation regarding the failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.GetOperationStatusAsync(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.GetOperationStatusAsync(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations,System.String)
  id: GetOperationStatusAsync(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetOperationStatusAsync(ICrossConnectionOperations, String)
  nameWithType: CrossConnectionOperationsExtensions.GetOperationStatusAsync(ICrossConnectionOperations, String)
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.GetOperationStatusAsync(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations, System.String)
  type: Method
  source:
    remote:
      commit:
        author:
          date: 2016-08-08T08:43:31.3158954Z
    id: GetOperationStatusAsync
    path: C:/TeamCity/buildAgent/work/5da8a3841a6cb95c/azure-sdk-for-net/src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/CrossConnectionOperationsExtensions.cs
    startLine: 240
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute
  summary: "\nThe Get Express Route operation status gets information on the\nstatus of Express Route operations in Windows Azure.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/jj154112.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static Task<ExpressRouteOperationStatusResponse> GetOperationStatusAsync(this ICrossConnectionOperations operations, string operationId)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetOperationStatusAsync(operations As ICrossConnectionOperations, operationId As String) As Task(Of ExpressRouteOperationStatusResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations.\n"
    - id: operationId
      type: System.String
      description: "\nRequired. The id  of the operation.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse}
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself.  If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request.  If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request, and also includes error\ninformation regarding the failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.List(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations)
  commentId: M:Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.List(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations)
  id: List(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions
  langs:
  - csharp
  - vb
  name: List(ICrossConnectionOperations)
  nameWithType: CrossConnectionOperationsExtensions.List(ICrossConnectionOperations)
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.List(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations)
  type: Method
  source:
    remote:
      commit:
        author:
          date: 2016-08-08T08:43:31.3158954Z
    id: List
    path: C:/TeamCity/buildAgent/work/5da8a3841a6cb95c/azure-sdk-for-net/src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/CrossConnectionOperationsExtensions.cs
    startLine: 256
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute
  summary: "\nThe List Cross Connection operation retrieves a list of cross\nconnections owned by the provider.\n"
  example: []
  syntax:
    content: public static CrossConnectionListResponse List(this ICrossConnectionOperations operations)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function List(operations As ICrossConnectionOperations) As CrossConnectionListResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations.\n"
    return:
      type: Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionListResponse
      description: "\nThe List Cross Connection operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.ListAsync(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations)
  commentId: M:Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.ListAsync(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations)
  id: ListAsync(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListAsync(ICrossConnectionOperations)
  nameWithType: CrossConnectionOperationsExtensions.ListAsync(ICrossConnectionOperations)
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.ListAsync(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations)
  type: Method
  source:
    remote:
      commit:
        author:
          date: 2016-08-08T08:43:31.3158954Z
    id: ListAsync
    path: C:/TeamCity/buildAgent/work/5da8a3841a6cb95c/azure-sdk-for-net/src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/CrossConnectionOperationsExtensions.cs
    startLine: 276
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute
  summary: "\nThe List Cross Connection operation retrieves a list of cross\nconnections owned by the provider.\n"
  example: []
  syntax:
    content: public static Task<CrossConnectionListResponse> ListAsync(this ICrossConnectionOperations operations)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListAsync(operations As ICrossConnectionOperations) As Task(Of CrossConnectionListResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionListResponse}
      description: "\nThe List Cross Connection operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.New(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.New(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations,System.String)
  id: New(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions
  langs:
  - csharp
  - vb
  name: New(ICrossConnectionOperations, String)
  nameWithType: CrossConnectionOperationsExtensions.New(ICrossConnectionOperations, String)
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.New(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations, System.String)
  type: Method
  source:
    remote:
      commit:
        author:
          date: 2016-08-08T08:43:31.3158954Z
    id: New
    path: C:/TeamCity/buildAgent/work/5da8a3841a6cb95c/azure-sdk-for-net/src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/CrossConnectionOperationsExtensions.cs
    startLine: 303
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute
  summary: "\nThe New Cross Connection operation provisions a cross connection\nfor the given azure circuit.\n"
  example: []
  syntax:
    content: public static ExpressRouteOperationStatusResponse New(this ICrossConnectionOperations operations, string serviceKey)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function New(operations As ICrossConnectionOperations, serviceKey As String) As ExpressRouteOperationStatusResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations.\n"
    - id: serviceKey
      type: System.String
      description: "\nRequired. Service key of the dedicated circuit.\n"
    return:
      type: Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself.  If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request.  If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request, and also includes error\ninformation regarding the failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.NewAsync(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.NewAsync(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations,System.String)
  id: NewAsync(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions
  langs:
  - csharp
  - vb
  name: NewAsync(ICrossConnectionOperations, String)
  nameWithType: CrossConnectionOperationsExtensions.NewAsync(ICrossConnectionOperations, String)
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.NewAsync(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations, System.String)
  type: Method
  source:
    remote:
      commit:
        author:
          date: 2016-08-08T08:43:31.3158954Z
    id: NewAsync
    path: C:/TeamCity/buildAgent/work/5da8a3841a6cb95c/azure-sdk-for-net/src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/CrossConnectionOperationsExtensions.cs
    startLine: 334
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute
  summary: "\nThe New Cross Connection operation provisions a cross connection\nfor the given azure circuit.\n"
  example: []
  syntax:
    content: public static Task<ExpressRouteOperationStatusResponse> NewAsync(this ICrossConnectionOperations operations, string serviceKey)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function NewAsync(operations As ICrossConnectionOperations, serviceKey As String) As Task(Of ExpressRouteOperationStatusResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations.\n"
    - id: serviceKey
      type: System.String
      description: "\nRequired. Service key of the dedicated circuit.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse}
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself.  If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request.  If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request, and also includes error\ninformation regarding the failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.Update(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations,System.String,Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionUpdateParameters)
  commentId: M:Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.Update(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations,System.String,Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionUpdateParameters)
  id: Update(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations,System.String,Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionUpdateParameters)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions
  langs:
  - csharp
  - vb
  name: Update(ICrossConnectionOperations, String, CrossConnectionUpdateParameters)
  nameWithType: CrossConnectionOperationsExtensions.Update(ICrossConnectionOperations, String, CrossConnectionUpdateParameters)
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.Update(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations, System.String, Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionUpdateParameters)
  type: Method
  source:
    remote:
      commit:
        author:
          date: 2016-08-08T08:43:31.3158954Z
    id: Update
    path: C:/TeamCity/buildAgent/work/5da8a3841a6cb95c/azure-sdk-for-net/src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/CrossConnectionOperationsExtensions.cs
    startLine: 365
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute
  summary: "\nThe Update Cross Connection operation updates an existing cross\nconnection.\n"
  example: []
  syntax:
    content: public static ExpressRouteOperationStatusResponse Update(this ICrossConnectionOperations operations, string serviceKey, CrossConnectionUpdateParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Update(operations As ICrossConnectionOperations, serviceKey As String, parameters As CrossConnectionUpdateParameters) As ExpressRouteOperationStatusResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations.\n"
    - id: serviceKey
      type: System.String
      description: "\nRequired. The service key representing the relationship between\nAzure and the customer.\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionUpdateParameters
      description: "\nRequired. Parameters supplied to the Update Bgp Peering operation.\n"
    return:
      type: Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself.  If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request.  If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request, and also includes error\ninformation regarding the failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.UpdateAsync(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations,System.String,Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionUpdateParameters)
  commentId: M:Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.UpdateAsync(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations,System.String,Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionUpdateParameters)
  id: UpdateAsync(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations,System.String,Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionUpdateParameters)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions
  langs:
  - csharp
  - vb
  name: UpdateAsync(ICrossConnectionOperations, String, CrossConnectionUpdateParameters)
  nameWithType: CrossConnectionOperationsExtensions.UpdateAsync(ICrossConnectionOperations, String, CrossConnectionUpdateParameters)
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.CrossConnectionOperationsExtensions.UpdateAsync(Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations, System.String, Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionUpdateParameters)
  type: Method
  source:
    remote:
      commit:
        author:
          date: 2016-08-08T08:43:31.3158954Z
    id: UpdateAsync
    path: C:/TeamCity/buildAgent/work/5da8a3841a6cb95c/azure-sdk-for-net/src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/CrossConnectionOperationsExtensions.cs
    startLine: 400
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute
  summary: "\nThe Update Cross Connection operation updates an existing cross\nconnection.\n"
  example: []
  syntax:
    content: public static Task<ExpressRouteOperationStatusResponse> UpdateAsync(this ICrossConnectionOperations operations, string serviceKey, CrossConnectionUpdateParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UpdateAsync(operations As ICrossConnectionOperations, serviceKey As String, parameters As CrossConnectionUpdateParameters) As Task(Of ExpressRouteOperationStatusResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations.\n"
    - id: serviceKey
      type: System.String
      description: "\nRequired. The service key representing the relationship between\nAzure and the customer.\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionUpdateParameters
      description: "\nRequired. Parameters supplied to the Update Bgp Peering operation.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse}
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself.  If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request.  If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request, and also includes error\ninformation regarding the failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.WindowsAzure.Management.ExpressRoute
  commentId: N:Microsoft.WindowsAzure.Management.ExpressRoute
  isExternal: false
  name: Microsoft.WindowsAzure.Management.ExpressRoute
  nameWithType: Microsoft.WindowsAzure.Management.ExpressRoute
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations
  commentId: T:Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations
  parent: Microsoft.WindowsAzure.Management.ExpressRoute
  isExternal: false
  name: ICrossConnectionOperations
  nameWithType: ICrossConnectionOperations
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.ICrossConnectionOperations
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse
  commentId: T:Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.Models
  isExternal: false
  name: ExpressRouteOperationResponse
  nameWithType: ExpressRouteOperationResponse
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models
  commentId: N:Microsoft.WindowsAzure.Management.ExpressRoute.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.ExpressRoute.Models
  nameWithType: Microsoft.WindowsAzure.Management.ExpressRoute.Models
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models
- uid: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse}
  commentId: T:System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ExpressRouteOperationResponse>
  nameWithType: Task<ExpressRouteOperationResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse>
  nameWithType.vb: Task(Of ExpressRouteOperationResponse)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse)
  name.vb: Task(Of ExpressRouteOperationResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse
    name: ExpressRouteOperationResponse
    nameWithType: ExpressRouteOperationResponse
    fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse
    name: ExpressRouteOperationResponse
    nameWithType: ExpressRouteOperationResponse
    fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionUpdateParameters
  commentId: T:Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionUpdateParameters
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.Models
  isExternal: false
  name: CrossConnectionUpdateParameters
  nameWithType: CrossConnectionUpdateParameters
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionUpdateParameters
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionGetResponse
  commentId: T:Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionGetResponse
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.Models
  isExternal: false
  name: CrossConnectionGetResponse
  nameWithType: CrossConnectionGetResponse
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionGetResponse
- uid: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionGetResponse}
  commentId: T:System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionGetResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<CrossConnectionGetResponse>
  nameWithType: Task<CrossConnectionGetResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionGetResponse>
  nameWithType.vb: Task(Of CrossConnectionGetResponse)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionGetResponse)
  name.vb: Task(Of CrossConnectionGetResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionGetResponse
    name: CrossConnectionGetResponse
    nameWithType: CrossConnectionGetResponse
    fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionGetResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionGetResponse
    name: CrossConnectionGetResponse
    nameWithType: CrossConnectionGetResponse
    fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionGetResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse
  commentId: T:Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.Models
  isExternal: false
  name: ExpressRouteOperationStatusResponse
  nameWithType: ExpressRouteOperationStatusResponse
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse
- uid: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse}
  commentId: T:System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ExpressRouteOperationStatusResponse>
  nameWithType: Task<ExpressRouteOperationStatusResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse>
  nameWithType.vb: Task(Of ExpressRouteOperationStatusResponse)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse)
  name.vb: Task(Of ExpressRouteOperationStatusResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse
    name: ExpressRouteOperationStatusResponse
    nameWithType: ExpressRouteOperationStatusResponse
    fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse
    name: ExpressRouteOperationStatusResponse
    nameWithType: ExpressRouteOperationStatusResponse
    fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionListResponse
  commentId: T:Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionListResponse
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.Models
  isExternal: false
  name: CrossConnectionListResponse
  nameWithType: CrossConnectionListResponse
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionListResponse
- uid: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionListResponse}
  commentId: T:System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionListResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<CrossConnectionListResponse>
  nameWithType: Task<CrossConnectionListResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionListResponse>
  nameWithType.vb: Task(Of CrossConnectionListResponse)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionListResponse)
  name.vb: Task(Of CrossConnectionListResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionListResponse
    name: CrossConnectionListResponse
    nameWithType: CrossConnectionListResponse
    fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionListResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionListResponse
    name: CrossConnectionListResponse
    nameWithType: CrossConnectionListResponse
    fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models.CrossConnectionListResponse
  - name: )
    nameWithType: )
    fullName: )
