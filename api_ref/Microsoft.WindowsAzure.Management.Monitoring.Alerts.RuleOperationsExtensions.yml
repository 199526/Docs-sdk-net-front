### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.Monitoring.Alerts.RuleOperationsExtensions
  commentId: T:Microsoft.WindowsAzure.Management.Monitoring.Alerts.RuleOperationsExtensions
  id: RuleOperationsExtensions
  parent: Microsoft.WindowsAzure.Management.Monitoring.Alerts
  children:
  - Microsoft.WindowsAzure.Management.Monitoring.Alerts.RuleOperationsExtensions.CreateOrUpdate(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations,Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleCreateOrUpdateParameters)
  - Microsoft.WindowsAzure.Management.Monitoring.Alerts.RuleOperationsExtensions.CreateOrUpdateAsync(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations,Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleCreateOrUpdateParameters)
  - Microsoft.WindowsAzure.Management.Monitoring.Alerts.RuleOperationsExtensions.Delete(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations,System.String)
  - Microsoft.WindowsAzure.Management.Monitoring.Alerts.RuleOperationsExtensions.DeleteAsync(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations,System.String)
  - Microsoft.WindowsAzure.Management.Monitoring.Alerts.RuleOperationsExtensions.Get(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations,System.String)
  - Microsoft.WindowsAzure.Management.Monitoring.Alerts.RuleOperationsExtensions.GetAsync(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations,System.String)
  - Microsoft.WindowsAzure.Management.Monitoring.Alerts.RuleOperationsExtensions.List(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations)
  - Microsoft.WindowsAzure.Management.Monitoring.Alerts.RuleOperationsExtensions.ListAsync(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations)
  langs:
  - csharp
  - vb
  name: RuleOperationsExtensions
  nameWithType: RuleOperationsExtensions
  fullName: Microsoft.WindowsAzure.Management.Monitoring.Alerts.RuleOperationsExtensions
  type: Class
  source:
    remote:
      path: src/ServiceManagement/Monitoring/Monitoring/Generated/Alerts/RuleOperationsExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RuleOperationsExtensions
    path: src/ServiceManagement/Monitoring/Monitoring/Generated/Alerts/RuleOperationsExtensions.cs
    startLine: 31
  assemblies:
  - Microsoft.WindowsAzure.Management.Monitoring
  namespace: Microsoft.WindowsAzure.Management.Monitoring.Alerts
  syntax:
    content: public static class RuleOperationsExtensions
    content.vb: Public Module RuleOperationsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.WindowsAzure.Management.Monitoring.Alerts.RuleOperationsExtensions.CreateOrUpdate(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations,Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleCreateOrUpdateParameters)
  commentId: M:Microsoft.WindowsAzure.Management.Monitoring.Alerts.RuleOperationsExtensions.CreateOrUpdate(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations,Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleCreateOrUpdateParameters)
  id: CreateOrUpdate(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations,Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleCreateOrUpdateParameters)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Monitoring.Alerts.RuleOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateOrUpdate(IRuleOperations, RuleCreateOrUpdateParameters)
  nameWithType: RuleOperationsExtensions.CreateOrUpdate(IRuleOperations, RuleCreateOrUpdateParameters)
  fullName: Microsoft.WindowsAzure.Management.Monitoring.Alerts.RuleOperationsExtensions.CreateOrUpdate(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations, Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleCreateOrUpdateParameters)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Monitoring/Monitoring/Generated/Alerts/RuleOperationsExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateOrUpdate
    path: src/ServiceManagement/Monitoring/Monitoring/Generated/Alerts/RuleOperationsExtensions.cs
    startLine: 44
  assemblies:
  - Microsoft.WindowsAzure.Management.Monitoring
  namespace: Microsoft.WindowsAzure.Management.Monitoring.Alerts
  example: []
  syntax:
    content: public static AzureOperationResponse CreateOrUpdate(this IRuleOperations operations, RuleCreateOrUpdateParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateOrUpdate(operations As IRuleOperations, parameters As RuleCreateOrUpdateParameters) As AzureOperationResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations.\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleCreateOrUpdateParameters
      description: "\nRequired. The rule to create or update.\n"
    return:
      type: AzureOperationResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Monitoring.Alerts.RuleOperationsExtensions.CreateOrUpdateAsync(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations,Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleCreateOrUpdateParameters)
  commentId: M:Microsoft.WindowsAzure.Management.Monitoring.Alerts.RuleOperationsExtensions.CreateOrUpdateAsync(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations,Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleCreateOrUpdateParameters)
  id: CreateOrUpdateAsync(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations,Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleCreateOrUpdateParameters)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Monitoring.Alerts.RuleOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateOrUpdateAsync(IRuleOperations, RuleCreateOrUpdateParameters)
  nameWithType: RuleOperationsExtensions.CreateOrUpdateAsync(IRuleOperations, RuleCreateOrUpdateParameters)
  fullName: Microsoft.WindowsAzure.Management.Monitoring.Alerts.RuleOperationsExtensions.CreateOrUpdateAsync(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations, Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleCreateOrUpdateParameters)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Monitoring/Monitoring/Generated/Alerts/RuleOperationsExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateOrUpdateAsync
    path: src/ServiceManagement/Monitoring/Monitoring/Generated/Alerts/RuleOperationsExtensions.cs
    startLine: 64
  assemblies:
  - Microsoft.WindowsAzure.Management.Monitoring
  namespace: Microsoft.WindowsAzure.Management.Monitoring.Alerts
  example: []
  syntax:
    content: public static Task<AzureOperationResponse> CreateOrUpdateAsync(this IRuleOperations operations, RuleCreateOrUpdateParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateOrUpdateAsync(operations As IRuleOperations, parameters As RuleCreateOrUpdateParameters) As Task(Of AzureOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations.\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleCreateOrUpdateParameters
      description: "\nRequired. The rule to create or update.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Monitoring.Alerts.RuleOperationsExtensions.Delete(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Monitoring.Alerts.RuleOperationsExtensions.Delete(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations,System.String)
  id: Delete(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Monitoring.Alerts.RuleOperationsExtensions
  langs:
  - csharp
  - vb
  name: Delete(IRuleOperations, String)
  nameWithType: RuleOperationsExtensions.Delete(IRuleOperations, String)
  fullName: Microsoft.WindowsAzure.Management.Monitoring.Alerts.RuleOperationsExtensions.Delete(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Monitoring/Monitoring/Generated/Alerts/RuleOperationsExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Delete
    path: src/ServiceManagement/Monitoring/Monitoring/Generated/Alerts/RuleOperationsExtensions.cs
    startLine: 80
  assemblies:
  - Microsoft.WindowsAzure.Management.Monitoring
  namespace: Microsoft.WindowsAzure.Management.Monitoring.Alerts
  example: []
  syntax:
    content: public static AzureOperationResponse Delete(this IRuleOperations operations, string ruleId)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Delete(operations As IRuleOperations, ruleId As String) As AzureOperationResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations.\n"
    - id: ruleId
      type: System.String
      description: "\nRequired. The id of the rule to delete.\n"
    return:
      type: AzureOperationResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Monitoring.Alerts.RuleOperationsExtensions.DeleteAsync(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Monitoring.Alerts.RuleOperationsExtensions.DeleteAsync(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations,System.String)
  id: DeleteAsync(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Monitoring.Alerts.RuleOperationsExtensions
  langs:
  - csharp
  - vb
  name: DeleteAsync(IRuleOperations, String)
  nameWithType: RuleOperationsExtensions.DeleteAsync(IRuleOperations, String)
  fullName: Microsoft.WindowsAzure.Management.Monitoring.Alerts.RuleOperationsExtensions.DeleteAsync(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Monitoring/Monitoring/Generated/Alerts/RuleOperationsExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeleteAsync
    path: src/ServiceManagement/Monitoring/Monitoring/Generated/Alerts/RuleOperationsExtensions.cs
    startLine: 100
  assemblies:
  - Microsoft.WindowsAzure.Management.Monitoring
  namespace: Microsoft.WindowsAzure.Management.Monitoring.Alerts
  example: []
  syntax:
    content: public static Task<AzureOperationResponse> DeleteAsync(this IRuleOperations operations, string ruleId)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteAsync(operations As IRuleOperations, ruleId As String) As Task(Of AzureOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations.\n"
    - id: ruleId
      type: System.String
      description: "\nRequired. The id of the rule to delete.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Monitoring.Alerts.RuleOperationsExtensions.Get(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Monitoring.Alerts.RuleOperationsExtensions.Get(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations,System.String)
  id: Get(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Monitoring.Alerts.RuleOperationsExtensions
  langs:
  - csharp
  - vb
  name: Get(IRuleOperations, String)
  nameWithType: RuleOperationsExtensions.Get(IRuleOperations, String)
  fullName: Microsoft.WindowsAzure.Management.Monitoring.Alerts.RuleOperationsExtensions.Get(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Monitoring/Monitoring/Generated/Alerts/RuleOperationsExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Get
    path: src/ServiceManagement/Monitoring/Monitoring/Generated/Alerts/RuleOperationsExtensions.cs
    startLine: 115
  assemblies:
  - Microsoft.WindowsAzure.Management.Monitoring
  namespace: Microsoft.WindowsAzure.Management.Monitoring.Alerts
  example: []
  syntax:
    content: public static RuleGetResponse Get(this IRuleOperations operations, string ruleId)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Get(operations As IRuleOperations, ruleId As String) As RuleGetResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations.\n"
    - id: ruleId
      type: System.String
      description: "\nRequired. The id of the rule to retrieve.\n"
    return:
      type: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleGetResponse
      description: "\nThe Get Rule operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Monitoring.Alerts.RuleOperationsExtensions.GetAsync(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Monitoring.Alerts.RuleOperationsExtensions.GetAsync(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations,System.String)
  id: GetAsync(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Monitoring.Alerts.RuleOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetAsync(IRuleOperations, String)
  nameWithType: RuleOperationsExtensions.GetAsync(IRuleOperations, String)
  fullName: Microsoft.WindowsAzure.Management.Monitoring.Alerts.RuleOperationsExtensions.GetAsync(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Monitoring/Monitoring/Generated/Alerts/RuleOperationsExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetAsync
    path: src/ServiceManagement/Monitoring/Monitoring/Generated/Alerts/RuleOperationsExtensions.cs
    startLine: 134
  assemblies:
  - Microsoft.WindowsAzure.Management.Monitoring
  namespace: Microsoft.WindowsAzure.Management.Monitoring.Alerts
  example: []
  syntax:
    content: public static Task<RuleGetResponse> GetAsync(this IRuleOperations operations, string ruleId)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAsync(operations As IRuleOperations, ruleId As String) As Task(Of RuleGetResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations.\n"
    - id: ruleId
      type: System.String
      description: "\nRequired. The id of the rule to retrieve.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleGetResponse}
      description: "\nThe Get Rule operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Monitoring.Alerts.RuleOperationsExtensions.List(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations)
  commentId: M:Microsoft.WindowsAzure.Management.Monitoring.Alerts.RuleOperationsExtensions.List(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations)
  id: List(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Monitoring.Alerts.RuleOperationsExtensions
  langs:
  - csharp
  - vb
  name: List(IRuleOperations)
  nameWithType: RuleOperationsExtensions.List(IRuleOperations)
  fullName: Microsoft.WindowsAzure.Management.Monitoring.Alerts.RuleOperationsExtensions.List(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Monitoring/Monitoring/Generated/Alerts/RuleOperationsExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: List
    path: src/ServiceManagement/Monitoring/Monitoring/Generated/Alerts/RuleOperationsExtensions.cs
    startLine: 149
  assemblies:
  - Microsoft.WindowsAzure.Management.Monitoring
  namespace: Microsoft.WindowsAzure.Management.Monitoring.Alerts
  summary: "\nList the alert rules within a subscription.\n"
  example: []
  syntax:
    content: public static RuleListResponse List(this IRuleOperations operations)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function List(operations As IRuleOperations) As RuleListResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations.\n"
    return:
      type: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleListResponse
      description: "\nThe List Rules operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Monitoring.Alerts.RuleOperationsExtensions.ListAsync(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations)
  commentId: M:Microsoft.WindowsAzure.Management.Monitoring.Alerts.RuleOperationsExtensions.ListAsync(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations)
  id: ListAsync(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Monitoring.Alerts.RuleOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListAsync(IRuleOperations)
  nameWithType: RuleOperationsExtensions.ListAsync(IRuleOperations)
  fullName: Microsoft.WindowsAzure.Management.Monitoring.Alerts.RuleOperationsExtensions.ListAsync(Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Monitoring/Monitoring/Generated/Alerts/RuleOperationsExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListAsync
    path: src/ServiceManagement/Monitoring/Monitoring/Generated/Alerts/RuleOperationsExtensions.cs
    startLine: 168
  assemblies:
  - Microsoft.WindowsAzure.Management.Monitoring
  namespace: Microsoft.WindowsAzure.Management.Monitoring.Alerts
  summary: "\nList the alert rules within a subscription.\n"
  example: []
  syntax:
    content: public static Task<RuleListResponse> ListAsync(this IRuleOperations operations)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListAsync(operations As IRuleOperations) As Task(Of RuleListResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleListResponse}
      description: "\nThe List Rules operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.WindowsAzure.Management.Monitoring.Alerts
  commentId: N:Microsoft.WindowsAzure.Management.Monitoring.Alerts
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Monitoring.Alerts
  nameWithType: Microsoft.WindowsAzure.Management.Monitoring.Alerts
  fullName: Microsoft.WindowsAzure.Management.Monitoring.Alerts
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations
  commentId: T:Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations
  parent: Microsoft.WindowsAzure.Management.Monitoring.Alerts
  isExternal: false
  name: IRuleOperations
  nameWithType: IRuleOperations
  fullName: Microsoft.WindowsAzure.Management.Monitoring.Alerts.IRuleOperations
- uid: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleCreateOrUpdateParameters
  commentId: T:Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleCreateOrUpdateParameters
  parent: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models
  isExternal: false
  name: RuleCreateOrUpdateParameters
  nameWithType: RuleCreateOrUpdateParameters
  fullName: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleCreateOrUpdateParameters
- uid: AzureOperationResponse
  isExternal: true
  name: AzureOperationResponse
  nameWithType: AzureOperationResponse
  fullName: AzureOperationResponse
- uid: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models
  commentId: N:Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models
  nameWithType: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models
  fullName: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models
- uid: System.Threading.Tasks.Task{AzureOperationResponse}
  commentId: T:System.Threading.Tasks.Task{AzureOperationResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AzureOperationResponse>
  nameWithType: Task<AzureOperationResponse>
  fullName: System.Threading.Tasks.Task<AzureOperationResponse>
  nameWithType.vb: Task(Of AzureOperationResponse)
  fullname.vb: System.Threading.Tasks.Task(Of AzureOperationResponse)
  name.vb: Task(Of AzureOperationResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AzureOperationResponse
    name: AzureOperationResponse
    nameWithType: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AzureOperationResponse
    name: AzureOperationResponse
    nameWithType: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleGetResponse
  commentId: T:Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleGetResponse
  parent: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models
  isExternal: false
  name: RuleGetResponse
  nameWithType: RuleGetResponse
  fullName: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleGetResponse
- uid: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleGetResponse}
  commentId: T:System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleGetResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<RuleGetResponse>
  nameWithType: Task<RuleGetResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleGetResponse>
  nameWithType.vb: Task(Of RuleGetResponse)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleGetResponse)
  name.vb: Task(Of RuleGetResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleGetResponse
    name: RuleGetResponse
    nameWithType: RuleGetResponse
    fullName: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleGetResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleGetResponse
    name: RuleGetResponse
    nameWithType: RuleGetResponse
    fullName: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleGetResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleListResponse
  commentId: T:Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleListResponse
  parent: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models
  isExternal: false
  name: RuleListResponse
  nameWithType: RuleListResponse
  fullName: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleListResponse
- uid: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleListResponse}
  commentId: T:System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleListResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<RuleListResponse>
  nameWithType: Task<RuleListResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleListResponse>
  nameWithType.vb: Task(Of RuleListResponse)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleListResponse)
  name.vb: Task(Of RuleListResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleListResponse
    name: RuleListResponse
    nameWithType: RuleListResponse
    fullName: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleListResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleListResponse
    name: RuleListResponse
    nameWithType: RuleListResponse
    fullName: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleListResponse
  - name: )
    nameWithType: )
    fullName: )
