### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.ServiceBus.Models.CountDetails
  commentId: T:Microsoft.WindowsAzure.Management.ServiceBus.Models.CountDetails
  id: CountDetails
  parent: Microsoft.WindowsAzure.Management.ServiceBus.Models
  children:
  - Microsoft.WindowsAzure.Management.ServiceBus.Models.CountDetails.#ctor
  - Microsoft.WindowsAzure.Management.ServiceBus.Models.CountDetails.ActiveMessageCount
  - Microsoft.WindowsAzure.Management.ServiceBus.Models.CountDetails.DeadLetterMessageCount
  - Microsoft.WindowsAzure.Management.ServiceBus.Models.CountDetails.ScheduledMessageCount
  - Microsoft.WindowsAzure.Management.ServiceBus.Models.CountDetails.TransferDeadLetterMessageCount
  - Microsoft.WindowsAzure.Management.ServiceBus.Models.CountDetails.TransferMessageCount
  langs:
  - csharp
  - vb
  name: CountDetails
  nameWithType: CountDetails
  fullName: Microsoft.WindowsAzure.Management.ServiceBus.Models.CountDetails
  type: Class
  source:
    remote:
      path: src/ServiceManagement/ServiceBus/ServiceBusManagement/Generated/Models/CountDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CountDetails
    path: src/ServiceManagement/ServiceBus/ServiceBusManagement/Generated/Models/CountDetails.cs
    startLine: 29
  assemblies:
  - Microsoft.WindowsAzure.Management.ServiceBus
  namespace: Microsoft.WindowsAzure.Management.ServiceBus.Models
  summary: "\nStatistics about the current usage of a service bus entity.\n"
  example: []
  syntax:
    content: public class CountDetails
    content.vb: Public Class CountDetails
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.ServiceBus.Models.CountDetails.ActiveMessageCount
  commentId: P:Microsoft.WindowsAzure.Management.ServiceBus.Models.CountDetails.ActiveMessageCount
  id: ActiveMessageCount
  parent: Microsoft.WindowsAzure.Management.ServiceBus.Models.CountDetails
  langs:
  - csharp
  - vb
  name: ActiveMessageCount
  nameWithType: CountDetails.ActiveMessageCount
  fullName: Microsoft.WindowsAzure.Management.ServiceBus.Models.CountDetails.ActiveMessageCount
  type: Property
  source:
    remote:
      path: src/ServiceManagement/ServiceBus/ServiceBusManagement/Generated/Models/CountDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ActiveMessageCount
    path: src/ServiceManagement/ServiceBus/ServiceBusManagement/Generated/Models/CountDetails.cs
    startLine: 36
  assemblies:
  - Microsoft.WindowsAzure.Management.ServiceBus
  namespace: Microsoft.WindowsAzure.Management.ServiceBus.Models
  summary: "\nOptional. The current number of active messages.\n"
  example: []
  syntax:
    content: public int ActiveMessageCount { get; set; }
    content.vb: Public Property ActiveMessageCount As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.ServiceBus.Models.CountDetails.DeadLetterMessageCount
  commentId: P:Microsoft.WindowsAzure.Management.ServiceBus.Models.CountDetails.DeadLetterMessageCount
  id: DeadLetterMessageCount
  parent: Microsoft.WindowsAzure.Management.ServiceBus.Models.CountDetails
  langs:
  - csharp
  - vb
  name: DeadLetterMessageCount
  nameWithType: CountDetails.DeadLetterMessageCount
  fullName: Microsoft.WindowsAzure.Management.ServiceBus.Models.CountDetails.DeadLetterMessageCount
  type: Property
  source:
    remote:
      path: src/ServiceManagement/ServiceBus/ServiceBusManagement/Generated/Models/CountDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeadLetterMessageCount
    path: src/ServiceManagement/ServiceBus/ServiceBusManagement/Generated/Models/CountDetails.cs
    startLine: 47
  assemblies:
  - Microsoft.WindowsAzure.Management.ServiceBus
  namespace: Microsoft.WindowsAzure.Management.ServiceBus.Models
  summary: "\nOptional. The current number of dead letters.\n"
  example: []
  syntax:
    content: public int DeadLetterMessageCount { get; set; }
    content.vb: Public Property DeadLetterMessageCount As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.ServiceBus.Models.CountDetails.ScheduledMessageCount
  commentId: P:Microsoft.WindowsAzure.Management.ServiceBus.Models.CountDetails.ScheduledMessageCount
  id: ScheduledMessageCount
  parent: Microsoft.WindowsAzure.Management.ServiceBus.Models.CountDetails
  langs:
  - csharp
  - vb
  name: ScheduledMessageCount
  nameWithType: CountDetails.ScheduledMessageCount
  fullName: Microsoft.WindowsAzure.Management.ServiceBus.Models.CountDetails.ScheduledMessageCount
  type: Property
  source:
    remote:
      path: src/ServiceManagement/ServiceBus/ServiceBusManagement/Generated/Models/CountDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ScheduledMessageCount
    path: src/ServiceManagement/ServiceBus/ServiceBusManagement/Generated/Models/CountDetails.cs
    startLine: 58
  assemblies:
  - Microsoft.WindowsAzure.Management.ServiceBus
  namespace: Microsoft.WindowsAzure.Management.ServiceBus.Models
  summary: "\nOptional. The current number of scheduled messages.\n"
  example: []
  syntax:
    content: public int ScheduledMessageCount { get; set; }
    content.vb: Public Property ScheduledMessageCount As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.ServiceBus.Models.CountDetails.TransferDeadLetterMessageCount
  commentId: P:Microsoft.WindowsAzure.Management.ServiceBus.Models.CountDetails.TransferDeadLetterMessageCount
  id: TransferDeadLetterMessageCount
  parent: Microsoft.WindowsAzure.Management.ServiceBus.Models.CountDetails
  langs:
  - csharp
  - vb
  name: TransferDeadLetterMessageCount
  nameWithType: CountDetails.TransferDeadLetterMessageCount
  fullName: Microsoft.WindowsAzure.Management.ServiceBus.Models.CountDetails.TransferDeadLetterMessageCount
  type: Property
  source:
    remote:
      path: src/ServiceManagement/ServiceBus/ServiceBusManagement/Generated/Models/CountDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TransferDeadLetterMessageCount
    path: src/ServiceManagement/ServiceBus/ServiceBusManagement/Generated/Models/CountDetails.cs
    startLine: 69
  assemblies:
  - Microsoft.WindowsAzure.Management.ServiceBus
  namespace: Microsoft.WindowsAzure.Management.ServiceBus.Models
  summary: "\nOptional. The current number of transfer dead letters.\n"
  example: []
  syntax:
    content: public int TransferDeadLetterMessageCount { get; set; }
    content.vb: Public Property TransferDeadLetterMessageCount As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.ServiceBus.Models.CountDetails.TransferMessageCount
  commentId: P:Microsoft.WindowsAzure.Management.ServiceBus.Models.CountDetails.TransferMessageCount
  id: TransferMessageCount
  parent: Microsoft.WindowsAzure.Management.ServiceBus.Models.CountDetails
  langs:
  - csharp
  - vb
  name: TransferMessageCount
  nameWithType: CountDetails.TransferMessageCount
  fullName: Microsoft.WindowsAzure.Management.ServiceBus.Models.CountDetails.TransferMessageCount
  type: Property
  source:
    remote:
      path: src/ServiceManagement/ServiceBus/ServiceBusManagement/Generated/Models/CountDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TransferMessageCount
    path: src/ServiceManagement/ServiceBus/ServiceBusManagement/Generated/Models/CountDetails.cs
    startLine: 80
  assemblies:
  - Microsoft.WindowsAzure.Management.ServiceBus
  namespace: Microsoft.WindowsAzure.Management.ServiceBus.Models
  summary: "\nOptional. The current number of transfer messages.\n"
  example: []
  syntax:
    content: public int TransferMessageCount { get; set; }
    content.vb: Public Property TransferMessageCount As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.ServiceBus.Models.CountDetails.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.ServiceBus.Models.CountDetails.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.ServiceBus.Models.CountDetails
  langs:
  - csharp
  - vb
  name: CountDetails()
  nameWithType: CountDetails.CountDetails()
  fullName: Microsoft.WindowsAzure.Management.ServiceBus.Models.CountDetails.CountDetails()
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/ServiceBus/ServiceBusManagement/Generated/Models/CountDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/ServiceBus/ServiceBusManagement/Generated/Models/CountDetails.cs
    startLine: 89
  assemblies:
  - Microsoft.WindowsAzure.Management.ServiceBus
  namespace: Microsoft.WindowsAzure.Management.ServiceBus.Models
  summary: "\nInitializes a new instance of the CountDetails class.\n"
  example: []
  syntax:
    content: public CountDetails()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.ServiceBus.Models
  commentId: N:Microsoft.WindowsAzure.Management.ServiceBus.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.ServiceBus.Models
  nameWithType: Microsoft.WindowsAzure.Management.ServiceBus.Models
  fullName: Microsoft.WindowsAzure.Management.ServiceBus.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
