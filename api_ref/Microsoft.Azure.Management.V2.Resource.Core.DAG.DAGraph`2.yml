items:
- uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph`2
  commentId: T:Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph`2
  id: DAGraph`2
  parent: Microsoft.Azure.Management.V2.Resource.Core.DAG
  children:
  - Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph`2.#ctor(`1)
  - Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph`2.GetNext
  - Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph`2.GetNodeData(System.String)
  - Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph`2.IsPreparer
  - Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph`2.IsRootNode(`1)
  - Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph`2.Merge(Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph{`0,`1})
  - Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph`2.Prepare
  - Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph`2.ReportCompleted(`1)
  langs:
  - csharp
  - vb
  name: DAGraph<NodeDataT, NodeT>
  fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph<NodeDataT, NodeT>
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/DAG/DAGraph.cs
      branch: dab8b1150e5a5b24b90fb532e969147f16a69ec8
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DAGraph
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/DAG/DAGraph.cs
    startLine: 8
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core.DAG
  syntax:
    content: 'public class DAGraph<NodeDataT, NodeT> : Graph<NodeDataT, NodeT> where NodeT : DAGNode<NodeDataT>'
    content.vb: >-
      Public Class DAGraph(Of NodeDataT, NodeT As DAGNode(Of NodeDataT))
          Inherits Graph(Of NodeDataT, NodeT)
    typeParameters:
    - id: NodeDataT
    - id: NodeT
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph{{NodeDataT},{NodeT}}
  inheritedMembers:
  - Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph{{NodeDataT},{NodeT}}.graph
  - Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph{{NodeDataT},{NodeT}}.AddNode({NodeT})
  - Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph{{NodeDataT},{NodeT}}.Contains(System.String)
  - Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph{{NodeDataT},{NodeT}}.GetNode(System.String)
  - Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph{{NodeDataT},{NodeT}}.Visit(System.Action{{NodeT}})
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph(Of NodeDataT, NodeT)
  name.vb: DAGraph(Of NodeDataT, NodeT)
- uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph`2.#ctor(`1)
  commentId: M:Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph`2.#ctor(`1)
  id: '#ctor(`1)'
  parent: Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph`2
  langs:
  - csharp
  - vb
  name: DAGraph(NodeT)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph<NodeDataT, NodeT>.DAGraph(NodeT)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/DAG/DAGraph.cs
      branch: dab8b1150e5a5b24b90fb532e969147f16a69ec8
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/DAG/DAGraph.cs
    startLine: 13
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core.DAG
  syntax:
    content: public DAGraph(NodeT rootNode)
    content.vb: Public Sub New(rootNode As NodeT)
    parameters:
    - id: rootNode
      type: '{NodeT}'
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph(Of NodeDataT, NodeT).DAGraph(NodeT)
- uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph`2.IsRootNode(`1)
  commentId: M:Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph`2.IsRootNode(`1)
  id: IsRootNode(`1)
  parent: Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph`2
  langs:
  - csharp
  - vb
  name: IsRootNode(NodeT)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph<NodeDataT, NodeT>.IsRootNode(NodeT)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/DAG/DAGraph.cs
      branch: dab8b1150e5a5b24b90fb532e969147f16a69ec8
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IsRootNode
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/DAG/DAGraph.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core.DAG
  syntax:
    content: public bool IsRootNode(NodeT node)
    content.vb: Public Function IsRootNode(node As NodeT) As Boolean
    parameters:
    - id: node
      type: '{NodeT}'
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph(Of NodeDataT, NodeT).IsRootNode(NodeT)
- uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph`2.IsPreparer
  commentId: P:Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph`2.IsPreparer
  id: IsPreparer
  parent: Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph`2
  langs:
  - csharp
  - vb
  name: IsPreparer
  fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph<NodeDataT, NodeT>.IsPreparer
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/DAG/DAGraph.cs
      branch: dab8b1150e5a5b24b90fb532e969147f16a69ec8
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IsPreparer
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/DAG/DAGraph.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core.DAG
  syntax:
    content: public bool IsPreparer { get; }
    content.vb: Public ReadOnly Property IsPreparer As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph(Of NodeDataT, NodeT).IsPreparer
- uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph`2.Merge(Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph{`0,`1})
  commentId: M:Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph`2.Merge(Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph{`0,`1})
  id: Merge(Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph{`0,`1})
  parent: Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph`2
  langs:
  - csharp
  - vb
  name: Merge(DAGraph<NodeDataT, NodeT>)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph<NodeDataT, NodeT>.Merge(Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph<NodeDataT, NodeT>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/DAG/DAGraph.cs
      branch: dab8b1150e5a5b24b90fb532e969147f16a69ec8
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Merge
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/DAG/DAGraph.cs
    startLine: 34
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core.DAG
  syntax:
    content: public void Merge(DAGraph<NodeDataT, NodeT> parent)
    content.vb: Public Sub Merge(parent As DAGraph(Of NodeDataT, NodeT))
    parameters:
    - id: parent
      type: Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph`2
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph(Of NodeDataT, NodeT).Merge(Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph(Of NodeDataT, NodeT))
  name.vb: Merge(DAGraph(Of NodeDataT, NodeT))
- uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph`2.Prepare
  commentId: M:Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph`2.Prepare
  id: Prepare
  parent: Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph`2
  langs:
  - csharp
  - vb
  name: Prepare()
  fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph<NodeDataT, NodeT>.Prepare()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/DAG/DAGraph.cs
      branch: dab8b1150e5a5b24b90fb532e969147f16a69ec8
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Prepare
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/DAG/DAGraph.cs
    startLine: 45
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core.DAG
  syntax:
    content: public void Prepare()
    content.vb: Public Sub Prepare
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph(Of NodeDataT, NodeT).Prepare()
- uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph`2.GetNext
  commentId: M:Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph`2.GetNext
  id: GetNext
  parent: Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph`2
  langs:
  - csharp
  - vb
  name: GetNext()
  fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph<NodeDataT, NodeT>.GetNext()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/DAG/DAGraph.cs
      branch: dab8b1150e5a5b24b90fb532e969147f16a69ec8
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetNext
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/DAG/DAGraph.cs
    startLine: 62
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core.DAG
  syntax:
    content: public NodeT GetNext()
    content.vb: Public Function GetNext As NodeT
    return:
      type: '{NodeT}'
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph(Of NodeDataT, NodeT).GetNext()
- uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph`2.GetNodeData(System.String)
  commentId: M:Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph`2.GetNodeData(System.String)
  id: GetNodeData(System.String)
  parent: Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph`2
  langs:
  - csharp
  - vb
  name: GetNodeData(String)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph<NodeDataT, NodeT>.GetNodeData(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/DAG/DAGraph.cs
      branch: dab8b1150e5a5b24b90fb532e969147f16a69ec8
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetNodeData
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/DAG/DAGraph.cs
    startLine: 72
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core.DAG
  syntax:
    content: public NodeDataT GetNodeData(string key)
    content.vb: Public Function GetNodeData(key As String) As NodeDataT
    parameters:
    - id: key
      type: System.String
    return:
      type: '{NodeDataT}'
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph(Of NodeDataT, NodeT).GetNodeData(System.String)
- uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph`2.ReportCompleted(`1)
  commentId: M:Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph`2.ReportCompleted(`1)
  id: ReportCompleted(`1)
  parent: Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph`2
  langs:
  - csharp
  - vb
  name: ReportCompleted(NodeT)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph<NodeDataT, NodeT>.ReportCompleted(NodeT)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/DAG/DAGraph.cs
      branch: dab8b1150e5a5b24b90fb532e969147f16a69ec8
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ReportCompleted
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/DAG/DAGraph.cs
    startLine: 77
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core.DAG
  syntax:
    content: public void ReportCompleted(NodeT dependency)
    content.vb: Public Sub ReportCompleted(dependency As NodeT)
    parameters:
    - id: dependency
      type: '{NodeT}'
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph(Of NodeDataT, NodeT).ReportCompleted(NodeT)
references:
- uid: Microsoft.Azure.Management.V2.Resource.Core.DAG
  isExternal: false
  name: Microsoft.Azure.Management.V2.Resource.Core.DAG
  fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph{{NodeDataT},{NodeT}}
  parent: Microsoft.Azure.Management.V2.Resource.Core.DAG
  definition: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2
  name: Graph<NodeDataT, NodeT>
  fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph<NodeDataT, NodeT>
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph(Of NodeDataT, NodeT)
  name.vb: Graph(Of NodeDataT, NodeT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2
    name: Graph
    fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph
  - name: <
    fullName: <
  - name: NodeDataT
    fullName: NodeDataT
  - name: ', '
    fullName: ', '
  - name: NodeT
    fullName: NodeT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2
    name: Graph
    fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph
  - name: '(Of '
    fullName: '(Of '
  - name: NodeDataT
    fullName: NodeDataT
  - name: ', '
    fullName: ', '
  - name: NodeT
    fullName: NodeT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph{{NodeDataT},{NodeT}}.graph
  parent: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph{{NodeDataT},{NodeT}}
  definition: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2.graph
  name: graph
  fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph<NodeDataT, NodeT>.graph
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph(Of NodeDataT, NodeT).graph
- uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph{{NodeDataT},{NodeT}}.AddNode({NodeT})
  parent: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph{{NodeDataT},{NodeT}}
  definition: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2.AddNode(`1)
  name: AddNode(NodeT)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph<NodeDataT, NodeT>.AddNode(NodeT)
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph(Of NodeDataT, NodeT).AddNode(NodeT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2.AddNode(`1)
    name: AddNode
    fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph<NodeDataT, NodeT>.AddNode
  - name: (
    fullName: (
  - name: NodeT
    fullName: NodeT
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2.AddNode(`1)
    name: AddNode
    fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph(Of NodeDataT, NodeT).AddNode
  - name: (
    fullName: (
  - name: NodeT
    fullName: NodeT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph{{NodeDataT},{NodeT}}.Contains(System.String)
  parent: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph{{NodeDataT},{NodeT}}
  definition: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2.Contains(System.String)
  name: Contains(String)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph<NodeDataT, NodeT>.Contains(System.String)
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph(Of NodeDataT, NodeT).Contains(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2.Contains(System.String)
    name: Contains
    fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph<NodeDataT, NodeT>.Contains
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2.Contains(System.String)
    name: Contains
    fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph(Of NodeDataT, NodeT).Contains
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph{{NodeDataT},{NodeT}}.GetNode(System.String)
  parent: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph{{NodeDataT},{NodeT}}
  definition: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2.GetNode(System.String)
  name: GetNode(String)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph<NodeDataT, NodeT>.GetNode(System.String)
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph(Of NodeDataT, NodeT).GetNode(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2.GetNode(System.String)
    name: GetNode
    fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph<NodeDataT, NodeT>.GetNode
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2.GetNode(System.String)
    name: GetNode
    fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph(Of NodeDataT, NodeT).GetNode
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph{{NodeDataT},{NodeT}}.Visit(System.Action{{NodeT}})
  parent: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph{{NodeDataT},{NodeT}}
  definition: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2.Visit(System.Action{`1})
  name: Visit(Action<NodeT>)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph<NodeDataT, NodeT>.Visit(System.Action<NodeT>)
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph(Of NodeDataT, NodeT).Visit(System.Action(Of NodeT))
  name.vb: Visit(Action(Of NodeT))
  spec.csharp:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2.Visit(System.Action{`1})
    name: Visit
    fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph<NodeDataT, NodeT>.Visit
  - name: (
    fullName: (
  - uid: System.Action`1
    name: Action
    fullName: System.Action
    isExternal: true
  - name: <
    fullName: <
  - name: NodeT
    fullName: NodeT
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2.Visit(System.Action{`1})
    name: Visit
    fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph(Of NodeDataT, NodeT).Visit
  - name: (
    fullName: (
  - uid: System.Action`1
    name: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: NodeT
    fullName: NodeT
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2
  parent: Microsoft.Azure.Management.V2.Resource.Core.DAG
  isExternal: false
  name: Graph<NodeDataT, NodeT>
  fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph<NodeDataT, NodeT>
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph(Of NodeDataT, NodeT)
  name.vb: Graph(Of NodeDataT, NodeT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2
    name: Graph
    fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph
  - name: <
    fullName: <
  - name: NodeDataT
    fullName: NodeDataT
  - name: ', '
    fullName: ', '
  - name: NodeT
    fullName: NodeT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2
    name: Graph
    fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph
  - name: '(Of '
    fullName: '(Of '
  - name: NodeDataT
    fullName: NodeDataT
  - name: ', '
    fullName: ', '
  - name: NodeT
    fullName: NodeT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2.graph
  parent: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2
  isExternal: false
  name: graph
  fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph<NodeDataT, NodeT>.graph
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph(Of NodeDataT, NodeT).graph
- uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2.AddNode(`1)
  parent: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2
  isExternal: false
  name: AddNode(NodeT)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph<NodeDataT, NodeT>.AddNode(NodeT)
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph(Of NodeDataT, NodeT).AddNode(NodeT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2.AddNode(`1)
    name: AddNode
    fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph<NodeDataT, NodeT>.AddNode
  - name: (
    fullName: (
  - name: NodeT
    fullName: NodeT
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2.AddNode(`1)
    name: AddNode
    fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph(Of NodeDataT, NodeT).AddNode
  - name: (
    fullName: (
  - name: NodeT
    fullName: NodeT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2.Contains(System.String)
  parent: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2
  isExternal: true
  name: Contains(String)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph<NodeDataT, NodeT>.Contains(System.String)
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph(Of NodeDataT, NodeT).Contains(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2.Contains(System.String)
    name: Contains
    fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph<NodeDataT, NodeT>.Contains
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2.Contains(System.String)
    name: Contains
    fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph(Of NodeDataT, NodeT).Contains
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2.GetNode(System.String)
  parent: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2
  isExternal: true
  name: GetNode(String)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph<NodeDataT, NodeT>.GetNode(System.String)
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph(Of NodeDataT, NodeT).GetNode(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2.GetNode(System.String)
    name: GetNode
    fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph<NodeDataT, NodeT>.GetNode
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2.GetNode(System.String)
    name: GetNode
    fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph(Of NodeDataT, NodeT).GetNode
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2.Visit(System.Action{`1})
  parent: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2
  isExternal: true
  name: Visit(Action<NodeT>)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph<NodeDataT, NodeT>.Visit(System.Action<NodeT>)
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph(Of NodeDataT, NodeT).Visit(System.Action(Of NodeT))
  name.vb: Visit(Action(Of NodeT))
  spec.csharp:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2.Visit(System.Action{`1})
    name: Visit
    fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph<NodeDataT, NodeT>.Visit
  - name: (
    fullName: (
  - uid: System.Action`1
    name: Action
    fullName: System.Action
    isExternal: true
  - name: <
    fullName: <
  - name: NodeT
    fullName: NodeT
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph`2.Visit(System.Action{`1})
    name: Visit
    fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.Graph(Of NodeDataT, NodeT).Visit
  - name: (
    fullName: (
  - uid: System.Action`1
    name: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: NodeT
    fullName: NodeT
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: '{NodeT}'
  isExternal: false
  name: NodeT
  fullName: NodeT
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph`2
  parent: Microsoft.Azure.Management.V2.Resource.Core.DAG
  isExternal: false
  name: DAGraph<NodeDataT, NodeT>
  fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph<NodeDataT, NodeT>
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph(Of NodeDataT, NodeT)
  name.vb: DAGraph(Of NodeDataT, NodeT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph`2
    name: DAGraph
    fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph
  - name: <
    fullName: <
  - name: NodeDataT
    fullName: NodeDataT
  - name: ', '
    fullName: ', '
  - name: NodeT
    fullName: NodeT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph`2
    name: DAGraph
    fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.DAGraph
  - name: '(Of '
    fullName: '(Of '
  - name: NodeDataT
    fullName: NodeDataT
  - name: ', '
    fullName: ', '
  - name: NodeT
    fullName: NodeT
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: '{NodeDataT}'
  isExternal: false
  name: NodeDataT
  fullName: NodeDataT
