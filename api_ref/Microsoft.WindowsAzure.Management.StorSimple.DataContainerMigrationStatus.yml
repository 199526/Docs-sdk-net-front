### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.StorSimple.DataContainerMigrationStatus
  commentId: T:Microsoft.WindowsAzure.Management.StorSimple.DataContainerMigrationStatus
  id: DataContainerMigrationStatus
  parent: Microsoft.WindowsAzure.Management.StorSimple
  children:
  - Microsoft.WindowsAzure.Management.StorSimple.DataContainerMigrationStatus.#ctor(System.String,System.Collections.Generic.List{Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationDataContainerStatus})
  - Microsoft.WindowsAzure.Management.StorSimple.DataContainerMigrationStatus.LegacyConfigId
  - Microsoft.WindowsAzure.Management.StorSimple.DataContainerMigrationStatus.MigrationCompleted
  - Microsoft.WindowsAzure.Management.StorSimple.DataContainerMigrationStatus.MigrationFailed
  - Microsoft.WindowsAzure.Management.StorSimple.DataContainerMigrationStatus.MigrationInprogress
  - Microsoft.WindowsAzure.Management.StorSimple.DataContainerMigrationStatus.MigrationNotStarted
  langs:
  - csharp
  - vb
  name: DataContainerMigrationStatus
  nameWithType: DataContainerMigrationStatus
  fullName: Microsoft.WindowsAzure.Management.StorSimple.DataContainerMigrationStatus
  type: Class
  source:
    remote:
      path: src/ServiceManagement/StorSimple/StorSimple/Customization/Models/DataContainerMigrationStatus.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DataContainerMigrationStatus
    path: src/ServiceManagement/StorSimple/StorSimple/Customization/Models/DataContainerMigrationStatus.cs
    startLine: 22
  assemblies:
  - Microsoft.WindowsAzure.Management.StorSimple
  namespace: Microsoft.WindowsAzure.Management.StorSimple
  summary: "\nVolume container migration status for the containers imported by the specific config\n"
  example: []
  syntax:
    content: public class DataContainerMigrationStatus
    content.vb: Public Class DataContainerMigrationStatus
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.StorSimple.DataContainerMigrationStatus.LegacyConfigId
  commentId: P:Microsoft.WindowsAzure.Management.StorSimple.DataContainerMigrationStatus.LegacyConfigId
  id: LegacyConfigId
  parent: Microsoft.WindowsAzure.Management.StorSimple.DataContainerMigrationStatus
  langs:
  - csharp
  - vb
  name: LegacyConfigId
  nameWithType: DataContainerMigrationStatus.LegacyConfigId
  fullName: Microsoft.WindowsAzure.Management.StorSimple.DataContainerMigrationStatus.LegacyConfigId
  type: Property
  source:
    remote:
      path: src/ServiceManagement/StorSimple/StorSimple/Customization/Models/DataContainerMigrationStatus.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LegacyConfigId
    path: src/ServiceManagement/StorSimple/StorSimple/Customization/Models/DataContainerMigrationStatus.cs
    startLine: 27
  assemblies:
  - Microsoft.WindowsAzure.Management.StorSimple
  namespace: Microsoft.WindowsAzure.Management.StorSimple
  summary: "\nGets or sets the config id whose volume container confirm status is fetched\n"
  example: []
  syntax:
    content: public string LegacyConfigId { get; set; }
    content.vb: Public Property LegacyConfigId As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.StorSimple.DataContainerMigrationStatus.MigrationCompleted
  commentId: P:Microsoft.WindowsAzure.Management.StorSimple.DataContainerMigrationStatus.MigrationCompleted
  id: MigrationCompleted
  parent: Microsoft.WindowsAzure.Management.StorSimple.DataContainerMigrationStatus
  langs:
  - csharp
  - vb
  name: MigrationCompleted
  nameWithType: DataContainerMigrationStatus.MigrationCompleted
  fullName: Microsoft.WindowsAzure.Management.StorSimple.DataContainerMigrationStatus.MigrationCompleted
  type: Property
  source:
    remote:
      path: src/ServiceManagement/StorSimple/StorSimple/Customization/Models/DataContainerMigrationStatus.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MigrationCompleted
    path: src/ServiceManagement/StorSimple/StorSimple/Customization/Models/DataContainerMigrationStatus.cs
    startLine: 32
  assemblies:
  - Microsoft.WindowsAzure.Management.StorSimple
  namespace: Microsoft.WindowsAzure.Management.StorSimple
  summary: "\nGets or sets the list of migration state for all volume containers whose MigrationState is Completed\n"
  example: []
  syntax:
    content: public LegacyDataContainerMigrationStatus MigrationCompleted { get; set; }
    content.vb: Public Property MigrationCompleted As LegacyDataContainerMigrationStatus
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Management.StorSimple.LegacyDataContainerMigrationStatus
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.StorSimple.DataContainerMigrationStatus.MigrationInprogress
  commentId: P:Microsoft.WindowsAzure.Management.StorSimple.DataContainerMigrationStatus.MigrationInprogress
  id: MigrationInprogress
  parent: Microsoft.WindowsAzure.Management.StorSimple.DataContainerMigrationStatus
  langs:
  - csharp
  - vb
  name: MigrationInprogress
  nameWithType: DataContainerMigrationStatus.MigrationInprogress
  fullName: Microsoft.WindowsAzure.Management.StorSimple.DataContainerMigrationStatus.MigrationInprogress
  type: Property
  source:
    remote:
      path: src/ServiceManagement/StorSimple/StorSimple/Customization/Models/DataContainerMigrationStatus.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MigrationInprogress
    path: src/ServiceManagement/StorSimple/StorSimple/Customization/Models/DataContainerMigrationStatus.cs
    startLine: 37
  assemblies:
  - Microsoft.WindowsAzure.Management.StorSimple
  namespace: Microsoft.WindowsAzure.Management.StorSimple
  summary: "\nGets or sets the list of migration state for all volume containers whose MigrationState is InProgress\n"
  example: []
  syntax:
    content: public LegacyDataContainerMigrationStatus MigrationInprogress { get; set; }
    content.vb: Public Property MigrationInprogress As LegacyDataContainerMigrationStatus
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Management.StorSimple.LegacyDataContainerMigrationStatus
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.StorSimple.DataContainerMigrationStatus.MigrationFailed
  commentId: P:Microsoft.WindowsAzure.Management.StorSimple.DataContainerMigrationStatus.MigrationFailed
  id: MigrationFailed
  parent: Microsoft.WindowsAzure.Management.StorSimple.DataContainerMigrationStatus
  langs:
  - csharp
  - vb
  name: MigrationFailed
  nameWithType: DataContainerMigrationStatus.MigrationFailed
  fullName: Microsoft.WindowsAzure.Management.StorSimple.DataContainerMigrationStatus.MigrationFailed
  type: Property
  source:
    remote:
      path: src/ServiceManagement/StorSimple/StorSimple/Customization/Models/DataContainerMigrationStatus.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MigrationFailed
    path: src/ServiceManagement/StorSimple/StorSimple/Customization/Models/DataContainerMigrationStatus.cs
    startLine: 42
  assemblies:
  - Microsoft.WindowsAzure.Management.StorSimple
  namespace: Microsoft.WindowsAzure.Management.StorSimple
  summary: "\nGets or sets the list of migration state for all volume containers whose MigrationState is Failed\n"
  example: []
  syntax:
    content: public LegacyDataContainerMigrationStatus MigrationFailed { get; set; }
    content.vb: Public Property MigrationFailed As LegacyDataContainerMigrationStatus
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Management.StorSimple.LegacyDataContainerMigrationStatus
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.StorSimple.DataContainerMigrationStatus.MigrationNotStarted
  commentId: P:Microsoft.WindowsAzure.Management.StorSimple.DataContainerMigrationStatus.MigrationNotStarted
  id: MigrationNotStarted
  parent: Microsoft.WindowsAzure.Management.StorSimple.DataContainerMigrationStatus
  langs:
  - csharp
  - vb
  name: MigrationNotStarted
  nameWithType: DataContainerMigrationStatus.MigrationNotStarted
  fullName: Microsoft.WindowsAzure.Management.StorSimple.DataContainerMigrationStatus.MigrationNotStarted
  type: Property
  source:
    remote:
      path: src/ServiceManagement/StorSimple/StorSimple/Customization/Models/DataContainerMigrationStatus.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MigrationNotStarted
    path: src/ServiceManagement/StorSimple/StorSimple/Customization/Models/DataContainerMigrationStatus.cs
    startLine: 47
  assemblies:
  - Microsoft.WindowsAzure.Management.StorSimple
  namespace: Microsoft.WindowsAzure.Management.StorSimple
  summary: "\nGets or sets the list of migration state for all volume containers whose MigrationState is NotStarted\n"
  example: []
  syntax:
    content: public LegacyDataContainerMigrationStatus MigrationNotStarted { get; set; }
    content.vb: Public Property MigrationNotStarted As LegacyDataContainerMigrationStatus
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Management.StorSimple.LegacyDataContainerMigrationStatus
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.StorSimple.DataContainerMigrationStatus.#ctor(System.String,System.Collections.Generic.List{Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationDataContainerStatus})
  commentId: M:Microsoft.WindowsAzure.Management.StorSimple.DataContainerMigrationStatus.#ctor(System.String,System.Collections.Generic.List{Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationDataContainerStatus})
  id: '#ctor(System.String,System.Collections.Generic.List{Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationDataContainerStatus})'
  parent: Microsoft.WindowsAzure.Management.StorSimple.DataContainerMigrationStatus
  langs:
  - csharp
  - vb
  name: DataContainerMigrationStatus(String, List<MigrationDataContainerStatus>)
  nameWithType: DataContainerMigrationStatus.DataContainerMigrationStatus(String, List<MigrationDataContainerStatus>)
  fullName: Microsoft.WindowsAzure.Management.StorSimple.DataContainerMigrationStatus.DataContainerMigrationStatus(System.String, System.Collections.Generic.List<Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationDataContainerStatus>)
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/StorSimple/StorSimple/Customization/Models/DataContainerMigrationStatus.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/StorSimple/StorSimple/Customization/Models/DataContainerMigrationStatus.cs
    startLine: 54
  assemblies:
  - Microsoft.WindowsAzure.Management.StorSimple
  namespace: Microsoft.WindowsAzure.Management.StorSimple
  summary: "\nConstructs the overall volume container migration status object\n"
  example: []
  syntax:
    content: public DataContainerMigrationStatus(string configId, List<MigrationDataContainerStatus> overallStatusList)
    content.vb: Public Sub New(configId As String, overallStatusList As List(Of MigrationDataContainerStatus))
    parameters:
    - id: configId
      type: System.String
      description: ConfigId corresponding to current instance of migration
    - id: overallStatusList
      type: System.Collections.Generic.List{Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationDataContainerStatus}
      description: Overall list of status obtained from service
  nameWithType.vb: DataContainerMigrationStatus.DataContainerMigrationStatus(String, List(Of MigrationDataContainerStatus))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Management.StorSimple.DataContainerMigrationStatus.DataContainerMigrationStatus(System.String, System.Collections.Generic.List(Of Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationDataContainerStatus))
  name.vb: DataContainerMigrationStatus(String, List(Of MigrationDataContainerStatus))
references:
- uid: Microsoft.WindowsAzure.Management.StorSimple
  commentId: N:Microsoft.WindowsAzure.Management.StorSimple
  isExternal: false
  name: Microsoft.WindowsAzure.Management.StorSimple
  nameWithType: Microsoft.WindowsAzure.Management.StorSimple
  fullName: Microsoft.WindowsAzure.Management.StorSimple
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.Management.StorSimple.LegacyDataContainerMigrationStatus
  commentId: T:Microsoft.WindowsAzure.Management.StorSimple.LegacyDataContainerMigrationStatus
  parent: Microsoft.WindowsAzure.Management.StorSimple
  isExternal: false
  name: LegacyDataContainerMigrationStatus
  nameWithType: LegacyDataContainerMigrationStatus
  fullName: Microsoft.WindowsAzure.Management.StorSimple.LegacyDataContainerMigrationStatus
- uid: System.Collections.Generic.List{Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationDataContainerStatus}
  commentId: T:System.Collections.Generic.List{Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationDataContainerStatus}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<MigrationDataContainerStatus>
  nameWithType: List<MigrationDataContainerStatus>
  fullName: System.Collections.Generic.List<Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationDataContainerStatus>
  nameWithType.vb: List(Of MigrationDataContainerStatus)
  fullname.vb: System.Collections.Generic.List(Of Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationDataContainerStatus)
  name.vb: List(Of MigrationDataContainerStatus)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationDataContainerStatus
    name: MigrationDataContainerStatus
    nameWithType: MigrationDataContainerStatus
    fullName: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationDataContainerStatus
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationDataContainerStatus
    name: MigrationDataContainerStatus
    nameWithType: MigrationDataContainerStatus
    fullName: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationDataContainerStatus
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullname.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
