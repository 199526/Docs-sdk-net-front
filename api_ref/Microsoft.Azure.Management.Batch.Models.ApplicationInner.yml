items:
- uid: Microsoft.Azure.Management.Batch.Models.ApplicationInner
  commentId: T:Microsoft.Azure.Management.Batch.Models.ApplicationInner
  id: ApplicationInner
  parent: Microsoft.Azure.Management.Batch.Models
  children:
  - Microsoft.Azure.Management.Batch.Models.ApplicationInner.#ctor
  - Microsoft.Azure.Management.Batch.Models.ApplicationInner.#ctor(System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner},System.Nullable{System.Boolean},System.String)
  - Microsoft.Azure.Management.Batch.Models.ApplicationInner.AllowUpdates
  - Microsoft.Azure.Management.Batch.Models.ApplicationInner.DefaultVersion
  - Microsoft.Azure.Management.Batch.Models.ApplicationInner.DisplayName
  - Microsoft.Azure.Management.Batch.Models.ApplicationInner.Id
  - Microsoft.Azure.Management.Batch.Models.ApplicationInner.Packages
  langs:
  - csharp
  - vb
  name: ApplicationInner
  fullName: Microsoft.Azure.Management.Batch.Models.ApplicationInner
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Generated/Models/ApplicationInner.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ApplicationInner
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Generated/Models/ApplicationInner.cs
    startLine: 15
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Batch.Models
  summary: "\nContains information about an application in a Batch account.\n"
  example: []
  syntax:
    content: public class ApplicationInner
    content.vb: Public Class ApplicationInner
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Batch.Models.ApplicationInner.#ctor
  commentId: M:Microsoft.Azure.Management.Batch.Models.ApplicationInner.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Batch.Models.ApplicationInner
  langs:
  - csharp
  - vb
  name: ApplicationInner()
  fullName: Microsoft.Azure.Management.Batch.Models.ApplicationInner.ApplicationInner()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Generated/Models/ApplicationInner.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Generated/Models/ApplicationInner.cs
    startLine: 20
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Batch.Models
  summary: "\nInitializes a new instance of the ApplicationInner class.\n"
  example: []
  syntax:
    content: public ApplicationInner()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Batch.Models.ApplicationInner.#ctor(System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner},System.Nullable{System.Boolean},System.String)
  commentId: M:Microsoft.Azure.Management.Batch.Models.ApplicationInner.#ctor(System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner},System.Nullable{System.Boolean},System.String)
  id: '#ctor(System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner},System.Nullable{System.Boolean},System.String)'
  parent: Microsoft.Azure.Management.Batch.Models.ApplicationInner
  langs:
  - csharp
  - vb
  name: ApplicationInner(String, String, IList<ApplicationPackageInner>, Nullable<Boolean>, String)
  fullName: Microsoft.Azure.Management.Batch.Models.ApplicationInner.ApplicationInner(System.String, System.String, System.Collections.Generic.IList<Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner>, System.Nullable<System.Boolean>, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Generated/Models/ApplicationInner.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Generated/Models/ApplicationInner.cs
    startLine: 36
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Batch.Models
  summary: "\nInitializes a new instance of the ApplicationInner class.\n"
  example: []
  syntax:
    content: public ApplicationInner(string id = null, string displayName = null, IList<ApplicationPackageInner> packages = null, bool ? allowUpdates = null, string defaultVersion = null)
    content.vb: Public Sub New(id As String = Nothing, displayName As String = Nothing, packages As IList(Of ApplicationPackageInner) = Nothing, allowUpdates As Boolean? = Nothing, defaultVersion As String = Nothing)
    parameters:
    - id: id
      type: System.String
      description: >-
        A string that uniquely identifies the application

        within the account.
    - id: displayName
      type: System.String
      description: >-
        The display name for the

        application.
    - id: packages
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner}
      description: >-
        The list of packages under this

        application.
    - id: allowUpdates
      type: System.Nullable{System.Boolean}
      description: >-
        A value indicating whether packages

        within the application may be overwritten using the same version

        string.
    - id: defaultVersion
      type: System.String
      description: >-
        The package to use if a client

        requests the application but does not specify a version.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Batch.Models.ApplicationInner.ApplicationInner(System.String, System.String, System.Collections.Generic.IList(Of Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner), System.Nullable(Of System.Boolean), System.String)
  name.vb: ApplicationInner(String, String, IList(Of ApplicationPackageInner), Nullable(Of Boolean), String)
- uid: Microsoft.Azure.Management.Batch.Models.ApplicationInner.Id
  commentId: P:Microsoft.Azure.Management.Batch.Models.ApplicationInner.Id
  id: Id
  parent: Microsoft.Azure.Management.Batch.Models.ApplicationInner
  langs:
  - csharp
  - vb
  name: Id
  fullName: Microsoft.Azure.Management.Batch.Models.ApplicationInner.Id
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Generated/Models/ApplicationInner.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Id
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Generated/Models/ApplicationInner.cs
    startLine: 49
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Batch.Models
  summary: "\nGets or sets a string that uniquely identifies the application\nwithin the account.\n"
  example: []
  syntax:
    content: public string Id { get; set; }
    content.vb: Public Property Id As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Batch.Models.ApplicationInner.DisplayName
  commentId: P:Microsoft.Azure.Management.Batch.Models.ApplicationInner.DisplayName
  id: DisplayName
  parent: Microsoft.Azure.Management.Batch.Models.ApplicationInner
  langs:
  - csharp
  - vb
  name: DisplayName
  fullName: Microsoft.Azure.Management.Batch.Models.ApplicationInner.DisplayName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Generated/Models/ApplicationInner.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DisplayName
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Generated/Models/ApplicationInner.cs
    startLine: 55
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Batch.Models
  summary: "\nGets or sets the display name for the application.\n"
  example: []
  syntax:
    content: public string DisplayName { get; set; }
    content.vb: Public Property DisplayName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Batch.Models.ApplicationInner.Packages
  commentId: P:Microsoft.Azure.Management.Batch.Models.ApplicationInner.Packages
  id: Packages
  parent: Microsoft.Azure.Management.Batch.Models.ApplicationInner
  langs:
  - csharp
  - vb
  name: Packages
  fullName: Microsoft.Azure.Management.Batch.Models.ApplicationInner.Packages
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Generated/Models/ApplicationInner.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Packages
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Generated/Models/ApplicationInner.cs
    startLine: 61
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Batch.Models
  summary: "\nGets or sets the list of packages under this application.\n"
  example: []
  syntax:
    content: public IList<ApplicationPackageInner> Packages { get; set; }
    content.vb: Public Property Packages As IList(Of ApplicationPackageInner)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Batch.Models.ApplicationInner.AllowUpdates
  commentId: P:Microsoft.Azure.Management.Batch.Models.ApplicationInner.AllowUpdates
  id: AllowUpdates
  parent: Microsoft.Azure.Management.Batch.Models.ApplicationInner
  langs:
  - csharp
  - vb
  name: AllowUpdates
  fullName: Microsoft.Azure.Management.Batch.Models.ApplicationInner.AllowUpdates
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Generated/Models/ApplicationInner.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AllowUpdates
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Generated/Models/ApplicationInner.cs
    startLine: 68
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Batch.Models
  summary: "\nGets or sets a value indicating whether packages within the\napplication may be overwritten using the same version string.\n"
  example: []
  syntax:
    content: public bool ? AllowUpdates { get; set; }
    content.vb: Public Property AllowUpdates As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Batch.Models.ApplicationInner.DefaultVersion
  commentId: P:Microsoft.Azure.Management.Batch.Models.ApplicationInner.DefaultVersion
  id: DefaultVersion
  parent: Microsoft.Azure.Management.Batch.Models.ApplicationInner
  langs:
  - csharp
  - vb
  name: DefaultVersion
  fullName: Microsoft.Azure.Management.Batch.Models.ApplicationInner.DefaultVersion
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Generated/Models/ApplicationInner.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DefaultVersion
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Generated/Models/ApplicationInner.cs
    startLine: 75
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Batch.Models
  summary: "\nGets or sets the package to use if a client requests the\napplication but does not specify a version.\n"
  example: []
  syntax:
    content: public string DefaultVersion { get; set; }
    content.vb: Public Property DefaultVersion As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Batch.Models
  isExternal: false
  name: Microsoft.Azure.Management.Batch.Models
  fullName: Microsoft.Azure.Management.Batch.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ApplicationPackageInner>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner>
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner)
  name.vb: IList(Of ApplicationPackageInner)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner
    name: ApplicationPackageInner
    fullName: Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner
    name: ApplicationPackageInner
    fullName: Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner
  - name: )
    fullName: )
- uid: System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: true
  name: IList<T>
  fullName: System.Collections.Generic.IList<T>
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
