items:
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1
  commentId: T:Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1
  id: IWithExistingPublicIpAddress`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update
  children:
  - Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  - Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(System.String)
  - Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1.WithoutPublicIpAddress
  langs:
  - csharp
  - vb
  name: IWithExistingPublicIpAddress<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<ReturnT>
  type: Interface
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/HasPublicIpAddress/Update/IUpdate.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IWithExistingPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/HasPublicIpAddress/Update/IUpdate.cs
    startLine: 12
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update
  syntax:
    content: public interface IWithExistingPublicIpAddress<ReturnT>
    content.vb: Public Interface IWithExistingPublicIpAddress(Of ReturnT)
    typeParameters:
    - id: ReturnT
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress(Of ReturnT)
  name.vb: IWithExistingPublicIpAddress(Of ReturnT)
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  id: WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1
  langs:
  - csharp
  - vb
  name: WithExistingPublicIpAddress(IPublicIpAddress)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<ReturnT>.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/HasPublicIpAddress/Update/IUpdate.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithExistingPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/HasPublicIpAddress/Update/IUpdate.cs
    startLine: 19
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update
  summary: "\nAssociates an existing public IP address with the resource.\n"
  example: []
  syntax:
    content: ReturnT WithExistingPublicIpAddress(IPublicIpAddress publicIpAddress)
    content.vb: Function WithExistingPublicIpAddress(publicIpAddress As IPublicIpAddress) As ReturnT
    parameters:
    - id: publicIpAddress
      type: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
      description: publicIpAddress an existing public IP address
    return:
      type: '{ReturnT}'
      description: the next stage of the update
  fullName.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress(Of ReturnT).WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(System.String)
  id: WithExistingPublicIpAddress(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1
  langs:
  - csharp
  - vb
  name: WithExistingPublicIpAddress(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<ReturnT>.WithExistingPublicIpAddress(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/HasPublicIpAddress/Update/IUpdate.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithExistingPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/HasPublicIpAddress/Update/IUpdate.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update
  summary: "\nAssociates an existing public IP address with the resource.\n"
  example: []
  syntax:
    content: ReturnT WithExistingPublicIpAddress(string resourceId)
    content.vb: Function WithExistingPublicIpAddress(resourceId As String) As ReturnT
    parameters:
    - id: resourceId
      type: System.String
      description: resourceId the resource ID of an existing public IP address
    return:
      type: '{ReturnT}'
      description: the next stage of the definition
  fullName.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress(Of ReturnT).WithExistingPublicIpAddress(System.String)
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1.WithoutPublicIpAddress
  commentId: M:Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1.WithoutPublicIpAddress
  id: WithoutPublicIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1
  langs:
  - csharp
  - vb
  name: WithoutPublicIpAddress()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<ReturnT>.WithoutPublicIpAddress()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/HasPublicIpAddress/Update/IUpdate.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithoutPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/HasPublicIpAddress/Update/IUpdate.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update
  summary: "\nRemoves the existing reference to a public IP address.\n"
  example: []
  syntax:
    content: ReturnT WithoutPublicIpAddress()
    content.vb: Function WithoutPublicIpAddress As ReturnT
    return:
      type: '{ReturnT}'
      description: the next stage of the update.
  fullName.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress(Of ReturnT).WithoutPublicIpAddress()
references:
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update
- uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: IPublicIpAddress
  fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
- uid: '{ReturnT}'
  isExternal: false
  name: ReturnT
  fullName: ReturnT
- uid: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network
  fullName: Microsoft.Azure.Management.Fluent.Network
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System
  isExternal: false
  name: System
  fullName: System
