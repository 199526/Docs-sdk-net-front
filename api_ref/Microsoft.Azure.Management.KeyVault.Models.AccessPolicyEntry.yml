items:
- uid: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry
  commentId: T:Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry
  id: AccessPolicyEntry
  parent: Microsoft.Azure.Management.KeyVault.Models
  children:
  - Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.#ctor
  - Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.#ctor(System.Guid,System.Guid,Microsoft.Azure.Management.KeyVault.Models.Permissions,System.Nullable{System.Guid})
  - Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.ApplicationId
  - Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.ObjectId
  - Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.Permissions
  - Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.TenantId
  - Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.Validate
  langs:
  - csharp
  - vb
  name: AccessPolicyEntry
  fullName: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry
  type: Class
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/AccessPolicyEntry.cs
      branch: cd270513306c57dd9b30d6848211d164d0a1fb5b
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AccessPolicyEntry
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/AccessPolicyEntry.cs
    startLine: 17
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.KeyVault.Models
  summary: "\nAn array of 0 to 16 identities that have access to the key vault. All\nidentities in the array must use the same tenant ID as the key\nvault's tenant ID.\n"
  example: []
  syntax:
    content: public class AccessPolicyEntry
    content.vb: Public Class AccessPolicyEntry
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.#ctor
  commentId: M:Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry
  langs:
  - csharp
  - vb
  name: AccessPolicyEntry()
  fullName: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.AccessPolicyEntry()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/AccessPolicyEntry.cs
      branch: cd270513306c57dd9b30d6848211d164d0a1fb5b
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/AccessPolicyEntry.cs
    startLine: 22
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.KeyVault.Models
  summary: "\nInitializes a new instance of the AccessPolicyEntry class.\n"
  example: []
  syntax:
    content: public AccessPolicyEntry()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.#ctor(System.Guid,System.Guid,Microsoft.Azure.Management.KeyVault.Models.Permissions,System.Nullable{System.Guid})
  commentId: M:Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.#ctor(System.Guid,System.Guid,Microsoft.Azure.Management.KeyVault.Models.Permissions,System.Nullable{System.Guid})
  id: '#ctor(System.Guid,System.Guid,Microsoft.Azure.Management.KeyVault.Models.Permissions,System.Nullable{System.Guid})'
  parent: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry
  langs:
  - csharp
  - vb
  name: AccessPolicyEntry(Guid, Guid, Permissions, Nullable<Guid>)
  fullName: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.AccessPolicyEntry(System.Guid, System.Guid, Microsoft.Azure.Management.KeyVault.Models.Permissions, System.Nullable<System.Guid>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/AccessPolicyEntry.cs
      branch: cd270513306c57dd9b30d6848211d164d0a1fb5b
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/AccessPolicyEntry.cs
    startLine: 37
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.KeyVault.Models
  summary: "\nInitializes a new instance of the AccessPolicyEntry class.\n"
  example: []
  syntax:
    content: public AccessPolicyEntry(Guid tenantId, Guid objectId, Permissions permissions, Guid? applicationId = null)
    content.vb: Public Sub New(tenantId As Guid, objectId As Guid, permissions As Permissions, applicationId As Guid? = Nothing)
    parameters:
    - id: tenantId
      type: System.Guid
      description: >-
        The Azure Active Directory tenant ID that

        should be used for authenticating requests to the key

        vault.
    - id: objectId
      type: System.Guid
      description: >-
        The object ID of a user or service

        principal in the Azure Active Directory tenant for the vault. The

        object ID must be unique for the list of access policies.
    - id: permissions
      type: Microsoft.Azure.Management.KeyVault.Models.Permissions
      description: >-
        Permissions the identity has for keys

        and secrets
    - id: applicationId
      type: System.Nullable{System.Guid}
      description: >-
        Application ID of the client making

        request on behalf of a principal
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.AccessPolicyEntry(System.Guid, System.Guid, Microsoft.Azure.Management.KeyVault.Models.Permissions, System.Nullable(Of System.Guid))
  name.vb: AccessPolicyEntry(Guid, Guid, Permissions, Nullable(Of Guid))
- uid: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.TenantId
  commentId: P:Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.TenantId
  id: TenantId
  parent: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry
  langs:
  - csharp
  - vb
  name: TenantId
  fullName: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.TenantId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/AccessPolicyEntry.cs
      branch: cd270513306c57dd9b30d6848211d164d0a1fb5b
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TenantId
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/AccessPolicyEntry.cs
    startLine: 49
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.KeyVault.Models
  summary: "\nGets or sets the Azure Active Directory tenant ID that should be\nused for authenticating requests to the key vault.\n"
  example: []
  syntax:
    content: public Guid TenantId { get; set; }
    content.vb: Public Property TenantId As Guid
    parameters: []
    return:
      type: System.Guid
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.ObjectId
  commentId: P:Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.ObjectId
  id: ObjectId
  parent: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry
  langs:
  - csharp
  - vb
  name: ObjectId
  fullName: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.ObjectId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/AccessPolicyEntry.cs
      branch: cd270513306c57dd9b30d6848211d164d0a1fb5b
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ObjectId
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/AccessPolicyEntry.cs
    startLine: 57
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.KeyVault.Models
  summary: "\nGets or sets the object ID of a user or service principal in the\nAzure Active Directory tenant for the vault. The object ID must\nbe unique for the list of access policies.\n"
  example: []
  syntax:
    content: public Guid ObjectId { get; set; }
    content.vb: Public Property ObjectId As Guid
    parameters: []
    return:
      type: System.Guid
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.ApplicationId
  commentId: P:Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.ApplicationId
  id: ApplicationId
  parent: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry
  langs:
  - csharp
  - vb
  name: ApplicationId
  fullName: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.ApplicationId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/AccessPolicyEntry.cs
      branch: cd270513306c57dd9b30d6848211d164d0a1fb5b
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ApplicationId
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/AccessPolicyEntry.cs
    startLine: 64
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.KeyVault.Models
  summary: "\nGets or sets  Application ID of the client making request on\nbehalf of a principal\n"
  example: []
  syntax:
    content: public Guid? ApplicationId { get; set; }
    content.vb: Public Property ApplicationId As Guid?
    parameters: []
    return:
      type: System.Nullable{System.Guid}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.Permissions
  commentId: P:Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.Permissions
  id: Permissions
  parent: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry
  langs:
  - csharp
  - vb
  name: Permissions
  fullName: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.Permissions
  type: Property
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/AccessPolicyEntry.cs
      branch: cd270513306c57dd9b30d6848211d164d0a1fb5b
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Permissions
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/AccessPolicyEntry.cs
    startLine: 70
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.KeyVault.Models
  summary: "\nGets or sets permissions the identity has for keys and secrets\n"
  example: []
  syntax:
    content: public Permissions Permissions { get; set; }
    content.vb: Public Property Permissions As Permissions
    parameters: []
    return:
      type: Microsoft.Azure.Management.KeyVault.Models.Permissions
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.Validate
  commentId: M:Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.Validate
  id: Validate
  parent: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry
  langs:
  - csharp
  - vb
  name: Validate()
  fullName: Microsoft.Azure.Management.KeyVault.Models.AccessPolicyEntry.Validate()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/AccessPolicyEntry.cs
      branch: cd270513306c57dd9b30d6848211d164d0a1fb5b
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/AccessPolicyEntry.cs
    startLine: 79
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.KeyVault.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Management.KeyVault.Models
  isExternal: false
  name: Microsoft.Azure.Management.KeyVault.Models
  fullName: Microsoft.Azure.Management.KeyVault.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  fullName: System.Guid
- uid: Microsoft.Azure.Management.KeyVault.Models.Permissions
  parent: Microsoft.Azure.Management.KeyVault.Models
  isExternal: false
  name: Permissions
  fullName: Microsoft.Azure.Management.KeyVault.Models.Permissions
- uid: System.Nullable{System.Guid}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Guid>
  fullName: System.Nullable<System.Guid>
  fullname.vb: System.Nullable(Of System.Guid)
  name.vb: Nullable(Of Guid)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
