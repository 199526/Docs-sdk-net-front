items:
- uid: Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions
  commentId: T:Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions
  id: IntegrationAccountPartnersOperationsExtensions
  parent: Microsoft.Azure.Management.Logic
  children:
  - Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner)
  - Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.Delete(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String,System.String,System.String)
  - Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.Get(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String,System.String,System.String)
  - Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.GetAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.List(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String,System.String,ODataQuery{Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartnerFilter})
  - Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.ListAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String,System.String,ODataQuery{Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartnerFilter},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.ListNext(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String)
  - Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IntegrationAccountPartnersOperationsExtensions
  fullName: Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountPartnersOperationsExtensions.cs
      branch: 6532f686f273e0213bedf20dfa2fa2c008ae0da8
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IntegrationAccountPartnersOperationsExtensions
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountPartnersOperationsExtensions.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nExtension methods for IntegrationAccountPartnersOperations.\n"
  example: []
  syntax:
    content: public class IntegrationAccountPartnersOperationsExtensions
    content.vb: Public Class IntegrationAccountPartnersOperationsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.List(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String,System.String,ODataQuery{Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartnerFilter})
  commentId: M:Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.List(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String,System.String,ODataQuery{Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartnerFilter})
  id: List(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String,System.String,ODataQuery{Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartnerFilter})
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions
  langs:
  - csharp
  - vb
  name: List(IIntegrationAccountPartnersOperations, String, String, ODataQuery<IntegrationAccountPartnerFilter>)
  fullName: Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.List(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations, System.String, System.String, ODataQuery<Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartnerFilter>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountPartnersOperationsExtensions.cs
      branch: 6532f686f273e0213bedf20dfa2fa2c008ae0da8
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: List
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountPartnersOperationsExtensions.cs
    startLine: 40
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nGets a list of integration account partners.\n"
  example: []
  syntax:
    content: public static IPage<IntegrationAccountPartner> List(this IIntegrationAccountPartnersOperations operations, string resourceGroupName, string integrationAccountName, ODataQuery<IntegrationAccountPartnerFilter> odataQuery = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function List(operations As IIntegrationAccountPartnersOperations, resourceGroupName As String, integrationAccountName As String, odataQuery As ODataQuery(Of IntegrationAccountPartnerFilter) = Nothing) As IPage(Of IntegrationAccountPartner)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe resource group name.\n"
    - id: integrationAccountName
      type: System.String
      description: "\nThe integration account name.\n"
    - id: odataQuery
      type: ODataQuery{Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartnerFilter}
      description: "\nOData parameters to apply to the operation.\n"
    return:
      type: IPage{Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.List(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations, System.String, System.String, ODataQuery(Of Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartnerFilter))
  name.vb: List(IIntegrationAccountPartnersOperations, String, String, ODataQuery(Of IntegrationAccountPartnerFilter))
- uid: Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.ListAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String,System.String,ODataQuery{Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartnerFilter},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.ListAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String,System.String,ODataQuery{Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartnerFilter},System.Threading.CancellationToken)
  id: ListAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String,System.String,ODataQuery{Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartnerFilter},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListAsync(IIntegrationAccountPartnersOperations, String, String, ODataQuery<IntegrationAccountPartnerFilter>, CancellationToken)
  fullName: Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.ListAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations, System.String, System.String, ODataQuery<Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartnerFilter>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountPartnersOperationsExtensions.cs
      branch: 6532f686f273e0213bedf20dfa2fa2c008ae0da8
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListAsync
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountPartnersOperationsExtensions.cs
    startLine: 63
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nGets a list of integration account partners.\n"
  example: []
  syntax:
    content: public static Task<IPage<IntegrationAccountPartner>> ListAsync(this IIntegrationAccountPartnersOperations operations, string resourceGroupName, string integrationAccountName, ODataQuery<IntegrationAccountPartnerFilter> odataQuery = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListAsync(operations As IIntegrationAccountPartnersOperations, resourceGroupName As String, integrationAccountName As String, odataQuery As ODataQuery(Of IntegrationAccountPartnerFilter) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IPage(Of IntegrationAccountPartner))
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe resource group name.\n"
    - id: integrationAccountName
      type: System.String
      description: "\nThe integration account name.\n"
    - id: odataQuery
      type: ODataQuery{Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartnerFilter}
      description: "\nOData parameters to apply to the operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{IPage{Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner}}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.ListAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations, System.String, System.String, ODataQuery(Of Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartnerFilter), System.Threading.CancellationToken)
  name.vb: ListAsync(IIntegrationAccountPartnersOperations, String, String, ODataQuery(Of IntegrationAccountPartnerFilter), CancellationToken)
- uid: Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.Get(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.Get(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String,System.String,System.String)
  id: Get(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions
  langs:
  - csharp
  - vb
  name: Get(IIntegrationAccountPartnersOperations, String, String, String)
  fullName: Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.Get(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountPartnersOperationsExtensions.cs
      branch: 6532f686f273e0213bedf20dfa2fa2c008ae0da8
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Get
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountPartnersOperationsExtensions.cs
    startLine: 86
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nGets an integration account partner.\n"
  example: []
  syntax:
    content: public static IntegrationAccountPartner Get(this IIntegrationAccountPartnersOperations operations, string resourceGroupName, string integrationAccountName, string partnerName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Get(operations As IIntegrationAccountPartnersOperations, resourceGroupName As String, integrationAccountName As String, partnerName As String) As IntegrationAccountPartner
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe resource group name.\n"
    - id: integrationAccountName
      type: System.String
      description: "\nThe integration account name.\n"
    - id: partnerName
      type: System.String
      description: "\nThe integration account partner name.\n"
    return:
      type: Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.GetAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.GetAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: GetAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetAsync(IIntegrationAccountPartnersOperations, String, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.GetAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations, System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountPartnersOperationsExtensions.cs
      branch: 6532f686f273e0213bedf20dfa2fa2c008ae0da8
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetAsync
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountPartnersOperationsExtensions.cs
    startLine: 109
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nGets an integration account partner.\n"
  example: []
  syntax:
    content: public static Task<IntegrationAccountPartner> GetAsync(this IIntegrationAccountPartnersOperations operations, string resourceGroupName, string integrationAccountName, string partnerName, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAsync(operations As IIntegrationAccountPartnersOperations, resourceGroupName As String, integrationAccountName As String, partnerName As String, cancellationToken As CancellationToken = Nothing) As Task(Of IntegrationAccountPartner)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe resource group name.\n"
    - id: integrationAccountName
      type: System.String
      description: "\nThe integration account name.\n"
    - id: partnerName
      type: System.String
      description: "\nThe integration account partner name.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner)
  commentId: M:Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner)
  id: CreateOrUpdate(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateOrUpdate(IIntegrationAccountPartnersOperations, String, String, String, IntegrationAccountPartner)
  fullName: Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations, System.String, System.String, System.String, Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountPartnersOperationsExtensions.cs
      branch: 6532f686f273e0213bedf20dfa2fa2c008ae0da8
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateOrUpdate
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountPartnersOperationsExtensions.cs
    startLine: 135
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nCreates or updates an integration account partner.\n"
  example: []
  syntax:
    content: public static IntegrationAccountPartner CreateOrUpdate(this IIntegrationAccountPartnersOperations operations, string resourceGroupName, string integrationAccountName, string partnerName, IntegrationAccountPartner partner)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateOrUpdate(operations As IIntegrationAccountPartnersOperations, resourceGroupName As String, integrationAccountName As String, partnerName As String, partner As IntegrationAccountPartner) As IntegrationAccountPartner
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe resource group name.\n"
    - id: integrationAccountName
      type: System.String
      description: "\nThe integration account name.\n"
    - id: partnerName
      type: System.String
      description: "\nThe integration account partner name.\n"
    - id: partner
      type: Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner
      description: "\nThe integration account partner.\n"
    return:
      type: Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner,System.Threading.CancellationToken)
  id: CreateOrUpdateAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateOrUpdateAsync(IIntegrationAccountPartnersOperations, String, String, String, IntegrationAccountPartner, CancellationToken)
  fullName: Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations, System.String, System.String, System.String, Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountPartnersOperationsExtensions.cs
      branch: 6532f686f273e0213bedf20dfa2fa2c008ae0da8
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateOrUpdateAsync
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountPartnersOperationsExtensions.cs
    startLine: 161
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nCreates or updates an integration account partner.\n"
  example: []
  syntax:
    content: public static Task<IntegrationAccountPartner> CreateOrUpdateAsync(this IIntegrationAccountPartnersOperations operations, string resourceGroupName, string integrationAccountName, string partnerName, IntegrationAccountPartner partner, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateOrUpdateAsync(operations As IIntegrationAccountPartnersOperations, resourceGroupName As String, integrationAccountName As String, partnerName As String, partner As IntegrationAccountPartner, cancellationToken As CancellationToken = Nothing) As Task(Of IntegrationAccountPartner)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe resource group name.\n"
    - id: integrationAccountName
      type: System.String
      description: "\nThe integration account name.\n"
    - id: partnerName
      type: System.String
      description: "\nThe integration account partner name.\n"
    - id: partner
      type: Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner
      description: "\nThe integration account partner.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.Delete(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.Delete(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String,System.String,System.String)
  id: Delete(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions
  langs:
  - csharp
  - vb
  name: Delete(IIntegrationAccountPartnersOperations, String, String, String)
  fullName: Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.Delete(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountPartnersOperationsExtensions.cs
      branch: 6532f686f273e0213bedf20dfa2fa2c008ae0da8
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Delete
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountPartnersOperationsExtensions.cs
    startLine: 184
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nDeletes an integration account partner.\n"
  example: []
  syntax:
    content: public static void Delete(this IIntegrationAccountPartnersOperations operations, string resourceGroupName, string integrationAccountName, string partnerName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Delete(operations As IIntegrationAccountPartnersOperations, resourceGroupName As String, integrationAccountName As String, partnerName As String)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe resource group name.\n"
    - id: integrationAccountName
      type: System.String
      description: "\nThe integration account name.\n"
    - id: partnerName
      type: System.String
      description: "\nThe integration account partner name.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: DeleteAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions
  langs:
  - csharp
  - vb
  name: DeleteAsync(IIntegrationAccountPartnersOperations, String, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations, System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountPartnersOperationsExtensions.cs
      branch: 6532f686f273e0213bedf20dfa2fa2c008ae0da8
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeleteAsync
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountPartnersOperationsExtensions.cs
    startLine: 207
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nDeletes an integration account partner.\n"
  example: []
  syntax:
    content: public static Task DeleteAsync(this IIntegrationAccountPartnersOperations operations, string resourceGroupName, string integrationAccountName, string partnerName, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteAsync(operations As IIntegrationAccountPartnersOperations, resourceGroupName As String, integrationAccountName As String, partnerName As String, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe resource group name.\n"
    - id: integrationAccountName
      type: System.String
      description: "\nThe integration account name.\n"
    - id: partnerName
      type: System.String
      description: "\nThe integration account partner name.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.ListNext(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String)
  commentId: M:Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.ListNext(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String)
  id: ListNext(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListNext(IIntegrationAccountPartnersOperations, String)
  fullName: Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.ListNext(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountPartnersOperationsExtensions.cs
      branch: 6532f686f273e0213bedf20dfa2fa2c008ae0da8
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListNext
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountPartnersOperationsExtensions.cs
    startLine: 221
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nGets a list of integration account partners.\n"
  example: []
  syntax:
    content: public static IPage<IntegrationAccountPartner> ListNext(this IIntegrationAccountPartnersOperations operations, string nextPageLink)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListNext(operations As IIntegrationAccountPartnersOperations, nextPageLink As String) As IPage(Of IntegrationAccountPartner)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    return:
      type: IPage{Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String,System.Threading.CancellationToken)
  id: ListNextAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListNextAsync(IIntegrationAccountPartnersOperations, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Logic.IntegrationAccountPartnersOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountPartnersOperationsExtensions.cs
      branch: 6532f686f273e0213bedf20dfa2fa2c008ae0da8
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListNextAsync
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountPartnersOperationsExtensions.cs
    startLine: 238
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nGets a list of integration account partners.\n"
  example: []
  syntax:
    content: public static Task<IPage<IntegrationAccountPartner>> ListNextAsync(this IIntegrationAccountPartnersOperations operations, string nextPageLink, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListNextAsync(operations As IIntegrationAccountPartnersOperations, nextPageLink As String, cancellationToken As CancellationToken = Nothing) As Task(Of IPage(Of IntegrationAccountPartner))
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{IPage{Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner}}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.Management.Logic
  isExternal: false
  name: Microsoft.Azure.Management.Logic
  fullName: Microsoft.Azure.Management.Logic
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations
  parent: Microsoft.Azure.Management.Logic
  isExternal: false
  name: IIntegrationAccountPartnersOperations
  fullName: Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: ODataQuery{Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartnerFilter}
  definition: ODataQuery`1
  name: ODataQuery<IntegrationAccountPartnerFilter>
  fullName: ODataQuery<Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartnerFilter>
  fullname.vb: ODataQuery(Of Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartnerFilter)
  name.vb: ODataQuery(Of IntegrationAccountPartnerFilter)
  spec.csharp:
  - uid: ODataQuery`1
    name: ODataQuery
    fullName: ODataQuery
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartnerFilter
    name: IntegrationAccountPartnerFilter
    fullName: Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartnerFilter
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: ODataQuery`1
    name: ODataQuery
    fullName: ODataQuery
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartnerFilter
    name: IntegrationAccountPartnerFilter
    fullName: Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartnerFilter
  - name: )
    fullName: )
- uid: IPage{Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner}
  definition: IPage`1
  name: IPage<IntegrationAccountPartner>
  fullName: IPage<Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner>
  fullname.vb: IPage(Of Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner)
  name.vb: IPage(Of IntegrationAccountPartner)
  spec.csharp:
  - uid: IPage`1
    name: IPage
    fullName: IPage
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner
    name: IntegrationAccountPartner
    fullName: Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IPage`1
    name: IPage
    fullName: IPage
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner
    name: IntegrationAccountPartner
    fullName: Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner
  - name: )
    fullName: )
- uid: ODataQuery`1
  isExternal: true
  name: ODataQuery<>
  fullName: ODataQuery<>
  fullname.vb: ODataQuery(Of )
  name.vb: ODataQuery(Of )
  spec.csharp:
  - uid: ODataQuery`1
    name: ODataQuery
    fullName: ODataQuery
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: ODataQuery`1
    name: ODataQuery
    fullName: ODataQuery
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: IPage`1
  isExternal: true
  name: IPage<>
  fullName: IPage<>
  fullname.vb: IPage(Of )
  name.vb: IPage(Of )
  spec.csharp:
  - uid: IPage`1
    name: IPage
    fullName: IPage
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IPage`1
    name: IPage
    fullName: IPage
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{IPage{Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IPage<IntegrationAccountPartner>>
  fullName: System.Threading.Tasks.Task<IPage<Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner>>
  fullname.vb: System.Threading.Tasks.Task(Of IPage(Of Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner))
  name.vb: Task(Of IPage(Of IntegrationAccountPartner))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: IPage`1
    name: IPage
    fullName: IPage
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner
    name: IntegrationAccountPartner
    fullName: Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: IPage`1
    name: IPage
    fullName: IPage
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner
    name: IntegrationAccountPartner
    fullName: Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner
  parent: Microsoft.Azure.Management.Logic.Models
  isExternal: false
  name: IntegrationAccountPartner
  fullName: Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner
- uid: Microsoft.Azure.Management.Logic.Models
  isExternal: false
  name: Microsoft.Azure.Management.Logic.Models
  fullName: Microsoft.Azure.Management.Logic.Models
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IntegrationAccountPartner>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner)
  name.vb: Task(Of IntegrationAccountPartner)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner
    name: IntegrationAccountPartner
    fullName: Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner
    name: IntegrationAccountPartner
    fullName: Microsoft.Azure.Management.Logic.Models.IntegrationAccountPartner
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  fullName: System.Threading.Tasks.Task
