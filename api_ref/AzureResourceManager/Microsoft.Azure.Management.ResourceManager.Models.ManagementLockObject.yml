items:
- uid: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject
  commentId: T:Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject
  id: ManagementLockObject
  parent: Microsoft.Azure.Management.ResourceManager.Models
  children:
  - Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.#ctor
  - Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.#ctor(System.String,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Id
  - Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Level
  - Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Name
  - Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Notes
  - Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Type
  langs:
  - csharp
  - vb
  name: ManagementLockObject
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ManagementLockObject.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ManagementLockObject
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ManagementLockObject.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  packages:
  - Microsoft.Azure.Management.ResourceManager(1.3.1-preview)
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nManagement lock information.\n"
  example: []
  syntax:
    content: 'public class ManagementLockObject : IResource'
    content.vb: >-
      Public Class ManagementLockObject
          Implements IResource
  inheritance:
  - System.Object
  implements:
  - Microsoft.Rest.Azure.IResource
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.#ctor
  commentId: M:Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject
  langs:
  - csharp
  - vb
  name: ManagementLockObject()
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.ManagementLockObject()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ManagementLockObject.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ManagementLockObject.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  packages:
  - Microsoft.Azure.Management.ResourceManager(1.3.1-preview)
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nInitializes a new instance of the ManagementLockObject class.\n"
  example: []
  syntax:
    content: public ManagementLockObject()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.#ctor(System.String,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.#ctor(System.String,System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String)'
  parent: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject
  langs:
  - csharp
  - vb
  name: ManagementLockObject(String, String, String, String, String)
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.ManagementLockObject(System.String, System.String, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ManagementLockObject.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ManagementLockObject.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  packages:
  - Microsoft.Azure.Management.ResourceManager(1.3.1-preview)
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nInitializes a new instance of the ManagementLockObject class.\n"
  example: []
  syntax:
    content: public ManagementLockObject(string id = null, string type = null, string name = null, string level = null, string notes = null)
    content.vb: Public Sub New(id As String = Nothing, type As String = Nothing, name As String = Nothing, level As String = Nothing, notes As String = Nothing)
    parameters:
    - id: id
      type: System.String
    - id: type
      type: System.String
    - id: name
      type: System.String
    - id: level
      type: System.String
    - id: notes
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Id
  commentId: P:Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Id
  id: Id
  parent: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject
  langs:
  - csharp
  - vb
  name: Id
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Id
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ManagementLockObject.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Id
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ManagementLockObject.cs
    startLine: 43
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  packages:
  - Microsoft.Azure.Management.ResourceManager(1.3.1-preview)
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nGets or sets the Id of the lock.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "id")]

      public string Id { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="id")>

      Public Property Id As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Type
  commentId: P:Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Type
  id: Type
  parent: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject
  langs:
  - csharp
  - vb
  name: Type
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Type
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ManagementLockObject.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Type
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ManagementLockObject.cs
    startLine: 49
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  packages:
  - Microsoft.Azure.Management.ResourceManager(1.3.1-preview)
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nGets or sets the type of the lock.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "type")]

      public string Type { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="type")>

      Public Property Type As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: type
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Name
  commentId: P:Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Name
  id: Name
  parent: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject
  langs:
  - csharp
  - vb
  name: Name
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Name
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ManagementLockObject.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Name
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ManagementLockObject.cs
    startLine: 55
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  packages:
  - Microsoft.Azure.Management.ResourceManager(1.3.1-preview)
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nGets or sets the name of the lock.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "name")]

      public string Name { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="name")>

      Public Property Name As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Level
  commentId: P:Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Level
  id: Level
  parent: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject
  langs:
  - csharp
  - vb
  name: Level
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Level
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ManagementLockObject.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Level
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ManagementLockObject.cs
    startLine: 63
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  packages:
  - Microsoft.Azure.Management.ResourceManager(1.3.1-preview)
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nGets or sets the lock level of the management lock. Possible\nvalues for this property include: 'NotSpecified', 'CanNotDelete',\n'ReadOnly'.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.level")]

      public string Level { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.level")>

      Public Property Level As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.level
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Notes
  commentId: P:Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Notes
  id: Notes
  parent: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject
  langs:
  - csharp
  - vb
  name: Notes
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Notes
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ManagementLockObject.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Notes
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ManagementLockObject.cs
    startLine: 69
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  packages:
  - Microsoft.Azure.Management.ResourceManager(1.3.1-preview)
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nGets or sets the notes of the management lock.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.notes")]

      public string Notes { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.notes")>

      Public Property Notes As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.notes
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.ResourceManager.Models
  isExternal: false
  name: Microsoft.Azure.Management.ResourceManager.Models
  fullName: Microsoft.Azure.Management.ResourceManager.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Rest.Azure.IResource
  parent: Microsoft.Rest.Azure
  isExternal: true
  name: IResource
  fullName: Microsoft.Rest.Azure.IResource
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Rest.Azure
  isExternal: false
  name: Microsoft.Rest.Azure
  fullName: Microsoft.Rest.Azure
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
