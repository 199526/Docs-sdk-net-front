### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models.AzureCrossConnection
  commentId: T:Microsoft.WindowsAzure.Management.ExpressRoute.Models.AzureCrossConnection
  id: AzureCrossConnection
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.Models
  children:
  - Microsoft.WindowsAzure.Management.ExpressRoute.Models.AzureCrossConnection.#ctor
  - Microsoft.WindowsAzure.Management.ExpressRoute.Models.AzureCrossConnection.Bandwidth
  - Microsoft.WindowsAzure.Management.ExpressRoute.Models.AzureCrossConnection.PrimaryAzurePort
  - Microsoft.WindowsAzure.Management.ExpressRoute.Models.AzureCrossConnection.ProvisioningState
  - Microsoft.WindowsAzure.Management.ExpressRoute.Models.AzureCrossConnection.SecondaryAzurePort
  - Microsoft.WindowsAzure.Management.ExpressRoute.Models.AzureCrossConnection.STag
  - Microsoft.WindowsAzure.Management.ExpressRoute.Models.AzureCrossConnection.Status
  langs:
  - csharp
  - vb
  name: AzureCrossConnection
  nameWithType: AzureCrossConnection
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models.AzureCrossConnection
  type: Class
  source:
    remote:
      path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/Models/AzureCrossConnection.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AzureCrossConnection
    path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/Models/AzureCrossConnection.cs
    startLine: 29
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute.Models
  summary: "\nDescribed a Cross Connection.\n"
  example: []
  syntax:
    content: public class AzureCrossConnection
    content.vb: Public Class AzureCrossConnection
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models.AzureCrossConnection.Bandwidth
  commentId: P:Microsoft.WindowsAzure.Management.ExpressRoute.Models.AzureCrossConnection.Bandwidth
  id: Bandwidth
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.Models.AzureCrossConnection
  langs:
  - csharp
  - vb
  name: Bandwidth
  nameWithType: AzureCrossConnection.Bandwidth
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models.AzureCrossConnection.Bandwidth
  type: Property
  source:
    remote:
      path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/Models/AzureCrossConnection.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Bandwidth
    path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/Models/AzureCrossConnection.cs
    startLine: 36
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute.Models
  summary: "\nOptional. Specifies the bandwidth that is assigned to the circuit.\n"
  example: []
  syntax:
    content: public int Bandwidth { get; set; }
    content.vb: Public Property Bandwidth As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models.AzureCrossConnection.PrimaryAzurePort
  commentId: P:Microsoft.WindowsAzure.Management.ExpressRoute.Models.AzureCrossConnection.PrimaryAzurePort
  id: PrimaryAzurePort
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.Models.AzureCrossConnection
  langs:
  - csharp
  - vb
  name: PrimaryAzurePort
  nameWithType: AzureCrossConnection.PrimaryAzurePort
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models.AzureCrossConnection.PrimaryAzurePort
  type: Property
  source:
    remote:
      path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/Models/AzureCrossConnection.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PrimaryAzurePort
    path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/Models/AzureCrossConnection.cs
    startLine: 48
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute.Models
  summary: "\nOptional. Specifies the name of the primary port. Only available\nwhen the provisioning state is Provisioning or Provisioned.\n"
  example: []
  syntax:
    content: public string PrimaryAzurePort { get; set; }
    content.vb: Public Property PrimaryAzurePort As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models.AzureCrossConnection.ProvisioningState
  commentId: P:Microsoft.WindowsAzure.Management.ExpressRoute.Models.AzureCrossConnection.ProvisioningState
  id: ProvisioningState
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.Models.AzureCrossConnection
  langs:
  - csharp
  - vb
  name: ProvisioningState
  nameWithType: AzureCrossConnection.ProvisioningState
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models.AzureCrossConnection.ProvisioningState
  type: Property
  source:
    remote:
      path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/Models/AzureCrossConnection.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ProvisioningState
    path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/Models/AzureCrossConnection.cs
    startLine: 60
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute.Models
  summary: "\nOptional. Provisioning state of the cross connection. Can be\nProvisioned, NotProvisioned, Provisioning or Deprovisioning.\n"
  example: []
  syntax:
    content: public string ProvisioningState { get; set; }
    content.vb: Public Property ProvisioningState As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models.AzureCrossConnection.SecondaryAzurePort
  commentId: P:Microsoft.WindowsAzure.Management.ExpressRoute.Models.AzureCrossConnection.SecondaryAzurePort
  id: SecondaryAzurePort
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.Models.AzureCrossConnection
  langs:
  - csharp
  - vb
  name: SecondaryAzurePort
  nameWithType: AzureCrossConnection.SecondaryAzurePort
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models.AzureCrossConnection.SecondaryAzurePort
  type: Property
  source:
    remote:
      path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/Models/AzureCrossConnection.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SecondaryAzurePort
    path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/Models/AzureCrossConnection.cs
    startLine: 72
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute.Models
  summary: "\nOptional. Specifies the name of the secondary port. Only available\nwhen the provisioning state is Provisioning or Provisioned.\n"
  example: []
  syntax:
    content: public string SecondaryAzurePort { get; set; }
    content.vb: Public Property SecondaryAzurePort As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models.AzureCrossConnection.STag
  commentId: P:Microsoft.WindowsAzure.Management.ExpressRoute.Models.AzureCrossConnection.STag
  id: STag
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.Models.AzureCrossConnection
  langs:
  - csharp
  - vb
  name: STag
  nameWithType: AzureCrossConnection.STag
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models.AzureCrossConnection.STag
  type: Property
  source:
    remote:
      path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/Models/AzureCrossConnection.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: STag
    path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/Models/AzureCrossConnection.cs
    startLine: 83
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute.Models
  summary: "\nOptional. Specifies the identifier of circuit traffic.\n"
  example: []
  syntax:
    content: public int STag { get; set; }
    content.vb: Public Property STag As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models.AzureCrossConnection.Status
  commentId: P:Microsoft.WindowsAzure.Management.ExpressRoute.Models.AzureCrossConnection.Status
  id: Status
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.Models.AzureCrossConnection
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: AzureCrossConnection.Status
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models.AzureCrossConnection.Status
  type: Property
  source:
    remote:
      path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/Models/AzureCrossConnection.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Status
    path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/Models/AzureCrossConnection.cs
    startLine: 95
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute.Models
  summary: "\nOptional. The current status of the circuit. Possible values are:\nDisabled, Disabling, Enabling, Enabled.\n"
  example: []
  syntax:
    content: public string Status { get; set; }
    content.vb: Public Property Status As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models.AzureCrossConnection.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.ExpressRoute.Models.AzureCrossConnection.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.Models.AzureCrossConnection
  langs:
  - csharp
  - vb
  name: AzureCrossConnection()
  nameWithType: AzureCrossConnection.AzureCrossConnection()
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models.AzureCrossConnection.AzureCrossConnection()
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/Models/AzureCrossConnection.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/Models/AzureCrossConnection.cs
    startLine: 104
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute.Models
  summary: "\nInitializes a new instance of the AzureCrossConnection class.\n"
  example: []
  syntax:
    content: public AzureCrossConnection()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models
  commentId: N:Microsoft.WindowsAzure.Management.ExpressRoute.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.ExpressRoute.Models
  nameWithType: Microsoft.WindowsAzure.Management.ExpressRoute.Models
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
