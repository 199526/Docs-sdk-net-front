items:
- uid: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
  commentId: T:Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
  id: IRedisOperations
  parent: Microsoft.Azure.Management.Fluent.Redis
  children:
  - Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.BeginCreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisCreateParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.BeginDeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.BeginExportDataWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.ExportRDBParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.BeginImportDataWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.ImportRDBParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.BeginUpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisUpdateParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.CreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisCreateParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.ExportDataWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.ExportRDBParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.ForceRebootWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisRebootParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.ImportDataWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.ImportRDBParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.ListByResourceGroupNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.ListByResourceGroupWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.ListKeysWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.RegenerateKeyWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisKeyType,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.UpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisUpdateParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IRedisOperations
  fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
  type: Interface
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/IRedisOperations.cs
      branch: 33fd3ea99c60bab0a8ccbb1cd87328cb5e82e49f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IRedisOperations
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/IRedisOperations.cs
    startLine: 16
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nRedisOperations operations.\n"
  example: []
  syntax:
    content: public interface IRedisOperations
    content.vb: Public Interface IRedisOperations
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.CreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisCreateParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.CreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisCreateParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: CreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisCreateParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
  langs:
  - csharp
  - vb
  name: CreateWithHttpMessagesAsync(String, String, RedisCreateParametersInner, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.CreateWithHttpMessagesAsync(System.String, System.String, Microsoft.Azure.Management.Fluent.Redis.Models.RedisCreateParametersInner, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/IRedisOperations.cs
      branch: 33fd3ea99c60bab0a8ccbb1cd87328cb5e82e49f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateWithHttpMessagesAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/IRedisOperations.cs
    startLine: 46
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nCreate or replace (overwrite/recreate, with potential downtime) an\nexisting redis cache\n"
  example: []
  syntax:
    content: Task<Rest.Azure.AzureOperationResponse<RedisResourceInner>> CreateWithHttpMessagesAsync(string resourceGroupName, string name, RedisCreateParametersInner parameters, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function CreateWithHttpMessagesAsync(resourceGroupName As String, name As String, parameters As RedisCreateParametersInner, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Rest.Azure.AzureOperationResponse(Of RedisResourceInner))
    parameters:
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Fluent.Redis.Models.RedisCreateParametersInner
      description: "\nParameters supplied to the Create redis operation.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.AzureOperationResponse{Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner}}
  fullName.vb: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.CreateWithHttpMessagesAsync(System.String, System.String, Microsoft.Azure.Management.Fluent.Redis.Models.RedisCreateParametersInner, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: CreateWithHttpMessagesAsync(String, String, RedisCreateParametersInner, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.BeginCreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisCreateParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.BeginCreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisCreateParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: BeginCreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisCreateParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
  langs:
  - csharp
  - vb
  name: BeginCreateWithHttpMessagesAsync(String, String, RedisCreateParametersInner, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.BeginCreateWithHttpMessagesAsync(System.String, System.String, Microsoft.Azure.Management.Fluent.Redis.Models.RedisCreateParametersInner, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/IRedisOperations.cs
      branch: 33fd3ea99c60bab0a8ccbb1cd87328cb5e82e49f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BeginCreateWithHttpMessagesAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/IRedisOperations.cs
    startLine: 75
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nCreate or replace (overwrite/recreate, with potential downtime) an\nexisting redis cache\n"
  example: []
  syntax:
    content: Task<Rest.Azure.AzureOperationResponse<RedisResourceInner>> BeginCreateWithHttpMessagesAsync(string resourceGroupName, string name, RedisCreateParametersInner parameters, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function BeginCreateWithHttpMessagesAsync(resourceGroupName As String, name As String, parameters As RedisCreateParametersInner, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Rest.Azure.AzureOperationResponse(Of RedisResourceInner))
    parameters:
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Fluent.Redis.Models.RedisCreateParametersInner
      description: "\nParameters supplied to the Create redis operation.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.AzureOperationResponse{Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner}}
  fullName.vb: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.BeginCreateWithHttpMessagesAsync(System.String, System.String, Microsoft.Azure.Management.Fluent.Redis.Models.RedisCreateParametersInner, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: BeginCreateWithHttpMessagesAsync(String, String, RedisCreateParametersInner, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.UpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisUpdateParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.UpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisUpdateParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: UpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisUpdateParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
  langs:
  - csharp
  - vb
  name: UpdateWithHttpMessagesAsync(String, String, RedisUpdateParametersInner, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.UpdateWithHttpMessagesAsync(System.String, System.String, Microsoft.Azure.Management.Fluent.Redis.Models.RedisUpdateParametersInner, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/IRedisOperations.cs
      branch: 33fd3ea99c60bab0a8ccbb1cd87328cb5e82e49f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UpdateWithHttpMessagesAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/IRedisOperations.cs
    startLine: 103
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nUpdate an existing Redis cache\n"
  example: []
  syntax:
    content: Task<Rest.Azure.AzureOperationResponse<RedisResourceInner>> UpdateWithHttpMessagesAsync(string resourceGroupName, string name, RedisUpdateParametersInner parameters, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function UpdateWithHttpMessagesAsync(resourceGroupName As String, name As String, parameters As RedisUpdateParametersInner, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Rest.Azure.AzureOperationResponse(Of RedisResourceInner))
    parameters:
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Fluent.Redis.Models.RedisUpdateParametersInner
      description: "\nParameters supplied to the Update redis operation.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.AzureOperationResponse{Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner}}
  fullName.vb: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.UpdateWithHttpMessagesAsync(System.String, System.String, Microsoft.Azure.Management.Fluent.Redis.Models.RedisUpdateParametersInner, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: UpdateWithHttpMessagesAsync(String, String, RedisUpdateParametersInner, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.BeginUpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisUpdateParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.BeginUpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisUpdateParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: BeginUpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisUpdateParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
  langs:
  - csharp
  - vb
  name: BeginUpdateWithHttpMessagesAsync(String, String, RedisUpdateParametersInner, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.BeginUpdateWithHttpMessagesAsync(System.String, System.String, Microsoft.Azure.Management.Fluent.Redis.Models.RedisUpdateParametersInner, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/IRedisOperations.cs
      branch: 33fd3ea99c60bab0a8ccbb1cd87328cb5e82e49f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BeginUpdateWithHttpMessagesAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/IRedisOperations.cs
    startLine: 131
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nUpdate an existing Redis cache\n"
  example: []
  syntax:
    content: Task<Rest.Azure.AzureOperationResponse<RedisResourceInner>> BeginUpdateWithHttpMessagesAsync(string resourceGroupName, string name, RedisUpdateParametersInner parameters, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function BeginUpdateWithHttpMessagesAsync(resourceGroupName As String, name As String, parameters As RedisUpdateParametersInner, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Rest.Azure.AzureOperationResponse(Of RedisResourceInner))
    parameters:
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Fluent.Redis.Models.RedisUpdateParametersInner
      description: "\nParameters supplied to the Update redis operation.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.AzureOperationResponse{Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner}}
  fullName.vb: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.BeginUpdateWithHttpMessagesAsync(System.String, System.String, Microsoft.Azure.Management.Fluent.Redis.Models.RedisUpdateParametersInner, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: BeginUpdateWithHttpMessagesAsync(String, String, RedisUpdateParametersInner, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
  langs:
  - csharp
  - vb
  name: DeleteWithHttpMessagesAsync(String, String, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.DeleteWithHttpMessagesAsync(System.String, System.String, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/IRedisOperations.cs
      branch: 33fd3ea99c60bab0a8ccbb1cd87328cb5e82e49f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeleteWithHttpMessagesAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/IRedisOperations.cs
    startLine: 153
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nDeletes a redis cache. This operation takes a while to complete.\n"
  example: []
  syntax:
    content: Task<Rest.Azure.AzureOperationResponse> DeleteWithHttpMessagesAsync(string resourceGroupName, string name, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function DeleteWithHttpMessagesAsync(resourceGroupName As String, name As String, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Rest.Azure.AzureOperationResponse)
    parameters:
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.AzureOperationResponse}
  fullName.vb: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.DeleteWithHttpMessagesAsync(System.String, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: DeleteWithHttpMessagesAsync(String, String, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.BeginDeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.BeginDeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: BeginDeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
  langs:
  - csharp
  - vb
  name: BeginDeleteWithHttpMessagesAsync(String, String, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.BeginDeleteWithHttpMessagesAsync(System.String, System.String, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/IRedisOperations.cs
      branch: 33fd3ea99c60bab0a8ccbb1cd87328cb5e82e49f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BeginDeleteWithHttpMessagesAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/IRedisOperations.cs
    startLine: 175
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nDeletes a redis cache. This operation takes a while to complete.\n"
  example: []
  syntax:
    content: Task<Rest.Azure.AzureOperationResponse> BeginDeleteWithHttpMessagesAsync(string resourceGroupName, string name, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function BeginDeleteWithHttpMessagesAsync(resourceGroupName As String, name As String, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Rest.Azure.AzureOperationResponse)
    parameters:
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.AzureOperationResponse}
  fullName.vb: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.BeginDeleteWithHttpMessagesAsync(System.String, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: BeginDeleteWithHttpMessagesAsync(String, String, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
  langs:
  - csharp
  - vb
  name: GetWithHttpMessagesAsync(String, String, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.GetWithHttpMessagesAsync(System.String, System.String, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/IRedisOperations.cs
      branch: 33fd3ea99c60bab0a8ccbb1cd87328cb5e82e49f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetWithHttpMessagesAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/IRedisOperations.cs
    startLine: 200
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nGets a redis cache (resource description).\n"
  example: []
  syntax:
    content: Task<Rest.Azure.AzureOperationResponse<RedisResourceInner>> GetWithHttpMessagesAsync(string resourceGroupName, string name, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function GetWithHttpMessagesAsync(resourceGroupName As String, name As String, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Rest.Azure.AzureOperationResponse(Of RedisResourceInner))
    parameters:
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.AzureOperationResponse{Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner}}
  fullName.vb: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.GetWithHttpMessagesAsync(System.String, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: GetWithHttpMessagesAsync(String, String, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.ListByResourceGroupWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.ListByResourceGroupWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: ListByResourceGroupWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
  langs:
  - csharp
  - vb
  name: ListByResourceGroupWithHttpMessagesAsync(String, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.ListByResourceGroupWithHttpMessagesAsync(System.String, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/IRedisOperations.cs
      branch: 33fd3ea99c60bab0a8ccbb1cd87328cb5e82e49f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListByResourceGroupWithHttpMessagesAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/IRedisOperations.cs
    startLine: 222
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nGets all redis caches in a resource group.\n"
  example: []
  syntax:
    content: Task<Rest.Azure.AzureOperationResponse<Rest.Azure.IPage<RedisResourceInner>>> ListByResourceGroupWithHttpMessagesAsync(string resourceGroupName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function ListByResourceGroupWithHttpMessagesAsync(resourceGroupName As String, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Rest.Azure.AzureOperationResponse(Of Rest.Azure.IPage(Of RedisResourceInner)))
    parameters:
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.AzureOperationResponse{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner}}}
  fullName.vb: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.ListByResourceGroupWithHttpMessagesAsync(System.String, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: ListByResourceGroupWithHttpMessagesAsync(String, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
  langs:
  - csharp
  - vb
  name: ListWithHttpMessagesAsync(Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/IRedisOperations.cs
      branch: 33fd3ea99c60bab0a8ccbb1cd87328cb5e82e49f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListWithHttpMessagesAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/IRedisOperations.cs
    startLine: 241
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nGets all redis caches in the specified subscription.\n"
  example: []
  syntax:
    content: Task<Rest.Azure.AzureOperationResponse<Rest.Azure.IPage<RedisResourceInner>>> ListWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function ListWithHttpMessagesAsync(customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Rest.Azure.AzureOperationResponse(Of Rest.Azure.IPage(Of RedisResourceInner)))
    parameters:
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.AzureOperationResponse{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner}}}
  fullName.vb: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: ListWithHttpMessagesAsync(Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.ListKeysWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.ListKeysWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: ListKeysWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
  langs:
  - csharp
  - vb
  name: ListKeysWithHttpMessagesAsync(String, String, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.ListKeysWithHttpMessagesAsync(System.String, System.String, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/IRedisOperations.cs
      branch: 33fd3ea99c60bab0a8ccbb1cd87328cb5e82e49f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListKeysWithHttpMessagesAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/IRedisOperations.cs
    startLine: 267
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nRetrieve a redis cache's access keys. This operation requires\nwrite permission to the cache resource.\n"
  example: []
  syntax:
    content: Task<Rest.Azure.AzureOperationResponse<RedisAccessKeysInner>> ListKeysWithHttpMessagesAsync(string resourceGroupName, string name, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function ListKeysWithHttpMessagesAsync(resourceGroupName As String, name As String, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Rest.Azure.AzureOperationResponse(Of RedisAccessKeysInner))
    parameters:
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.AzureOperationResponse{Microsoft.Azure.Management.Fluent.Redis.Models.RedisAccessKeysInner}}
  fullName.vb: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.ListKeysWithHttpMessagesAsync(System.String, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: ListKeysWithHttpMessagesAsync(String, String, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.RegenerateKeyWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisKeyType,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.RegenerateKeyWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisKeyType,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: RegenerateKeyWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisKeyType,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
  langs:
  - csharp
  - vb
  name: RegenerateKeyWithHttpMessagesAsync(String, String, RedisKeyType, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.RegenerateKeyWithHttpMessagesAsync(System.String, System.String, Microsoft.Azure.Management.Fluent.Redis.Models.RedisKeyType, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/IRedisOperations.cs
      branch: 33fd3ea99c60bab0a8ccbb1cd87328cb5e82e49f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RegenerateKeyWithHttpMessagesAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/IRedisOperations.cs
    startLine: 297
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nRegenerate redis cache's access keys. This operation requires\nwrite permission to the cache resource.\n"
  example: []
  syntax:
    content: Task<Rest.Azure.AzureOperationResponse<RedisAccessKeysInner>> RegenerateKeyWithHttpMessagesAsync(string resourceGroupName, string name, RedisKeyType keyType, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function RegenerateKeyWithHttpMessagesAsync(resourceGroupName As String, name As String, keyType As RedisKeyType, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Rest.Azure.AzureOperationResponse(Of RedisAccessKeysInner))
    parameters:
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: keyType
      type: Microsoft.Azure.Management.Fluent.Redis.Models.RedisKeyType
      description: "\nWhich redis access key to reset. Possible values include:\n'Primary', 'Secondary'\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.AzureOperationResponse{Microsoft.Azure.Management.Fluent.Redis.Models.RedisAccessKeysInner}}
  fullName.vb: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.RegenerateKeyWithHttpMessagesAsync(System.String, System.String, Microsoft.Azure.Management.Fluent.Redis.Models.RedisKeyType, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: RegenerateKeyWithHttpMessagesAsync(String, String, RedisKeyType, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.ForceRebootWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisRebootParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.ForceRebootWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisRebootParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: ForceRebootWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisRebootParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
  langs:
  - csharp
  - vb
  name: ForceRebootWithHttpMessagesAsync(String, String, RedisRebootParametersInner, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.ForceRebootWithHttpMessagesAsync(System.String, System.String, Microsoft.Azure.Management.Fluent.Redis.Models.RedisRebootParametersInner, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/IRedisOperations.cs
      branch: 33fd3ea99c60bab0a8ccbb1cd87328cb5e82e49f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ForceRebootWithHttpMessagesAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/IRedisOperations.cs
    startLine: 324
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nReboot specified redis node(s). This operation requires write\npermission to the cache resource. There can be potential data\nloss.\n"
  example: []
  syntax:
    content: Task<Rest.Azure.AzureOperationResponse> ForceRebootWithHttpMessagesAsync(string resourceGroupName, string name, RedisRebootParametersInner parameters, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function ForceRebootWithHttpMessagesAsync(resourceGroupName As String, name As String, parameters As RedisRebootParametersInner, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Rest.Azure.AzureOperationResponse)
    parameters:
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Fluent.Redis.Models.RedisRebootParametersInner
      description: "\nSpecifies which redis node(s) to reboot.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.AzureOperationResponse}
  fullName.vb: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.ForceRebootWithHttpMessagesAsync(System.String, System.String, Microsoft.Azure.Management.Fluent.Redis.Models.RedisRebootParametersInner, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: ForceRebootWithHttpMessagesAsync(String, String, RedisRebootParametersInner, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.ImportDataWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.ImportRDBParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.ImportDataWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.ImportRDBParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: ImportDataWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.ImportRDBParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
  langs:
  - csharp
  - vb
  name: ImportDataWithHttpMessagesAsync(String, String, ImportRDBParametersInner, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.ImportDataWithHttpMessagesAsync(System.String, System.String, Microsoft.Azure.Management.Fluent.Redis.Models.ImportRDBParametersInner, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/IRedisOperations.cs
      branch: 33fd3ea99c60bab0a8ccbb1cd87328cb5e82e49f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ImportDataWithHttpMessagesAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/IRedisOperations.cs
    startLine: 349
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nImport data into redis cache.\n"
  example: []
  syntax:
    content: Task<Rest.Azure.AzureOperationResponse> ImportDataWithHttpMessagesAsync(string resourceGroupName, string name, ImportRDBParametersInner parameters, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function ImportDataWithHttpMessagesAsync(resourceGroupName As String, name As String, parameters As ImportRDBParametersInner, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Rest.Azure.AzureOperationResponse)
    parameters:
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Fluent.Redis.Models.ImportRDBParametersInner
      description: "\nParameters for redis import operation.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.AzureOperationResponse}
  fullName.vb: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.ImportDataWithHttpMessagesAsync(System.String, System.String, Microsoft.Azure.Management.Fluent.Redis.Models.ImportRDBParametersInner, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: ImportDataWithHttpMessagesAsync(String, String, ImportRDBParametersInner, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.BeginImportDataWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.ImportRDBParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.BeginImportDataWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.ImportRDBParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: BeginImportDataWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.ImportRDBParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
  langs:
  - csharp
  - vb
  name: BeginImportDataWithHttpMessagesAsync(String, String, ImportRDBParametersInner, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.BeginImportDataWithHttpMessagesAsync(System.String, System.String, Microsoft.Azure.Management.Fluent.Redis.Models.ImportRDBParametersInner, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/IRedisOperations.cs
      branch: 33fd3ea99c60bab0a8ccbb1cd87328cb5e82e49f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BeginImportDataWithHttpMessagesAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/IRedisOperations.cs
    startLine: 374
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nImport data into redis cache.\n"
  example: []
  syntax:
    content: Task<Rest.Azure.AzureOperationResponse> BeginImportDataWithHttpMessagesAsync(string resourceGroupName, string name, ImportRDBParametersInner parameters, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function BeginImportDataWithHttpMessagesAsync(resourceGroupName As String, name As String, parameters As ImportRDBParametersInner, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Rest.Azure.AzureOperationResponse)
    parameters:
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Fluent.Redis.Models.ImportRDBParametersInner
      description: "\nParameters for redis import operation.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.AzureOperationResponse}
  fullName.vb: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.BeginImportDataWithHttpMessagesAsync(System.String, System.String, Microsoft.Azure.Management.Fluent.Redis.Models.ImportRDBParametersInner, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: BeginImportDataWithHttpMessagesAsync(String, String, ImportRDBParametersInner, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.ExportDataWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.ExportRDBParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.ExportDataWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.ExportRDBParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: ExportDataWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.ExportRDBParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
  langs:
  - csharp
  - vb
  name: ExportDataWithHttpMessagesAsync(String, String, ExportRDBParametersInner, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.ExportDataWithHttpMessagesAsync(System.String, System.String, Microsoft.Azure.Management.Fluent.Redis.Models.ExportRDBParametersInner, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/IRedisOperations.cs
      branch: 33fd3ea99c60bab0a8ccbb1cd87328cb5e82e49f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ExportDataWithHttpMessagesAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/IRedisOperations.cs
    startLine: 399
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nImport data into redis cache.\n"
  example: []
  syntax:
    content: Task<Rest.Azure.AzureOperationResponse> ExportDataWithHttpMessagesAsync(string resourceGroupName, string name, ExportRDBParametersInner parameters, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function ExportDataWithHttpMessagesAsync(resourceGroupName As String, name As String, parameters As ExportRDBParametersInner, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Rest.Azure.AzureOperationResponse)
    parameters:
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Fluent.Redis.Models.ExportRDBParametersInner
      description: "\nParameters for redis export operation.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.AzureOperationResponse}
  fullName.vb: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.ExportDataWithHttpMessagesAsync(System.String, System.String, Microsoft.Azure.Management.Fluent.Redis.Models.ExportRDBParametersInner, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: ExportDataWithHttpMessagesAsync(String, String, ExportRDBParametersInner, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.BeginExportDataWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.ExportRDBParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.BeginExportDataWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.ExportRDBParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: BeginExportDataWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.ExportRDBParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
  langs:
  - csharp
  - vb
  name: BeginExportDataWithHttpMessagesAsync(String, String, ExportRDBParametersInner, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.BeginExportDataWithHttpMessagesAsync(System.String, System.String, Microsoft.Azure.Management.Fluent.Redis.Models.ExportRDBParametersInner, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/IRedisOperations.cs
      branch: 33fd3ea99c60bab0a8ccbb1cd87328cb5e82e49f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BeginExportDataWithHttpMessagesAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/IRedisOperations.cs
    startLine: 424
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nImport data into redis cache.\n"
  example: []
  syntax:
    content: Task<Rest.Azure.AzureOperationResponse> BeginExportDataWithHttpMessagesAsync(string resourceGroupName, string name, ExportRDBParametersInner parameters, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function BeginExportDataWithHttpMessagesAsync(resourceGroupName As String, name As String, parameters As ExportRDBParametersInner, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Rest.Azure.AzureOperationResponse)
    parameters:
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Fluent.Redis.Models.ExportRDBParametersInner
      description: "\nParameters for redis export operation.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.AzureOperationResponse}
  fullName.vb: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.BeginExportDataWithHttpMessagesAsync(System.String, System.String, Microsoft.Azure.Management.Fluent.Redis.Models.ExportRDBParametersInner, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: BeginExportDataWithHttpMessagesAsync(String, String, ExportRDBParametersInner, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.ListByResourceGroupNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.ListByResourceGroupNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: ListByResourceGroupNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
  langs:
  - csharp
  - vb
  name: ListByResourceGroupNextWithHttpMessagesAsync(String, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.ListByResourceGroupNextWithHttpMessagesAsync(System.String, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/IRedisOperations.cs
      branch: 33fd3ea99c60bab0a8ccbb1cd87328cb5e82e49f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListByResourceGroupNextWithHttpMessagesAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/IRedisOperations.cs
    startLine: 446
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nGets all redis caches in a resource group.\n"
  example: []
  syntax:
    content: Task<Rest.Azure.AzureOperationResponse<Rest.Azure.IPage<RedisResourceInner>>> ListByResourceGroupNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function ListByResourceGroupNextWithHttpMessagesAsync(nextPageLink As String, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Rest.Azure.AzureOperationResponse(Of Rest.Azure.IPage(Of RedisResourceInner)))
    parameters:
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.AzureOperationResponse{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner}}}
  fullName.vb: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.ListByResourceGroupNextWithHttpMessagesAsync(System.String, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: ListByResourceGroupNextWithHttpMessagesAsync(String, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
  langs:
  - csharp
  - vb
  name: ListNextWithHttpMessagesAsync(String, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.ListNextWithHttpMessagesAsync(System.String, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/IRedisOperations.cs
      branch: 33fd3ea99c60bab0a8ccbb1cd87328cb5e82e49f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListNextWithHttpMessagesAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/IRedisOperations.cs
    startLine: 468
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nGets all redis caches in the specified subscription.\n"
  example: []
  syntax:
    content: Task<Rest.Azure.AzureOperationResponse<Rest.Azure.IPage<RedisResourceInner>>> ListNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function ListNextWithHttpMessagesAsync(nextPageLink As String, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Rest.Azure.AzureOperationResponse(Of Rest.Azure.IPage(Of RedisResourceInner)))
    parameters:
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.AzureOperationResponse{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner}}}
  fullName.vb: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations.ListNextWithHttpMessagesAsync(System.String, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: ListNextWithHttpMessagesAsync(String, Dictionary(Of String, List(Of String)), CancellationToken)
references:
- uid: Microsoft.Azure.Management.Fluent.Redis
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Redis
  fullName: Microsoft.Azure.Management.Fluent.Redis
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.Azure.Management.Fluent.Redis.Models.RedisCreateParametersInner
  parent: Microsoft.Azure.Management.Fluent.Redis.Models
  isExternal: false
  name: RedisCreateParametersInner
  fullName: Microsoft.Azure.Management.Fluent.Redis.Models.RedisCreateParametersInner
- uid: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, List<String>>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>
  fullname.vb: System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String))
  name.vb: Dictionary(Of String, List(Of String))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Microsoft.Rest.Azure.AzureOperationResponse{Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Rest.Azure.AzureOperationResponse<RedisResourceInner>>
  fullName: System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner>>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Rest.Azure.AzureOperationResponse(Of Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner))
  name.vb: Task(Of Rest.Azure.AzureOperationResponse(Of RedisResourceInner))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Rest.Azure.AzureOperationResponse`1
    name: Rest.Azure.AzureOperationResponse
    fullName: Microsoft.Rest.Azure.AzureOperationResponse
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner
    name: RedisResourceInner
    fullName: Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Rest.Azure.AzureOperationResponse`1
    name: Rest.Azure.AzureOperationResponse
    fullName: Microsoft.Rest.Azure.AzureOperationResponse
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner
    name: RedisResourceInner
    fullName: Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Management.Fluent.Redis.Models
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Redis.Models
  fullName: Microsoft.Azure.Management.Fluent.Redis.Models
- uid: System.Collections.Generic.Dictionary`2
  parent: System.Collections.Generic
  isExternal: true
  name: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  fullname.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Azure.Management.Fluent.Redis.Models.RedisUpdateParametersInner
  parent: Microsoft.Azure.Management.Fluent.Redis.Models
  isExternal: false
  name: RedisUpdateParametersInner
  fullName: Microsoft.Azure.Management.Fluent.Redis.Models.RedisUpdateParametersInner
- uid: System.Threading.Tasks.Task{Microsoft.Rest.Azure.AzureOperationResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Rest.Azure.AzureOperationResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Rest.Azure.AzureOperationResponse)
  name.vb: Task(Of Rest.Azure.AzureOperationResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Rest.Azure.AzureOperationResponse
    name: Rest.Azure.AzureOperationResponse
    fullName: Microsoft.Rest.Azure.AzureOperationResponse
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Rest.Azure.AzureOperationResponse
    name: Rest.Azure.AzureOperationResponse
    fullName: Microsoft.Rest.Azure.AzureOperationResponse
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{Microsoft.Rest.Azure.AzureOperationResponse{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Rest.Azure.AzureOperationResponse<Rest.Azure.IPage<RedisResourceInner>>>
  fullName: System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<Microsoft.Rest.Azure.IPage<Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner>>>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Rest.Azure.AzureOperationResponse(Of Microsoft.Rest.Azure.IPage(Of Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner)))
  name.vb: Task(Of Rest.Azure.AzureOperationResponse(Of Rest.Azure.IPage(Of RedisResourceInner)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Rest.Azure.AzureOperationResponse`1
    name: Rest.Azure.AzureOperationResponse
    fullName: Microsoft.Rest.Azure.AzureOperationResponse
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Rest.Azure.IPage`1
    name: Rest.Azure.IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner
    name: RedisResourceInner
    fullName: Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Rest.Azure.AzureOperationResponse`1
    name: Rest.Azure.AzureOperationResponse
    fullName: Microsoft.Rest.Azure.AzureOperationResponse
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Rest.Azure.IPage`1
    name: Rest.Azure.IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner
    name: RedisResourceInner
    fullName: Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{Microsoft.Rest.Azure.AzureOperationResponse{Microsoft.Azure.Management.Fluent.Redis.Models.RedisAccessKeysInner}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Rest.Azure.AzureOperationResponse<RedisAccessKeysInner>>
  fullName: System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<Microsoft.Azure.Management.Fluent.Redis.Models.RedisAccessKeysInner>>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Rest.Azure.AzureOperationResponse(Of Microsoft.Azure.Management.Fluent.Redis.Models.RedisAccessKeysInner))
  name.vb: Task(Of Rest.Azure.AzureOperationResponse(Of RedisAccessKeysInner))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Rest.Azure.AzureOperationResponse`1
    name: Rest.Azure.AzureOperationResponse
    fullName: Microsoft.Rest.Azure.AzureOperationResponse
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Redis.Models.RedisAccessKeysInner
    name: RedisAccessKeysInner
    fullName: Microsoft.Azure.Management.Fluent.Redis.Models.RedisAccessKeysInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Rest.Azure.AzureOperationResponse`1
    name: Rest.Azure.AzureOperationResponse
    fullName: Microsoft.Rest.Azure.AzureOperationResponse
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Redis.Models.RedisAccessKeysInner
    name: RedisAccessKeysInner
    fullName: Microsoft.Azure.Management.Fluent.Redis.Models.RedisAccessKeysInner
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Redis.Models.RedisKeyType
  parent: Microsoft.Azure.Management.Fluent.Redis.Models
  isExternal: false
  name: RedisKeyType
  fullName: Microsoft.Azure.Management.Fluent.Redis.Models.RedisKeyType
- uid: Microsoft.Azure.Management.Fluent.Redis.Models.RedisRebootParametersInner
  parent: Microsoft.Azure.Management.Fluent.Redis.Models
  isExternal: false
  name: RedisRebootParametersInner
  fullName: Microsoft.Azure.Management.Fluent.Redis.Models.RedisRebootParametersInner
- uid: Microsoft.Azure.Management.Fluent.Redis.Models.ImportRDBParametersInner
  parent: Microsoft.Azure.Management.Fluent.Redis.Models
  isExternal: false
  name: ImportRDBParametersInner
  fullName: Microsoft.Azure.Management.Fluent.Redis.Models.ImportRDBParametersInner
- uid: Microsoft.Azure.Management.Fluent.Redis.Models.ExportRDBParametersInner
  parent: Microsoft.Azure.Management.Fluent.Redis.Models
  isExternal: false
  name: ExportRDBParametersInner
  fullName: Microsoft.Azure.Management.Fluent.Redis.Models.ExportRDBParametersInner
