items:
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.PagedListConverter
  commentId: T:Microsoft.Azure.Management.Fluent.Resource.Core.PagedListConverter
  id: PagedListConverter
  parent: Microsoft.Azure.Management.Fluent.Resource.Core
  children:
  - Microsoft.Azure.Management.Fluent.Resource.Core.PagedListConverter.Convert``2(IPage{``0},System.Func{``0,``1})
  - Microsoft.Azure.Management.Fluent.Resource.Core.PagedListConverter.Convert``2(Microsoft.Azure.Management.Fluent.Resource.Core.PagedList{``0},System.Func{``0,``1})
  - Microsoft.Azure.Management.Fluent.Resource.Core.PagedListConverter.Convert``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  - Microsoft.Azure.Management.Fluent.Resource.Core.PagedListConverter.Convert``2(System.Collections.Generic.IList{``0},System.Func{``0,``1})
  langs:
  - csharp
  - vb
  name: PagedListConverter
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.PagedListConverter
  type: Class
  source:
    remote:
      path: src/ResourceManagement/ResourceManager/Microsoft.Azure.Management.Fluent.ResourceManager/Core/PagedList.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PagedListConverter
    path: src/ResourceManagement/ResourceManager/Microsoft.Azure.Management.Fluent.ResourceManager/Core/PagedList.cs
    startLine: 191
  assemblies:
  - Microsoft.Azure.Management.Fluent.ResourceManager
  packages:
  - Microsoft.Azure.Management.Fluent.ResourceManager(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Resource.Core
  syntax:
    content: public class PagedListConverter
    content.vb: Public Class PagedListConverter
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.PagedListConverter.Convert``2(Microsoft.Azure.Management.Fluent.Resource.Core.PagedList{``0},System.Func{``0,``1})
  commentId: M:Microsoft.Azure.Management.Fluent.Resource.Core.PagedListConverter.Convert``2(Microsoft.Azure.Management.Fluent.Resource.Core.PagedList{``0},System.Func{``0,``1})
  id: Convert``2(Microsoft.Azure.Management.Fluent.Resource.Core.PagedList{``0},System.Func{``0,``1})
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.PagedListConverter
  langs:
  - csharp
  - vb
  name: Convert<SourceT, TargetT>(PagedList<SourceT>, Func<SourceT, TargetT>)
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.PagedListConverter.Convert<SourceT, TargetT>(Microsoft.Azure.Management.Fluent.Resource.Core.PagedList<SourceT>, System.Func<SourceT, TargetT>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/ResourceManager/Microsoft.Azure.Management.Fluent.ResourceManager/Core/PagedList.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Convert
    path: src/ResourceManagement/ResourceManager/Microsoft.Azure.Management.Fluent.ResourceManager/Core/PagedList.cs
    startLine: 193
  assemblies:
  - Microsoft.Azure.Management.Fluent.ResourceManager
  packages:
  - Microsoft.Azure.Management.Fluent.ResourceManager(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Resource.Core
  syntax:
    content: public static PagedList<TargetT> Convert<SourceT, TargetT>(PagedList<SourceT> sourceList, Func<SourceT, TargetT> converter)
    content.vb: Public Shared Function Convert(Of SourceT, TargetT)(sourceList As PagedList(Of SourceT), converter As Func(Of SourceT, TargetT)) As PagedList(Of TargetT)
    parameters:
    - id: sourceList
      type: Microsoft.Azure.Management.Fluent.Resource.Core.PagedList{{SourceT}}
    - id: converter
      type: System.Func{{SourceT},{TargetT}}
    typeParameters:
    - id: SourceT
    - id: TargetT
    return:
      type: Microsoft.Azure.Management.Fluent.Resource.Core.PagedList{{TargetT}}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.Fluent.Resource.Core.PagedListConverter.Convert(Of SourceT, TargetT)(Microsoft.Azure.Management.Fluent.Resource.Core.PagedList(Of SourceT), System.Func(Of SourceT, TargetT))
  name.vb: Convert(Of SourceT, TargetT)(PagedList(Of SourceT), Func(Of SourceT, TargetT))
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.PagedListConverter.Convert``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  commentId: M:Microsoft.Azure.Management.Fluent.Resource.Core.PagedListConverter.Convert``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  id: Convert``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.PagedListConverter
  langs:
  - csharp
  - vb
  name: Convert<SourceT, TargetT>(IEnumerable<SourceT>, Func<SourceT, TargetT>)
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.PagedListConverter.Convert<SourceT, TargetT>(System.Collections.Generic.IEnumerable<SourceT>, System.Func<SourceT, TargetT>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/ResourceManager/Microsoft.Azure.Management.Fluent.ResourceManager/Core/PagedList.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Convert
    path: src/ResourceManagement/ResourceManager/Microsoft.Azure.Management.Fluent.ResourceManager/Core/PagedList.cs
    startLine: 203
  assemblies:
  - Microsoft.Azure.Management.Fluent.ResourceManager
  packages:
  - Microsoft.Azure.Management.Fluent.ResourceManager(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Resource.Core
  syntax:
    content: public static PagedList<TargetT> Convert<SourceT, TargetT>(IEnumerable<SourceT> sourceList, Func<SourceT, TargetT> converter)
    content.vb: Public Shared Function Convert(Of SourceT, TargetT)(sourceList As IEnumerable(Of SourceT), converter As Func(Of SourceT, TargetT)) As PagedList(Of TargetT)
    parameters:
    - id: sourceList
      type: System.Collections.Generic.IEnumerable{{SourceT}}
    - id: converter
      type: System.Func{{SourceT},{TargetT}}
    typeParameters:
    - id: SourceT
    - id: TargetT
    return:
      type: Microsoft.Azure.Management.Fluent.Resource.Core.PagedList{{TargetT}}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.Fluent.Resource.Core.PagedListConverter.Convert(Of SourceT, TargetT)(System.Collections.Generic.IEnumerable(Of SourceT), System.Func(Of SourceT, TargetT))
  name.vb: Convert(Of SourceT, TargetT)(IEnumerable(Of SourceT), Func(Of SourceT, TargetT))
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.PagedListConverter.Convert``2(System.Collections.Generic.IList{``0},System.Func{``0,``1})
  commentId: M:Microsoft.Azure.Management.Fluent.Resource.Core.PagedListConverter.Convert``2(System.Collections.Generic.IList{``0},System.Func{``0,``1})
  id: Convert``2(System.Collections.Generic.IList{``0},System.Func{``0,``1})
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.PagedListConverter
  langs:
  - csharp
  - vb
  name: Convert<SourceT, TargetT>(IList<SourceT>, Func<SourceT, TargetT>)
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.PagedListConverter.Convert<SourceT, TargetT>(System.Collections.Generic.IList<SourceT>, System.Func<SourceT, TargetT>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/ResourceManager/Microsoft.Azure.Management.Fluent.ResourceManager/Core/PagedList.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Convert
    path: src/ResourceManagement/ResourceManager/Microsoft.Azure.Management.Fluent.ResourceManager/Core/PagedList.cs
    startLine: 213
  assemblies:
  - Microsoft.Azure.Management.Fluent.ResourceManager
  packages:
  - Microsoft.Azure.Management.Fluent.ResourceManager(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Resource.Core
  syntax:
    content: public static PagedList<TargetT> Convert<SourceT, TargetT>(IList<SourceT> sourceList, Func<SourceT, TargetT> converter)
    content.vb: Public Shared Function Convert(Of SourceT, TargetT)(sourceList As IList(Of SourceT), converter As Func(Of SourceT, TargetT)) As PagedList(Of TargetT)
    parameters:
    - id: sourceList
      type: System.Collections.Generic.IList{{SourceT}}
    - id: converter
      type: System.Func{{SourceT},{TargetT}}
    typeParameters:
    - id: SourceT
    - id: TargetT
    return:
      type: Microsoft.Azure.Management.Fluent.Resource.Core.PagedList{{TargetT}}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.Fluent.Resource.Core.PagedListConverter.Convert(Of SourceT, TargetT)(System.Collections.Generic.IList(Of SourceT), System.Func(Of SourceT, TargetT))
  name.vb: Convert(Of SourceT, TargetT)(IList(Of SourceT), Func(Of SourceT, TargetT))
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.PagedListConverter.Convert``2(IPage{``0},System.Func{``0,``1})
  commentId: M:Microsoft.Azure.Management.Fluent.Resource.Core.PagedListConverter.Convert``2(IPage{``0},System.Func{``0,``1})
  id: Convert``2(IPage{``0},System.Func{``0,``1})
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.PagedListConverter
  langs:
  - csharp
  - vb
  name: Convert<SourceT, TargetT>(IPage<SourceT>, Func<SourceT, TargetT>)
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.PagedListConverter.Convert<SourceT, TargetT>(IPage<SourceT>, System.Func<SourceT, TargetT>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/ResourceManager/Microsoft.Azure.Management.Fluent.ResourceManager/Core/PagedList.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Convert
    path: src/ResourceManagement/ResourceManager/Microsoft.Azure.Management.Fluent.ResourceManager/Core/PagedList.cs
    startLine: 218
  assemblies:
  - Microsoft.Azure.Management.Fluent.ResourceManager
  packages:
  - Microsoft.Azure.Management.Fluent.ResourceManager(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Resource.Core
  syntax:
    content: public static PagedList<TargetT> Convert<SourceT, TargetT>(IPage<SourceT> sourceList, Func<SourceT, TargetT> converter)
    content.vb: Public Shared Function Convert(Of SourceT, TargetT)(sourceList As IPage(Of SourceT), converter As Func(Of SourceT, TargetT)) As PagedList(Of TargetT)
    parameters:
    - id: sourceList
      type: IPage{{SourceT}}
    - id: converter
      type: System.Func{{SourceT},{TargetT}}
    typeParameters:
    - id: SourceT
    - id: TargetT
    return:
      type: Microsoft.Azure.Management.Fluent.Resource.Core.PagedList{{TargetT}}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.Fluent.Resource.Core.PagedListConverter.Convert(Of SourceT, TargetT)(IPage(Of SourceT), System.Func(Of SourceT, TargetT))
  name.vb: Convert(Of SourceT, TargetT)(IPage(Of SourceT), Func(Of SourceT, TargetT))
references:
- uid: Microsoft.Azure.Management.Fluent.Resource.Core
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Resource.Core
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.PagedList{{SourceT}}
  parent: Microsoft.Azure.Management.Fluent.Resource.Core
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.PagedList`1
  name: PagedList<SourceT>
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.PagedList<SourceT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.PagedList(Of SourceT)
  name.vb: PagedList(Of SourceT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.PagedList`1
    name: PagedList
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.PagedList
  - name: <
    fullName: <
  - name: SourceT
    fullName: SourceT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.PagedList`1
    name: PagedList
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.PagedList
  - name: '(Of '
    fullName: '(Of '
  - name: SourceT
    fullName: SourceT
  - name: )
    fullName: )
- uid: System.Func{{SourceT},{TargetT}}
  parent: System
  definition: System.Func`2
  name: Func<SourceT, TargetT>
  fullName: System.Func<SourceT, TargetT>
  fullname.vb: System.Func(Of SourceT, TargetT)
  name.vb: Func(Of SourceT, TargetT)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: SourceT
    fullName: SourceT
  - name: ', '
    fullName: ', '
  - name: TargetT
    fullName: TargetT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: SourceT
    fullName: SourceT
  - name: ', '
    fullName: ', '
  - name: TargetT
    fullName: TargetT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.PagedList{{TargetT}}
  parent: Microsoft.Azure.Management.Fluent.Resource.Core
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.PagedList`1
  name: PagedList<TargetT>
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.PagedList<TargetT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.PagedList(Of TargetT)
  name.vb: PagedList(Of TargetT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.PagedList`1
    name: PagedList
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.PagedList
  - name: <
    fullName: <
  - name: TargetT
    fullName: TargetT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.PagedList`1
    name: PagedList
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.PagedList
  - name: '(Of '
    fullName: '(Of '
  - name: TargetT
    fullName: TargetT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.PagedList`1
  parent: Microsoft.Azure.Management.Fluent.Resource.Core
  isExternal: false
  name: PagedList<T>
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.PagedList<T>
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.PagedList(Of T)
  name.vb: PagedList(Of T)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.PagedList`1
    name: PagedList
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.PagedList
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.PagedList`1
    name: PagedList
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.PagedList
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Func`2
  parent: System
  isExternal: true
  name: Func<T, TResult>
  fullName: System.Func<T, TResult>
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{SourceT}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<SourceT>
  fullName: System.Collections.Generic.IEnumerable<SourceT>
  fullname.vb: System.Collections.Generic.IEnumerable(Of SourceT)
  name.vb: IEnumerable(Of SourceT)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: SourceT
    fullName: SourceT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: SourceT
    fullName: SourceT
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IList{{SourceT}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<SourceT>
  fullName: System.Collections.Generic.IList<SourceT>
  fullname.vb: System.Collections.Generic.IList(Of SourceT)
  name.vb: IList(Of SourceT)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: SourceT
    fullName: SourceT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: SourceT
    fullName: SourceT
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: true
  name: IList<T>
  fullName: System.Collections.Generic.IList<T>
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: IPage{{SourceT}}
  definition: IPage`1
  name: IPage<SourceT>
  fullName: IPage<SourceT>
  fullname.vb: IPage(Of SourceT)
  name.vb: IPage(Of SourceT)
  spec.csharp:
  - uid: IPage`1
    name: IPage
    fullName: IPage
    isExternal: true
  - name: <
    fullName: <
  - name: SourceT
    fullName: SourceT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IPage`1
    name: IPage
    fullName: IPage
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: SourceT
    fullName: SourceT
  - name: )
    fullName: )
- uid: IPage`1
  isExternal: true
  name: IPage<>
  fullName: IPage<>
  fullname.vb: IPage(Of )
  name.vb: IPage(Of )
  spec.csharp:
  - uid: IPage`1
    name: IPage
    fullName: IPage
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IPage`1
    name: IPage
    fullName: IPage
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
