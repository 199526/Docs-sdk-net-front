items:
- uid: Microsoft.Azure.Management.V2.Resource.Core.PagedList`1.OnePage`1
  commentId: T:Microsoft.Azure.Management.V2.Resource.Core.PagedList`1.OnePage`1
  id: PagedList`1.OnePage`1
  parent: Microsoft.Azure.Management.V2.Resource.Core
  children:
  - Microsoft.Azure.Management.V2.Resource.Core.PagedList`1.OnePage`1.#ctor(System.Collections.Generic.IEnumerable{`1})
  - Microsoft.Azure.Management.V2.Resource.Core.PagedList`1.OnePage`1.GetEnumerator
  - Microsoft.Azure.Management.V2.Resource.Core.PagedList`1.OnePage`1.NextPageLink
  - Microsoft.Azure.Management.V2.Resource.Core.PagedList`1.OnePage`1.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  - vb
  name: PagedList<T>.OnePage<U>
  fullName: Microsoft.Azure.Management.V2.Resource.Core.PagedList<T>.OnePage<U>
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/PagedList.cs
      branch: 103a27efa2658342d95a385715c4448ba1b34efa
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: OnePage
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/PagedList.cs
    startLine: 162
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core
  syntax:
    content: 'protected class OnePage<U> : IPage<U>'
    content.vb: >-
      Protected Class OnePage(Of U)
          Inherits IPage(Of U)
    typeParameters:
    - id: U
  inheritance:
  - System.Object
  modifiers.csharp:
  - protected
  - class
  modifiers.vb:
  - Protected
  - Class
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.PagedList(Of T).OnePage(Of U)
  name.vb: PagedList(Of T).OnePage(Of U)
- uid: Microsoft.Azure.Management.V2.Resource.Core.PagedList`1.OnePage`1.#ctor(System.Collections.Generic.IEnumerable{`1})
  commentId: M:Microsoft.Azure.Management.V2.Resource.Core.PagedList`1.OnePage`1.#ctor(System.Collections.Generic.IEnumerable{`1})
  id: '#ctor(System.Collections.Generic.IEnumerable{`1})'
  parent: Microsoft.Azure.Management.V2.Resource.Core.PagedList`1.OnePage`1
  langs:
  - csharp
  - vb
  name: OnePage(IEnumerable<U>)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.PagedList<T>.OnePage<U>.OnePage(System.Collections.Generic.IEnumerable<U>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/PagedList.cs
      branch: 103a27efa2658342d95a385715c4448ba1b34efa
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/PagedList.cs
    startLine: 166
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core
  syntax:
    content: public OnePage(IEnumerable<U> enumerable)
    content.vb: Public Sub New(enumerable As IEnumerable(Of U))
    parameters:
    - id: enumerable
      type: System.Collections.Generic.IEnumerable{{U}}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.PagedList(Of T).OnePage(Of U).OnePage(System.Collections.Generic.IEnumerable(Of U))
  name.vb: OnePage(IEnumerable(Of U))
- uid: Microsoft.Azure.Management.V2.Resource.Core.PagedList`1.OnePage`1.NextPageLink
  commentId: P:Microsoft.Azure.Management.V2.Resource.Core.PagedList`1.OnePage`1.NextPageLink
  id: NextPageLink
  parent: Microsoft.Azure.Management.V2.Resource.Core.PagedList`1.OnePage`1
  langs:
  - csharp
  - vb
  name: NextPageLink
  fullName: Microsoft.Azure.Management.V2.Resource.Core.PagedList<T>.OnePage<U>.NextPageLink
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/PagedList.cs
      branch: 103a27efa2658342d95a385715c4448ba1b34efa
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: NextPageLink
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/PagedList.cs
    startLine: 171
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core
  syntax:
    content: public string NextPageLink { get; }
    content.vb: Public ReadOnly Property NextPageLink As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.PagedList(Of T).OnePage(Of U).NextPageLink
- uid: Microsoft.Azure.Management.V2.Resource.Core.PagedList`1.OnePage`1.GetEnumerator
  commentId: M:Microsoft.Azure.Management.V2.Resource.Core.PagedList`1.OnePage`1.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.Azure.Management.V2.Resource.Core.PagedList`1.OnePage`1
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  fullName: Microsoft.Azure.Management.V2.Resource.Core.PagedList<T>.OnePage<U>.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/PagedList.cs
      branch: 103a27efa2658342d95a385715c4448ba1b34efa
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetEnumerator
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/PagedList.cs
    startLine: 179
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core
  syntax:
    content: public IEnumerator<U> GetEnumerator()
    content.vb: Public Function GetEnumerator As IEnumerator(Of U)
    return:
      type: System.Collections.Generic.IEnumerator{{U}}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.PagedList(Of T).OnePage(Of U).GetEnumerator()
- uid: Microsoft.Azure.Management.V2.Resource.Core.PagedList`1.OnePage`1.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Microsoft.Azure.Management.V2.Resource.Core.PagedList`1.OnePage`1.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: Microsoft.Azure.Management.V2.Resource.Core.PagedList`1.OnePage`1
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  fullName: Microsoft.Azure.Management.V2.Resource.Core.PagedList<T>.OnePage<U>.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/PagedList.cs
      branch: 103a27efa2658342d95a385715c4448ba1b34efa
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: System.Collections.IEnumerable.GetEnumerator
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/PagedList.cs
    startLine: 184
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
    return:
      type: System.Collections.IEnumerator
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.PagedList(Of T).OnePage(Of U).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
references:
- uid: Microsoft.Azure.Management.V2.Resource.Core
  isExternal: false
  name: Microsoft.Azure.Management.V2.Resource.Core
  fullName: Microsoft.Azure.Management.V2.Resource.Core
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable{{U}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<U>
  fullName: System.Collections.Generic.IEnumerable<U>
  fullname.vb: System.Collections.Generic.IEnumerable(Of U)
  name.vb: IEnumerable(Of U)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: U
    fullName: U
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: U
    fullName: U
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerator{{U}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<U>
  fullName: System.Collections.Generic.IEnumerator<U>
  fullname.vb: System.Collections.Generic.IEnumerator(Of U)
  name.vb: IEnumerator(Of U)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    fullName: <
  - name: U
    fullName: U
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: U
    fullName: U
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  fullname.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
