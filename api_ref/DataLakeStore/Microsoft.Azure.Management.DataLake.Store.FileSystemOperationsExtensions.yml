items:
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  commentId: T:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  id: FileSystemOperationsExtensions
  parent: Microsoft.Azure.Management.DataLake.Store
  children:
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Append(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Int64})
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.AppendAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Int64},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.CheckAccess(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.CheckAccessAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Concat(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Collections.Generic.IList{System.String})
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcatAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Collections.Generic.IList{System.String},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcurrentAppend(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType})
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcurrentAppendAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Create(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean})
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.CreateAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Delete(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Boolean})
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetAclStatus(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetAclStatusAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetContentSummary(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetContentSummaryAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetFileStatus(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetFileStatusAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ListFileStatus(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int32},System.String,System.String)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ListFileStatusAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Mkdirs(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.MkdirsAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ModifyAclEntries(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ModifyAclEntriesAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.MsConcat(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean})
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.MsConcatAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Open(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64})
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.OpenAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.PathExists(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.PathExistsAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAcl(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAclAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAclEntries(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAclEntriesAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveDefaultAcl(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveDefaultAclAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Rename(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RenameAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetAcl(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetAclAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetFileExpiry(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType,System.Nullable{System.Int64})
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetFileExpiryAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType,System.Nullable{System.Int64},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetOwner(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetOwnerAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetPermission(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetPermissionAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: FileSystemOperationsExtensions
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  type: Class
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: FileSystemOperationsExtensions
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 22
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nExtension methods for FileSystemOperations.\n"
  example: []
  syntax:
    content: public class FileSystemOperationsExtensions
    content.vb: Public Class FileSystemOperationsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.PathExists(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.PathExists(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  id: PathExists(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: PathExists(IFileSystemOperations, String, String)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.PathExists(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Customizations/FileSystemOperationsExtensions.Customizations.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: PathExists
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Customizations/FileSystemOperationsExtensions.Customizations.cs
    startLine: 37
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nTest the existence of a file or directory object specified by the file path.\n"
  example: []
  syntax:
    content: public static bool PathExists(this IFileSystemOperations operations, string accountName, string getFilePath)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PathExists(operations As IFileSystemOperations, accountName As String, getFilePath As String) As Boolean
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: getFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or directory for\nwhich to test the existence of.\n"
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.PathExistsAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.PathExistsAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  id: PathExistsAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: PathExistsAsync(IFileSystemOperations, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.PathExistsAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Customizations/FileSystemOperationsExtensions.Customizations.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: PathExistsAsync
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Customizations/FileSystemOperationsExtensions.Customizations.cs
    startLine: 58
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nTest the existence of a file or directory object specified by the file path.\n"
  example: []
  syntax:
    content: public static Task<bool> PathExistsAsync(this IFileSystemOperations operations, string accountName, string getFilePath, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PathExistsAsync(operations As IFileSystemOperations, accountName As String, getFilePath As String, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: getFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or directory for\nwhich to test the existence of.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcurrentAppend(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType})
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcurrentAppend(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType})
  id: ConcurrentAppend(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType})
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: ConcurrentAppend(IFileSystemOperations, String, String, Stream, Nullable<AppendModeType>)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcurrentAppend(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.IO.Stream, System.Nullable<Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ConcurrentAppend
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 48
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nAppends to the specified file. This method supports multiple concurrent\nappends to the file. NOTE: Concurrent append and normal (serial) append\nCANNOT be used interchangeably. Once a file has been appended to using\neither append option, it can only be appended to using that append option.\n"
  example: []
  syntax:
    content: public static void ConcurrentAppend(this IFileSystemOperations operations, string accountName, string filePath, Stream streamContents, AppendModeType? appendMode = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub ConcurrentAppend(operations As IFileSystemOperations, accountName As String, filePath As String, streamContents As Stream, appendMode As AppendModeType? = Nothing)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: filePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file to which to\nappend using concurrent append.\n"
    - id: streamContents
      type: System.IO.Stream
      description: "\nThe file contents to include when appending to the file.\n"
    - id: appendMode
      type: System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType}
      description: "\nIndicates the concurrent append call should create the file if it doesn't\nexist or just open the existing file for append. Possible values include:\n'autocreate'\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcurrentAppend(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.IO.Stream, System.Nullable(Of Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType))
  name.vb: ConcurrentAppend(IFileSystemOperations, String, String, Stream, Nullable(Of AppendModeType))
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcurrentAppendAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcurrentAppendAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType},System.Threading.CancellationToken)
  id: ConcurrentAppendAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: ConcurrentAppendAsync(IFileSystemOperations, String, String, Stream, Nullable<AppendModeType>, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcurrentAppendAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.IO.Stream, System.Nullable<Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ConcurrentAppendAsync
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 80
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nAppends to the specified file. This method supports multiple concurrent\nappends to the file. NOTE: Concurrent append and normal (serial) append\nCANNOT be used interchangeably. Once a file has been appended to using\neither append option, it can only be appended to using that append option.\n"
  example: []
  syntax:
    content: public static Task ConcurrentAppendAsync(this IFileSystemOperations operations, string accountName, string filePath, Stream streamContents, AppendModeType? appendMode = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ConcurrentAppendAsync(operations As IFileSystemOperations, accountName As String, filePath As String, streamContents As Stream, appendMode As AppendModeType? = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: filePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file to which to\nappend using concurrent append.\n"
    - id: streamContents
      type: System.IO.Stream
      description: "\nThe file contents to include when appending to the file.\n"
    - id: appendMode
      type: System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType}
      description: "\nIndicates the concurrent append call should create the file if it doesn't\nexist or just open the existing file for append. Possible values include:\n'autocreate'\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcurrentAppendAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.IO.Stream, System.Nullable(Of Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType), System.Threading.CancellationToken)
  name.vb: ConcurrentAppendAsync(IFileSystemOperations, String, String, Stream, Nullable(Of AppendModeType), CancellationToken)
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetFileExpiry(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType,System.Nullable{System.Int64})
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetFileExpiry(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType,System.Nullable{System.Int64})
  id: SetFileExpiry(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType,System.Nullable{System.Int64})
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: SetFileExpiry(IFileSystemOperations, String, String, ExpiryOptionType, Nullable<Int64>)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetFileExpiry(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType, System.Nullable<System.Int64>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: SetFileExpiry
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 113
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nSets or removes the expiration time on the specified file. This operation\ncan only be executed against files. Folders are not supported.\n"
  example: []
  syntax:
    content: public static void SetFileExpiry(this IFileSystemOperations operations, string accountName, string filePath, ExpiryOptionType expiryOption, long ? expireTime = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub SetFileExpiry(operations As IFileSystemOperations, accountName As String, filePath As String, expiryOption As ExpiryOptionType, expireTime As Long? = Nothing)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: filePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file on which to set\nor remove the expiration time.\n"
    - id: expiryOption
      type: Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType
      description: "\nIndicates the type of expiration to use for the file: 1. NeverExpire:\nExpireTime is ignored. 2. RelativeToNow: ExpireTime is an integer in\nmilliseconds representing the expiration date relative to when file\nexpiration is updated. 3. RelativeToCreationDate: ExpireTime is an\ninteger in milliseconds representing the expiration date relative to file\ncreation. 4. Absolute: ExpireTime is an integer in milliseconds, as a\nUnix timestamp relative to 1/1/1970 00:00:00. Possible values include:\n'NeverExpire', 'RelativeToNow', 'RelativeToCreationDate', 'Absolute'\n"
    - id: expireTime
      type: System.Nullable{System.Int64}
      description: "\nThe time that the file will expire, corresponding to the ExpiryOption that\nwas set.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetFileExpiry(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType, System.Nullable(Of System.Int64))
  name.vb: SetFileExpiry(IFileSystemOperations, String, String, ExpiryOptionType, Nullable(Of Int64))
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetFileExpiryAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType,System.Nullable{System.Int64},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetFileExpiryAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType,System.Nullable{System.Int64},System.Threading.CancellationToken)
  id: SetFileExpiryAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType,System.Nullable{System.Int64},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: SetFileExpiryAsync(IFileSystemOperations, String, String, ExpiryOptionType, Nullable<Int64>, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetFileExpiryAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType, System.Nullable<System.Int64>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: SetFileExpiryAsync
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 149
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nSets or removes the expiration time on the specified file. This operation\ncan only be executed against files. Folders are not supported.\n"
  example: []
  syntax:
    content: public static Task SetFileExpiryAsync(this IFileSystemOperations operations, string accountName, string filePath, ExpiryOptionType expiryOption, long ? expireTime = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetFileExpiryAsync(operations As IFileSystemOperations, accountName As String, filePath As String, expiryOption As ExpiryOptionType, expireTime As Long? = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: filePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file on which to set\nor remove the expiration time.\n"
    - id: expiryOption
      type: Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType
      description: "\nIndicates the type of expiration to use for the file: 1. NeverExpire:\nExpireTime is ignored. 2. RelativeToNow: ExpireTime is an integer in\nmilliseconds representing the expiration date relative to when file\nexpiration is updated. 3. RelativeToCreationDate: ExpireTime is an\ninteger in milliseconds representing the expiration date relative to file\ncreation. 4. Absolute: ExpireTime is an integer in milliseconds, as a\nUnix timestamp relative to 1/1/1970 00:00:00. Possible values include:\n'NeverExpire', 'RelativeToNow', 'RelativeToCreationDate', 'Absolute'\n"
    - id: expireTime
      type: System.Nullable{System.Int64}
      description: "\nThe time that the file will expire, corresponding to the ExpiryOption that\nwas set.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetFileExpiryAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType, System.Nullable(Of System.Int64), System.Threading.CancellationToken)
  name.vb: SetFileExpiryAsync(IFileSystemOperations, String, String, ExpiryOptionType, Nullable(Of Int64), CancellationToken)
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.CheckAccess(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.CheckAccess(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)
  id: CheckAccess(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: CheckAccess(IFileSystemOperations, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.CheckAccess(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: CheckAccess
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 171
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nChecks if the specified access is available at the given path.\n"
  example: []
  syntax:
    content: public static void CheckAccess(this IFileSystemOperations operations, string accountName, string path, string fsaction = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub CheckAccess(operations As IFileSystemOperations, accountName As String, path As String, fsaction As String = Nothing)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: path
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or directory for\nwhich to check access.\n"
    - id: fsaction
      type: System.String
      description: "\nFile system operation read/write/execute in string form, matching regex\npattern '[rwx-]{3}'\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.CheckAccessAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.CheckAccessAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: CheckAccessAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: CheckAccessAsync(IFileSystemOperations, String, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.CheckAccessAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: CheckAccessAsync
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 196
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nChecks if the specified access is available at the given path.\n"
  example: []
  syntax:
    content: public static Task CheckAccessAsync(this IFileSystemOperations operations, string accountName, string path, string fsaction = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CheckAccessAsync(operations As IFileSystemOperations, accountName As String, path As String, fsaction As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: path
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or directory for\nwhich to check access.\n"
    - id: fsaction
      type: System.String
      description: "\nFile system operation read/write/execute in string form, matching regex\npattern '[rwx-]{3}'\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Mkdirs(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Mkdirs(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  id: Mkdirs(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: Mkdirs(IFileSystemOperations, String, String)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Mkdirs(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Mkdirs
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 213
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nCreates a directory.\n"
  example: []
  syntax:
    content: public static FileOperationResult Mkdirs(this IFileSystemOperations operations, string accountName, string path)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Mkdirs(operations As IFileSystemOperations, accountName As String, path As String) As FileOperationResult
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: path
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the directory to create.\n"
    return:
      type: Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.MkdirsAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.MkdirsAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  id: MkdirsAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: MkdirsAsync(IFileSystemOperations, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.MkdirsAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: MkdirsAsync
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 233
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nCreates a directory.\n"
  example: []
  syntax:
    content: public static Task<FileOperationResult> MkdirsAsync(this IFileSystemOperations operations, string accountName, string path, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function MkdirsAsync(operations As IFileSystemOperations, accountName As String, path As String, cancellationToken As CancellationToken = Nothing) As Task(Of FileOperationResult)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: path
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the directory to create.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Concat(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Collections.Generic.IList{System.String})
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Concat(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Collections.Generic.IList{System.String})
  id: Concat(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Collections.Generic.IList{System.String})
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: Concat(IFileSystemOperations, String, String, IList<String>)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Concat(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.Collections.Generic.IList<System.String>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Concat
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 259
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nConcatenates the list of source files into the destination file, removing\nall source files upon success.\n"
  example: []
  syntax:
    content: public static void Concat(this IFileSystemOperations operations, string accountName, string destinationPath, IList<string> sources)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Concat(operations As IFileSystemOperations, accountName As String, destinationPath As String, sources As IList(Of String))
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: destinationPath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the destination file\nresulting from the concatenation.\n"
    - id: sources
      type: System.Collections.Generic.IList{System.String}
      description: "\nA list of comma seperated Data Lake Store paths (starting with '/') of the\nfiles to concatenate, in the order in which they should be concatenated.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Concat(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.Collections.Generic.IList(Of System.String))
  name.vb: Concat(IFileSystemOperations, String, String, IList(Of String))
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcatAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Collections.Generic.IList{System.String},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcatAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Collections.Generic.IList{System.String},System.Threading.CancellationToken)
  id: ConcatAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Collections.Generic.IList{System.String},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: ConcatAsync(IFileSystemOperations, String, String, IList<String>, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcatAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.Collections.Generic.IList<System.String>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ConcatAsync
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 285
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nConcatenates the list of source files into the destination file, removing\nall source files upon success.\n"
  example: []
  syntax:
    content: public static Task ConcatAsync(this IFileSystemOperations operations, string accountName, string destinationPath, IList<string> sources, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ConcatAsync(operations As IFileSystemOperations, accountName As String, destinationPath As String, sources As IList(Of String), cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: destinationPath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the destination file\nresulting from the concatenation.\n"
    - id: sources
      type: System.Collections.Generic.IList{System.String}
      description: "\nA list of comma seperated Data Lake Store paths (starting with '/') of the\nfiles to concatenate, in the order in which they should be concatenated.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcatAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.Collections.Generic.IList(Of System.String), System.Threading.CancellationToken)
  name.vb: ConcatAsync(IFileSystemOperations, String, String, IList(Of String), CancellationToken)
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.MsConcat(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean})
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.MsConcat(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean})
  id: MsConcat(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean})
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: MsConcat(IFileSystemOperations, String, String, Stream, Nullable<Boolean>)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.MsConcat(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.IO.Stream, System.Nullable<System.Boolean>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: MsConcat
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 319
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nConcatenates the list of source files into the destination file, deleting\nall source files upon success. This method accepts more source file paths\nthan the Concat method. This method and the parameters it accepts are\nsubject to change for usability in an upcoming version.\n"
  example: []
  syntax:
    content: public static void MsConcat(this IFileSystemOperations operations, string accountName, string msConcatDestinationPath, Stream streamContents, bool ? deleteSourceDirectory = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub MsConcat(operations As IFileSystemOperations, accountName As String, msConcatDestinationPath As String, streamContents As Stream, deleteSourceDirectory As Boolean? = Nothing)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: msConcatDestinationPath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the destination file\nresulting from the concatenation.\n"
    - id: streamContents
      type: System.IO.Stream
      description: "\nA list of Data Lake Store paths (starting with '/') of the source files.\nMust be in the format: sources=<comma separated list>\n"
    - id: deleteSourceDirectory
      type: System.Nullable{System.Boolean}
      description: "\nIndicates that as an optimization instead of deleting each individual\nsource stream, delete the source stream folder if all streams are in the\nsame folder instead. This results in a substantial performance\nimprovement when the only streams in the folder are part of the\nconcatenation operation. WARNING: This includes the deletion of any other\nfiles that are not source files. Only set this to true when source files\nare the only files in the source directory.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.MsConcat(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.IO.Stream, System.Nullable(Of System.Boolean))
  name.vb: MsConcat(IFileSystemOperations, String, String, Stream, Nullable(Of Boolean))
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.MsConcatAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.MsConcatAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  id: MsConcatAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: MsConcatAsync(IFileSystemOperations, String, String, Stream, Nullable<Boolean>, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.MsConcatAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.IO.Stream, System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: MsConcatAsync
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 356
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nConcatenates the list of source files into the destination file, deleting\nall source files upon success. This method accepts more source file paths\nthan the Concat method. This method and the parameters it accepts are\nsubject to change for usability in an upcoming version.\n"
  example: []
  syntax:
    content: public static Task MsConcatAsync(this IFileSystemOperations operations, string accountName, string msConcatDestinationPath, Stream streamContents, bool ? deleteSourceDirectory = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function MsConcatAsync(operations As IFileSystemOperations, accountName As String, msConcatDestinationPath As String, streamContents As Stream, deleteSourceDirectory As Boolean? = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: msConcatDestinationPath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the destination file\nresulting from the concatenation.\n"
    - id: streamContents
      type: System.IO.Stream
      description: "\nA list of Data Lake Store paths (starting with '/') of the source files.\nMust be in the format: sources=<comma separated list>\n"
    - id: deleteSourceDirectory
      type: System.Nullable{System.Boolean}
      description: "\nIndicates that as an optimization instead of deleting each individual\nsource stream, delete the source stream folder if all streams are in the\nsame folder instead. This results in a substantial performance\nimprovement when the only streams in the folder are part of the\nconcatenation operation. WARNING: This includes the deletion of any other\nfiles that are not source files. Only set this to true when source files\nare the only files in the source directory.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.MsConcatAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.IO.Stream, System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: MsConcatAsync(IFileSystemOperations, String, String, Stream, Nullable(Of Boolean), CancellationToken)
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ListFileStatus(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int32},System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ListFileStatus(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int32},System.String,System.String)
  id: ListFileStatus(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int32},System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListFileStatus(IFileSystemOperations, String, String, Nullable<Int32>, String, String)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ListFileStatus(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.Nullable<System.Int32>, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ListFileStatus
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 389
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nGet the list of file status objects specified by the file path, with\noptional pagination parameters\n"
  example: []
  syntax:
    content: public static FileStatusesResult ListFileStatus(this IFileSystemOperations operations, string accountName, string listFilePath, int ? listSize = null, string listAfter = null, string listBefore = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListFileStatus(operations As IFileSystemOperations, accountName As String, listFilePath As String, listSize As Integer? = Nothing, listAfter As String = Nothing, listBefore As String = Nothing) As FileStatusesResult
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: listFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the directory to list.\n"
    - id: listSize
      type: System.Nullable{System.Int32}
      description: "\nGets or sets the number of items to return. Optional.\n"
    - id: listAfter
      type: System.String
      description: "\nGets or sets the item or lexographical index after which to begin\nreturning results. For example, a file list of 'a','b','d' and\nlistAfter='b' will return 'd', and a listAfter='c' will also return 'd'.\nOptional.\n"
    - id: listBefore
      type: System.String
      description: "\nGets or sets the item or lexographical index before which to begin\nreturning results. For example, a file list of 'a','b','d' and\nlistBefore='d' will return 'a','b', and a listBefore='c' will also return\n'a','b'. Optional.\n"
    return:
      type: Microsoft.Azure.Management.DataLake.Store.Models.FileStatusesResult
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ListFileStatus(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.Nullable(Of System.Int32), System.String, System.String)
  name.vb: ListFileStatus(IFileSystemOperations, String, String, Nullable(Of Int32), String, String)
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ListFileStatusAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ListFileStatusAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Threading.CancellationToken)
  id: ListFileStatusAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListFileStatusAsync(IFileSystemOperations, String, String, Nullable<Int32>, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ListFileStatusAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.Nullable<System.Int32>, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ListFileStatusAsync
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 425
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nGet the list of file status objects specified by the file path, with\noptional pagination parameters\n"
  example: []
  syntax:
    content: public static Task<FileStatusesResult> ListFileStatusAsync(this IFileSystemOperations operations, string accountName, string listFilePath, int ? listSize = null, string listAfter = null, string listBefore = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListFileStatusAsync(operations As IFileSystemOperations, accountName As String, listFilePath As String, listSize As Integer? = Nothing, listAfter As String = Nothing, listBefore As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of FileStatusesResult)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: listFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the directory to list.\n"
    - id: listSize
      type: System.Nullable{System.Int32}
      description: "\nGets or sets the number of items to return. Optional.\n"
    - id: listAfter
      type: System.String
      description: "\nGets or sets the item or lexographical index after which to begin\nreturning results. For example, a file list of 'a','b','d' and\nlistAfter='b' will return 'd', and a listAfter='c' will also return 'd'.\nOptional.\n"
    - id: listBefore
      type: System.String
      description: "\nGets or sets the item or lexographical index before which to begin\nreturning results. For example, a file list of 'a','b','d' and\nlistBefore='d' will return 'a','b', and a listBefore='c' will also return\n'a','b'. Optional.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.DataLake.Store.Models.FileStatusesResult}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ListFileStatusAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.Nullable(Of System.Int32), System.String, System.String, System.Threading.CancellationToken)
  name.vb: ListFileStatusAsync(IFileSystemOperations, String, String, Nullable(Of Int32), String, String, CancellationToken)
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetContentSummary(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetContentSummary(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  id: GetContentSummary(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetContentSummary(IFileSystemOperations, String, String)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetContentSummary(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetContentSummary
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 446
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nGets the file content summary object specified by the file path.\n"
  example: []
  syntax:
    content: public static ContentSummaryResult GetContentSummary(this IFileSystemOperations operations, string accountName, string getContentSummaryFilePath)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetContentSummary(operations As IFileSystemOperations, accountName As String, getContentSummaryFilePath As String) As ContentSummaryResult
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: getContentSummaryFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file for which to\nretrieve the summary.\n"
    return:
      type: Microsoft.Azure.Management.DataLake.Store.Models.ContentSummaryResult
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetContentSummaryAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetContentSummaryAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  id: GetContentSummaryAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetContentSummaryAsync(IFileSystemOperations, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetContentSummaryAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetContentSummaryAsync
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 467
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nGets the file content summary object specified by the file path.\n"
  example: []
  syntax:
    content: public static Task<ContentSummaryResult> GetContentSummaryAsync(this IFileSystemOperations operations, string accountName, string getContentSummaryFilePath, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetContentSummaryAsync(operations As IFileSystemOperations, accountName As String, getContentSummaryFilePath As String, cancellationToken As CancellationToken = Nothing) As Task(Of ContentSummaryResult)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: getContentSummaryFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file for which to\nretrieve the summary.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.DataLake.Store.Models.ContentSummaryResult}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetFileStatus(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetFileStatus(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  id: GetFileStatus(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetFileStatus(IFileSystemOperations, String, String)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetFileStatus(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetFileStatus
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 488
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nGet the file status object specified by the file path.\n"
  example: []
  syntax:
    content: public static FileStatusResult GetFileStatus(this IFileSystemOperations operations, string accountName, string getFilePath)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetFileStatus(operations As IFileSystemOperations, accountName As String, getFilePath As String) As FileStatusResult
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: getFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or directory for\nwhich to retrieve the status.\n"
    return:
      type: Microsoft.Azure.Management.DataLake.Store.Models.FileStatusResult
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetFileStatusAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetFileStatusAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  id: GetFileStatusAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetFileStatusAsync(IFileSystemOperations, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetFileStatusAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetFileStatusAsync
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 509
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nGet the file status object specified by the file path.\n"
  example: []
  syntax:
    content: public static Task<FileStatusResult> GetFileStatusAsync(this IFileSystemOperations operations, string accountName, string getFilePath, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetFileStatusAsync(operations As IFileSystemOperations, accountName As String, getFilePath As String, cancellationToken As CancellationToken = Nothing) As Task(Of FileStatusResult)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: getFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or directory for\nwhich to retrieve the status.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.DataLake.Store.Models.FileStatusResult}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Append(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Int64})
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Append(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Int64})
  id: Append(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Int64})
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: Append(IFileSystemOperations, String, String, Stream, Nullable<Int64>)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Append(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.IO.Stream, System.Nullable<System.Int64>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Append
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 542
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nAppends to the specified file. This method does not support multiple\nconcurrent appends to the file. NOTE: Concurrent append and normal\n(serial) append CANNOT be used interchangeably. Once a file has been\nappended to using either append option, it can only be appended to using\nthat append option. Use the ConcurrentAppend option if you would like\nsupport for concurrent appends.\n"
  example: []
  syntax:
    content: public static void Append(this IFileSystemOperations operations, string accountName, string directFilePath, Stream streamContents, long ? offset = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Append(operations As IFileSystemOperations, accountName As String, directFilePath As String, streamContents As Stream, offset As Long? = Nothing)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: directFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file to which to\nappend.\n"
    - id: streamContents
      type: System.IO.Stream
      description: "\nThe file contents to include when appending to the file.\n"
    - id: offset
      type: System.Nullable{System.Int64}
      description: "\nThe optional offset in the stream to begin the append operation. Default\nis to append at the end of the stream.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Append(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.IO.Stream, System.Nullable(Of System.Int64))
  name.vb: Append(IFileSystemOperations, String, String, Stream, Nullable(Of Int64))
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.AppendAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Int64},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.AppendAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Int64},System.Threading.CancellationToken)
  id: AppendAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Int64},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: AppendAsync(IFileSystemOperations, String, String, Stream, Nullable<Int64>, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.AppendAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.IO.Stream, System.Nullable<System.Int64>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: AppendAsync
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 575
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nAppends to the specified file. This method does not support multiple\nconcurrent appends to the file. NOTE: Concurrent append and normal\n(serial) append CANNOT be used interchangeably. Once a file has been\nappended to using either append option, it can only be appended to using\nthat append option. Use the ConcurrentAppend option if you would like\nsupport for concurrent appends.\n"
  example: []
  syntax:
    content: public static Task AppendAsync(this IFileSystemOperations operations, string accountName, string directFilePath, Stream streamContents, long ? offset = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AppendAsync(operations As IFileSystemOperations, accountName As String, directFilePath As String, streamContents As Stream, offset As Long? = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: directFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file to which to\nappend.\n"
    - id: streamContents
      type: System.IO.Stream
      description: "\nThe file contents to include when appending to the file.\n"
    - id: offset
      type: System.Nullable{System.Int64}
      description: "\nThe optional offset in the stream to begin the append operation. Default\nis to append at the end of the stream.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.AppendAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.IO.Stream, System.Nullable(Of System.Int64), System.Threading.CancellationToken)
  name.vb: AppendAsync(IFileSystemOperations, String, String, Stream, Nullable(Of Int64), CancellationToken)
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Create(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean})
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Create(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean})
  id: Create(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean})
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: Create(IFileSystemOperations, String, String, Stream, Nullable<Boolean>)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Create(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.IO.Stream, System.Nullable<System.Boolean>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Create
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 599
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nCreates a file with optionally specified content.\n"
  example: []
  syntax:
    content: public static void Create(this IFileSystemOperations operations, string accountName, string directFilePath, Stream streamContents = null, bool ? overwrite = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Create(operations As IFileSystemOperations, accountName As String, directFilePath As String, streamContents As Stream = Nothing, overwrite As Boolean? = Nothing)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: directFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file to create.\n"
    - id: streamContents
      type: System.IO.Stream
      description: "\nThe file contents to include when creating the file. This parameter is\noptional, resulting in an empty file if not specified.\n"
    - id: overwrite
      type: System.Nullable{System.Boolean}
      description: "\nThe indication of if the file should be overwritten.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Create(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.IO.Stream, System.Nullable(Of System.Boolean))
  name.vb: Create(IFileSystemOperations, String, String, Stream, Nullable(Of Boolean))
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.CreateAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.CreateAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  id: CreateAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateAsync(IFileSystemOperations, String, String, Stream, Nullable<Boolean>, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.CreateAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.IO.Stream, System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: CreateAsync
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 626
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nCreates a file with optionally specified content.\n"
  example: []
  syntax:
    content: public static Task CreateAsync(this IFileSystemOperations operations, string accountName, string directFilePath, Stream streamContents = null, bool ? overwrite = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateAsync(operations As IFileSystemOperations, accountName As String, directFilePath As String, streamContents As Stream = Nothing, overwrite As Boolean? = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: directFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file to create.\n"
    - id: streamContents
      type: System.IO.Stream
      description: "\nThe file contents to include when creating the file. This parameter is\noptional, resulting in an empty file if not specified.\n"
    - id: overwrite
      type: System.Nullable{System.Boolean}
      description: "\nThe indication of if the file should be overwritten.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.CreateAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.IO.Stream, System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: CreateAsync(IFileSystemOperations, String, String, Stream, Nullable(Of Boolean), CancellationToken)
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Open(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64})
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Open(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64})
  id: Open(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64})
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: Open(IFileSystemOperations, String, String, Nullable<Int64>, Nullable<Int64>)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Open(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.Nullable<System.Int64>, System.Nullable<System.Int64>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Open
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 647
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nOpens and reads from the specified file.\n"
  example: []
  syntax:
    content: public static Stream Open(this IFileSystemOperations operations, string accountName, string directFilePath, long ? length = null, long ? offset = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Open(operations As IFileSystemOperations, accountName As String, directFilePath As String, length As Long? = Nothing, offset As Long? = Nothing) As Stream
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: directFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file to open.\n"
    - id: length
      type: System.Nullable{System.Int64}
      description: "\n"
    - id: offset
      type: System.Nullable{System.Int64}
      description: "\n"
    return:
      type: System.IO.Stream
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Open(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64))
  name.vb: Open(IFileSystemOperations, String, String, Nullable(Of Int64), Nullable(Of Int64))
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.OpenAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.OpenAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)
  id: OpenAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: OpenAsync(IFileSystemOperations, String, String, Nullable<Int64>, Nullable<Int64>, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.OpenAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.Nullable<System.Int64>, System.Nullable<System.Int64>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: OpenAsync
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 671
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nOpens and reads from the specified file.\n"
  example: []
  syntax:
    content: public static Task<Stream> OpenAsync(this IFileSystemOperations operations, string accountName, string directFilePath, long ? length = null, long ? offset = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function OpenAsync(operations As IFileSystemOperations, accountName As String, directFilePath As String, length As Long? = Nothing, offset As Long? = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Stream)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: directFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file to open.\n"
    - id: length
      type: System.Nullable{System.Int64}
      description: "\n"
    - id: offset
      type: System.Nullable{System.Int64}
      description: "\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.OpenAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64), System.Threading.CancellationToken)
  name.vb: OpenAsync(IFileSystemOperations, String, String, Nullable(Of Int64), Nullable(Of Int64), CancellationToken)
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetAcl(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetAcl(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)
  id: SetAcl(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: SetAcl(IFileSystemOperations, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetAcl(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: SetAcl
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 695
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nSets the Access Control List (ACL) for a file or folder.\n"
  example: []
  syntax:
    content: public static void SetAcl(this IFileSystemOperations operations, string accountName, string setAclFilePath, string aclspec)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub SetAcl(operations As IFileSystemOperations, accountName As String, setAclFilePath As String, aclspec As String)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: setAclFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or directory on\nwhich to set the ACL.\n"
    - id: aclspec
      type: System.String
      description: "\nThe ACL spec included in ACL creation operations in the format\n'[default:]user|group|other::r|-w|-x|-'\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetAclAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetAclAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: SetAclAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: SetAclAsync(IFileSystemOperations, String, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetAclAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: SetAclAsync
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 720
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nSets the Access Control List (ACL) for a file or folder.\n"
  example: []
  syntax:
    content: public static Task SetAclAsync(this IFileSystemOperations operations, string accountName, string setAclFilePath, string aclspec, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetAclAsync(operations As IFileSystemOperations, accountName As String, setAclFilePath As String, aclspec As String, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: setAclFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or directory on\nwhich to set the ACL.\n"
    - id: aclspec
      type: System.String
      description: "\nThe ACL spec included in ACL creation operations in the format\n'[default:]user|group|other::r|-w|-x|-'\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ModifyAclEntries(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ModifyAclEntries(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)
  id: ModifyAclEntries(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: ModifyAclEntries(IFileSystemOperations, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ModifyAclEntries(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ModifyAclEntries
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 742
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nModifies existing Access Control List (ACL) entries on a file or folder.\n"
  example: []
  syntax:
    content: public static void ModifyAclEntries(this IFileSystemOperations operations, string accountName, string modifyAclFilePath, string aclspec)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub ModifyAclEntries(operations As IFileSystemOperations, accountName As String, modifyAclFilePath As String, aclspec As String)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: modifyAclFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or directory with\nthe ACL being modified.\n"
    - id: aclspec
      type: System.String
      description: "\nThe ACL specification included in ACL modification operations in the\nformat '[default:]user|group|other::r|-w|-x|-'\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ModifyAclEntriesAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ModifyAclEntriesAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: ModifyAclEntriesAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: ModifyAclEntriesAsync(IFileSystemOperations, String, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ModifyAclEntriesAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ModifyAclEntriesAsync
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 767
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nModifies existing Access Control List (ACL) entries on a file or folder.\n"
  example: []
  syntax:
    content: public static Task ModifyAclEntriesAsync(this IFileSystemOperations operations, string accountName, string modifyAclFilePath, string aclspec, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ModifyAclEntriesAsync(operations As IFileSystemOperations, accountName As String, modifyAclFilePath As String, aclspec As String, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: modifyAclFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or directory with\nthe ACL being modified.\n"
    - id: aclspec
      type: System.String
      description: "\nThe ACL specification included in ACL modification operations in the\nformat '[default:]user|group|other::r|-w|-x|-'\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAclEntries(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAclEntries(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)
  id: RemoveAclEntries(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: RemoveAclEntries(IFileSystemOperations, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAclEntries(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: RemoveAclEntries
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 789
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nRemoves existing Access Control List (ACL) entries for a file or folder.\n"
  example: []
  syntax:
    content: public static void RemoveAclEntries(this IFileSystemOperations operations, string accountName, string removeAclFilePath, string aclspec)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub RemoveAclEntries(operations As IFileSystemOperations, accountName As String, removeAclFilePath As String, aclspec As String)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: removeAclFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or directory with\nthe ACL being removed.\n"
    - id: aclspec
      type: System.String
      description: "\nThe ACL spec included in ACL removal operations in the format\n'[default:]user|group|other'\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAclEntriesAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAclEntriesAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: RemoveAclEntriesAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: RemoveAclEntriesAsync(IFileSystemOperations, String, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAclEntriesAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: RemoveAclEntriesAsync
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 814
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nRemoves existing Access Control List (ACL) entries for a file or folder.\n"
  example: []
  syntax:
    content: public static Task RemoveAclEntriesAsync(this IFileSystemOperations operations, string accountName, string removeAclFilePath, string aclspec, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RemoveAclEntriesAsync(operations As IFileSystemOperations, accountName As String, removeAclFilePath As String, aclspec As String, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: removeAclFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or directory with\nthe ACL being removed.\n"
    - id: aclspec
      type: System.String
      description: "\nThe ACL spec included in ACL removal operations in the format\n'[default:]user|group|other'\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveDefaultAcl(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveDefaultAcl(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  id: RemoveDefaultAcl(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: RemoveDefaultAcl(IFileSystemOperations, String, String)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveDefaultAcl(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: RemoveDefaultAcl
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 833
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nRemoves the existing Default Access Control List (ACL) of the specified\ndirectory.\n"
  example: []
  syntax:
    content: public static void RemoveDefaultAcl(this IFileSystemOperations operations, string accountName, string defaultAclFilePath)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub RemoveDefaultAcl(operations As IFileSystemOperations, accountName As String, defaultAclFilePath As String)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: defaultAclFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the directory with the\ndefault ACL being removed.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveDefaultAclAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveDefaultAclAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  id: RemoveDefaultAclAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: RemoveDefaultAclAsync(IFileSystemOperations, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveDefaultAclAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: RemoveDefaultAclAsync
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 855
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nRemoves the existing Default Access Control List (ACL) of the specified\ndirectory.\n"
  example: []
  syntax:
    content: public static Task RemoveDefaultAclAsync(this IFileSystemOperations operations, string accountName, string defaultAclFilePath, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RemoveDefaultAclAsync(operations As IFileSystemOperations, accountName As String, defaultAclFilePath As String, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: defaultAclFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the directory with the\ndefault ACL being removed.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAcl(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAcl(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  id: RemoveAcl(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: RemoveAcl(IFileSystemOperations, String, String)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAcl(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: RemoveAcl
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 874
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nRemoves the existing Access Control List (ACL) of the specified file or\ndirectory.\n"
  example: []
  syntax:
    content: public static void RemoveAcl(this IFileSystemOperations operations, string accountName, string aclFilePath)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub RemoveAcl(operations As IFileSystemOperations, accountName As String, aclFilePath As String)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: aclFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or directory with\nthe ACL being removed.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAclAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAclAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  id: RemoveAclAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: RemoveAclAsync(IFileSystemOperations, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAclAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: RemoveAclAsync
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 896
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nRemoves the existing Access Control List (ACL) of the specified file or\ndirectory.\n"
  example: []
  syntax:
    content: public static Task RemoveAclAsync(this IFileSystemOperations operations, string accountName, string aclFilePath, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RemoveAclAsync(operations As IFileSystemOperations, accountName As String, aclFilePath As String, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: aclFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or directory with\nthe ACL being removed.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetAclStatus(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetAclStatus(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  id: GetAclStatus(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetAclStatus(IFileSystemOperations, String, String)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetAclStatus(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetAclStatus
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 914
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nGets Access Control List (ACL) entries for the specified file or directory.\n"
  example: []
  syntax:
    content: public static AclStatusResult GetAclStatus(this IFileSystemOperations operations, string accountName, string aclFilePath)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAclStatus(operations As IFileSystemOperations, accountName As String, aclFilePath As String) As AclStatusResult
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: aclFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or directory for\nwhich to get the ACL.\n"
    return:
      type: Microsoft.Azure.Management.DataLake.Store.Models.AclStatusResult
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetAclStatusAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetAclStatusAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  id: GetAclStatusAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetAclStatusAsync(IFileSystemOperations, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetAclStatusAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetAclStatusAsync
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 935
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nGets Access Control List (ACL) entries for the specified file or directory.\n"
  example: []
  syntax:
    content: public static Task<AclStatusResult> GetAclStatusAsync(this IFileSystemOperations operations, string accountName, string aclFilePath, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAclStatusAsync(operations As IFileSystemOperations, accountName As String, aclFilePath As String, cancellationToken As CancellationToken = Nothing) As Task(Of AclStatusResult)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: aclFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or directory for\nwhich to get the ACL.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.DataLake.Store.Models.AclStatusResult}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Delete(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Boolean})
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Delete(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Boolean})
  id: Delete(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Boolean})
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: Delete(IFileSystemOperations, String, String, Nullable<Boolean>)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Delete(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.Nullable<System.Boolean>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Delete
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 959
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nDeletes the requested file or directory, optionally recursively.\n"
  example: []
  syntax:
    content: public static FileOperationResult Delete(this IFileSystemOperations operations, string accountName, string filePath, bool ? recursive = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Delete(operations As IFileSystemOperations, accountName As String, filePath As String, recursive As Boolean? = Nothing) As FileOperationResult
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: filePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or directory to\ndelete.\n"
    - id: recursive
      type: System.Nullable{System.Boolean}
      description: "\nThe optional switch indicating if the delete should be recursive\n"
    return:
      type: Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Delete(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.Nullable(Of System.Boolean))
  name.vb: Delete(IFileSystemOperations, String, String, Nullable(Of Boolean))
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  id: DeleteAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: DeleteAsync(IFileSystemOperations, String, String, Nullable<Boolean>, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: DeleteAsync
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 983
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nDeletes the requested file or directory, optionally recursively.\n"
  example: []
  syntax:
    content: public static Task<FileOperationResult> DeleteAsync(this IFileSystemOperations operations, string accountName, string filePath, bool ? recursive = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteAsync(operations As IFileSystemOperations, accountName As String, filePath As String, recursive As Boolean? = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of FileOperationResult)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: filePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or directory to\ndelete.\n"
    - id: recursive
      type: System.Nullable{System.Boolean}
      description: "\nThe optional switch indicating if the delete should be recursive\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: DeleteAsync(IFileSystemOperations, String, String, Nullable(Of Boolean), CancellationToken)
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Rename(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Rename(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)
  id: Rename(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: Rename(IFileSystemOperations, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Rename(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Rename
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 1007
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nRename a file or directory.\n"
  example: []
  syntax:
    content: public static FileOperationResult Rename(this IFileSystemOperations operations, string accountName, string renameFilePath, string destination)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Rename(operations As IFileSystemOperations, accountName As String, renameFilePath As String, destination As String) As FileOperationResult
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: renameFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or directory to\nmove/rename.\n"
    - id: destination
      type: System.String
      description: "\nThe path to move/rename the file or folder to\n"
    return:
      type: Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RenameAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RenameAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: RenameAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: RenameAsync(IFileSystemOperations, String, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RenameAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: RenameAsync
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 1031
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nRename a file or directory.\n"
  example: []
  syntax:
    content: public static Task<FileOperationResult> RenameAsync(this IFileSystemOperations operations, string accountName, string renameFilePath, string destination, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RenameAsync(operations As IFileSystemOperations, accountName As String, renameFilePath As String, destination As String, cancellationToken As CancellationToken = Nothing) As Task(Of FileOperationResult)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: renameFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or directory to\nmove/rename.\n"
    - id: destination
      type: System.String
      description: "\nThe path to move/rename the file or folder to\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetOwner(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetOwner(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.String)
  id: SetOwner(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: SetOwner(IFileSystemOperations, String, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetOwner(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: SetOwner
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 1060
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nSets the owner of a file or directory.\n"
  example: []
  syntax:
    content: public static void SetOwner(this IFileSystemOperations operations, string accountName, string setOwnerFilePath, string owner = null, string group = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub SetOwner(operations As IFileSystemOperations, accountName As String, setOwnerFilePath As String, owner As String = Nothing, group As String = Nothing)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: setOwnerFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or directory for\nwhich to set the owner.\n"
    - id: owner
      type: System.String
      description: "\nThe AAD Object ID of the user owner of the file or directory. If empty,\nthe property will remain unchanged.\n"
    - id: group
      type: System.String
      description: "\nThe AAD Object ID of the group owner of the file or directory. If empty,\nthe property will remain unchanged.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetOwnerAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetOwnerAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: SetOwnerAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: SetOwnerAsync(IFileSystemOperations, String, String, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetOwnerAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: SetOwnerAsync
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 1089
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nSets the owner of a file or directory.\n"
  example: []
  syntax:
    content: public static Task SetOwnerAsync(this IFileSystemOperations operations, string accountName, string setOwnerFilePath, string owner = null, string group = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetOwnerAsync(operations As IFileSystemOperations, accountName As String, setOwnerFilePath As String, owner As String = Nothing, group As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: setOwnerFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or directory for\nwhich to set the owner.\n"
    - id: owner
      type: System.String
      description: "\nThe AAD Object ID of the user owner of the file or directory. If empty,\nthe property will remain unchanged.\n"
    - id: group
      type: System.String
      description: "\nThe AAD Object ID of the group owner of the file or directory. If empty,\nthe property will remain unchanged.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetPermission(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetPermission(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)
  id: SetPermission(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: SetPermission(IFileSystemOperations, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetPermission(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: SetPermission
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 1111
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nSets the permission of the file or folder.\n"
  example: []
  syntax:
    content: public static void SetPermission(this IFileSystemOperations operations, string accountName, string setPermissionFilePath, string permission = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub SetPermission(operations As IFileSystemOperations, accountName As String, setPermissionFilePath As String, permission As String = Nothing)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: setPermissionFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or directory for\nwhich to set the permission.\n"
    - id: permission
      type: System.String
      description: "\nA string representation of the permission (i.e 'rwx'). If empty, this\nproperty remains unchanged.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetPermissionAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetPermissionAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: SetPermissionAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions
  langs:
  - csharp
  - vb
  name: SetPermissionAsync(IFileSystemOperations, String, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetPermissionAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations, System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: SetPermissionAsync
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/FileSystemOperationsExtensions.cs
    startLine: 1136
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nSets the permission of the file or folder.\n"
  example: []
  syntax:
    content: public static Task SetPermissionAsync(this IFileSystemOperations operations, string accountName, string setPermissionFilePath, string permission = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetPermissionAsync(operations As IFileSystemOperations, accountName As String, setPermissionFilePath As String, permission As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
      description: "\nThe operations group for this extension method.\n"
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: setPermissionFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or directory for\nwhich to set the permission.\n"
    - id: permission
      type: System.String
      description: "\nA string representation of the permission (i.e 'rwx'). If empty, this\nproperty remains unchanged.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.Management.DataLake.Store
  isExternal: false
  name: Microsoft.Azure.Management.DataLake.Store
  fullName: Microsoft.Azure.Management.DataLake.Store
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
  parent: Microsoft.Azure.Management.DataLake.Store
  isExternal: false
  name: IFileSystemOperations
  fullName: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  fullname.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  fullName: System.IO.Stream
- uid: System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType}
  parent: System
  definition: System.Nullable`1
  name: Nullable<AppendModeType>
  fullName: System.Nullable<Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType>
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType)
  name.vb: Nullable(Of AppendModeType)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType
    name: AppendModeType
    fullName: Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType
    name: AppendModeType
    fullName: Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType
  - name: )
    fullName: )
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType
  parent: Microsoft.Azure.Management.DataLake.Store.Models
  isExternal: false
  name: ExpiryOptionType
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType
- uid: System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  fullname.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.Store.Models
  isExternal: false
  name: Microsoft.Azure.Management.DataLake.Store.Models
  fullName: Microsoft.Azure.Management.DataLake.Store.Models
- uid: Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult
  parent: Microsoft.Azure.Management.DataLake.Store.Models
  isExternal: false
  name: FileOperationResult
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<FileOperationResult>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult)
  name.vb: Task(Of FileOperationResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult
    name: FileOperationResult
    fullName: Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult
    name: FileOperationResult
    fullName: Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: true
  name: IList<T>
  fullName: System.Collections.Generic.IList<T>
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.Store.Models.FileStatusesResult
  parent: Microsoft.Azure.Management.DataLake.Store.Models
  isExternal: false
  name: FileStatusesResult
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.FileStatusesResult
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.DataLake.Store.Models.FileStatusesResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<FileStatusesResult>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.DataLake.Store.Models.FileStatusesResult>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.DataLake.Store.Models.FileStatusesResult)
  name.vb: Task(Of FileStatusesResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.Store.Models.FileStatusesResult
    name: FileStatusesResult
    fullName: Microsoft.Azure.Management.DataLake.Store.Models.FileStatusesResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.Store.Models.FileStatusesResult
    name: FileStatusesResult
    fullName: Microsoft.Azure.Management.DataLake.Store.Models.FileStatusesResult
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.Store.Models.ContentSummaryResult
  parent: Microsoft.Azure.Management.DataLake.Store.Models
  isExternal: false
  name: ContentSummaryResult
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.ContentSummaryResult
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.DataLake.Store.Models.ContentSummaryResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ContentSummaryResult>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.DataLake.Store.Models.ContentSummaryResult>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.DataLake.Store.Models.ContentSummaryResult)
  name.vb: Task(Of ContentSummaryResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.Store.Models.ContentSummaryResult
    name: ContentSummaryResult
    fullName: Microsoft.Azure.Management.DataLake.Store.Models.ContentSummaryResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.Store.Models.ContentSummaryResult
    name: ContentSummaryResult
    fullName: Microsoft.Azure.Management.DataLake.Store.Models.ContentSummaryResult
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.Store.Models.FileStatusResult
  parent: Microsoft.Azure.Management.DataLake.Store.Models
  isExternal: false
  name: FileStatusResult
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.FileStatusResult
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.DataLake.Store.Models.FileStatusResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<FileStatusResult>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.DataLake.Store.Models.FileStatusResult>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.DataLake.Store.Models.FileStatusResult)
  name.vb: Task(Of FileStatusResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.Store.Models.FileStatusResult
    name: FileStatusResult
    fullName: Microsoft.Azure.Management.DataLake.Store.Models.FileStatusResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.Store.Models.FileStatusResult
    name: FileStatusResult
    fullName: Microsoft.Azure.Management.DataLake.Store.Models.FileStatusResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.IO.Stream}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Stream>
  fullName: System.Threading.Tasks.Task<System.IO.Stream>
  fullname.vb: System.Threading.Tasks.Task(Of System.IO.Stream)
  name.vb: Task(Of Stream)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.Store.Models.AclStatusResult
  parent: Microsoft.Azure.Management.DataLake.Store.Models
  isExternal: false
  name: AclStatusResult
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.AclStatusResult
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.DataLake.Store.Models.AclStatusResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AclStatusResult>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.DataLake.Store.Models.AclStatusResult>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.DataLake.Store.Models.AclStatusResult)
  name.vb: Task(Of AclStatusResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.Store.Models.AclStatusResult
    name: AclStatusResult
    fullName: Microsoft.Azure.Management.DataLake.Store.Models.AclStatusResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.Store.Models.AclStatusResult
    name: AclStatusResult
    fullName: Microsoft.Azure.Management.DataLake.Store.Models.AclStatusResult
  - name: )
    fullName: )
