items:
- uid: Microsoft.Azure.Management.Fluent.Storage.IStorageAccount
  commentId: T:Microsoft.Azure.Management.Fluent.Storage.IStorageAccount
  id: IStorageAccount
  parent: Microsoft.Azure.Management.Fluent.Storage
  children:
  - Microsoft.Azure.Management.Fluent.Storage.IStorageAccount.AccessTier
  - Microsoft.Azure.Management.Fluent.Storage.IStorageAccount.AccountStatuses
  - Microsoft.Azure.Management.Fluent.Storage.IStorageAccount.CreationTime
  - Microsoft.Azure.Management.Fluent.Storage.IStorageAccount.CustomDomain
  - Microsoft.Azure.Management.Fluent.Storage.IStorageAccount.Encryption
  - Microsoft.Azure.Management.Fluent.Storage.IStorageAccount.EndPoints
  - Microsoft.Azure.Management.Fluent.Storage.IStorageAccount.GetKeys
  - Microsoft.Azure.Management.Fluent.Storage.IStorageAccount.Kind
  - Microsoft.Azure.Management.Fluent.Storage.IStorageAccount.LastGeoFailoverTime
  - Microsoft.Azure.Management.Fluent.Storage.IStorageAccount.ProvisioningState
  - Microsoft.Azure.Management.Fluent.Storage.IStorageAccount.RegenerateKey(System.String)
  - Microsoft.Azure.Management.Fluent.Storage.IStorageAccount.Sku
  langs:
  - csharp
  - vb
  name: IStorageAccount
  fullName: Microsoft.Azure.Management.Fluent.Storage.IStorageAccount
  type: Interface
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Fluent.Storage/Domain/IStorageAccount.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IStorageAccount
    path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Fluent.Storage/Domain/IStorageAccount.cs
    startLine: 14
  assemblies:
  - Microsoft.Azure.Management.Fluent.Storage
  packages:
  - Microsoft.Azure.Management.Fluent.Storage(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Storage
  summary: "\nAn immutable client-side representation of an Azure storage account.\n"
  example: []
  syntax:
    content: 'public interface IStorageAccount : IGroupableResource, IRefreshable<IStorageAccount>, IUpdatable<IUpdate>, IWrapper<StorageAccountInner>'
    content.vb: >-
      Public Interface IStorageAccount
          Inherits IGroupableResource, IRefreshable(Of IStorageAccount), IUpdatable(Of IUpdate), IWrapper(Of StorageAccountInner)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Azure.Management.Fluent.Storage.IStorageAccount.AccountStatuses
  commentId: P:Microsoft.Azure.Management.Fluent.Storage.IStorageAccount.AccountStatuses
  id: AccountStatuses
  parent: Microsoft.Azure.Management.Fluent.Storage.IStorageAccount
  langs:
  - csharp
  - vb
  name: AccountStatuses
  fullName: Microsoft.Azure.Management.Fluent.Storage.IStorageAccount.AccountStatuses
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Fluent.Storage/Domain/IStorageAccount.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AccountStatuses
    path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Fluent.Storage/Domain/IStorageAccount.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Management.Fluent.Storage
  packages:
  - Microsoft.Azure.Management.Fluent.Storage(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Storage
  example: []
  syntax:
    content: AccountStatuses AccountStatuses { get; }
    content.vb: ReadOnly Property AccountStatuses As AccountStatuses
    parameters: []
    return:
      type: Microsoft.Azure.Management.Fluent.Storage.AccountStatuses
      description: the status indicating whether the primary and secondary location of
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Storage.IStorageAccount.Sku
  commentId: P:Microsoft.Azure.Management.Fluent.Storage.IStorageAccount.Sku
  id: Sku
  parent: Microsoft.Azure.Management.Fluent.Storage.IStorageAccount
  langs:
  - csharp
  - vb
  name: Sku
  fullName: Microsoft.Azure.Management.Fluent.Storage.IStorageAccount.Sku
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Fluent.Storage/Domain/IStorageAccount.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Sku
    path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Fluent.Storage/Domain/IStorageAccount.cs
    startLine: 28
  assemblies:
  - Microsoft.Azure.Management.Fluent.Storage
  packages:
  - Microsoft.Azure.Management.Fluent.Storage(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Storage
  example: []
  syntax:
    content: Sku Sku { get; }
    content.vb: ReadOnly Property Sku As Sku
    parameters: []
    return:
      type: Microsoft.Azure.Management.Storage.Models.Sku
      description: 'the sku of this storage account. Possible names include:'
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Storage.IStorageAccount.Kind
  commentId: P:Microsoft.Azure.Management.Fluent.Storage.IStorageAccount.Kind
  id: Kind
  parent: Microsoft.Azure.Management.Fluent.Storage.IStorageAccount
  langs:
  - csharp
  - vb
  name: Kind
  fullName: Microsoft.Azure.Management.Fluent.Storage.IStorageAccount.Kind
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Fluent.Storage/Domain/IStorageAccount.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Kind
    path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Fluent.Storage/Domain/IStorageAccount.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Management.Fluent.Storage
  packages:
  - Microsoft.Azure.Management.Fluent.Storage(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Storage
  example: []
  syntax:
    content: Kind? Kind { get; }
    content.vb: ReadOnly Property Kind As Kind?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.Storage.Models.Kind}
      description: the kind of the storage account. Possible values are 'Storage',
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Storage.IStorageAccount.CreationTime
  commentId: P:Microsoft.Azure.Management.Fluent.Storage.IStorageAccount.CreationTime
  id: CreationTime
  parent: Microsoft.Azure.Management.Fluent.Storage.IStorageAccount
  langs:
  - csharp
  - vb
  name: CreationTime
  fullName: Microsoft.Azure.Management.Fluent.Storage.IStorageAccount.CreationTime
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Fluent.Storage/Domain/IStorageAccount.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreationTime
    path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Fluent.Storage/Domain/IStorageAccount.cs
    startLine: 35
  assemblies:
  - Microsoft.Azure.Management.Fluent.Storage
  packages:
  - Microsoft.Azure.Management.Fluent.Storage(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Storage
  example: []
  syntax:
    content: DateTime? CreationTime { get; }
    content.vb: ReadOnly Property CreationTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
      description: the creation date and time of the storage account in UTC
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Storage.IStorageAccount.CustomDomain
  commentId: P:Microsoft.Azure.Management.Fluent.Storage.IStorageAccount.CustomDomain
  id: CustomDomain
  parent: Microsoft.Azure.Management.Fluent.Storage.IStorageAccount
  langs:
  - csharp
  - vb
  name: CustomDomain
  fullName: Microsoft.Azure.Management.Fluent.Storage.IStorageAccount.CustomDomain
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Fluent.Storage/Domain/IStorageAccount.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CustomDomain
    path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Fluent.Storage/Domain/IStorageAccount.cs
    startLine: 38
  assemblies:
  - Microsoft.Azure.Management.Fluent.Storage
  packages:
  - Microsoft.Azure.Management.Fluent.Storage(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Storage
  example: []
  syntax:
    content: CustomDomain CustomDomain { get; }
    content.vb: ReadOnly Property CustomDomain As CustomDomain
    parameters: []
    return:
      type: Microsoft.Azure.Management.Storage.Models.CustomDomain
      description: the user assigned custom domain assigned to this storage account
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Storage.IStorageAccount.LastGeoFailoverTime
  commentId: P:Microsoft.Azure.Management.Fluent.Storage.IStorageAccount.LastGeoFailoverTime
  id: LastGeoFailoverTime
  parent: Microsoft.Azure.Management.Fluent.Storage.IStorageAccount
  langs:
  - csharp
  - vb
  name: LastGeoFailoverTime
  fullName: Microsoft.Azure.Management.Fluent.Storage.IStorageAccount.LastGeoFailoverTime
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Fluent.Storage/Domain/IStorageAccount.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LastGeoFailoverTime
    path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Fluent.Storage/Domain/IStorageAccount.cs
    startLine: 44
  assemblies:
  - Microsoft.Azure.Management.Fluent.Storage
  packages:
  - Microsoft.Azure.Management.Fluent.Storage(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Storage
  example: []
  syntax:
    content: DateTime? LastGeoFailoverTime { get; }
    content.vb: ReadOnly Property LastGeoFailoverTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
      description: the timestamp of the most recent instance of a failover to the
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Storage.IStorageAccount.ProvisioningState
  commentId: P:Microsoft.Azure.Management.Fluent.Storage.IStorageAccount.ProvisioningState
  id: ProvisioningState
  parent: Microsoft.Azure.Management.Fluent.Storage.IStorageAccount
  langs:
  - csharp
  - vb
  name: ProvisioningState
  fullName: Microsoft.Azure.Management.Fluent.Storage.IStorageAccount.ProvisioningState
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Fluent.Storage/Domain/IStorageAccount.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ProvisioningState
    path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Fluent.Storage/Domain/IStorageAccount.cs
    startLine: 49
  assemblies:
  - Microsoft.Azure.Management.Fluent.Storage
  packages:
  - Microsoft.Azure.Management.Fluent.Storage(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Storage
  example: []
  syntax:
    content: ProvisioningState? ProvisioningState { get; }
    content.vb: ReadOnly Property ProvisioningState As ProvisioningState?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.Storage.Models.ProvisioningState}
      description: the status of the storage account at the time the operation was
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Storage.IStorageAccount.EndPoints
  commentId: P:Microsoft.Azure.Management.Fluent.Storage.IStorageAccount.EndPoints
  id: EndPoints
  parent: Microsoft.Azure.Management.Fluent.Storage.IStorageAccount
  langs:
  - csharp
  - vb
  name: EndPoints
  fullName: Microsoft.Azure.Management.Fluent.Storage.IStorageAccount.EndPoints
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Fluent.Storage/Domain/IStorageAccount.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EndPoints
    path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Fluent.Storage/Domain/IStorageAccount.cs
    startLine: 54
  assemblies:
  - Microsoft.Azure.Management.Fluent.Storage
  packages:
  - Microsoft.Azure.Management.Fluent.Storage(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Storage
  example: []
  syntax:
    content: PublicEndpoints EndPoints { get; }
    content.vb: ReadOnly Property EndPoints As PublicEndpoints
    parameters: []
    return:
      type: Microsoft.Azure.Management.Fluent.Storage.PublicEndpoints
      description: the URLs that are used to perform a retrieval of a public blob,
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Storage.IStorageAccount.Encryption
  commentId: P:Microsoft.Azure.Management.Fluent.Storage.IStorageAccount.Encryption
  id: Encryption
  parent: Microsoft.Azure.Management.Fluent.Storage.IStorageAccount
  langs:
  - csharp
  - vb
  name: Encryption
  fullName: Microsoft.Azure.Management.Fluent.Storage.IStorageAccount.Encryption
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Fluent.Storage/Domain/IStorageAccount.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Encryption
    path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Fluent.Storage/Domain/IStorageAccount.cs
    startLine: 58
  assemblies:
  - Microsoft.Azure.Management.Fluent.Storage
  packages:
  - Microsoft.Azure.Management.Fluent.Storage(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Storage
  example: []
  syntax:
    content: Encryption Encryption { get; }
    content.vb: ReadOnly Property Encryption As Encryption
    parameters: []
    return:
      type: Microsoft.Azure.Management.Storage.Models.Encryption
      description: the encryption settings on the account. If unspecified the account
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Storage.IStorageAccount.AccessTier
  commentId: P:Microsoft.Azure.Management.Fluent.Storage.IStorageAccount.AccessTier
  id: AccessTier
  parent: Microsoft.Azure.Management.Fluent.Storage.IStorageAccount
  langs:
  - csharp
  - vb
  name: AccessTier
  fullName: Microsoft.Azure.Management.Fluent.Storage.IStorageAccount.AccessTier
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Fluent.Storage/Domain/IStorageAccount.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AccessTier
    path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Fluent.Storage/Domain/IStorageAccount.cs
    startLine: 64
  assemblies:
  - Microsoft.Azure.Management.Fluent.Storage
  packages:
  - Microsoft.Azure.Management.Fluent.Storage(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Storage
  example: []
  syntax:
    content: AccessTier? AccessTier { get; }
    content.vb: ReadOnly Property AccessTier As AccessTier?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.Storage.Models.AccessTier}
      description: access tier used for billing. Access tier cannot be changed more
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Storage.IStorageAccount.GetKeys
  commentId: M:Microsoft.Azure.Management.Fluent.Storage.IStorageAccount.GetKeys
  id: GetKeys
  parent: Microsoft.Azure.Management.Fluent.Storage.IStorageAccount
  langs:
  - csharp
  - vb
  name: GetKeys()
  fullName: Microsoft.Azure.Management.Fluent.Storage.IStorageAccount.GetKeys()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Fluent.Storage/Domain/IStorageAccount.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetKeys
    path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Fluent.Storage/Domain/IStorageAccount.cs
    startLine: 70
  assemblies:
  - Microsoft.Azure.Management.Fluent.Storage
  packages:
  - Microsoft.Azure.Management.Fluent.Storage(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Storage
  summary: "\nFetch the up-to-date access keys from Azure for this storage account.\n"
  example: []
  syntax:
    content: IList<StorageAccountKey> GetKeys()
    content.vb: Function GetKeys As IList(Of StorageAccountKey)
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.StorageAccountKey}
      description: the access keys for this storage account
- uid: Microsoft.Azure.Management.Fluent.Storage.IStorageAccount.RegenerateKey(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Storage.IStorageAccount.RegenerateKey(System.String)
  id: RegenerateKey(System.String)
  parent: Microsoft.Azure.Management.Fluent.Storage.IStorageAccount
  langs:
  - csharp
  - vb
  name: RegenerateKey(String)
  fullName: Microsoft.Azure.Management.Fluent.Storage.IStorageAccount.RegenerateKey(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Fluent.Storage/Domain/IStorageAccount.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RegenerateKey
    path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Fluent.Storage/Domain/IStorageAccount.cs
    startLine: 77
  assemblies:
  - Microsoft.Azure.Management.Fluent.Storage
  packages:
  - Microsoft.Azure.Management.Fluent.Storage(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Storage
  summary: "\nRegenerates the access keys for this storage account.\n"
  example: []
  syntax:
    content: IList<StorageAccountKey> RegenerateKey(string keyName)
    content.vb: Function RegenerateKey(keyName As String) As IList(Of StorageAccountKey)
    parameters:
    - id: keyName
      type: System.String
      description: keyName if the key name
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.StorageAccountKey}
      description: the generated access keys for this storage account
references:
- uid: Microsoft.Azure.Management.Fluent.Storage
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Storage
  fullName: Microsoft.Azure.Management.Fluent.Storage
- uid: Microsoft.Azure.Management.Fluent.Storage.AccountStatuses
  parent: Microsoft.Azure.Management.Fluent.Storage
  isExternal: false
  name: AccountStatuses
  fullName: Microsoft.Azure.Management.Fluent.Storage.AccountStatuses
- uid: Microsoft.Azure.Management.Storage.Models.Sku
  parent: Microsoft.Azure.Management.Storage.Models
  isExternal: false
  name: Sku
  fullName: Microsoft.Azure.Management.Storage.Models.Sku
- uid: Microsoft.Azure.Management.Storage.Models
  isExternal: false
  name: Microsoft.Azure.Management.Storage.Models
  fullName: Microsoft.Azure.Management.Storage.Models
- uid: System.Nullable{Microsoft.Azure.Management.Storage.Models.Kind}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Kind>
  fullName: System.Nullable<Microsoft.Azure.Management.Storage.Models.Kind>
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.Storage.Models.Kind)
  name.vb: Nullable(Of Kind)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Storage.Models.Kind
    name: Kind
    fullName: Microsoft.Azure.Management.Storage.Models.Kind
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Storage.Models.Kind
    name: Kind
    fullName: Microsoft.Azure.Management.Storage.Models.Kind
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Storage.Models.CustomDomain
  parent: Microsoft.Azure.Management.Storage.Models
  isExternal: false
  name: CustomDomain
  fullName: Microsoft.Azure.Management.Storage.Models.CustomDomain
- uid: System.Nullable{Microsoft.Azure.Management.Storage.Models.ProvisioningState}
  parent: System
  definition: System.Nullable`1
  name: Nullable<ProvisioningState>
  fullName: System.Nullable<Microsoft.Azure.Management.Storage.Models.ProvisioningState>
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.Storage.Models.ProvisioningState)
  name.vb: Nullable(Of ProvisioningState)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Storage.Models.ProvisioningState
    name: ProvisioningState
    fullName: Microsoft.Azure.Management.Storage.Models.ProvisioningState
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Storage.Models.ProvisioningState
    name: ProvisioningState
    fullName: Microsoft.Azure.Management.Storage.Models.ProvisioningState
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Storage.PublicEndpoints
  parent: Microsoft.Azure.Management.Fluent.Storage
  isExternal: false
  name: PublicEndpoints
  fullName: Microsoft.Azure.Management.Fluent.Storage.PublicEndpoints
- uid: Microsoft.Azure.Management.Storage.Models.Encryption
  parent: Microsoft.Azure.Management.Storage.Models
  isExternal: false
  name: Encryption
  fullName: Microsoft.Azure.Management.Storage.Models.Encryption
- uid: System.Nullable{Microsoft.Azure.Management.Storage.Models.AccessTier}
  parent: System
  definition: System.Nullable`1
  name: Nullable<AccessTier>
  fullName: System.Nullable<Microsoft.Azure.Management.Storage.Models.AccessTier>
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.Storage.Models.AccessTier)
  name.vb: Nullable(Of AccessTier)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Storage.Models.AccessTier
    name: AccessTier
    fullName: Microsoft.Azure.Management.Storage.Models.AccessTier
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Storage.Models.AccessTier
    name: AccessTier
    fullName: Microsoft.Azure.Management.Storage.Models.AccessTier
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.StorageAccountKey}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<StorageAccountKey>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Storage.Models.StorageAccountKey>
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Storage.Models.StorageAccountKey)
  name.vb: IList(Of StorageAccountKey)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Storage.Models.StorageAccountKey
    name: StorageAccountKey
    fullName: Microsoft.Azure.Management.Storage.Models.StorageAccountKey
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Storage.Models.StorageAccountKey
    name: StorageAccountKey
    fullName: Microsoft.Azure.Management.Storage.Models.StorageAccountKey
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: true
  name: IList<T>
  fullName: System.Collections.Generic.IList<T>
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
