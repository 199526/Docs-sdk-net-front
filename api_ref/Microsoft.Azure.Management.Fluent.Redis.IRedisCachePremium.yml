items:
- uid: Microsoft.Azure.Management.Fluent.Redis.IRedisCachePremium
  commentId: T:Microsoft.Azure.Management.Fluent.Redis.IRedisCachePremium
  id: IRedisCachePremium
  parent: Microsoft.Azure.Management.Fluent.Redis
  children:
  - Microsoft.Azure.Management.Fluent.Redis.IRedisCachePremium.DeletePatchSchedule
  - Microsoft.Azure.Management.Fluent.Redis.IRedisCachePremium.ExportData(System.String,System.String)
  - Microsoft.Azure.Management.Fluent.Redis.IRedisCachePremium.ExportData(System.String,System.String,System.String)
  - Microsoft.Azure.Management.Fluent.Redis.IRedisCachePremium.ForceReboot(System.String)
  - Microsoft.Azure.Management.Fluent.Redis.IRedisCachePremium.ForceReboot(System.String,System.Int32)
  - Microsoft.Azure.Management.Fluent.Redis.IRedisCachePremium.GetPatchSchedules
  - Microsoft.Azure.Management.Fluent.Redis.IRedisCachePremium.ImportData(System.Collections.Generic.IList{System.String})
  - Microsoft.Azure.Management.Fluent.Redis.IRedisCachePremium.ImportData(System.Collections.Generic.IList{System.String},System.String)
  langs:
  - csharp
  - vb
  name: IRedisCachePremium
  fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisCachePremium
  type: Interface
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Domain/IRedisCachePremium.cs
      branch: b5400192ce8d5df11f466ed2ca49a6bb436c128e
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IRedisCachePremium
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Domain/IRedisCachePremium.cs
    startLine: 10
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nAn immutable client-side representation of an Azure Redis cache with Premium SKU.\n"
  example: []
  syntax:
    content: 'public interface IRedisCachePremium : IRedisCache, IGroupableResource, IRefreshable<IRedisCache>, IUpdatable<IUpdate>, IWrapper<RedisResourceInner>'
    content.vb: >-
      Public Interface IRedisCachePremium
          Inherits IRedisCache
  inheritedMembers:
  - Microsoft.Azure.Management.Fluent.Redis.IRedisCache.AsPremium
  - Microsoft.Azure.Management.Fluent.Redis.IRedisCache.IsPremium
  - Microsoft.Azure.Management.Fluent.Redis.IRedisCache.ProvisioningState
  - Microsoft.Azure.Management.Fluent.Redis.IRedisCache.HostName
  - Microsoft.Azure.Management.Fluent.Redis.IRedisCache.Port
  - Microsoft.Azure.Management.Fluent.Redis.IRedisCache.SslPort
  - Microsoft.Azure.Management.Fluent.Redis.IRedisCache.RedisVersion
  - Microsoft.Azure.Management.Fluent.Redis.IRedisCache.Sku
  - Microsoft.Azure.Management.Fluent.Redis.IRedisCache.RedisConfiguration
  - Microsoft.Azure.Management.Fluent.Redis.IRedisCache.NonSslPort
  - Microsoft.Azure.Management.Fluent.Redis.IRedisCache.ShardCount
  - Microsoft.Azure.Management.Fluent.Redis.IRedisCache.SubnetId
  - Microsoft.Azure.Management.Fluent.Redis.IRedisCache.StaticIP
  - Microsoft.Azure.Management.Fluent.Redis.IRedisCache.Keys
  - Microsoft.Azure.Management.Fluent.Redis.IRedisCache.RefreshKeys
  - Microsoft.Azure.Management.Fluent.Redis.IRedisCache.RegenerateKey(Microsoft.Azure.Management.Fluent.Redis.Models.RedisKeyType)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Azure.Management.Fluent.Redis.IRedisCachePremium.ForceReboot(System.String,System.Int32)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.IRedisCachePremium.ForceReboot(System.String,System.Int32)
  id: ForceReboot(System.String,System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Redis.IRedisCachePremium
  langs:
  - csharp
  - vb
  name: ForceReboot(String, Int32)
  fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisCachePremium.ForceReboot(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Domain/IRedisCachePremium.cs
      branch: b5400192ce8d5df11f466ed2ca49a6bb436c128e
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ForceReboot
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Domain/IRedisCachePremium.cs
    startLine: 19
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nReboot specified Redis node(s). This operation requires write permission to the cache resource. There can be potential data loss.\n"
  example: []
  syntax:
    content: void ForceReboot(string rebootType, int shardId)
    content.vb: Sub ForceReboot(rebootType As String, shardId As Integer)
    parameters:
    - id: rebootType
      type: System.String
      description: rebootType specifies which Redis node(s) to reboot. Depending on this value data loss is
    - id: shardId
      type: System.Int32
      description: shardId    In case of cluster cache, this specifies shard id which should be rebooted.
- uid: Microsoft.Azure.Management.Fluent.Redis.IRedisCachePremium.ForceReboot(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.IRedisCachePremium.ForceReboot(System.String)
  id: ForceReboot(System.String)
  parent: Microsoft.Azure.Management.Fluent.Redis.IRedisCachePremium
  langs:
  - csharp
  - vb
  name: ForceReboot(String)
  fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisCachePremium.ForceReboot(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Domain/IRedisCachePremium.cs
      branch: b5400192ce8d5df11f466ed2ca49a6bb436c128e
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ForceReboot
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Domain/IRedisCachePremium.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nReboot specified Redis node(s). This operation requires write permission to the cache resource. There can be potential data loss.\n"
  example: []
  syntax:
    content: void ForceReboot(string rebootType)
    content.vb: Sub ForceReboot(rebootType As String)
    parameters:
    - id: rebootType
      type: System.String
      description: rebootType specifies which Redis node(s) to reboot. Depending on this value data loss is
- uid: Microsoft.Azure.Management.Fluent.Redis.IRedisCachePremium.ImportData(System.Collections.Generic.IList{System.String},System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.IRedisCachePremium.ImportData(System.Collections.Generic.IList{System.String},System.String)
  id: ImportData(System.Collections.Generic.IList{System.String},System.String)
  parent: Microsoft.Azure.Management.Fluent.Redis.IRedisCachePremium
  langs:
  - csharp
  - vb
  name: ImportData(IList<String>, String)
  fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisCachePremium.ImportData(System.Collections.Generic.IList<System.String>, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Domain/IRedisCachePremium.cs
      branch: b5400192ce8d5df11f466ed2ca49a6bb436c128e
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ImportData
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Domain/IRedisCachePremium.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nImport data into Redis Cache.\n"
  example: []
  syntax:
    content: void ImportData(IList<string> files, string fileFormat)
    content.vb: Sub ImportData(files As IList(Of String), fileFormat As String)
    parameters:
    - id: files
      type: System.Collections.Generic.IList{System.String}
      description: files      files to import.
    - id: fileFormat
      type: System.String
      description: fileFormat specifies file format.
  fullName.vb: Microsoft.Azure.Management.Fluent.Redis.IRedisCachePremium.ImportData(System.Collections.Generic.IList(Of System.String), System.String)
  name.vb: ImportData(IList(Of String), String)
- uid: Microsoft.Azure.Management.Fluent.Redis.IRedisCachePremium.ImportData(System.Collections.Generic.IList{System.String})
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.IRedisCachePremium.ImportData(System.Collections.Generic.IList{System.String})
  id: ImportData(System.Collections.Generic.IList{System.String})
  parent: Microsoft.Azure.Management.Fluent.Redis.IRedisCachePremium
  langs:
  - csharp
  - vb
  name: ImportData(IList<String>)
  fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisCachePremium.ImportData(System.Collections.Generic.IList<System.String>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Domain/IRedisCachePremium.cs
      branch: b5400192ce8d5df11f466ed2ca49a6bb436c128e
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ImportData
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Domain/IRedisCachePremium.cs
    startLine: 39
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nImport data into Redis Cache.\n"
  example: []
  syntax:
    content: void ImportData(IList<string> files)
    content.vb: Sub ImportData(files As IList(Of String))
    parameters:
    - id: files
      type: System.Collections.Generic.IList{System.String}
      description: files files to import.
  fullName.vb: Microsoft.Azure.Management.Fluent.Redis.IRedisCachePremium.ImportData(System.Collections.Generic.IList(Of System.String))
  name.vb: ImportData(IList(Of String))
- uid: Microsoft.Azure.Management.Fluent.Redis.IRedisCachePremium.ExportData(System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.IRedisCachePremium.ExportData(System.String,System.String)
  id: ExportData(System.String,System.String)
  parent: Microsoft.Azure.Management.Fluent.Redis.IRedisCachePremium
  langs:
  - csharp
  - vb
  name: ExportData(String, String)
  fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisCachePremium.ExportData(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Domain/IRedisCachePremium.cs
      branch: b5400192ce8d5df11f466ed2ca49a6bb436c128e
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ExportData
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Domain/IRedisCachePremium.cs
    startLine: 46
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nExport data from Redis Cache.\n"
  example: []
  syntax:
    content: void ExportData(string containerSASUrl, string prefix)
    content.vb: Sub ExportData(containerSASUrl As String, prefix As String)
    parameters:
    - id: containerSASUrl
      type: System.String
      description: containerSASUrl container name to export to.
    - id: prefix
      type: System.String
      description: prefix          prefix to use for exported files.
- uid: Microsoft.Azure.Management.Fluent.Redis.IRedisCachePremium.ExportData(System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.IRedisCachePremium.ExportData(System.String,System.String,System.String)
  id: ExportData(System.String,System.String,System.String)
  parent: Microsoft.Azure.Management.Fluent.Redis.IRedisCachePremium
  langs:
  - csharp
  - vb
  name: ExportData(String, String, String)
  fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisCachePremium.ExportData(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Domain/IRedisCachePremium.cs
      branch: b5400192ce8d5df11f466ed2ca49a6bb436c128e
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ExportData
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Domain/IRedisCachePremium.cs
    startLine: 54
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nExport data from Redis Cache.\n"
  example: []
  syntax:
    content: void ExportData(string containerSASUrl, string prefix, string fileFormat)
    content.vb: Sub ExportData(containerSASUrl As String, prefix As String, fileFormat As String)
    parameters:
    - id: containerSASUrl
      type: System.String
      description: containerSASUrl container name to export to.
    - id: prefix
      type: System.String
      description: prefix          prefix to use for exported files.
    - id: fileFormat
      type: System.String
      description: fileFormat      specifies file format.
- uid: Microsoft.Azure.Management.Fluent.Redis.IRedisCachePremium.GetPatchSchedules
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.IRedisCachePremium.GetPatchSchedules
  id: GetPatchSchedules
  parent: Microsoft.Azure.Management.Fluent.Redis.IRedisCachePremium
  langs:
  - csharp
  - vb
  name: GetPatchSchedules()
  fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisCachePremium.GetPatchSchedules()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Domain/IRedisCachePremium.cs
      branch: b5400192ce8d5df11f466ed2ca49a6bb436c128e
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetPatchSchedules
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Domain/IRedisCachePremium.cs
    startLine: 60
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nGets the patching schedule for Redis Cache.\n"
  example: []
  syntax:
    content: IList<ScheduleEntry> GetPatchSchedules()
    content.vb: Function GetPatchSchedules As IList(Of ScheduleEntry)
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry}
      description: List of patch schedules for current Redis Cache.
- uid: Microsoft.Azure.Management.Fluent.Redis.IRedisCachePremium.DeletePatchSchedule
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.IRedisCachePremium.DeletePatchSchedule
  id: DeletePatchSchedule
  parent: Microsoft.Azure.Management.Fluent.Redis.IRedisCachePremium
  langs:
  - csharp
  - vb
  name: DeletePatchSchedule()
  fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisCachePremium.DeletePatchSchedule()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Domain/IRedisCachePremium.cs
      branch: b5400192ce8d5df11f466ed2ca49a6bb436c128e
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeletePatchSchedule
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Domain/IRedisCachePremium.cs
    startLine: 65
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nDeletes the patching schedule for Redis Cache.\n"
  example: []
  syntax:
    content: void DeletePatchSchedule()
    content.vb: Sub DeletePatchSchedule
references:
- uid: Microsoft.Azure.Management.Fluent.Redis
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Redis
  fullName: Microsoft.Azure.Management.Fluent.Redis
- uid: Microsoft.Azure.Management.Fluent.Redis.IRedisCache.AsPremium
  parent: Microsoft.Azure.Management.Fluent.Redis.IRedisCache
  isExternal: false
  name: AsPremium()
  fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisCache.AsPremium()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Redis.IRedisCache.AsPremium
    name: AsPremium
    fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisCache.AsPremium
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Redis.IRedisCache.AsPremium
    name: AsPremium
    fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisCache.AsPremium
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Redis.IRedisCache.IsPremium
  parent: Microsoft.Azure.Management.Fluent.Redis.IRedisCache
  isExternal: false
  name: IsPremium
  fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisCache.IsPremium
- uid: Microsoft.Azure.Management.Fluent.Redis.IRedisCache.ProvisioningState
  parent: Microsoft.Azure.Management.Fluent.Redis.IRedisCache
  isExternal: false
  name: ProvisioningState
  fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisCache.ProvisioningState
- uid: Microsoft.Azure.Management.Fluent.Redis.IRedisCache.HostName
  parent: Microsoft.Azure.Management.Fluent.Redis.IRedisCache
  isExternal: false
  name: HostName
  fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisCache.HostName
- uid: Microsoft.Azure.Management.Fluent.Redis.IRedisCache.Port
  parent: Microsoft.Azure.Management.Fluent.Redis.IRedisCache
  isExternal: false
  name: Port
  fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisCache.Port
- uid: Microsoft.Azure.Management.Fluent.Redis.IRedisCache.SslPort
  parent: Microsoft.Azure.Management.Fluent.Redis.IRedisCache
  isExternal: false
  name: SslPort
  fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisCache.SslPort
- uid: Microsoft.Azure.Management.Fluent.Redis.IRedisCache.RedisVersion
  parent: Microsoft.Azure.Management.Fluent.Redis.IRedisCache
  isExternal: false
  name: RedisVersion
  fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisCache.RedisVersion
- uid: Microsoft.Azure.Management.Fluent.Redis.IRedisCache.Sku
  parent: Microsoft.Azure.Management.Fluent.Redis.IRedisCache
  isExternal: false
  name: Sku
  fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisCache.Sku
- uid: Microsoft.Azure.Management.Fluent.Redis.IRedisCache.RedisConfiguration
  parent: Microsoft.Azure.Management.Fluent.Redis.IRedisCache
  isExternal: false
  name: RedisConfiguration
  fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisCache.RedisConfiguration
- uid: Microsoft.Azure.Management.Fluent.Redis.IRedisCache.NonSslPort
  parent: Microsoft.Azure.Management.Fluent.Redis.IRedisCache
  isExternal: false
  name: NonSslPort
  fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisCache.NonSslPort
- uid: Microsoft.Azure.Management.Fluent.Redis.IRedisCache.ShardCount
  parent: Microsoft.Azure.Management.Fluent.Redis.IRedisCache
  isExternal: false
  name: ShardCount
  fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisCache.ShardCount
- uid: Microsoft.Azure.Management.Fluent.Redis.IRedisCache.SubnetId
  parent: Microsoft.Azure.Management.Fluent.Redis.IRedisCache
  isExternal: false
  name: SubnetId
  fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisCache.SubnetId
- uid: Microsoft.Azure.Management.Fluent.Redis.IRedisCache.StaticIP
  parent: Microsoft.Azure.Management.Fluent.Redis.IRedisCache
  isExternal: false
  name: StaticIP
  fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisCache.StaticIP
- uid: Microsoft.Azure.Management.Fluent.Redis.IRedisCache.Keys
  parent: Microsoft.Azure.Management.Fluent.Redis.IRedisCache
  isExternal: false
  name: Keys()
  fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisCache.Keys()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Redis.IRedisCache.Keys
    name: Keys
    fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisCache.Keys
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Redis.IRedisCache.Keys
    name: Keys
    fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisCache.Keys
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Redis.IRedisCache.RefreshKeys
  parent: Microsoft.Azure.Management.Fluent.Redis.IRedisCache
  isExternal: false
  name: RefreshKeys()
  fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisCache.RefreshKeys()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Redis.IRedisCache.RefreshKeys
    name: RefreshKeys
    fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisCache.RefreshKeys
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Redis.IRedisCache.RefreshKeys
    name: RefreshKeys
    fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisCache.RefreshKeys
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Redis.IRedisCache.RegenerateKey(Microsoft.Azure.Management.Fluent.Redis.Models.RedisKeyType)
  parent: Microsoft.Azure.Management.Fluent.Redis.IRedisCache
  isExternal: false
  name: RegenerateKey(RedisKeyType)
  fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisCache.RegenerateKey(Microsoft.Azure.Management.Fluent.Redis.Models.RedisKeyType)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Redis.IRedisCache.RegenerateKey(Microsoft.Azure.Management.Fluent.Redis.Models.RedisKeyType)
    name: RegenerateKey
    fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisCache.RegenerateKey
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Redis.Models.RedisKeyType
    name: RedisKeyType
    fullName: Microsoft.Azure.Management.Fluent.Redis.Models.RedisKeyType
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Redis.IRedisCache.RegenerateKey(Microsoft.Azure.Management.Fluent.Redis.Models.RedisKeyType)
    name: RegenerateKey
    fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisCache.RegenerateKey
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Redis.Models.RedisKeyType
    name: RedisKeyType
    fullName: Microsoft.Azure.Management.Fluent.Redis.Models.RedisKeyType
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Redis.IRedisCache
  parent: Microsoft.Azure.Management.Fluent.Redis
  isExternal: false
  name: IRedisCache
  fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisCache
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: true
  name: IList<T>
  fullName: System.Collections.Generic.IList<T>
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ScheduleEntry>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry>
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry)
  name.vb: IList(Of ScheduleEntry)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry
    name: ScheduleEntry
    fullName: Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry
    name: ScheduleEntry
    fullName: Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry
  - name: )
    fullName: )
