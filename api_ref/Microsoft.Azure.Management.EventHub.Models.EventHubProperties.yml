items:
- uid: Microsoft.Azure.Management.EventHub.Models.EventHubProperties
  commentId: T:Microsoft.Azure.Management.EventHub.Models.EventHubProperties
  id: EventHubProperties
  parent: Microsoft.Azure.Management.EventHub.Models
  children:
  - Microsoft.Azure.Management.EventHub.Models.EventHubProperties.#ctor
  - Microsoft.Azure.Management.EventHub.Models.EventHubProperties.#ctor(System.Nullable{System.DateTime},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Collections.Generic.IList{System.Nullable{System.Int32}},System.Nullable{Microsoft.Azure.Management.EventHub.Models.EntityStatus},System.Nullable{System.DateTime})
  - Microsoft.Azure.Management.EventHub.Models.EventHubProperties.CreatedAt
  - Microsoft.Azure.Management.EventHub.Models.EventHubProperties.MessageRetentionInDays
  - Microsoft.Azure.Management.EventHub.Models.EventHubProperties.PartitionCount
  - Microsoft.Azure.Management.EventHub.Models.EventHubProperties.PartitionIds
  - Microsoft.Azure.Management.EventHub.Models.EventHubProperties.Status
  - Microsoft.Azure.Management.EventHub.Models.EventHubProperties.UpdatedAt
  langs:
  - csharp
  - vb
  name: EventHubProperties
  fullName: Microsoft.Azure.Management.EventHub.Models.EventHubProperties
  type: Class
  source:
    remote:
      path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/Models/EventHubProperties.cs
      branch: 7102889aafab03345c2d03ebaa4f387e5e2db8d9
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EventHubProperties
    path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/Models/EventHubProperties.cs
    startLine: 18
  assemblies:
  - Microsoft.Azure.Management.EventHub
  packages:
  - Microsoft.Azure.Management.EventHub(0.0.1-preview)
  namespace: Microsoft.Azure.Management.EventHub.Models
  syntax:
    content: public class EventHubProperties
    content.vb: Public Class EventHubProperties
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.EventHub.Models.EventHubProperties.#ctor
  commentId: M:Microsoft.Azure.Management.EventHub.Models.EventHubProperties.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.EventHub.Models.EventHubProperties
  langs:
  - csharp
  - vb
  name: EventHubProperties()
  fullName: Microsoft.Azure.Management.EventHub.Models.EventHubProperties.EventHubProperties()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/Models/EventHubProperties.cs
      branch: 7102889aafab03345c2d03ebaa4f387e5e2db8d9
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/Models/EventHubProperties.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Management.EventHub
  packages:
  - Microsoft.Azure.Management.EventHub(0.0.1-preview)
  namespace: Microsoft.Azure.Management.EventHub.Models
  summary: "\nInitializes a new instance of the EventHubProperties class.\n"
  example: []
  syntax:
    content: public EventHubProperties()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.EventHub.Models.EventHubProperties.#ctor(System.Nullable{System.DateTime},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Collections.Generic.IList{System.Nullable{System.Int32}},System.Nullable{Microsoft.Azure.Management.EventHub.Models.EntityStatus},System.Nullable{System.DateTime})
  commentId: M:Microsoft.Azure.Management.EventHub.Models.EventHubProperties.#ctor(System.Nullable{System.DateTime},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Collections.Generic.IList{System.Nullable{System.Int32}},System.Nullable{Microsoft.Azure.Management.EventHub.Models.EntityStatus},System.Nullable{System.DateTime})
  id: '#ctor(System.Nullable{System.DateTime},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Collections.Generic.IList{System.Nullable{System.Int32}},System.Nullable{Microsoft.Azure.Management.EventHub.Models.EntityStatus},System.Nullable{System.DateTime})'
  parent: Microsoft.Azure.Management.EventHub.Models.EventHubProperties
  langs:
  - csharp
  - vb
  name: EventHubProperties(Nullable<DateTime>, Nullable<Int64>, Nullable<Int64>, IList<Nullable<Int32>>, Nullable<EntityStatus>, Nullable<DateTime>)
  fullName: Microsoft.Azure.Management.EventHub.Models.EventHubProperties.EventHubProperties(System.Nullable<System.DateTime>, System.Nullable<System.Int64>, System.Nullable<System.Int64>, System.Collections.Generic.IList<System.Nullable<System.Int32>>, System.Nullable<Microsoft.Azure.Management.EventHub.Models.EntityStatus>, System.Nullable<System.DateTime>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/Models/EventHubProperties.cs
      branch: 7102889aafab03345c2d03ebaa4f387e5e2db8d9
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/Models/EventHubProperties.cs
    startLine: 28
  assemblies:
  - Microsoft.Azure.Management.EventHub
  packages:
  - Microsoft.Azure.Management.EventHub(0.0.1-preview)
  namespace: Microsoft.Azure.Management.EventHub.Models
  summary: "\nInitializes a new instance of the EventHubProperties class.\n"
  example: []
  syntax:
    content: public EventHubProperties(DateTime? createdAt = null, long ? messageRetentionInDays = null, long ? partitionCount = null, IList<int ? > partitionIds = null, EntityStatus? status = null, DateTime? updatedAt = null)
    content.vb: Public Sub New(createdAt As Date? = Nothing, messageRetentionInDays As Long? = Nothing, partitionCount As Long? = Nothing, partitionIds As IList(Of Integer?) = Nothing, status As EntityStatus? = Nothing, updatedAt As Date? = Nothing)
    parameters:
    - id: createdAt
      type: System.Nullable{System.DateTime}
    - id: messageRetentionInDays
      type: System.Nullable{System.Int64}
    - id: partitionCount
      type: System.Nullable{System.Int64}
    - id: partitionIds
      type: System.Collections.Generic.IList{System.Nullable{System.Int32}}
    - id: status
      type: System.Nullable{Microsoft.Azure.Management.EventHub.Models.EntityStatus}
    - id: updatedAt
      type: System.Nullable{System.DateTime}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.EventHub.Models.EventHubProperties.EventHubProperties(System.Nullable(Of System.DateTime), System.Nullable(Of System.Int64), System.Nullable(Of System.Int64), System.Collections.Generic.IList(Of System.Nullable(Of System.Int32)), System.Nullable(Of Microsoft.Azure.Management.EventHub.Models.EntityStatus), System.Nullable(Of System.DateTime))
  name.vb: EventHubProperties(Nullable(Of DateTime), Nullable(Of Int64), Nullable(Of Int64), IList(Of Nullable(Of Int32)), Nullable(Of EntityStatus), Nullable(Of DateTime))
- uid: Microsoft.Azure.Management.EventHub.Models.EventHubProperties.CreatedAt
  commentId: P:Microsoft.Azure.Management.EventHub.Models.EventHubProperties.CreatedAt
  id: CreatedAt
  parent: Microsoft.Azure.Management.EventHub.Models.EventHubProperties
  langs:
  - csharp
  - vb
  name: CreatedAt
  fullName: Microsoft.Azure.Management.EventHub.Models.EventHubProperties.CreatedAt
  type: Property
  source:
    remote:
      path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/Models/EventHubProperties.cs
      branch: 7102889aafab03345c2d03ebaa4f387e5e2db8d9
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreatedAt
    path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/Models/EventHubProperties.cs
    startLine: 41
  assemblies:
  - Microsoft.Azure.Management.EventHub
  packages:
  - Microsoft.Azure.Management.EventHub(0.0.1-preview)
  namespace: Microsoft.Azure.Management.EventHub.Models
  summary: "\nExact time the Event was created.\n"
  example: []
  syntax:
    content: public DateTime? CreatedAt { get; set; }
    content.vb: Public Property CreatedAt As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.EventHub.Models.EventHubProperties.MessageRetentionInDays
  commentId: P:Microsoft.Azure.Management.EventHub.Models.EventHubProperties.MessageRetentionInDays
  id: MessageRetentionInDays
  parent: Microsoft.Azure.Management.EventHub.Models.EventHubProperties
  langs:
  - csharp
  - vb
  name: MessageRetentionInDays
  fullName: Microsoft.Azure.Management.EventHub.Models.EventHubProperties.MessageRetentionInDays
  type: Property
  source:
    remote:
      path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/Models/EventHubProperties.cs
      branch: 7102889aafab03345c2d03ebaa4f387e5e2db8d9
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MessageRetentionInDays
    path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/Models/EventHubProperties.cs
    startLine: 47
  assemblies:
  - Microsoft.Azure.Management.EventHub
  packages:
  - Microsoft.Azure.Management.EventHub(0.0.1-preview)
  namespace: Microsoft.Azure.Management.EventHub.Models
  summary: "\nNumber of days to retain the events for this Event Hub.\n"
  example: []
  syntax:
    content: public long ? MessageRetentionInDays { get; set; }
    content.vb: Public Property MessageRetentionInDays As Long?
    parameters: []
    return:
      type: System.Nullable{System.Int64}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.EventHub.Models.EventHubProperties.PartitionCount
  commentId: P:Microsoft.Azure.Management.EventHub.Models.EventHubProperties.PartitionCount
  id: PartitionCount
  parent: Microsoft.Azure.Management.EventHub.Models.EventHubProperties
  langs:
  - csharp
  - vb
  name: PartitionCount
  fullName: Microsoft.Azure.Management.EventHub.Models.EventHubProperties.PartitionCount
  type: Property
  source:
    remote:
      path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/Models/EventHubProperties.cs
      branch: 7102889aafab03345c2d03ebaa4f387e5e2db8d9
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PartitionCount
    path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/Models/EventHubProperties.cs
    startLine: 53
  assemblies:
  - Microsoft.Azure.Management.EventHub
  packages:
  - Microsoft.Azure.Management.EventHub(0.0.1-preview)
  namespace: Microsoft.Azure.Management.EventHub.Models
  summary: "\nNumber of partitions created for EventHub.\n"
  example: []
  syntax:
    content: public long ? PartitionCount { get; set; }
    content.vb: Public Property PartitionCount As Long?
    parameters: []
    return:
      type: System.Nullable{System.Int64}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.EventHub.Models.EventHubProperties.PartitionIds
  commentId: P:Microsoft.Azure.Management.EventHub.Models.EventHubProperties.PartitionIds
  id: PartitionIds
  parent: Microsoft.Azure.Management.EventHub.Models.EventHubProperties
  langs:
  - csharp
  - vb
  name: PartitionIds
  fullName: Microsoft.Azure.Management.EventHub.Models.EventHubProperties.PartitionIds
  type: Property
  source:
    remote:
      path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/Models/EventHubProperties.cs
      branch: 7102889aafab03345c2d03ebaa4f387e5e2db8d9
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PartitionIds
    path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/Models/EventHubProperties.cs
    startLine: 59
  assemblies:
  - Microsoft.Azure.Management.EventHub
  packages:
  - Microsoft.Azure.Management.EventHub(0.0.1-preview)
  namespace: Microsoft.Azure.Management.EventHub.Models
  summary: "\nCurrent number of shards on the Event Hub.\n"
  example: []
  syntax:
    content: public IList<int ? > PartitionIds { get; set; }
    content.vb: Public Property PartitionIds As IList(Of Integer?)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Nullable{System.Int32}}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.EventHub.Models.EventHubProperties.Status
  commentId: P:Microsoft.Azure.Management.EventHub.Models.EventHubProperties.Status
  id: Status
  parent: Microsoft.Azure.Management.EventHub.Models.EventHubProperties
  langs:
  - csharp
  - vb
  name: Status
  fullName: Microsoft.Azure.Management.EventHub.Models.EventHubProperties.Status
  type: Property
  source:
    remote:
      path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/Models/EventHubProperties.cs
      branch: 7102889aafab03345c2d03ebaa4f387e5e2db8d9
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Status
    path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/Models/EventHubProperties.cs
    startLine: 68
  assemblies:
  - Microsoft.Azure.Management.EventHub
  packages:
  - Microsoft.Azure.Management.EventHub(0.0.1-preview)
  namespace: Microsoft.Azure.Management.EventHub.Models
  summary: "\nEnumerates the possible values for the status of the EventHub.\nPossible values include: 'Active', 'Disabled', 'Restoring',\n'SendDisabled', 'ReceiveDisabled', 'Creating', 'Deleting',\n'Renaming', 'Unknown'\n"
  example: []
  syntax:
    content: public EntityStatus? Status { get; set; }
    content.vb: Public Property Status As EntityStatus?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.EventHub.Models.EntityStatus}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.EventHub.Models.EventHubProperties.UpdatedAt
  commentId: P:Microsoft.Azure.Management.EventHub.Models.EventHubProperties.UpdatedAt
  id: UpdatedAt
  parent: Microsoft.Azure.Management.EventHub.Models.EventHubProperties
  langs:
  - csharp
  - vb
  name: UpdatedAt
  fullName: Microsoft.Azure.Management.EventHub.Models.EventHubProperties.UpdatedAt
  type: Property
  source:
    remote:
      path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/Models/EventHubProperties.cs
      branch: 7102889aafab03345c2d03ebaa4f387e5e2db8d9
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UpdatedAt
    path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/Models/EventHubProperties.cs
    startLine: 74
  assemblies:
  - Microsoft.Azure.Management.EventHub
  packages:
  - Microsoft.Azure.Management.EventHub(0.0.1-preview)
  namespace: Microsoft.Azure.Management.EventHub.Models
  summary: "\nThe exact time the message has been updated.\n"
  example: []
  syntax:
    content: public DateTime? UpdatedAt { get; set; }
    content.vb: Public Property UpdatedAt As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.EventHub.Models
  isExternal: false
  name: Microsoft.Azure.Management.EventHub.Models
  fullName: Microsoft.Azure.Management.EventHub.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  fullname.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList{System.Nullable{System.Int32}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Nullable<Int32>>
  fullName: System.Collections.Generic.IList<System.Nullable<System.Int32>>
  fullname.vb: System.Collections.Generic.IList(Of System.Nullable(Of System.Int32))
  name.vb: IList(Of Nullable(Of Int32))
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Nullable{Microsoft.Azure.Management.EventHub.Models.EntityStatus}
  parent: System
  definition: System.Nullable`1
  name: Nullable<EntityStatus>
  fullName: System.Nullable<Microsoft.Azure.Management.EventHub.Models.EntityStatus>
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.EventHub.Models.EntityStatus)
  name.vb: Nullable(Of EntityStatus)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.EventHub.Models.EntityStatus
    name: EntityStatus
    fullName: Microsoft.Azure.Management.EventHub.Models.EntityStatus
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.EventHub.Models.EntityStatus
    name: EntityStatus
    fullName: Microsoft.Azure.Management.EventHub.Models.EntityStatus
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: true
  name: IList<T>
  fullName: System.Collections.Generic.IList<T>
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
