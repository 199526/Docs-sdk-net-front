### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions
  commentId: T:Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions
  id: VNetOperationsExtensions
  parent: Microsoft.WindowsAzure.Management.RemoteApp
  children:
  - Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.CreateOrUpdate(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String,Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetParameter)
  - Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.CreateOrUpdateAsync(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String,Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetParameter)
  - Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.Delete(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String)
  - Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.DeleteAsync(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String)
  - Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.Get(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String,System.Boolean)
  - Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.GetAsync(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String,System.Boolean)
  - Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.GetResetVpnSharedKeyOperationStatus(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String)
  - Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.GetResetVpnSharedKeyOperationStatusAsync(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String)
  - Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.GetVpnDeviceConfigScript(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String,System.String,System.String,System.String)
  - Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.GetVpnDeviceConfigScriptAsync(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String,System.String,System.String,System.String)
  - Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.GetVpnDevices(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String)
  - Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.GetVpnDevicesAsync(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String)
  - Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.List(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations)
  - Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.ListAsync(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations)
  - Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.ResetVpnSharedKey(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String)
  - Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.ResetVpnSharedKeyAsync(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String)
  langs:
  - csharp
  - vb
  name: VNetOperationsExtensions
  nameWithType: VNetOperationsExtensions
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions
  type: Class
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/VNetOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VNetOperationsExtensions
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/VNetOperationsExtensions.cs
    startLine: 33
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp
  summary: "\nRmoteApp management client\n"
  example: []
  syntax:
    content: public static class VNetOperationsExtensions
    content.vb: Public Module VNetOperationsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.CreateOrUpdate(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String,Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetParameter)
  commentId: M:Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.CreateOrUpdate(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String,Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetParameter)
  id: CreateOrUpdate(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String,Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetParameter)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateOrUpdate(IVNetOperations, String, VNetParameter)
  nameWithType: VNetOperationsExtensions.CreateOrUpdate(IVNetOperations, String, VNetParameter)
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.CreateOrUpdate(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations, System.String, Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetParameter)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/VNetOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateOrUpdate
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/VNetOperationsExtensions.cs
    startLine: 51
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp
  summary: "\nCreates or updates a virtual network.\n"
  example: []
  syntax:
    content: public static OperationResultWithTrackingId CreateOrUpdate(this IVNetOperations operations, string vNetName, VNetParameter vNetDetails)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateOrUpdate(operations As IVNetOperations, vNetName As String, vNetDetails As VNetParameter) As OperationResultWithTrackingId
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.RemoteApp.IVNetOperations.\n"
    - id: vNetName
      type: System.String
      description: "\nRequired. RemoteApp virtual network name.\n"
    - id: vNetDetails
      type: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetParameter
      description: "\nRequired. Details about the virtual network to create or update.\n"
    return:
      type: Microsoft.WindowsAzure.Management.RemoteApp.Models.OperationResultWithTrackingId
      description: "\nThe response containing the operation tracking id.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.CreateOrUpdateAsync(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String,Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetParameter)
  commentId: M:Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.CreateOrUpdateAsync(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String,Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetParameter)
  id: CreateOrUpdateAsync(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String,Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetParameter)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateOrUpdateAsync(IVNetOperations, String, VNetParameter)
  nameWithType: VNetOperationsExtensions.CreateOrUpdateAsync(IVNetOperations, String, VNetParameter)
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.CreateOrUpdateAsync(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations, System.String, Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetParameter)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/VNetOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateOrUpdateAsync
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/VNetOperationsExtensions.cs
    startLine: 76
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp
  summary: "\nCreates or updates a virtual network.\n"
  example: []
  syntax:
    content: public static Task<OperationResultWithTrackingId> CreateOrUpdateAsync(this IVNetOperations operations, string vNetName, VNetParameter vNetDetails)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateOrUpdateAsync(operations As IVNetOperations, vNetName As String, vNetDetails As VNetParameter) As Task(Of OperationResultWithTrackingId)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.RemoteApp.IVNetOperations.\n"
    - id: vNetName
      type: System.String
      description: "\nRequired. RemoteApp virtual network name.\n"
    - id: vNetDetails
      type: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetParameter
      description: "\nRequired. Details about the virtual network to create or update.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.RemoteApp.Models.OperationResultWithTrackingId}
      description: "\nThe response containing the operation tracking id.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.Delete(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.Delete(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String)
  id: Delete(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions
  langs:
  - csharp
  - vb
  name: Delete(IVNetOperations, String)
  nameWithType: VNetOperationsExtensions.Delete(IVNetOperations, String)
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.Delete(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/VNetOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Delete
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/VNetOperationsExtensions.cs
    startLine: 94
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp
  summary: "\nDeletes the specified RemoteApp virtual network\n"
  example: []
  syntax:
    content: public static OperationResultWithTrackingId Delete(this IVNetOperations operations, string vNetName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Delete(operations As IVNetOperations, vNetName As String) As OperationResultWithTrackingId
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.RemoteApp.IVNetOperations.\n"
    - id: vNetName
      type: System.String
      description: "\nRequired. RemoteApp virtual network name.\n"
    return:
      type: Microsoft.WindowsAzure.Management.RemoteApp.Models.OperationResultWithTrackingId
      description: "\nThe response containing the operation tracking id.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.DeleteAsync(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.DeleteAsync(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String)
  id: DeleteAsync(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions
  langs:
  - csharp
  - vb
  name: DeleteAsync(IVNetOperations, String)
  nameWithType: VNetOperationsExtensions.DeleteAsync(IVNetOperations, String)
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.DeleteAsync(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/VNetOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeleteAsync
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/VNetOperationsExtensions.cs
    startLine: 116
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp
  summary: "\nDeletes the specified RemoteApp virtual network\n"
  example: []
  syntax:
    content: public static Task<OperationResultWithTrackingId> DeleteAsync(this IVNetOperations operations, string vNetName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteAsync(operations As IVNetOperations, vNetName As String) As Task(Of OperationResultWithTrackingId)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.RemoteApp.IVNetOperations.\n"
    - id: vNetName
      type: System.String
      description: "\nRequired. RemoteApp virtual network name.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.RemoteApp.Models.OperationResultWithTrackingId}
      description: "\nThe response containing the operation tracking id.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.Get(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String,System.Boolean)
  commentId: M:Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.Get(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String,System.Boolean)
  id: Get(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String,System.Boolean)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions
  langs:
  - csharp
  - vb
  name: Get(IVNetOperations, String, Boolean)
  nameWithType: VNetOperationsExtensions.Get(IVNetOperations, String, Boolean)
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.Get(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/VNetOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Get
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/VNetOperationsExtensions.cs
    startLine: 138
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp
  summary: "\nGets the specified virtual network's configuration.\n"
  example: []
  syntax:
    content: public static VNetResult Get(this IVNetOperations operations, string vNetName, bool includeSharedKey)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Get(operations As IVNetOperations, vNetName As String, includeSharedKey As Boolean) As VNetResult
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.RemoteApp.IVNetOperations.\n"
    - id: vNetName
      type: System.String
      description: "\nRequired. RemoteApp virtual network name.\n"
    - id: includeSharedKey
      type: System.Boolean
      description: "\nRequired. Set to true to get back the shared key used to configure\nthe VPN connection\n"
    return:
      type: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetResult
      description: "\nRemoteApp virtual network information.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.GetAsync(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String,System.Boolean)
  commentId: M:Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.GetAsync(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String,System.Boolean)
  id: GetAsync(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String,System.Boolean)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetAsync(IVNetOperations, String, Boolean)
  nameWithType: VNetOperationsExtensions.GetAsync(IVNetOperations, String, Boolean)
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.GetAsync(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/VNetOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetAsync
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/VNetOperationsExtensions.cs
    startLine: 164
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp
  summary: "\nGets the specified virtual network's configuration.\n"
  example: []
  syntax:
    content: public static Task<VNetResult> GetAsync(this IVNetOperations operations, string vNetName, bool includeSharedKey)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAsync(operations As IVNetOperations, vNetName As String, includeSharedKey As Boolean) As Task(Of VNetResult)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.RemoteApp.IVNetOperations.\n"
    - id: vNetName
      type: System.String
      description: "\nRequired. RemoteApp virtual network name.\n"
    - id: includeSharedKey
      type: System.Boolean
      description: "\nRequired. Set to true to get back the shared key used to configure\nthe VPN connection\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetResult}
      description: "\nRemoteApp virtual network information.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.GetResetVpnSharedKeyOperationStatus(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.GetResetVpnSharedKeyOperationStatus(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String)
  id: GetResetVpnSharedKeyOperationStatus(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetResetVpnSharedKeyOperationStatus(IVNetOperations, String)
  nameWithType: VNetOperationsExtensions.GetResetVpnSharedKeyOperationStatus(IVNetOperations, String)
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.GetResetVpnSharedKeyOperationStatus(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/VNetOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetResetVpnSharedKeyOperationStatus
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/VNetOperationsExtensions.cs
    startLine: 182
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp
  summary: "\nGets the status of the call from ResetVpnSharedKey.\n"
  example: []
  syntax:
    content: public static VNetOperationStatusResult GetResetVpnSharedKeyOperationStatus(this IVNetOperations operations, string trackingId)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetResetVpnSharedKeyOperationStatus(operations As IVNetOperations, trackingId As String) As VNetOperationStatusResult
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.RemoteApp.IVNetOperations.\n"
    - id: trackingId
      type: System.String
      description: "\nRequired. Tracking ID returned by ResetVpnSharedKey\n"
    return:
      type: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetOperationStatusResult
      description: "\nCurrent state of a long running operation.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.GetResetVpnSharedKeyOperationStatusAsync(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.GetResetVpnSharedKeyOperationStatusAsync(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String)
  id: GetResetVpnSharedKeyOperationStatusAsync(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetResetVpnSharedKeyOperationStatusAsync(IVNetOperations, String)
  nameWithType: VNetOperationsExtensions.GetResetVpnSharedKeyOperationStatusAsync(IVNetOperations, String)
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.GetResetVpnSharedKeyOperationStatusAsync(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/VNetOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetResetVpnSharedKeyOperationStatusAsync
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/VNetOperationsExtensions.cs
    startLine: 204
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp
  summary: "\nGets the status of the call from ResetVpnSharedKey.\n"
  example: []
  syntax:
    content: public static Task<VNetOperationStatusResult> GetResetVpnSharedKeyOperationStatusAsync(this IVNetOperations operations, string trackingId)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetResetVpnSharedKeyOperationStatusAsync(operations As IVNetOperations, trackingId As String) As Task(Of VNetOperationStatusResult)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.RemoteApp.IVNetOperations.\n"
    - id: trackingId
      type: System.String
      description: "\nRequired. Tracking ID returned by ResetVpnSharedKey\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetOperationStatusResult}
      description: "\nCurrent state of a long running operation.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.GetVpnDeviceConfigScript(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.GetVpnDeviceConfigScript(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String,System.String,System.String,System.String)
  id: GetVpnDeviceConfigScript(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetVpnDeviceConfigScript(IVNetOperations, String, String, String, String)
  nameWithType: VNetOperationsExtensions.GetVpnDeviceConfigScript(IVNetOperations, String, String, String, String)
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.GetVpnDeviceConfigScript(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/VNetOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetVpnDeviceConfigScript
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/VNetOperationsExtensions.cs
    startLine: 232
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp
  summary: "\nGets a configuration script to configure the VPN deviceto connect\nto the given virtual network. Run this script on the VPN device.\n"
  example: []
  syntax:
    content: public static VNetConfigScriptResult GetVpnDeviceConfigScript(this IVNetOperations operations, string vNetName, string vendor, string vpnDevice, string osFamily)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetVpnDeviceConfigScript(operations As IVNetOperations, vNetName As String, vendor As String, vpnDevice As String, osFamily As String) As VNetConfigScriptResult
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.RemoteApp.IVNetOperations.\n"
    - id: vNetName
      type: System.String
      description: "\nRequired. RemoteApp virtual network name.\n"
    - id: vendor
      type: System.String
      description: "\nOptional. Vendor\n"
    - id: vpnDevice
      type: System.String
      description: "\nOptional. Model of the VPN\n"
    - id: osFamily
      type: System.String
      description: "\nOptional. OS Family\n"
    return:
      type: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetConfigScriptResult
      description: "\nScript that can be used to set up a VPN device.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.GetVpnDeviceConfigScriptAsync(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.GetVpnDeviceConfigScriptAsync(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String,System.String,System.String,System.String)
  id: GetVpnDeviceConfigScriptAsync(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetVpnDeviceConfigScriptAsync(IVNetOperations, String, String, String, String)
  nameWithType: VNetOperationsExtensions.GetVpnDeviceConfigScriptAsync(IVNetOperations, String, String, String, String)
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.GetVpnDeviceConfigScriptAsync(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/VNetOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetVpnDeviceConfigScriptAsync
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/VNetOperationsExtensions.cs
    startLine: 264
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp
  summary: "\nGets a configuration script to configure the VPN deviceto connect\nto the given virtual network. Run this script on the VPN device.\n"
  example: []
  syntax:
    content: public static Task<VNetConfigScriptResult> GetVpnDeviceConfigScriptAsync(this IVNetOperations operations, string vNetName, string vendor, string vpnDevice, string osFamily)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetVpnDeviceConfigScriptAsync(operations As IVNetOperations, vNetName As String, vendor As String, vpnDevice As String, osFamily As String) As Task(Of VNetConfigScriptResult)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.RemoteApp.IVNetOperations.\n"
    - id: vNetName
      type: System.String
      description: "\nRequired. RemoteApp virtual network name.\n"
    - id: vendor
      type: System.String
      description: "\nOptional. Vendor\n"
    - id: vpnDevice
      type: System.String
      description: "\nOptional. Model of the VPN\n"
    - id: osFamily
      type: System.String
      description: "\nOptional. OS Family\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetConfigScriptResult}
      description: "\nScript that can be used to set up a VPN device.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.GetVpnDevices(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.GetVpnDevices(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String)
  id: GetVpnDevices(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetVpnDevices(IVNetOperations, String)
  nameWithType: VNetOperationsExtensions.GetVpnDevices(IVNetOperations, String)
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.GetVpnDevices(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/VNetOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetVpnDevices
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/VNetOperationsExtensions.cs
    startLine: 282
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp
  summary: "\nGets details of supported VPN devices\n"
  example: []
  syntax:
    content: public static VNetVpnDeviceResult GetVpnDevices(this IVNetOperations operations, string vNetName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetVpnDevices(operations As IVNetOperations, vNetName As String) As VNetVpnDeviceResult
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.RemoteApp.IVNetOperations.\n"
    - id: vNetName
      type: System.String
      description: "\nRequired. RemoteApp virtual network name.\n"
    return:
      type: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetVpnDeviceResult
      description: "\nThe VPN device information.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.GetVpnDevicesAsync(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.GetVpnDevicesAsync(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String)
  id: GetVpnDevicesAsync(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetVpnDevicesAsync(IVNetOperations, String)
  nameWithType: VNetOperationsExtensions.GetVpnDevicesAsync(IVNetOperations, String)
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.GetVpnDevicesAsync(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/VNetOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetVpnDevicesAsync
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/VNetOperationsExtensions.cs
    startLine: 304
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp
  summary: "\nGets details of supported VPN devices\n"
  example: []
  syntax:
    content: public static Task<VNetVpnDeviceResult> GetVpnDevicesAsync(this IVNetOperations operations, string vNetName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetVpnDevicesAsync(operations As IVNetOperations, vNetName As String) As Task(Of VNetVpnDeviceResult)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.RemoteApp.IVNetOperations.\n"
    - id: vNetName
      type: System.String
      description: "\nRequired. RemoteApp virtual network name.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetVpnDeviceResult}
      description: "\nThe VPN device information.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.List(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations)
  commentId: M:Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.List(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations)
  id: List(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions
  langs:
  - csharp
  - vb
  name: List(IVNetOperations)
  nameWithType: VNetOperationsExtensions.List(IVNetOperations)
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.List(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/VNetOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: List
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/VNetOperationsExtensions.cs
    startLine: 319
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp
  summary: "\nGets a list of virtual network configurations.\n"
  example: []
  syntax:
    content: public static VNetListResult List(this IVNetOperations operations)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function List(operations As IVNetOperations) As VNetListResult
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.RemoteApp.IVNetOperations.\n"
    return:
      type: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetListResult
      description: "\nList of virtual networks.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.ListAsync(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations)
  commentId: M:Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.ListAsync(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations)
  id: ListAsync(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListAsync(IVNetOperations)
  nameWithType: VNetOperationsExtensions.ListAsync(IVNetOperations)
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.ListAsync(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/VNetOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListAsync
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/VNetOperationsExtensions.cs
    startLine: 338
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp
  summary: "\nGets a list of virtual network configurations.\n"
  example: []
  syntax:
    content: public static Task<VNetListResult> ListAsync(this IVNetOperations operations)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListAsync(operations As IVNetOperations) As Task(Of VNetListResult)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.RemoteApp.IVNetOperations.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetListResult}
      description: "\nList of virtual networks.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.ResetVpnSharedKey(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.ResetVpnSharedKey(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String)
  id: ResetVpnSharedKey(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions
  langs:
  - csharp
  - vb
  name: ResetVpnSharedKey(IVNetOperations, String)
  nameWithType: VNetOperationsExtensions.ResetVpnSharedKey(IVNetOperations, String)
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.ResetVpnSharedKey(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/VNetOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ResetVpnSharedKey
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/VNetOperationsExtensions.cs
    startLine: 364
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp
  summary: "\nPosts a request to asynchronously generate a new shared key for the\nspecified virtual network and returns a tracking ID for the\noperation.Use GetResetVpnSharedKeyOperationStatus with this\ntracking ID to determine when the operation has completed.  When\nthe status returns Success,call Get passing the virtual network\nname and true for the includeSharedKey parameter. This will return\na VNetResult containing the new key.Call GetVpnConfigScript to get\nback the configuration script to configure the VPN device. Run\nthis script using the new key on the VPN device.\n"
  example: []
  syntax:
    content: public static OperationResultWithTrackingId ResetVpnSharedKey(this IVNetOperations operations, string vNetName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ResetVpnSharedKey(operations As IVNetOperations, vNetName As String) As OperationResultWithTrackingId
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.RemoteApp.IVNetOperations.\n"
    - id: vNetName
      type: System.String
      description: "\nRequired. RemoteApp virtual network name.\n"
    return:
      type: Microsoft.WindowsAzure.Management.RemoteApp.Models.OperationResultWithTrackingId
      description: "\nThe response containing the operation tracking id.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.ResetVpnSharedKeyAsync(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.ResetVpnSharedKeyAsync(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String)
  id: ResetVpnSharedKeyAsync(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions
  langs:
  - csharp
  - vb
  name: ResetVpnSharedKeyAsync(IVNetOperations, String)
  nameWithType: VNetOperationsExtensions.ResetVpnSharedKeyAsync(IVNetOperations, String)
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.VNetOperationsExtensions.ResetVpnSharedKeyAsync(Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/VNetOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ResetVpnSharedKeyAsync
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/VNetOperationsExtensions.cs
    startLine: 394
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp
  summary: "\nPosts a request to asynchronously generate a new shared key for the\nspecified virtual network and returns a tracking ID for the\noperation.Use GetResetVpnSharedKeyOperationStatus with this\ntracking ID to determine when the operation has completed.  When\nthe status returns Success,call Get passing the virtual network\nname and true for the includeSharedKey parameter. This will return\na VNetResult containing the new key.Call GetVpnConfigScript to get\nback the configuration script to configure the VPN device. Run\nthis script using the new key on the VPN device.\n"
  example: []
  syntax:
    content: public static Task<OperationResultWithTrackingId> ResetVpnSharedKeyAsync(this IVNetOperations operations, string vNetName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ResetVpnSharedKeyAsync(operations As IVNetOperations, vNetName As String) As Task(Of OperationResultWithTrackingId)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.RemoteApp.IVNetOperations.\n"
    - id: vNetName
      type: System.String
      description: "\nRequired. RemoteApp virtual network name.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.RemoteApp.Models.OperationResultWithTrackingId}
      description: "\nThe response containing the operation tracking id.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.WindowsAzure.Management.RemoteApp
  commentId: N:Microsoft.WindowsAzure.Management.RemoteApp
  isExternal: false
  name: Microsoft.WindowsAzure.Management.RemoteApp
  nameWithType: Microsoft.WindowsAzure.Management.RemoteApp
  fullName: Microsoft.WindowsAzure.Management.RemoteApp
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations
  commentId: T:Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations
  parent: Microsoft.WindowsAzure.Management.RemoteApp
  isExternal: false
  name: IVNetOperations
  nameWithType: IVNetOperations
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.IVNetOperations
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetParameter
  commentId: T:Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetParameter
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models
  isExternal: false
  name: VNetParameter
  nameWithType: VNetParameter
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetParameter
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.OperationResultWithTrackingId
  commentId: T:Microsoft.WindowsAzure.Management.RemoteApp.Models.OperationResultWithTrackingId
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models
  isExternal: false
  name: OperationResultWithTrackingId
  nameWithType: OperationResultWithTrackingId
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.OperationResultWithTrackingId
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models
  commentId: N:Microsoft.WindowsAzure.Management.RemoteApp.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.RemoteApp.Models
  nameWithType: Microsoft.WindowsAzure.Management.RemoteApp.Models
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models
- uid: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.RemoteApp.Models.OperationResultWithTrackingId}
  commentId: T:System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.RemoteApp.Models.OperationResultWithTrackingId}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<OperationResultWithTrackingId>
  nameWithType: Task<OperationResultWithTrackingId>
  fullName: System.Threading.Tasks.Task<Microsoft.WindowsAzure.Management.RemoteApp.Models.OperationResultWithTrackingId>
  nameWithType.vb: Task(Of OperationResultWithTrackingId)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.WindowsAzure.Management.RemoteApp.Models.OperationResultWithTrackingId)
  name.vb: Task(Of OperationResultWithTrackingId)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.OperationResultWithTrackingId
    name: OperationResultWithTrackingId
    nameWithType: OperationResultWithTrackingId
    fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.OperationResultWithTrackingId
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.OperationResultWithTrackingId
    name: OperationResultWithTrackingId
    nameWithType: OperationResultWithTrackingId
    fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.OperationResultWithTrackingId
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetResult
  commentId: T:Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetResult
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models
  isExternal: false
  name: VNetResult
  nameWithType: VNetResult
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetResult
- uid: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetResult}
  commentId: T:System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<VNetResult>
  nameWithType: Task<VNetResult>
  fullName: System.Threading.Tasks.Task<Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetResult>
  nameWithType.vb: Task(Of VNetResult)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetResult)
  name.vb: Task(Of VNetResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetResult
    name: VNetResult
    nameWithType: VNetResult
    fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetResult
    name: VNetResult
    nameWithType: VNetResult
    fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetOperationStatusResult
  commentId: T:Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetOperationStatusResult
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models
  isExternal: false
  name: VNetOperationStatusResult
  nameWithType: VNetOperationStatusResult
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetOperationStatusResult
- uid: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetOperationStatusResult}
  commentId: T:System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetOperationStatusResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<VNetOperationStatusResult>
  nameWithType: Task<VNetOperationStatusResult>
  fullName: System.Threading.Tasks.Task<Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetOperationStatusResult>
  nameWithType.vb: Task(Of VNetOperationStatusResult)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetOperationStatusResult)
  name.vb: Task(Of VNetOperationStatusResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetOperationStatusResult
    name: VNetOperationStatusResult
    nameWithType: VNetOperationStatusResult
    fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetOperationStatusResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetOperationStatusResult
    name: VNetOperationStatusResult
    nameWithType: VNetOperationStatusResult
    fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetOperationStatusResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetConfigScriptResult
  commentId: T:Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetConfigScriptResult
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models
  isExternal: false
  name: VNetConfigScriptResult
  nameWithType: VNetConfigScriptResult
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetConfigScriptResult
- uid: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetConfigScriptResult}
  commentId: T:System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetConfigScriptResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<VNetConfigScriptResult>
  nameWithType: Task<VNetConfigScriptResult>
  fullName: System.Threading.Tasks.Task<Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetConfigScriptResult>
  nameWithType.vb: Task(Of VNetConfigScriptResult)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetConfigScriptResult)
  name.vb: Task(Of VNetConfigScriptResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetConfigScriptResult
    name: VNetConfigScriptResult
    nameWithType: VNetConfigScriptResult
    fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetConfigScriptResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetConfigScriptResult
    name: VNetConfigScriptResult
    nameWithType: VNetConfigScriptResult
    fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetConfigScriptResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetVpnDeviceResult
  commentId: T:Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetVpnDeviceResult
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models
  isExternal: false
  name: VNetVpnDeviceResult
  nameWithType: VNetVpnDeviceResult
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetVpnDeviceResult
- uid: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetVpnDeviceResult}
  commentId: T:System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetVpnDeviceResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<VNetVpnDeviceResult>
  nameWithType: Task<VNetVpnDeviceResult>
  fullName: System.Threading.Tasks.Task<Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetVpnDeviceResult>
  nameWithType.vb: Task(Of VNetVpnDeviceResult)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetVpnDeviceResult)
  name.vb: Task(Of VNetVpnDeviceResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetVpnDeviceResult
    name: VNetVpnDeviceResult
    nameWithType: VNetVpnDeviceResult
    fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetVpnDeviceResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetVpnDeviceResult
    name: VNetVpnDeviceResult
    nameWithType: VNetVpnDeviceResult
    fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetVpnDeviceResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetListResult
  commentId: T:Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetListResult
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models
  isExternal: false
  name: VNetListResult
  nameWithType: VNetListResult
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetListResult
- uid: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetListResult}
  commentId: T:System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetListResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<VNetListResult>
  nameWithType: Task<VNetListResult>
  fullName: System.Threading.Tasks.Task<Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetListResult>
  nameWithType.vb: Task(Of VNetListResult)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetListResult)
  name.vb: Task(Of VNetListResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetListResult
    name: VNetListResult
    nameWithType: VNetListResult
    fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetListResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetListResult
    name: VNetListResult
    nameWithType: VNetListResult
    fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetListResult
  - name: )
    nameWithType: )
    fullName: )
