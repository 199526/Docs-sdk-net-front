items:
- uid: Microsoft.Azure.Management.Storage.Models.Usage
  commentId: T:Microsoft.Azure.Management.Storage.Models.Usage
  id: Usage
  parent: Microsoft.Azure.Management.Storage.Models
  children:
  - Microsoft.Azure.Management.Storage.Models.Usage.#ctor
  - Microsoft.Azure.Management.Storage.Models.Usage.#ctor(System.Nullable{Microsoft.Azure.Management.Storage.Models.UsageUnit},System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.Azure.Management.Storage.Models.UsageName)
  - Microsoft.Azure.Management.Storage.Models.Usage.CurrentValue
  - Microsoft.Azure.Management.Storage.Models.Usage.Limit
  - Microsoft.Azure.Management.Storage.Models.Usage.Name
  - Microsoft.Azure.Management.Storage.Models.Usage.Unit
  langs:
  - csharp
  - vb
  name: Usage
  fullName: Microsoft.Azure.Management.Storage.Models.Usage
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/Usage.cs
      branch: 7102889aafab03345c2d03ebaa4f387e5e2db8d9
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Usage
    path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/Usage.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.Storage
  packages:
  - Microsoft.Azure.Management.Storage(5.0.2-preview)
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nDescribes Storage Resource Usage.\n"
  example: []
  syntax:
    content: public class Usage
    content.vb: Public Class Usage
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Storage.Models.Usage.#ctor
  commentId: M:Microsoft.Azure.Management.Storage.Models.Usage.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Storage.Models.Usage
  langs:
  - csharp
  - vb
  name: Usage()
  fullName: Microsoft.Azure.Management.Storage.Models.Usage.Usage()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/Usage.cs
      branch: 7102889aafab03345c2d03ebaa4f387e5e2db8d9
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/Usage.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Management.Storage
  packages:
  - Microsoft.Azure.Management.Storage(5.0.2-preview)
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nInitializes a new instance of the Usage class.\n"
  example: []
  syntax:
    content: public Usage()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.Usage.#ctor(System.Nullable{Microsoft.Azure.Management.Storage.Models.UsageUnit},System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.Azure.Management.Storage.Models.UsageName)
  commentId: M:Microsoft.Azure.Management.Storage.Models.Usage.#ctor(System.Nullable{Microsoft.Azure.Management.Storage.Models.UsageUnit},System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.Azure.Management.Storage.Models.UsageName)
  id: '#ctor(System.Nullable{Microsoft.Azure.Management.Storage.Models.UsageUnit},System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.Azure.Management.Storage.Models.UsageName)'
  parent: Microsoft.Azure.Management.Storage.Models.Usage
  langs:
  - csharp
  - vb
  name: Usage(Nullable<UsageUnit>, Nullable<Int32>, Nullable<Int32>, UsageName)
  fullName: Microsoft.Azure.Management.Storage.Models.Usage.Usage(System.Nullable<Microsoft.Azure.Management.Storage.Models.UsageUnit>, System.Nullable<System.Int32>, System.Nullable<System.Int32>, Microsoft.Azure.Management.Storage.Models.UsageName)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/Usage.cs
      branch: 7102889aafab03345c2d03ebaa4f387e5e2db8d9
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/Usage.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.Management.Storage
  packages:
  - Microsoft.Azure.Management.Storage(5.0.2-preview)
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nInitializes a new instance of the Usage class.\n"
  example: []
  syntax:
    content: public Usage(UsageUnit? unit = null, int ? currentValue = null, int ? limit = null, UsageName name = null)
    content.vb: Public Sub New(unit As UsageUnit? = Nothing, currentValue As Integer? = Nothing, limit As Integer? = Nothing, name As UsageName = Nothing)
    parameters:
    - id: unit
      type: System.Nullable{Microsoft.Azure.Management.Storage.Models.UsageUnit}
    - id: currentValue
      type: System.Nullable{System.Int32}
    - id: limit
      type: System.Nullable{System.Int32}
    - id: name
      type: Microsoft.Azure.Management.Storage.Models.UsageName
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Storage.Models.Usage.Usage(System.Nullable(Of Microsoft.Azure.Management.Storage.Models.UsageUnit), System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), Microsoft.Azure.Management.Storage.Models.UsageName)
  name.vb: Usage(Nullable(Of UsageUnit), Nullable(Of Int32), Nullable(Of Int32), UsageName)
- uid: Microsoft.Azure.Management.Storage.Models.Usage.Unit
  commentId: P:Microsoft.Azure.Management.Storage.Models.Usage.Unit
  id: Unit
  parent: Microsoft.Azure.Management.Storage.Models.Usage
  langs:
  - csharp
  - vb
  name: Unit
  fullName: Microsoft.Azure.Management.Storage.Models.Usage.Unit
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/Usage.cs
      branch: 7102889aafab03345c2d03ebaa4f387e5e2db8d9
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Unit
    path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/Usage.cs
    startLine: 43
  assemblies:
  - Microsoft.Azure.Management.Storage
  packages:
  - Microsoft.Azure.Management.Storage(5.0.2-preview)
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nGets the unit of measurement. Possible values include: 'Count',\n'Bytes', 'Seconds', 'Percent', 'CountsPerSecond', 'BytesPerSecond'\n"
  example: []
  syntax:
    content: public UsageUnit? Unit { get; }
    content.vb: Public ReadOnly Property Unit As UsageUnit?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.Storage.Models.UsageUnit}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Storage.Models.Usage.CurrentValue
  commentId: P:Microsoft.Azure.Management.Storage.Models.Usage.CurrentValue
  id: CurrentValue
  parent: Microsoft.Azure.Management.Storage.Models.Usage
  langs:
  - csharp
  - vb
  name: CurrentValue
  fullName: Microsoft.Azure.Management.Storage.Models.Usage.CurrentValue
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/Usage.cs
      branch: 7102889aafab03345c2d03ebaa4f387e5e2db8d9
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CurrentValue
    path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/Usage.cs
    startLine: 50
  assemblies:
  - Microsoft.Azure.Management.Storage
  packages:
  - Microsoft.Azure.Management.Storage(5.0.2-preview)
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nGets the current count of the allocated resources in the\nsubscription.\n"
  example: []
  syntax:
    content: public int ? CurrentValue { get; }
    content.vb: Public ReadOnly Property CurrentValue As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Storage.Models.Usage.Limit
  commentId: P:Microsoft.Azure.Management.Storage.Models.Usage.Limit
  id: Limit
  parent: Microsoft.Azure.Management.Storage.Models.Usage
  langs:
  - csharp
  - vb
  name: Limit
  fullName: Microsoft.Azure.Management.Storage.Models.Usage.Limit
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/Usage.cs
      branch: 7102889aafab03345c2d03ebaa4f387e5e2db8d9
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Limit
    path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/Usage.cs
    startLine: 57
  assemblies:
  - Microsoft.Azure.Management.Storage
  packages:
  - Microsoft.Azure.Management.Storage(5.0.2-preview)
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nGets the maximum count of the resources that can be allocated in\nthe subscription.\n"
  example: []
  syntax:
    content: public int ? Limit { get; }
    content.vb: Public ReadOnly Property Limit As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Storage.Models.Usage.Name
  commentId: P:Microsoft.Azure.Management.Storage.Models.Usage.Name
  id: Name
  parent: Microsoft.Azure.Management.Storage.Models.Usage
  langs:
  - csharp
  - vb
  name: Name
  fullName: Microsoft.Azure.Management.Storage.Models.Usage.Name
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/Usage.cs
      branch: 7102889aafab03345c2d03ebaa4f387e5e2db8d9
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/Models/Usage.cs
    startLine: 63
  assemblies:
  - Microsoft.Azure.Management.Storage
  packages:
  - Microsoft.Azure.Management.Storage(5.0.2-preview)
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nGets the name of the type of usage.\n"
  example: []
  syntax:
    content: public UsageName Name { get; }
    content.vb: Public ReadOnly Property Name As UsageName
    parameters: []
    return:
      type: Microsoft.Azure.Management.Storage.Models.UsageName
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Azure.Management.Storage.Models
  isExternal: false
  name: Microsoft.Azure.Management.Storage.Models
  fullName: Microsoft.Azure.Management.Storage.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Nullable{Microsoft.Azure.Management.Storage.Models.UsageUnit}
  parent: System
  definition: System.Nullable`1
  name: Nullable<UsageUnit>
  fullName: System.Nullable<Microsoft.Azure.Management.Storage.Models.UsageUnit>
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.Storage.Models.UsageUnit)
  name.vb: Nullable(Of UsageUnit)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Storage.Models.UsageUnit
    name: UsageUnit
    fullName: Microsoft.Azure.Management.Storage.Models.UsageUnit
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Storage.Models.UsageUnit
    name: UsageUnit
    fullName: Microsoft.Azure.Management.Storage.Models.UsageUnit
  - name: )
    fullName: )
- uid: System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Storage.Models.UsageName
  parent: Microsoft.Azure.Management.Storage.Models
  isExternal: false
  name: UsageName
  fullName: Microsoft.Azure.Management.Storage.Models.UsageName
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
