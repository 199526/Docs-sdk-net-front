items:
- uid: Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe
  commentId: T:Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe
  id: ApplicationGatewayProbe
  parent: Microsoft.Azure.Management.Network.Models
  children:
  - Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe.#ctor
  - Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)
  - Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe.Etag
  - Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe.Host
  - Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe.Interval
  - Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe.Name
  - Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe.Path
  - Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe.Protocol
  - Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe.ProvisioningState
  - Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe.Timeout
  - Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe.UnhealthyThreshold
  langs:
  - csharp
  - vb
  name: ApplicationGatewayProbe
  fullName: Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayProbe.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ApplicationGatewayProbe
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayProbe.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.Network
  packages:
  - Microsoft.Azure.Management.Network(7.1.2-preview)
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nProbe of application gateway\n"
  example: []
  syntax:
    content: >-
      [JsonTransformation]

      public class ApplicationGatewayProbe : SubResource, IResource
    content.vb: >-
      <JsonTransformation>

      Public Class ApplicationGatewayProbe
          Inherits SubResource
          Implements IResource
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.Network.Models.SubResource
  implements:
  - Microsoft.Rest.Azure.IResource
  inheritedMembers:
  - Microsoft.Azure.Management.Network.Models.SubResource.Id
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: Microsoft.Rest.Serialization.JsonTransformationAttribute
    ctor: Microsoft.Rest.Serialization.JsonTransformationAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe.#ctor
  commentId: M:Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe
  langs:
  - csharp
  - vb
  name: ApplicationGatewayProbe()
  fullName: Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe.ApplicationGatewayProbe()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayProbe.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayProbe.cs
    startLine: 27
  assemblies:
  - Microsoft.Azure.Management.Network
  packages:
  - Microsoft.Azure.Management.Network(7.1.2-preview)
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nInitializes a new instance of the ApplicationGatewayProbe class.\n"
  example: []
  syntax:
    content: public ApplicationGatewayProbe()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)'
  parent: Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe
  langs:
  - csharp
  - vb
  name: ApplicationGatewayProbe(String, String, String, String, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, String, String, String)
  fullName: Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe.ApplicationGatewayProbe(System.String, System.String, System.String, System.String, System.Nullable<System.Int32>, System.Nullable<System.Int32>, System.Nullable<System.Int32>, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayProbe.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayProbe.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Management.Network
  packages:
  - Microsoft.Azure.Management.Network(7.1.2-preview)
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nInitializes a new instance of the ApplicationGatewayProbe class.\n"
  example: []
  syntax:
    content: public ApplicationGatewayProbe(string id = null, string protocol = null, string host = null, string path = null, int ? interval = null, int ? timeout = null, int ? unhealthyThreshold = null, string provisioningState = null, string name = null, string etag = null)
    content.vb: Public Sub New(id As String = Nothing, protocol As String = Nothing, host As String = Nothing, path As String = Nothing, interval As Integer? = Nothing, timeout As Integer? = Nothing, unhealthyThreshold As Integer? = Nothing, provisioningState As String = Nothing, name As String = Nothing, etag As String = Nothing)
    parameters:
    - id: id
      type: System.String
    - id: protocol
      type: System.String
    - id: host
      type: System.String
    - id: path
      type: System.String
    - id: interval
      type: System.Nullable{System.Int32}
    - id: timeout
      type: System.Nullable{System.Int32}
    - id: unhealthyThreshold
      type: System.Nullable{System.Int32}
    - id: provisioningState
      type: System.String
    - id: name
      type: System.String
    - id: etag
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe.ApplicationGatewayProbe(System.String, System.String, System.String, System.String, System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), System.String, System.String, System.String)
  name.vb: ApplicationGatewayProbe(String, String, String, String, Nullable(Of Int32), Nullable(Of Int32), Nullable(Of Int32), String, String, String)
- uid: Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe.Protocol
  commentId: P:Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe.Protocol
  id: Protocol
  parent: Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe
  langs:
  - csharp
  - vb
  name: Protocol
  fullName: Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe.Protocol
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayProbe.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Protocol
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayProbe.cs
    startLine: 49
  assemblies:
  - Microsoft.Azure.Management.Network
  packages:
  - Microsoft.Azure.Management.Network(7.1.2-preview)
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nProtocol. Possible values include: 'Http', 'Https'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.protocol")]

      public string Protocol { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.protocol")>

      Public Property Protocol As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.protocol
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe.Host
  commentId: P:Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe.Host
  id: Host
  parent: Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe
  langs:
  - csharp
  - vb
  name: Host
  fullName: Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe.Host
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayProbe.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Host
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayProbe.cs
    startLine: 55
  assemblies:
  - Microsoft.Azure.Management.Network
  packages:
  - Microsoft.Azure.Management.Network(7.1.2-preview)
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nHost to send probe to\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.host")]

      public string Host { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.host")>

      Public Property Host As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.host
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe.Path
  commentId: P:Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe.Path
  id: Path
  parent: Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe
  langs:
  - csharp
  - vb
  name: Path
  fullName: Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe.Path
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayProbe.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Path
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayProbe.cs
    startLine: 61
  assemblies:
  - Microsoft.Azure.Management.Network
  packages:
  - Microsoft.Azure.Management.Network(7.1.2-preview)
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nRelative path of probe\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.path")]

      public string Path { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.path")>

      Public Property Path As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.path
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe.Interval
  commentId: P:Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe.Interval
  id: Interval
  parent: Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe
  langs:
  - csharp
  - vb
  name: Interval
  fullName: Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe.Interval
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayProbe.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Interval
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayProbe.cs
    startLine: 67
  assemblies:
  - Microsoft.Azure.Management.Network
  packages:
  - Microsoft.Azure.Management.Network(7.1.2-preview)
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nProbing interval in seconds\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.interval")]

      public int ? Interval { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.interval")>

      Public Property Interval As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.interval
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe.Timeout
  commentId: P:Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe.Timeout
  id: Timeout
  parent: Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe
  langs:
  - csharp
  - vb
  name: Timeout
  fullName: Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe.Timeout
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayProbe.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Timeout
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayProbe.cs
    startLine: 73
  assemblies:
  - Microsoft.Azure.Management.Network
  packages:
  - Microsoft.Azure.Management.Network(7.1.2-preview)
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nProbing timeout in seconds\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.timeout")]

      public int ? Timeout { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.timeout")>

      Public Property Timeout As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.timeout
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe.UnhealthyThreshold
  commentId: P:Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe.UnhealthyThreshold
  id: UnhealthyThreshold
  parent: Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe
  langs:
  - csharp
  - vb
  name: UnhealthyThreshold
  fullName: Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe.UnhealthyThreshold
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayProbe.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: UnhealthyThreshold
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayProbe.cs
    startLine: 79
  assemblies:
  - Microsoft.Azure.Management.Network
  packages:
  - Microsoft.Azure.Management.Network(7.1.2-preview)
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nProbing unhealthy threshold\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.unhealthyThreshold")]

      public int ? UnhealthyThreshold { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.unhealthyThreshold")>

      Public Property UnhealthyThreshold As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.unhealthyThreshold
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe.ProvisioningState
  commentId: P:Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe.ProvisioningState
  id: ProvisioningState
  parent: Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe
  langs:
  - csharp
  - vb
  name: ProvisioningState
  fullName: Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe.ProvisioningState
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayProbe.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ProvisioningState
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayProbe.cs
    startLine: 86
  assemblies:
  - Microsoft.Azure.Management.Network
  packages:
  - Microsoft.Azure.Management.Network(7.1.2-preview)
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nProvisioning state of the backend http settings resource\nUpdating/Deleting/Failed\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.provisioningState")]

      public string ProvisioningState { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.provisioningState")>

      Public Property ProvisioningState As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.provisioningState
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe.Name
  commentId: P:Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe.Name
  id: Name
  parent: Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe
  langs:
  - csharp
  - vb
  name: Name
  fullName: Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe.Name
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayProbe.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Name
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayProbe.cs
    startLine: 93
  assemblies:
  - Microsoft.Azure.Management.Network
  packages:
  - Microsoft.Azure.Management.Network(7.1.2-preview)
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nName of the resource that is unique within a resource group. This\nname can be used to access the resource\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "name")]

      public string Name { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="name")>

      Public Property Name As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe.Etag
  commentId: P:Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe.Etag
  id: Etag
  parent: Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe
  langs:
  - csharp
  - vb
  name: Etag
  fullName: Microsoft.Azure.Management.Network.Models.ApplicationGatewayProbe.Etag
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayProbe.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Etag
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Network/Generated/Models/ApplicationGatewayProbe.cs
    startLine: 100
  assemblies:
  - Microsoft.Azure.Management.Network
  packages:
  - Microsoft.Azure.Management.Network(7.1.2-preview)
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\nA unique read-only string that changes whenever the resource is\nupdated\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "etag")]

      public string Etag { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="etag")>

      Public Property Etag As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: etag
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: Microsoft.Azure.Management.Network.Models
  fullName: Microsoft.Azure.Management.Network.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.Network.Models.SubResource
  parent: Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: SubResource
  fullName: Microsoft.Azure.Management.Network.Models.SubResource
- uid: Microsoft.Rest.Azure.IResource
  parent: Microsoft.Rest.Azure
  isExternal: true
  name: IResource
  fullName: Microsoft.Rest.Azure.IResource
- uid: Microsoft.Azure.Management.Network.Models.SubResource.Id
  parent: Microsoft.Azure.Management.Network.Models.SubResource
  isExternal: false
  name: Id
  fullName: Microsoft.Azure.Management.Network.Models.SubResource.Id
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Rest.Azure
  isExternal: false
  name: Microsoft.Rest.Azure
  fullName: Microsoft.Rest.Azure
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
