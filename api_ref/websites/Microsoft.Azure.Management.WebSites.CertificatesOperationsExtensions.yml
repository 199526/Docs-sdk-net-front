### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions
  commentId: T:Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions
  id: CertificatesOperationsExtensions
  parent: Microsoft.Azure.Management.WebSites
  children:
  - Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.CreateOrUpdateCertificate(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String,Microsoft.Azure.Management.WebSites.Models.Certificate)
  - Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.CreateOrUpdateCertificateAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String,Microsoft.Azure.Management.WebSites.Models.Certificate,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.CreateOrUpdateCsr(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String,Microsoft.Azure.Management.WebSites.Models.Csr)
  - Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.CreateOrUpdateCsrAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String,Microsoft.Azure.Management.WebSites.Models.Csr,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.DeleteCertificate(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String)
  - Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.DeleteCertificateAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.DeleteCsr(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String)
  - Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.DeleteCsrAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCertificate(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String)
  - Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCertificateAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCertificates(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String)
  - Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCertificatesAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCsr(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String)
  - Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCsrAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCsrs(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String)
  - Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCsrsAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.UpdateCertificate(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String,Microsoft.Azure.Management.WebSites.Models.Certificate)
  - Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.UpdateCertificateAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String,Microsoft.Azure.Management.WebSites.Models.Certificate,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.UpdateCsr(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String,Microsoft.Azure.Management.WebSites.Models.Csr)
  - Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.UpdateCsrAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String,Microsoft.Azure.Management.WebSites.Models.Csr,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: CertificatesOperationsExtensions
  nameWithType: CertificatesOperationsExtensions
  fullName: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions
  type: Class
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/CertificatesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: CertificatesOperationsExtensions
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/CertificatesOperationsExtensions.cs
    startLine: 19
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites
  syntax:
    content: public static class CertificatesOperationsExtensions
    content.vb: Public Module CertificatesOperationsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCertificates(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String)
  commentId: M:Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCertificates(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String)
  id: GetCertificates(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetCertificates(ICertificatesOperations, String)
  nameWithType: CertificatesOperationsExtensions.GetCertificates(ICertificatesOperations, String)
  fullName: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCertificates(Microsoft.Azure.Management.WebSites.ICertificatesOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/CertificatesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetCertificates
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/CertificatesOperationsExtensions.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites
  summary: "\nGet certificates for a subscription in the specified resource group.\n"
  example: []
  syntax:
    content: public static CertificateCollection GetCertificates(this ICertificatesOperations operations, string resourceGroupName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCertificates(operations As ICertificatesOperations, resourceGroupName As String) As CertificateCollection
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.WebSites.ICertificatesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group\n"
    return:
      type: Microsoft.Azure.Management.WebSites.Models.CertificateCollection
  overload: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCertificates*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCertificatesAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCertificatesAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.Threading.CancellationToken)
  id: GetCertificatesAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetCertificatesAsync(ICertificatesOperations, String, CancellationToken)
  nameWithType: CertificatesOperationsExtensions.GetCertificatesAsync(ICertificatesOperations, String, CancellationToken)
  fullName: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCertificatesAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/CertificatesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetCertificatesAsync
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/CertificatesOperationsExtensions.cs
    startLine: 47
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites
  summary: "\nGet certificates for a subscription in the specified resource group.\n"
  example: []
  syntax:
    content: public static Task<CertificateCollection> GetCertificatesAsync(this ICertificatesOperations operations, string resourceGroupName, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCertificatesAsync(operations As ICertificatesOperations, resourceGroupName As String, cancellationToken As CancellationToken = Nothing) As Task(Of CertificateCollection)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.WebSites.ICertificatesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.WebSites.Models.CertificateCollection}
  overload: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCertificatesAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCertificate(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCertificate(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String)
  id: GetCertificate(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetCertificate(ICertificatesOperations, String, String)
  nameWithType: CertificatesOperationsExtensions.GetCertificate(ICertificatesOperations, String, String)
  fullName: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCertificate(Microsoft.Azure.Management.WebSites.ICertificatesOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/CertificatesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetCertificate
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/CertificatesOperationsExtensions.cs
    startLine: 68
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites
  summary: "\nGet a certificate by certificate name for a subscription in the specified\nresource group.\n"
  example: []
  syntax:
    content: public static Certificate GetCertificate(this ICertificatesOperations operations, string resourceGroupName, string name)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCertificate(operations As ICertificatesOperations, resourceGroupName As String, name As String) As Certificate
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.WebSites.ICertificatesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group\n"
    - id: name
      type: System.String
      description: "\nName of the certificate.\n"
    return:
      type: Microsoft.Azure.Management.WebSites.Models.Certificate
  overload: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCertificate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCertificateAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCertificateAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String,System.Threading.CancellationToken)
  id: GetCertificateAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetCertificateAsync(ICertificatesOperations, String, String, CancellationToken)
  nameWithType: CertificatesOperationsExtensions.GetCertificateAsync(ICertificatesOperations, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCertificateAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/CertificatesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetCertificateAsync
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/CertificatesOperationsExtensions.cs
    startLine: 89
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites
  summary: "\nGet a certificate by certificate name for a subscription in the specified\nresource group.\n"
  example: []
  syntax:
    content: public static Task<Certificate> GetCertificateAsync(this ICertificatesOperations operations, string resourceGroupName, string name, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCertificateAsync(operations As ICertificatesOperations, resourceGroupName As String, name As String, cancellationToken As CancellationToken = Nothing) As Task(Of Certificate)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.WebSites.ICertificatesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group\n"
    - id: name
      type: System.String
      description: "\nName of the certificate.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.WebSites.Models.Certificate}
  overload: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCertificateAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.CreateOrUpdateCertificate(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String,Microsoft.Azure.Management.WebSites.Models.Certificate)
  commentId: M:Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.CreateOrUpdateCertificate(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String,Microsoft.Azure.Management.WebSites.Models.Certificate)
  id: CreateOrUpdateCertificate(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String,Microsoft.Azure.Management.WebSites.Models.Certificate)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateOrUpdateCertificate(ICertificatesOperations, String, String, Certificate)
  nameWithType: CertificatesOperationsExtensions.CreateOrUpdateCertificate(ICertificatesOperations, String, String, Certificate)
  fullName: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.CreateOrUpdateCertificate(Microsoft.Azure.Management.WebSites.ICertificatesOperations, System.String, System.String, Microsoft.Azure.Management.WebSites.Models.Certificate)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/CertificatesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: CreateOrUpdateCertificate
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/CertificatesOperationsExtensions.cs
    startLine: 112
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites
  summary: "\nCreates or modifies an existing certificate.\n"
  example: []
  syntax:
    content: public static Certificate CreateOrUpdateCertificate(this ICertificatesOperations operations, string resourceGroupName, string name, Certificate certificateEnvelope)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateOrUpdateCertificate(operations As ICertificatesOperations, resourceGroupName As String, name As String, certificateEnvelope As Certificate) As Certificate
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.WebSites.ICertificatesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group\n"
    - id: name
      type: System.String
      description: "\nName of the certificate.\n"
    - id: certificateEnvelope
      type: Microsoft.Azure.Management.WebSites.Models.Certificate
      description: "\nDetails of certificate if it exists already.\n"
    return:
      type: Microsoft.Azure.Management.WebSites.Models.Certificate
  overload: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.CreateOrUpdateCertificate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.CreateOrUpdateCertificateAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String,Microsoft.Azure.Management.WebSites.Models.Certificate,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.CreateOrUpdateCertificateAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String,Microsoft.Azure.Management.WebSites.Models.Certificate,System.Threading.CancellationToken)
  id: CreateOrUpdateCertificateAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String,Microsoft.Azure.Management.WebSites.Models.Certificate,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateOrUpdateCertificateAsync(ICertificatesOperations, String, String, Certificate, CancellationToken)
  nameWithType: CertificatesOperationsExtensions.CreateOrUpdateCertificateAsync(ICertificatesOperations, String, String, Certificate, CancellationToken)
  fullName: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.CreateOrUpdateCertificateAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations, System.String, System.String, Microsoft.Azure.Management.WebSites.Models.Certificate, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/CertificatesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: CreateOrUpdateCertificateAsync
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/CertificatesOperationsExtensions.cs
    startLine: 135
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites
  summary: "\nCreates or modifies an existing certificate.\n"
  example: []
  syntax:
    content: public static Task<Certificate> CreateOrUpdateCertificateAsync(this ICertificatesOperations operations, string resourceGroupName, string name, Certificate certificateEnvelope, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateOrUpdateCertificateAsync(operations As ICertificatesOperations, resourceGroupName As String, name As String, certificateEnvelope As Certificate, cancellationToken As CancellationToken = Nothing) As Task(Of Certificate)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.WebSites.ICertificatesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group\n"
    - id: name
      type: System.String
      description: "\nName of the certificate.\n"
    - id: certificateEnvelope
      type: Microsoft.Azure.Management.WebSites.Models.Certificate
      description: "\nDetails of certificate if it exists already.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.WebSites.Models.Certificate}
  overload: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.CreateOrUpdateCertificateAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.DeleteCertificate(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.DeleteCertificate(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String)
  id: DeleteCertificate(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions
  langs:
  - csharp
  - vb
  name: DeleteCertificate(ICertificatesOperations, String, String)
  nameWithType: CertificatesOperationsExtensions.DeleteCertificate(ICertificatesOperations, String, String)
  fullName: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.DeleteCertificate(Microsoft.Azure.Management.WebSites.ICertificatesOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/CertificatesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: DeleteCertificate
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/CertificatesOperationsExtensions.cs
    startLine: 156
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites
  summary: "\nDelete a certificate by name in a specificed subscription and\nresourcegroup.\n"
  example: []
  syntax:
    content: public static object DeleteCertificate(this ICertificatesOperations operations, string resourceGroupName, string name)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteCertificate(operations As ICertificatesOperations, resourceGroupName As String, name As String) As Object
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.WebSites.ICertificatesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group\n"
    - id: name
      type: System.String
      description: "\nName of the certificate to be deleted.\n"
    return:
      type: System.Object
  overload: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.DeleteCertificate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.DeleteCertificateAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.DeleteCertificateAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String,System.Threading.CancellationToken)
  id: DeleteCertificateAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions
  langs:
  - csharp
  - vb
  name: DeleteCertificateAsync(ICertificatesOperations, String, String, CancellationToken)
  nameWithType: CertificatesOperationsExtensions.DeleteCertificateAsync(ICertificatesOperations, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.DeleteCertificateAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/CertificatesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: DeleteCertificateAsync
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/CertificatesOperationsExtensions.cs
    startLine: 177
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites
  summary: "\nDelete a certificate by name in a specificed subscription and\nresourcegroup.\n"
  example: []
  syntax:
    content: public static Task<object> DeleteCertificateAsync(this ICertificatesOperations operations, string resourceGroupName, string name, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteCertificateAsync(operations As ICertificatesOperations, resourceGroupName As String, name As String, cancellationToken As CancellationToken = Nothing) As Task(Of Object)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.WebSites.ICertificatesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group\n"
    - id: name
      type: System.String
      description: "\nName of the certificate to be deleted.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{System.Object}
  overload: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.DeleteCertificateAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.UpdateCertificate(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String,Microsoft.Azure.Management.WebSites.Models.Certificate)
  commentId: M:Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.UpdateCertificate(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String,Microsoft.Azure.Management.WebSites.Models.Certificate)
  id: UpdateCertificate(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String,Microsoft.Azure.Management.WebSites.Models.Certificate)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions
  langs:
  - csharp
  - vb
  name: UpdateCertificate(ICertificatesOperations, String, String, Certificate)
  nameWithType: CertificatesOperationsExtensions.UpdateCertificate(ICertificatesOperations, String, String, Certificate)
  fullName: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.UpdateCertificate(Microsoft.Azure.Management.WebSites.ICertificatesOperations, System.String, System.String, Microsoft.Azure.Management.WebSites.Models.Certificate)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/CertificatesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: UpdateCertificate
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/CertificatesOperationsExtensions.cs
    startLine: 200
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites
  summary: "\nCreates or modifies an existing certificate.\n"
  example: []
  syntax:
    content: public static Certificate UpdateCertificate(this ICertificatesOperations operations, string resourceGroupName, string name, Certificate certificateEnvelope)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UpdateCertificate(operations As ICertificatesOperations, resourceGroupName As String, name As String, certificateEnvelope As Certificate) As Certificate
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.WebSites.ICertificatesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group\n"
    - id: name
      type: System.String
      description: "\nName of the certificate.\n"
    - id: certificateEnvelope
      type: Microsoft.Azure.Management.WebSites.Models.Certificate
      description: "\nDetails of certificate if it exists already.\n"
    return:
      type: Microsoft.Azure.Management.WebSites.Models.Certificate
  overload: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.UpdateCertificate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.UpdateCertificateAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String,Microsoft.Azure.Management.WebSites.Models.Certificate,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.UpdateCertificateAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String,Microsoft.Azure.Management.WebSites.Models.Certificate,System.Threading.CancellationToken)
  id: UpdateCertificateAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String,Microsoft.Azure.Management.WebSites.Models.Certificate,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions
  langs:
  - csharp
  - vb
  name: UpdateCertificateAsync(ICertificatesOperations, String, String, Certificate, CancellationToken)
  nameWithType: CertificatesOperationsExtensions.UpdateCertificateAsync(ICertificatesOperations, String, String, Certificate, CancellationToken)
  fullName: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.UpdateCertificateAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations, System.String, System.String, Microsoft.Azure.Management.WebSites.Models.Certificate, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/CertificatesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: UpdateCertificateAsync
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/CertificatesOperationsExtensions.cs
    startLine: 223
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites
  summary: "\nCreates or modifies an existing certificate.\n"
  example: []
  syntax:
    content: public static Task<Certificate> UpdateCertificateAsync(this ICertificatesOperations operations, string resourceGroupName, string name, Certificate certificateEnvelope, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UpdateCertificateAsync(operations As ICertificatesOperations, resourceGroupName As String, name As String, certificateEnvelope As Certificate, cancellationToken As CancellationToken = Nothing) As Task(Of Certificate)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.WebSites.ICertificatesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group\n"
    - id: name
      type: System.String
      description: "\nName of the certificate.\n"
    - id: certificateEnvelope
      type: Microsoft.Azure.Management.WebSites.Models.Certificate
      description: "\nDetails of certificate if it exists already.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.WebSites.Models.Certificate}
  overload: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.UpdateCertificateAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCsrs(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String)
  commentId: M:Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCsrs(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String)
  id: GetCsrs(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetCsrs(ICertificatesOperations, String)
  nameWithType: CertificatesOperationsExtensions.GetCsrs(ICertificatesOperations, String)
  fullName: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCsrs(Microsoft.Azure.Management.WebSites.ICertificatesOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/CertificatesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetCsrs
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/CertificatesOperationsExtensions.cs
    startLine: 241
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites
  summary: "\nGets the certificate signing requests for a subscription in the specified\nresource group\n"
  example: []
  syntax:
    content: public static IList<Csr> GetCsrs(this ICertificatesOperations operations, string resourceGroupName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCsrs(operations As ICertificatesOperations, resourceGroupName As String) As IList(Of Csr)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.WebSites.ICertificatesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group\n"
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.Csr}
  overload: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCsrs*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCsrsAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCsrsAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.Threading.CancellationToken)
  id: GetCsrsAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetCsrsAsync(ICertificatesOperations, String, CancellationToken)
  nameWithType: CertificatesOperationsExtensions.GetCsrsAsync(ICertificatesOperations, String, CancellationToken)
  fullName: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCsrsAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/CertificatesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetCsrsAsync
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/CertificatesOperationsExtensions.cs
    startLine: 259
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites
  summary: "\nGets the certificate signing requests for a subscription in the specified\nresource group\n"
  example: []
  syntax:
    content: public static Task<IList<Csr>> GetCsrsAsync(this ICertificatesOperations operations, string resourceGroupName, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCsrsAsync(operations As ICertificatesOperations, resourceGroupName As String, cancellationToken As CancellationToken = Nothing) As Task(Of IList(Of Csr))
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.WebSites.ICertificatesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.Csr}}
  overload: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCsrsAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCsr(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCsr(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String)
  id: GetCsr(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetCsr(ICertificatesOperations, String, String)
  nameWithType: CertificatesOperationsExtensions.GetCsr(ICertificatesOperations, String, String)
  fullName: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCsr(Microsoft.Azure.Management.WebSites.ICertificatesOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/CertificatesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetCsr
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/CertificatesOperationsExtensions.cs
    startLine: 280
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites
  summary: "\nGets a certificate signing request by certificate name for a subscription\nin the specified resource group\n"
  example: []
  syntax:
    content: public static Csr GetCsr(this ICertificatesOperations operations, string resourceGroupName, string name)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCsr(operations As ICertificatesOperations, resourceGroupName As String, name As String) As Csr
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.WebSites.ICertificatesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group\n"
    - id: name
      type: System.String
      description: "\nName of the certificate.\n"
    return:
      type: Microsoft.Azure.Management.WebSites.Models.Csr
  overload: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCsr*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCsrAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCsrAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String,System.Threading.CancellationToken)
  id: GetCsrAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetCsrAsync(ICertificatesOperations, String, String, CancellationToken)
  nameWithType: CertificatesOperationsExtensions.GetCsrAsync(ICertificatesOperations, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCsrAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/CertificatesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetCsrAsync
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/CertificatesOperationsExtensions.cs
    startLine: 301
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites
  summary: "\nGets a certificate signing request by certificate name for a subscription\nin the specified resource group\n"
  example: []
  syntax:
    content: public static Task<Csr> GetCsrAsync(this ICertificatesOperations operations, string resourceGroupName, string name, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCsrAsync(operations As ICertificatesOperations, resourceGroupName As String, name As String, cancellationToken As CancellationToken = Nothing) As Task(Of Csr)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.WebSites.ICertificatesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group\n"
    - id: name
      type: System.String
      description: "\nName of the certificate.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.WebSites.Models.Csr}
  overload: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCsrAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.CreateOrUpdateCsr(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String,Microsoft.Azure.Management.WebSites.Models.Csr)
  commentId: M:Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.CreateOrUpdateCsr(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String,Microsoft.Azure.Management.WebSites.Models.Csr)
  id: CreateOrUpdateCsr(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String,Microsoft.Azure.Management.WebSites.Models.Csr)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateOrUpdateCsr(ICertificatesOperations, String, String, Csr)
  nameWithType: CertificatesOperationsExtensions.CreateOrUpdateCsr(ICertificatesOperations, String, String, Csr)
  fullName: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.CreateOrUpdateCsr(Microsoft.Azure.Management.WebSites.ICertificatesOperations, System.String, System.String, Microsoft.Azure.Management.WebSites.Models.Csr)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/CertificatesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: CreateOrUpdateCsr
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/CertificatesOperationsExtensions.cs
    startLine: 324
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites
  summary: "\nCreates or modifies an existing certificate signing request.\n"
  example: []
  syntax:
    content: public static Csr CreateOrUpdateCsr(this ICertificatesOperations operations, string resourceGroupName, string name, Csr csrEnvelope)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateOrUpdateCsr(operations As ICertificatesOperations, resourceGroupName As String, name As String, csrEnvelope As Csr) As Csr
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.WebSites.ICertificatesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group\n"
    - id: name
      type: System.String
      description: "\nName of the certificate.\n"
    - id: csrEnvelope
      type: Microsoft.Azure.Management.WebSites.Models.Csr
      description: "\nDetails of certificate signing request if it exists already.\n"
    return:
      type: Microsoft.Azure.Management.WebSites.Models.Csr
  overload: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.CreateOrUpdateCsr*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.CreateOrUpdateCsrAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String,Microsoft.Azure.Management.WebSites.Models.Csr,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.CreateOrUpdateCsrAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String,Microsoft.Azure.Management.WebSites.Models.Csr,System.Threading.CancellationToken)
  id: CreateOrUpdateCsrAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String,Microsoft.Azure.Management.WebSites.Models.Csr,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateOrUpdateCsrAsync(ICertificatesOperations, String, String, Csr, CancellationToken)
  nameWithType: CertificatesOperationsExtensions.CreateOrUpdateCsrAsync(ICertificatesOperations, String, String, Csr, CancellationToken)
  fullName: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.CreateOrUpdateCsrAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations, System.String, System.String, Microsoft.Azure.Management.WebSites.Models.Csr, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/CertificatesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: CreateOrUpdateCsrAsync
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/CertificatesOperationsExtensions.cs
    startLine: 347
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites
  summary: "\nCreates or modifies an existing certificate signing request.\n"
  example: []
  syntax:
    content: public static Task<Csr> CreateOrUpdateCsrAsync(this ICertificatesOperations operations, string resourceGroupName, string name, Csr csrEnvelope, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateOrUpdateCsrAsync(operations As ICertificatesOperations, resourceGroupName As String, name As String, csrEnvelope As Csr, cancellationToken As CancellationToken = Nothing) As Task(Of Csr)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.WebSites.ICertificatesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group\n"
    - id: name
      type: System.String
      description: "\nName of the certificate.\n"
    - id: csrEnvelope
      type: Microsoft.Azure.Management.WebSites.Models.Csr
      description: "\nDetails of certificate signing request if it exists already.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.WebSites.Models.Csr}
  overload: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.CreateOrUpdateCsrAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.DeleteCsr(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.DeleteCsr(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String)
  id: DeleteCsr(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions
  langs:
  - csharp
  - vb
  name: DeleteCsr(ICertificatesOperations, String, String)
  nameWithType: CertificatesOperationsExtensions.DeleteCsr(ICertificatesOperations, String, String)
  fullName: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.DeleteCsr(Microsoft.Azure.Management.WebSites.ICertificatesOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/CertificatesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: DeleteCsr
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/CertificatesOperationsExtensions.cs
    startLine: 367
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites
  summary: "\nDelete the certificate signing request.\n"
  example: []
  syntax:
    content: public static object DeleteCsr(this ICertificatesOperations operations, string resourceGroupName, string name)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteCsr(operations As ICertificatesOperations, resourceGroupName As String, name As String) As Object
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.WebSites.ICertificatesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group\n"
    - id: name
      type: System.String
      description: "\nName of the certificate signing request.\n"
    return:
      type: System.Object
  overload: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.DeleteCsr*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.DeleteCsrAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.DeleteCsrAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String,System.Threading.CancellationToken)
  id: DeleteCsrAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions
  langs:
  - csharp
  - vb
  name: DeleteCsrAsync(ICertificatesOperations, String, String, CancellationToken)
  nameWithType: CertificatesOperationsExtensions.DeleteCsrAsync(ICertificatesOperations, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.DeleteCsrAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/CertificatesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: DeleteCsrAsync
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/CertificatesOperationsExtensions.cs
    startLine: 387
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites
  summary: "\nDelete the certificate signing request.\n"
  example: []
  syntax:
    content: public static Task<object> DeleteCsrAsync(this ICertificatesOperations operations, string resourceGroupName, string name, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteCsrAsync(operations As ICertificatesOperations, resourceGroupName As String, name As String, cancellationToken As CancellationToken = Nothing) As Task(Of Object)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.WebSites.ICertificatesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group\n"
    - id: name
      type: System.String
      description: "\nName of the certificate signing request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{System.Object}
  overload: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.DeleteCsrAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.UpdateCsr(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String,Microsoft.Azure.Management.WebSites.Models.Csr)
  commentId: M:Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.UpdateCsr(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String,Microsoft.Azure.Management.WebSites.Models.Csr)
  id: UpdateCsr(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String,Microsoft.Azure.Management.WebSites.Models.Csr)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions
  langs:
  - csharp
  - vb
  name: UpdateCsr(ICertificatesOperations, String, String, Csr)
  nameWithType: CertificatesOperationsExtensions.UpdateCsr(ICertificatesOperations, String, String, Csr)
  fullName: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.UpdateCsr(Microsoft.Azure.Management.WebSites.ICertificatesOperations, System.String, System.String, Microsoft.Azure.Management.WebSites.Models.Csr)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/CertificatesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: UpdateCsr
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/CertificatesOperationsExtensions.cs
    startLine: 410
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites
  summary: "\nCreates or modifies an existing certificate signing request.\n"
  example: []
  syntax:
    content: public static Csr UpdateCsr(this ICertificatesOperations operations, string resourceGroupName, string name, Csr csrEnvelope)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UpdateCsr(operations As ICertificatesOperations, resourceGroupName As String, name As String, csrEnvelope As Csr) As Csr
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.WebSites.ICertificatesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group\n"
    - id: name
      type: System.String
      description: "\nName of the certificate.\n"
    - id: csrEnvelope
      type: Microsoft.Azure.Management.WebSites.Models.Csr
      description: "\nDetails of certificate signing request if it exists already.\n"
    return:
      type: Microsoft.Azure.Management.WebSites.Models.Csr
  overload: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.UpdateCsr*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.UpdateCsrAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String,Microsoft.Azure.Management.WebSites.Models.Csr,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.UpdateCsrAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String,Microsoft.Azure.Management.WebSites.Models.Csr,System.Threading.CancellationToken)
  id: UpdateCsrAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations,System.String,System.String,Microsoft.Azure.Management.WebSites.Models.Csr,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions
  langs:
  - csharp
  - vb
  name: UpdateCsrAsync(ICertificatesOperations, String, String, Csr, CancellationToken)
  nameWithType: CertificatesOperationsExtensions.UpdateCsrAsync(ICertificatesOperations, String, String, Csr, CancellationToken)
  fullName: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.UpdateCsrAsync(Microsoft.Azure.Management.WebSites.ICertificatesOperations, System.String, System.String, Microsoft.Azure.Management.WebSites.Models.Csr, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/CertificatesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: UpdateCsrAsync
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/CertificatesOperationsExtensions.cs
    startLine: 433
  assemblies:
  - Microsoft.Azure.Management.Websites
  namespace: Microsoft.Azure.Management.WebSites
  summary: "\nCreates or modifies an existing certificate signing request.\n"
  example: []
  syntax:
    content: public static Task<Csr> UpdateCsrAsync(this ICertificatesOperations operations, string resourceGroupName, string name, Csr csrEnvelope, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UpdateCsrAsync(operations As ICertificatesOperations, resourceGroupName As String, name As String, csrEnvelope As Csr, cancellationToken As CancellationToken = Nothing) As Task(Of Csr)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.WebSites.ICertificatesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group\n"
    - id: name
      type: System.String
      description: "\nName of the certificate.\n"
    - id: csrEnvelope
      type: Microsoft.Azure.Management.WebSites.Models.Csr
      description: "\nDetails of certificate signing request if it exists already.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.WebSites.Models.Csr}
  overload: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.UpdateCsrAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.Management.WebSites
  commentId: N:Microsoft.Azure.Management.WebSites
  isExternal: false
  name: Microsoft.Azure.Management.WebSites
  nameWithType: Microsoft.Azure.Management.WebSites
  fullName: Microsoft.Azure.Management.WebSites
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCertificates*
  commentId: Overload:Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCertificates
  isExternal: false
  name: GetCertificates
  nameWithType: CertificatesOperationsExtensions.GetCertificates
  fullName: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCertificates
- uid: Microsoft.Azure.Management.WebSites.ICertificatesOperations
  commentId: T:Microsoft.Azure.Management.WebSites.ICertificatesOperations
  parent: Microsoft.Azure.Management.WebSites
  isExternal: false
  name: ICertificatesOperations
  nameWithType: ICertificatesOperations
  fullName: Microsoft.Azure.Management.WebSites.ICertificatesOperations
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Management.WebSites.Models.CertificateCollection
  commentId: T:Microsoft.Azure.Management.WebSites.Models.CertificateCollection
  parent: Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: CertificateCollection
  nameWithType: CertificateCollection
  fullName: Microsoft.Azure.Management.WebSites.Models.CertificateCollection
- uid: Microsoft.Azure.Management.WebSites.Models
  commentId: N:Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: Microsoft.Azure.Management.WebSites.Models
  nameWithType: Microsoft.Azure.Management.WebSites.Models
  fullName: Microsoft.Azure.Management.WebSites.Models
- uid: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCertificatesAsync*
  commentId: Overload:Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCertificatesAsync
  isExternal: false
  name: GetCertificatesAsync
  nameWithType: CertificatesOperationsExtensions.GetCertificatesAsync
  fullName: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCertificatesAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.WebSites.Models.CertificateCollection}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Management.WebSites.Models.CertificateCollection}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<CertificateCollection>
  nameWithType: Task<CertificateCollection>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.WebSites.Models.CertificateCollection>
  nameWithType.vb: Task(Of CertificateCollection)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.WebSites.Models.CertificateCollection)
  name.vb: Task(Of CertificateCollection)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.WebSites.Models.CertificateCollection
    name: CertificateCollection
    nameWithType: CertificateCollection
    fullName: Microsoft.Azure.Management.WebSites.Models.CertificateCollection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.WebSites.Models.CertificateCollection
    name: CertificateCollection
    nameWithType: CertificateCollection
    fullName: Microsoft.Azure.Management.WebSites.Models.CertificateCollection
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCertificate*
  commentId: Overload:Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCertificate
  isExternal: false
  name: GetCertificate
  nameWithType: CertificatesOperationsExtensions.GetCertificate
  fullName: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCertificate
- uid: Microsoft.Azure.Management.WebSites.Models.Certificate
  commentId: T:Microsoft.Azure.Management.WebSites.Models.Certificate
  parent: Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: Certificate
  nameWithType: Certificate
  fullName: Microsoft.Azure.Management.WebSites.Models.Certificate
- uid: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCertificateAsync*
  commentId: Overload:Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCertificateAsync
  isExternal: false
  name: GetCertificateAsync
  nameWithType: CertificatesOperationsExtensions.GetCertificateAsync
  fullName: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCertificateAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.WebSites.Models.Certificate}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Management.WebSites.Models.Certificate}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Certificate>
  nameWithType: Task<Certificate>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.WebSites.Models.Certificate>
  nameWithType.vb: Task(Of Certificate)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.WebSites.Models.Certificate)
  name.vb: Task(Of Certificate)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.WebSites.Models.Certificate
    name: Certificate
    nameWithType: Certificate
    fullName: Microsoft.Azure.Management.WebSites.Models.Certificate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.WebSites.Models.Certificate
    name: Certificate
    nameWithType: Certificate
    fullName: Microsoft.Azure.Management.WebSites.Models.Certificate
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.CreateOrUpdateCertificate*
  commentId: Overload:Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.CreateOrUpdateCertificate
  isExternal: false
  name: CreateOrUpdateCertificate
  nameWithType: CertificatesOperationsExtensions.CreateOrUpdateCertificate
  fullName: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.CreateOrUpdateCertificate
- uid: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.CreateOrUpdateCertificateAsync*
  commentId: Overload:Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.CreateOrUpdateCertificateAsync
  isExternal: false
  name: CreateOrUpdateCertificateAsync
  nameWithType: CertificatesOperationsExtensions.CreateOrUpdateCertificateAsync
  fullName: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.CreateOrUpdateCertificateAsync
- uid: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.DeleteCertificate*
  commentId: Overload:Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.DeleteCertificate
  isExternal: false
  name: DeleteCertificate
  nameWithType: CertificatesOperationsExtensions.DeleteCertificate
  fullName: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.DeleteCertificate
- uid: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.DeleteCertificateAsync*
  commentId: Overload:Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.DeleteCertificateAsync
  isExternal: false
  name: DeleteCertificateAsync
  nameWithType: CertificatesOperationsExtensions.DeleteCertificateAsync
  fullName: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.DeleteCertificateAsync
- uid: System.Threading.Tasks.Task{System.Object}
  commentId: T:System.Threading.Tasks.Task{System.Object}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Object>
  nameWithType: Task<Object>
  fullName: System.Threading.Tasks.Task<System.Object>
  nameWithType.vb: Task(Of Object)
  fullname.vb: System.Threading.Tasks.Task(Of System.Object)
  name.vb: Task(Of Object)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.UpdateCertificate*
  commentId: Overload:Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.UpdateCertificate
  isExternal: false
  name: UpdateCertificate
  nameWithType: CertificatesOperationsExtensions.UpdateCertificate
  fullName: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.UpdateCertificate
- uid: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.UpdateCertificateAsync*
  commentId: Overload:Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.UpdateCertificateAsync
  isExternal: false
  name: UpdateCertificateAsync
  nameWithType: CertificatesOperationsExtensions.UpdateCertificateAsync
  fullName: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.UpdateCertificateAsync
- uid: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCsrs*
  commentId: Overload:Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCsrs
  isExternal: false
  name: GetCsrs
  nameWithType: CertificatesOperationsExtensions.GetCsrs
  fullName: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCsrs
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.Csr}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.Csr}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Csr>
  nameWithType: IList<Csr>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.WebSites.Models.Csr>
  nameWithType.vb: IList(Of Csr)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.WebSites.Models.Csr)
  name.vb: IList(Of Csr)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.WebSites.Models.Csr
    name: Csr
    nameWithType: Csr
    fullName: Microsoft.Azure.Management.WebSites.Models.Csr
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.WebSites.Models.Csr
    name: Csr
    nameWithType: Csr
    fullName: Microsoft.Azure.Management.WebSites.Models.Csr
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCsrsAsync*
  commentId: Overload:Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCsrsAsync
  isExternal: false
  name: GetCsrsAsync
  nameWithType: CertificatesOperationsExtensions.GetCsrsAsync
  fullName: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCsrsAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.Csr}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.Csr}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IList<Csr>>
  nameWithType: Task<IList<Csr>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IList<Microsoft.Azure.Management.WebSites.Models.Csr>>
  nameWithType.vb: Task(Of IList(Of Csr))
  fullname.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IList(Of Microsoft.Azure.Management.WebSites.Models.Csr))
  name.vb: Task(Of IList(Of Csr))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.WebSites.Models.Csr
    name: Csr
    nameWithType: Csr
    fullName: Microsoft.Azure.Management.WebSites.Models.Csr
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.WebSites.Models.Csr
    name: Csr
    nameWithType: Csr
    fullName: Microsoft.Azure.Management.WebSites.Models.Csr
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCsr*
  commentId: Overload:Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCsr
  isExternal: false
  name: GetCsr
  nameWithType: CertificatesOperationsExtensions.GetCsr
  fullName: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCsr
- uid: Microsoft.Azure.Management.WebSites.Models.Csr
  commentId: T:Microsoft.Azure.Management.WebSites.Models.Csr
  parent: Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: Csr
  nameWithType: Csr
  fullName: Microsoft.Azure.Management.WebSites.Models.Csr
- uid: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCsrAsync*
  commentId: Overload:Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCsrAsync
  isExternal: false
  name: GetCsrAsync
  nameWithType: CertificatesOperationsExtensions.GetCsrAsync
  fullName: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.GetCsrAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.WebSites.Models.Csr}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Management.WebSites.Models.Csr}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Csr>
  nameWithType: Task<Csr>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.WebSites.Models.Csr>
  nameWithType.vb: Task(Of Csr)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.WebSites.Models.Csr)
  name.vb: Task(Of Csr)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.WebSites.Models.Csr
    name: Csr
    nameWithType: Csr
    fullName: Microsoft.Azure.Management.WebSites.Models.Csr
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.WebSites.Models.Csr
    name: Csr
    nameWithType: Csr
    fullName: Microsoft.Azure.Management.WebSites.Models.Csr
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.CreateOrUpdateCsr*
  commentId: Overload:Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.CreateOrUpdateCsr
  isExternal: false
  name: CreateOrUpdateCsr
  nameWithType: CertificatesOperationsExtensions.CreateOrUpdateCsr
  fullName: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.CreateOrUpdateCsr
- uid: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.CreateOrUpdateCsrAsync*
  commentId: Overload:Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.CreateOrUpdateCsrAsync
  isExternal: false
  name: CreateOrUpdateCsrAsync
  nameWithType: CertificatesOperationsExtensions.CreateOrUpdateCsrAsync
  fullName: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.CreateOrUpdateCsrAsync
- uid: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.DeleteCsr*
  commentId: Overload:Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.DeleteCsr
  isExternal: false
  name: DeleteCsr
  nameWithType: CertificatesOperationsExtensions.DeleteCsr
  fullName: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.DeleteCsr
- uid: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.DeleteCsrAsync*
  commentId: Overload:Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.DeleteCsrAsync
  isExternal: false
  name: DeleteCsrAsync
  nameWithType: CertificatesOperationsExtensions.DeleteCsrAsync
  fullName: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.DeleteCsrAsync
- uid: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.UpdateCsr*
  commentId: Overload:Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.UpdateCsr
  isExternal: false
  name: UpdateCsr
  nameWithType: CertificatesOperationsExtensions.UpdateCsr
  fullName: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.UpdateCsr
- uid: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.UpdateCsrAsync*
  commentId: Overload:Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.UpdateCsrAsync
  isExternal: false
  name: UpdateCsrAsync
  nameWithType: CertificatesOperationsExtensions.UpdateCsrAsync
  fullName: Microsoft.Azure.Management.WebSites.CertificatesOperationsExtensions.UpdateCsrAsync
