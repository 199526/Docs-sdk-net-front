items:
- uid: Microsoft.Azure.Management.Search.Models.QueryKey
  commentId: T:Microsoft.Azure.Management.Search.Models.QueryKey
  id: QueryKey
  parent: Microsoft.Azure.Management.Search.Models
  children:
  - Microsoft.Azure.Management.Search.Models.QueryKey.#ctor
  - Microsoft.Azure.Management.Search.Models.QueryKey.#ctor(System.String,System.String)
  - Microsoft.Azure.Management.Search.Models.QueryKey.Key
  - Microsoft.Azure.Management.Search.Models.QueryKey.Name
  langs:
  - csharp
  - vb
  name: QueryKey
  fullName: Microsoft.Azure.Management.Search.Models.QueryKey
  type: Class
  source:
    remote:
      path: src/Search/Microsoft.Azure.Management.Search/Generated/Models/QueryKey.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: QueryKey
    path: src/Search/Microsoft.Azure.Management.Search/Generated/Models/QueryKey.cs
    startLine: 22
  assemblies:
  - Microsoft.Azure.Management.Search
  packages:
  - Microsoft.Azure.Management.Search(0.9.0-preview)
  namespace: Microsoft.Azure.Management.Search.Models
  summary: "\nDescribes an API key for a given Azure Search service that has\npermissions for query operations only.\n"
  example: []
  syntax:
    content: public class QueryKey
    content.vb: Public Class QueryKey
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Search.Models.QueryKey.#ctor
  commentId: M:Microsoft.Azure.Management.Search.Models.QueryKey.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Search.Models.QueryKey
  langs:
  - csharp
  - vb
  name: QueryKey()
  fullName: Microsoft.Azure.Management.Search.Models.QueryKey.QueryKey()
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Management.Search/Generated/Models/QueryKey.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: .ctor
    path: src/Search/Microsoft.Azure.Management.Search/Generated/Models/QueryKey.cs
    startLine: 27
  assemblies:
  - Microsoft.Azure.Management.Search
  packages:
  - Microsoft.Azure.Management.Search(0.9.0-preview)
  namespace: Microsoft.Azure.Management.Search.Models
  summary: "\nInitializes a new instance of the QueryKey class.\n"
  example: []
  syntax:
    content: public QueryKey()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Search.Models.QueryKey.#ctor(System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Search.Models.QueryKey.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Microsoft.Azure.Management.Search.Models.QueryKey
  langs:
  - csharp
  - vb
  name: QueryKey(String, String)
  fullName: Microsoft.Azure.Management.Search.Models.QueryKey.QueryKey(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Management.Search/Generated/Models/QueryKey.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: .ctor
    path: src/Search/Microsoft.Azure.Management.Search/Generated/Models/QueryKey.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Management.Search
  packages:
  - Microsoft.Azure.Management.Search(0.9.0-preview)
  namespace: Microsoft.Azure.Management.Search.Models
  summary: "\nInitializes a new instance of the QueryKey class.\n"
  example: []
  syntax:
    content: public QueryKey(string name = null, string key = null)
    content.vb: Public Sub New(name As String = Nothing, key As String = Nothing)
    parameters:
    - id: name
      type: System.String
    - id: key
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Search.Models.QueryKey.Name
  commentId: P:Microsoft.Azure.Management.Search.Models.QueryKey.Name
  id: Name
  parent: Microsoft.Azure.Management.Search.Models.QueryKey
  langs:
  - csharp
  - vb
  name: Name
  fullName: Microsoft.Azure.Management.Search.Models.QueryKey.Name
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Management.Search/Generated/Models/QueryKey.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Name
    path: src/Search/Microsoft.Azure.Management.Search/Generated/Models/QueryKey.cs
    startLine: 41
  assemblies:
  - Microsoft.Azure.Management.Search
  packages:
  - Microsoft.Azure.Management.Search(0.9.0-preview)
  namespace: Microsoft.Azure.Management.Search.Models
  summary: "\nGets the name of the query API key; may be empty.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "name")]

      public string Name { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="name")>

      Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: name
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Search.Models.QueryKey.Key
  commentId: P:Microsoft.Azure.Management.Search.Models.QueryKey.Key
  id: Key
  parent: Microsoft.Azure.Management.Search.Models.QueryKey
  langs:
  - csharp
  - vb
  name: Key
  fullName: Microsoft.Azure.Management.Search.Models.QueryKey.Key
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Management.Search/Generated/Models/QueryKey.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Key
    path: src/Search/Microsoft.Azure.Management.Search/Generated/Models/QueryKey.cs
    startLine: 47
  assemblies:
  - Microsoft.Azure.Management.Search
  packages:
  - Microsoft.Azure.Management.Search(0.9.0-preview)
  namespace: Microsoft.Azure.Management.Search.Models
  summary: "\nGets the value of the query API key.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "key")]

      public string Key { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="key")>

      Public ReadOnly Property Key As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: key
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Azure.Management.Search.Models
  isExternal: false
  name: Microsoft.Azure.Management.Search.Models
  fullName: Microsoft.Azure.Management.Search.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
