### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitStatsOperationsExtensions
  commentId: T:Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitStatsOperationsExtensions
  id: DedicatedCircuitStatsOperationsExtensions
  parent: Microsoft.WindowsAzure.Management.ExpressRoute
  children:
  - Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitStatsOperationsExtensions.Get(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitStatsOperations,System.String,Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType)
  - Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitStatsOperationsExtensions.GetAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitStatsOperations,System.String,Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType)
  langs:
  - csharp
  - vb
  name: DedicatedCircuitStatsOperationsExtensions
  nameWithType: DedicatedCircuitStatsOperationsExtensions
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitStatsOperationsExtensions
  type: Class
  source:
    remote:
      commit:
        author:
          date: 2016-08-08T08:43:31.3279717Z
    id: DedicatedCircuitStatsOperationsExtensions
    path: C:/TeamCity/buildAgent/work/5da8a3841a6cb95c/azure-sdk-for-net/src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/DedicatedCircuitStatsOperationsExtensions.cs
    startLine: 39
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute
  summary: "\nThe Express Route API provides programmatic access to the functionality\nneeded by the customer to set up Dedicated Circuits and Dedicated\nCircuit Links. The Express Route Customer API is a REST API. All API\noperations are performed over SSL and mutually authenticated using\nX.509 v3 certificates.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/ee460799.aspx for\nmore information)\n"
  example: []
  syntax:
    content: public static class DedicatedCircuitStatsOperationsExtensions
    content.vb: Public Module DedicatedCircuitStatsOperationsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitStatsOperationsExtensions.Get(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitStatsOperations,System.String,Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType)
  commentId: M:Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitStatsOperationsExtensions.Get(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitStatsOperations,System.String,Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType)
  id: Get(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitStatsOperations,System.String,Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitStatsOperationsExtensions
  langs:
  - csharp
  - vb
  name: Get(IDedicatedCircuitStatsOperations, String, BgpPeeringAccessType)
  nameWithType: DedicatedCircuitStatsOperationsExtensions.Get(IDedicatedCircuitStatsOperations, String, BgpPeeringAccessType)
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitStatsOperationsExtensions.Get(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitStatsOperations, System.String, Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType)
  type: Method
  source:
    remote:
      commit:
        author:
          date: 2016-08-08T08:43:31.3279717Z
    id: Get
    path: C:/TeamCity/buildAgent/work/5da8a3841a6cb95c/azure-sdk-for-net/src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/DedicatedCircuitStatsOperationsExtensions.cs
    startLine: 59
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute
  summary: "\nThe Get Dedicated Circuit Stats operation retrieves the\nbytesin/bytesout of the dedicated circuit on primary/secondary\ndevices for specified peering type.\n"
  example: []
  syntax:
    content: public static DedicatedCircuitStatsGetResponse Get(this IDedicatedCircuitStatsOperations operations, string serviceKey, BgpPeeringAccessType accessType)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Get(operations As IDedicatedCircuitStatsOperations, serviceKey As String, accessType As BgpPeeringAccessType) As DedicatedCircuitStatsGetResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitStatsOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitStatsOperations.\n"
    - id: serviceKey
      type: System.String
      description: "\nRequired. The service key representing the circuit.\n"
    - id: accessType
      type: Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType
      description: "\nRequired. Whether the peering is private or public or microsoft.\n"
    return:
      type: Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitStatsGetResponse
      description: "\nThe Get DedicatedCircuitStats operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitStatsOperationsExtensions.GetAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitStatsOperations,System.String,Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType)
  commentId: M:Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitStatsOperationsExtensions.GetAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitStatsOperations,System.String,Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType)
  id: GetAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitStatsOperations,System.String,Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitStatsOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetAsync(IDedicatedCircuitStatsOperations, String, BgpPeeringAccessType)
  nameWithType: DedicatedCircuitStatsOperationsExtensions.GetAsync(IDedicatedCircuitStatsOperations, String, BgpPeeringAccessType)
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitStatsOperationsExtensions.GetAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitStatsOperations, System.String, Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType)
  type: Method
  source:
    remote:
      commit:
        author:
          date: 2016-08-08T08:43:31.3279717Z
    id: GetAsync
    path: C:/TeamCity/buildAgent/work/5da8a3841a6cb95c/azure-sdk-for-net/src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/DedicatedCircuitStatsOperationsExtensions.cs
    startLine: 86
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute
  summary: "\nThe Get Dedicated Circuit Stats operation retrieves the\nbytesin/bytesout of the dedicated circuit on primary/secondary\ndevices for specified peering type.\n"
  example: []
  syntax:
    content: public static Task<DedicatedCircuitStatsGetResponse> GetAsync(this IDedicatedCircuitStatsOperations operations, string serviceKey, BgpPeeringAccessType accessType)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAsync(operations As IDedicatedCircuitStatsOperations, serviceKey As String, accessType As BgpPeeringAccessType) As Task(Of DedicatedCircuitStatsGetResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitStatsOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitStatsOperations.\n"
    - id: serviceKey
      type: System.String
      description: "\nRequired. The service key representing the circuit.\n"
    - id: accessType
      type: Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType
      description: "\nRequired. Whether the peering is private or public or microsoft.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitStatsGetResponse}
      description: "\nThe Get DedicatedCircuitStats operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.WindowsAzure.Management.ExpressRoute
  commentId: N:Microsoft.WindowsAzure.Management.ExpressRoute
  isExternal: false
  name: Microsoft.WindowsAzure.Management.ExpressRoute
  nameWithType: Microsoft.WindowsAzure.Management.ExpressRoute
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitStatsOperations
  commentId: T:Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitStatsOperations
  parent: Microsoft.WindowsAzure.Management.ExpressRoute
  isExternal: false
  name: IDedicatedCircuitStatsOperations
  nameWithType: IDedicatedCircuitStatsOperations
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitStatsOperations
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType
  commentId: T:Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.Models
  isExternal: false
  name: BgpPeeringAccessType
  nameWithType: BgpPeeringAccessType
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitStatsGetResponse
  commentId: T:Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitStatsGetResponse
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.Models
  isExternal: false
  name: DedicatedCircuitStatsGetResponse
  nameWithType: DedicatedCircuitStatsGetResponse
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitStatsGetResponse
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models
  commentId: N:Microsoft.WindowsAzure.Management.ExpressRoute.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.ExpressRoute.Models
  nameWithType: Microsoft.WindowsAzure.Management.ExpressRoute.Models
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models
- uid: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitStatsGetResponse}
  commentId: T:System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitStatsGetResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<DedicatedCircuitStatsGetResponse>
  nameWithType: Task<DedicatedCircuitStatsGetResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitStatsGetResponse>
  nameWithType.vb: Task(Of DedicatedCircuitStatsGetResponse)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitStatsGetResponse)
  name.vb: Task(Of DedicatedCircuitStatsGetResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitStatsGetResponse
    name: DedicatedCircuitStatsGetResponse
    nameWithType: DedicatedCircuitStatsGetResponse
    fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitStatsGetResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitStatsGetResponse
    name: DedicatedCircuitStatsGetResponse
    nameWithType: DedicatedCircuitStatsGetResponse
    fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models.DedicatedCircuitStatsGetResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
