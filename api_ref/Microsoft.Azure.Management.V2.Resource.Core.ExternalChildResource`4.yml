items:
- uid: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResource`4
  commentId: T:Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResource`4
  id: ExternalChildResource`4
  parent: Microsoft.Azure.Management.V2.Resource.Core
  children:
  - Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResource`4.#ctor(System.String,`3,`1)
  - Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResource`4.CreateAsync(System.Threading.CancellationToken)
  - Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResource`4.DeleteAsync(System.Threading.CancellationToken)
  - Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResource`4.Name
  - Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResource`4.PendingOperation
  - Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResource`4.UpdateAsync(System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: ExternalChildResource<FluentModelT, InnerModelT, IParentT, ParentImplT>
  fullName: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResource<FluentModelT, InnerModelT, IParentT, ParentImplT>
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ExternalChildResource.cs
      branch: 91c366fb88e1246de62d778537a6b9d27538844a
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ExternalChildResource
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ExternalChildResource.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core
  summary: "\nExternalized child resource abstract implementation.\nInorder to be eligible for an external child resource following criteria must be satisfied:\n1. It's is always associated with a parent resource and has no existence without parent\ni.e. if you delete parent then child resource will be deleted automatically.\n2. Parent will contain collection of child resources. this is not a hard requirement.\nIt's has an ID and can be created, updated, fetched and deleted independent of the parent\ni.e.CRUD on child resource does not require CRUD on the parent\n(Internal use only)\n"
  example: []
  syntax:
    content: 'public abstract class ExternalChildResource<FluentModelT, InnerModelT, IParentT, ParentImplT> : ChildResource<InnerModelT, ParentImplT, IParentT>, IWrapper<InnerModelT>, IChildResource<IParentT>, IIndexable where FluentModelT : IExternalChildResource<FluentModelT, IParentT> where ParentImplT : IParentT'
    content.vb: >-
      Public MustInherit Class ExternalChildResource(Of FluentModelT As IExternalChildResource(Of FluentModelT, IParentT), InnerModelT, IParentT, ParentImplT As IParentT)
          Inherits ChildResource(Of InnerModelT, ParentImplT, IParentT)
          Implements IWrapper(Of InnerModelT), IChildResource(Of IParentT), IIndexable
    typeParameters:
    - id: FluentModelT
      description: the external child resource fluent interface
    - id: InnerModelT
      description: Azure inner resource class type representing the child resource
    - id: IParentT
      description: parent fluent interface
    - id: ParentImplT
      description: parent resource implementation type
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.V2.Resource.Core.Indexable
  - Microsoft.Azure.Management.V2.Resource.Core.IndexableWrapper{{InnerModelT}}
  - Microsoft.Azure.Management.V2.Resource.Core.ChildResource{{InnerModelT},{ParentImplT},{IParentT}}
  implements:
  - Microsoft.Azure.Management.V2.Resource.Core.IWrapper{{InnerModelT}}
  - Microsoft.Azure.Management.V2.Resource.Core.IChildResource{{IParentT}}
  - Microsoft.Azure.Management.V2.Resource.Core.ResourceActions.IIndexable
  inheritedMembers:
  - Microsoft.Azure.Management.V2.Resource.Core.ChildResource{{InnerModelT},{ParentImplT},{IParentT}}.Parent
  - Microsoft.Azure.Management.V2.Resource.Core.ChildResource{{InnerModelT},{ParentImplT},{IParentT}}.Name
  - Microsoft.Azure.Management.V2.Resource.Core.ChildResource{{InnerModelT},{ParentImplT},{IParentT}}.Microsoft#Azure#Management#V2#Resource#Core#IChildResource{IParentT}#Parent
  - Microsoft.Azure.Management.V2.Resource.Core.IndexableWrapper{{InnerModelT}}.Inner
  - Microsoft.Azure.Management.V2.Resource.Core.IndexableWrapper{{InnerModelT}}.SetInner({InnerModelT})
  - Microsoft.Azure.Management.V2.Resource.Core.Indexable.Key
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResource(Of FluentModelT, InnerModelT, IParentT, ParentImplT)
  name.vb: ExternalChildResource(Of FluentModelT, InnerModelT, IParentT, ParentImplT)
- uid: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResource`4.#ctor(System.String,`3,`1)
  commentId: M:Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResource`4.#ctor(System.String,`3,`1)
  id: '#ctor(System.String,`3,`1)'
  parent: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResource`4
  langs:
  - csharp
  - vb
  name: ExternalChildResource(String, ParentImplT, InnerModelT)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResource<FluentModelT, InnerModelT, IParentT, ParentImplT>.ExternalChildResource(System.String, ParentImplT, InnerModelT)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ExternalChildResource.cs
      branch: 91c366fb88e1246de62d778537a6b9d27538844a
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ExternalChildResource.cs
    startLine: 41
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core
  summary: "\nCreates an instance of external child resource in-memory.\n"
  example: []
  syntax:
    content: public ExternalChildResource(string name, ParentImplT parent, InnerModelT innerObject)
    content.vb: Public Sub New(name As String, parent As ParentImplT, innerObject As InnerModelT)
    parameters:
    - id: name
      type: System.String
      description: the name of this external child resource
    - id: parent
      type: '{ParentImplT}'
      description: reference to the parent of this external child resource
    - id: innerObject
      type: '{InnerModelT}'
      description: reference to the inner object representing this external child resource
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResource(Of FluentModelT, InnerModelT, IParentT, ParentImplT).ExternalChildResource(System.String, ParentImplT, InnerModelT)
- uid: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResource`4.Name
  commentId: P:Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResource`4.Name
  id: Name
  parent: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResource`4
  langs:
  - csharp
  - vb
  name: Name
  fullName: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResource<FluentModelT, InnerModelT, IParentT, ParentImplT>.Name
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ExternalChildResource.cs
      branch: 91c366fb88e1246de62d778537a6b9d27538844a
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ExternalChildResource.cs
    startLine: 47
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core
  syntax:
    content: public override string Name { get; }
    content.vb: Public Overrides ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
  overridden: Microsoft.Azure.Management.V2.Resource.Core.ChildResource{{InnerModelT},{ParentImplT},{IParentT}}.Name
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResource(Of FluentModelT, InnerModelT, IParentT, ParentImplT).Name
- uid: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResource`4.PendingOperation
  commentId: P:Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResource`4.PendingOperation
  id: PendingOperation
  parent: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResource`4
  langs:
  - csharp
  - vb
  name: PendingOperation
  fullName: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResource<FluentModelT, InnerModelT, IParentT, ParentImplT>.PendingOperation
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ExternalChildResource.cs
      branch: 91c366fb88e1246de62d778537a6b9d27538844a
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PendingOperation
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ExternalChildResource.cs
    startLine: 56
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core
  example: []
  syntax:
    content: public PendingOperation PendingOperation { get; }
    content.vb: Public ReadOnly Property PendingOperation As PendingOperation
    parameters: []
    return:
      type: Microsoft.Azure.Management.V2.Resource.Core.PendingOperation
      description: the in-memory state of this child resource and state represents any pending action on the child resource.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResource(Of FluentModelT, InnerModelT, IParentT, ParentImplT).PendingOperation
- uid: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResource`4.CreateAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResource`4.CreateAsync(System.Threading.CancellationToken)
  id: CreateAsync(System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResource`4
  langs:
  - csharp
  - vb
  name: CreateAsync(CancellationToken)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResource<FluentModelT, InnerModelT, IParentT, ParentImplT>.CreateAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ExternalChildResource.cs
      branch: 91c366fb88e1246de62d778537a6b9d27538844a
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateAsync
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ExternalChildResource.cs
    startLine: 65
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core
  summary: "\nCreates this external child resource.\n"
  example: []
  syntax:
    content: public abstract Task<FluentModelT> CreateAsync(CancellationToken cancellationToke)
    content.vb: Public MustOverride Function CreateAsync(cancellationToke As CancellationToken) As Task(Of FluentModelT)
    parameters:
    - id: cancellationToke
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{{FluentModelT}}
      description: the task to track the create action
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResource(Of FluentModelT, InnerModelT, IParentT, ParentImplT).CreateAsync(System.Threading.CancellationToken)
- uid: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResource`4.UpdateAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResource`4.UpdateAsync(System.Threading.CancellationToken)
  id: UpdateAsync(System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResource`4
  langs:
  - csharp
  - vb
  name: UpdateAsync(CancellationToken)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResource<FluentModelT, InnerModelT, IParentT, ParentImplT>.UpdateAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ExternalChildResource.cs
      branch: 91c366fb88e1246de62d778537a6b9d27538844a
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UpdateAsync
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ExternalChildResource.cs
    startLine: 71
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core
  summary: "\nUpdates this external child resource.\n"
  example: []
  syntax:
    content: public abstract Task<FluentModelT> UpdateAsync(CancellationToken cancellationToke)
    content.vb: Public MustOverride Function UpdateAsync(cancellationToke As CancellationToken) As Task(Of FluentModelT)
    parameters:
    - id: cancellationToke
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{{FluentModelT}}
      description: the task to track the update action
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResource(Of FluentModelT, InnerModelT, IParentT, ParentImplT).UpdateAsync(System.Threading.CancellationToken)
- uid: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResource`4.DeleteAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResource`4.DeleteAsync(System.Threading.CancellationToken)
  id: DeleteAsync(System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResource`4
  langs:
  - csharp
  - vb
  name: DeleteAsync(CancellationToken)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResource<FluentModelT, InnerModelT, IParentT, ParentImplT>.DeleteAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ExternalChildResource.cs
      branch: 91c366fb88e1246de62d778537a6b9d27538844a
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeleteAsync
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ExternalChildResource.cs
    startLine: 77
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core
  summary: "\nDeletes this external child resource.\n"
  example: []
  syntax:
    content: public abstract Task DeleteAsync(CancellationToken cancellationToke)
    content.vb: Public MustOverride Function DeleteAsync(cancellationToke As CancellationToken) As Task
    parameters:
    - id: cancellationToke
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: the task to track the delete action
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.ExternalChildResource(Of FluentModelT, InnerModelT, IParentT, ParentImplT).DeleteAsync(System.Threading.CancellationToken)
references:
- uid: Microsoft.Azure.Management.V2.Resource.Core
  isExternal: false
  name: Microsoft.Azure.Management.V2.Resource.Core
  fullName: Microsoft.Azure.Management.V2.Resource.Core
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.V2.Resource.Core.Indexable
  parent: Microsoft.Azure.Management.V2.Resource.Core
  isExternal: false
  name: Indexable
  fullName: Microsoft.Azure.Management.V2.Resource.Core.Indexable
- uid: Microsoft.Azure.Management.V2.Resource.Core.IndexableWrapper{{InnerModelT}}
  parent: Microsoft.Azure.Management.V2.Resource.Core
  definition: Microsoft.Azure.Management.V2.Resource.Core.IndexableWrapper`1
  name: IndexableWrapper<InnerModelT>
  fullName: Microsoft.Azure.Management.V2.Resource.Core.IndexableWrapper<InnerModelT>
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.IndexableWrapper(Of InnerModelT)
  name.vb: IndexableWrapper(Of InnerModelT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.IndexableWrapper`1
    name: IndexableWrapper
    fullName: Microsoft.Azure.Management.V2.Resource.Core.IndexableWrapper
  - name: <
    fullName: <
  - name: InnerModelT
    fullName: InnerModelT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.IndexableWrapper`1
    name: IndexableWrapper
    fullName: Microsoft.Azure.Management.V2.Resource.Core.IndexableWrapper
  - name: '(Of '
    fullName: '(Of '
  - name: InnerModelT
    fullName: InnerModelT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.V2.Resource.Core.ChildResource{{InnerModelT},{ParentImplT},{IParentT}}
  parent: Microsoft.Azure.Management.V2.Resource.Core
  definition: Microsoft.Azure.Management.V2.Resource.Core.ChildResource`3
  name: ChildResource<InnerModelT, ParentImplT, IParentT>
  fullName: Microsoft.Azure.Management.V2.Resource.Core.ChildResource<InnerModelT, ParentImplT, IParentT>
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.ChildResource(Of InnerModelT, ParentImplT, IParentT)
  name.vb: ChildResource(Of InnerModelT, ParentImplT, IParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.ChildResource`3
    name: ChildResource
    fullName: Microsoft.Azure.Management.V2.Resource.Core.ChildResource
  - name: <
    fullName: <
  - name: InnerModelT
    fullName: InnerModelT
  - name: ', '
    fullName: ', '
  - name: ParentImplT
    fullName: ParentImplT
  - name: ', '
    fullName: ', '
  - name: IParentT
    fullName: IParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.ChildResource`3
    name: ChildResource
    fullName: Microsoft.Azure.Management.V2.Resource.Core.ChildResource
  - name: '(Of '
    fullName: '(Of '
  - name: InnerModelT
    fullName: InnerModelT
  - name: ', '
    fullName: ', '
  - name: ParentImplT
    fullName: ParentImplT
  - name: ', '
    fullName: ', '
  - name: IParentT
    fullName: IParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.V2.Resource.Core.IWrapper{{InnerModelT}}
  parent: Microsoft.Azure.Management.V2.Resource.Core
  definition: Microsoft.Azure.Management.V2.Resource.Core.IWrapper`1
  name: IWrapper<InnerModelT>
  fullName: Microsoft.Azure.Management.V2.Resource.Core.IWrapper<InnerModelT>
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.IWrapper(Of InnerModelT)
  name.vb: IWrapper(Of InnerModelT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.IWrapper`1
    name: IWrapper
    fullName: Microsoft.Azure.Management.V2.Resource.Core.IWrapper
  - name: <
    fullName: <
  - name: InnerModelT
    fullName: InnerModelT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.IWrapper`1
    name: IWrapper
    fullName: Microsoft.Azure.Management.V2.Resource.Core.IWrapper
  - name: '(Of '
    fullName: '(Of '
  - name: InnerModelT
    fullName: InnerModelT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.V2.Resource.Core.IChildResource{{IParentT}}
  parent: Microsoft.Azure.Management.V2.Resource.Core
  definition: Microsoft.Azure.Management.V2.Resource.Core.IChildResource`1
  name: IChildResource<IParentT>
  fullName: Microsoft.Azure.Management.V2.Resource.Core.IChildResource<IParentT>
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.IChildResource(Of IParentT)
  name.vb: IChildResource(Of IParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.IChildResource`1
    name: IChildResource
    fullName: Microsoft.Azure.Management.V2.Resource.Core.IChildResource
  - name: <
    fullName: <
  - name: IParentT
    fullName: IParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.IChildResource`1
    name: IChildResource
    fullName: Microsoft.Azure.Management.V2.Resource.Core.IChildResource
  - name: '(Of '
    fullName: '(Of '
  - name: IParentT
    fullName: IParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.V2.Resource.Core.ResourceActions.IIndexable
  parent: Microsoft.Azure.Management.V2.Resource.Core.ResourceActions
  isExternal: false
  name: IIndexable
  fullName: Microsoft.Azure.Management.V2.Resource.Core.ResourceActions.IIndexable
- uid: Microsoft.Azure.Management.V2.Resource.Core.ChildResource{{InnerModelT},{ParentImplT},{IParentT}}.Parent
  parent: Microsoft.Azure.Management.V2.Resource.Core.ChildResource{{InnerModelT},{ParentImplT},{IParentT}}
  definition: Microsoft.Azure.Management.V2.Resource.Core.ChildResource`3.Parent
  name: Parent
  fullName: Microsoft.Azure.Management.V2.Resource.Core.ChildResource<InnerModelT, ParentImplT, IParentT>.Parent
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.ChildResource(Of InnerModelT, ParentImplT, IParentT).Parent
- uid: Microsoft.Azure.Management.V2.Resource.Core.ChildResource{{InnerModelT},{ParentImplT},{IParentT}}.Name
  parent: Microsoft.Azure.Management.V2.Resource.Core.ChildResource{{InnerModelT},{ParentImplT},{IParentT}}
  definition: Microsoft.Azure.Management.V2.Resource.Core.ChildResource`3.Name
  name: Name
  fullName: Microsoft.Azure.Management.V2.Resource.Core.ChildResource<InnerModelT, ParentImplT, IParentT>.Name
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.ChildResource(Of InnerModelT, ParentImplT, IParentT).Name
- uid: Microsoft.Azure.Management.V2.Resource.Core.ChildResource{{InnerModelT},{ParentImplT},{IParentT}}.Microsoft#Azure#Management#V2#Resource#Core#IChildResource{IParentT}#Parent
  parent: Microsoft.Azure.Management.V2.Resource.Core.ChildResource{{InnerModelT},{ParentImplT},{IParentT}}
  definition: Microsoft.Azure.Management.V2.Resource.Core.ChildResource`3.Microsoft#Azure#Management#V2#Resource#Core#IChildResource{IParentT}#Parent
  name: IChildResource<IParentT>.Parent
  fullName: Microsoft.Azure.Management.V2.Resource.Core.ChildResource<InnerModelT, ParentImplT, IParentT>.Microsoft.Azure.Management.V2.Resource.Core.IChildResource<IParentT>.Parent
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.ChildResource(Of InnerModelT, ParentImplT, IParentT).Microsoft.Azure.Management.V2.Resource.Core.IChildResource<IParentT>.Parent
  name.vb: Microsoft.Azure.Management.V2.Resource.Core.IChildResource<IParentT>.Parent
- uid: Microsoft.Azure.Management.V2.Resource.Core.IndexableWrapper{{InnerModelT}}.Inner
  parent: Microsoft.Azure.Management.V2.Resource.Core.IndexableWrapper{{InnerModelT}}
  definition: Microsoft.Azure.Management.V2.Resource.Core.IndexableWrapper`1.Inner
  name: Inner
  fullName: Microsoft.Azure.Management.V2.Resource.Core.IndexableWrapper<InnerModelT>.Inner
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.IndexableWrapper(Of InnerModelT).Inner
- uid: Microsoft.Azure.Management.V2.Resource.Core.IndexableWrapper{{InnerModelT}}.SetInner({InnerModelT})
  parent: Microsoft.Azure.Management.V2.Resource.Core.IndexableWrapper{{InnerModelT}}
  definition: Microsoft.Azure.Management.V2.Resource.Core.IndexableWrapper`1.SetInner(`0)
  name: SetInner(InnerModelT)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.IndexableWrapper<InnerModelT>.SetInner(InnerModelT)
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.IndexableWrapper(Of InnerModelT).SetInner(InnerModelT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.IndexableWrapper`1.SetInner(`0)
    name: SetInner
    fullName: Microsoft.Azure.Management.V2.Resource.Core.IndexableWrapper<InnerModelT>.SetInner
  - name: (
    fullName: (
  - name: InnerModelT
    fullName: InnerModelT
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.IndexableWrapper`1.SetInner(`0)
    name: SetInner
    fullName: Microsoft.Azure.Management.V2.Resource.Core.IndexableWrapper(Of InnerModelT).SetInner
  - name: (
    fullName: (
  - name: InnerModelT
    fullName: InnerModelT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.V2.Resource.Core.Indexable.Key
  parent: Microsoft.Azure.Management.V2.Resource.Core.Indexable
  isExternal: false
  name: Key
  fullName: Microsoft.Azure.Management.V2.Resource.Core.Indexable.Key
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Management.V2.Resource.Core.IndexableWrapper`1
  parent: Microsoft.Azure.Management.V2.Resource.Core
  isExternal: false
  name: IndexableWrapper<InnerT>
  fullName: Microsoft.Azure.Management.V2.Resource.Core.IndexableWrapper<InnerT>
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.IndexableWrapper(Of InnerT)
  name.vb: IndexableWrapper(Of InnerT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.IndexableWrapper`1
    name: IndexableWrapper
    fullName: Microsoft.Azure.Management.V2.Resource.Core.IndexableWrapper
  - name: <
    fullName: <
  - name: InnerT
    fullName: InnerT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.IndexableWrapper`1
    name: IndexableWrapper
    fullName: Microsoft.Azure.Management.V2.Resource.Core.IndexableWrapper
  - name: '(Of '
    fullName: '(Of '
  - name: InnerT
    fullName: InnerT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.V2.Resource.Core.ChildResource`3
  parent: Microsoft.Azure.Management.V2.Resource.Core
  isExternal: false
  name: ChildResource<InnerT, ParentImplT, IParentT>
  fullName: Microsoft.Azure.Management.V2.Resource.Core.ChildResource<InnerT, ParentImplT, IParentT>
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.ChildResource(Of InnerT, ParentImplT, IParentT)
  name.vb: ChildResource(Of InnerT, ParentImplT, IParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.ChildResource`3
    name: ChildResource
    fullName: Microsoft.Azure.Management.V2.Resource.Core.ChildResource
  - name: <
    fullName: <
  - name: InnerT
    fullName: InnerT
  - name: ', '
    fullName: ', '
  - name: ParentImplT
    fullName: ParentImplT
  - name: ', '
    fullName: ', '
  - name: IParentT
    fullName: IParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.ChildResource`3
    name: ChildResource
    fullName: Microsoft.Azure.Management.V2.Resource.Core.ChildResource
  - name: '(Of '
    fullName: '(Of '
  - name: InnerT
    fullName: InnerT
  - name: ', '
    fullName: ', '
  - name: ParentImplT
    fullName: ParentImplT
  - name: ', '
    fullName: ', '
  - name: IParentT
    fullName: IParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.V2.Resource.Core.IWrapper`1
  parent: Microsoft.Azure.Management.V2.Resource.Core
  isExternal: false
  name: IWrapper<T>
  fullName: Microsoft.Azure.Management.V2.Resource.Core.IWrapper<T>
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.IWrapper(Of T)
  name.vb: IWrapper(Of T)
  spec.csharp:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.IWrapper`1
    name: IWrapper
    fullName: Microsoft.Azure.Management.V2.Resource.Core.IWrapper
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.IWrapper`1
    name: IWrapper
    fullName: Microsoft.Azure.Management.V2.Resource.Core.IWrapper
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.V2.Resource.Core.IChildResource`1
  parent: Microsoft.Azure.Management.V2.Resource.Core
  isExternal: false
  name: IChildResource<IParentT>
  fullName: Microsoft.Azure.Management.V2.Resource.Core.IChildResource<IParentT>
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.IChildResource(Of IParentT)
  name.vb: IChildResource(Of IParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.IChildResource`1
    name: IChildResource
    fullName: Microsoft.Azure.Management.V2.Resource.Core.IChildResource
  - name: <
    fullName: <
  - name: IParentT
    fullName: IParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.IChildResource`1
    name: IChildResource
    fullName: Microsoft.Azure.Management.V2.Resource.Core.IChildResource
  - name: '(Of '
    fullName: '(Of '
  - name: IParentT
    fullName: IParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.V2.Resource.Core.ResourceActions
  isExternal: false
  name: Microsoft.Azure.Management.V2.Resource.Core.ResourceActions
  fullName: Microsoft.Azure.Management.V2.Resource.Core.ResourceActions
- uid: Microsoft.Azure.Management.V2.Resource.Core.ChildResource`3.Parent
  parent: Microsoft.Azure.Management.V2.Resource.Core.ChildResource`3
  isExternal: false
  name: Parent
  fullName: Microsoft.Azure.Management.V2.Resource.Core.ChildResource<InnerT, ParentImplT, IParentT>.Parent
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.ChildResource(Of InnerT, ParentImplT, IParentT).Parent
- uid: Microsoft.Azure.Management.V2.Resource.Core.ChildResource`3.Name
  parent: Microsoft.Azure.Management.V2.Resource.Core.ChildResource`3
  isExternal: false
  name: Name
  fullName: Microsoft.Azure.Management.V2.Resource.Core.ChildResource<InnerT, ParentImplT, IParentT>.Name
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.ChildResource(Of InnerT, ParentImplT, IParentT).Name
- uid: Microsoft.Azure.Management.V2.Resource.Core.ChildResource`3.Microsoft#Azure#Management#V2#Resource#Core#IChildResource{IParentT}#Parent
  parent: Microsoft.Azure.Management.V2.Resource.Core.ChildResource`3
  isExternal: false
  name: IChildResource<IParentT>.Parent
  fullName: Microsoft.Azure.Management.V2.Resource.Core.ChildResource<InnerT, ParentImplT, IParentT>.Microsoft.Azure.Management.V2.Resource.Core.IChildResource<IParentT>.Parent
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.ChildResource(Of InnerT, ParentImplT, IParentT).Microsoft.Azure.Management.V2.Resource.Core.IChildResource<IParentT>.Parent
  name.vb: Microsoft.Azure.Management.V2.Resource.Core.IChildResource<IParentT>.Parent
- uid: Microsoft.Azure.Management.V2.Resource.Core.IndexableWrapper`1.Inner
  parent: Microsoft.Azure.Management.V2.Resource.Core.IndexableWrapper`1
  isExternal: false
  name: Inner
  fullName: Microsoft.Azure.Management.V2.Resource.Core.IndexableWrapper<InnerT>.Inner
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.IndexableWrapper(Of InnerT).Inner
- uid: Microsoft.Azure.Management.V2.Resource.Core.IndexableWrapper`1.SetInner(`0)
  parent: Microsoft.Azure.Management.V2.Resource.Core.IndexableWrapper`1
  isExternal: false
  name: SetInner(InnerT)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.IndexableWrapper<InnerT>.SetInner(InnerT)
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.IndexableWrapper(Of InnerT).SetInner(InnerT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.IndexableWrapper`1.SetInner(`0)
    name: SetInner
    fullName: Microsoft.Azure.Management.V2.Resource.Core.IndexableWrapper<InnerT>.SetInner
  - name: (
    fullName: (
  - name: InnerT
    fullName: InnerT
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.IndexableWrapper`1.SetInner(`0)
    name: SetInner
    fullName: Microsoft.Azure.Management.V2.Resource.Core.IndexableWrapper(Of InnerT).SetInner
  - name: (
    fullName: (
  - name: InnerT
    fullName: InnerT
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: '{ParentImplT}'
  isExternal: false
  name: ParentImplT
  fullName: ParentImplT
- uid: '{InnerModelT}'
  isExternal: false
  name: InnerModelT
  fullName: InnerModelT
- uid: Microsoft.Azure.Management.V2.Resource.Core.PendingOperation
  parent: Microsoft.Azure.Management.V2.Resource.Core
  isExternal: false
  name: PendingOperation
  fullName: Microsoft.Azure.Management.V2.Resource.Core.PendingOperation
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{{FluentModelT}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<FluentModelT>
  fullName: System.Threading.Tasks.Task<FluentModelT>
  fullname.vb: System.Threading.Tasks.Task(Of FluentModelT)
  name.vb: Task(Of FluentModelT)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: FluentModelT
    fullName: FluentModelT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: FluentModelT
    fullName: FluentModelT
  - name: )
    fullName: )
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  fullName: System.Threading.Tasks.Task
