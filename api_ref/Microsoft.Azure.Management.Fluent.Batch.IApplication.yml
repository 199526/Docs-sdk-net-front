items:
- uid: Microsoft.Azure.Management.Fluent.Batch.IApplication
  commentId: T:Microsoft.Azure.Management.Fluent.Batch.IApplication
  id: IApplication
  parent: Microsoft.Azure.Management.Fluent.Batch
  children:
  - Microsoft.Azure.Management.Fluent.Batch.IApplication.ApplicationPackages
  - Microsoft.Azure.Management.Fluent.Batch.IApplication.DefaultVersion
  - Microsoft.Azure.Management.Fluent.Batch.IApplication.DisplayName
  - Microsoft.Azure.Management.Fluent.Batch.IApplication.UpdatesAllowed
  langs:
  - csharp
  - vb
  name: IApplication
  fullName: Microsoft.Azure.Management.Fluent.Batch.IApplication
  type: Interface
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IApplication.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IApplication
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IApplication.cs
    startLine: 12
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Batch
  summary: "\nAn immutable client-side representation of an Azure batch account application.\n"
  example: []
  syntax:
    content: 'public interface IApplication : IExternalChildResource<IApplication, IBatchAccount>, IWrapper<ApplicationInner>'
    content.vb: >-
      Public Interface IApplication
          Inherits IExternalChildResource(Of IApplication, IBatchAccount), IWrapper(Of ApplicationInner)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Azure.Management.Fluent.Batch.IApplication.DisplayName
  commentId: P:Microsoft.Azure.Management.Fluent.Batch.IApplication.DisplayName
  id: DisplayName
  parent: Microsoft.Azure.Management.Fluent.Batch.IApplication
  langs:
  - csharp
  - vb
  name: DisplayName
  fullName: Microsoft.Azure.Management.Fluent.Batch.IApplication.DisplayName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IApplication.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DisplayName
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IApplication.cs
    startLine: 17
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Batch
  example: []
  syntax:
    content: string DisplayName { get; }
    content.vb: ReadOnly Property DisplayName As String
    parameters: []
    return:
      type: System.String
      description: the display name for application
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Batch.IApplication.ApplicationPackages
  commentId: P:Microsoft.Azure.Management.Fluent.Batch.IApplication.ApplicationPackages
  id: ApplicationPackages
  parent: Microsoft.Azure.Management.Fluent.Batch.IApplication
  langs:
  - csharp
  - vb
  name: ApplicationPackages
  fullName: Microsoft.Azure.Management.Fluent.Batch.IApplication.ApplicationPackages
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IApplication.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ApplicationPackages
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IApplication.cs
    startLine: 20
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Batch
  example: []
  syntax:
    content: IDictionary<string, IApplicationPackage> ApplicationPackages { get; }
    content.vb: ReadOnly Property ApplicationPackages As IDictionary(Of String, IApplicationPackage)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage}
      description: the list of application packages
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Batch.IApplication.UpdatesAllowed
  commentId: P:Microsoft.Azure.Management.Fluent.Batch.IApplication.UpdatesAllowed
  id: UpdatesAllowed
  parent: Microsoft.Azure.Management.Fluent.Batch.IApplication
  langs:
  - csharp
  - vb
  name: UpdatesAllowed
  fullName: Microsoft.Azure.Management.Fluent.Batch.IApplication.UpdatesAllowed
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IApplication.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UpdatesAllowed
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IApplication.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Batch
  example: []
  syntax:
    content: bool UpdatesAllowed { get; }
    content.vb: ReadOnly Property UpdatesAllowed As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if automatic updates are allowed, otherwise false
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Batch.IApplication.DefaultVersion
  commentId: P:Microsoft.Azure.Management.Fluent.Batch.IApplication.DefaultVersion
  id: DefaultVersion
  parent: Microsoft.Azure.Management.Fluent.Batch.IApplication
  langs:
  - csharp
  - vb
  name: DefaultVersion
  fullName: Microsoft.Azure.Management.Fluent.Batch.IApplication.DefaultVersion
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IApplication.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DefaultVersion
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IApplication.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Batch
  example: []
  syntax:
    content: string DefaultVersion { get; }
    content.vb: ReadOnly Property DefaultVersion As String
    parameters: []
    return:
      type: System.String
      description: the default version for application.
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Microsoft.Azure.Management.Fluent.Batch
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Batch
  fullName: Microsoft.Azure.Management.Fluent.Batch
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, IApplicationPackage>
  fullName: System.Collections.Generic.IDictionary<System.String, Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage)
  name.vb: IDictionary(Of String, IApplicationPackage)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage
    name: IApplicationPackage
    fullName: Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage
    name: IApplicationPackage
    fullName: Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
