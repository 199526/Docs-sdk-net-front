items:
- uid: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  commentId: T:Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  id: FrontendImpl
  parent: Microsoft.Azure.Management.Fluent.Network
  children:
  - Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Attach
  - Microsoft.Azure.Management.Fluent.Network.FrontendImpl.GetPublicIpAddress
  - Microsoft.Azure.Management.Fluent.Network.FrontendImpl.InboundNatPools
  - Microsoft.Azure.Management.Fluent.Network.FrontendImpl.InboundNatRules
  - Microsoft.Azure.Management.Fluent.Network.FrontendImpl.IsPublic
  - Microsoft.Azure.Management.Fluent.Network.FrontendImpl.LoadBalancingRules
  - Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#HasPrivateIpAddress#Definition#IWithPrivateIpAddress{Microsoft#Azure#Management#Fluent#Network#PrivateFrontend#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPrivateFrontendOrBackend}}#WithPrivateIpAddressDynamic
  - Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#HasPrivateIpAddress#Definition#IWithPrivateIpAddress{Microsoft#Azure#Management#Fluent#Network#PrivateFrontend#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPrivateFrontendOrBackend}}#WithPrivateIpAddressStatic(System.String)
  - Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#HasPrivateIpAddress#Update#IWithPrivateIpAddress{Microsoft#Azure#Management#Fluent#Network#PrivateFrontend#Update#IUpdate}#WithPrivateIpAddressDynamic
  - Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#HasPrivateIpAddress#Update#IWithPrivateIpAddress{Microsoft#Azure#Management#Fluent#Network#PrivateFrontend#Update#IUpdate}#WithPrivateIpAddressStatic(System.String)
  - Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#HasPrivateIpAddress#UpdateDefinition#IWithPrivateIpAddress{Microsoft#Azure#Management#Fluent#Network#PrivateFrontend#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithPrivateIpAddressDynamic
  - Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#HasPrivateIpAddress#UpdateDefinition#IWithPrivateIpAddress{Microsoft#Azure#Management#Fluent#Network#PrivateFrontend#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithPrivateIpAddressStatic(System.String)
  - Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Definition#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#PublicFrontend#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPublicFrontendOrBackend}}#WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  - Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Definition#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#PublicFrontend#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPublicFrontendOrBackend}}#WithExistingPublicIpAddress(System.String)
  - Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Update#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#PublicFrontend#Update#IUpdate}#WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  - Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Update#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#PublicFrontend#Update#IUpdate}#WithExistingPublicIpAddress(System.String)
  - Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Update#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#PublicFrontend#Update#IUpdate}#WithoutPublicIpAddress
  - Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#UpdateDefinition#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#PublicFrontend#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  - Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#UpdateDefinition#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#PublicFrontend#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithExistingPublicIpAddress(System.String)
  - Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#IFrontend#InboundNatPools
  - Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#IFrontend#InboundNatRules
  - Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#IFrontend#IsPublic
  - Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#IHasLoadBalancingRules#LoadBalancingRules
  - Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#IHasPrivateIpAddress#PrivateIpAddress
  - Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#IHasPublicIpAddress#GetPublicIpAddress
  - Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#IHasPublicIpAddress#PublicIpAddressId
  - Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#IPrivateFrontend#PrivateIpAllocationMethod
  - Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#PrivateFrontend#Definition#IWithSubnet{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPrivateFrontendOrBackend}#WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  - Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#PrivateFrontend#Update#IWithSubnet#WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  - Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#PrivateFrontend#UpdateDefinition#IWithSubnet{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}#WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  - Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Name
  - Microsoft.Azure.Management.Fluent.Network.FrontendImpl.NetworkId
  - Microsoft.Azure.Management.Fluent.Network.FrontendImpl.PrivateIpAddress
  - Microsoft.Azure.Management.Fluent.Network.FrontendImpl.PrivateIpAllocationMethod
  - Microsoft.Azure.Management.Fluent.Network.FrontendImpl.PublicIpAddressId
  - Microsoft.Azure.Management.Fluent.Network.FrontendImpl.SubnetName
  - Microsoft.Azure.Management.Fluent.Network.FrontendImpl.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  - Microsoft.Azure.Management.Fluent.Network.FrontendImpl.WithExistingPublicIpAddress(System.String)
  - Microsoft.Azure.Management.Fluent.Network.FrontendImpl.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  - Microsoft.Azure.Management.Fluent.Network.FrontendImpl.WithExistingSubnet(System.String,System.String)
  - Microsoft.Azure.Management.Fluent.Network.FrontendImpl.WithoutPublicIpAddress
  - Microsoft.Azure.Management.Fluent.Network.FrontendImpl.WithPrivateIpAddressDynamic
  - Microsoft.Azure.Management.Fluent.Network.FrontendImpl.WithPrivateIpAddressStatic(System.String)
  langs:
  - csharp
  - vb
  name: FrontendImpl
  fullName: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: FrontendImpl
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nImplementation for PublicFrontend.\n"
  example: []
  syntax:
    content: 'public class FrontendImpl : ChildResource<FrontendIPConfigurationInner, LoadBalancerImpl, ILoadBalancer>, IPrivateFrontend, IHasPrivateIpAddress, IHasSubnet, IDefinition<IWithPrivateFrontendOrBackend>, IBlank<IWithPrivateFrontendOrBackend>, IWithAttach<IWithPrivateFrontendOrBackend>, IInDefinitionAlt<IWithPrivateFrontendOrBackend>, IWithPrivateIpAddress<IWithAttach<IWithPrivateFrontendOrBackend>>, IWithSubnet<IWithPrivateFrontendOrBackend>, Resource.Core.HasSubnet.Definition.IWithSubnet<IWithAttach<IWithPrivateFrontendOrBackend>>, IUpdateDefinition<IUpdate>, IBlank<IUpdate>, IWithAttach<IUpdate>, IInUpdateAlt<IUpdate>, IWithPrivateIpAddress<IWithAttach<IUpdate>>, IWithSubnet<IUpdate>, IUpdate, IWithSubnet, IWithPrivateIpAddress<IUpdate>, IPublicFrontend, IFrontend, IWrapper<FrontendIPConfigurationInner>, IChildResource<ILoadBalancer>, IHasLoadBalancingRules, IHasPublicIpAddress, IDefinition<IWithPublicFrontendOrBackend>, IBlank<IWithPublicFrontendOrBackend>, IWithAttach<IWithPublicFrontendOrBackend>, IInDefinition<IWithPublicFrontendOrBackend>, IWithPublicIpAddress<IWithPublicFrontendOrBackend>, IWithExistingPublicIpAddress<IWithAttach<IWithPublicFrontendOrBackend>>, IUpdateDefinition<IUpdate>, IBlank<IUpdate>, IWithAttach<IUpdate>, IInUpdate<IUpdate>, IWithPublicIpAddress<IUpdate>, IWithExistingPublicIpAddress<IWithAttach<IUpdate>>, IUpdate, ISettable<IUpdate>, IWithPublicIpAddress, IWithExistingPublicIpAddress<IUpdate>'
    content.vb: >-
      Public Class FrontendImpl
          Inherits ChildResource(Of FrontendIPConfigurationInner, LoadBalancerImpl, ILoadBalancer)
          Implements IPrivateFrontend, IHasPrivateIpAddress, IHasSubnet, IDefinition(Of IWithPrivateFrontendOrBackend), IBlank(Of IWithPrivateFrontendOrBackend), IWithAttach(Of IWithPrivateFrontendOrBackend), IInDefinitionAlt(Of IWithPrivateFrontendOrBackend), IWithPrivateIpAddress(Of IWithAttach(Of IWithPrivateFrontendOrBackend)), IWithSubnet(Of IWithPrivateFrontendOrBackend), Resource.Core.HasSubnet.Definition.IWithSubnet(Of IWithAttach(Of IWithPrivateFrontendOrBackend)), IUpdateDefinition(Of IUpdate), IBlank(Of IUpdate), IWithAttach(Of IUpdate), IInUpdateAlt(Of IUpdate), IWithPrivateIpAddress(Of IWithAttach(Of IUpdate)), IWithSubnet(Of IUpdate), IUpdate, IWithSubnet, IWithPrivateIpAddress(Of IUpdate), IPublicFrontend, IFrontend, IWrapper(Of FrontendIPConfigurationInner), IChildResource(Of ILoadBalancer), IHasLoadBalancingRules, IHasPublicIpAddress, IDefinition(Of IWithPublicFrontendOrBackend), IBlank(Of IWithPublicFrontendOrBackend), IWithAttach(Of IWithPublicFrontendOrBackend), IInDefinition(Of IWithPublicFrontendOrBackend), IWithPublicIpAddress(Of IWithPublicFrontendOrBackend), IWithExistingPublicIpAddress(Of IWithAttach(Of IWithPublicFrontendOrBackend)), IUpdateDefinition(Of IUpdate), IBlank(Of IUpdate), IWithAttach(Of IUpdate), IInUpdate(Of IUpdate), IWithPublicIpAddress(Of IUpdate), IWithExistingPublicIpAddress(Of IWithAttach(Of IUpdate)), IUpdate, ISettable(Of IUpdate), IWithPublicIpAddress, IWithExistingPublicIpAddress(Of IUpdate)
  inheritance:
  - System.Object
  implements:
  - Microsoft.Azure.Management.Fluent.Network.IPrivateFrontend
  - Microsoft.Azure.Management.Fluent.Network.IHasPrivateIpAddress
  - IHasSubnet
  - Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IDefinition{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend}
  - Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend}
  - Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend}
  - IInDefinitionAlt{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend}
  - Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend}}
  - Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend}
  - Microsoft.Azure.Management.Fluent.Resource.Core.HasSubnet.Definition.IWithSubnet{Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend}}
  - Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IUpdateDefinition{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - IInUpdateAlt{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}
  - Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithSubnet{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IUpdate
  - Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IWithSubnet
  - Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.IPublicFrontend
  - Microsoft.Azure.Management.Fluent.Network.IFrontend
  - IWrapper{Microsoft.Azure.Management.Network.Models.FrontendIPConfigurationInner}
  - IChildResource{Microsoft.Azure.Management.Fluent.Network.ILoadBalancer}
  - Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules
  - Microsoft.Azure.Management.Fluent.Network.IHasPublicIpAddress
  - Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IDefinition{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend}
  - Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend}
  - Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend}
  - IInDefinition{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend}
  - Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend}
  - Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend}}
  - Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IUpdateDefinition{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - IInUpdate{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}
  - Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate
  - ISettable{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IWithPublicIpAddress
  - Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate}
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.NetworkId
  commentId: P:Microsoft.Azure.Management.Fluent.Network.FrontendImpl.NetworkId
  id: NetworkId
  parent: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  langs:
  - csharp
  - vb
  name: NetworkId
  fullName: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.NetworkId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/FrontendImpl.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: NetworkId
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/FrontendImpl.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public string NetworkId { get; }
    content.vb: Public ReadOnly Property NetworkId As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.SubnetName
  commentId: P:Microsoft.Azure.Management.Fluent.Network.FrontendImpl.SubnetName
  id: SubnetName
  parent: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  langs:
  - csharp
  - vb
  name: SubnetName
  fullName: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.SubnetName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/FrontendImpl.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SubnetName
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/FrontendImpl.cs
    startLine: 39
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public string SubnetName { get; }
    content.vb: Public ReadOnly Property SubnetName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.PrivateIpAddress
  commentId: P:Microsoft.Azure.Management.Fluent.Network.FrontendImpl.PrivateIpAddress
  id: PrivateIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  langs:
  - csharp
  - vb
  name: PrivateIpAddress
  fullName: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.PrivateIpAddress
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/FrontendImpl.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PrivateIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/FrontendImpl.cs
    startLine: 48
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public string PrivateIpAddress { get; }
    content.vb: Public ReadOnly Property PrivateIpAddress As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.PrivateIpAllocationMethod
  commentId: P:Microsoft.Azure.Management.Fluent.Network.FrontendImpl.PrivateIpAllocationMethod
  id: PrivateIpAllocationMethod
  parent: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  langs:
  - csharp
  - vb
  name: PrivateIpAllocationMethod
  fullName: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.PrivateIpAllocationMethod
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/FrontendImpl.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PrivateIpAllocationMethod
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/FrontendImpl.cs
    startLine: 56
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public string PrivateIpAllocationMethod { get; }
    content.vb: Public ReadOnly Property PrivateIpAllocationMethod As String
    parameters: []
    return:
      type: System.String
  implements:
  - Microsoft.Azure.Management.Fluent.Network.IHasPrivateIpAddress.PrivateIpAllocationMethod
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Name
  commentId: P:Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Name
  id: Name
  parent: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  langs:
  - csharp
  - vb
  name: Name
  fullName: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Name
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/FrontendImpl.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/FrontendImpl.cs
    startLine: 64
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public override string Name { get; }
    content.vb: Public Overrides ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.PublicIpAddressId
  commentId: P:Microsoft.Azure.Management.Fluent.Network.FrontendImpl.PublicIpAddressId
  id: PublicIpAddressId
  parent: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  langs:
  - csharp
  - vb
  name: PublicIpAddressId
  fullName: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.PublicIpAddressId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/FrontendImpl.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PublicIpAddressId
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/FrontendImpl.cs
    startLine: 72
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public string PublicIpAddressId { get; }
    content.vb: Public ReadOnly Property PublicIpAddressId As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.IsPublic
  commentId: P:Microsoft.Azure.Management.Fluent.Network.FrontendImpl.IsPublic
  id: IsPublic
  parent: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  langs:
  - csharp
  - vb
  name: IsPublic
  fullName: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.IsPublic
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/FrontendImpl.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IsPublic
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/FrontendImpl.cs
    startLine: 80
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public bool IsPublic { get; }
    content.vb: Public ReadOnly Property IsPublic As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.LoadBalancingRules
  commentId: M:Microsoft.Azure.Management.Fluent.Network.FrontendImpl.LoadBalancingRules
  id: LoadBalancingRules
  parent: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  langs:
  - csharp
  - vb
  name: LoadBalancingRules()
  fullName: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.LoadBalancingRules()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/FrontendImpl.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LoadBalancingRules
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/FrontendImpl.cs
    startLine: 88
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public IDictionary<string, ILoadBalancingRule> LoadBalancingRules()
    content.vb: Public Function LoadBalancingRules As IDictionary(Of String, ILoadBalancingRule)
    return:
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.InboundNatPools
  commentId: M:Microsoft.Azure.Management.Fluent.Network.FrontendImpl.InboundNatPools
  id: InboundNatPools
  parent: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  langs:
  - csharp
  - vb
  name: InboundNatPools()
  fullName: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.InboundNatPools()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/FrontendImpl.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: InboundNatPools
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/FrontendImpl.cs
    startLine: 108
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public IDictionary<string, IInboundNatPool> InboundNatPools()
    content.vb: Public Function InboundNatPools As IDictionary(Of String, IInboundNatPool)
    return:
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.Fluent.Network.IInboundNatPool}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.InboundNatRules
  commentId: M:Microsoft.Azure.Management.Fluent.Network.FrontendImpl.InboundNatRules
  id: InboundNatRules
  parent: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  langs:
  - csharp
  - vb
  name: InboundNatRules()
  fullName: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.InboundNatRules()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/FrontendImpl.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: InboundNatRules
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/FrontendImpl.cs
    startLine: 128
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public IDictionary<string, IInboundNatRule> InboundNatRules()
    content.vb: Public Function InboundNatRules As IDictionary(Of String, IInboundNatRule)
    return:
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.Fluent.Network.IInboundNatRule}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.FrontendImpl.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  id: WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  langs:
  - csharp
  - vb
  name: WithExistingSubnet(INetwork, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/FrontendImpl.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithExistingSubnet
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/FrontendImpl.cs
    startLine: 148
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public FrontendImpl WithExistingSubnet(INetwork network, string subnetName)
    content.vb: Public Function WithExistingSubnet(network As INetwork, subnetName As String) As FrontendImpl
    parameters:
    - id: network
      type: Microsoft.Azure.Management.Fluent.Network.INetwork
    - id: subnetName
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.WithExistingSubnet(System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.FrontendImpl.WithExistingSubnet(System.String,System.String)
  id: WithExistingSubnet(System.String,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  langs:
  - csharp
  - vb
  name: WithExistingSubnet(String, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.WithExistingSubnet(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/FrontendImpl.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithExistingSubnet
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/FrontendImpl.cs
    startLine: 153
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public FrontendImpl WithExistingSubnet(string parentNetworkResourceId, string subnetName)
    content.vb: Public Function WithExistingSubnet(parentNetworkResourceId As String, subnetName As String) As FrontendImpl
    parameters:
    - id: parentNetworkResourceId
      type: System.String
    - id: subnetName
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.FrontendImpl.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  id: WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  parent: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  langs:
  - csharp
  - vb
  name: WithExistingPublicIpAddress(IPublicIpAddress)
  fullName: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/FrontendImpl.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithExistingPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/FrontendImpl.cs
    startLine: 162
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public FrontendImpl WithExistingPublicIpAddress(IPublicIpAddress pip)
    content.vb: Public Function WithExistingPublicIpAddress(pip As IPublicIpAddress) As FrontendImpl
    parameters:
    - id: pip
      type: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    return:
      type: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.WithExistingPublicIpAddress(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.FrontendImpl.WithExistingPublicIpAddress(System.String)
  id: WithExistingPublicIpAddress(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  langs:
  - csharp
  - vb
  name: WithExistingPublicIpAddress(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.WithExistingPublicIpAddress(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/FrontendImpl.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithExistingPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/FrontendImpl.cs
    startLine: 167
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public FrontendImpl WithExistingPublicIpAddress(string resourceId)
    content.vb: Public Function WithExistingPublicIpAddress(resourceId As String) As FrontendImpl
    parameters:
    - id: resourceId
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.WithoutPublicIpAddress
  commentId: M:Microsoft.Azure.Management.Fluent.Network.FrontendImpl.WithoutPublicIpAddress
  id: WithoutPublicIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  langs:
  - csharp
  - vb
  name: WithoutPublicIpAddress()
  fullName: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.WithoutPublicIpAddress()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/FrontendImpl.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithoutPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/FrontendImpl.cs
    startLine: 179
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public FrontendImpl WithoutPublicIpAddress()
    content.vb: Public Function WithoutPublicIpAddress As FrontendImpl
    return:
      type: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.WithPrivateIpAddressDynamic
  commentId: M:Microsoft.Azure.Management.Fluent.Network.FrontendImpl.WithPrivateIpAddressDynamic
  id: WithPrivateIpAddressDynamic
  parent: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  langs:
  - csharp
  - vb
  name: WithPrivateIpAddressDynamic()
  fullName: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.WithPrivateIpAddressDynamic()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/FrontendImpl.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithPrivateIpAddressDynamic
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/FrontendImpl.cs
    startLine: 185
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public FrontendImpl WithPrivateIpAddressDynamic()
    content.vb: Public Function WithPrivateIpAddressDynamic As FrontendImpl
    return:
      type: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.WithPrivateIpAddressStatic(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.FrontendImpl.WithPrivateIpAddressStatic(System.String)
  id: WithPrivateIpAddressStatic(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  langs:
  - csharp
  - vb
  name: WithPrivateIpAddressStatic(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.WithPrivateIpAddressStatic(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/FrontendImpl.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithPrivateIpAddressStatic
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/FrontendImpl.cs
    startLine: 195
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public FrontendImpl WithPrivateIpAddressStatic(string ipAddress)
    content.vb: Public Function WithPrivateIpAddressStatic(ipAddress As String) As FrontendImpl
    parameters:
    - id: ipAddress
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Attach
  commentId: M:Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Attach
  id: Attach
  parent: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  langs:
  - csharp
  - vb
  name: Attach()
  fullName: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Attach()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/FrontendImpl.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Attach
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/FrontendImpl.cs
    startLine: 205
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public LoadBalancerImpl Attach()
    content.vb: Public Function Attach As LoadBalancerImpl
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.GetPublicIpAddress
  commentId: M:Microsoft.Azure.Management.Fluent.Network.FrontendImpl.GetPublicIpAddress
  id: GetPublicIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  langs:
  - csharp
  - vb
  name: GetPublicIpAddress()
  fullName: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.GetPublicIpAddress()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/FrontendImpl.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/FrontendImpl.cs
    startLine: 210
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public IPublicIpAddress GetPublicIpAddress()
    content.vb: Public Function GetPublicIpAddress As IPublicIpAddress
    return:
      type: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#IHasPublicIpAddress#PublicIpAddressId
  commentId: P:Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#IHasPublicIpAddress#PublicIpAddressId
  id: Microsoft#Azure#Management#Fluent#Network#IHasPublicIpAddress#PublicIpAddressId
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  langs:
  - csharp
  - vb
  name: IHasPublicIpAddress.PublicIpAddressId
  fullName: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft.Azure.Management.Fluent.Network.IHasPublicIpAddress.PublicIpAddressId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.IHasPublicIpAddress.PublicIpAddressId
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
    startLine: 37
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: string IHasPublicIpAddress.PublicIpAddressId { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.Azure.Management.Fluent.Network.IHasPublicIpAddress.PublicIpAddressId As String Implements IHasPublicIpAddress.PublicIpAddressId
    parameters: []
    return:
      type: System.String
      description: the resource ID of the associated public IP address
  implements:
  - Microsoft.Azure.Management.Fluent.Network.IHasPublicIpAddress.PublicIpAddressId
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.Azure.Management.Fluent.Network.IHasPublicIpAddress.PublicIpAddressId
- uid: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#IHasPublicIpAddress#GetPublicIpAddress
  commentId: M:Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#IHasPublicIpAddress#GetPublicIpAddress
  id: Microsoft#Azure#Management#Fluent#Network#IHasPublicIpAddress#GetPublicIpAddress
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  langs:
  - csharp
  - vb
  name: IHasPublicIpAddress.GetPublicIpAddress()
  fullName: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft.Azure.Management.Fluent.Network.IHasPublicIpAddress.GetPublicIpAddress()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.IHasPublicIpAddress.GetPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
    startLine: 45
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: IPublicIpAddress IHasPublicIpAddress.GetPublicIpAddress()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.IHasPublicIpAddress.GetPublicIpAddress As IPublicIpAddress Implements IHasPublicIpAddress.GetPublicIpAddress
    return:
      type: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
      description: the associated public IP address
  implements:
  - Microsoft.Azure.Management.Fluent.Network.IHasPublicIpAddress.GetPublicIpAddress
  name.vb: Microsoft.Azure.Management.Fluent.Network.IHasPublicIpAddress.GetPublicIpAddress()
- uid: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#IPrivateFrontend#PrivateIpAllocationMethod
  commentId: P:Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#IPrivateFrontend#PrivateIpAllocationMethod
  id: Microsoft#Azure#Management#Fluent#Network#IPrivateFrontend#PrivateIpAllocationMethod
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  langs:
  - csharp
  - vb
  name: IPrivateFrontend.PrivateIpAllocationMethod
  fullName: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft.Azure.Management.Fluent.Network.IPrivateFrontend.PrivateIpAllocationMethod
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.IPrivateFrontend.PrivateIpAllocationMethod
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
    startLine: 76
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: string IPrivateFrontend.PrivateIpAllocationMethod { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.Azure.Management.Fluent.Network.IPrivateFrontend.PrivateIpAllocationMethod As String Implements IPrivateFrontend.PrivateIpAllocationMethod
    parameters: []
    return:
      type: System.String
      description: the private IP allocation method within the associated subnet for this private frontend
  implements:
  - Microsoft.Azure.Management.Fluent.Network.IPrivateFrontend.PrivateIpAllocationMethod
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.Azure.Management.Fluent.Network.IPrivateFrontend.PrivateIpAllocationMethod
- uid: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#IFrontend#InboundNatPools
  commentId: M:Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#IFrontend#InboundNatPools
  id: Microsoft#Azure#Management#Fluent#Network#IFrontend#InboundNatPools
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  langs:
  - csharp
  - vb
  name: IFrontend.InboundNatPools()
  fullName: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft.Azure.Management.Fluent.Network.IFrontend.InboundNatPools()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.IFrontend.InboundNatPools
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
    startLine: 84
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: IDictionary<string, IInboundNatPool> IFrontend.InboundNatPools()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.IFrontend.InboundNatPools As IDictionary(Of String, IInboundNatPool) Implements IFrontend.InboundNatPools
    return:
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.Fluent.Network.IInboundNatPool}
      description: the inbound NAT pools on this load balancer that use this frontend, indexed by their names
  implements:
  - Microsoft.Azure.Management.Fluent.Network.IFrontend.InboundNatPools
  name.vb: Microsoft.Azure.Management.Fluent.Network.IFrontend.InboundNatPools()
- uid: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#IFrontend#IsPublic
  commentId: P:Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#IFrontend#IsPublic
  id: Microsoft#Azure#Management#Fluent#Network#IFrontend#IsPublic
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  langs:
  - csharp
  - vb
  name: IFrontend.IsPublic
  fullName: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft.Azure.Management.Fluent.Network.IFrontend.IsPublic
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.IFrontend.IsPublic
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
    startLine: 89
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: bool IFrontend.IsPublic { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.Azure.Management.Fluent.Network.IFrontend.IsPublic As Boolean Implements IFrontend.IsPublic
    parameters: []
    return:
      type: System.Boolean
      description: true if the frontend is public, i.e. it has a public IP address associated with it
  implements:
  - Microsoft.Azure.Management.Fluent.Network.IFrontend.IsPublic
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.Azure.Management.Fluent.Network.IFrontend.IsPublic
- uid: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#IFrontend#InboundNatRules
  commentId: M:Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#IFrontend#InboundNatRules
  id: Microsoft#Azure#Management#Fluent#Network#IFrontend#InboundNatRules
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  langs:
  - csharp
  - vb
  name: IFrontend.InboundNatRules()
  fullName: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft.Azure.Management.Fluent.Network.IFrontend.InboundNatRules()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.IFrontend.InboundNatRules
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
    startLine: 97
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: IDictionary<string, IInboundNatRule> IFrontend.InboundNatRules()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.IFrontend.InboundNatRules As IDictionary(Of String, IInboundNatRule) Implements IFrontend.InboundNatRules
    return:
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.Fluent.Network.IInboundNatRule}
      description: the inbound NAT rules on this load balancer that use this frontend, indexed by their names
  implements:
  - Microsoft.Azure.Management.Fluent.Network.IFrontend.InboundNatRules
  name.vb: Microsoft.Azure.Management.Fluent.Network.IFrontend.InboundNatRules()
- uid: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#HasPrivateIpAddress#UpdateDefinition#IWithPrivateIpAddress{Microsoft#Azure#Management#Fluent#Network#PrivateFrontend#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithPrivateIpAddressStatic(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#HasPrivateIpAddress#UpdateDefinition#IWithPrivateIpAddress{Microsoft#Azure#Management#Fluent#Network#PrivateFrontend#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithPrivateIpAddressStatic(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#HasPrivateIpAddress#UpdateDefinition#IWithPrivateIpAddress{Microsoft#Azure#Management#Fluent#Network#PrivateFrontend#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithPrivateIpAddressStatic(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  langs:
  - csharp
  - vb
  name: IWithPrivateIpAddress<IWithAttach<IUpdate>>.WithPrivateIpAddressStatic(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithPrivateIpAddressStatic(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithPrivateIpAddressStatic
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
    startLine: 106
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nAssigns the specified static private IP address within the associated subnet.\n"
  example: []
  syntax:
    content: IWithAttach<IUpdate> IWithPrivateIpAddress<IWithAttach<IUpdate>>.WithPrivateIpAddressStatic(string ipAddress)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithPrivateIpAddressStatic(ipAddress As String) As IWithAttach(Of IUpdate) Implements IWithPrivateIpAddress(Of IWithAttach(Of IUpdate)).WithPrivateIpAddressStatic
    parameters:
    - id: ipAddress
      type: System.String
      description: ipAddress a static IP address within the associated private IP range
    return:
      type: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}.WithPrivateIpAddressStatic(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithPrivateIpAddressStatic(String)
- uid: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#HasPrivateIpAddress#UpdateDefinition#IWithPrivateIpAddress{Microsoft#Azure#Management#Fluent#Network#PrivateFrontend#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithPrivateIpAddressDynamic
  commentId: M:Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#HasPrivateIpAddress#UpdateDefinition#IWithPrivateIpAddress{Microsoft#Azure#Management#Fluent#Network#PrivateFrontend#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithPrivateIpAddressDynamic
  id: Microsoft#Azure#Management#Fluent#Network#HasPrivateIpAddress#UpdateDefinition#IWithPrivateIpAddress{Microsoft#Azure#Management#Fluent#Network#PrivateFrontend#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithPrivateIpAddressDynamic
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  langs:
  - csharp
  - vb
  name: IWithPrivateIpAddress<IWithAttach<IUpdate>>.WithPrivateIpAddressDynamic()
  fullName: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithPrivateIpAddressDynamic()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithPrivateIpAddressDynamic
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
    startLine: 114
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nEnables dynamic private IP address allocation within the associated subnet.\n"
  example: []
  syntax:
    content: IWithAttach<IUpdate> IWithPrivateIpAddress<IWithAttach<IUpdate>>.WithPrivateIpAddressDynamic()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithPrivateIpAddressDynamic As IWithAttach(Of IUpdate) Implements IWithPrivateIpAddress(Of IWithAttach(Of IUpdate)).WithPrivateIpAddressDynamic
    return:
      type: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}.WithPrivateIpAddressDynamic
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithPrivateIpAddressDynamic()
- uid: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#HasPrivateIpAddress#Definition#IWithPrivateIpAddress{Microsoft#Azure#Management#Fluent#Network#PrivateFrontend#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPrivateFrontendOrBackend}}#WithPrivateIpAddressStatic(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#HasPrivateIpAddress#Definition#IWithPrivateIpAddress{Microsoft#Azure#Management#Fluent#Network#PrivateFrontend#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPrivateFrontendOrBackend}}#WithPrivateIpAddressStatic(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#HasPrivateIpAddress#Definition#IWithPrivateIpAddress{Microsoft#Azure#Management#Fluent#Network#PrivateFrontend#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPrivateFrontendOrBackend}}#WithPrivateIpAddressStatic(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  langs:
  - csharp
  - vb
  name: IWithPrivateIpAddress<IWithAttach<IWithPrivateFrontendOrBackend>>.WithPrivateIpAddressStatic(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend>>.WithPrivateIpAddressStatic(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend>>.WithPrivateIpAddressStatic
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
    startLine: 123
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nAssigns the specified static private IP address within the associated subnet.\n"
  example: []
  syntax:
    content: IWithAttach<IWithPrivateFrontendOrBackend> IWithPrivateIpAddress<IWithAttach<IWithPrivateFrontendOrBackend>>.WithPrivateIpAddressStatic(string ipAddress)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend>>.WithPrivateIpAddressStatic(ipAddress As String) As IWithAttach(Of IWithPrivateFrontendOrBackend) Implements IWithPrivateIpAddress(Of IWithAttach(Of IWithPrivateFrontendOrBackend)).WithPrivateIpAddressStatic
    parameters:
    - id: ipAddress
      type: System.String
      description: ipAddress a static IP address within the associated private IP range
    return:
      type: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend}}.WithPrivateIpAddressStatic(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend>>.WithPrivateIpAddressStatic(String)
- uid: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#HasPrivateIpAddress#Definition#IWithPrivateIpAddress{Microsoft#Azure#Management#Fluent#Network#PrivateFrontend#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPrivateFrontendOrBackend}}#WithPrivateIpAddressDynamic
  commentId: M:Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#HasPrivateIpAddress#Definition#IWithPrivateIpAddress{Microsoft#Azure#Management#Fluent#Network#PrivateFrontend#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPrivateFrontendOrBackend}}#WithPrivateIpAddressDynamic
  id: Microsoft#Azure#Management#Fluent#Network#HasPrivateIpAddress#Definition#IWithPrivateIpAddress{Microsoft#Azure#Management#Fluent#Network#PrivateFrontend#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPrivateFrontendOrBackend}}#WithPrivateIpAddressDynamic
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  langs:
  - csharp
  - vb
  name: IWithPrivateIpAddress<IWithAttach<IWithPrivateFrontendOrBackend>>.WithPrivateIpAddressDynamic()
  fullName: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend>>.WithPrivateIpAddressDynamic()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend>>.WithPrivateIpAddressDynamic
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
    startLine: 131
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nEnables dynamic private IP address allocation within the associated subnet.\n"
  example: []
  syntax:
    content: IWithAttach<IWithPrivateFrontendOrBackend> IWithPrivateIpAddress<IWithAttach<IWithPrivateFrontendOrBackend>>.WithPrivateIpAddressDynamic()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend>>.WithPrivateIpAddressDynamic As IWithAttach(Of IWithPrivateFrontendOrBackend) Implements IWithPrivateIpAddress(Of IWithAttach(Of IWithPrivateFrontendOrBackend)).WithPrivateIpAddressDynamic
    return:
      type: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend}}.WithPrivateIpAddressDynamic
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend>>.WithPrivateIpAddressDynamic()
- uid: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#HasPrivateIpAddress#Update#IWithPrivateIpAddress{Microsoft#Azure#Management#Fluent#Network#PrivateFrontend#Update#IUpdate}#WithPrivateIpAddressStatic(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#HasPrivateIpAddress#Update#IWithPrivateIpAddress{Microsoft#Azure#Management#Fluent#Network#PrivateFrontend#Update#IUpdate}#WithPrivateIpAddressStatic(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#HasPrivateIpAddress#Update#IWithPrivateIpAddress{Microsoft#Azure#Management#Fluent#Network#PrivateFrontend#Update#IUpdate}#WithPrivateIpAddressStatic(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  langs:
  - csharp
  - vb
  name: IWithPrivateIpAddress<IUpdate>.WithPrivateIpAddressStatic(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IUpdate>.WithPrivateIpAddressStatic(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IUpdate>.WithPrivateIpAddressStatic
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
    startLine: 140
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nAssigns the specified static private IP address within the associated subnet.\n"
  example: []
  syntax:
    content: IUpdate IWithPrivateIpAddress<IUpdate>.WithPrivateIpAddressStatic(string ipAddress)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IUpdate>.WithPrivateIpAddressStatic(ipAddress As String) As IUpdate Implements IWithPrivateIpAddress(Of IUpdate).WithPrivateIpAddressStatic
    parameters:
    - id: ipAddress
      type: System.String
      description: ipAddress a static IP address within the associated private IP range
    return:
      type: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IUpdate
      description: the next stage of the update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IUpdate}.WithPrivateIpAddressStatic(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IUpdate>.WithPrivateIpAddressStatic(String)
- uid: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#HasPrivateIpAddress#Update#IWithPrivateIpAddress{Microsoft#Azure#Management#Fluent#Network#PrivateFrontend#Update#IUpdate}#WithPrivateIpAddressDynamic
  commentId: M:Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#HasPrivateIpAddress#Update#IWithPrivateIpAddress{Microsoft#Azure#Management#Fluent#Network#PrivateFrontend#Update#IUpdate}#WithPrivateIpAddressDynamic
  id: Microsoft#Azure#Management#Fluent#Network#HasPrivateIpAddress#Update#IWithPrivateIpAddress{Microsoft#Azure#Management#Fluent#Network#PrivateFrontend#Update#IUpdate}#WithPrivateIpAddressDynamic
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  langs:
  - csharp
  - vb
  name: IWithPrivateIpAddress<IUpdate>.WithPrivateIpAddressDynamic()
  fullName: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IUpdate>.WithPrivateIpAddressDynamic()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IUpdate>.WithPrivateIpAddressDynamic
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
    startLine: 148
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nEnables dynamic private IP address allocation within the associated subnet.\n"
  example: []
  syntax:
    content: IUpdate IWithPrivateIpAddress<IUpdate>.WithPrivateIpAddressDynamic()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IUpdate>.WithPrivateIpAddressDynamic As IUpdate Implements IWithPrivateIpAddress(Of IUpdate).WithPrivateIpAddressDynamic
    return:
      type: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IUpdate
      description: the next stage of the update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IUpdate}.WithPrivateIpAddressDynamic
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IUpdate>.WithPrivateIpAddressDynamic()
- uid: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#IHasPrivateIpAddress#PrivateIpAddress
  commentId: P:Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#IHasPrivateIpAddress#PrivateIpAddress
  id: Microsoft#Azure#Management#Fluent#Network#IHasPrivateIpAddress#PrivateIpAddress
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  langs:
  - csharp
  - vb
  name: IHasPrivateIpAddress.PrivateIpAddress
  fullName: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft.Azure.Management.Fluent.Network.IHasPrivateIpAddress.PrivateIpAddress
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.IHasPrivateIpAddress.PrivateIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
    startLine: 169
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: string IHasPrivateIpAddress.PrivateIpAddress { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.Azure.Management.Fluent.Network.IHasPrivateIpAddress.PrivateIpAddress As String Implements IHasPrivateIpAddress.PrivateIpAddress
    parameters: []
    return:
      type: System.String
      description: the private IP address associated with this resource
  implements:
  - Microsoft.Azure.Management.Fluent.Network.IHasPrivateIpAddress.PrivateIpAddress
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.Azure.Management.Fluent.Network.IHasPrivateIpAddress.PrivateIpAddress
- uid: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Update#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#PublicFrontend#Update#IUpdate}#WithoutPublicIpAddress
  commentId: M:Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Update#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#PublicFrontend#Update#IUpdate}#WithoutPublicIpAddress
  id: Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Update#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#PublicFrontend#Update#IUpdate}#WithoutPublicIpAddress
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  langs:
  - csharp
  - vb
  name: IWithExistingPublicIpAddress<IUpdate>.WithoutPublicIpAddress()
  fullName: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate>.WithoutPublicIpAddress()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate>.WithoutPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
    startLine: 180
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nRemoves the existing reference to a public IP address.\n"
  example: []
  syntax:
    content: IUpdate IWithExistingPublicIpAddress<IUpdate>.WithoutPublicIpAddress()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate>.WithoutPublicIpAddress As IUpdate Implements IWithExistingPublicIpAddress(Of IUpdate).WithoutPublicIpAddress
    return:
      type: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate
      description: the next stage of the update.
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate}.WithoutPublicIpAddress
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate>.WithoutPublicIpAddress()
- uid: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Update#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#PublicFrontend#Update#IUpdate}#WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Update#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#PublicFrontend#Update#IUpdate}#WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  id: Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Update#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#PublicFrontend#Update#IUpdate}#WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  langs:
  - csharp
  - vb
  name: IWithExistingPublicIpAddress<IUpdate>.WithExistingPublicIpAddress(IPublicIpAddress)
  fullName: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate>.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate>.WithExistingPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
    startLine: 189
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nAssociates an existing public IP address with the resource.\n"
  example: []
  syntax:
    content: IUpdate IWithExistingPublicIpAddress<IUpdate>.WithExistingPublicIpAddress(IPublicIpAddress publicIpAddress)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate>.WithExistingPublicIpAddress(publicIpAddress As IPublicIpAddress) As IUpdate Implements IWithExistingPublicIpAddress(Of IUpdate).WithExistingPublicIpAddress
    parameters:
    - id: publicIpAddress
      type: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
      description: publicIpAddress an existing public IP address
    return:
      type: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate
      description: the next stage of the update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate}.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate>.WithExistingPublicIpAddress(IPublicIpAddress)
- uid: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Update#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#PublicFrontend#Update#IUpdate}#WithExistingPublicIpAddress(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Update#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#PublicFrontend#Update#IUpdate}#WithExistingPublicIpAddress(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Update#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#PublicFrontend#Update#IUpdate}#WithExistingPublicIpAddress(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  langs:
  - csharp
  - vb
  name: IWithExistingPublicIpAddress<IUpdate>.WithExistingPublicIpAddress(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate>.WithExistingPublicIpAddress(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate>.WithExistingPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
    startLine: 198
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nAssociates an existing public IP address with the resource.\n"
  example: []
  syntax:
    content: IUpdate IWithExistingPublicIpAddress<IUpdate>.WithExistingPublicIpAddress(string resourceId)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate>.WithExistingPublicIpAddress(resourceId As String) As IUpdate Implements IWithExistingPublicIpAddress(Of IUpdate).WithExistingPublicIpAddress
    parameters:
    - id: resourceId
      type: System.String
      description: resourceId the resource ID of an existing public IP address
    return:
      type: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate}.WithExistingPublicIpAddress(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate>.WithExistingPublicIpAddress(String)
- uid: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Definition#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#PublicFrontend#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPublicFrontendOrBackend}}#WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Definition#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#PublicFrontend#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPublicFrontendOrBackend}}#WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  id: Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Definition#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#PublicFrontend#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPublicFrontendOrBackend}}#WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  langs:
  - csharp
  - vb
  name: IWithExistingPublicIpAddress<IWithAttach<IWithPublicFrontendOrBackend>>.WithExistingPublicIpAddress(IPublicIpAddress)
  fullName: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend>>.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend>>.WithExistingPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
    startLine: 207
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nAssociates an existing public IP address with the resource.\n"
  example: []
  syntax:
    content: IWithAttach<IWithPublicFrontendOrBackend> IWithExistingPublicIpAddress<IWithAttach<IWithPublicFrontendOrBackend>>.WithExistingPublicIpAddress(IPublicIpAddress publicIpAddress)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend>>.WithExistingPublicIpAddress(publicIpAddress As IPublicIpAddress) As IWithAttach(Of IWithPublicFrontendOrBackend) Implements IWithExistingPublicIpAddress(Of IWithAttach(Of IWithPublicFrontendOrBackend)).WithExistingPublicIpAddress
    parameters:
    - id: publicIpAddress
      type: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
      description: publicIpAddress an existing public IP address
    return:
      type: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend}}.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend>>.WithExistingPublicIpAddress(IPublicIpAddress)
- uid: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Definition#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#PublicFrontend#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPublicFrontendOrBackend}}#WithExistingPublicIpAddress(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Definition#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#PublicFrontend#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPublicFrontendOrBackend}}#WithExistingPublicIpAddress(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Definition#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#PublicFrontend#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPublicFrontendOrBackend}}#WithExistingPublicIpAddress(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  langs:
  - csharp
  - vb
  name: IWithExistingPublicIpAddress<IWithAttach<IWithPublicFrontendOrBackend>>.WithExistingPublicIpAddress(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend>>.WithExistingPublicIpAddress(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend>>.WithExistingPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
    startLine: 216
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nAssociates an existing public IP address with the resource.\n"
  example: []
  syntax:
    content: IWithAttach<IWithPublicFrontendOrBackend> IWithExistingPublicIpAddress<IWithAttach<IWithPublicFrontendOrBackend>>.WithExistingPublicIpAddress(string resourceId)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend>>.WithExistingPublicIpAddress(resourceId As String) As IWithAttach(Of IWithPublicFrontendOrBackend) Implements IWithExistingPublicIpAddress(Of IWithAttach(Of IWithPublicFrontendOrBackend)).WithExistingPublicIpAddress
    parameters:
    - id: resourceId
      type: System.String
      description: resourceId the resource ID of an existing public IP address
    return:
      type: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend}}.WithExistingPublicIpAddress(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend>>.WithExistingPublicIpAddress(String)
- uid: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#UpdateDefinition#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#PublicFrontend#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#UpdateDefinition#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#PublicFrontend#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  id: Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#UpdateDefinition#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#PublicFrontend#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  langs:
  - csharp
  - vb
  name: IWithExistingPublicIpAddress<IWithAttach<IUpdate>>.WithExistingPublicIpAddress(IPublicIpAddress)
  fullName: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithExistingPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
    startLine: 225
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nAssociates an existing public IP address with the resource.\n"
  example: []
  syntax:
    content: IWithAttach<IUpdate> IWithExistingPublicIpAddress<IWithAttach<IUpdate>>.WithExistingPublicIpAddress(IPublicIpAddress publicIpAddress)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithExistingPublicIpAddress(publicIpAddress As IPublicIpAddress) As IWithAttach(Of IUpdate) Implements IWithExistingPublicIpAddress(Of IWithAttach(Of IUpdate)).WithExistingPublicIpAddress
    parameters:
    - id: publicIpAddress
      type: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
      description: publicIpAddress an existing public IP address
    return:
      type: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithExistingPublicIpAddress(IPublicIpAddress)
- uid: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#UpdateDefinition#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#PublicFrontend#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithExistingPublicIpAddress(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#UpdateDefinition#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#PublicFrontend#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithExistingPublicIpAddress(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#UpdateDefinition#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#PublicFrontend#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithExistingPublicIpAddress(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  langs:
  - csharp
  - vb
  name: IWithExistingPublicIpAddress<IWithAttach<IUpdate>>.WithExistingPublicIpAddress(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithExistingPublicIpAddress(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithExistingPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
    startLine: 234
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nAssociates an existing public IP address with the resource.\n"
  example: []
  syntax:
    content: IWithAttach<IUpdate> IWithExistingPublicIpAddress<IWithAttach<IUpdate>>.WithExistingPublicIpAddress(string resourceId)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithExistingPublicIpAddress(resourceId As String) As IWithAttach(Of IUpdate) Implements IWithExistingPublicIpAddress(Of IWithAttach(Of IUpdate)).WithExistingPublicIpAddress
    parameters:
    - id: resourceId
      type: System.String
      description: resourceId the resource ID of an existing public IP address
    return:
      type: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}.WithExistingPublicIpAddress(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithExistingPublicIpAddress(String)
- uid: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#IHasLoadBalancingRules#LoadBalancingRules
  commentId: M:Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#IHasLoadBalancingRules#LoadBalancingRules
  id: Microsoft#Azure#Management#Fluent#Network#IHasLoadBalancingRules#LoadBalancingRules
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  langs:
  - csharp
  - vb
  name: IHasLoadBalancingRules.LoadBalancingRules()
  fullName: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules.LoadBalancingRules()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules.LoadBalancingRules
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
    startLine: 247
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: IDictionary<string, ILoadBalancingRule> IHasLoadBalancingRules.LoadBalancingRules()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules.LoadBalancingRules As IDictionary(Of String, ILoadBalancingRule) Implements IHasLoadBalancingRules.LoadBalancingRules
    return:
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule}
      description: the associated load balancing rules from this load balancer, indexed by their names
  implements:
  - Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules.LoadBalancingRules
  name.vb: Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules.LoadBalancingRules()
- uid: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#PrivateFrontend#UpdateDefinition#IWithSubnet{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}#WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#PrivateFrontend#UpdateDefinition#IWithSubnet{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}#WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  id: Microsoft#Azure#Management#Fluent#Network#PrivateFrontend#UpdateDefinition#IWithSubnet{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}#WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  langs:
  - csharp
  - vb
  name: IWithSubnet<IUpdate>.WithExistingSubnet(INetwork, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithSubnet<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithSubnet<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithExistingSubnet
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
    startLine: 257
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nAssigns the specified subnet to this private frontend of the internal load balancer.\n"
  example: []
  syntax:
    content: IWithAttach<IUpdate> IWithSubnet<IUpdate>.WithExistingSubnet(INetwork network, string subnetName)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithSubnet<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithExistingSubnet(network As INetwork, subnetName As String) As IWithAttach(Of IUpdate) Implements IWithSubnet(Of IUpdate).WithExistingSubnet
    parameters:
    - id: network
      type: Microsoft.Azure.Management.Fluent.Network.INetwork
      description: network the virtual network the subnet exists in
    - id: subnetName
      type: System.String
      description: subnetName the name of a subnet
    return:
      type: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithSubnet{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithSubnet<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithExistingSubnet(INetwork, String)
- uid: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#PrivateFrontend#Definition#IWithSubnet{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPrivateFrontendOrBackend}#WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#PrivateFrontend#Definition#IWithSubnet{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPrivateFrontendOrBackend}#WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  id: Microsoft#Azure#Management#Fluent#Network#PrivateFrontend#Definition#IWithSubnet{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPrivateFrontendOrBackend}#WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  langs:
  - csharp
  - vb
  name: IWithSubnet<IWithPrivateFrontendOrBackend>.WithExistingSubnet(INetwork, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend>.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend>.WithExistingSubnet
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
    startLine: 267
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nAssigns the specified subnet to this private frontend of an internal load balancer.\n"
  example: []
  syntax:
    content: IWithAttach<IWithPrivateFrontendOrBackend> IWithSubnet<IWithPrivateFrontendOrBackend>.WithExistingSubnet(INetwork network, string subnetName)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend>.WithExistingSubnet(network As INetwork, subnetName As String) As IWithAttach(Of IWithPrivateFrontendOrBackend) Implements IWithSubnet(Of IWithPrivateFrontendOrBackend).WithExistingSubnet
    parameters:
    - id: network
      type: Microsoft.Azure.Management.Fluent.Network.INetwork
      description: network the virtual network the subnet exists in
    - id: subnetName
      type: System.String
      description: subnetName the name of a subnet
    return:
      type: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend}.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend>.WithExistingSubnet(INetwork, String)
- uid: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#PrivateFrontend#Update#IWithSubnet#WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft#Azure#Management#Fluent#Network#PrivateFrontend#Update#IWithSubnet#WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  id: Microsoft#Azure#Management#Fluent#Network#PrivateFrontend#Update#IWithSubnet#WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  langs:
  - csharp
  - vb
  name: IWithSubnet.WithExistingSubnet(INetwork, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.FrontendImpl.Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IWithSubnet.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IWithSubnet.WithExistingSubnet
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InterfaceImpl/FrontendImpl.cs
    startLine: 285
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nAssigns the specified subnet to this private frontend of the internal load balancer.\n"
  example: []
  syntax:
    content: IUpdate IWithSubnet.WithExistingSubnet(INetwork network, string subnetName)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IWithSubnet.WithExistingSubnet(network As INetwork, subnetName As String) As IUpdate Implements IWithSubnet.WithExistingSubnet
    parameters:
    - id: network
      type: Microsoft.Azure.Management.Fluent.Network.INetwork
      description: network the virtual network the subnet exists in
    - id: subnetName
      type: System.String
      description: subnetName the name of a subnet
    return:
      type: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IUpdate
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IWithSubnet.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IWithSubnet.WithExistingSubnet(INetwork, String)
references:
- uid: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network
  fullName: Microsoft.Azure.Management.Fluent.Network
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.Fluent.Network.IPrivateFrontend
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: IPrivateFrontend
  fullName: Microsoft.Azure.Management.Fluent.Network.IPrivateFrontend
- uid: Microsoft.Azure.Management.Fluent.Network.IHasPrivateIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: IHasPrivateIpAddress
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasPrivateIpAddress
- uid: IHasSubnet
  isExternal: true
  name: IHasSubnet
  fullName: IHasSubnet
- uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IDefinition{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend}
  parent: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IDefinition`1
  name: IDefinition<IWithPrivateFrontendOrBackend>
  fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IDefinition<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IDefinition(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend)
  name.vb: IDefinition(Of IWithPrivateFrontendOrBackend)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IDefinition`1
    name: IDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IDefinition
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend
    name: IWithPrivateFrontendOrBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IDefinition`1
    name: IDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IDefinition
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend
    name: IWithPrivateFrontendOrBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend}
  parent: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IBlank`1
  name: IBlank<IWithPrivateFrontendOrBackend>
  fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IBlank<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IBlank(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend)
  name.vb: IBlank(Of IWithPrivateFrontendOrBackend)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IBlank
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend
    name: IWithPrivateFrontendOrBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend
    name: IWithPrivateFrontendOrBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend}
  parent: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach`1
  name: IWithAttach<IWithPrivateFrontendOrBackend>
  fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend)
  name.vb: IWithAttach(Of IWithPrivateFrontendOrBackend)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend
    name: IWithPrivateFrontendOrBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend
    name: IWithPrivateFrontendOrBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend
  - name: )
    fullName: )
- uid: IInDefinitionAlt{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend}
  definition: IInDefinitionAlt`1
  name: IInDefinitionAlt<IWithPrivateFrontendOrBackend>
  fullName: IInDefinitionAlt<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend>
  fullname.vb: IInDefinitionAlt(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend)
  name.vb: IInDefinitionAlt(Of IWithPrivateFrontendOrBackend)
  spec.csharp:
  - uid: IInDefinitionAlt`1
    name: IInDefinitionAlt
    fullName: IInDefinitionAlt
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend
    name: IWithPrivateFrontendOrBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IInDefinitionAlt`1
    name: IInDefinitionAlt
    fullName: IInDefinitionAlt
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend
    name: IWithPrivateFrontendOrBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend}}
  parent: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1
  name: IWithPrivateIpAddress<IWithAttach<IWithPrivateFrontendOrBackend>>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend>>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress(Of Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend))
  name.vb: IWithPrivateIpAddress(Of IWithAttach(Of IWithPrivateFrontendOrBackend))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1
    name: IWithPrivateIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend
    name: IWithPrivateFrontendOrBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1
    name: IWithPrivateIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend
    name: IWithPrivateFrontendOrBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend}
  parent: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet`1
  name: IWithSubnet<IWithPrivateFrontendOrBackend>
  fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend)
  name.vb: IWithSubnet(Of IWithPrivateFrontendOrBackend)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet`1
    name: IWithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend
    name: IWithPrivateFrontendOrBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet`1
    name: IWithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend
    name: IWithPrivateFrontendOrBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.HasSubnet.Definition.IWithSubnet{Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend}}
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.HasSubnet.Definition.IWithSubnet`1
  name: Resource.Core.HasSubnet.Definition.IWithSubnet<IWithAttach<IWithPrivateFrontendOrBackend>>
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.HasSubnet.Definition.IWithSubnet<Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend>>
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.HasSubnet.Definition.IWithSubnet(Of Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend))
  name.vb: Resource.Core.HasSubnet.Definition.IWithSubnet(Of IWithAttach(Of IWithPrivateFrontendOrBackend))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.HasSubnet.Definition.IWithSubnet`1
    name: Resource.Core.HasSubnet.Definition.IWithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.HasSubnet.Definition.IWithSubnet
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend
    name: IWithPrivateFrontendOrBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.HasSubnet.Definition.IWithSubnet`1
    name: Resource.Core.HasSubnet.Definition.IWithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.HasSubnet.Definition.IWithSubnet
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend
    name: IWithPrivateFrontendOrBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IUpdateDefinition{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IUpdateDefinition`1
  name: IUpdateDefinition<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IUpdateDefinition<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IUpdateDefinition(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IUpdateDefinition(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IUpdateDefinition`1
    name: IUpdateDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IUpdateDefinition
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IUpdateDefinition`1
    name: IUpdateDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IUpdateDefinition
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IBlank`1
  name: IBlank<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IBlank<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IBlank(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IBlank(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IBlank
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithAttach`1
  name: IWithAttach<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IWithAttach(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithAttach
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: IInUpdateAlt{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  definition: IInUpdateAlt`1
  name: IInUpdateAlt<IUpdate>
  fullName: IInUpdateAlt<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: IInUpdateAlt(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IInUpdateAlt(Of IUpdate)
  spec.csharp:
  - uid: IInUpdateAlt`1
    name: IInUpdateAlt
    fullName: IInUpdateAlt
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IInUpdateAlt`1
    name: IInUpdateAlt
    fullName: IInUpdateAlt
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}
  parent: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress`1
  name: IWithPrivateIpAddress<IWithAttach<IUpdate>>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress(Of Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate))
  name.vb: IWithPrivateIpAddress(Of IWithAttach(Of IUpdate))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress`1
    name: IWithPrivateIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithAttach
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress`1
    name: IWithPrivateIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithSubnet{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithSubnet`1
  name: IWithSubnet<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithSubnet<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithSubnet(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IWithSubnet(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithSubnet`1
    name: IWithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithSubnet
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithSubnet`1
    name: IWithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithSubnet
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IUpdate
  parent: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update
  isExternal: false
  name: IUpdate
  fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IUpdate
- uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IWithSubnet
  parent: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update
  isExternal: false
  name: IWithSubnet
  fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IWithSubnet
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update
  definition: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress`1
  name: IWithPrivateIpAddress<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress(Of Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IUpdate)
  name.vb: IWithPrivateIpAddress(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress`1
    name: IWithPrivateIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress`1
    name: IWithPrivateIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.IPublicFrontend
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: IPublicFrontend
  fullName: Microsoft.Azure.Management.Fluent.Network.IPublicFrontend
- uid: Microsoft.Azure.Management.Fluent.Network.IFrontend
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: IFrontend
  fullName: Microsoft.Azure.Management.Fluent.Network.IFrontend
- uid: IWrapper{Microsoft.Azure.Management.Network.Models.FrontendIPConfigurationInner}
  definition: IWrapper`1
  name: IWrapper<FrontendIPConfigurationInner>
  fullName: IWrapper<Microsoft.Azure.Management.Network.Models.FrontendIPConfigurationInner>
  fullname.vb: IWrapper(Of Microsoft.Azure.Management.Network.Models.FrontendIPConfigurationInner)
  name.vb: IWrapper(Of FrontendIPConfigurationInner)
  spec.csharp:
  - uid: IWrapper`1
    name: IWrapper
    fullName: IWrapper
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Network.Models.FrontendIPConfigurationInner
    name: FrontendIPConfigurationInner
    fullName: Microsoft.Azure.Management.Network.Models.FrontendIPConfigurationInner
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IWrapper`1
    name: IWrapper
    fullName: IWrapper
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Network.Models.FrontendIPConfigurationInner
    name: FrontendIPConfigurationInner
    fullName: Microsoft.Azure.Management.Network.Models.FrontendIPConfigurationInner
  - name: )
    fullName: )
- uid: IChildResource{Microsoft.Azure.Management.Fluent.Network.ILoadBalancer}
  definition: IChildResource`1
  name: IChildResource<ILoadBalancer>
  fullName: IChildResource<Microsoft.Azure.Management.Fluent.Network.ILoadBalancer>
  fullname.vb: IChildResource(Of Microsoft.Azure.Management.Fluent.Network.ILoadBalancer)
  name.vb: IChildResource(Of ILoadBalancer)
  spec.csharp:
  - uid: IChildResource`1
    name: IChildResource
    fullName: IChildResource
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    name: ILoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IChildResource`1
    name: IChildResource
    fullName: IChildResource
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    name: ILoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: IHasLoadBalancingRules
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules
- uid: Microsoft.Azure.Management.Fluent.Network.IHasPublicIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: IHasPublicIpAddress
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasPublicIpAddress
- uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IDefinition{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend}
  parent: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IDefinition`1
  name: IDefinition<IWithPublicFrontendOrBackend>
  fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IDefinition<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IDefinition(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend)
  name.vb: IDefinition(Of IWithPublicFrontendOrBackend)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IDefinition`1
    name: IDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IDefinition
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend
    name: IWithPublicFrontendOrBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IDefinition`1
    name: IDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IDefinition
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend
    name: IWithPublicFrontendOrBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend}
  parent: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IBlank`1
  name: IBlank<IWithPublicFrontendOrBackend>
  fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IBlank<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IBlank(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend)
  name.vb: IBlank(Of IWithPublicFrontendOrBackend)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IBlank
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend
    name: IWithPublicFrontendOrBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend
    name: IWithPublicFrontendOrBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend}
  parent: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithAttach`1
  name: IWithAttach<IWithPublicFrontendOrBackend>
  fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend)
  name.vb: IWithAttach(Of IWithPublicFrontendOrBackend)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithAttach
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend
    name: IWithPublicFrontendOrBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend
    name: IWithPublicFrontendOrBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend
  - name: )
    fullName: )
- uid: IInDefinition{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend}
  definition: IInDefinition`1
  name: IInDefinition<IWithPublicFrontendOrBackend>
  fullName: IInDefinition<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend>
  fullname.vb: IInDefinition(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend)
  name.vb: IInDefinition(Of IWithPublicFrontendOrBackend)
  spec.csharp:
  - uid: IInDefinition`1
    name: IInDefinition
    fullName: IInDefinition
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend
    name: IWithPublicFrontendOrBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IInDefinition`1
    name: IInDefinition
    fullName: IInDefinition
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend
    name: IWithPublicFrontendOrBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend}
  parent: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithPublicIpAddress`1
  name: IWithPublicIpAddress<IWithPublicFrontendOrBackend>
  fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend)
  name.vb: IWithPublicIpAddress(Of IWithPublicFrontendOrBackend)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithPublicIpAddress`1
    name: IWithPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithPublicIpAddress
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend
    name: IWithPublicFrontendOrBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithPublicIpAddress`1
    name: IWithPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithPublicIpAddress
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend
    name: IWithPublicFrontendOrBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend}}
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1
  name: IWithExistingPublicIpAddress<IWithAttach<IWithPublicFrontendOrBackend>>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend>>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend))
  name.vb: IWithExistingPublicIpAddress(Of IWithAttach(Of IWithPublicFrontendOrBackend))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1
    name: IWithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithAttach
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend
    name: IWithPublicFrontendOrBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1
    name: IWithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend
    name: IWithPublicFrontendOrBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IUpdateDefinition{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IUpdateDefinition`1
  name: IUpdateDefinition<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IUpdateDefinition<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IUpdateDefinition(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IUpdateDefinition(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IUpdateDefinition`1
    name: IUpdateDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IUpdateDefinition
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IUpdateDefinition`1
    name: IUpdateDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IUpdateDefinition
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IBlank`1
  name: IBlank<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IBlank<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IBlank(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IBlank(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IBlank
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithAttach`1
  name: IWithAttach<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IWithAttach(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithAttach
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: IInUpdate{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  definition: IInUpdate`1
  name: IInUpdate<IUpdate>
  fullName: IInUpdate<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: IInUpdate(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IInUpdate(Of IUpdate)
  spec.csharp:
  - uid: IInUpdate`1
    name: IInUpdate
    fullName: IInUpdate
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IInUpdate`1
    name: IInUpdate
    fullName: IInUpdate
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithPublicIpAddress`1
  name: IWithPublicIpAddress<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IWithPublicIpAddress(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithPublicIpAddress`1
    name: IWithPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithPublicIpAddress
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithPublicIpAddress`1
    name: IWithPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithPublicIpAddress
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress`1
  name: IWithExistingPublicIpAddress<IWithAttach<IUpdate>>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate))
  name.vb: IWithExistingPublicIpAddress(Of IWithAttach(Of IUpdate))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress`1
    name: IWithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithAttach
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress`1
    name: IWithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate
  parent: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update
  isExternal: false
  name: IUpdate
  fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate
- uid: ISettable{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  definition: ISettable`1
  name: ISettable<IUpdate>
  fullName: ISettable<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: ISettable(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: ISettable(Of IUpdate)
  spec.csharp:
  - uid: ISettable`1
    name: ISettable
    fullName: ISettable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: ISettable`1
    name: ISettable
    fullName: ISettable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IWithPublicIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update
  isExternal: false
  name: IWithPublicIpAddress
  fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IWithPublicIpAddress
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update
  definition: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1
  name: IWithExistingPublicIpAddress<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate)
  name.vb: IWithExistingPublicIpAddress(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1
    name: IWithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1
    name: IWithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IDefinition`1
  parent: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition
  isExternal: false
  name: IDefinition<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IDefinition<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IDefinition(Of ParentT)
  name.vb: IDefinition(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IDefinition`1
    name: IDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IDefinition
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IDefinition`1
    name: IDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IDefinition
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition
- uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IBlank`1
  parent: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition
  isExternal: false
  name: IBlank<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IBlank<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IBlank(Of ParentT)
  name.vb: IBlank(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IBlank
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach`1
  parent: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition
  isExternal: false
  name: IWithAttach<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach(Of ParentT)
  name.vb: IWithAttach(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: IInDefinitionAlt`1
  isExternal: true
  name: IInDefinitionAlt<>
  fullName: IInDefinitionAlt<>
  fullname.vb: IInDefinitionAlt(Of )
  name.vb: IInDefinitionAlt(Of )
  spec.csharp:
  - uid: IInDefinitionAlt`1
    name: IInDefinitionAlt
    fullName: IInDefinitionAlt
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IInDefinitionAlt`1
    name: IInDefinitionAlt
    fullName: IInDefinitionAlt
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition
  isExternal: false
  name: IWithPrivateIpAddress<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress(Of ReturnT)
  name.vb: IWithPrivateIpAddress(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1
    name: IWithPrivateIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1
    name: IWithPrivateIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition
- uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet`1
  parent: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition
  isExternal: false
  name: IWithSubnet<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet(Of ParentT)
  name.vb: IWithSubnet(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet`1
    name: IWithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet`1
    name: IWithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.HasSubnet.Definition.IWithSubnet`1
  isExternal: false
  name: Resource.Core.HasSubnet.Definition.IWithSubnet<>
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.HasSubnet.Definition.IWithSubnet<>
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.HasSubnet.Definition.IWithSubnet(Of )
  name.vb: Resource.Core.HasSubnet.Definition.IWithSubnet(Of )
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.HasSubnet.Definition.IWithSubnet`1
    name: Resource.Core.HasSubnet.Definition.IWithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.HasSubnet.Definition.IWithSubnet
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.HasSubnet.Definition.IWithSubnet`1
    name: Resource.Core.HasSubnet.Definition.IWithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.HasSubnet.Definition.IWithSubnet
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IUpdateDefinition`1
  parent: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition
  isExternal: false
  name: IUpdateDefinition<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IUpdateDefinition<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IUpdateDefinition(Of ParentT)
  name.vb: IUpdateDefinition(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IUpdateDefinition`1
    name: IUpdateDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IUpdateDefinition
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IUpdateDefinition`1
    name: IUpdateDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IUpdateDefinition
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition
  fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition
- uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IBlank`1
  parent: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition
  isExternal: false
  name: IBlank<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IBlank<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IBlank(Of ParentT)
  name.vb: IBlank(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IBlank
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithAttach`1
  parent: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition
  isExternal: false
  name: IWithAttach<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithAttach<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithAttach(Of ParentT)
  name.vb: IWithAttach(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithAttach
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: IInUpdateAlt`1
  isExternal: true
  name: IInUpdateAlt<>
  fullName: IInUpdateAlt<>
  fullname.vb: IInUpdateAlt(Of )
  name.vb: IInUpdateAlt(Of )
  spec.csharp:
  - uid: IInUpdateAlt`1
    name: IInUpdateAlt
    fullName: IInUpdateAlt
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IInUpdateAlt`1
    name: IInUpdateAlt
    fullName: IInUpdateAlt
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition
  isExternal: false
  name: IWithPrivateIpAddress<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress(Of ReturnT)
  name.vb: IWithPrivateIpAddress(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress`1
    name: IWithPrivateIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress`1
    name: IWithPrivateIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition
- uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithSubnet`1
  parent: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition
  isExternal: false
  name: IWithSubnet<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithSubnet<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithSubnet(Of ParentT)
  name.vb: IWithSubnet(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithSubnet`1
    name: IWithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithSubnet
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithSubnet`1
    name: IWithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithSubnet
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update
  fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update
  isExternal: false
  name: IWithPrivateIpAddress<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress(Of ReturnT)
  name.vb: IWithPrivateIpAddress(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress`1
    name: IWithPrivateIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress`1
    name: IWithPrivateIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update
- uid: IWrapper`1
  isExternal: true
  name: IWrapper<>
  fullName: IWrapper<>
  fullname.vb: IWrapper(Of )
  name.vb: IWrapper(Of )
  spec.csharp:
  - uid: IWrapper`1
    name: IWrapper
    fullName: IWrapper
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IWrapper`1
    name: IWrapper
    fullName: IWrapper
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: IChildResource`1
  isExternal: true
  name: IChildResource<>
  fullName: IChildResource<>
  fullname.vb: IChildResource(Of )
  name.vb: IChildResource(Of )
  spec.csharp:
  - uid: IChildResource`1
    name: IChildResource
    fullName: IChildResource
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IChildResource`1
    name: IChildResource
    fullName: IChildResource
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IDefinition`1
  parent: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition
  isExternal: false
  name: IDefinition<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IDefinition<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IDefinition(Of ParentT)
  name.vb: IDefinition(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IDefinition`1
    name: IDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IDefinition
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IDefinition`1
    name: IDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IDefinition
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition
- uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IBlank`1
  parent: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition
  isExternal: false
  name: IBlank<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IBlank<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IBlank(Of ParentT)
  name.vb: IBlank(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IBlank
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithAttach`1
  parent: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition
  isExternal: false
  name: IWithAttach<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithAttach<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithAttach(Of ParentT)
  name.vb: IWithAttach(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithAttach
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: IInDefinition`1
  isExternal: true
  name: IInDefinition<>
  fullName: IInDefinition<>
  fullname.vb: IInDefinition(Of )
  name.vb: IInDefinition(Of )
  spec.csharp:
  - uid: IInDefinition`1
    name: IInDefinition
    fullName: IInDefinition
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IInDefinition`1
    name: IInDefinition
    fullName: IInDefinition
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithPublicIpAddress`1
  parent: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition
  isExternal: false
  name: IWithPublicIpAddress<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithPublicIpAddress<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithPublicIpAddress(Of ParentT)
  name.vb: IWithPublicIpAddress(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithPublicIpAddress`1
    name: IWithPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithPublicIpAddress
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithPublicIpAddress`1
    name: IWithPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithPublicIpAddress
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition
  isExternal: false
  name: IWithExistingPublicIpAddress<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress(Of ReturnT)
  name.vb: IWithExistingPublicIpAddress(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1
    name: IWithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1
    name: IWithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition
- uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IUpdateDefinition`1
  parent: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition
  isExternal: false
  name: IUpdateDefinition<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IUpdateDefinition<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IUpdateDefinition(Of ParentT)
  name.vb: IUpdateDefinition(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IUpdateDefinition`1
    name: IUpdateDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IUpdateDefinition
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IUpdateDefinition`1
    name: IUpdateDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IUpdateDefinition
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition
  fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition
- uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IBlank`1
  parent: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition
  isExternal: false
  name: IBlank<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IBlank<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IBlank(Of ParentT)
  name.vb: IBlank(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IBlank
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithAttach`1
  parent: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition
  isExternal: false
  name: IWithAttach<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithAttach<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithAttach(Of ParentT)
  name.vb: IWithAttach(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithAttach
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: IInUpdate`1
  isExternal: true
  name: IInUpdate<>
  fullName: IInUpdate<>
  fullname.vb: IInUpdate(Of )
  name.vb: IInUpdate(Of )
  spec.csharp:
  - uid: IInUpdate`1
    name: IInUpdate
    fullName: IInUpdate
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IInUpdate`1
    name: IInUpdate
    fullName: IInUpdate
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithPublicIpAddress`1
  parent: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition
  isExternal: false
  name: IWithPublicIpAddress<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithPublicIpAddress<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithPublicIpAddress(Of ParentT)
  name.vb: IWithPublicIpAddress(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithPublicIpAddress`1
    name: IWithPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithPublicIpAddress
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithPublicIpAddress`1
    name: IWithPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithPublicIpAddress
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition
  isExternal: false
  name: IWithExistingPublicIpAddress<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress(Of ReturnT)
  name.vb: IWithExistingPublicIpAddress(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress`1
    name: IWithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress`1
    name: IWithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition
- uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update
  fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update
- uid: ISettable`1
  isExternal: true
  name: ISettable<>
  fullName: ISettable<>
  fullname.vb: ISettable(Of )
  name.vb: ISettable(Of )
  spec.csharp:
  - uid: ISettable`1
    name: ISettable
    fullName: ISettable
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: ISettable`1
    name: ISettable
    fullName: ISettable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update
  isExternal: false
  name: IWithExistingPublicIpAddress<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress(Of ReturnT)
  name.vb: IWithExistingPublicIpAddress(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1
    name: IWithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1
    name: IWithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.Azure.Management.Fluent.Network.IHasPrivateIpAddress.PrivateIpAllocationMethod
  parent: Microsoft.Azure.Management.Fluent.Network.IHasPrivateIpAddress
  isExternal: false
  name: PrivateIpAllocationMethod
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasPrivateIpAddress.PrivateIpAllocationMethod
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, ILoadBalancingRule>
  fullName: System.Collections.Generic.IDictionary<System.String, Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule)
  name.vb: IDictionary(Of String, ILoadBalancingRule)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule
    name: ILoadBalancingRule
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule
    name: ILoadBalancingRule
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.Fluent.Network.IInboundNatPool}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Network.IInboundNatPool>
  fullName: System.Collections.Generic.IDictionary<System.String, Microsoft.Azure.Management.Fluent.Network.IInboundNatPool>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, Microsoft.Azure.Management.Fluent.Network.IInboundNatPool)
  name.vb: IDictionary(Of String, Network.IInboundNatPool)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Fluent.Network.IInboundNatPool
    name: Network.IInboundNatPool
    fullName: Microsoft.Azure.Management.Fluent.Network.IInboundNatPool
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Fluent.Network.IInboundNatPool
    name: Network.IInboundNatPool
    fullName: Microsoft.Azure.Management.Fluent.Network.IInboundNatPool
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.Fluent.Network.IInboundNatRule}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, IInboundNatRule>
  fullName: System.Collections.Generic.IDictionary<System.String, Microsoft.Azure.Management.Fluent.Network.IInboundNatRule>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, Microsoft.Azure.Management.Fluent.Network.IInboundNatRule)
  name.vb: IDictionary(Of String, IInboundNatRule)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule
    name: IInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule
    name: IInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.INetwork
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: INetwork
  fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
- uid: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: FrontendImpl
  fullName: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
- uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: IPublicIpAddress
  fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: LoadBalancerImpl
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
- uid: Microsoft.Azure.Management.Fluent.Network.IHasPublicIpAddress.PublicIpAddressId
  parent: Microsoft.Azure.Management.Fluent.Network.IHasPublicIpAddress
  isExternal: false
  name: PublicIpAddressId
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasPublicIpAddress.PublicIpAddressId
- uid: Microsoft.Azure.Management.Fluent.Network.IHasPublicIpAddress.GetPublicIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network.IHasPublicIpAddress
  isExternal: false
  name: GetPublicIpAddress()
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasPublicIpAddress.GetPublicIpAddress()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasPublicIpAddress.GetPublicIpAddress
    name: GetPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasPublicIpAddress.GetPublicIpAddress
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasPublicIpAddress.GetPublicIpAddress
    name: GetPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasPublicIpAddress.GetPublicIpAddress
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.IPrivateFrontend.PrivateIpAllocationMethod
  parent: Microsoft.Azure.Management.Fluent.Network.IPrivateFrontend
  isExternal: false
  name: PrivateIpAllocationMethod
  fullName: Microsoft.Azure.Management.Fluent.Network.IPrivateFrontend.PrivateIpAllocationMethod
- uid: Microsoft.Azure.Management.Fluent.Network.IFrontend.InboundNatPools
  parent: Microsoft.Azure.Management.Fluent.Network.IFrontend
  isExternal: false
  name: InboundNatPools()
  fullName: Microsoft.Azure.Management.Fluent.Network.IFrontend.InboundNatPools()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.IFrontend.InboundNatPools
    name: InboundNatPools
    fullName: Microsoft.Azure.Management.Fluent.Network.IFrontend.InboundNatPools
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.IFrontend.InboundNatPools
    name: InboundNatPools
    fullName: Microsoft.Azure.Management.Fluent.Network.IFrontend.InboundNatPools
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.IFrontend.IsPublic
  parent: Microsoft.Azure.Management.Fluent.Network.IFrontend
  isExternal: false
  name: IsPublic
  fullName: Microsoft.Azure.Management.Fluent.Network.IFrontend.IsPublic
- uid: Microsoft.Azure.Management.Fluent.Network.IFrontend.InboundNatRules
  parent: Microsoft.Azure.Management.Fluent.Network.IFrontend
  isExternal: false
  name: InboundNatRules()
  fullName: Microsoft.Azure.Management.Fluent.Network.IFrontend.InboundNatRules()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.IFrontend.InboundNatRules
    name: InboundNatRules
    fullName: Microsoft.Azure.Management.Fluent.Network.IFrontend.InboundNatRules
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.IFrontend.InboundNatRules
    name: InboundNatRules
    fullName: Microsoft.Azure.Management.Fluent.Network.IFrontend.InboundNatRules
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}.WithPrivateIpAddressStatic(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress`1.WithPrivateIpAddressStatic(System.String)
  name: WithPrivateIpAddressStatic(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithPrivateIpAddressStatic(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress(Of Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)).WithPrivateIpAddressStatic(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress`1.WithPrivateIpAddressStatic(System.String)
    name: WithPrivateIpAddressStatic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithPrivateIpAddressStatic
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress`1.WithPrivateIpAddressStatic(System.String)
    name: WithPrivateIpAddressStatic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress(Of Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)).WithPrivateIpAddressStatic
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress`1.WithPrivateIpAddressStatic(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress`1
  isExternal: true
  name: WithPrivateIpAddressStatic(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress<ReturnT>.WithPrivateIpAddressStatic(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress(Of ReturnT).WithPrivateIpAddressStatic(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress`1.WithPrivateIpAddressStatic(System.String)
    name: WithPrivateIpAddressStatic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress<ReturnT>.WithPrivateIpAddressStatic
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress`1.WithPrivateIpAddressStatic(System.String)
    name: WithPrivateIpAddressStatic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress(Of ReturnT).WithPrivateIpAddressStatic
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}.WithPrivateIpAddressDynamic
  parent: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress`1.WithPrivateIpAddressDynamic
  name: WithPrivateIpAddressDynamic()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithPrivateIpAddressDynamic()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress(Of Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)).WithPrivateIpAddressDynamic()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress`1.WithPrivateIpAddressDynamic
    name: WithPrivateIpAddressDynamic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithPrivateIpAddressDynamic
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress`1.WithPrivateIpAddressDynamic
    name: WithPrivateIpAddressDynamic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress(Of Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)).WithPrivateIpAddressDynamic
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress`1.WithPrivateIpAddressDynamic
  parent: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress`1
  isExternal: false
  name: WithPrivateIpAddressDynamic()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress<ReturnT>.WithPrivateIpAddressDynamic()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress(Of ReturnT).WithPrivateIpAddressDynamic()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress`1.WithPrivateIpAddressDynamic
    name: WithPrivateIpAddressDynamic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress<ReturnT>.WithPrivateIpAddressDynamic
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress`1.WithPrivateIpAddressDynamic
    name: WithPrivateIpAddressDynamic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress(Of ReturnT).WithPrivateIpAddressDynamic
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend}}.WithPrivateIpAddressStatic(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1.WithPrivateIpAddressStatic(System.String)
  name: WithPrivateIpAddressStatic(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend>>.WithPrivateIpAddressStatic(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress(Of Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend)).WithPrivateIpAddressStatic(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1.WithPrivateIpAddressStatic(System.String)
    name: WithPrivateIpAddressStatic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend>>.WithPrivateIpAddressStatic
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1.WithPrivateIpAddressStatic(System.String)
    name: WithPrivateIpAddressStatic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress(Of Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend)).WithPrivateIpAddressStatic
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1.WithPrivateIpAddressStatic(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1
  isExternal: true
  name: WithPrivateIpAddressStatic(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<ReturnT>.WithPrivateIpAddressStatic(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress(Of ReturnT).WithPrivateIpAddressStatic(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1.WithPrivateIpAddressStatic(System.String)
    name: WithPrivateIpAddressStatic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<ReturnT>.WithPrivateIpAddressStatic
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1.WithPrivateIpAddressStatic(System.String)
    name: WithPrivateIpAddressStatic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress(Of ReturnT).WithPrivateIpAddressStatic
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend}}.WithPrivateIpAddressDynamic
  parent: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1.WithPrivateIpAddressDynamic
  name: WithPrivateIpAddressDynamic()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend>>.WithPrivateIpAddressDynamic()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress(Of Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend)).WithPrivateIpAddressDynamic()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1.WithPrivateIpAddressDynamic
    name: WithPrivateIpAddressDynamic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend>>.WithPrivateIpAddressDynamic
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1.WithPrivateIpAddressDynamic
    name: WithPrivateIpAddressDynamic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress(Of Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend)).WithPrivateIpAddressDynamic
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1.WithPrivateIpAddressDynamic
  parent: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1
  isExternal: false
  name: WithPrivateIpAddressDynamic()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<ReturnT>.WithPrivateIpAddressDynamic()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress(Of ReturnT).WithPrivateIpAddressDynamic()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1.WithPrivateIpAddressDynamic
    name: WithPrivateIpAddressDynamic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<ReturnT>.WithPrivateIpAddressDynamic
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1.WithPrivateIpAddressDynamic
    name: WithPrivateIpAddressDynamic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress(Of ReturnT).WithPrivateIpAddressDynamic
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IUpdate}.WithPrivateIpAddressStatic(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IUpdate}
  definition: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress`1.WithPrivateIpAddressStatic(System.String)
  name: WithPrivateIpAddressStatic(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IUpdate>.WithPrivateIpAddressStatic(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress(Of Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IUpdate).WithPrivateIpAddressStatic(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress`1.WithPrivateIpAddressStatic(System.String)
    name: WithPrivateIpAddressStatic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IUpdate>.WithPrivateIpAddressStatic
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress`1.WithPrivateIpAddressStatic(System.String)
    name: WithPrivateIpAddressStatic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress(Of Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IUpdate).WithPrivateIpAddressStatic
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress`1.WithPrivateIpAddressStatic(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress`1
  isExternal: true
  name: WithPrivateIpAddressStatic(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress<ReturnT>.WithPrivateIpAddressStatic(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress(Of ReturnT).WithPrivateIpAddressStatic(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress`1.WithPrivateIpAddressStatic(System.String)
    name: WithPrivateIpAddressStatic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress<ReturnT>.WithPrivateIpAddressStatic
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress`1.WithPrivateIpAddressStatic(System.String)
    name: WithPrivateIpAddressStatic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress(Of ReturnT).WithPrivateIpAddressStatic
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IUpdate}.WithPrivateIpAddressDynamic
  parent: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IUpdate}
  definition: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress`1.WithPrivateIpAddressDynamic
  name: WithPrivateIpAddressDynamic()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IUpdate>.WithPrivateIpAddressDynamic()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress(Of Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IUpdate).WithPrivateIpAddressDynamic()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress`1.WithPrivateIpAddressDynamic
    name: WithPrivateIpAddressDynamic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IUpdate>.WithPrivateIpAddressDynamic
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress`1.WithPrivateIpAddressDynamic
    name: WithPrivateIpAddressDynamic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress(Of Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IUpdate).WithPrivateIpAddressDynamic
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress`1.WithPrivateIpAddressDynamic
  parent: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress`1
  isExternal: false
  name: WithPrivateIpAddressDynamic()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress<ReturnT>.WithPrivateIpAddressDynamic()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress(Of ReturnT).WithPrivateIpAddressDynamic()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress`1.WithPrivateIpAddressDynamic
    name: WithPrivateIpAddressDynamic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress<ReturnT>.WithPrivateIpAddressDynamic
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress`1.WithPrivateIpAddressDynamic
    name: WithPrivateIpAddressDynamic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress(Of ReturnT).WithPrivateIpAddressDynamic
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.IHasPrivateIpAddress.PrivateIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network.IHasPrivateIpAddress
  isExternal: false
  name: PrivateIpAddress
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasPrivateIpAddress.PrivateIpAddress
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate}.WithoutPublicIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate}
  definition: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1.WithoutPublicIpAddress
  name: WithoutPublicIpAddress()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate>.WithoutPublicIpAddress()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate).WithoutPublicIpAddress()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1.WithoutPublicIpAddress
    name: WithoutPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate>.WithoutPublicIpAddress
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1.WithoutPublicIpAddress
    name: WithoutPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate).WithoutPublicIpAddress
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1.WithoutPublicIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1
  isExternal: false
  name: WithoutPublicIpAddress()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<ReturnT>.WithoutPublicIpAddress()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress(Of ReturnT).WithoutPublicIpAddress()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1.WithoutPublicIpAddress
    name: WithoutPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<ReturnT>.WithoutPublicIpAddress
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1.WithoutPublicIpAddress
    name: WithoutPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress(Of ReturnT).WithoutPublicIpAddress
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate}.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate}
  definition: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  name: WithExistingPublicIpAddress(IPublicIpAddress)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate>.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate).WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate>.WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate).WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1
  isExternal: false
  name: WithExistingPublicIpAddress(IPublicIpAddress)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<ReturnT>.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress(Of ReturnT).WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<ReturnT>.WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress(Of ReturnT).WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate}.WithExistingPublicIpAddress(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate}
  definition: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(System.String)
  name: WithExistingPublicIpAddress(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate>.WithExistingPublicIpAddress(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate).WithExistingPublicIpAddress(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(System.String)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate>.WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(System.String)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate).WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1
  isExternal: true
  name: WithExistingPublicIpAddress(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<ReturnT>.WithExistingPublicIpAddress(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress(Of ReturnT).WithExistingPublicIpAddress(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(System.String)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<ReturnT>.WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(System.String)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress(Of ReturnT).WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend}}.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  name: WithExistingPublicIpAddress(IPublicIpAddress)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend>>.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend)).WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend>>.WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend)).WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1
  isExternal: false
  name: WithExistingPublicIpAddress(IPublicIpAddress)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress<ReturnT>.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress(Of ReturnT).WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress<ReturnT>.WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress(Of ReturnT).WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend}}.WithExistingPublicIpAddress(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(System.String)
  name: WithExistingPublicIpAddress(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend>>.WithExistingPublicIpAddress(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend)).WithExistingPublicIpAddress(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(System.String)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend>>.WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(System.String)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend)).WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1
  isExternal: true
  name: WithExistingPublicIpAddress(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress<ReturnT>.WithExistingPublicIpAddress(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress(Of ReturnT).WithExistingPublicIpAddress(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(System.String)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress<ReturnT>.WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(System.String)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress(Of ReturnT).WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  name: WithExistingPublicIpAddress(IPublicIpAddress)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)).WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)).WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress`1
  isExternal: false
  name: WithExistingPublicIpAddress(IPublicIpAddress)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress<ReturnT>.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress(Of ReturnT).WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress<ReturnT>.WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress(Of ReturnT).WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}.WithExistingPublicIpAddress(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(System.String)
  name: WithExistingPublicIpAddress(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithExistingPublicIpAddress(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)).WithExistingPublicIpAddress(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(System.String)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(System.String)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)).WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress`1
  isExternal: true
  name: WithExistingPublicIpAddress(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress<ReturnT>.WithExistingPublicIpAddress(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress(Of ReturnT).WithExistingPublicIpAddress(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(System.String)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress<ReturnT>.WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(System.String)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress(Of ReturnT).WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules.LoadBalancingRules
  parent: Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules
  isExternal: false
  name: LoadBalancingRules()
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules.LoadBalancingRules()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules.LoadBalancingRules
    name: LoadBalancingRules
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules.LoadBalancingRules
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules.LoadBalancingRules
    name: LoadBalancingRules
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules.LoadBalancingRules
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithSubnet{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithSubnet{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  definition: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithSubnet`1.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  name: WithExistingSubnet(INetwork, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithSubnet<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork, System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithSubnet(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate).WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithSubnet`1.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
    name: WithExistingSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithSubnet<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithExistingSubnet
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithSubnet`1.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
    name: WithExistingSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithSubnet(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate).WithExistingSubnet
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithSubnet`1.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithSubnet`1
  isExternal: true
  name: WithExistingSubnet(INetwork, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithSubnet<ParentT>.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork, System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithSubnet(Of ParentT).WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithSubnet`1.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
    name: WithExistingSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithSubnet<ParentT>.WithExistingSubnet
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithSubnet`1.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
    name: WithExistingSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IWithSubnet(Of ParentT).WithExistingSubnet
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend}.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend}
  definition: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet`1.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  name: WithExistingSubnet(INetwork, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend>.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork, System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend).WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet`1.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
    name: WithExistingSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend>.WithExistingSubnet
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet`1.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
    name: WithExistingSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend).WithExistingSubnet
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet`1.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet`1
  isExternal: true
  name: WithExistingSubnet(INetwork, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet<ParentT>.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork, System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet(Of ParentT).WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet`1.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
    name: WithExistingSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet<ParentT>.WithExistingSubnet
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet`1.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
    name: WithExistingSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet(Of ParentT).WithExistingSubnet
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IWithSubnet.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IWithSubnet
  isExternal: true
  name: WithExistingSubnet(INetwork, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IWithSubnet.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IWithSubnet.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
    name: WithExistingSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IWithSubnet.WithExistingSubnet
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IWithSubnet.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
    name: WithExistingSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IWithSubnet.WithExistingSubnet
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
