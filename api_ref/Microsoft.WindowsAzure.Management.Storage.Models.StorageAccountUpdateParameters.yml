### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountUpdateParameters
  commentId: T:Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountUpdateParameters
  id: StorageAccountUpdateParameters
  parent: Microsoft.WindowsAzure.Management.Storage.Models
  children:
  - Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountUpdateParameters.#ctor
  - Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountUpdateParameters.AccountType
  - Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountUpdateParameters.Description
  - Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountUpdateParameters.ExtendedProperties
  - Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountUpdateParameters.Label
  langs:
  - csharp
  - vb
  name: StorageAccountUpdateParameters
  nameWithType: StorageAccountUpdateParameters
  fullName: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountUpdateParameters
  type: Class
  source:
    remote:
      path: src/ServiceManagement/Storage/StorageManagement/Generated/Models/StorageAccountUpdateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StorageAccountUpdateParameters
    path: src/ServiceManagement/Storage/StorageManagement/Generated/Models/StorageAccountUpdateParameters.cs
    startLine: 31
  assemblies:
  - Microsoft.WindowsAzure.Management.Storage
  namespace: Microsoft.WindowsAzure.Management.Storage.Models
  summary: "\nParameters supplied to the Update Storage Account operation.\n"
  example: []
  syntax:
    content: public class StorageAccountUpdateParameters
    content.vb: Public Class StorageAccountUpdateParameters
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountUpdateParameters.AccountType
  commentId: P:Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountUpdateParameters.AccountType
  id: AccountType
  parent: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountUpdateParameters
  langs:
  - csharp
  - vb
  name: AccountType
  nameWithType: StorageAccountUpdateParameters.AccountType
  fullName: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountUpdateParameters.AccountType
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Storage/StorageManagement/Generated/Models/StorageAccountUpdateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AccountType
    path: src/ServiceManagement/Storage/StorageManagement/Generated/Models/StorageAccountUpdateParameters.cs
    startLine: 41
  assemblies:
  - Microsoft.WindowsAzure.Management.Storage
  namespace: Microsoft.WindowsAzure.Management.Storage.Models
  summary: "\nOptional. Specifies whether the account supports locally-redundant\nstorage, geo-redundant storage, zone-redundant storage, or read\naccess geo-redundant storage. Possible values are:'Standard_LRS',\n'Standard_ZRS', 'Standard_GRS', and 'Standard_RAGRS'.\n"
  example: []
  syntax:
    content: public string AccountType { get; set; }
    content.vb: Public Property AccountType As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountUpdateParameters.Description
  commentId: P:Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountUpdateParameters.Description
  id: Description
  parent: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountUpdateParameters
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: StorageAccountUpdateParameters.Description
  fullName: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountUpdateParameters.Description
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Storage/StorageManagement/Generated/Models/StorageAccountUpdateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Description
    path: src/ServiceManagement/Storage/StorageManagement/Generated/Models/StorageAccountUpdateParameters.cs
    startLine: 52
  assemblies:
  - Microsoft.WindowsAzure.Management.Storage
  namespace: Microsoft.WindowsAzure.Management.Storage.Models
  summary: "\nOptional.\n"
  example: []
  syntax:
    content: public string Description { get; set; }
    content.vb: Public Property Description As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountUpdateParameters.ExtendedProperties
  commentId: P:Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountUpdateParameters.ExtendedProperties
  id: ExtendedProperties
  parent: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountUpdateParameters
  langs:
  - csharp
  - vb
  name: ExtendedProperties
  nameWithType: StorageAccountUpdateParameters.ExtendedProperties
  fullName: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountUpdateParameters.ExtendedProperties
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Storage/StorageManagement/Generated/Models/StorageAccountUpdateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ExtendedProperties
    path: src/ServiceManagement/Storage/StorageManagement/Generated/Models/StorageAccountUpdateParameters.cs
    startLine: 74
  assemblies:
  - Microsoft.WindowsAzure.Management.Storage
  namespace: Microsoft.WindowsAzure.Management.Storage.Models
  summary: "\nOptional. Represents the name of an extended storage account\nproperty. Each extended property must have a defined name and a\nvalue. You can have a maximum of 50 extended property name/value\npairs. The maximum length of the Name element is 64 characters,\nonly alphanumeric characters and underscores are valid in the\nName, and the name must start with a letter. Attempting to use\nother characters, starting the Name with a non-letter character,\nor entering a name that is identical to that of another extended\nproperty owned by the same storage account will result in a status\ncode 400 (Bad Request) error. Each extended property value has a\nmaximum length of 255 characters. You can delete an extended\nproperty by setting the value to NULL.\n"
  example: []
  syntax:
    content: public IDictionary<string, string> ExtendedProperties { get; set; }
    content.vb: Public Property ExtendedProperties As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountUpdateParameters.Label
  commentId: P:Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountUpdateParameters.Label
  id: Label
  parent: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountUpdateParameters
  langs:
  - csharp
  - vb
  name: Label
  nameWithType: StorageAccountUpdateParameters.Label
  fullName: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountUpdateParameters.Label
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Storage/StorageManagement/Generated/Models/StorageAccountUpdateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Label
    path: src/ServiceManagement/Storage/StorageManagement/Generated/Models/StorageAccountUpdateParameters.cs
    startLine: 87
  assemblies:
  - Microsoft.WindowsAzure.Management.Storage
  namespace: Microsoft.WindowsAzure.Management.Storage.Models
  summary: "\nOptional. A name for the storage account, base64-encoded. The name\nmay be up to 100 characters in length. The name can be used\nidentify the storage account for your tracking purposes.\n"
  example: []
  syntax:
    content: public string Label { get; set; }
    content.vb: Public Property Label As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountUpdateParameters.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountUpdateParameters.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountUpdateParameters
  langs:
  - csharp
  - vb
  name: StorageAccountUpdateParameters()
  nameWithType: StorageAccountUpdateParameters.StorageAccountUpdateParameters()
  fullName: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountUpdateParameters.StorageAccountUpdateParameters()
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/Storage/StorageManagement/Generated/Models/StorageAccountUpdateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/Storage/StorageManagement/Generated/Models/StorageAccountUpdateParameters.cs
    startLine: 97
  assemblies:
  - Microsoft.WindowsAzure.Management.Storage
  namespace: Microsoft.WindowsAzure.Management.Storage.Models
  summary: "\nInitializes a new instance of the StorageAccountUpdateParameters\nclass.\n"
  example: []
  syntax:
    content: public StorageAccountUpdateParameters()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.Storage.Models
  commentId: N:Microsoft.WindowsAzure.Management.Storage.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Storage.Models
  nameWithType: Microsoft.WindowsAzure.Management.Storage.Models
  fullName: Microsoft.WindowsAzure.Management.Storage.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
