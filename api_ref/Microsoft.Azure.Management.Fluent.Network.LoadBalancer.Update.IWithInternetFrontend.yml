items:
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend
  commentId: T:Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend
  id: IWithInternetFrontend
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update
  children:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.DefinePublicFrontend(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.UpdateInternetFrontend(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.WithoutFrontend(System.String)
  langs:
  - csharp
  - vb
  name: IWithInternetFrontend
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend
  type: Interface
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/LoadBalancer/Update/IUpdate.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IWithInternetFrontend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/LoadBalancer/Update/IUpdate.cs
    startLine: 191
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update
  summary: "\nThe stage of a load balancer update allowing to define, remove or edit Internet-facing frontends.\n"
  example: []
  syntax:
    content: 'public interface IWithInternetFrontend : IWithPublicIpAddress'
    content.vb: >-
      Public Interface IWithInternetFrontend
          Inherits IWithPublicIpAddress
  inheritedMembers:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.DefinePublicFrontend(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.DefinePublicFrontend(System.String)
  id: DefinePublicFrontend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend
  langs:
  - csharp
  - vb
  name: DefinePublicFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.DefinePublicFrontend(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/LoadBalancer/Update/IUpdate.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DefinePublicFrontend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/LoadBalancer/Update/IUpdate.cs
    startLine: 201
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update
  syntax:
    content: IBlank<IUpdate> DefinePublicFrontend(string name)
    content.vb: Function DefinePublicFrontend(name As String) As IBlank(Of IUpdate)
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.WithoutFrontend(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.WithoutFrontend(System.String)
  id: WithoutFrontend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend
  langs:
  - csharp
  - vb
  name: WithoutFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.WithoutFrontend(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/LoadBalancer/Update/IUpdate.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithoutFrontend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/LoadBalancer/Update/IUpdate.cs
    startLine: 208
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update
  summary: "\nRemoves the specified frontend from the load balancer.\n"
  example: []
  syntax:
    content: IUpdate WithoutFrontend(string name)
    content.vb: Function WithoutFrontend(name As String) As IUpdate
    parameters:
    - id: name
      type: System.String
      description: name the name of an existing front end on this load balancer
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
      description: the next stage of the update
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.UpdateInternetFrontend(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.UpdateInternetFrontend(System.String)
  id: UpdateInternetFrontend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend
  langs:
  - csharp
  - vb
  name: UpdateInternetFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.UpdateInternetFrontend(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/LoadBalancer/Update/IUpdate.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UpdateInternetFrontend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/LoadBalancer/Update/IUpdate.cs
    startLine: 215
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update
  summary: "\nBegins the description of an update to an existing Internet-facing frontend.\n"
  example: []
  syntax:
    content: IUpdate UpdateInternetFrontend(string name)
    content.vb: Function UpdateInternetFrontend(name As String) As IUpdate
    parameters:
    - id: name
      type: System.String
      description: name the name of the frontend to update
    return:
      type: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate
      description: the first stage of the frontend update
references:
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress
  isExternal: false
  name: WithExistingPublicIpAddress(IPublicIpAddress)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress
  isExternal: false
  name: WithNewPublicIpAddress()
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress
  isExternal: true
  name: WithNewPublicIpAddress(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress(System.String)
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress(System.String)
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress
  isExternal: true
  name: WithNewPublicIpAddress(ICreatable<IPublicIpAddress>)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress(ICreatable<Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress>)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress(ICreatable(Of Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress))
  name.vb: WithNewPublicIpAddress(ICreatable(Of IPublicIpAddress))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update
  isExternal: false
  name: IWithPublicIpAddress
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IBlank`1
  name: IBlank<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IBlank<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IBlank(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IBlank(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IBlank
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IBlank`1
  parent: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition
  isExternal: false
  name: IBlank<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IBlank<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IBlank(Of ParentT)
  name.vb: IBlank(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IBlank
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition
  fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update
  isExternal: false
  name: IUpdate
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
- uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate
  parent: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update
  isExternal: false
  name: IUpdate
  fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate
- uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update
  fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update
