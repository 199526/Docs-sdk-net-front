### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.Store.Models.CloudServiceListResponse.CloudService
  commentId: T:Microsoft.WindowsAzure.Management.Store.Models.CloudServiceListResponse.CloudService
  id: CloudServiceListResponse.CloudService
  parent: Microsoft.WindowsAzure.Management.Store.Models
  children:
  - Microsoft.WindowsAzure.Management.Store.Models.CloudServiceListResponse.CloudService.#ctor
  - Microsoft.WindowsAzure.Management.Store.Models.CloudServiceListResponse.CloudService.Description
  - Microsoft.WindowsAzure.Management.Store.Models.CloudServiceListResponse.CloudService.GeoRegion
  - Microsoft.WindowsAzure.Management.Store.Models.CloudServiceListResponse.CloudService.Label
  - Microsoft.WindowsAzure.Management.Store.Models.CloudServiceListResponse.CloudService.Name
  - Microsoft.WindowsAzure.Management.Store.Models.CloudServiceListResponse.CloudService.Resources
  langs:
  - csharp
  - vb
  name: CloudServiceListResponse.CloudService
  nameWithType: CloudServiceListResponse.CloudService
  fullName: Microsoft.WindowsAzure.Management.Store.Models.CloudServiceListResponse.CloudService
  type: Class
  source:
    remote:
      path: src/ServiceManagement/Store/StoreManagement/Generated/Models/CloudServiceListResponse.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CloudService
    path: src/ServiceManagement/Store/StoreManagement/Generated/Models/CloudServiceListResponse.cs
    startLine: 74
  assemblies:
  - Microsoft.WindowsAzure.Management.Store
  namespace: Microsoft.WindowsAzure.Management.Store.Models
  summary: "\nDefines a cloud service-supporting region in which a storm item is\nlocated.\n"
  example: []
  syntax:
    content: public class CloudService
    content.vb: Public Class CloudService
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.Store.Models.CloudServiceListResponse.CloudService.Description
  commentId: P:Microsoft.WindowsAzure.Management.Store.Models.CloudServiceListResponse.CloudService.Description
  id: Description
  parent: Microsoft.WindowsAzure.Management.Store.Models.CloudServiceListResponse.CloudService
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: CloudServiceListResponse.CloudService.Description
  fullName: Microsoft.WindowsAzure.Management.Store.Models.CloudServiceListResponse.CloudService.Description
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Store/StoreManagement/Generated/Models/CloudServiceListResponse.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Description
    path: src/ServiceManagement/Store/StoreManagement/Generated/Models/CloudServiceListResponse.cs
    startLine: 81
  assemblies:
  - Microsoft.WindowsAzure.Management.Store
  namespace: Microsoft.WindowsAzure.Management.Store.Models
  summary: "\nOptional. The description of the cloud service region.\n"
  example: []
  syntax:
    content: public string Description { get; set; }
    content.vb: Public Property Description As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Store.Models.CloudServiceListResponse.CloudService.GeoRegion
  commentId: P:Microsoft.WindowsAzure.Management.Store.Models.CloudServiceListResponse.CloudService.GeoRegion
  id: GeoRegion
  parent: Microsoft.WindowsAzure.Management.Store.Models.CloudServiceListResponse.CloudService
  langs:
  - csharp
  - vb
  name: GeoRegion
  nameWithType: CloudServiceListResponse.CloudService.GeoRegion
  fullName: Microsoft.WindowsAzure.Management.Store.Models.CloudServiceListResponse.CloudService.GeoRegion
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Store/StoreManagement/Generated/Models/CloudServiceListResponse.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GeoRegion
    path: src/ServiceManagement/Store/StoreManagement/Generated/Models/CloudServiceListResponse.cs
    startLine: 93
  assemblies:
  - Microsoft.WindowsAzure.Management.Store
  namespace: Microsoft.WindowsAzure.Management.Store.Models
  summary: "\nOptional. The geographical region in which this cloud service\ncan run.\n"
  example: []
  syntax:
    content: public string GeoRegion { get; set; }
    content.vb: Public Property GeoRegion As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Store.Models.CloudServiceListResponse.CloudService.Label
  commentId: P:Microsoft.WindowsAzure.Management.Store.Models.CloudServiceListResponse.CloudService.Label
  id: Label
  parent: Microsoft.WindowsAzure.Management.Store.Models.CloudServiceListResponse.CloudService
  langs:
  - csharp
  - vb
  name: Label
  nameWithType: CloudServiceListResponse.CloudService.Label
  fullName: Microsoft.WindowsAzure.Management.Store.Models.CloudServiceListResponse.CloudService.Label
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Store/StoreManagement/Generated/Models/CloudServiceListResponse.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Label
    path: src/ServiceManagement/Store/StoreManagement/Generated/Models/CloudServiceListResponse.cs
    startLine: 104
  assemblies:
  - Microsoft.WindowsAzure.Management.Store
  namespace: Microsoft.WindowsAzure.Management.Store.Models
  summary: "\nOptional. The label of the cloud service region.\n"
  example: []
  syntax:
    content: public string Label { get; set; }
    content.vb: Public Property Label As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Store.Models.CloudServiceListResponse.CloudService.Name
  commentId: P:Microsoft.WindowsAzure.Management.Store.Models.CloudServiceListResponse.CloudService.Name
  id: Name
  parent: Microsoft.WindowsAzure.Management.Store.Models.CloudServiceListResponse.CloudService
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: CloudServiceListResponse.CloudService.Name
  fullName: Microsoft.WindowsAzure.Management.Store.Models.CloudServiceListResponse.CloudService.Name
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Store/StoreManagement/Generated/Models/CloudServiceListResponse.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/ServiceManagement/Store/StoreManagement/Generated/Models/CloudServiceListResponse.cs
    startLine: 115
  assemblies:
  - Microsoft.WindowsAzure.Management.Store
  namespace: Microsoft.WindowsAzure.Management.Store.Models
  summary: "\nOptional. The name of the cloud service region.\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Store.Models.CloudServiceListResponse.CloudService.Resources
  commentId: P:Microsoft.WindowsAzure.Management.Store.Models.CloudServiceListResponse.CloudService.Resources
  id: Resources
  parent: Microsoft.WindowsAzure.Management.Store.Models.CloudServiceListResponse.CloudService
  langs:
  - csharp
  - vb
  name: Resources
  nameWithType: CloudServiceListResponse.CloudService.Resources
  fullName: Microsoft.WindowsAzure.Management.Store.Models.CloudServiceListResponse.CloudService.Resources
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Store/StoreManagement/Generated/Models/CloudServiceListResponse.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Resources
    path: src/ServiceManagement/Store/StoreManagement/Generated/Models/CloudServiceListResponse.cs
    startLine: 127
  assemblies:
  - Microsoft.WindowsAzure.Management.Store
  namespace: Microsoft.WindowsAzure.Management.Store.Models
  summary: "\nOptional. A list of existing store resources installed into a\ncloud service region.\n"
  example: []
  syntax:
    content: public IList<CloudServiceListResponse.CloudService.AddOnResource> Resources { get; set; }
    content.vb: Public Property Resources As IList(Of CloudServiceListResponse.CloudService.AddOnResource)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.WindowsAzure.Management.Store.Models.CloudServiceListResponse.CloudService.AddOnResource}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Store.Models.CloudServiceListResponse.CloudService.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.Store.Models.CloudServiceListResponse.CloudService.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.Store.Models.CloudServiceListResponse.CloudService
  langs:
  - csharp
  - vb
  name: CloudService()
  nameWithType: CloudServiceListResponse.CloudService.CloudService()
  fullName: Microsoft.WindowsAzure.Management.Store.Models.CloudServiceListResponse.CloudService.CloudService()
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/Store/StoreManagement/Generated/Models/CloudServiceListResponse.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/Store/StoreManagement/Generated/Models/CloudServiceListResponse.cs
    startLine: 136
  assemblies:
  - Microsoft.WindowsAzure.Management.Store
  namespace: Microsoft.WindowsAzure.Management.Store.Models
  summary: "\nInitializes a new instance of the CloudService class.\n"
  example: []
  syntax:
    content: public CloudService()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.Store.Models
  commentId: N:Microsoft.WindowsAzure.Management.Store.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Store.Models
  nameWithType: Microsoft.WindowsAzure.Management.Store.Models
  fullName: Microsoft.WindowsAzure.Management.Store.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IList{Microsoft.WindowsAzure.Management.Store.Models.CloudServiceListResponse.CloudService.AddOnResource}
  commentId: T:System.Collections.Generic.IList{Microsoft.WindowsAzure.Management.Store.Models.CloudServiceListResponse.CloudService.AddOnResource}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<CloudServiceListResponse.CloudService.AddOnResource>
  nameWithType: IList<CloudServiceListResponse.CloudService.AddOnResource>
  fullName: System.Collections.Generic.IList<Microsoft.WindowsAzure.Management.Store.Models.CloudServiceListResponse.CloudService.AddOnResource>
  nameWithType.vb: IList(Of CloudServiceListResponse.CloudService.AddOnResource)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.WindowsAzure.Management.Store.Models.CloudServiceListResponse.CloudService.AddOnResource)
  name.vb: IList(Of CloudServiceListResponse.CloudService.AddOnResource)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Management.Store.Models.CloudServiceListResponse.CloudService.AddOnResource
    name: CloudServiceListResponse.CloudService.AddOnResource
    nameWithType: CloudServiceListResponse.CloudService.AddOnResource
    fullName: Microsoft.WindowsAzure.Management.Store.Models.CloudServiceListResponse.CloudService.AddOnResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Management.Store.Models.CloudServiceListResponse.CloudService.AddOnResource
    name: CloudServiceListResponse.CloudService.AddOnResource
    nameWithType: CloudServiceListResponse.CloudService.AddOnResource
    fullName: Microsoft.WindowsAzure.Management.Store.Models.CloudServiceListResponse.CloudService.AddOnResource
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
