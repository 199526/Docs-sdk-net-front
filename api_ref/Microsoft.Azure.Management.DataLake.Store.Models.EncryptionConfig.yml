items:
- uid: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionConfig
  commentId: T:Microsoft.Azure.Management.DataLake.Store.Models.EncryptionConfig
  id: EncryptionConfig
  parent: Microsoft.Azure.Management.DataLake.Store.Models
  children:
  - Microsoft.Azure.Management.DataLake.Store.Models.EncryptionConfig.#ctor
  - Microsoft.Azure.Management.DataLake.Store.Models.EncryptionConfig.#ctor(System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.EncryptionConfigType},Microsoft.Azure.Management.DataLake.Store.Models.KeyVaultMetaInfo)
  - Microsoft.Azure.Management.DataLake.Store.Models.EncryptionConfig.KeyVaultMetaInfo
  - Microsoft.Azure.Management.DataLake.Store.Models.EncryptionConfig.Type
  langs:
  - csharp
  - vb
  name: EncryptionConfig
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionConfig
  type: Class
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/EncryptionConfig.cs
      branch: 03e4766cf2a8f00863f873f72407547b59a15b8e
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EncryptionConfig
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/EncryptionConfig.cs
    startLine: 18
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store.Models
  syntax:
    content: public class EncryptionConfig
    content.vb: Public Class EncryptionConfig
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionConfig.#ctor
  commentId: M:Microsoft.Azure.Management.DataLake.Store.Models.EncryptionConfig.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionConfig
  langs:
  - csharp
  - vb
  name: EncryptionConfig()
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionConfig.EncryptionConfig()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/EncryptionConfig.cs
      branch: 03e4766cf2a8f00863f873f72407547b59a15b8e
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/EncryptionConfig.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store.Models
  summary: "\nInitializes a new instance of the EncryptionConfig class.\n"
  example: []
  syntax:
    content: public EncryptionConfig()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionConfig.#ctor(System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.EncryptionConfigType},Microsoft.Azure.Management.DataLake.Store.Models.KeyVaultMetaInfo)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.Models.EncryptionConfig.#ctor(System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.EncryptionConfigType},Microsoft.Azure.Management.DataLake.Store.Models.KeyVaultMetaInfo)
  id: '#ctor(System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.EncryptionConfigType},Microsoft.Azure.Management.DataLake.Store.Models.KeyVaultMetaInfo)'
  parent: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionConfig
  langs:
  - csharp
  - vb
  name: EncryptionConfig(Nullable<EncryptionConfigType>, KeyVaultMetaInfo)
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionConfig.EncryptionConfig(System.Nullable<Microsoft.Azure.Management.DataLake.Store.Models.EncryptionConfigType>, Microsoft.Azure.Management.DataLake.Store.Models.KeyVaultMetaInfo)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/EncryptionConfig.cs
      branch: 03e4766cf2a8f00863f873f72407547b59a15b8e
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/EncryptionConfig.cs
    startLine: 34
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store.Models
  summary: "\nInitializes a new instance of the EncryptionConfig class.\n"
  example: []
  syntax:
    content: public EncryptionConfig(EncryptionConfigType? type = null, KeyVaultMetaInfo keyVaultMetaInfo = null)
    content.vb: Public Sub New(type As EncryptionConfigType? = Nothing, keyVaultMetaInfo As KeyVaultMetaInfo = Nothing)
    parameters:
    - id: type
      type: System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.EncryptionConfigType}
      description: >-
        The type of encryption configuration being

        used. Currently the only supported types are 'UserManaged' and

        'ServiceManaged'. Possible values include: 'UserManaged',

        'ServiceManaged'
    - id: keyVaultMetaInfo
      type: Microsoft.Azure.Management.DataLake.Store.Models.KeyVaultMetaInfo
      description: >-
        The Key vault information for

        connecting to user managed encryption keys.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionConfig.EncryptionConfig(System.Nullable(Of Microsoft.Azure.Management.DataLake.Store.Models.EncryptionConfigType), Microsoft.Azure.Management.DataLake.Store.Models.KeyVaultMetaInfo)
  name.vb: EncryptionConfig(Nullable(Of EncryptionConfigType), KeyVaultMetaInfo)
- uid: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionConfig.Type
  commentId: P:Microsoft.Azure.Management.DataLake.Store.Models.EncryptionConfig.Type
  id: Type
  parent: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionConfig
  langs:
  - csharp
  - vb
  name: Type
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionConfig.Type
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/EncryptionConfig.cs
      branch: 03e4766cf2a8f00863f873f72407547b59a15b8e
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Type
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/EncryptionConfig.cs
    startLine: 46
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store.Models
  summary: "\nGets or sets the type of encryption configuration being used.\nCurrently the only supported types are 'UserManaged' and\n'ServiceManaged'. Possible values include: 'UserManaged',\n'ServiceManaged'\n"
  example: []
  syntax:
    content: public EncryptionConfigType? Type { get; set; }
    content.vb: Public Property Type As EncryptionConfigType?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.EncryptionConfigType}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionConfig.KeyVaultMetaInfo
  commentId: P:Microsoft.Azure.Management.DataLake.Store.Models.EncryptionConfig.KeyVaultMetaInfo
  id: KeyVaultMetaInfo
  parent: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionConfig
  langs:
  - csharp
  - vb
  name: KeyVaultMetaInfo
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionConfig.KeyVaultMetaInfo
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/EncryptionConfig.cs
      branch: 03e4766cf2a8f00863f873f72407547b59a15b8e
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KeyVaultMetaInfo
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/EncryptionConfig.cs
    startLine: 53
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store.Models
  summary: "\nGets or sets the Key vault information for connecting to user\nmanaged encryption keys.\n"
  example: []
  syntax:
    content: public KeyVaultMetaInfo KeyVaultMetaInfo { get; set; }
    content.vb: Public Property KeyVaultMetaInfo As KeyVaultMetaInfo
    parameters: []
    return:
      type: Microsoft.Azure.Management.DataLake.Store.Models.KeyVaultMetaInfo
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.DataLake.Store.Models
  isExternal: false
  name: Microsoft.Azure.Management.DataLake.Store.Models
  fullName: Microsoft.Azure.Management.DataLake.Store.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.EncryptionConfigType}
  parent: System
  definition: System.Nullable`1
  name: Nullable<EncryptionConfigType>
  fullName: System.Nullable<Microsoft.Azure.Management.DataLake.Store.Models.EncryptionConfigType>
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.DataLake.Store.Models.EncryptionConfigType)
  name.vb: Nullable(Of EncryptionConfigType)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionConfigType
    name: EncryptionConfigType
    fullName: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionConfigType
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionConfigType
    name: EncryptionConfigType
    fullName: Microsoft.Azure.Management.DataLake.Store.Models.EncryptionConfigType
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.Store.Models.KeyVaultMetaInfo
  parent: Microsoft.Azure.Management.DataLake.Store.Models
  isExternal: false
  name: KeyVaultMetaInfo
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.KeyVaultMetaInfo
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
