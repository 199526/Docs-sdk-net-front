items:
- uid: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IUpdate
  commentId: T:Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IUpdate
  id: IUpdate
  parent: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update
  children: []
  langs:
  - csharp
  - vb
  name: IUpdate
  fullName: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IUpdate
  type: Interface
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/BatchAccount/Update/IUpdate.cs
      branch: 9023be37d52853162afcbfd0bcabe8a4e2b1cc85
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IUpdate
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/BatchAccount/Update/IUpdate.cs
    startLine: 76
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update
  summary: "\nThe template for a storage account update operation, containing all the settings that can be modified.\n"
  example: []
  syntax:
    content: 'public interface IUpdate : IAppliable<IBatchAccount>, IUpdateWithTags<IUpdate>, IWithStorageAccount, IWithApplication'
    content.vb: >-
      Public Interface IUpdate
          Inherits IAppliable(Of IBatchAccount), IUpdateWithTags(Of IUpdate), IWithStorageAccount, IWithApplication
  inheritedMembers:
  - Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount.WithExistingStorageAccount(IStorageAccount)
  - Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount.WithNewStorageAccount(ICreatable{Microsoft.Azure.Management.V2.Storage.IStorageAccount})
  - Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount.WithNewStorageAccount(System.String)
  - Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount.WithoutStorageAccount
  - Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithApplication.DefineNewApplication(System.String)
  - Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithApplication.UpdateApplication(System.String)
  - Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithApplication.WithoutApplication(System.String)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
references:
- uid: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update
  fullName: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update
- uid: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount.WithExistingStorageAccount(IStorageAccount)
  parent: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount
  isExternal: true
  name: WithExistingStorageAccount(IStorageAccount)
  fullName: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount.WithExistingStorageAccount(IStorageAccount)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount.WithExistingStorageAccount(IStorageAccount)
    name: WithExistingStorageAccount
    fullName: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount.WithExistingStorageAccount
  - name: (
    fullName: (
  - uid: IStorageAccount
    name: IStorageAccount
    fullName: IStorageAccount
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount.WithExistingStorageAccount(IStorageAccount)
    name: WithExistingStorageAccount
    fullName: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount.WithExistingStorageAccount
  - name: (
    fullName: (
  - uid: IStorageAccount
    name: IStorageAccount
    fullName: IStorageAccount
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount.WithNewStorageAccount(ICreatable{Microsoft.Azure.Management.V2.Storage.IStorageAccount})
  parent: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount
  isExternal: true
  name: WithNewStorageAccount(ICreatable<V2.Storage.IStorageAccount>)
  fullName: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount.WithNewStorageAccount(ICreatable<Microsoft.Azure.Management.V2.Storage.IStorageAccount>)
  fullname.vb: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount.WithNewStorageAccount(ICreatable(Of Microsoft.Azure.Management.V2.Storage.IStorageAccount))
  name.vb: WithNewStorageAccount(ICreatable(Of V2.Storage.IStorageAccount))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount.WithNewStorageAccount(ICreatable{Microsoft.Azure.Management.V2.Storage.IStorageAccount})
    name: WithNewStorageAccount
    fullName: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount.WithNewStorageAccount
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.V2.Storage.IStorageAccount
    name: V2.Storage.IStorageAccount
    fullName: Microsoft.Azure.Management.V2.Storage.IStorageAccount
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount.WithNewStorageAccount(ICreatable{Microsoft.Azure.Management.V2.Storage.IStorageAccount})
    name: WithNewStorageAccount
    fullName: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount.WithNewStorageAccount
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.V2.Storage.IStorageAccount
    name: V2.Storage.IStorageAccount
    fullName: Microsoft.Azure.Management.V2.Storage.IStorageAccount
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount.WithNewStorageAccount(System.String)
  parent: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount
  isExternal: true
  name: WithNewStorageAccount(String)
  fullName: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount.WithNewStorageAccount(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount.WithNewStorageAccount(System.String)
    name: WithNewStorageAccount
    fullName: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount.WithNewStorageAccount
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount.WithNewStorageAccount(System.String)
    name: WithNewStorageAccount
    fullName: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount.WithNewStorageAccount
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount.WithoutStorageAccount
  parent: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount
  isExternal: false
  name: WithoutStorageAccount()
  fullName: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount.WithoutStorageAccount()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount.WithoutStorageAccount
    name: WithoutStorageAccount
    fullName: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount.WithoutStorageAccount
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount.WithoutStorageAccount
    name: WithoutStorageAccount
    fullName: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount.WithoutStorageAccount
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithApplication.DefineNewApplication(System.String)
  parent: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithApplication
  isExternal: true
  name: DefineNewApplication(String)
  fullName: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithApplication.DefineNewApplication(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithApplication.DefineNewApplication(System.String)
    name: DefineNewApplication
    fullName: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithApplication.DefineNewApplication
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithApplication.DefineNewApplication(System.String)
    name: DefineNewApplication
    fullName: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithApplication.DefineNewApplication
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithApplication.UpdateApplication(System.String)
  parent: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithApplication
  isExternal: true
  name: UpdateApplication(String)
  fullName: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithApplication.UpdateApplication(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithApplication.UpdateApplication(System.String)
    name: UpdateApplication
    fullName: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithApplication.UpdateApplication
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithApplication.UpdateApplication(System.String)
    name: UpdateApplication
    fullName: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithApplication.UpdateApplication
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithApplication.WithoutApplication(System.String)
  parent: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithApplication
  isExternal: true
  name: WithoutApplication(String)
  fullName: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithApplication.WithoutApplication(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithApplication.WithoutApplication(System.String)
    name: WithoutApplication
    fullName: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithApplication.WithoutApplication
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithApplication.WithoutApplication(System.String)
    name: WithoutApplication
    fullName: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithApplication.WithoutApplication
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount
  parent: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update
  isExternal: false
  name: IWithStorageAccount
  fullName: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount
- uid: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithApplication
  parent: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update
  isExternal: false
  name: IWithApplication
  fullName: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithApplication
