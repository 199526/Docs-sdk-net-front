### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.OperationExecutor
  commentId: T:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.OperationExecutor
  id: OperationExecutor
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries
  children:
  - Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.OperationExecutor.ExecuteOperationWithRetry``1(System.Func{System.Threading.Tasks.Task{``0}},Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.IRetryPolicy,Microsoft.WindowsAzure.Management.HDInsight.IAbstractionContext,Microsoft.WindowsAzure.Management.HDInsight.Logging.ILogger)
  langs:
  - csharp
  - vb
  name: OperationExecutor
  nameWithType: OperationExecutor
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.OperationExecutor
  type: Class
  source:
    remote:
      path: src/ServiceManagement/HDInsight/Microsoft.WindowsAzure.Management.HDInsight.Framework.Core/Retries/OperationExecutor.cs
      branch: d500760ed1df3f9ecfc1190f640525feeba47480
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: OperationExecutor
    path: src/ServiceManagement/HDInsight/Microsoft.WindowsAzure.Management.HDInsight.Framework.Core/Retries/OperationExecutor.cs
    startLine: 16
  assemblies:
  - Microsoft.WindowsAzure.Management.HDInsight.Framework.Core
  namespace: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries
  summary: "\nOperationExecutor class.\n"
  example: []
  syntax:
    content: public static class OperationExecutor
    content.vb: Public Module OperationExecutor
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.OperationExecutor.ExecuteOperationWithRetry``1(System.Func{System.Threading.Tasks.Task{``0}},Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.IRetryPolicy,Microsoft.WindowsAzure.Management.HDInsight.IAbstractionContext,Microsoft.WindowsAzure.Management.HDInsight.Logging.ILogger)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.OperationExecutor.ExecuteOperationWithRetry``1(System.Func{System.Threading.Tasks.Task{``0}},Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.IRetryPolicy,Microsoft.WindowsAzure.Management.HDInsight.IAbstractionContext,Microsoft.WindowsAzure.Management.HDInsight.Logging.ILogger)
  id: ExecuteOperationWithRetry``1(System.Func{System.Threading.Tasks.Task{``0}},Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.IRetryPolicy,Microsoft.WindowsAzure.Management.HDInsight.IAbstractionContext,Microsoft.WindowsAzure.Management.HDInsight.Logging.ILogger)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.OperationExecutor
  langs:
  - csharp
  - vb
  name: ExecuteOperationWithRetry<T>(Func<Task<T>>, IRetryPolicy, IAbstractionContext, ILogger)
  nameWithType: OperationExecutor.ExecuteOperationWithRetry<T>(Func<Task<T>>, IRetryPolicy, IAbstractionContext, ILogger)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.OperationExecutor.ExecuteOperationWithRetry<T>(System.Func<System.Threading.Tasks.Task<T>>, Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.IRetryPolicy, Microsoft.WindowsAzure.Management.HDInsight.IAbstractionContext, Microsoft.WindowsAzure.Management.HDInsight.Logging.ILogger)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/HDInsight/Microsoft.WindowsAzure.Management.HDInsight.Framework.Core/Retries/OperationExecutor.cs
      branch: d500760ed1df3f9ecfc1190f640525feeba47480
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ExecuteOperationWithRetry
    path: src/ServiceManagement/HDInsight/Microsoft.WindowsAzure.Management.HDInsight.Framework.Core/Retries/OperationExecutor.cs
    startLine: 29
  assemblies:
  - Microsoft.WindowsAzure.Management.HDInsight.Framework.Core
  namespace: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries
  summary: "\nExecutes the specified operation with the specified retry policy.\n"
  example: []
  syntax:
    content: public static Task<OperationExecutionResult<T>> ExecuteOperationWithRetry<T>(Func<Task<T>> function, IRetryPolicy policy, IAbstractionContext context, ILogger logger)
    content.vb: Public Shared Function ExecuteOperationWithRetry(Of T)(function As Func(Of Task(Of T)), policy As IRetryPolicy, context As IAbstractionContext, logger As ILogger) As Task(Of OperationExecutionResult(Of T))
    parameters:
    - id: function
      type: System.Func{System.Threading.Tasks.Task{{T}}}
      description: The function to execute.
    - id: policy
      type: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.IRetryPolicy
      description: The retry policy to apply to the function.
    - id: context
      type: Microsoft.WindowsAzure.Management.HDInsight.IAbstractionContext
      description: The abstraction context to use.
    - id: logger
      type: Microsoft.WindowsAzure.Management.HDInsight.Logging.ILogger
      description: An ILogger object to log retry attempts.
    typeParameters:
    - id: T
      description: Returns an arbitrary type.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.OperationExecutionResult{{T}}}
      description: "\nReturns the value received from the execution of the function.\n"
  nameWithType.vb: OperationExecutor.ExecuteOperationWithRetry(Of T)(Func(Of Task(Of T)), IRetryPolicy, IAbstractionContext, ILogger)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.OperationExecutor.ExecuteOperationWithRetry(Of T)(System.Func(Of System.Threading.Tasks.Task(Of T)), Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.IRetryPolicy, Microsoft.WindowsAzure.Management.HDInsight.IAbstractionContext, Microsoft.WindowsAzure.Management.HDInsight.Logging.ILogger)
  name.vb: ExecuteOperationWithRetry(Of T)(Func(Of Task(Of T)), IRetryPolicy, IAbstractionContext, ILogger)
references:
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries
  commentId: N:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries
  isExternal: false
  name: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries
  nameWithType: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Func{System.Threading.Tasks.Task{{T}}}
  commentId: T:System.Func{System.Threading.Tasks.Task{``0}}
  parent: System
  definition: System.Func`1
  name: Func<Task<T>>
  nameWithType: Func<Task<T>>
  fullName: System.Func<System.Threading.Tasks.Task<T>>
  nameWithType.vb: Func(Of Task(Of T))
  fullname.vb: System.Func(Of System.Threading.Tasks.Task(Of T))
  name.vb: Func(Of Task(Of T))
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.IRetryPolicy
  commentId: T:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.IRetryPolicy
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries
  isExternal: false
  name: IRetryPolicy
  nameWithType: IRetryPolicy
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.IRetryPolicy
- uid: Microsoft.WindowsAzure.Management.HDInsight.IAbstractionContext
  commentId: T:Microsoft.WindowsAzure.Management.HDInsight.IAbstractionContext
  parent: Microsoft.WindowsAzure.Management.HDInsight
  isExternal: false
  name: IAbstractionContext
  nameWithType: IAbstractionContext
  fullName: Microsoft.WindowsAzure.Management.HDInsight.IAbstractionContext
- uid: Microsoft.WindowsAzure.Management.HDInsight.Logging.ILogger
  commentId: T:Microsoft.WindowsAzure.Management.HDInsight.Logging.ILogger
  parent: Microsoft.WindowsAzure.Management.HDInsight.Logging
  isExternal: false
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Logging.ILogger
- uid: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.OperationExecutionResult{{T}}}
  commentId: T:System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.OperationExecutionResult{``0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<OperationExecutionResult<T>>
  nameWithType: Task<OperationExecutionResult<T>>
  fullName: System.Threading.Tasks.Task<Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.OperationExecutionResult<T>>
  nameWithType.vb: Task(Of OperationExecutionResult(Of T))
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.OperationExecutionResult(Of T))
  name.vb: Task(Of OperationExecutionResult(Of T))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.OperationExecutionResult`1
    name: OperationExecutionResult
    nameWithType: OperationExecutionResult
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.OperationExecutionResult
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.OperationExecutionResult`1
    name: OperationExecutionResult
    nameWithType: OperationExecutionResult
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.OperationExecutionResult
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullname.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight
  commentId: N:Microsoft.WindowsAzure.Management.HDInsight
  isExternal: false
  name: Microsoft.WindowsAzure.Management.HDInsight
  nameWithType: Microsoft.WindowsAzure.Management.HDInsight
  fullName: Microsoft.WindowsAzure.Management.HDInsight
- uid: Microsoft.WindowsAzure.Management.HDInsight.Logging
  commentId: N:Microsoft.WindowsAzure.Management.HDInsight.Logging
  isExternal: false
  name: Microsoft.WindowsAzure.Management.HDInsight.Logging
  nameWithType: Microsoft.WindowsAzure.Management.HDInsight.Logging
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Logging
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
