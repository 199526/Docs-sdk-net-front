items:
- uid: Microsoft.Azure.Management.CognitiveServices.Models.CognitiveServicesAccountKeys
  commentId: T:Microsoft.Azure.Management.CognitiveServices.Models.CognitiveServicesAccountKeys
  id: CognitiveServicesAccountKeys
  parent: Microsoft.Azure.Management.CognitiveServices.Models
  children:
  - Microsoft.Azure.Management.CognitiveServices.Models.CognitiveServicesAccountKeys.#ctor
  - Microsoft.Azure.Management.CognitiveServices.Models.CognitiveServicesAccountKeys.#ctor(System.String,System.String)
  - Microsoft.Azure.Management.CognitiveServices.Models.CognitiveServicesAccountKeys.Key1
  - Microsoft.Azure.Management.CognitiveServices.Models.CognitiveServicesAccountKeys.Key2
  langs:
  - csharp
  - vb
  name: CognitiveServicesAccountKeys
  fullName: Microsoft.Azure.Management.CognitiveServices.Models.CognitiveServicesAccountKeys
  type: Class
  source:
    remote:
      path: src/ResourceManagement/CognitiveServices/Microsoft.Azure.Management.CognitiveServices/Generated/Models/CognitiveServicesAccountKeys.cs
      branch: 6532f686f273e0213bedf20dfa2fa2c008ae0da8
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CognitiveServicesAccountKeys
    path: src/ResourceManagement/CognitiveServices/Microsoft.Azure.Management.CognitiveServices/Generated/Models/CognitiveServicesAccountKeys.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.CognitiveServices
  packages:
  - Microsoft.Azure.Management.CognitiveServices(0.1.3-preview)
  namespace: Microsoft.Azure.Management.CognitiveServices.Models
  summary: "\nThe access keys for the cognitive services account.\n"
  example: []
  syntax:
    content: public class CognitiveServicesAccountKeys
    content.vb: Public Class CognitiveServicesAccountKeys
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.CognitiveServices.Models.CognitiveServicesAccountKeys.#ctor
  commentId: M:Microsoft.Azure.Management.CognitiveServices.Models.CognitiveServicesAccountKeys.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.CognitiveServices.Models.CognitiveServicesAccountKeys
  langs:
  - csharp
  - vb
  name: CognitiveServicesAccountKeys()
  fullName: Microsoft.Azure.Management.CognitiveServices.Models.CognitiveServicesAccountKeys.CognitiveServicesAccountKeys()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/CognitiveServices/Microsoft.Azure.Management.CognitiveServices/Generated/Models/CognitiveServicesAccountKeys.cs
      branch: 6532f686f273e0213bedf20dfa2fa2c008ae0da8
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/CognitiveServices/Microsoft.Azure.Management.CognitiveServices/Generated/Models/CognitiveServicesAccountKeys.cs
    startLine: 27
  assemblies:
  - Microsoft.Azure.Management.CognitiveServices
  packages:
  - Microsoft.Azure.Management.CognitiveServices(0.1.3-preview)
  namespace: Microsoft.Azure.Management.CognitiveServices.Models
  summary: "\nInitializes a new instance of the CognitiveServicesAccountKeys\nclass.\n"
  example: []
  syntax:
    content: public CognitiveServicesAccountKeys()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.CognitiveServices.Models.CognitiveServicesAccountKeys.#ctor(System.String,System.String)
  commentId: M:Microsoft.Azure.Management.CognitiveServices.Models.CognitiveServicesAccountKeys.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Microsoft.Azure.Management.CognitiveServices.Models.CognitiveServicesAccountKeys
  langs:
  - csharp
  - vb
  name: CognitiveServicesAccountKeys(String, String)
  fullName: Microsoft.Azure.Management.CognitiveServices.Models.CognitiveServicesAccountKeys.CognitiveServicesAccountKeys(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/CognitiveServices/Microsoft.Azure.Management.CognitiveServices/Generated/Models/CognitiveServicesAccountKeys.cs
      branch: 6532f686f273e0213bedf20dfa2fa2c008ae0da8
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/CognitiveServices/Microsoft.Azure.Management.CognitiveServices/Generated/Models/CognitiveServicesAccountKeys.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Management.CognitiveServices
  packages:
  - Microsoft.Azure.Management.CognitiveServices(0.1.3-preview)
  namespace: Microsoft.Azure.Management.CognitiveServices.Models
  summary: "\nInitializes a new instance of the CognitiveServicesAccountKeys\nclass.\n"
  example: []
  syntax:
    content: public CognitiveServicesAccountKeys(string key1 = null, string key2 = null)
    content.vb: Public Sub New(key1 As String = Nothing, key2 As String = Nothing)
    parameters:
    - id: key1
      type: System.String
    - id: key2
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.CognitiveServices.Models.CognitiveServicesAccountKeys.Key1
  commentId: P:Microsoft.Azure.Management.CognitiveServices.Models.CognitiveServicesAccountKeys.Key1
  id: Key1
  parent: Microsoft.Azure.Management.CognitiveServices.Models.CognitiveServicesAccountKeys
  langs:
  - csharp
  - vb
  name: Key1
  fullName: Microsoft.Azure.Management.CognitiveServices.Models.CognitiveServicesAccountKeys.Key1
  type: Property
  source:
    remote:
      path: src/ResourceManagement/CognitiveServices/Microsoft.Azure.Management.CognitiveServices/Generated/Models/CognitiveServicesAccountKeys.cs
      branch: 6532f686f273e0213bedf20dfa2fa2c008ae0da8
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Key1
    path: src/ResourceManagement/CognitiveServices/Microsoft.Azure.Management.CognitiveServices/Generated/Models/CognitiveServicesAccountKeys.cs
    startLine: 42
  assemblies:
  - Microsoft.Azure.Management.CognitiveServices
  packages:
  - Microsoft.Azure.Management.CognitiveServices(0.1.3-preview)
  namespace: Microsoft.Azure.Management.CognitiveServices.Models
  summary: "\nGets the value of key 1.\n"
  example: []
  syntax:
    content: public string Key1 { get; set; }
    content.vb: Public Property Key1 As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.CognitiveServices.Models.CognitiveServicesAccountKeys.Key2
  commentId: P:Microsoft.Azure.Management.CognitiveServices.Models.CognitiveServicesAccountKeys.Key2
  id: Key2
  parent: Microsoft.Azure.Management.CognitiveServices.Models.CognitiveServicesAccountKeys
  langs:
  - csharp
  - vb
  name: Key2
  fullName: Microsoft.Azure.Management.CognitiveServices.Models.CognitiveServicesAccountKeys.Key2
  type: Property
  source:
    remote:
      path: src/ResourceManagement/CognitiveServices/Microsoft.Azure.Management.CognitiveServices/Generated/Models/CognitiveServicesAccountKeys.cs
      branch: 6532f686f273e0213bedf20dfa2fa2c008ae0da8
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Key2
    path: src/ResourceManagement/CognitiveServices/Microsoft.Azure.Management.CognitiveServices/Generated/Models/CognitiveServicesAccountKeys.cs
    startLine: 48
  assemblies:
  - Microsoft.Azure.Management.CognitiveServices
  packages:
  - Microsoft.Azure.Management.CognitiveServices(0.1.3-preview)
  namespace: Microsoft.Azure.Management.CognitiveServices.Models
  summary: "\nGets the value of key 2.\n"
  example: []
  syntax:
    content: public string Key2 { get; set; }
    content.vb: Public Property Key2 As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.CognitiveServices.Models
  isExternal: false
  name: Microsoft.Azure.Management.CognitiveServices.Models
  fullName: Microsoft.Azure.Management.CognitiveServices.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
