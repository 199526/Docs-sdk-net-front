### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.TrafficManager.Models.DefinitionMonitorHTTPOptions
  commentId: T:Microsoft.WindowsAzure.Management.TrafficManager.Models.DefinitionMonitorHTTPOptions
  id: DefinitionMonitorHTTPOptions
  parent: Microsoft.WindowsAzure.Management.TrafficManager.Models
  children:
  - Microsoft.WindowsAzure.Management.TrafficManager.Models.DefinitionMonitorHTTPOptions.#ctor
  - Microsoft.WindowsAzure.Management.TrafficManager.Models.DefinitionMonitorHTTPOptions.ExpectedStatusCode
  - Microsoft.WindowsAzure.Management.TrafficManager.Models.DefinitionMonitorHTTPOptions.RelativePath
  - Microsoft.WindowsAzure.Management.TrafficManager.Models.DefinitionMonitorHTTPOptions.Verb
  langs:
  - csharp
  - vb
  name: DefinitionMonitorHTTPOptions
  nameWithType: DefinitionMonitorHTTPOptions
  fullName: Microsoft.WindowsAzure.Management.TrafficManager.Models.DefinitionMonitorHTTPOptions
  type: Class
  source:
    remote:
      path: src/ServiceManagement/TrafficManager/TrafficManagerManagement/Generated/Models/DefinitionMonitorHTTPOptions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DefinitionMonitorHTTPOptions
    path: src/ServiceManagement/TrafficManager/TrafficManagerManagement/Generated/Models/DefinitionMonitorHTTPOptions.cs
    startLine: 30
  assemblies:
  - Microsoft.WindowsAzure.Management.TrafficManager
  namespace: Microsoft.WindowsAzure.Management.TrafficManager.Models
  summary: "\nDescribes the option to use when making an HTTP request to monitor\nendpoint health.\n"
  example: []
  syntax:
    content: public class DefinitionMonitorHTTPOptions
    content.vb: Public Class DefinitionMonitorHTTPOptions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.TrafficManager.Models.DefinitionMonitorHTTPOptions.ExpectedStatusCode
  commentId: P:Microsoft.WindowsAzure.Management.TrafficManager.Models.DefinitionMonitorHTTPOptions.ExpectedStatusCode
  id: ExpectedStatusCode
  parent: Microsoft.WindowsAzure.Management.TrafficManager.Models.DefinitionMonitorHTTPOptions
  langs:
  - csharp
  - vb
  name: ExpectedStatusCode
  nameWithType: DefinitionMonitorHTTPOptions.ExpectedStatusCode
  fullName: Microsoft.WindowsAzure.Management.TrafficManager.Models.DefinitionMonitorHTTPOptions.ExpectedStatusCode
  type: Property
  source:
    remote:
      path: src/ServiceManagement/TrafficManager/TrafficManagerManagement/Generated/Models/DefinitionMonitorHTTPOptions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ExpectedStatusCode
    path: src/ServiceManagement/TrafficManager/TrafficManagerManagement/Generated/Models/DefinitionMonitorHTTPOptions.cs
    startLine: 38
  assemblies:
  - Microsoft.WindowsAzure.Management.TrafficManager
  namespace: Microsoft.WindowsAzure.Management.TrafficManager.Models
  summary: "\nOptional. Specifies the HTTP status code expected from a healthy\nendpoint. Endpoint is considered unhealthy otherwise.\n"
  example: []
  syntax:
    content: public int ExpectedStatusCode { get; set; }
    content.vb: Public Property ExpectedStatusCode As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.TrafficManager.Models.DefinitionMonitorHTTPOptions.RelativePath
  commentId: P:Microsoft.WindowsAzure.Management.TrafficManager.Models.DefinitionMonitorHTTPOptions.RelativePath
  id: RelativePath
  parent: Microsoft.WindowsAzure.Management.TrafficManager.Models.DefinitionMonitorHTTPOptions
  langs:
  - csharp
  - vb
  name: RelativePath
  nameWithType: DefinitionMonitorHTTPOptions.RelativePath
  fullName: Microsoft.WindowsAzure.Management.TrafficManager.Models.DefinitionMonitorHTTPOptions.RelativePath
  type: Property
  source:
    remote:
      path: src/ServiceManagement/TrafficManager/TrafficManagerManagement/Generated/Models/DefinitionMonitorHTTPOptions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RelativePath
    path: src/ServiceManagement/TrafficManager/TrafficManagerManagement/Generated/Models/DefinitionMonitorHTTPOptions.cs
    startLine: 51
  assemblies:
  - Microsoft.WindowsAzure.Management.TrafficManager
  namespace: Microsoft.WindowsAzure.Management.TrafficManager.Models
  summary: "\nOptional. Specifies the path relative to the endpoint domain name\nto probe for health state. For restrictions, see\nhttp://msdn.microsoft.com/en-us/library/hh758254.aspx.\n"
  example: []
  syntax:
    content: public string RelativePath { get; set; }
    content.vb: Public Property RelativePath As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.TrafficManager.Models.DefinitionMonitorHTTPOptions.Verb
  commentId: P:Microsoft.WindowsAzure.Management.TrafficManager.Models.DefinitionMonitorHTTPOptions.Verb
  id: Verb
  parent: Microsoft.WindowsAzure.Management.TrafficManager.Models.DefinitionMonitorHTTPOptions
  langs:
  - csharp
  - vb
  name: Verb
  nameWithType: DefinitionMonitorHTTPOptions.Verb
  fullName: Microsoft.WindowsAzure.Management.TrafficManager.Models.DefinitionMonitorHTTPOptions.Verb
  type: Property
  source:
    remote:
      path: src/ServiceManagement/TrafficManager/TrafficManagerManagement/Generated/Models/DefinitionMonitorHTTPOptions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Verb
    path: src/ServiceManagement/TrafficManager/TrafficManagerManagement/Generated/Models/DefinitionMonitorHTTPOptions.cs
    startLine: 63
  assemblies:
  - Microsoft.WindowsAzure.Management.TrafficManager
  namespace: Microsoft.WindowsAzure.Management.TrafficManager.Models
  summary: "\nOptional. Specifies the verb to use when making an HTTP request to\nmonitor endpoint health.\n"
  example: []
  syntax:
    content: public string Verb { get; set; }
    content.vb: Public Property Verb As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.TrafficManager.Models.DefinitionMonitorHTTPOptions.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.TrafficManager.Models.DefinitionMonitorHTTPOptions.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.TrafficManager.Models.DefinitionMonitorHTTPOptions
  langs:
  - csharp
  - vb
  name: DefinitionMonitorHTTPOptions()
  nameWithType: DefinitionMonitorHTTPOptions.DefinitionMonitorHTTPOptions()
  fullName: Microsoft.WindowsAzure.Management.TrafficManager.Models.DefinitionMonitorHTTPOptions.DefinitionMonitorHTTPOptions()
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/TrafficManager/TrafficManagerManagement/Generated/Models/DefinitionMonitorHTTPOptions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/TrafficManager/TrafficManagerManagement/Generated/Models/DefinitionMonitorHTTPOptions.cs
    startLine: 73
  assemblies:
  - Microsoft.WindowsAzure.Management.TrafficManager
  namespace: Microsoft.WindowsAzure.Management.TrafficManager.Models
  summary: "\nInitializes a new instance of the DefinitionMonitorHTTPOptions\nclass.\n"
  example: []
  syntax:
    content: public DefinitionMonitorHTTPOptions()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.TrafficManager.Models
  commentId: N:Microsoft.WindowsAzure.Management.TrafficManager.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.TrafficManager.Models
  nameWithType: Microsoft.WindowsAzure.Management.TrafficManager.Models
  fullName: Microsoft.WindowsAzure.Management.TrafficManager.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
