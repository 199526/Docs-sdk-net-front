### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.HDInsight.Logging.LogProviderExtensions
  commentId: T:Microsoft.WindowsAzure.Management.HDInsight.Logging.LogProviderExtensions
  id: LogProviderExtensions
  parent: Microsoft.WindowsAzure.Management.HDInsight.Logging
  children:
  - Microsoft.WindowsAzure.Management.HDInsight.Logging.LogProviderExtensions.LogException(Microsoft.WindowsAzure.Management.HDInsight.Logging.ILogProvider,System.Exception)
  - Microsoft.WindowsAzure.Management.HDInsight.Logging.LogProviderExtensions.LogMessage(Microsoft.WindowsAzure.Management.HDInsight.Logging.ILogProvider,System.String,Microsoft.WindowsAzure.Management.HDInsight.Logging.Severity,Microsoft.WindowsAzure.Management.HDInsight.Logging.Verbosity)
  langs:
  - csharp
  - vb
  name: LogProviderExtensions
  nameWithType: LogProviderExtensions
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Logging.LogProviderExtensions
  type: Class
  source:
    remote:
      path: src/ServiceManagement/HDInsight/Microsoft.WindowsAzure.Management.HDInsight.Framework.Core/Logging/LogProviderExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: LogProviderExtensions
    path: src/ServiceManagement/HDInsight/Microsoft.WindowsAzure.Management.HDInsight.Framework.Core/Logging/LogProviderExtensions.cs
    startLine: 27
  assemblies:
  - Microsoft.WindowsAzure.Management.HDInsight.Framework.Core
  namespace: Microsoft.WindowsAzure.Management.HDInsight.Logging
  summary: "\nExtends log provider with logging helper methods.\n"
  example: []
  syntax:
    content: public static class LogProviderExtensions
    content.vb: Public Module LogProviderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.WindowsAzure.Management.HDInsight.Logging.LogProviderExtensions.LogException(Microsoft.WindowsAzure.Management.HDInsight.Logging.ILogProvider,System.Exception)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Logging.LogProviderExtensions.LogException(Microsoft.WindowsAzure.Management.HDInsight.Logging.ILogProvider,System.Exception)
  id: LogException(Microsoft.WindowsAzure.Management.HDInsight.Logging.ILogProvider,System.Exception)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.HDInsight.Logging.LogProviderExtensions
  langs:
  - csharp
  - vb
  name: LogException(ILogProvider, Exception)
  nameWithType: LogProviderExtensions.LogException(ILogProvider, Exception)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Logging.LogProviderExtensions.LogException(Microsoft.WindowsAzure.Management.HDInsight.Logging.ILogProvider, System.Exception)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/HDInsight/Microsoft.WindowsAzure.Management.HDInsight.Framework.Core/Logging/LogProviderExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: LogException
    path: src/ServiceManagement/HDInsight/Microsoft.WindowsAzure.Management.HDInsight.Framework.Core/Logging/LogProviderExtensions.cs
    startLine: 47
  assemblies:
  - Microsoft.WindowsAzure.Management.HDInsight.Framework.Core
  namespace: Microsoft.WindowsAzure.Management.HDInsight.Logging
  summary: "\nLogs an exception to the logger.\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed", Justification = "This is required for the caller attributes to function properly. [tgs]")]

      public static void LogException(this ILogProvider provider, Exception exception)
    content.vb: >-
      <SuppressMessage("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed", Justification:="This is required for the caller attributes to function properly. [tgs]")>

      <ExtensionAttribute>

      Public Shared Sub LogException(provider As ILogProvider, exception As Exception)
    parameters:
    - id: provider
      type: Microsoft.WindowsAzure.Management.HDInsight.Logging.ILogProvider
      description: "\nThe log provider that contains the logger.\n"
    - id: exception
      type: System.Exception
      description: "\nThe Exception to log.\n"
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1026:DefaultParametersShouldNotBeUsed
    namedArguments:
    - name: Justification
      type: System.String
      value: This is required for the caller attributes to function properly. [tgs]
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.HDInsight.Logging.LogProviderExtensions.LogMessage(Microsoft.WindowsAzure.Management.HDInsight.Logging.ILogProvider,System.String,Microsoft.WindowsAzure.Management.HDInsight.Logging.Severity,Microsoft.WindowsAzure.Management.HDInsight.Logging.Verbosity)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Logging.LogProviderExtensions.LogMessage(Microsoft.WindowsAzure.Management.HDInsight.Logging.ILogProvider,System.String,Microsoft.WindowsAzure.Management.HDInsight.Logging.Severity,Microsoft.WindowsAzure.Management.HDInsight.Logging.Verbosity)
  id: LogMessage(Microsoft.WindowsAzure.Management.HDInsight.Logging.ILogProvider,System.String,Microsoft.WindowsAzure.Management.HDInsight.Logging.Severity,Microsoft.WindowsAzure.Management.HDInsight.Logging.Verbosity)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.HDInsight.Logging.LogProviderExtensions
  langs:
  - csharp
  - vb
  name: LogMessage(ILogProvider, String, Severity, Verbosity)
  nameWithType: LogProviderExtensions.LogMessage(ILogProvider, String, Severity, Verbosity)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Logging.LogProviderExtensions.LogMessage(Microsoft.WindowsAzure.Management.HDInsight.Logging.ILogProvider, System.String, Microsoft.WindowsAzure.Management.HDInsight.Logging.Severity, Microsoft.WindowsAzure.Management.HDInsight.Logging.Verbosity)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/HDInsight/Microsoft.WindowsAzure.Management.HDInsight.Framework.Core/Logging/LogProviderExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: LogMessage
    path: src/ServiceManagement/HDInsight/Microsoft.WindowsAzure.Management.HDInsight.Framework.Core/Logging/LogProviderExtensions.cs
    startLine: 92
  assemblies:
  - Microsoft.WindowsAzure.Management.HDInsight.Framework.Core
  namespace: Microsoft.WindowsAzure.Management.HDInsight.Logging
  summary: "\nLogs a message to the logger.\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed", Justification = "This is required for the caller attributes to function properly. [tgs]")]

      public static void LogMessage(this ILogProvider provider, string message, Severity severity, Verbosity verbosity)
    content.vb: >-
      <SuppressMessage("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed", Justification:="This is required for the caller attributes to function properly. [tgs]")>

      <ExtensionAttribute>

      Public Shared Sub LogMessage(provider As ILogProvider, message As String, severity As Severity, verbosity As Verbosity)
    parameters:
    - id: provider
      type: Microsoft.WindowsAzure.Management.HDInsight.Logging.ILogProvider
      description: "\nThe log provider that contains the logger.\n"
    - id: message
      type: System.String
      description: "\nThe message to log.\n"
    - id: severity
      type: Microsoft.WindowsAzure.Management.HDInsight.Logging.Severity
      description: "\nThe severity of the message to log.\n"
    - id: verbosity
      type: Microsoft.WindowsAzure.Management.HDInsight.Logging.Verbosity
      description: "\nThe verbosity of the message to log.\n"
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1026:DefaultParametersShouldNotBeUsed
    namedArguments:
    - name: Justification
      type: System.String
      value: This is required for the caller attributes to function properly. [tgs]
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.WindowsAzure.Management.HDInsight.Logging
  commentId: N:Microsoft.WindowsAzure.Management.HDInsight.Logging
  isExternal: false
  name: Microsoft.WindowsAzure.Management.HDInsight.Logging
  nameWithType: Microsoft.WindowsAzure.Management.HDInsight.Logging
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Logging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.Management.HDInsight.Logging.ILogProvider
  commentId: T:Microsoft.WindowsAzure.Management.HDInsight.Logging.ILogProvider
  parent: Microsoft.WindowsAzure.Management.HDInsight.Logging
  isExternal: false
  name: ILogProvider
  nameWithType: ILogProvider
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Logging.ILogProvider
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.Management.HDInsight.Logging.Severity
  commentId: T:Microsoft.WindowsAzure.Management.HDInsight.Logging.Severity
  parent: Microsoft.WindowsAzure.Management.HDInsight.Logging
  isExternal: false
  name: Severity
  nameWithType: Severity
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Logging.Severity
- uid: Microsoft.WindowsAzure.Management.HDInsight.Logging.Verbosity
  commentId: T:Microsoft.WindowsAzure.Management.HDInsight.Logging.Verbosity
  parent: Microsoft.WindowsAzure.Management.HDInsight.Logging
  isExternal: false
  name: Verbosity
  nameWithType: Verbosity
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Logging.Verbosity
