items:
- uid: Microsoft.Azure.Management.V2.Storage.StorageAccount.Update.IWithCustomDomain
  commentId: T:Microsoft.Azure.Management.V2.Storage.StorageAccount.Update.IWithCustomDomain
  id: IWithCustomDomain
  parent: Microsoft.Azure.Management.V2.Storage.StorageAccount.Update
  children:
  - Microsoft.Azure.Management.V2.Storage.StorageAccount.Update.IWithCustomDomain.WithCustomDomain(Microsoft.Azure.Management.Storage.Models.CustomDomain)
  - Microsoft.Azure.Management.V2.Storage.StorageAccount.Update.IWithCustomDomain.WithCustomDomain(System.String)
  - Microsoft.Azure.Management.V2.Storage.StorageAccount.Update.IWithCustomDomain.WithCustomDomain(System.String,System.Boolean)
  - Microsoft.Azure.Management.V2.Storage.StorageAccount.Update.IWithCustomDomain.WithoutCustomDomain
  langs:
  - csharp
  - vb
  name: IWithCustomDomain
  fullName: Microsoft.Azure.Management.V2.Storage.StorageAccount.Update.IWithCustomDomain
  type: Interface
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.V2.Storage/Domain/StorageAccount/Update/IUpdate.cs
      branch: 33fd3ea99c60bab0a8ccbb1cd87328cb5e82e49f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IWithCustomDomain
    path: src/ResourceManagement/Storage/Microsoft.Azure.Management.V2.Storage/Domain/StorageAccount/Update/IUpdate.cs
    startLine: 72
  assemblies:
  - Microsoft.Azure.Management.V2.Storage
  packages:
  - Microsoft.Azure.Management.V2.Storage(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Storage.StorageAccount.Update
  summary: "\nA storage account update stage allowing to change the parameters.\n"
  example: []
  syntax:
    content: public interface IWithCustomDomain
    content.vb: Public Interface IWithCustomDomain
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Azure.Management.V2.Storage.StorageAccount.Update.IWithCustomDomain.WithCustomDomain(Microsoft.Azure.Management.Storage.Models.CustomDomain)
  commentId: M:Microsoft.Azure.Management.V2.Storage.StorageAccount.Update.IWithCustomDomain.WithCustomDomain(Microsoft.Azure.Management.Storage.Models.CustomDomain)
  id: WithCustomDomain(Microsoft.Azure.Management.Storage.Models.CustomDomain)
  parent: Microsoft.Azure.Management.V2.Storage.StorageAccount.Update.IWithCustomDomain
  langs:
  - csharp
  - vb
  name: WithCustomDomain(CustomDomain)
  fullName: Microsoft.Azure.Management.V2.Storage.StorageAccount.Update.IWithCustomDomain.WithCustomDomain(Microsoft.Azure.Management.Storage.Models.CustomDomain)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.V2.Storage/Domain/StorageAccount/Update/IUpdate.cs
      branch: 33fd3ea99c60bab0a8ccbb1cd87328cb5e82e49f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithCustomDomain
    path: src/ResourceManagement/Storage/Microsoft.Azure.Management.V2.Storage/Domain/StorageAccount/Update/IUpdate.cs
    startLine: 79
  assemblies:
  - Microsoft.Azure.Management.V2.Storage
  packages:
  - Microsoft.Azure.Management.V2.Storage(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Storage.StorageAccount.Update
  summary: "\nSpecifies the user domain assigned to the storage account.\n"
  example: []
  syntax:
    content: IUpdate WithCustomDomain(CustomDomain customDomain)
    content.vb: Function WithCustomDomain(customDomain As CustomDomain) As IUpdate
    parameters:
    - id: customDomain
      type: Microsoft.Azure.Management.Storage.Models.CustomDomain
      description: customDomain the user domain assigned to the storage account
    return:
      type: Microsoft.Azure.Management.V2.Storage.StorageAccount.Update.IUpdate
      description: the next stage of storage account update
- uid: Microsoft.Azure.Management.V2.Storage.StorageAccount.Update.IWithCustomDomain.WithCustomDomain(System.String)
  commentId: M:Microsoft.Azure.Management.V2.Storage.StorageAccount.Update.IWithCustomDomain.WithCustomDomain(System.String)
  id: WithCustomDomain(System.String)
  parent: Microsoft.Azure.Management.V2.Storage.StorageAccount.Update.IWithCustomDomain
  langs:
  - csharp
  - vb
  name: WithCustomDomain(String)
  fullName: Microsoft.Azure.Management.V2.Storage.StorageAccount.Update.IWithCustomDomain.WithCustomDomain(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.V2.Storage/Domain/StorageAccount/Update/IUpdate.cs
      branch: 33fd3ea99c60bab0a8ccbb1cd87328cb5e82e49f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithCustomDomain
    path: src/ResourceManagement/Storage/Microsoft.Azure.Management.V2.Storage/Domain/StorageAccount/Update/IUpdate.cs
    startLine: 86
  assemblies:
  - Microsoft.Azure.Management.V2.Storage
  packages:
  - Microsoft.Azure.Management.V2.Storage(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Storage.StorageAccount.Update
  summary: "\nSpecifies the user domain assigned to the storage account.\n"
  example: []
  syntax:
    content: IUpdate WithCustomDomain(string name)
    content.vb: Function WithCustomDomain(name As String) As IUpdate
    parameters:
    - id: name
      type: System.String
      description: name the custom domain name, which is the CNAME source
    return:
      type: Microsoft.Azure.Management.V2.Storage.StorageAccount.Update.IUpdate
      description: the next stage of storage account update
- uid: Microsoft.Azure.Management.V2.Storage.StorageAccount.Update.IWithCustomDomain.WithCustomDomain(System.String,System.Boolean)
  commentId: M:Microsoft.Azure.Management.V2.Storage.StorageAccount.Update.IWithCustomDomain.WithCustomDomain(System.String,System.Boolean)
  id: WithCustomDomain(System.String,System.Boolean)
  parent: Microsoft.Azure.Management.V2.Storage.StorageAccount.Update.IWithCustomDomain
  langs:
  - csharp
  - vb
  name: WithCustomDomain(String, Boolean)
  fullName: Microsoft.Azure.Management.V2.Storage.StorageAccount.Update.IWithCustomDomain.WithCustomDomain(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.V2.Storage/Domain/StorageAccount/Update/IUpdate.cs
      branch: 33fd3ea99c60bab0a8ccbb1cd87328cb5e82e49f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithCustomDomain
    path: src/ResourceManagement/Storage/Microsoft.Azure.Management.V2.Storage/Domain/StorageAccount/Update/IUpdate.cs
    startLine: 94
  assemblies:
  - Microsoft.Azure.Management.V2.Storage
  packages:
  - Microsoft.Azure.Management.V2.Storage(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Storage.StorageAccount.Update
  summary: "\nSpecifies the user domain assigned to the storage account.\n"
  example: []
  syntax:
    content: IUpdate WithCustomDomain(string name, bool useSubDomain)
    content.vb: Function WithCustomDomain(name As String, useSubDomain As Boolean) As IUpdate
    parameters:
    - id: name
      type: System.String
      description: name the custom domain name, which is the CNAME source
    - id: useSubDomain
      type: System.Boolean
      description: useSubDomain whether indirect CName validation is enabled
    return:
      type: Microsoft.Azure.Management.V2.Storage.StorageAccount.Update.IUpdate
      description: the next stage of storage account update
- uid: Microsoft.Azure.Management.V2.Storage.StorageAccount.Update.IWithCustomDomain.WithoutCustomDomain
  commentId: M:Microsoft.Azure.Management.V2.Storage.StorageAccount.Update.IWithCustomDomain.WithoutCustomDomain
  id: WithoutCustomDomain
  parent: Microsoft.Azure.Management.V2.Storage.StorageAccount.Update.IWithCustomDomain
  langs:
  - csharp
  - vb
  name: WithoutCustomDomain()
  fullName: Microsoft.Azure.Management.V2.Storage.StorageAccount.Update.IWithCustomDomain.WithoutCustomDomain()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.V2.Storage/Domain/StorageAccount/Update/IUpdate.cs
      branch: 33fd3ea99c60bab0a8ccbb1cd87328cb5e82e49f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithoutCustomDomain
    path: src/ResourceManagement/Storage/Microsoft.Azure.Management.V2.Storage/Domain/StorageAccount/Update/IUpdate.cs
    startLine: 100
  assemblies:
  - Microsoft.Azure.Management.V2.Storage
  packages:
  - Microsoft.Azure.Management.V2.Storage(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Storage.StorageAccount.Update
  summary: "\nClears the existing user domain assigned to the storage account.\n"
  example: []
  syntax:
    content: IUpdate WithoutCustomDomain()
    content.vb: Function WithoutCustomDomain As IUpdate
    return:
      type: Microsoft.Azure.Management.V2.Storage.StorageAccount.Update.IUpdate
      description: the next stage of storage account update
references:
- uid: Microsoft.Azure.Management.V2.Storage.StorageAccount.Update
  isExternal: false
  name: Microsoft.Azure.Management.V2.Storage.StorageAccount.Update
  fullName: Microsoft.Azure.Management.V2.Storage.StorageAccount.Update
- uid: Microsoft.Azure.Management.Storage.Models.CustomDomain
  parent: Microsoft.Azure.Management.Storage.Models
  isExternal: false
  name: CustomDomain
  fullName: Microsoft.Azure.Management.Storage.Models.CustomDomain
- uid: Microsoft.Azure.Management.V2.Storage.StorageAccount.Update.IUpdate
  parent: Microsoft.Azure.Management.V2.Storage.StorageAccount.Update
  isExternal: false
  name: IUpdate
  fullName: Microsoft.Azure.Management.V2.Storage.StorageAccount.Update.IUpdate
- uid: Microsoft.Azure.Management.Storage.Models
  isExternal: false
  name: Microsoft.Azure.Management.Storage.Models
  fullName: Microsoft.Azure.Management.Storage.Models
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
