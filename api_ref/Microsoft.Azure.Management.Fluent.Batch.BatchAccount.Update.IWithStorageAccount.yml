items:
- uid: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount
  commentId: T:Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount
  id: IWithStorageAccount
  parent: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update
  children:
  - Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount.WithExistingStorageAccount(IStorageAccount)
  - Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount.WithNewStorageAccount(ICreatable{Microsoft.Azure.Management.V2.Storage.IStorageAccount})
  - Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount.WithNewStorageAccount(System.String)
  - Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount.WithoutStorageAccount
  langs:
  - csharp
  - vb
  name: IWithStorageAccount
  fullName: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount
  type: Interface
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/BatchAccount/Update/IUpdate.cs
      branch: 33fd3ea99c60bab0a8ccbb1cd87328cb5e82e49f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IWithStorageAccount
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/BatchAccount/Update/IUpdate.cs
    startLine: 16
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update
  summary: "\nThe stage of the batch account update definition allowing to specify storage account.\n"
  example: []
  syntax:
    content: public interface IWithStorageAccount
    content.vb: Public Interface IWithStorageAccount
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount.WithExistingStorageAccount(IStorageAccount)
  commentId: M:Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount.WithExistingStorageAccount(IStorageAccount)
  id: WithExistingStorageAccount(IStorageAccount)
  parent: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount
  langs:
  - csharp
  - vb
  name: WithExistingStorageAccount(IStorageAccount)
  fullName: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount.WithExistingStorageAccount(IStorageAccount)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/BatchAccount/Update/IUpdate.cs
      branch: 33fd3ea99c60bab0a8ccbb1cd87328cb5e82e49f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithExistingStorageAccount
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/BatchAccount/Update/IUpdate.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update
  summary: "\nSpecifies that an existing storage account to be attached with the batch account.\n"
  example: []
  syntax:
    content: IUpdate WithExistingStorageAccount(IStorageAccount storageAccount)
    content.vb: Function WithExistingStorageAccount(storageAccount As IStorageAccount) As IUpdate
    parameters:
    - id: storageAccount
      type: IStorageAccount
      description: storageAccount existing storage account to be used
    return:
      type: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IUpdate
      description: the stage representing updatable batch account definition
- uid: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount.WithNewStorageAccount(ICreatable{Microsoft.Azure.Management.V2.Storage.IStorageAccount})
  commentId: M:Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount.WithNewStorageAccount(ICreatable{Microsoft.Azure.Management.V2.Storage.IStorageAccount})
  id: WithNewStorageAccount(ICreatable{Microsoft.Azure.Management.V2.Storage.IStorageAccount})
  parent: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount
  langs:
  - csharp
  - vb
  name: WithNewStorageAccount(ICreatable<V2.Storage.IStorageAccount>)
  fullName: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount.WithNewStorageAccount(ICreatable<Microsoft.Azure.Management.V2.Storage.IStorageAccount>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/BatchAccount/Update/IUpdate.cs
      branch: 33fd3ea99c60bab0a8ccbb1cd87328cb5e82e49f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithNewStorageAccount
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/BatchAccount/Update/IUpdate.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update
  summary: "\nSpecifies that a storage account to be attached with the batch account.\n"
  example: []
  syntax:
    content: IUpdate WithNewStorageAccount(ICreatable<V2.Storage.IStorageAccount> storageAccountCreatable)
    content.vb: Function WithNewStorageAccount(storageAccountCreatable As ICreatable(Of V2.Storage.IStorageAccount)) As IUpdate
    parameters:
    - id: storageAccountCreatable
      type: ICreatable{Microsoft.Azure.Management.V2.Storage.IStorageAccount}
      description: storageAccountCreatable storage account to be created along with and used in batch
    return:
      type: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IUpdate
      description: the stage representing updatable batch account definition
  fullName.vb: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount.WithNewStorageAccount(ICreatable(Of Microsoft.Azure.Management.V2.Storage.IStorageAccount))
  name.vb: WithNewStorageAccount(ICreatable(Of V2.Storage.IStorageAccount))
- uid: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount.WithNewStorageAccount(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount.WithNewStorageAccount(System.String)
  id: WithNewStorageAccount(System.String)
  parent: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount
  langs:
  - csharp
  - vb
  name: WithNewStorageAccount(String)
  fullName: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount.WithNewStorageAccount(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/BatchAccount/Update/IUpdate.cs
      branch: 33fd3ea99c60bab0a8ccbb1cd87328cb5e82e49f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithNewStorageAccount
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/BatchAccount/Update/IUpdate.cs
    startLine: 37
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update
  summary: "\nSpecifies that an existing storage account to be attached with the batch account.\n"
  example: []
  syntax:
    content: IUpdate WithNewStorageAccount(string storageAccountName)
    content.vb: Function WithNewStorageAccount(storageAccountName As String) As IUpdate
    parameters:
    - id: storageAccountName
      type: System.String
      description: storageAccountName name of new storage account to be created and used in batch account
    return:
      type: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IUpdate
      description: the stage representing updatable batch account definition
- uid: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount.WithoutStorageAccount
  commentId: M:Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount.WithoutStorageAccount
  id: WithoutStorageAccount
  parent: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount
  langs:
  - csharp
  - vb
  name: WithoutStorageAccount()
  fullName: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IWithStorageAccount.WithoutStorageAccount()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/BatchAccount/Update/IUpdate.cs
      branch: 33fd3ea99c60bab0a8ccbb1cd87328cb5e82e49f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithoutStorageAccount
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/BatchAccount/Update/IUpdate.cs
    startLine: 43
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update
  summary: "\nSpecifies that storage account should be removed from the batch account.\n"
  example: []
  syntax:
    content: IUpdate WithoutStorageAccount()
    content.vb: Function WithoutStorageAccount As IUpdate
    return:
      type: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IUpdate
      description: the stage representing updatable batch account definition
references:
- uid: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update
  fullName: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update
- uid: IStorageAccount
  isExternal: true
  name: IStorageAccount
  fullName: IStorageAccount
- uid: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IUpdate
  parent: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update
  isExternal: false
  name: IUpdate
  fullName: Microsoft.Azure.Management.Fluent.Batch.BatchAccount.Update.IUpdate
- uid: ICreatable{Microsoft.Azure.Management.V2.Storage.IStorageAccount}
  definition: ICreatable`1
  name: ICreatable<V2.Storage.IStorageAccount>
  fullName: ICreatable<Microsoft.Azure.Management.V2.Storage.IStorageAccount>
  fullname.vb: ICreatable(Of Microsoft.Azure.Management.V2.Storage.IStorageAccount)
  name.vb: ICreatable(Of V2.Storage.IStorageAccount)
  spec.csharp:
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.V2.Storage.IStorageAccount
    name: V2.Storage.IStorageAccount
    fullName: Microsoft.Azure.Management.V2.Storage.IStorageAccount
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.V2.Storage.IStorageAccount
    name: V2.Storage.IStorageAccount
    fullName: Microsoft.Azure.Management.V2.Storage.IStorageAccount
    isExternal: true
  - name: )
    fullName: )
- uid: ICreatable`1
  isExternal: true
  name: ICreatable<>
  fullName: ICreatable<>
  fullname.vb: ICreatable(Of )
  name.vb: ICreatable(Of )
  spec.csharp:
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System
  isExternal: false
  name: System
  fullName: System
