### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters
  commentId: T:Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters
  id: WebHostingPlanGetHistoricalUsageMetricsParameters
  parent: Microsoft.WindowsAzure.Management.WebSites.Models
  children:
  - Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters.#ctor
  - Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters.EndTime
  - Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters.IncludeInstanceBreakdown
  - Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters.MetricNames
  - Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters.StartTime
  - Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters.TimeGrain
  langs:
  - csharp
  - vb
  name: WebHostingPlanGetHistoricalUsageMetricsParameters
  nameWithType: WebHostingPlanGetHistoricalUsageMetricsParameters
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters
  type: Class
  source:
    remote:
      path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/WebHostingPlanGetHistoricalUsageMetricsParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WebHostingPlanGetHistoricalUsageMetricsParameters
    path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/WebHostingPlanGetHistoricalUsageMetricsParameters.cs
    startLine: 32
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites.Models
  summary: "\nParameters supplied to the Get Historical Usage Metrics Web hosting\nplan operation.\n"
  example: []
  syntax:
    content: public class WebHostingPlanGetHistoricalUsageMetricsParameters
    content.vb: Public Class WebHostingPlanGetHistoricalUsageMetricsParameters
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters.EndTime
  commentId: P:Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters.EndTime
  id: EndTime
  parent: Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters
  langs:
  - csharp
  - vb
  name: EndTime
  nameWithType: WebHostingPlanGetHistoricalUsageMetricsParameters.EndTime
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters.EndTime
  type: Property
  source:
    remote:
      path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/WebHostingPlanGetHistoricalUsageMetricsParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EndTime
    path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/WebHostingPlanGetHistoricalUsageMetricsParameters.cs
    startLine: 40
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites.Models
  summary: "\nOptional. The ending time of the metrics to return. If this\nparameter is not specified, the current time is used.\n"
  example: []
  syntax:
    content: public DateTime? EndTime { get; set; }
    content.vb: Public Property EndTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters.IncludeInstanceBreakdown
  commentId: P:Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters.IncludeInstanceBreakdown
  id: IncludeInstanceBreakdown
  parent: Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters
  langs:
  - csharp
  - vb
  name: IncludeInstanceBreakdown
  nameWithType: WebHostingPlanGetHistoricalUsageMetricsParameters.IncludeInstanceBreakdown
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters.IncludeInstanceBreakdown
  type: Property
  source:
    remote:
      path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/WebHostingPlanGetHistoricalUsageMetricsParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IncludeInstanceBreakdown
    path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/WebHostingPlanGetHistoricalUsageMetricsParameters.cs
    startLine: 53
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites.Models
  summary: "\nOptional. Flag which specifies if the metrics for each machine\ninstance should be included. For sites that run on more than one\nmachine this could be useful to identify a bad machine.\n"
  example: []
  syntax:
    content: public bool IncludeInstanceBreakdown { get; set; }
    content.vb: Public Property IncludeInstanceBreakdown As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters.MetricNames
  commentId: P:Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters.MetricNames
  id: MetricNames
  parent: Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters
  langs:
  - csharp
  - vb
  name: MetricNames
  nameWithType: WebHostingPlanGetHistoricalUsageMetricsParameters.MetricNames
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters.MetricNames
  type: Property
  source:
    remote:
      path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/WebHostingPlanGetHistoricalUsageMetricsParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MetricNames
    path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/WebHostingPlanGetHistoricalUsageMetricsParameters.cs
    startLine: 66
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites.Models
  summary: "\nOptional. Specifies a comma-separated list of the names of the\nmetrics to return. If the names parameter is not specified, then\nall available metrics are returned.\n"
  example: []
  syntax:
    content: public IList<string> MetricNames { get; set; }
    content.vb: Public Property MetricNames As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters.StartTime
  commentId: P:Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters.StartTime
  id: StartTime
  parent: Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters
  langs:
  - csharp
  - vb
  name: StartTime
  nameWithType: WebHostingPlanGetHistoricalUsageMetricsParameters.StartTime
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters.StartTime
  type: Property
  source:
    remote:
      path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/WebHostingPlanGetHistoricalUsageMetricsParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StartTime
    path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/WebHostingPlanGetHistoricalUsageMetricsParameters.cs
    startLine: 79
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites.Models
  summary: "\nOptional. The starting time of the metrics to return. If this\nparameter is not specified, the beginning of the current hour is\nused.\n"
  example: []
  syntax:
    content: public DateTime? StartTime { get; set; }
    content.vb: Public Property StartTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters.TimeGrain
  commentId: P:Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters.TimeGrain
  id: TimeGrain
  parent: Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters
  langs:
  - csharp
  - vb
  name: TimeGrain
  nameWithType: WebHostingPlanGetHistoricalUsageMetricsParameters.TimeGrain
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters.TimeGrain
  type: Property
  source:
    remote:
      path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/WebHostingPlanGetHistoricalUsageMetricsParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TimeGrain
    path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/WebHostingPlanGetHistoricalUsageMetricsParameters.cs
    startLine: 91
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites.Models
  summary: "\nOptional. The grain at which the metrics are returned. Supported\nvalues are PT1M (minute), PT1H (hour), P1D (day).\n"
  example: []
  syntax:
    content: public string TimeGrain { get; set; }
    content.vb: Public Property TimeGrain As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters
  langs:
  - csharp
  - vb
  name: WebHostingPlanGetHistoricalUsageMetricsParameters()
  nameWithType: WebHostingPlanGetHistoricalUsageMetricsParameters.WebHostingPlanGetHistoricalUsageMetricsParameters()
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters.WebHostingPlanGetHistoricalUsageMetricsParameters()
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/WebHostingPlanGetHistoricalUsageMetricsParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/WebHostingPlanGetHistoricalUsageMetricsParameters.cs
    startLine: 101
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the\nWebHostingPlanGetHistoricalUsageMetricsParameters class.\n"
  example: []
  syntax:
    content: public WebHostingPlanGetHistoricalUsageMetricsParameters()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.WebSites.Models
  commentId: N:Microsoft.WindowsAzure.Management.WebSites.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.WebSites.Models
  nameWithType: Microsoft.WindowsAzure.Management.WebSites.Models
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
