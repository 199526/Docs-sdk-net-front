### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitPeeringArpInfoOperationsExtensions
  commentId: T:Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitPeeringArpInfoOperationsExtensions
  id: DedicatedCircuitPeeringArpInfoOperationsExtensions
  parent: Microsoft.WindowsAzure.Management.ExpressRoute
  children:
  - Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitPeeringArpInfoOperationsExtensions.BeginGet(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringArpInfoOperations,System.String,Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType,Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath)
  - Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitPeeringArpInfoOperationsExtensions.BeginGetAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringArpInfoOperations,System.String,Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType,Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath)
  - Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitPeeringArpInfoOperationsExtensions.Get(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringArpInfoOperations,System.String,Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType,Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath)
  - Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitPeeringArpInfoOperationsExtensions.GetAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringArpInfoOperations,System.String,Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType,Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath)
  - Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitPeeringArpInfoOperationsExtensions.GetOperationStatus(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringArpInfoOperations,System.String)
  - Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitPeeringArpInfoOperationsExtensions.GetOperationStatusAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringArpInfoOperations,System.String)
  langs:
  - csharp
  - vb
  name: DedicatedCircuitPeeringArpInfoOperationsExtensions
  nameWithType: DedicatedCircuitPeeringArpInfoOperationsExtensions
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitPeeringArpInfoOperationsExtensions
  type: Class
  source:
    remote:
      path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/DedicatedCircuitPeeringArpInfoOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: DedicatedCircuitPeeringArpInfoOperationsExtensions
    path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/DedicatedCircuitPeeringArpInfoOperationsExtensions.cs
    startLine: 39
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute
  summary: "\nThe Express Route API provides programmatic access to the functionality\nneeded by the customer to set up Dedicated Circuits and Dedicated\nCircuit Links. The Express Route Customer API is a REST API. All API\noperations are performed over SSL and mutually authenticated using\nX.509 v3 certificates.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/ee460799.aspx for\nmore information)\n"
  example: []
  syntax:
    content: public static class DedicatedCircuitPeeringArpInfoOperationsExtensions
    content.vb: Public Module DedicatedCircuitPeeringArpInfoOperationsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitPeeringArpInfoOperationsExtensions.BeginGet(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringArpInfoOperations,System.String,Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType,Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath)
  commentId: M:Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitPeeringArpInfoOperationsExtensions.BeginGet(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringArpInfoOperations,System.String,Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType,Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath)
  id: BeginGet(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringArpInfoOperations,System.String,Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType,Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitPeeringArpInfoOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginGet(IDedicatedCircuitPeeringArpInfoOperations, String, BgpPeeringAccessType, DevicePath)
  nameWithType: DedicatedCircuitPeeringArpInfoOperationsExtensions.BeginGet(IDedicatedCircuitPeeringArpInfoOperations, String, BgpPeeringAccessType, DevicePath)
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitPeeringArpInfoOperationsExtensions.BeginGet(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringArpInfoOperations, System.String, Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType, Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/DedicatedCircuitPeeringArpInfoOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: BeginGet
    path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/DedicatedCircuitPeeringArpInfoOperationsExtensions.cs
    startLine: 61
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute
  summary: "\nThe Get DedicatedCircuitPeeringArpInfo operation retrives ARP Table.\n"
  example: []
  syntax:
    content: public static ExpressRouteOperationResponse BeginGet(this IDedicatedCircuitPeeringArpInfoOperations operations, string serviceKey, BgpPeeringAccessType accessType, DevicePath devicePath)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginGet(operations As IDedicatedCircuitPeeringArpInfoOperations, serviceKey As String, accessType As BgpPeeringAccessType, devicePath As DevicePath) As ExpressRouteOperationResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringArpInfoOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringArpInfoOperations.\n"
    - id: serviceKey
      type: System.String
      description: "\nRequired. The service key representing the circuit.\n"
    - id: accessType
      type: Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType
      description: "\nRequired. Whether the peering is private or public or microsoft.\n"
    - id: devicePath
      type: Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath
      description: "\nRequired. Whether the device is primary or secondary.\n"
    return:
      type: Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitPeeringArpInfoOperationsExtensions.BeginGetAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringArpInfoOperations,System.String,Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType,Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath)
  commentId: M:Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitPeeringArpInfoOperationsExtensions.BeginGetAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringArpInfoOperations,System.String,Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType,Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath)
  id: BeginGetAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringArpInfoOperations,System.String,Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType,Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitPeeringArpInfoOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginGetAsync(IDedicatedCircuitPeeringArpInfoOperations, String, BgpPeeringAccessType, DevicePath)
  nameWithType: DedicatedCircuitPeeringArpInfoOperationsExtensions.BeginGetAsync(IDedicatedCircuitPeeringArpInfoOperations, String, BgpPeeringAccessType, DevicePath)
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitPeeringArpInfoOperationsExtensions.BeginGetAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringArpInfoOperations, System.String, Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType, Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/DedicatedCircuitPeeringArpInfoOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: BeginGetAsync
    path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/DedicatedCircuitPeeringArpInfoOperationsExtensions.cs
    startLine: 90
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute
  summary: "\nThe Get DedicatedCircuitPeeringArpInfo operation retrives ARP Table.\n"
  example: []
  syntax:
    content: public static Task<ExpressRouteOperationResponse> BeginGetAsync(this IDedicatedCircuitPeeringArpInfoOperations operations, string serviceKey, BgpPeeringAccessType accessType, DevicePath devicePath)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginGetAsync(operations As IDedicatedCircuitPeeringArpInfoOperations, serviceKey As String, accessType As BgpPeeringAccessType, devicePath As DevicePath) As Task(Of ExpressRouteOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringArpInfoOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringArpInfoOperations.\n"
    - id: serviceKey
      type: System.String
      description: "\nRequired. The service key representing the circuit.\n"
    - id: accessType
      type: Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType
      description: "\nRequired. Whether the peering is private or public or microsoft.\n"
    - id: devicePath
      type: Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath
      description: "\nRequired. Whether the device is primary or secondary.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitPeeringArpInfoOperationsExtensions.Get(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringArpInfoOperations,System.String,Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType,Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath)
  commentId: M:Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitPeeringArpInfoOperationsExtensions.Get(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringArpInfoOperations,System.String,Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType,Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath)
  id: Get(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringArpInfoOperations,System.String,Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType,Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitPeeringArpInfoOperationsExtensions
  langs:
  - csharp
  - vb
  name: Get(IDedicatedCircuitPeeringArpInfoOperations, String, BgpPeeringAccessType, DevicePath)
  nameWithType: DedicatedCircuitPeeringArpInfoOperationsExtensions.Get(IDedicatedCircuitPeeringArpInfoOperations, String, BgpPeeringAccessType, DevicePath)
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitPeeringArpInfoOperationsExtensions.Get(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringArpInfoOperations, System.String, Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType, Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/DedicatedCircuitPeeringArpInfoOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Get
    path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/DedicatedCircuitPeeringArpInfoOperationsExtensions.cs
    startLine: 122
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute
  summary: "\nThe Get DedicatedCircuitPeeringArpInfo operation retrives ARP Table.\n"
  example: []
  syntax:
    content: public static ExpressRouteOperationStatusResponse Get(this IDedicatedCircuitPeeringArpInfoOperations operations, string serviceKey, BgpPeeringAccessType accessType, DevicePath devicePath)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Get(operations As IDedicatedCircuitPeeringArpInfoOperations, serviceKey As String, accessType As BgpPeeringAccessType, devicePath As DevicePath) As ExpressRouteOperationStatusResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringArpInfoOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringArpInfoOperations.\n"
    - id: serviceKey
      type: System.String
      description: "\nRequired. The service key representing the circuit.\n"
    - id: accessType
      type: Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType
      description: "\nRequired. Whether the peering is private or public or microsoft.\n"
    - id: devicePath
      type: Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath
      description: "\nRequired. Whether the device is primary or secondary.\n"
    return:
      type: Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself.  If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request.  If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request, and also includes error\ninformation regarding the failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitPeeringArpInfoOperationsExtensions.GetAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringArpInfoOperations,System.String,Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType,Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath)
  commentId: M:Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitPeeringArpInfoOperationsExtensions.GetAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringArpInfoOperations,System.String,Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType,Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath)
  id: GetAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringArpInfoOperations,System.String,Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType,Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitPeeringArpInfoOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetAsync(IDedicatedCircuitPeeringArpInfoOperations, String, BgpPeeringAccessType, DevicePath)
  nameWithType: DedicatedCircuitPeeringArpInfoOperationsExtensions.GetAsync(IDedicatedCircuitPeeringArpInfoOperations, String, BgpPeeringAccessType, DevicePath)
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitPeeringArpInfoOperationsExtensions.GetAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringArpInfoOperations, System.String, Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType, Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/DedicatedCircuitPeeringArpInfoOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetAsync
    path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/DedicatedCircuitPeeringArpInfoOperationsExtensions.cs
    startLine: 158
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute
  summary: "\nThe Get DedicatedCircuitPeeringArpInfo operation retrives ARP Table.\n"
  example: []
  syntax:
    content: public static Task<ExpressRouteOperationStatusResponse> GetAsync(this IDedicatedCircuitPeeringArpInfoOperations operations, string serviceKey, BgpPeeringAccessType accessType, DevicePath devicePath)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAsync(operations As IDedicatedCircuitPeeringArpInfoOperations, serviceKey As String, accessType As BgpPeeringAccessType, devicePath As DevicePath) As Task(Of ExpressRouteOperationStatusResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringArpInfoOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringArpInfoOperations.\n"
    - id: serviceKey
      type: System.String
      description: "\nRequired. The service key representing the circuit.\n"
    - id: accessType
      type: Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType
      description: "\nRequired. Whether the peering is private or public or microsoft.\n"
    - id: devicePath
      type: Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath
      description: "\nRequired. Whether the device is primary or secondary.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse}
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself.  If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request.  If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request, and also includes error\ninformation regarding the failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitPeeringArpInfoOperationsExtensions.GetOperationStatus(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringArpInfoOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitPeeringArpInfoOperationsExtensions.GetOperationStatus(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringArpInfoOperations,System.String)
  id: GetOperationStatus(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringArpInfoOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitPeeringArpInfoOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetOperationStatus(IDedicatedCircuitPeeringArpInfoOperations, String)
  nameWithType: DedicatedCircuitPeeringArpInfoOperationsExtensions.GetOperationStatus(IDedicatedCircuitPeeringArpInfoOperations, String)
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitPeeringArpInfoOperationsExtensions.GetOperationStatus(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringArpInfoOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/DedicatedCircuitPeeringArpInfoOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetOperationStatus
    path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/DedicatedCircuitPeeringArpInfoOperationsExtensions.cs
    startLine: 187
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute
  summary: "\nThe Get Express Route operation status gets information on the\nstatus of Express Route operations in Windows Azure.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/jj154112.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static ExpressRouteOperationStatusResponse GetOperationStatus(this IDedicatedCircuitPeeringArpInfoOperations operations, string operationId)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetOperationStatus(operations As IDedicatedCircuitPeeringArpInfoOperations, operationId As String) As ExpressRouteOperationStatusResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringArpInfoOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringArpInfoOperations.\n"
    - id: operationId
      type: System.String
      description: "\nRequired. The id  of the operation.\n"
    return:
      type: Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself.  If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request.  If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request, and also includes error\ninformation regarding the failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitPeeringArpInfoOperationsExtensions.GetOperationStatusAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringArpInfoOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitPeeringArpInfoOperationsExtensions.GetOperationStatusAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringArpInfoOperations,System.String)
  id: GetOperationStatusAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringArpInfoOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitPeeringArpInfoOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetOperationStatusAsync(IDedicatedCircuitPeeringArpInfoOperations, String)
  nameWithType: DedicatedCircuitPeeringArpInfoOperationsExtensions.GetOperationStatusAsync(IDedicatedCircuitPeeringArpInfoOperations, String)
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.DedicatedCircuitPeeringArpInfoOperationsExtensions.GetOperationStatusAsync(Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringArpInfoOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/DedicatedCircuitPeeringArpInfoOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetOperationStatusAsync
    path: src/ServiceManagement/ExpressRoute/ExpressRouteManagement/Generated/DedicatedCircuitPeeringArpInfoOperationsExtensions.cs
    startLine: 220
  assemblies:
  - Microsoft.WindowsAzure.Management.ExpressRoute
  namespace: Microsoft.WindowsAzure.Management.ExpressRoute
  summary: "\nThe Get Express Route operation status gets information on the\nstatus of Express Route operations in Windows Azure.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/jj154112.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static Task<ExpressRouteOperationStatusResponse> GetOperationStatusAsync(this IDedicatedCircuitPeeringArpInfoOperations operations, string operationId)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetOperationStatusAsync(operations As IDedicatedCircuitPeeringArpInfoOperations, operationId As String) As Task(Of ExpressRouteOperationStatusResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringArpInfoOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringArpInfoOperations.\n"
    - id: operationId
      type: System.String
      description: "\nRequired. The id  of the operation.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse}
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself.  If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request.  If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request, and also includes error\ninformation regarding the failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.WindowsAzure.Management.ExpressRoute
  commentId: N:Microsoft.WindowsAzure.Management.ExpressRoute
  isExternal: false
  name: Microsoft.WindowsAzure.Management.ExpressRoute
  nameWithType: Microsoft.WindowsAzure.Management.ExpressRoute
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringArpInfoOperations
  commentId: T:Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringArpInfoOperations
  parent: Microsoft.WindowsAzure.Management.ExpressRoute
  isExternal: false
  name: IDedicatedCircuitPeeringArpInfoOperations
  nameWithType: IDedicatedCircuitPeeringArpInfoOperations
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.IDedicatedCircuitPeeringArpInfoOperations
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType
  commentId: T:Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.Models
  isExternal: false
  name: BgpPeeringAccessType
  nameWithType: BgpPeeringAccessType
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models.BgpPeeringAccessType
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath
  commentId: T:Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.Models
  isExternal: false
  name: DevicePath
  nameWithType: DevicePath
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models.DevicePath
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse
  commentId: T:Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.Models
  isExternal: false
  name: ExpressRouteOperationResponse
  nameWithType: ExpressRouteOperationResponse
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models
  commentId: N:Microsoft.WindowsAzure.Management.ExpressRoute.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.ExpressRoute.Models
  nameWithType: Microsoft.WindowsAzure.Management.ExpressRoute.Models
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models
- uid: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse}
  commentId: T:System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ExpressRouteOperationResponse>
  nameWithType: Task<ExpressRouteOperationResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse>
  nameWithType.vb: Task(Of ExpressRouteOperationResponse)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse)
  name.vb: Task(Of ExpressRouteOperationResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse
    name: ExpressRouteOperationResponse
    nameWithType: ExpressRouteOperationResponse
    fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse
    name: ExpressRouteOperationResponse
    nameWithType: ExpressRouteOperationResponse
    fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse
  commentId: T:Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse
  parent: Microsoft.WindowsAzure.Management.ExpressRoute.Models
  isExternal: false
  name: ExpressRouteOperationStatusResponse
  nameWithType: ExpressRouteOperationStatusResponse
  fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse
- uid: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse}
  commentId: T:System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ExpressRouteOperationStatusResponse>
  nameWithType: Task<ExpressRouteOperationStatusResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse>
  nameWithType.vb: Task(Of ExpressRouteOperationStatusResponse)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse)
  name.vb: Task(Of ExpressRouteOperationStatusResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse
    name: ExpressRouteOperationStatusResponse
    nameWithType: ExpressRouteOperationStatusResponse
    fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse
    name: ExpressRouteOperationStatusResponse
    nameWithType: ExpressRouteOperationStatusResponse
    fullName: Microsoft.WindowsAzure.Management.ExpressRoute.Models.ExpressRouteOperationStatusResponse
  - name: )
    nameWithType: )
    fullName: )
