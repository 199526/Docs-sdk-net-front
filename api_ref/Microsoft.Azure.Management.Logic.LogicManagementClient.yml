items:
- uid: Microsoft.Azure.Management.Logic.LogicManagementClient
  commentId: T:Microsoft.Azure.Management.Logic.LogicManagementClient
  id: LogicManagementClient
  parent: Microsoft.Azure.Management.Logic
  children:
  - Microsoft.Azure.Management.Logic.LogicManagementClient.#ctor(DelegatingHandler[])
  - Microsoft.Azure.Management.Logic.LogicManagementClient.#ctor(HttpClientHandler,DelegatingHandler[])
  - Microsoft.Azure.Management.Logic.LogicManagementClient.#ctor(ServiceClientCredentials,DelegatingHandler[])
  - Microsoft.Azure.Management.Logic.LogicManagementClient.#ctor(ServiceClientCredentials,HttpClientHandler,DelegatingHandler[])
  - Microsoft.Azure.Management.Logic.LogicManagementClient.#ctor(System.Uri,DelegatingHandler[])
  - Microsoft.Azure.Management.Logic.LogicManagementClient.#ctor(System.Uri,HttpClientHandler,DelegatingHandler[])
  - Microsoft.Azure.Management.Logic.LogicManagementClient.#ctor(System.Uri,ServiceClientCredentials,DelegatingHandler[])
  - Microsoft.Azure.Management.Logic.LogicManagementClient.#ctor(System.Uri,ServiceClientCredentials,HttpClientHandler,DelegatingHandler[])
  - Microsoft.Azure.Management.Logic.LogicManagementClient.AcceptLanguage
  - Microsoft.Azure.Management.Logic.LogicManagementClient.BaseUri
  - Microsoft.Azure.Management.Logic.LogicManagementClient.Credentials
  - Microsoft.Azure.Management.Logic.LogicManagementClient.DeserializationSettings
  - Microsoft.Azure.Management.Logic.LogicManagementClient.GenerateClientRequestId
  - Microsoft.Azure.Management.Logic.LogicManagementClient.IntegrationAccountAgreements
  - Microsoft.Azure.Management.Logic.LogicManagementClient.IntegrationAccountCertificates
  - Microsoft.Azure.Management.Logic.LogicManagementClient.IntegrationAccountMaps
  - Microsoft.Azure.Management.Logic.LogicManagementClient.IntegrationAccountPartners
  - Microsoft.Azure.Management.Logic.LogicManagementClient.IntegrationAccounts
  - Microsoft.Azure.Management.Logic.LogicManagementClient.IntegrationAccountSchemas
  - Microsoft.Azure.Management.Logic.LogicManagementClient.LongRunningOperationRetryTimeout
  - Microsoft.Azure.Management.Logic.LogicManagementClient.SerializationSettings
  - Microsoft.Azure.Management.Logic.LogicManagementClient.SubscriptionId
  - Microsoft.Azure.Management.Logic.LogicManagementClient.WorkflowRunActions
  - Microsoft.Azure.Management.Logic.LogicManagementClient.WorkflowRuns
  - Microsoft.Azure.Management.Logic.LogicManagementClient.Workflows
  - Microsoft.Azure.Management.Logic.LogicManagementClient.WorkflowTriggerHistories
  - Microsoft.Azure.Management.Logic.LogicManagementClient.WorkflowTriggers
  - Microsoft.Azure.Management.Logic.LogicManagementClient.WorkflowVersions
  langs:
  - csharp
  - vb
  name: LogicManagementClient
  fullName: Microsoft.Azure.Management.Logic.LogicManagementClient
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
      branch: 5764856d77d065ab52175a08b6143b84af608b85
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LogicManagementClient
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nComposite Swagger for Logic Management Client\n"
  example: []
  syntax:
    content: 'public class LogicManagementClient : ServiceClient<LogicManagementClient>, ILogicManagementClient, IDisposable, IAzureClient'
    content.vb: >-
      Public Class LogicManagementClient
          Inherits ServiceClient(Of LogicManagementClient)
          Implements ILogicManagementClient, IDisposable, IAzureClient
  inheritance:
  - System.Object
  implements:
  - Microsoft.Azure.Management.Logic.ILogicManagementClient
  - System.IDisposable
  - IAzureClient
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Logic.LogicManagementClient.BaseUri
  commentId: P:Microsoft.Azure.Management.Logic.LogicManagementClient.BaseUri
  id: BaseUri
  parent: Microsoft.Azure.Management.Logic.LogicManagementClient
  langs:
  - csharp
  - vb
  name: BaseUri
  fullName: Microsoft.Azure.Management.Logic.LogicManagementClient.BaseUri
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
      branch: 5764856d77d065ab52175a08b6143b84af608b85
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BaseUri
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
    startLine: 35
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nThe base URI of the service.\n"
  example: []
  syntax:
    content: public Uri BaseUri { get; set; }
    content.vb: Public Property BaseUri As Uri
    parameters: []
    return:
      type: System.Uri
  implements:
  - Microsoft.Azure.Management.Logic.ILogicManagementClient.BaseUri
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Logic.LogicManagementClient.SerializationSettings
  commentId: P:Microsoft.Azure.Management.Logic.LogicManagementClient.SerializationSettings
  id: SerializationSettings
  parent: Microsoft.Azure.Management.Logic.LogicManagementClient
  langs:
  - csharp
  - vb
  name: SerializationSettings
  fullName: Microsoft.Azure.Management.Logic.LogicManagementClient.SerializationSettings
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
      branch: 5764856d77d065ab52175a08b6143b84af608b85
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SerializationSettings
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
    startLine: 40
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nGets or sets json serialization settings.\n"
  example: []
  syntax:
    content: public JsonSerializerSettings SerializationSettings { get; }
    content.vb: Public ReadOnly Property SerializationSettings As JsonSerializerSettings
    parameters: []
    return:
      type: JsonSerializerSettings
  implements:
  - Microsoft.Azure.Management.Logic.ILogicManagementClient.SerializationSettings
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Logic.LogicManagementClient.DeserializationSettings
  commentId: P:Microsoft.Azure.Management.Logic.LogicManagementClient.DeserializationSettings
  id: DeserializationSettings
  parent: Microsoft.Azure.Management.Logic.LogicManagementClient
  langs:
  - csharp
  - vb
  name: DeserializationSettings
  fullName: Microsoft.Azure.Management.Logic.LogicManagementClient.DeserializationSettings
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
      branch: 5764856d77d065ab52175a08b6143b84af608b85
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeserializationSettings
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
    startLine: 45
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nGets or sets json deserialization settings.\n"
  example: []
  syntax:
    content: public JsonSerializerSettings DeserializationSettings { get; }
    content.vb: Public ReadOnly Property DeserializationSettings As JsonSerializerSettings
    parameters: []
    return:
      type: JsonSerializerSettings
  implements:
  - Microsoft.Azure.Management.Logic.ILogicManagementClient.DeserializationSettings
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Logic.LogicManagementClient.Credentials
  commentId: P:Microsoft.Azure.Management.Logic.LogicManagementClient.Credentials
  id: Credentials
  parent: Microsoft.Azure.Management.Logic.LogicManagementClient
  langs:
  - csharp
  - vb
  name: Credentials
  fullName: Microsoft.Azure.Management.Logic.LogicManagementClient.Credentials
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
      branch: 5764856d77d065ab52175a08b6143b84af608b85
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Credentials
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
    startLine: 50
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nGets Azure subscription credentials.\n"
  example: []
  syntax:
    content: public ServiceClientCredentials Credentials { get; }
    content.vb: Public ReadOnly Property Credentials As ServiceClientCredentials
    parameters: []
    return:
      type: ServiceClientCredentials
  implements:
  - Microsoft.Azure.Management.Logic.ILogicManagementClient.Credentials
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Logic.LogicManagementClient.SubscriptionId
  commentId: P:Microsoft.Azure.Management.Logic.LogicManagementClient.SubscriptionId
  id: SubscriptionId
  parent: Microsoft.Azure.Management.Logic.LogicManagementClient
  langs:
  - csharp
  - vb
  name: SubscriptionId
  fullName: Microsoft.Azure.Management.Logic.LogicManagementClient.SubscriptionId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
      branch: 5764856d77d065ab52175a08b6143b84af608b85
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SubscriptionId
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
    startLine: 55
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nThe subscription id.\n"
  example: []
  syntax:
    content: public string SubscriptionId { get; set; }
    content.vb: Public Property SubscriptionId As String
    parameters: []
    return:
      type: System.String
  implements:
  - Microsoft.Azure.Management.Logic.ILogicManagementClient.SubscriptionId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Logic.LogicManagementClient.AcceptLanguage
  commentId: P:Microsoft.Azure.Management.Logic.LogicManagementClient.AcceptLanguage
  id: AcceptLanguage
  parent: Microsoft.Azure.Management.Logic.LogicManagementClient
  langs:
  - csharp
  - vb
  name: AcceptLanguage
  fullName: Microsoft.Azure.Management.Logic.LogicManagementClient.AcceptLanguage
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
      branch: 5764856d77d065ab52175a08b6143b84af608b85
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AcceptLanguage
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
    startLine: 60
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nGets or sets the preferred language for the response.\n"
  example: []
  syntax:
    content: public string AcceptLanguage { get; set; }
    content.vb: Public Property AcceptLanguage As String
    parameters: []
    return:
      type: System.String
  implements:
  - Microsoft.Azure.Management.Logic.ILogicManagementClient.AcceptLanguage
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Logic.LogicManagementClient.LongRunningOperationRetryTimeout
  commentId: P:Microsoft.Azure.Management.Logic.LogicManagementClient.LongRunningOperationRetryTimeout
  id: LongRunningOperationRetryTimeout
  parent: Microsoft.Azure.Management.Logic.LogicManagementClient
  langs:
  - csharp
  - vb
  name: LongRunningOperationRetryTimeout
  fullName: Microsoft.Azure.Management.Logic.LogicManagementClient.LongRunningOperationRetryTimeout
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
      branch: 5764856d77d065ab52175a08b6143b84af608b85
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LongRunningOperationRetryTimeout
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
    startLine: 66
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nGets or sets the retry timeout in seconds for Long Running Operations.\nDefault value is 30.\n"
  example: []
  syntax:
    content: public int ? LongRunningOperationRetryTimeout { get; set; }
    content.vb: Public Property LongRunningOperationRetryTimeout As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  implements:
  - Microsoft.Azure.Management.Logic.ILogicManagementClient.LongRunningOperationRetryTimeout
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Logic.LogicManagementClient.GenerateClientRequestId
  commentId: P:Microsoft.Azure.Management.Logic.LogicManagementClient.GenerateClientRequestId
  id: GenerateClientRequestId
  parent: Microsoft.Azure.Management.Logic.LogicManagementClient
  langs:
  - csharp
  - vb
  name: GenerateClientRequestId
  fullName: Microsoft.Azure.Management.Logic.LogicManagementClient.GenerateClientRequestId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
      branch: 5764856d77d065ab52175a08b6143b84af608b85
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GenerateClientRequestId
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
    startLine: 72
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nWhen set to true a unique x-ms-client-request-id value is generated and\nincluded in each request. Default is true.\n"
  example: []
  syntax:
    content: public bool ? GenerateClientRequestId { get; set; }
    content.vb: Public Property GenerateClientRequestId As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  implements:
  - Microsoft.Azure.Management.Logic.ILogicManagementClient.GenerateClientRequestId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Logic.LogicManagementClient.Workflows
  commentId: P:Microsoft.Azure.Management.Logic.LogicManagementClient.Workflows
  id: Workflows
  parent: Microsoft.Azure.Management.Logic.LogicManagementClient
  langs:
  - csharp
  - vb
  name: Workflows
  fullName: Microsoft.Azure.Management.Logic.LogicManagementClient.Workflows
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
      branch: 5764856d77d065ab52175a08b6143b84af608b85
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Workflows
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
    startLine: 77
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nGets the IWorkflowsOperations.\n"
  example: []
  syntax:
    content: public virtual IWorkflowsOperations Workflows { get; }
    content.vb: Public Overridable ReadOnly Property Workflows As IWorkflowsOperations
    parameters: []
    return:
      type: Microsoft.Azure.Management.Logic.IWorkflowsOperations
  implements:
  - Microsoft.Azure.Management.Logic.ILogicManagementClient.Workflows
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.Azure.Management.Logic.LogicManagementClient.WorkflowVersions
  commentId: P:Microsoft.Azure.Management.Logic.LogicManagementClient.WorkflowVersions
  id: WorkflowVersions
  parent: Microsoft.Azure.Management.Logic.LogicManagementClient
  langs:
  - csharp
  - vb
  name: WorkflowVersions
  fullName: Microsoft.Azure.Management.Logic.LogicManagementClient.WorkflowVersions
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
      branch: 5764856d77d065ab52175a08b6143b84af608b85
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WorkflowVersions
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
    startLine: 82
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nGets the IWorkflowVersionsOperations.\n"
  example: []
  syntax:
    content: public virtual IWorkflowVersionsOperations WorkflowVersions { get; }
    content.vb: Public Overridable ReadOnly Property WorkflowVersions As IWorkflowVersionsOperations
    parameters: []
    return:
      type: Microsoft.Azure.Management.Logic.IWorkflowVersionsOperations
  implements:
  - Microsoft.Azure.Management.Logic.ILogicManagementClient.WorkflowVersions
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.Azure.Management.Logic.LogicManagementClient.WorkflowTriggers
  commentId: P:Microsoft.Azure.Management.Logic.LogicManagementClient.WorkflowTriggers
  id: WorkflowTriggers
  parent: Microsoft.Azure.Management.Logic.LogicManagementClient
  langs:
  - csharp
  - vb
  name: WorkflowTriggers
  fullName: Microsoft.Azure.Management.Logic.LogicManagementClient.WorkflowTriggers
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
      branch: 5764856d77d065ab52175a08b6143b84af608b85
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WorkflowTriggers
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
    startLine: 87
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nGets the IWorkflowTriggersOperations.\n"
  example: []
  syntax:
    content: public virtual IWorkflowTriggersOperations WorkflowTriggers { get; }
    content.vb: Public Overridable ReadOnly Property WorkflowTriggers As IWorkflowTriggersOperations
    parameters: []
    return:
      type: Microsoft.Azure.Management.Logic.IWorkflowTriggersOperations
  implements:
  - Microsoft.Azure.Management.Logic.ILogicManagementClient.WorkflowTriggers
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.Azure.Management.Logic.LogicManagementClient.WorkflowTriggerHistories
  commentId: P:Microsoft.Azure.Management.Logic.LogicManagementClient.WorkflowTriggerHistories
  id: WorkflowTriggerHistories
  parent: Microsoft.Azure.Management.Logic.LogicManagementClient
  langs:
  - csharp
  - vb
  name: WorkflowTriggerHistories
  fullName: Microsoft.Azure.Management.Logic.LogicManagementClient.WorkflowTriggerHistories
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
      branch: 5764856d77d065ab52175a08b6143b84af608b85
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WorkflowTriggerHistories
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
    startLine: 92
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nGets the IWorkflowTriggerHistoriesOperations.\n"
  example: []
  syntax:
    content: public virtual IWorkflowTriggerHistoriesOperations WorkflowTriggerHistories { get; }
    content.vb: Public Overridable ReadOnly Property WorkflowTriggerHistories As IWorkflowTriggerHistoriesOperations
    parameters: []
    return:
      type: Microsoft.Azure.Management.Logic.IWorkflowTriggerHistoriesOperations
  implements:
  - Microsoft.Azure.Management.Logic.ILogicManagementClient.WorkflowTriggerHistories
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.Azure.Management.Logic.LogicManagementClient.WorkflowRuns
  commentId: P:Microsoft.Azure.Management.Logic.LogicManagementClient.WorkflowRuns
  id: WorkflowRuns
  parent: Microsoft.Azure.Management.Logic.LogicManagementClient
  langs:
  - csharp
  - vb
  name: WorkflowRuns
  fullName: Microsoft.Azure.Management.Logic.LogicManagementClient.WorkflowRuns
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
      branch: 5764856d77d065ab52175a08b6143b84af608b85
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WorkflowRuns
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
    startLine: 97
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nGets the IWorkflowRunsOperations.\n"
  example: []
  syntax:
    content: public virtual IWorkflowRunsOperations WorkflowRuns { get; }
    content.vb: Public Overridable ReadOnly Property WorkflowRuns As IWorkflowRunsOperations
    parameters: []
    return:
      type: Microsoft.Azure.Management.Logic.IWorkflowRunsOperations
  implements:
  - Microsoft.Azure.Management.Logic.ILogicManagementClient.WorkflowRuns
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.Azure.Management.Logic.LogicManagementClient.WorkflowRunActions
  commentId: P:Microsoft.Azure.Management.Logic.LogicManagementClient.WorkflowRunActions
  id: WorkflowRunActions
  parent: Microsoft.Azure.Management.Logic.LogicManagementClient
  langs:
  - csharp
  - vb
  name: WorkflowRunActions
  fullName: Microsoft.Azure.Management.Logic.LogicManagementClient.WorkflowRunActions
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
      branch: 5764856d77d065ab52175a08b6143b84af608b85
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WorkflowRunActions
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
    startLine: 102
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nGets the IWorkflowRunActionsOperations.\n"
  example: []
  syntax:
    content: public virtual IWorkflowRunActionsOperations WorkflowRunActions { get; }
    content.vb: Public Overridable ReadOnly Property WorkflowRunActions As IWorkflowRunActionsOperations
    parameters: []
    return:
      type: Microsoft.Azure.Management.Logic.IWorkflowRunActionsOperations
  implements:
  - Microsoft.Azure.Management.Logic.ILogicManagementClient.WorkflowRunActions
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.Azure.Management.Logic.LogicManagementClient.IntegrationAccounts
  commentId: P:Microsoft.Azure.Management.Logic.LogicManagementClient.IntegrationAccounts
  id: IntegrationAccounts
  parent: Microsoft.Azure.Management.Logic.LogicManagementClient
  langs:
  - csharp
  - vb
  name: IntegrationAccounts
  fullName: Microsoft.Azure.Management.Logic.LogicManagementClient.IntegrationAccounts
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
      branch: 5764856d77d065ab52175a08b6143b84af608b85
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IntegrationAccounts
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
    startLine: 107
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nGets the IIntegrationAccountsOperations.\n"
  example: []
  syntax:
    content: public virtual IIntegrationAccountsOperations IntegrationAccounts { get; }
    content.vb: Public Overridable ReadOnly Property IntegrationAccounts As IIntegrationAccountsOperations
    parameters: []
    return:
      type: Microsoft.Azure.Management.Logic.IIntegrationAccountsOperations
  implements:
  - Microsoft.Azure.Management.Logic.ILogicManagementClient.IntegrationAccounts
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.Azure.Management.Logic.LogicManagementClient.IntegrationAccountSchemas
  commentId: P:Microsoft.Azure.Management.Logic.LogicManagementClient.IntegrationAccountSchemas
  id: IntegrationAccountSchemas
  parent: Microsoft.Azure.Management.Logic.LogicManagementClient
  langs:
  - csharp
  - vb
  name: IntegrationAccountSchemas
  fullName: Microsoft.Azure.Management.Logic.LogicManagementClient.IntegrationAccountSchemas
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
      branch: 5764856d77d065ab52175a08b6143b84af608b85
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IntegrationAccountSchemas
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
    startLine: 112
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nGets the IIntegrationAccountSchemasOperations.\n"
  example: []
  syntax:
    content: public virtual IIntegrationAccountSchemasOperations IntegrationAccountSchemas { get; }
    content.vb: Public Overridable ReadOnly Property IntegrationAccountSchemas As IIntegrationAccountSchemasOperations
    parameters: []
    return:
      type: Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations
  implements:
  - Microsoft.Azure.Management.Logic.ILogicManagementClient.IntegrationAccountSchemas
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.Azure.Management.Logic.LogicManagementClient.IntegrationAccountMaps
  commentId: P:Microsoft.Azure.Management.Logic.LogicManagementClient.IntegrationAccountMaps
  id: IntegrationAccountMaps
  parent: Microsoft.Azure.Management.Logic.LogicManagementClient
  langs:
  - csharp
  - vb
  name: IntegrationAccountMaps
  fullName: Microsoft.Azure.Management.Logic.LogicManagementClient.IntegrationAccountMaps
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
      branch: 5764856d77d065ab52175a08b6143b84af608b85
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IntegrationAccountMaps
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
    startLine: 117
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nGets the IIntegrationAccountMapsOperations.\n"
  example: []
  syntax:
    content: public virtual IIntegrationAccountMapsOperations IntegrationAccountMaps { get; }
    content.vb: Public Overridable ReadOnly Property IntegrationAccountMaps As IIntegrationAccountMapsOperations
    parameters: []
    return:
      type: Microsoft.Azure.Management.Logic.IIntegrationAccountMapsOperations
  implements:
  - Microsoft.Azure.Management.Logic.ILogicManagementClient.IntegrationAccountMaps
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.Azure.Management.Logic.LogicManagementClient.IntegrationAccountPartners
  commentId: P:Microsoft.Azure.Management.Logic.LogicManagementClient.IntegrationAccountPartners
  id: IntegrationAccountPartners
  parent: Microsoft.Azure.Management.Logic.LogicManagementClient
  langs:
  - csharp
  - vb
  name: IntegrationAccountPartners
  fullName: Microsoft.Azure.Management.Logic.LogicManagementClient.IntegrationAccountPartners
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
      branch: 5764856d77d065ab52175a08b6143b84af608b85
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IntegrationAccountPartners
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
    startLine: 122
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nGets the IIntegrationAccountPartnersOperations.\n"
  example: []
  syntax:
    content: public virtual IIntegrationAccountPartnersOperations IntegrationAccountPartners { get; }
    content.vb: Public Overridable ReadOnly Property IntegrationAccountPartners As IIntegrationAccountPartnersOperations
    parameters: []
    return:
      type: Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations
  implements:
  - Microsoft.Azure.Management.Logic.ILogicManagementClient.IntegrationAccountPartners
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.Azure.Management.Logic.LogicManagementClient.IntegrationAccountAgreements
  commentId: P:Microsoft.Azure.Management.Logic.LogicManagementClient.IntegrationAccountAgreements
  id: IntegrationAccountAgreements
  parent: Microsoft.Azure.Management.Logic.LogicManagementClient
  langs:
  - csharp
  - vb
  name: IntegrationAccountAgreements
  fullName: Microsoft.Azure.Management.Logic.LogicManagementClient.IntegrationAccountAgreements
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
      branch: 5764856d77d065ab52175a08b6143b84af608b85
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IntegrationAccountAgreements
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
    startLine: 127
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nGets the IIntegrationAccountAgreementsOperations.\n"
  example: []
  syntax:
    content: public virtual IIntegrationAccountAgreementsOperations IntegrationAccountAgreements { get; }
    content.vb: Public Overridable ReadOnly Property IntegrationAccountAgreements As IIntegrationAccountAgreementsOperations
    parameters: []
    return:
      type: Microsoft.Azure.Management.Logic.IIntegrationAccountAgreementsOperations
  implements:
  - Microsoft.Azure.Management.Logic.ILogicManagementClient.IntegrationAccountAgreements
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.Azure.Management.Logic.LogicManagementClient.IntegrationAccountCertificates
  commentId: P:Microsoft.Azure.Management.Logic.LogicManagementClient.IntegrationAccountCertificates
  id: IntegrationAccountCertificates
  parent: Microsoft.Azure.Management.Logic.LogicManagementClient
  langs:
  - csharp
  - vb
  name: IntegrationAccountCertificates
  fullName: Microsoft.Azure.Management.Logic.LogicManagementClient.IntegrationAccountCertificates
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
      branch: 5764856d77d065ab52175a08b6143b84af608b85
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IntegrationAccountCertificates
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
    startLine: 132
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nGets the IIntegrationAccountCertificatesOperations.\n"
  example: []
  syntax:
    content: public virtual IIntegrationAccountCertificatesOperations IntegrationAccountCertificates { get; }
    content.vb: Public Overridable ReadOnly Property IntegrationAccountCertificates As IIntegrationAccountCertificatesOperations
    parameters: []
    return:
      type: Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations
  implements:
  - Microsoft.Azure.Management.Logic.ILogicManagementClient.IntegrationAccountCertificates
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.Azure.Management.Logic.LogicManagementClient.#ctor(DelegatingHandler[])
  commentId: M:Microsoft.Azure.Management.Logic.LogicManagementClient.#ctor(DelegatingHandler[])
  id: '#ctor(DelegatingHandler[])'
  parent: Microsoft.Azure.Management.Logic.LogicManagementClient
  langs:
  - csharp
  - vb
  name: LogicManagementClient(DelegatingHandler[])
  fullName: Microsoft.Azure.Management.Logic.LogicManagementClient.LogicManagementClient(DelegatingHandler[])
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
      branch: 5764856d77d065ab52175a08b6143b84af608b85
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
    startLine: 140
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nInitializes a new instance of the LogicManagementClient class.\n"
  example: []
  syntax:
    content: protected LogicManagementClient(params DelegatingHandler[] handlers)
    content.vb: Protected Sub New(ParamArray handlers As DelegatingHandler())
    parameters:
    - id: handlers
      type: DelegatingHandler[]
      description: "\nOptional. The delegating handlers to add to the http client pipeline.\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.Azure.Management.Logic.LogicManagementClient.LogicManagementClient(DelegatingHandler())
  name.vb: LogicManagementClient(DelegatingHandler())
- uid: Microsoft.Azure.Management.Logic.LogicManagementClient.#ctor(HttpClientHandler,DelegatingHandler[])
  commentId: M:Microsoft.Azure.Management.Logic.LogicManagementClient.#ctor(HttpClientHandler,DelegatingHandler[])
  id: '#ctor(HttpClientHandler,DelegatingHandler[])'
  parent: Microsoft.Azure.Management.Logic.LogicManagementClient
  langs:
  - csharp
  - vb
  name: LogicManagementClient(HttpClientHandler, DelegatingHandler[])
  fullName: Microsoft.Azure.Management.Logic.LogicManagementClient.LogicManagementClient(HttpClientHandler, DelegatingHandler[])
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
      branch: 5764856d77d065ab52175a08b6143b84af608b85
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
    startLine: 154
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nInitializes a new instance of the LogicManagementClient class.\n"
  example: []
  syntax:
    content: protected LogicManagementClient(HttpClientHandler rootHandler, params DelegatingHandler[] handlers)
    content.vb: Protected Sub New(rootHandler As HttpClientHandler, ParamArray handlers As DelegatingHandler())
    parameters:
    - id: rootHandler
      type: HttpClientHandler
      description: "\nOptional. The http client handler used to handle http transport.\n"
    - id: handlers
      type: DelegatingHandler[]
      description: "\nOptional. The delegating handlers to add to the http client pipeline.\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.Azure.Management.Logic.LogicManagementClient.LogicManagementClient(HttpClientHandler, DelegatingHandler())
  name.vb: LogicManagementClient(HttpClientHandler, DelegatingHandler())
- uid: Microsoft.Azure.Management.Logic.LogicManagementClient.#ctor(System.Uri,DelegatingHandler[])
  commentId: M:Microsoft.Azure.Management.Logic.LogicManagementClient.#ctor(System.Uri,DelegatingHandler[])
  id: '#ctor(System.Uri,DelegatingHandler[])'
  parent: Microsoft.Azure.Management.Logic.LogicManagementClient
  langs:
  - csharp
  - vb
  name: LogicManagementClient(Uri, DelegatingHandler[])
  fullName: Microsoft.Azure.Management.Logic.LogicManagementClient.LogicManagementClient(System.Uri, DelegatingHandler[])
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
      branch: 5764856d77d065ab52175a08b6143b84af608b85
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
    startLine: 171
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nInitializes a new instance of the LogicManagementClient class.\n"
  example: []
  syntax:
    content: protected LogicManagementClient(Uri baseUri, params DelegatingHandler[] handlers)
    content.vb: Protected Sub New(baseUri As Uri, ParamArray handlers As DelegatingHandler())
    parameters:
    - id: baseUri
      type: System.Uri
      description: "\nOptional. The base URI of the service.\n"
    - id: handlers
      type: DelegatingHandler[]
      description: "\nOptional. The delegating handlers to add to the http client pipeline.\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThrown when a required parameter is null\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.Azure.Management.Logic.LogicManagementClient.LogicManagementClient(System.Uri, DelegatingHandler())
  name.vb: LogicManagementClient(Uri, DelegatingHandler())
- uid: Microsoft.Azure.Management.Logic.LogicManagementClient.#ctor(System.Uri,HttpClientHandler,DelegatingHandler[])
  commentId: M:Microsoft.Azure.Management.Logic.LogicManagementClient.#ctor(System.Uri,HttpClientHandler,DelegatingHandler[])
  id: '#ctor(System.Uri,HttpClientHandler,DelegatingHandler[])'
  parent: Microsoft.Azure.Management.Logic.LogicManagementClient
  langs:
  - csharp
  - vb
  name: LogicManagementClient(Uri, HttpClientHandler, DelegatingHandler[])
  fullName: Microsoft.Azure.Management.Logic.LogicManagementClient.LogicManagementClient(System.Uri, HttpClientHandler, DelegatingHandler[])
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
      branch: 5764856d77d065ab52175a08b6143b84af608b85
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
    startLine: 195
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nInitializes a new instance of the LogicManagementClient class.\n"
  example: []
  syntax:
    content: protected LogicManagementClient(Uri baseUri, HttpClientHandler rootHandler, params DelegatingHandler[] handlers)
    content.vb: Protected Sub New(baseUri As Uri, rootHandler As HttpClientHandler, ParamArray handlers As DelegatingHandler())
    parameters:
    - id: baseUri
      type: System.Uri
      description: "\nOptional. The base URI of the service.\n"
    - id: rootHandler
      type: HttpClientHandler
      description: "\nOptional. The http client handler used to handle http transport.\n"
    - id: handlers
      type: DelegatingHandler[]
      description: "\nOptional. The delegating handlers to add to the http client pipeline.\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThrown when a required parameter is null\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.Azure.Management.Logic.LogicManagementClient.LogicManagementClient(System.Uri, HttpClientHandler, DelegatingHandler())
  name.vb: LogicManagementClient(Uri, HttpClientHandler, DelegatingHandler())
- uid: Microsoft.Azure.Management.Logic.LogicManagementClient.#ctor(ServiceClientCredentials,DelegatingHandler[])
  commentId: M:Microsoft.Azure.Management.Logic.LogicManagementClient.#ctor(ServiceClientCredentials,DelegatingHandler[])
  id: '#ctor(ServiceClientCredentials,DelegatingHandler[])'
  parent: Microsoft.Azure.Management.Logic.LogicManagementClient
  langs:
  - csharp
  - vb
  name: LogicManagementClient(ServiceClientCredentials, DelegatingHandler[])
  fullName: Microsoft.Azure.Management.Logic.LogicManagementClient.LogicManagementClient(ServiceClientCredentials, DelegatingHandler[])
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
      branch: 5764856d77d065ab52175a08b6143b84af608b85
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
    startLine: 216
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nInitializes a new instance of the LogicManagementClient class.\n"
  example: []
  syntax:
    content: public LogicManagementClient(ServiceClientCredentials credentials, params DelegatingHandler[] handlers)
    content.vb: Public Sub New(credentials As ServiceClientCredentials, ParamArray handlers As DelegatingHandler())
    parameters:
    - id: credentials
      type: ServiceClientCredentials
      description: "\nRequired. Gets Azure subscription credentials.\n"
    - id: handlers
      type: DelegatingHandler[]
      description: "\nOptional. The delegating handlers to add to the http client pipeline.\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThrown when a required parameter is null\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Logic.LogicManagementClient.LogicManagementClient(ServiceClientCredentials, DelegatingHandler())
  name.vb: LogicManagementClient(ServiceClientCredentials, DelegatingHandler())
- uid: Microsoft.Azure.Management.Logic.LogicManagementClient.#ctor(ServiceClientCredentials,HttpClientHandler,DelegatingHandler[])
  commentId: M:Microsoft.Azure.Management.Logic.LogicManagementClient.#ctor(ServiceClientCredentials,HttpClientHandler,DelegatingHandler[])
  id: '#ctor(ServiceClientCredentials,HttpClientHandler,DelegatingHandler[])'
  parent: Microsoft.Azure.Management.Logic.LogicManagementClient
  langs:
  - csharp
  - vb
  name: LogicManagementClient(ServiceClientCredentials, HttpClientHandler, DelegatingHandler[])
  fullName: Microsoft.Azure.Management.Logic.LogicManagementClient.LogicManagementClient(ServiceClientCredentials, HttpClientHandler, DelegatingHandler[])
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
      branch: 5764856d77d065ab52175a08b6143b84af608b85
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
    startLine: 244
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nInitializes a new instance of the LogicManagementClient class.\n"
  example: []
  syntax:
    content: public LogicManagementClient(ServiceClientCredentials credentials, HttpClientHandler rootHandler, params DelegatingHandler[] handlers)
    content.vb: Public Sub New(credentials As ServiceClientCredentials, rootHandler As HttpClientHandler, ParamArray handlers As DelegatingHandler())
    parameters:
    - id: credentials
      type: ServiceClientCredentials
      description: "\nRequired. Gets Azure subscription credentials.\n"
    - id: rootHandler
      type: HttpClientHandler
      description: "\nOptional. The http client handler used to handle http transport.\n"
    - id: handlers
      type: DelegatingHandler[]
      description: "\nOptional. The delegating handlers to add to the http client pipeline.\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThrown when a required parameter is null\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Logic.LogicManagementClient.LogicManagementClient(ServiceClientCredentials, HttpClientHandler, DelegatingHandler())
  name.vb: LogicManagementClient(ServiceClientCredentials, HttpClientHandler, DelegatingHandler())
- uid: Microsoft.Azure.Management.Logic.LogicManagementClient.#ctor(System.Uri,ServiceClientCredentials,DelegatingHandler[])
  commentId: M:Microsoft.Azure.Management.Logic.LogicManagementClient.#ctor(System.Uri,ServiceClientCredentials,DelegatingHandler[])
  id: '#ctor(System.Uri,ServiceClientCredentials,DelegatingHandler[])'
  parent: Microsoft.Azure.Management.Logic.LogicManagementClient
  langs:
  - csharp
  - vb
  name: LogicManagementClient(Uri, ServiceClientCredentials, DelegatingHandler[])
  fullName: Microsoft.Azure.Management.Logic.LogicManagementClient.LogicManagementClient(System.Uri, ServiceClientCredentials, DelegatingHandler[])
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
      branch: 5764856d77d065ab52175a08b6143b84af608b85
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
    startLine: 272
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nInitializes a new instance of the LogicManagementClient class.\n"
  example: []
  syntax:
    content: public LogicManagementClient(Uri baseUri, ServiceClientCredentials credentials, params DelegatingHandler[] handlers)
    content.vb: Public Sub New(baseUri As Uri, credentials As ServiceClientCredentials, ParamArray handlers As DelegatingHandler())
    parameters:
    - id: baseUri
      type: System.Uri
      description: "\nOptional. The base URI of the service.\n"
    - id: credentials
      type: ServiceClientCredentials
      description: "\nRequired. Gets Azure subscription credentials.\n"
    - id: handlers
      type: DelegatingHandler[]
      description: "\nOptional. The delegating handlers to add to the http client pipeline.\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThrown when a required parameter is null\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Logic.LogicManagementClient.LogicManagementClient(System.Uri, ServiceClientCredentials, DelegatingHandler())
  name.vb: LogicManagementClient(Uri, ServiceClientCredentials, DelegatingHandler())
- uid: Microsoft.Azure.Management.Logic.LogicManagementClient.#ctor(System.Uri,ServiceClientCredentials,HttpClientHandler,DelegatingHandler[])
  commentId: M:Microsoft.Azure.Management.Logic.LogicManagementClient.#ctor(System.Uri,ServiceClientCredentials,HttpClientHandler,DelegatingHandler[])
  id: '#ctor(System.Uri,ServiceClientCredentials,HttpClientHandler,DelegatingHandler[])'
  parent: Microsoft.Azure.Management.Logic.LogicManagementClient
  langs:
  - csharp
  - vb
  name: LogicManagementClient(Uri, ServiceClientCredentials, HttpClientHandler, DelegatingHandler[])
  fullName: Microsoft.Azure.Management.Logic.LogicManagementClient.LogicManagementClient(System.Uri, ServiceClientCredentials, HttpClientHandler, DelegatingHandler[])
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
      branch: 5764856d77d065ab52175a08b6143b84af608b85
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/LogicManagementClient.cs
    startLine: 308
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nInitializes a new instance of the LogicManagementClient class.\n"
  example: []
  syntax:
    content: public LogicManagementClient(Uri baseUri, ServiceClientCredentials credentials, HttpClientHandler rootHandler, params DelegatingHandler[] handlers)
    content.vb: Public Sub New(baseUri As Uri, credentials As ServiceClientCredentials, rootHandler As HttpClientHandler, ParamArray handlers As DelegatingHandler())
    parameters:
    - id: baseUri
      type: System.Uri
      description: "\nOptional. The base URI of the service.\n"
    - id: credentials
      type: ServiceClientCredentials
      description: "\nRequired. Gets Azure subscription credentials.\n"
    - id: rootHandler
      type: HttpClientHandler
      description: "\nOptional. The http client handler used to handle http transport.\n"
    - id: handlers
      type: DelegatingHandler[]
      description: "\nOptional. The delegating handlers to add to the http client pipeline.\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThrown when a required parameter is null\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Logic.LogicManagementClient.LogicManagementClient(System.Uri, ServiceClientCredentials, HttpClientHandler, DelegatingHandler())
  name.vb: LogicManagementClient(Uri, ServiceClientCredentials, HttpClientHandler, DelegatingHandler())
references:
- uid: Microsoft.Azure.Management.Logic
  isExternal: false
  name: Microsoft.Azure.Management.Logic
  fullName: Microsoft.Azure.Management.Logic
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.Logic.ILogicManagementClient
  parent: Microsoft.Azure.Management.Logic
  isExternal: false
  name: ILogicManagementClient
  fullName: Microsoft.Azure.Management.Logic.ILogicManagementClient
- uid: System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  fullName: System.IDisposable
- uid: IAzureClient
  isExternal: true
  name: IAzureClient
  fullName: IAzureClient
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Management.Logic.ILogicManagementClient.BaseUri
  parent: Microsoft.Azure.Management.Logic.ILogicManagementClient
  isExternal: false
  name: BaseUri
  fullName: Microsoft.Azure.Management.Logic.ILogicManagementClient.BaseUri
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  fullName: System.Uri
- uid: Microsoft.Azure.Management.Logic.ILogicManagementClient.SerializationSettings
  parent: Microsoft.Azure.Management.Logic.ILogicManagementClient
  isExternal: false
  name: SerializationSettings
  fullName: Microsoft.Azure.Management.Logic.ILogicManagementClient.SerializationSettings
- uid: JsonSerializerSettings
  isExternal: true
  name: JsonSerializerSettings
  fullName: JsonSerializerSettings
- uid: Microsoft.Azure.Management.Logic.ILogicManagementClient.DeserializationSettings
  parent: Microsoft.Azure.Management.Logic.ILogicManagementClient
  isExternal: false
  name: DeserializationSettings
  fullName: Microsoft.Azure.Management.Logic.ILogicManagementClient.DeserializationSettings
- uid: Microsoft.Azure.Management.Logic.ILogicManagementClient.Credentials
  parent: Microsoft.Azure.Management.Logic.ILogicManagementClient
  isExternal: false
  name: Credentials
  fullName: Microsoft.Azure.Management.Logic.ILogicManagementClient.Credentials
- uid: ServiceClientCredentials
  isExternal: true
  name: ServiceClientCredentials
  fullName: ServiceClientCredentials
- uid: Microsoft.Azure.Management.Logic.ILogicManagementClient.SubscriptionId
  parent: Microsoft.Azure.Management.Logic.ILogicManagementClient
  isExternal: false
  name: SubscriptionId
  fullName: Microsoft.Azure.Management.Logic.ILogicManagementClient.SubscriptionId
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.Azure.Management.Logic.ILogicManagementClient.AcceptLanguage
  parent: Microsoft.Azure.Management.Logic.ILogicManagementClient
  isExternal: false
  name: AcceptLanguage
  fullName: Microsoft.Azure.Management.Logic.ILogicManagementClient.AcceptLanguage
- uid: Microsoft.Azure.Management.Logic.ILogicManagementClient.LongRunningOperationRetryTimeout
  parent: Microsoft.Azure.Management.Logic.ILogicManagementClient
  isExternal: false
  name: LongRunningOperationRetryTimeout
  fullName: Microsoft.Azure.Management.Logic.ILogicManagementClient.LongRunningOperationRetryTimeout
- uid: System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Logic.ILogicManagementClient.GenerateClientRequestId
  parent: Microsoft.Azure.Management.Logic.ILogicManagementClient
  isExternal: false
  name: GenerateClientRequestId
  fullName: Microsoft.Azure.Management.Logic.ILogicManagementClient.GenerateClientRequestId
- uid: System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Logic.ILogicManagementClient.Workflows
  parent: Microsoft.Azure.Management.Logic.ILogicManagementClient
  isExternal: false
  name: Workflows
  fullName: Microsoft.Azure.Management.Logic.ILogicManagementClient.Workflows
- uid: Microsoft.Azure.Management.Logic.IWorkflowsOperations
  parent: Microsoft.Azure.Management.Logic
  isExternal: false
  name: IWorkflowsOperations
  fullName: Microsoft.Azure.Management.Logic.IWorkflowsOperations
- uid: Microsoft.Azure.Management.Logic.ILogicManagementClient.WorkflowVersions
  parent: Microsoft.Azure.Management.Logic.ILogicManagementClient
  isExternal: false
  name: WorkflowVersions
  fullName: Microsoft.Azure.Management.Logic.ILogicManagementClient.WorkflowVersions
- uid: Microsoft.Azure.Management.Logic.IWorkflowVersionsOperations
  parent: Microsoft.Azure.Management.Logic
  isExternal: false
  name: IWorkflowVersionsOperations
  fullName: Microsoft.Azure.Management.Logic.IWorkflowVersionsOperations
- uid: Microsoft.Azure.Management.Logic.ILogicManagementClient.WorkflowTriggers
  parent: Microsoft.Azure.Management.Logic.ILogicManagementClient
  isExternal: false
  name: WorkflowTriggers
  fullName: Microsoft.Azure.Management.Logic.ILogicManagementClient.WorkflowTriggers
- uid: Microsoft.Azure.Management.Logic.IWorkflowTriggersOperations
  parent: Microsoft.Azure.Management.Logic
  isExternal: false
  name: IWorkflowTriggersOperations
  fullName: Microsoft.Azure.Management.Logic.IWorkflowTriggersOperations
- uid: Microsoft.Azure.Management.Logic.ILogicManagementClient.WorkflowTriggerHistories
  parent: Microsoft.Azure.Management.Logic.ILogicManagementClient
  isExternal: false
  name: WorkflowTriggerHistories
  fullName: Microsoft.Azure.Management.Logic.ILogicManagementClient.WorkflowTriggerHistories
- uid: Microsoft.Azure.Management.Logic.IWorkflowTriggerHistoriesOperations
  parent: Microsoft.Azure.Management.Logic
  isExternal: false
  name: IWorkflowTriggerHistoriesOperations
  fullName: Microsoft.Azure.Management.Logic.IWorkflowTriggerHistoriesOperations
- uid: Microsoft.Azure.Management.Logic.ILogicManagementClient.WorkflowRuns
  parent: Microsoft.Azure.Management.Logic.ILogicManagementClient
  isExternal: false
  name: WorkflowRuns
  fullName: Microsoft.Azure.Management.Logic.ILogicManagementClient.WorkflowRuns
- uid: Microsoft.Azure.Management.Logic.IWorkflowRunsOperations
  parent: Microsoft.Azure.Management.Logic
  isExternal: false
  name: IWorkflowRunsOperations
  fullName: Microsoft.Azure.Management.Logic.IWorkflowRunsOperations
- uid: Microsoft.Azure.Management.Logic.ILogicManagementClient.WorkflowRunActions
  parent: Microsoft.Azure.Management.Logic.ILogicManagementClient
  isExternal: false
  name: WorkflowRunActions
  fullName: Microsoft.Azure.Management.Logic.ILogicManagementClient.WorkflowRunActions
- uid: Microsoft.Azure.Management.Logic.IWorkflowRunActionsOperations
  parent: Microsoft.Azure.Management.Logic
  isExternal: false
  name: IWorkflowRunActionsOperations
  fullName: Microsoft.Azure.Management.Logic.IWorkflowRunActionsOperations
- uid: Microsoft.Azure.Management.Logic.ILogicManagementClient.IntegrationAccounts
  parent: Microsoft.Azure.Management.Logic.ILogicManagementClient
  isExternal: false
  name: IntegrationAccounts
  fullName: Microsoft.Azure.Management.Logic.ILogicManagementClient.IntegrationAccounts
- uid: Microsoft.Azure.Management.Logic.IIntegrationAccountsOperations
  parent: Microsoft.Azure.Management.Logic
  isExternal: false
  name: IIntegrationAccountsOperations
  fullName: Microsoft.Azure.Management.Logic.IIntegrationAccountsOperations
- uid: Microsoft.Azure.Management.Logic.ILogicManagementClient.IntegrationAccountSchemas
  parent: Microsoft.Azure.Management.Logic.ILogicManagementClient
  isExternal: false
  name: IntegrationAccountSchemas
  fullName: Microsoft.Azure.Management.Logic.ILogicManagementClient.IntegrationAccountSchemas
- uid: Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations
  parent: Microsoft.Azure.Management.Logic
  isExternal: false
  name: IIntegrationAccountSchemasOperations
  fullName: Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations
- uid: Microsoft.Azure.Management.Logic.ILogicManagementClient.IntegrationAccountMaps
  parent: Microsoft.Azure.Management.Logic.ILogicManagementClient
  isExternal: false
  name: IntegrationAccountMaps
  fullName: Microsoft.Azure.Management.Logic.ILogicManagementClient.IntegrationAccountMaps
- uid: Microsoft.Azure.Management.Logic.IIntegrationAccountMapsOperations
  parent: Microsoft.Azure.Management.Logic
  isExternal: false
  name: IIntegrationAccountMapsOperations
  fullName: Microsoft.Azure.Management.Logic.IIntegrationAccountMapsOperations
- uid: Microsoft.Azure.Management.Logic.ILogicManagementClient.IntegrationAccountPartners
  parent: Microsoft.Azure.Management.Logic.ILogicManagementClient
  isExternal: false
  name: IntegrationAccountPartners
  fullName: Microsoft.Azure.Management.Logic.ILogicManagementClient.IntegrationAccountPartners
- uid: Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations
  parent: Microsoft.Azure.Management.Logic
  isExternal: false
  name: IIntegrationAccountPartnersOperations
  fullName: Microsoft.Azure.Management.Logic.IIntegrationAccountPartnersOperations
- uid: Microsoft.Azure.Management.Logic.ILogicManagementClient.IntegrationAccountAgreements
  parent: Microsoft.Azure.Management.Logic.ILogicManagementClient
  isExternal: false
  name: IntegrationAccountAgreements
  fullName: Microsoft.Azure.Management.Logic.ILogicManagementClient.IntegrationAccountAgreements
- uid: Microsoft.Azure.Management.Logic.IIntegrationAccountAgreementsOperations
  parent: Microsoft.Azure.Management.Logic
  isExternal: false
  name: IIntegrationAccountAgreementsOperations
  fullName: Microsoft.Azure.Management.Logic.IIntegrationAccountAgreementsOperations
- uid: Microsoft.Azure.Management.Logic.ILogicManagementClient.IntegrationAccountCertificates
  parent: Microsoft.Azure.Management.Logic.ILogicManagementClient
  isExternal: false
  name: IntegrationAccountCertificates
  fullName: Microsoft.Azure.Management.Logic.ILogicManagementClient.IntegrationAccountCertificates
- uid: Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations
  parent: Microsoft.Azure.Management.Logic
  isExternal: false
  name: IIntegrationAccountCertificatesOperations
  fullName: Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations
- uid: DelegatingHandler[]
  isExternal: true
  name: DelegatingHandler[]
  fullName: DelegatingHandler[]
  fullname.vb: DelegatingHandler()
  name.vb: DelegatingHandler()
  spec.csharp:
  - uid: DelegatingHandler
    name: DelegatingHandler
    fullName: DelegatingHandler
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: DelegatingHandler
    name: DelegatingHandler
    fullName: DelegatingHandler
    isExternal: true
  - name: ()
    fullName: ()
- uid: HttpClientHandler
  isExternal: true
  name: HttpClientHandler
  fullName: HttpClientHandler
- uid: System.ArgumentNullException
