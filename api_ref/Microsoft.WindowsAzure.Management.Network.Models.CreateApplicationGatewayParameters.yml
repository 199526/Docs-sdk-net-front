### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.Network.Models.CreateApplicationGatewayParameters
  commentId: T:Microsoft.WindowsAzure.Management.Network.Models.CreateApplicationGatewayParameters
  id: CreateApplicationGatewayParameters
  parent: Microsoft.WindowsAzure.Management.Network.Models
  children:
  - Microsoft.WindowsAzure.Management.Network.Models.CreateApplicationGatewayParameters.#ctor
  - Microsoft.WindowsAzure.Management.Network.Models.CreateApplicationGatewayParameters.Description
  - Microsoft.WindowsAzure.Management.Network.Models.CreateApplicationGatewayParameters.GatewaySize
  - Microsoft.WindowsAzure.Management.Network.Models.CreateApplicationGatewayParameters.InstanceCount
  - Microsoft.WindowsAzure.Management.Network.Models.CreateApplicationGatewayParameters.Name
  - Microsoft.WindowsAzure.Management.Network.Models.CreateApplicationGatewayParameters.Subnets
  - Microsoft.WindowsAzure.Management.Network.Models.CreateApplicationGatewayParameters.VnetName
  langs:
  - csharp
  - vb
  name: CreateApplicationGatewayParameters
  nameWithType: CreateApplicationGatewayParameters
  fullName: Microsoft.WindowsAzure.Management.Network.Models.CreateApplicationGatewayParameters
  type: Class
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/Models/CreateApplicationGatewayParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateApplicationGatewayParameters
    path: src/ServiceManagement/Network/NetworkManagement/Generated/Models/CreateApplicationGatewayParameters.cs
    startLine: 31
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network.Models
  summary: "\nThe parameters of a create application gateway request.\n"
  example: []
  syntax:
    content: public class CreateApplicationGatewayParameters
    content.vb: Public Class CreateApplicationGatewayParameters
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.Network.Models.CreateApplicationGatewayParameters.Description
  commentId: P:Microsoft.WindowsAzure.Management.Network.Models.CreateApplicationGatewayParameters.Description
  id: Description
  parent: Microsoft.WindowsAzure.Management.Network.Models.CreateApplicationGatewayParameters
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: CreateApplicationGatewayParameters.Description
  fullName: Microsoft.WindowsAzure.Management.Network.Models.CreateApplicationGatewayParameters.Description
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/Models/CreateApplicationGatewayParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Description
    path: src/ServiceManagement/Network/NetworkManagement/Generated/Models/CreateApplicationGatewayParameters.cs
    startLine: 38
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network.Models
  summary: "\nOptional. Gateway Description.\n"
  example: []
  syntax:
    content: public string Description { get; set; }
    content.vb: Public Property Description As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Network.Models.CreateApplicationGatewayParameters.GatewaySize
  commentId: P:Microsoft.WindowsAzure.Management.Network.Models.CreateApplicationGatewayParameters.GatewaySize
  id: GatewaySize
  parent: Microsoft.WindowsAzure.Management.Network.Models.CreateApplicationGatewayParameters
  langs:
  - csharp
  - vb
  name: GatewaySize
  nameWithType: CreateApplicationGatewayParameters.GatewaySize
  fullName: Microsoft.WindowsAzure.Management.Network.Models.CreateApplicationGatewayParameters.GatewaySize
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/Models/CreateApplicationGatewayParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GatewaySize
    path: src/ServiceManagement/Network/NetworkManagement/Generated/Models/CreateApplicationGatewayParameters.cs
    startLine: 49
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network.Models
  summary: "\nOptional. The size of each gateway instance.\n"
  example: []
  syntax:
    content: public string GatewaySize { get; set; }
    content.vb: Public Property GatewaySize As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Network.Models.CreateApplicationGatewayParameters.InstanceCount
  commentId: P:Microsoft.WindowsAzure.Management.Network.Models.CreateApplicationGatewayParameters.InstanceCount
  id: InstanceCount
  parent: Microsoft.WindowsAzure.Management.Network.Models.CreateApplicationGatewayParameters
  langs:
  - csharp
  - vb
  name: InstanceCount
  nameWithType: CreateApplicationGatewayParameters.InstanceCount
  fullName: Microsoft.WindowsAzure.Management.Network.Models.CreateApplicationGatewayParameters.InstanceCount
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/Models/CreateApplicationGatewayParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: InstanceCount
    path: src/ServiceManagement/Network/NetworkManagement/Generated/Models/CreateApplicationGatewayParameters.cs
    startLine: 60
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network.Models
  summary: "\nOptional. The number of instances to create for this gateway.\n"
  example: []
  syntax:
    content: public uint InstanceCount { get; set; }
    content.vb: Public Property InstanceCount As UInteger
    parameters: []
    return:
      type: System.UInt32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Network.Models.CreateApplicationGatewayParameters.Name
  commentId: P:Microsoft.WindowsAzure.Management.Network.Models.CreateApplicationGatewayParameters.Name
  id: Name
  parent: Microsoft.WindowsAzure.Management.Network.Models.CreateApplicationGatewayParameters
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: CreateApplicationGatewayParameters.Name
  fullName: Microsoft.WindowsAzure.Management.Network.Models.CreateApplicationGatewayParameters.Name
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/Models/CreateApplicationGatewayParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/ServiceManagement/Network/NetworkManagement/Generated/Models/CreateApplicationGatewayParameters.cs
    startLine: 71
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network.Models
  summary: "\nOptional. Friendly Name of the gateway.\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Network.Models.CreateApplicationGatewayParameters.Subnets
  commentId: P:Microsoft.WindowsAzure.Management.Network.Models.CreateApplicationGatewayParameters.Subnets
  id: Subnets
  parent: Microsoft.WindowsAzure.Management.Network.Models.CreateApplicationGatewayParameters
  langs:
  - csharp
  - vb
  name: Subnets
  nameWithType: CreateApplicationGatewayParameters.Subnets
  fullName: Microsoft.WindowsAzure.Management.Network.Models.CreateApplicationGatewayParameters.Subnets
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/Models/CreateApplicationGatewayParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Subnets
    path: src/ServiceManagement/Network/NetworkManagement/Generated/Models/CreateApplicationGatewayParameters.cs
    startLine: 82
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network.Models
  summary: "\nOptional. Subnets in the vnet to which the gateway belongs.\n"
  example: []
  syntax:
    content: public IList<string> Subnets { get; set; }
    content.vb: Public Property Subnets As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Network.Models.CreateApplicationGatewayParameters.VnetName
  commentId: P:Microsoft.WindowsAzure.Management.Network.Models.CreateApplicationGatewayParameters.VnetName
  id: VnetName
  parent: Microsoft.WindowsAzure.Management.Network.Models.CreateApplicationGatewayParameters
  langs:
  - csharp
  - vb
  name: VnetName
  nameWithType: CreateApplicationGatewayParameters.VnetName
  fullName: Microsoft.WindowsAzure.Management.Network.Models.CreateApplicationGatewayParameters.VnetName
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/Models/CreateApplicationGatewayParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VnetName
    path: src/ServiceManagement/Network/NetworkManagement/Generated/Models/CreateApplicationGatewayParameters.cs
    startLine: 93
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network.Models
  summary: "\nOptional. The vnet to which the gateway belongs.\n"
  example: []
  syntax:
    content: public string VnetName { get; set; }
    content.vb: Public Property VnetName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Network.Models.CreateApplicationGatewayParameters.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.Network.Models.CreateApplicationGatewayParameters.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.Network.Models.CreateApplicationGatewayParameters
  langs:
  - csharp
  - vb
  name: CreateApplicationGatewayParameters()
  nameWithType: CreateApplicationGatewayParameters.CreateApplicationGatewayParameters()
  fullName: Microsoft.WindowsAzure.Management.Network.Models.CreateApplicationGatewayParameters.CreateApplicationGatewayParameters()
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/Models/CreateApplicationGatewayParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/Network/NetworkManagement/Generated/Models/CreateApplicationGatewayParameters.cs
    startLine: 103
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network.Models
  summary: "\nInitializes a new instance of the\nCreateApplicationGatewayParameters class.\n"
  example: []
  syntax:
    content: public CreateApplicationGatewayParameters()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.Network.Models
  commentId: N:Microsoft.WindowsAzure.Management.Network.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Network.Models
  nameWithType: Microsoft.WindowsAzure.Management.Network.Models
  fullName: Microsoft.WindowsAzure.Management.Network.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
