items:
- uid: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
  commentId: T:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
  id: IFileSystemOperations
  parent: Microsoft.Azure.Management.DataLake.Store
  children:
  - Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.AppendWithHttpMessagesAsync(System.String,System.String,System.IO.Stream,System.Nullable{System.Int64},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.CheckAccessWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.ConcatWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.ConcurrentAppendWithHttpMessagesAsync(System.String,System.String,System.IO.Stream,System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.CreateWithHttpMessagesAsync(System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.GetAclStatusWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.GetContentSummaryWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.GetFileStatusWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.ListFileStatusWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.MkdirsWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.ModifyAclEntriesWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.MsConcatWithHttpMessagesAsync(System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.OpenWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.PathExistsWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.RemoveAclEntriesWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.RemoveAclWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.RemoveDefaultAclWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.RenameWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.SetAclWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.SetFileExpiryWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType,System.Nullable{System.Int64},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.SetOwnerWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.SetPermissionWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IFileSystemOperations
  fullName: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
  type: Interface
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/IFileSystemOperations.cs
      branch: db4ad772764a0196380e8dfdafde97cff8e53875
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IFileSystemOperations
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/IFileSystemOperations.cs
    startLine: 22
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.5-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nFileSystemOperations operations.\n"
  example: []
  syntax:
    content: public interface IFileSystemOperations
    content.vb: Public Interface IFileSystemOperations
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.PathExistsWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.PathExistsWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: PathExistsWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
  langs:
  - csharp
  - vb
  name: PathExistsWithHttpMessagesAsync(String, String, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.PathExistsWithHttpMessagesAsync(System.String, System.String, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Customizations/IFileSystemOperations.Customizations.cs
      branch: db4ad772764a0196380e8dfdafde97cff8e53875
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PathExistsWithHttpMessagesAsync
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Customizations/IFileSystemOperations.Customizations.cs
    startLine: 52
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.5-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nTest the existence of a file or directory object specified by the file path.\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse<bool>> PathExistsWithHttpMessagesAsync(string accountName, string getFilePath, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function PathExistsWithHttpMessagesAsync(accountName As String, getFilePath As String, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse(Of Boolean))
    parameters:
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations on.\n"
    - id: getFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or directory for\nwhich to test.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nHeaders that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse{System.Boolean}}
  exceptions:
  - type: Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException
    commentId: T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException
    description: "\nThrown when the operation returned an invalid status code\n"
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.PathExistsWithHttpMessagesAsync(System.String, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: PathExistsWithHttpMessagesAsync(String, String, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.ConcurrentAppendWithHttpMessagesAsync(System.String,System.String,System.IO.Stream,System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.ConcurrentAppendWithHttpMessagesAsync(System.String,System.String,System.IO.Stream,System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: ConcurrentAppendWithHttpMessagesAsync(System.String,System.String,System.IO.Stream,System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
  langs:
  - csharp
  - vb
  name: ConcurrentAppendWithHttpMessagesAsync(String, String, Stream, Nullable<AppendModeType>, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.ConcurrentAppendWithHttpMessagesAsync(System.String, System.String, System.IO.Stream, System.Nullable<Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType>, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/IFileSystemOperations.cs
      branch: db4ad772764a0196380e8dfdafde97cff8e53875
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ConcurrentAppendWithHttpMessagesAsync
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/IFileSystemOperations.cs
    startLine: 59
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.5-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nAppends to the specified file. This method supports multiple\nconcurrent appends to the file. NOTE: Concurrent append and\nnormal (serial) append CANNOT be used interchangeably. Once a\nfile has been appended to using either append option, it can only\nbe appended to using that append option.\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse> ConcurrentAppendWithHttpMessagesAsync(string accountName, string filePath, Stream streamContents, AppendModeType? appendMode = null, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function ConcurrentAppendWithHttpMessagesAsync(accountName As String, filePath As String, streamContents As Stream, appendMode As AppendModeType? = Nothing, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse)
    parameters:
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations\non.\n"
    - id: filePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file to which\nto append using concurrent append.\n"
    - id: streamContents
      type: System.IO.Stream
      description: "\nThe file contents to include when appending to the file.\n"
    - id: appendMode
      type: System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType}
      description: "\nIndicates the concurrent append call should create the file if it\ndoesn't exist or just open the existing file for append. Possible\nvalues include: 'autocreate'\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
  exceptions:
  - type: Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException
    commentId: T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException
    description: "\nThrown when the operation returned an invalid status code\n"
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.ConcurrentAppendWithHttpMessagesAsync(System.String, System.String, System.IO.Stream, System.Nullable(Of Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType), System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: ConcurrentAppendWithHttpMessagesAsync(String, String, Stream, Nullable(Of AppendModeType), Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.SetFileExpiryWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType,System.Nullable{System.Int64},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.SetFileExpiryWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType,System.Nullable{System.Int64},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: SetFileExpiryWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType,System.Nullable{System.Int64},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
  langs:
  - csharp
  - vb
  name: SetFileExpiryWithHttpMessagesAsync(String, String, ExpiryOptionType, Nullable<Int64>, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.SetFileExpiryWithHttpMessagesAsync(System.String, System.String, Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType, System.Nullable<System.Int64>, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/IFileSystemOperations.cs
      branch: db4ad772764a0196380e8dfdafde97cff8e53875
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SetFileExpiryWithHttpMessagesAsync
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/IFileSystemOperations.cs
    startLine: 101
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.5-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nSets or removes the expiration time on the specified file. This\noperation can only be executed against files. Folders are not\nsupported.\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse> SetFileExpiryWithHttpMessagesAsync(string accountName, string filePath, ExpiryOptionType expiryOption, long ? expireTime = null, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function SetFileExpiryWithHttpMessagesAsync(accountName As String, filePath As String, expiryOption As ExpiryOptionType, expireTime As Long? = Nothing, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse)
    parameters:
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations\non.\n"
    - id: filePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file on which\nto set or remove the expiration time.\n"
    - id: expiryOption
      type: Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType
      description: "\nIndicates the type of expiration to use for the file: 1.\nNeverExpire: ExpireTime is ignored. 2. RelativeToNow: ExpireTime\nis an integer in milliseconds representing the expiration date\nrelative to when file expiration is updated. 3.\nRelativeToCreationDate: ExpireTime is an integer in milliseconds\nrepresenting the expiration date relative to file creation. 4.\nAbsolute: ExpireTime is an integer in milliseconds, as a Unix\ntimestamp relative to 1/1/1970 00:00:00. Possible values include:\n'NeverExpire', 'RelativeToNow', 'RelativeToCreationDate',\n'Absolute'\n"
    - id: expireTime
      type: System.Nullable{System.Int64}
      description: "\nThe time that the file will expire, corresponding to the\nExpiryOption that was set.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
  exceptions:
  - type: Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException
    commentId: T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException
    description: "\nThrown when the operation returned an invalid status code\n"
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.SetFileExpiryWithHttpMessagesAsync(System.String, System.String, Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType, System.Nullable(Of System.Int64), System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: SetFileExpiryWithHttpMessagesAsync(String, String, ExpiryOptionType, Nullable(Of Int64), Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.CheckAccessWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.CheckAccessWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: CheckAccessWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
  langs:
  - csharp
  - vb
  name: CheckAccessWithHttpMessagesAsync(String, String, String, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.CheckAccessWithHttpMessagesAsync(System.String, System.String, System.String, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/IFileSystemOperations.cs
      branch: db4ad772764a0196380e8dfdafde97cff8e53875
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CheckAccessWithHttpMessagesAsync
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/IFileSystemOperations.cs
    startLine: 129
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.5-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nChecks if the specified access is available at the given path.\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse> CheckAccessWithHttpMessagesAsync(string accountName, string path, string fsaction = null, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function CheckAccessWithHttpMessagesAsync(accountName As String, path As String, fsaction As String = Nothing, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse)
    parameters:
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations\non.\n"
    - id: path
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or\ndirectory for which to check access.\n"
    - id: fsaction
      type: System.String
      description: "\nFile system operation read/write/execute in string form, matching\nregex pattern '[rwx-]{3}'\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
  exceptions:
  - type: Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException
    commentId: T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException
    description: "\nThrown when the operation returned an invalid status code\n"
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.CheckAccessWithHttpMessagesAsync(System.String, System.String, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: CheckAccessWithHttpMessagesAsync(String, String, String, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.MkdirsWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.MkdirsWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: MkdirsWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
  langs:
  - csharp
  - vb
  name: MkdirsWithHttpMessagesAsync(String, String, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.MkdirsWithHttpMessagesAsync(System.String, System.String, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/IFileSystemOperations.cs
      branch: db4ad772764a0196380e8dfdafde97cff8e53875
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MkdirsWithHttpMessagesAsync
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/IFileSystemOperations.cs
    startLine: 156
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.5-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nCreates a directory.\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse<FileOperationResult>> MkdirsWithHttpMessagesAsync(string accountName, string path, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function MkdirsWithHttpMessagesAsync(accountName As String, path As String, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse(Of FileOperationResult))
    parameters:
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations\non.\n"
    - id: path
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the directory to\ncreate.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse{Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult}}
  exceptions:
  - type: Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException
    commentId: T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException
    description: "\nThrown when the operation returned an invalid status code\n"
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.MkdirsWithHttpMessagesAsync(System.String, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: MkdirsWithHttpMessagesAsync(String, String, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.ConcatWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.ConcatWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: ConcatWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
  langs:
  - csharp
  - vb
  name: ConcatWithHttpMessagesAsync(String, String, IList<String>, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.ConcatWithHttpMessagesAsync(System.String, System.String, System.Collections.Generic.IList<System.String>, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/IFileSystemOperations.cs
      branch: db4ad772764a0196380e8dfdafde97cff8e53875
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ConcatWithHttpMessagesAsync
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/IFileSystemOperations.cs
    startLine: 186
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.5-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nConcatenates the list of source files into the destination file,\nremoving all source files upon success.\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse> ConcatWithHttpMessagesAsync(string accountName, string destinationPath, IList<string> sources, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function ConcatWithHttpMessagesAsync(accountName As String, destinationPath As String, sources As IList(Of String), customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse)
    parameters:
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations\non.\n"
    - id: destinationPath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the destination\nfile resulting from the concatenation.\n"
    - id: sources
      type: System.Collections.Generic.IList{System.String}
      description: "\nA list of comma seperated Data Lake Store paths (starting with\n'/') of the files to concatenate, in the order in which they\nshould be concatenated.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
  exceptions:
  - type: Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException
    commentId: T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException
    description: "\nThrown when the operation returned an invalid status code\n"
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.ConcatWithHttpMessagesAsync(System.String, System.String, System.Collections.Generic.IList(Of System.String), System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: ConcatWithHttpMessagesAsync(String, String, IList(Of String), Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.MsConcatWithHttpMessagesAsync(System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.MsConcatWithHttpMessagesAsync(System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: MsConcatWithHttpMessagesAsync(System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
  langs:
  - csharp
  - vb
  name: MsConcatWithHttpMessagesAsync(String, String, Stream, Nullable<Boolean>, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.MsConcatWithHttpMessagesAsync(System.String, System.String, System.IO.Stream, System.Nullable<System.Boolean>, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/IFileSystemOperations.cs
      branch: db4ad772764a0196380e8dfdafde97cff8e53875
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MsConcatWithHttpMessagesAsync
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/IFileSystemOperations.cs
    startLine: 228
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.5-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nConcatenates the list of source files into the destination file,\ndeleting all source files upon success. This method accepts more\nsource file paths than the Concat method. This method and the\nparameters it accepts are subject to change for usability in an\nupcoming version.\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse> MsConcatWithHttpMessagesAsync(string accountName, string msConcatDestinationPath, Stream streamContents, bool ? deleteSourceDirectory = null, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function MsConcatWithHttpMessagesAsync(accountName As String, msConcatDestinationPath As String, streamContents As Stream, deleteSourceDirectory As Boolean? = Nothing, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse)
    parameters:
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations\non.\n"
    - id: msConcatDestinationPath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the destination\nfile resulting from the concatenation.\n"
    - id: streamContents
      type: System.IO.Stream
      description: "\nA list of Data Lake Store paths (starting with '/') of the source\nfiles. Must be in the format: sources=<comma separated list>\n"
    - id: deleteSourceDirectory
      type: System.Nullable{System.Boolean}
      description: "\nIndicates that as an optimization instead of deleting each\nindividual source stream, delete the source stream folder if all\nstreams are in the same folder instead. This results in a\nsubstantial performance improvement when the only streams in the\nfolder are part of the concatenation operation. WARNING: This\nincludes the deletion of any other files that are not source\nfiles. Only set this to true when source files are the only files\nin the source directory.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
  exceptions:
  - type: Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException
    commentId: T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException
    description: "\nThrown when the operation returned an invalid status code\n"
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.MsConcatWithHttpMessagesAsync(System.String, System.String, System.IO.Stream, System.Nullable(Of System.Boolean), System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: MsConcatWithHttpMessagesAsync(String, String, Stream, Nullable(Of Boolean), Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.ListFileStatusWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.ListFileStatusWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: ListFileStatusWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
  langs:
  - csharp
  - vb
  name: ListFileStatusWithHttpMessagesAsync(String, String, Nullable<Int32>, String, String, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.ListFileStatusWithHttpMessagesAsync(System.String, System.String, System.Nullable<System.Int32>, System.String, System.String, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/IFileSystemOperations.cs
      branch: db4ad772764a0196380e8dfdafde97cff8e53875
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListFileStatusWithHttpMessagesAsync
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/IFileSystemOperations.cs
    startLine: 271
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.5-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nGet the list of file status objects specified by the file path,\nwith optional pagination parameters\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse<FileStatusesResult>> ListFileStatusWithHttpMessagesAsync(string accountName, string listFilePath, int ? listSize = null, string listAfter = null, string listBefore = null, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function ListFileStatusWithHttpMessagesAsync(accountName As String, listFilePath As String, listSize As Integer? = Nothing, listAfter As String = Nothing, listBefore As String = Nothing, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse(Of FileStatusesResult))
    parameters:
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations\non.\n"
    - id: listFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the directory to\nlist.\n"
    - id: listSize
      type: System.Nullable{System.Int32}
      description: "\nGets or sets the number of items to return. Optional.\n"
    - id: listAfter
      type: System.String
      description: "\nGets or sets the item or lexographical index after which to begin\nreturning results. For example, a file list of 'a','b','d' and\nlistAfter='b' will return 'd', and a listAfter='c' will also\nreturn 'd'. Optional.\n"
    - id: listBefore
      type: System.String
      description: "\nGets or sets the item or lexographical index before which to begin\nreturning results. For example, a file list of 'a','b','d' and\nlistBefore='d' will return 'a','b', and a listBefore='c' will\nalso return 'a','b'. Optional.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse{Microsoft.Azure.Management.DataLake.Store.Models.FileStatusesResult}}
  exceptions:
  - type: Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException
    commentId: T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException
    description: "\nThrown when the operation returned an invalid status code\n"
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.ListFileStatusWithHttpMessagesAsync(System.String, System.String, System.Nullable(Of System.Int32), System.String, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: ListFileStatusWithHttpMessagesAsync(String, String, Nullable(Of Int32), String, String, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.GetContentSummaryWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.GetContentSummaryWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: GetContentSummaryWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
  langs:
  - csharp
  - vb
  name: GetContentSummaryWithHttpMessagesAsync(String, String, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.GetContentSummaryWithHttpMessagesAsync(System.String, System.String, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/IFileSystemOperations.cs
      branch: db4ad772764a0196380e8dfdafde97cff8e53875
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetContentSummaryWithHttpMessagesAsync
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/IFileSystemOperations.cs
    startLine: 298
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.5-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nGets the file content summary object specified by the file path.\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse<ContentSummaryResult>> GetContentSummaryWithHttpMessagesAsync(string accountName, string getContentSummaryFilePath, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function GetContentSummaryWithHttpMessagesAsync(accountName As String, getContentSummaryFilePath As String, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse(Of ContentSummaryResult))
    parameters:
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations\non.\n"
    - id: getContentSummaryFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file for which\nto retrieve the summary.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse{Microsoft.Azure.Management.DataLake.Store.Models.ContentSummaryResult}}
  exceptions:
  - type: Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException
    commentId: T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException
    description: "\nThrown when the operation returned an invalid status code\n"
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.GetContentSummaryWithHttpMessagesAsync(System.String, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: GetContentSummaryWithHttpMessagesAsync(String, String, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.GetFileStatusWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.GetFileStatusWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: GetFileStatusWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
  langs:
  - csharp
  - vb
  name: GetFileStatusWithHttpMessagesAsync(String, String, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.GetFileStatusWithHttpMessagesAsync(System.String, System.String, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/IFileSystemOperations.cs
      branch: db4ad772764a0196380e8dfdafde97cff8e53875
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetFileStatusWithHttpMessagesAsync
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/IFileSystemOperations.cs
    startLine: 325
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.5-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nGet the file status object specified by the file path.\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse<FileStatusResult>> GetFileStatusWithHttpMessagesAsync(string accountName, string getFilePath, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function GetFileStatusWithHttpMessagesAsync(accountName As String, getFilePath As String, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse(Of FileStatusResult))
    parameters:
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations\non.\n"
    - id: getFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or\ndirectory for which to retrieve the status.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse{Microsoft.Azure.Management.DataLake.Store.Models.FileStatusResult}}
  exceptions:
  - type: Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException
    commentId: T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException
    description: "\nThrown when the operation returned an invalid status code\n"
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.GetFileStatusWithHttpMessagesAsync(System.String, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: GetFileStatusWithHttpMessagesAsync(String, String, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.AppendWithHttpMessagesAsync(System.String,System.String,System.IO.Stream,System.Nullable{System.Int64},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.AppendWithHttpMessagesAsync(System.String,System.String,System.IO.Stream,System.Nullable{System.Int64},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: AppendWithHttpMessagesAsync(System.String,System.String,System.IO.Stream,System.Nullable{System.Int64},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
  langs:
  - csharp
  - vb
  name: AppendWithHttpMessagesAsync(String, String, Stream, Nullable<Int64>, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.AppendWithHttpMessagesAsync(System.String, System.String, System.IO.Stream, System.Nullable<System.Int64>, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/IFileSystemOperations.cs
      branch: db4ad772764a0196380e8dfdafde97cff8e53875
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AppendWithHttpMessagesAsync
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/IFileSystemOperations.cs
    startLine: 361
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.5-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nAppends to the specified file. This method does not support\nmultiple concurrent appends to the file. NOTE: Concurrent append\nand normal (serial) append CANNOT be used interchangeably. Once a\nfile has been appended to using either append option, it can only\nbe appended to using that append option. Use the ConcurrentAppend\noption if you would like support for concurrent appends.\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse> AppendWithHttpMessagesAsync(string accountName, string directFilePath, Stream streamContents, long ? offset = null, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function AppendWithHttpMessagesAsync(accountName As String, directFilePath As String, streamContents As Stream, offset As Long? = Nothing, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse)
    parameters:
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations\non.\n"
    - id: directFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file to which\nto append.\n"
    - id: streamContents
      type: System.IO.Stream
      description: "\nThe file contents to include when appending to the file.\n"
    - id: offset
      type: System.Nullable{System.Int64}
      description: "\nThe optional offset in the stream to begin the append operation.\nDefault is to append at the end of the stream.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
  exceptions:
  - type: Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException
    commentId: T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException
    description: "\nThrown when the operation returned an invalid status code\n"
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.AppendWithHttpMessagesAsync(System.String, System.String, System.IO.Stream, System.Nullable(Of System.Int64), System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: AppendWithHttpMessagesAsync(String, String, Stream, Nullable(Of Int64), Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.CreateWithHttpMessagesAsync(System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.CreateWithHttpMessagesAsync(System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: CreateWithHttpMessagesAsync(System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
  langs:
  - csharp
  - vb
  name: CreateWithHttpMessagesAsync(String, String, Stream, Nullable<Boolean>, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.CreateWithHttpMessagesAsync(System.String, System.String, System.IO.Stream, System.Nullable<System.Boolean>, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/IFileSystemOperations.cs
      branch: db4ad772764a0196380e8dfdafde97cff8e53875
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateWithHttpMessagesAsync
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/IFileSystemOperations.cs
    startLine: 392
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.5-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nCreates a file with optionally specified content.\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse> CreateWithHttpMessagesAsync(string accountName, string directFilePath, Stream streamContents = null, bool ? overwrite = null, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function CreateWithHttpMessagesAsync(accountName As String, directFilePath As String, streamContents As Stream = Nothing, overwrite As Boolean? = Nothing, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse)
    parameters:
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations\non.\n"
    - id: directFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file to create.\n"
    - id: streamContents
      type: System.IO.Stream
      description: "\nThe file contents to include when creating the file. This\nparameter is optional, resulting in an empty file if not\nspecified.\n"
    - id: overwrite
      type: System.Nullable{System.Boolean}
      description: "\nThe indication of if the file should be overwritten.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
  exceptions:
  - type: Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException
    commentId: T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException
    description: "\nThrown when the operation returned an invalid status code\n"
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.CreateWithHttpMessagesAsync(System.String, System.String, System.IO.Stream, System.Nullable(Of System.Boolean), System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: CreateWithHttpMessagesAsync(String, String, Stream, Nullable(Of Boolean), Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.OpenWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.OpenWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: OpenWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
  langs:
  - csharp
  - vb
  name: OpenWithHttpMessagesAsync(String, String, Nullable<Int64>, Nullable<Int64>, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.OpenWithHttpMessagesAsync(System.String, System.String, System.Nullable<System.Int64>, System.Nullable<System.Int64>, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/IFileSystemOperations.cs
      branch: db4ad772764a0196380e8dfdafde97cff8e53875
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: OpenWithHttpMessagesAsync
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/IFileSystemOperations.cs
    startLine: 422
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.5-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nOpens and reads from the specified file.\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse<Stream>> OpenWithHttpMessagesAsync(string accountName, string directFilePath, long ? length = null, long ? offset = null, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function OpenWithHttpMessagesAsync(accountName As String, directFilePath As String, length As Long? = Nothing, offset As Long? = Nothing, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse(Of Stream))
    parameters:
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations\non.\n"
    - id: directFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file to open.\n"
    - id: length
      type: System.Nullable{System.Int64}
      description: "\n"
    - id: offset
      type: System.Nullable{System.Int64}
      description: "\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse{System.IO.Stream}}
  exceptions:
  - type: Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException
    commentId: T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException
    description: "\nThrown when the operation returned an invalid status code\n"
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.OpenWithHttpMessagesAsync(System.String, System.String, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64), System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: OpenWithHttpMessagesAsync(String, String, Nullable(Of Int64), Nullable(Of Int64), Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.SetAclWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.SetAclWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: SetAclWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
  langs:
  - csharp
  - vb
  name: SetAclWithHttpMessagesAsync(String, String, String, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.SetAclWithHttpMessagesAsync(System.String, System.String, System.String, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/IFileSystemOperations.cs
      branch: db4ad772764a0196380e8dfdafde97cff8e53875
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SetAclWithHttpMessagesAsync
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/IFileSystemOperations.cs
    startLine: 450
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.5-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nSets the Access Control List (ACL) for a file or folder.\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse> SetAclWithHttpMessagesAsync(string accountName, string setAclFilePath, string aclspec, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function SetAclWithHttpMessagesAsync(accountName As String, setAclFilePath As String, aclspec As String, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse)
    parameters:
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations\non.\n"
    - id: setAclFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or\ndirectory on which to set the ACL.\n"
    - id: aclspec
      type: System.String
      description: "\nThe ACL spec included in ACL creation operations in the format\n'[default:]user|group|other::r|-w|-x|-'\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
  exceptions:
  - type: Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException
    commentId: T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException
    description: "\nThrown when the operation returned an invalid status code\n"
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.SetAclWithHttpMessagesAsync(System.String, System.String, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: SetAclWithHttpMessagesAsync(String, String, String, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.ModifyAclEntriesWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.ModifyAclEntriesWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: ModifyAclEntriesWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
  langs:
  - csharp
  - vb
  name: ModifyAclEntriesWithHttpMessagesAsync(String, String, String, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.ModifyAclEntriesWithHttpMessagesAsync(System.String, System.String, System.String, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/IFileSystemOperations.cs
      branch: db4ad772764a0196380e8dfdafde97cff8e53875
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ModifyAclEntriesWithHttpMessagesAsync
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/IFileSystemOperations.cs
    startLine: 479
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.5-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nModifies existing Access Control List (ACL) entries on a file or\nfolder.\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse> ModifyAclEntriesWithHttpMessagesAsync(string accountName, string modifyAclFilePath, string aclspec, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function ModifyAclEntriesWithHttpMessagesAsync(accountName As String, modifyAclFilePath As String, aclspec As String, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse)
    parameters:
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations\non.\n"
    - id: modifyAclFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or\ndirectory with the ACL being modified.\n"
    - id: aclspec
      type: System.String
      description: "\nThe ACL specification included in ACL modification operations in\nthe format '[default:]user|group|other::r|-w|-x|-'\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
  exceptions:
  - type: Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException
    commentId: T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException
    description: "\nThrown when the operation returned an invalid status code\n"
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.ModifyAclEntriesWithHttpMessagesAsync(System.String, System.String, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: ModifyAclEntriesWithHttpMessagesAsync(String, String, String, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.RemoveAclEntriesWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.RemoveAclEntriesWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: RemoveAclEntriesWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
  langs:
  - csharp
  - vb
  name: RemoveAclEntriesWithHttpMessagesAsync(String, String, String, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.RemoveAclEntriesWithHttpMessagesAsync(System.String, System.String, System.String, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/IFileSystemOperations.cs
      branch: db4ad772764a0196380e8dfdafde97cff8e53875
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RemoveAclEntriesWithHttpMessagesAsync
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/IFileSystemOperations.cs
    startLine: 508
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.5-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nRemoves existing Access Control List (ACL) entries for a file or\nfolder.\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse> RemoveAclEntriesWithHttpMessagesAsync(string accountName, string removeAclFilePath, string aclspec, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function RemoveAclEntriesWithHttpMessagesAsync(accountName As String, removeAclFilePath As String, aclspec As String, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse)
    parameters:
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations\non.\n"
    - id: removeAclFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or\ndirectory with the ACL being removed.\n"
    - id: aclspec
      type: System.String
      description: "\nThe ACL spec included in ACL removal operations in the format\n'[default:]user|group|other'\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
  exceptions:
  - type: Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException
    commentId: T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException
    description: "\nThrown when the operation returned an invalid status code\n"
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.RemoveAclEntriesWithHttpMessagesAsync(System.String, System.String, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: RemoveAclEntriesWithHttpMessagesAsync(String, String, String, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.RemoveDefaultAclWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.RemoveDefaultAclWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: RemoveDefaultAclWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
  langs:
  - csharp
  - vb
  name: RemoveDefaultAclWithHttpMessagesAsync(String, String, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.RemoveDefaultAclWithHttpMessagesAsync(System.String, System.String, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/IFileSystemOperations.cs
      branch: db4ad772764a0196380e8dfdafde97cff8e53875
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RemoveDefaultAclWithHttpMessagesAsync
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/IFileSystemOperations.cs
    startLine: 533
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.5-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nRemoves the existing Default Access Control List (ACL) of the\nspecified directory.\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse> RemoveDefaultAclWithHttpMessagesAsync(string accountName, string defaultAclFilePath, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function RemoveDefaultAclWithHttpMessagesAsync(accountName As String, defaultAclFilePath As String, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse)
    parameters:
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations\non.\n"
    - id: defaultAclFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the directory with\nthe default ACL being removed.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
  exceptions:
  - type: Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException
    commentId: T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException
    description: "\nThrown when the operation returned an invalid status code\n"
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.RemoveDefaultAclWithHttpMessagesAsync(System.String, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: RemoveDefaultAclWithHttpMessagesAsync(String, String, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.RemoveAclWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.RemoveAclWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: RemoveAclWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
  langs:
  - csharp
  - vb
  name: RemoveAclWithHttpMessagesAsync(String, String, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.RemoveAclWithHttpMessagesAsync(System.String, System.String, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/IFileSystemOperations.cs
      branch: db4ad772764a0196380e8dfdafde97cff8e53875
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RemoveAclWithHttpMessagesAsync
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/IFileSystemOperations.cs
    startLine: 558
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.5-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nRemoves the existing Access Control List (ACL) of the specified\nfile or directory.\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse> RemoveAclWithHttpMessagesAsync(string accountName, string aclFilePath, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function RemoveAclWithHttpMessagesAsync(accountName As String, aclFilePath As String, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse)
    parameters:
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations\non.\n"
    - id: aclFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or\ndirectory with the ACL being removed.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
  exceptions:
  - type: Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException
    commentId: T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException
    description: "\nThrown when the operation returned an invalid status code\n"
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.RemoveAclWithHttpMessagesAsync(System.String, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: RemoveAclWithHttpMessagesAsync(String, String, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.GetAclStatusWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.GetAclStatusWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: GetAclStatusWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
  langs:
  - csharp
  - vb
  name: GetAclStatusWithHttpMessagesAsync(String, String, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.GetAclStatusWithHttpMessagesAsync(System.String, System.String, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/IFileSystemOperations.cs
      branch: db4ad772764a0196380e8dfdafde97cff8e53875
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetAclStatusWithHttpMessagesAsync
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/IFileSystemOperations.cs
    startLine: 586
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.5-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nGets Access Control List (ACL) entries for the specified file or\ndirectory.\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse<AclStatusResult>> GetAclStatusWithHttpMessagesAsync(string accountName, string aclFilePath, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function GetAclStatusWithHttpMessagesAsync(accountName As String, aclFilePath As String, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse(Of AclStatusResult))
    parameters:
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations\non.\n"
    - id: aclFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or\ndirectory for which to get the ACL.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse{Microsoft.Azure.Management.DataLake.Store.Models.AclStatusResult}}
  exceptions:
  - type: Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException
    commentId: T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException
    description: "\nThrown when the operation returned an invalid status code\n"
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.GetAclStatusWithHttpMessagesAsync(System.String, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: GetAclStatusWithHttpMessagesAsync(String, String, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: DeleteWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
  langs:
  - csharp
  - vb
  name: DeleteWithHttpMessagesAsync(String, String, Nullable<Boolean>, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.DeleteWithHttpMessagesAsync(System.String, System.String, System.Nullable<System.Boolean>, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/IFileSystemOperations.cs
      branch: db4ad772764a0196380e8dfdafde97cff8e53875
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeleteWithHttpMessagesAsync
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/IFileSystemOperations.cs
    startLine: 616
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.5-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nDeletes the requested file or directory, optionally recursively.\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse<FileOperationResult>> DeleteWithHttpMessagesAsync(string accountName, string filePath, bool ? recursive = null, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function DeleteWithHttpMessagesAsync(accountName As String, filePath As String, recursive As Boolean? = Nothing, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse(Of FileOperationResult))
    parameters:
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations\non.\n"
    - id: filePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or\ndirectory to delete.\n"
    - id: recursive
      type: System.Nullable{System.Boolean}
      description: "\nThe optional switch indicating if the delete should be recursive\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse{Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult}}
  exceptions:
  - type: Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException
    commentId: T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException
    description: "\nThrown when the operation returned an invalid status code\n"
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.DeleteWithHttpMessagesAsync(System.String, System.String, System.Nullable(Of System.Boolean), System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: DeleteWithHttpMessagesAsync(String, String, Nullable(Of Boolean), Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.RenameWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.RenameWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: RenameWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
  langs:
  - csharp
  - vb
  name: RenameWithHttpMessagesAsync(String, String, String, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.RenameWithHttpMessagesAsync(System.String, System.String, System.String, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/IFileSystemOperations.cs
      branch: db4ad772764a0196380e8dfdafde97cff8e53875
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RenameWithHttpMessagesAsync
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/IFileSystemOperations.cs
    startLine: 646
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.5-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nRename a file or directory.\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse<FileOperationResult>> RenameWithHttpMessagesAsync(string accountName, string renameFilePath, string destination, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function RenameWithHttpMessagesAsync(accountName As String, renameFilePath As String, destination As String, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse(Of FileOperationResult))
    parameters:
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations\non.\n"
    - id: renameFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or\ndirectory to move/rename.\n"
    - id: destination
      type: System.String
      description: "\nThe path to move/rename the file or folder to\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse{Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult}}
  exceptions:
  - type: Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException
    commentId: T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException
    description: "\nThrown when the operation returned an invalid status code\n"
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.RenameWithHttpMessagesAsync(System.String, System.String, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: RenameWithHttpMessagesAsync(String, String, String, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.SetOwnerWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.SetOwnerWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: SetOwnerWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
  langs:
  - csharp
  - vb
  name: SetOwnerWithHttpMessagesAsync(String, String, String, String, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.SetOwnerWithHttpMessagesAsync(System.String, System.String, System.String, System.String, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/IFileSystemOperations.cs
      branch: db4ad772764a0196380e8dfdafde97cff8e53875
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SetOwnerWithHttpMessagesAsync
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/IFileSystemOperations.cs
    startLine: 678
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.5-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nSets the owner of a file or directory.\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse> SetOwnerWithHttpMessagesAsync(string accountName, string setOwnerFilePath, string owner = null, string group = null, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function SetOwnerWithHttpMessagesAsync(accountName As String, setOwnerFilePath As String, owner As String = Nothing, group As String = Nothing, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse)
    parameters:
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations\non.\n"
    - id: setOwnerFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or\ndirectory for which to set the owner.\n"
    - id: owner
      type: System.String
      description: "\nThe AAD Object ID of the user owner of the file or directory. If\nempty, the property will remain unchanged.\n"
    - id: group
      type: System.String
      description: "\nThe AAD Object ID of the group owner of the file or directory. If\nempty, the property will remain unchanged.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
  exceptions:
  - type: Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException
    commentId: T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException
    description: "\nThrown when the operation returned an invalid status code\n"
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.SetOwnerWithHttpMessagesAsync(System.String, System.String, System.String, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: SetOwnerWithHttpMessagesAsync(String, String, String, String, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.SetPermissionWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.SetPermissionWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: SetPermissionWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations
  langs:
  - csharp
  - vb
  name: SetPermissionWithHttpMessagesAsync(String, String, String, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.SetPermissionWithHttpMessagesAsync(System.String, System.String, System.String, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/IFileSystemOperations.cs
      branch: db4ad772764a0196380e8dfdafde97cff8e53875
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SetPermissionWithHttpMessagesAsync
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/IFileSystemOperations.cs
    startLine: 706
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.5-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store
  summary: "\nSets the permission of the file or folder.\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse> SetPermissionWithHttpMessagesAsync(string accountName, string setPermissionFilePath, string permission = null, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function SetPermissionWithHttpMessagesAsync(accountName As String, setPermissionFilePath As String, permission As String = Nothing, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse)
    parameters:
    - id: accountName
      type: System.String
      description: "\nThe Azure Data Lake Store account to execute filesystem operations\non.\n"
    - id: setPermissionFilePath
      type: System.String
      description: "\nThe Data Lake Store path (starting with '/') of the file or\ndirectory for which to set the permission.\n"
    - id: permission
      type: System.String
      description: "\nA string representation of the permission (i.e 'rwx'). If empty,\nthis property remains unchanged.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
  exceptions:
  - type: Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException
    commentId: T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException
    description: "\nThrown when the operation returned an invalid status code\n"
  fullName.vb: Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.SetPermissionWithHttpMessagesAsync(System.String, System.String, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: SetPermissionWithHttpMessagesAsync(String, String, String, Dictionary(Of String, List(Of String)), CancellationToken)
references:
- uid: Microsoft.Azure.Management.DataLake.Store
  isExternal: false
  name: Microsoft.Azure.Management.DataLake.Store
  fullName: Microsoft.Azure.Management.DataLake.Store
- uid: Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException
  isExternal: false
  name: AdlsErrorException
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, List<String>>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>
  fullname.vb: System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String))
  name.vb: Dictionary(Of String, List(Of String))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{AzureOperationResponse{System.Boolean}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AzureOperationResponse<Boolean>>
  fullName: System.Threading.Tasks.Task<AzureOperationResponse<System.Boolean>>
  fullname.vb: System.Threading.Tasks.Task(Of AzureOperationResponse(Of System.Boolean))
  name.vb: Task(Of AzureOperationResponse(Of Boolean))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: AzureOperationResponse`1
    name: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: AzureOperationResponse`1
    name: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.Generic.Dictionary`2
  parent: System.Collections.Generic
  isExternal: true
  name: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  fullname.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  fullName: System.IO.Stream
- uid: System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType}
  parent: System
  definition: System.Nullable`1
  name: Nullable<AppendModeType>
  fullName: System.Nullable<Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType>
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType)
  name.vb: Nullable(Of AppendModeType)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType
    name: AppendModeType
    fullName: Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType
    name: AppendModeType
    fullName: Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{AzureOperationResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AzureOperationResponse>
  fullName: System.Threading.Tasks.Task<AzureOperationResponse>
  fullname.vb: System.Threading.Tasks.Task(Of AzureOperationResponse)
  name.vb: Task(Of AzureOperationResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: AzureOperationResponse
    name: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: AzureOperationResponse
    name: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: )
    fullName: )
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType
  parent: Microsoft.Azure.Management.DataLake.Store.Models
  isExternal: false
  name: ExpiryOptionType
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType
- uid: System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  fullname.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.Store.Models
  isExternal: false
  name: Microsoft.Azure.Management.DataLake.Store.Models
  fullName: Microsoft.Azure.Management.DataLake.Store.Models
- uid: System.Threading.Tasks.Task{AzureOperationResponse{Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AzureOperationResponse<FileOperationResult>>
  fullName: System.Threading.Tasks.Task<AzureOperationResponse<Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult>>
  fullname.vb: System.Threading.Tasks.Task(Of AzureOperationResponse(Of Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult))
  name.vb: Task(Of AzureOperationResponse(Of FileOperationResult))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: AzureOperationResponse`1
    name: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult
    name: FileOperationResult
    fullName: Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: AzureOperationResponse`1
    name: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult
    name: FileOperationResult
    fullName: Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: true
  name: IList<T>
  fullName: System.Collections.Generic.IList<T>
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{AzureOperationResponse{Microsoft.Azure.Management.DataLake.Store.Models.FileStatusesResult}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AzureOperationResponse<FileStatusesResult>>
  fullName: System.Threading.Tasks.Task<AzureOperationResponse<Microsoft.Azure.Management.DataLake.Store.Models.FileStatusesResult>>
  fullname.vb: System.Threading.Tasks.Task(Of AzureOperationResponse(Of Microsoft.Azure.Management.DataLake.Store.Models.FileStatusesResult))
  name.vb: Task(Of AzureOperationResponse(Of FileStatusesResult))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: AzureOperationResponse`1
    name: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.Store.Models.FileStatusesResult
    name: FileStatusesResult
    fullName: Microsoft.Azure.Management.DataLake.Store.Models.FileStatusesResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: AzureOperationResponse`1
    name: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.Store.Models.FileStatusesResult
    name: FileStatusesResult
    fullName: Microsoft.Azure.Management.DataLake.Store.Models.FileStatusesResult
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{AzureOperationResponse{Microsoft.Azure.Management.DataLake.Store.Models.ContentSummaryResult}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AzureOperationResponse<ContentSummaryResult>>
  fullName: System.Threading.Tasks.Task<AzureOperationResponse<Microsoft.Azure.Management.DataLake.Store.Models.ContentSummaryResult>>
  fullname.vb: System.Threading.Tasks.Task(Of AzureOperationResponse(Of Microsoft.Azure.Management.DataLake.Store.Models.ContentSummaryResult))
  name.vb: Task(Of AzureOperationResponse(Of ContentSummaryResult))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: AzureOperationResponse`1
    name: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.Store.Models.ContentSummaryResult
    name: ContentSummaryResult
    fullName: Microsoft.Azure.Management.DataLake.Store.Models.ContentSummaryResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: AzureOperationResponse`1
    name: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.Store.Models.ContentSummaryResult
    name: ContentSummaryResult
    fullName: Microsoft.Azure.Management.DataLake.Store.Models.ContentSummaryResult
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{AzureOperationResponse{Microsoft.Azure.Management.DataLake.Store.Models.FileStatusResult}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AzureOperationResponse<FileStatusResult>>
  fullName: System.Threading.Tasks.Task<AzureOperationResponse<Microsoft.Azure.Management.DataLake.Store.Models.FileStatusResult>>
  fullname.vb: System.Threading.Tasks.Task(Of AzureOperationResponse(Of Microsoft.Azure.Management.DataLake.Store.Models.FileStatusResult))
  name.vb: Task(Of AzureOperationResponse(Of FileStatusResult))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: AzureOperationResponse`1
    name: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.Store.Models.FileStatusResult
    name: FileStatusResult
    fullName: Microsoft.Azure.Management.DataLake.Store.Models.FileStatusResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: AzureOperationResponse`1
    name: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.Store.Models.FileStatusResult
    name: FileStatusResult
    fullName: Microsoft.Azure.Management.DataLake.Store.Models.FileStatusResult
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{AzureOperationResponse{System.IO.Stream}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AzureOperationResponse<Stream>>
  fullName: System.Threading.Tasks.Task<AzureOperationResponse<System.IO.Stream>>
  fullname.vb: System.Threading.Tasks.Task(Of AzureOperationResponse(Of System.IO.Stream))
  name.vb: Task(Of AzureOperationResponse(Of Stream))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: AzureOperationResponse`1
    name: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: <
    fullName: <
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: AzureOperationResponse`1
    name: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{AzureOperationResponse{Microsoft.Azure.Management.DataLake.Store.Models.AclStatusResult}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AzureOperationResponse<AclStatusResult>>
  fullName: System.Threading.Tasks.Task<AzureOperationResponse<Microsoft.Azure.Management.DataLake.Store.Models.AclStatusResult>>
  fullname.vb: System.Threading.Tasks.Task(Of AzureOperationResponse(Of Microsoft.Azure.Management.DataLake.Store.Models.AclStatusResult))
  name.vb: Task(Of AzureOperationResponse(Of AclStatusResult))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: AzureOperationResponse`1
    name: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataLake.Store.Models.AclStatusResult
    name: AclStatusResult
    fullName: Microsoft.Azure.Management.DataLake.Store.Models.AclStatusResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: AzureOperationResponse`1
    name: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataLake.Store.Models.AclStatusResult
    name: AclStatusResult
    fullName: Microsoft.Azure.Management.DataLake.Store.Models.AclStatusResult
  - name: )
    fullName: )
  - name: )
    fullName: )
