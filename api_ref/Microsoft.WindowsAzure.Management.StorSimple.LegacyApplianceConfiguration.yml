### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.StorSimple.LegacyApplianceConfiguration
  commentId: T:Microsoft.WindowsAzure.Management.StorSimple.LegacyApplianceConfiguration
  id: LegacyApplianceConfiguration
  parent: Microsoft.WindowsAzure.Management.StorSimple
  children:
  - Microsoft.WindowsAzure.Management.StorSimple.LegacyApplianceConfiguration.ConfigFile
  - Microsoft.WindowsAzure.Management.StorSimple.LegacyApplianceConfiguration.Details
  - Microsoft.WindowsAzure.Management.StorSimple.LegacyApplianceConfiguration.ImportedOn
  - Microsoft.WindowsAzure.Management.StorSimple.LegacyApplianceConfiguration.LegacyConfigId
  - Microsoft.WindowsAzure.Management.StorSimple.LegacyApplianceConfiguration.Result
  - Microsoft.WindowsAzure.Management.StorSimple.LegacyApplianceConfiguration.TargetApplianceName
  langs:
  - csharp
  - vb
  name: LegacyApplianceConfiguration
  nameWithType: LegacyApplianceConfiguration
  fullName: Microsoft.WindowsAzure.Management.StorSimple.LegacyApplianceConfiguration
  type: Class
  source:
    remote:
      path: src/ServiceManagement/StorSimple/StorSimple/Customization/Models/LegacyApplianceConfiguration.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LegacyApplianceConfiguration
    path: src/ServiceManagement/StorSimple/StorSimple/Customization/Models/LegacyApplianceConfiguration.cs
    startLine: 21
  assemblies:
  - Microsoft.WindowsAzure.Management.StorSimple
  namespace: Microsoft.WindowsAzure.Management.StorSimple
  summary: "\nLegacy appliance configuration to be returned by import legacy config cmdlet\n"
  example: []
  syntax:
    content: public class LegacyApplianceConfiguration
    content.vb: Public Class LegacyApplianceConfiguration
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.StorSimple.LegacyApplianceConfiguration.LegacyConfigId
  commentId: P:Microsoft.WindowsAzure.Management.StorSimple.LegacyApplianceConfiguration.LegacyConfigId
  id: LegacyConfigId
  parent: Microsoft.WindowsAzure.Management.StorSimple.LegacyApplianceConfiguration
  langs:
  - csharp
  - vb
  name: LegacyConfigId
  nameWithType: LegacyApplianceConfiguration.LegacyConfigId
  fullName: Microsoft.WindowsAzure.Management.StorSimple.LegacyApplianceConfiguration.LegacyConfigId
  type: Property
  source:
    remote:
      path: src/ServiceManagement/StorSimple/StorSimple/Customization/Models/LegacyApplianceConfiguration.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LegacyConfigId
    path: src/ServiceManagement/StorSimple/StorSimple/Customization/Models/LegacyApplianceConfiguration.cs
    startLine: 26
  assemblies:
  - Microsoft.WindowsAzure.Management.StorSimple
  namespace: Microsoft.WindowsAzure.Management.StorSimple
  summary: "\nGets or sets the unique identifier for the config which being imported\n"
  example: []
  syntax:
    content: public string LegacyConfigId { get; set; }
    content.vb: Public Property LegacyConfigId As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.StorSimple.LegacyApplianceConfiguration.ImportedOn
  commentId: P:Microsoft.WindowsAzure.Management.StorSimple.LegacyApplianceConfiguration.ImportedOn
  id: ImportedOn
  parent: Microsoft.WindowsAzure.Management.StorSimple.LegacyApplianceConfiguration
  langs:
  - csharp
  - vb
  name: ImportedOn
  nameWithType: LegacyApplianceConfiguration.ImportedOn
  fullName: Microsoft.WindowsAzure.Management.StorSimple.LegacyApplianceConfiguration.ImportedOn
  type: Property
  source:
    remote:
      path: src/ServiceManagement/StorSimple/StorSimple/Customization/Models/LegacyApplianceConfiguration.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ImportedOn
    path: src/ServiceManagement/StorSimple/StorSimple/Customization/Models/LegacyApplianceConfiguration.cs
    startLine: 31
  assemblies:
  - Microsoft.WindowsAzure.Management.StorSimple
  namespace: Microsoft.WindowsAzure.Management.StorSimple
  summary: "\nGets or sets the local time at which config is imported\n"
  example: []
  syntax:
    content: public DateTime ImportedOn { get; set; }
    content.vb: Public Property ImportedOn As Date
    parameters: []
    return:
      type: System.DateTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.StorSimple.LegacyApplianceConfiguration.ConfigFile
  commentId: P:Microsoft.WindowsAzure.Management.StorSimple.LegacyApplianceConfiguration.ConfigFile
  id: ConfigFile
  parent: Microsoft.WindowsAzure.Management.StorSimple.LegacyApplianceConfiguration
  langs:
  - csharp
  - vb
  name: ConfigFile
  nameWithType: LegacyApplianceConfiguration.ConfigFile
  fullName: Microsoft.WindowsAzure.Management.StorSimple.LegacyApplianceConfiguration.ConfigFile
  type: Property
  source:
    remote:
      path: src/ServiceManagement/StorSimple/StorSimple/Customization/Models/LegacyApplianceConfiguration.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ConfigFile
    path: src/ServiceManagement/StorSimple/StorSimple/Customization/Models/LegacyApplianceConfiguration.cs
    startLine: 36
  assemblies:
  - Microsoft.WindowsAzure.Management.StorSimple
  namespace: Microsoft.WindowsAzure.Management.StorSimple
  summary: "\nGet or sets the name of the config file which is imported\n"
  example: []
  syntax:
    content: public string ConfigFile { get; set; }
    content.vb: Public Property ConfigFile As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.StorSimple.LegacyApplianceConfiguration.TargetApplianceName
  commentId: P:Microsoft.WindowsAzure.Management.StorSimple.LegacyApplianceConfiguration.TargetApplianceName
  id: TargetApplianceName
  parent: Microsoft.WindowsAzure.Management.StorSimple.LegacyApplianceConfiguration
  langs:
  - csharp
  - vb
  name: TargetApplianceName
  nameWithType: LegacyApplianceConfiguration.TargetApplianceName
  fullName: Microsoft.WindowsAzure.Management.StorSimple.LegacyApplianceConfiguration.TargetApplianceName
  type: Property
  source:
    remote:
      path: src/ServiceManagement/StorSimple/StorSimple/Customization/Models/LegacyApplianceConfiguration.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TargetApplianceName
    path: src/ServiceManagement/StorSimple/StorSimple/Customization/Models/LegacyApplianceConfiguration.cs
    startLine: 41
  assemblies:
  - Microsoft.WindowsAzure.Management.StorSimple
  namespace: Microsoft.WindowsAzure.Management.StorSimple
  summary: "\nGets or sets the name of target appliance \n"
  example: []
  syntax:
    content: public string TargetApplianceName { get; set; }
    content.vb: Public Property TargetApplianceName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.StorSimple.LegacyApplianceConfiguration.Details
  commentId: P:Microsoft.WindowsAzure.Management.StorSimple.LegacyApplianceConfiguration.Details
  id: Details
  parent: Microsoft.WindowsAzure.Management.StorSimple.LegacyApplianceConfiguration
  langs:
  - csharp
  - vb
  name: Details
  nameWithType: LegacyApplianceConfiguration.Details
  fullName: Microsoft.WindowsAzure.Management.StorSimple.LegacyApplianceConfiguration.Details
  type: Property
  source:
    remote:
      path: src/ServiceManagement/StorSimple/StorSimple/Customization/Models/LegacyApplianceConfiguration.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Details
    path: src/ServiceManagement/StorSimple/StorSimple/Customization/Models/LegacyApplianceConfiguration.cs
    startLine: 46
  assemblies:
  - Microsoft.WindowsAzure.Management.StorSimple
  namespace: Microsoft.WindowsAzure.Management.StorSimple
  summary: "\nGets or sets the config metadata from legacy appliance which needs to be migrated\n"
  example: []
  syntax:
    content: public LegacyApplianceDetails Details { get; set; }
    content.vb: Public Property Details As LegacyApplianceDetails
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Management.StorSimple.LegacyApplianceDetails
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.StorSimple.LegacyApplianceConfiguration.Result
  commentId: P:Microsoft.WindowsAzure.Management.StorSimple.LegacyApplianceConfiguration.Result
  id: Result
  parent: Microsoft.WindowsAzure.Management.StorSimple.LegacyApplianceConfiguration
  langs:
  - csharp
  - vb
  name: Result
  nameWithType: LegacyApplianceConfiguration.Result
  fullName: Microsoft.WindowsAzure.Management.StorSimple.LegacyApplianceConfiguration.Result
  type: Property
  source:
    remote:
      path: src/ServiceManagement/StorSimple/StorSimple/Customization/Models/LegacyApplianceConfiguration.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Result
    path: src/ServiceManagement/StorSimple/StorSimple/Customization/Models/LegacyApplianceConfiguration.cs
    startLine: 51
  assemblies:
  - Microsoft.WindowsAzure.Management.StorSimple
  namespace: Microsoft.WindowsAzure.Management.StorSimple
  summary: "\nGets or sets the o/p result of import config\n"
  example: []
  syntax:
    content: public string Result { get; set; }
    content.vb: Public Property Result As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.StorSimple
  commentId: N:Microsoft.WindowsAzure.Management.StorSimple
  isExternal: false
  name: Microsoft.WindowsAzure.Management.StorSimple
  nameWithType: Microsoft.WindowsAzure.Management.StorSimple
  fullName: Microsoft.WindowsAzure.Management.StorSimple
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Microsoft.WindowsAzure.Management.StorSimple.LegacyApplianceDetails
  commentId: T:Microsoft.WindowsAzure.Management.StorSimple.LegacyApplianceDetails
  parent: Microsoft.WindowsAzure.Management.StorSimple
  isExternal: false
  name: LegacyApplianceDetails
  nameWithType: LegacyApplianceDetails
  fullName: Microsoft.WindowsAzure.Management.StorSimple.LegacyApplianceDetails
