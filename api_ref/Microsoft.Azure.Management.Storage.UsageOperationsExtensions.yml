items:
- uid: Microsoft.Azure.Management.Storage.UsageOperationsExtensions
  commentId: T:Microsoft.Azure.Management.Storage.UsageOperationsExtensions
  id: UsageOperationsExtensions
  parent: Microsoft.Azure.Management.Storage
  children:
  - Microsoft.Azure.Management.Storage.UsageOperationsExtensions.List(Microsoft.Azure.Management.Storage.IUsageOperations)
  - Microsoft.Azure.Management.Storage.UsageOperationsExtensions.ListAsync(Microsoft.Azure.Management.Storage.IUsageOperations,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: UsageOperationsExtensions
  fullName: Microsoft.Azure.Management.Storage.UsageOperationsExtensions
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/UsageOperationsExtensions.cs
      branch: 6969d0e6090867b7f08eaa804ab4edc32e5e8a08
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UsageOperationsExtensions
    path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/UsageOperationsExtensions.cs
    startLine: 22
  assemblies:
  - Microsoft.Azure.Management.Storage
  packages:
  - Microsoft.Azure.Management.Storage(5.0.2-preview)
  namespace: Microsoft.Azure.Management.Storage
  summary: "\nExtension methods for UsageOperations.\n"
  example: []
  syntax:
    content: public class UsageOperationsExtensions
    content.vb: Public Class UsageOperationsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Storage.UsageOperationsExtensions.List(Microsoft.Azure.Management.Storage.IUsageOperations)
  commentId: M:Microsoft.Azure.Management.Storage.UsageOperationsExtensions.List(Microsoft.Azure.Management.Storage.IUsageOperations)
  id: List(Microsoft.Azure.Management.Storage.IUsageOperations)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Storage.UsageOperationsExtensions
  langs:
  - csharp
  - vb
  name: List(IUsageOperations)
  fullName: Microsoft.Azure.Management.Storage.UsageOperationsExtensions.List(Microsoft.Azure.Management.Storage.IUsageOperations)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/UsageOperationsExtensions.cs
      branch: 6969d0e6090867b7f08eaa804ab4edc32e5e8a08
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: List
    path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/UsageOperationsExtensions.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.Management.Storage
  packages:
  - Microsoft.Azure.Management.Storage(5.0.2-preview)
  namespace: Microsoft.Azure.Management.Storage
  summary: "\nGets the current usage count and the limit for the resources under the\nsubscription.\n"
  example: []
  syntax:
    content: public static UsageListResult List(this IUsageOperations operations)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function List(operations As IUsageOperations) As UsageListResult
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Storage.IUsageOperations
      description: "\nThe operations group for this extension method.\n"
    return:
      type: Microsoft.Azure.Management.Storage.Models.UsageListResult
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Storage.UsageOperationsExtensions.ListAsync(Microsoft.Azure.Management.Storage.IUsageOperations,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Storage.UsageOperationsExtensions.ListAsync(Microsoft.Azure.Management.Storage.IUsageOperations,System.Threading.CancellationToken)
  id: ListAsync(Microsoft.Azure.Management.Storage.IUsageOperations,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Storage.UsageOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListAsync(IUsageOperations, CancellationToken)
  fullName: Microsoft.Azure.Management.Storage.UsageOperationsExtensions.ListAsync(Microsoft.Azure.Management.Storage.IUsageOperations, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/UsageOperationsExtensions.cs
      branch: 6969d0e6090867b7f08eaa804ab4edc32e5e8a08
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListAsync
    path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Storage/Generated/UsageOperationsExtensions.cs
    startLine: 46
  assemblies:
  - Microsoft.Azure.Management.Storage
  packages:
  - Microsoft.Azure.Management.Storage(5.0.2-preview)
  namespace: Microsoft.Azure.Management.Storage
  summary: "\nGets the current usage count and the limit for the resources under the\nsubscription.\n"
  example: []
  syntax:
    content: public static Task<UsageListResult> ListAsync(this IUsageOperations operations, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListAsync(operations As IUsageOperations, cancellationToken As CancellationToken = Nothing) As Task(Of UsageListResult)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Storage.IUsageOperations
      description: "\nThe operations group for this extension method.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Storage.Models.UsageListResult}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.Management.Storage
  isExternal: false
  name: Microsoft.Azure.Management.Storage
  fullName: Microsoft.Azure.Management.Storage
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Management.Storage.IUsageOperations
  parent: Microsoft.Azure.Management.Storage
  isExternal: false
  name: IUsageOperations
  fullName: Microsoft.Azure.Management.Storage.IUsageOperations
- uid: Microsoft.Azure.Management.Storage.Models.UsageListResult
  parent: Microsoft.Azure.Management.Storage.Models
  isExternal: false
  name: UsageListResult
  fullName: Microsoft.Azure.Management.Storage.Models.UsageListResult
- uid: Microsoft.Azure.Management.Storage.Models
  isExternal: false
  name: Microsoft.Azure.Management.Storage.Models
  fullName: Microsoft.Azure.Management.Storage.Models
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.Storage.Models.UsageListResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<UsageListResult>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.Storage.Models.UsageListResult>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.Storage.Models.UsageListResult)
  name.vb: Task(Of UsageListResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Storage.Models.UsageListResult
    name: UsageListResult
    fullName: Microsoft.Azure.Management.Storage.Models.UsageListResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Storage.Models.UsageListResult
    name: UsageListResult
    fullName: Microsoft.Azure.Management.Storage.Models.UsageListResult
  - name: )
    fullName: )
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
