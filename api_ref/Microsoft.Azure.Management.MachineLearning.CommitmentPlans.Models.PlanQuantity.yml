items:
- uid: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanQuantity
  commentId: T:Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanQuantity
  id: PlanQuantity
  parent: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models
  children:
  - Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanQuantity.#ctor
  - Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanQuantity.#ctor(System.Nullable{System.Double},System.Nullable{System.Double},System.String,System.String)
  - Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanQuantity.Allowance
  - Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanQuantity.Amount
  - Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanQuantity.IncludedQuantityMeter
  - Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanQuantity.OverageMeter
  langs:
  - csharp
  - vb
  name: PlanQuantity
  fullName: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanQuantity
  type: Class
  source:
    remote:
      path: src/ResourceManagement/MachineLearning/Microsoft.Azure.Management.MachineLearning/Generated/CommitmentPlans/Models/PlanQuantity.cs
      branch: 7139473a34eb7e28258087bb9931a74955701814
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PlanQuantity
    path: src/ResourceManagement/MachineLearning/Microsoft.Azure.Management.MachineLearning/Generated/CommitmentPlans/Models/PlanQuantity.cs
    startLine: 16
  assemblies:
  - Microsoft.Azure.Management.MachineLearning
  packages:
  - Microsoft.Azure.Management.MachineLearning(0.9.5-preview)
  namespace: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models
  summary: "\nRepresents the quantity a commitment plan provides of a metered\nresource.\n"
  example: []
  syntax:
    content: public class PlanQuantity
    content.vb: Public Class PlanQuantity
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanQuantity.#ctor
  commentId: M:Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanQuantity.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanQuantity
  langs:
  - csharp
  - vb
  name: PlanQuantity()
  fullName: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanQuantity.PlanQuantity()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/MachineLearning/Microsoft.Azure.Management.MachineLearning/Generated/CommitmentPlans/Models/PlanQuantity.cs
      branch: 7139473a34eb7e28258087bb9931a74955701814
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/MachineLearning/Microsoft.Azure.Management.MachineLearning/Generated/CommitmentPlans/Models/PlanQuantity.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.MachineLearning
  packages:
  - Microsoft.Azure.Management.MachineLearning(0.9.5-preview)
  namespace: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models
  summary: "\nInitializes a new instance of the PlanQuantity class.\n"
  example: []
  syntax:
    content: public PlanQuantity()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanQuantity.#ctor(System.Nullable{System.Double},System.Nullable{System.Double},System.String,System.String)
  commentId: M:Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanQuantity.#ctor(System.Nullable{System.Double},System.Nullable{System.Double},System.String,System.String)
  id: '#ctor(System.Nullable{System.Double},System.Nullable{System.Double},System.String,System.String)'
  parent: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanQuantity
  langs:
  - csharp
  - vb
  name: PlanQuantity(Nullable<Double>, Nullable<Double>, String, String)
  fullName: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanQuantity.PlanQuantity(System.Nullable<System.Double>, System.Nullable<System.Double>, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/MachineLearning/Microsoft.Azure.Management.MachineLearning/Generated/CommitmentPlans/Models/PlanQuantity.cs
      branch: 7139473a34eb7e28258087bb9931a74955701814
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/MachineLearning/Microsoft.Azure.Management.MachineLearning/Generated/CommitmentPlans/Models/PlanQuantity.cs
    startLine: 34
  assemblies:
  - Microsoft.Azure.Management.MachineLearning
  packages:
  - Microsoft.Azure.Management.MachineLearning(0.9.5-preview)
  namespace: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models
  summary: "\nInitializes a new instance of the PlanQuantity class.\n"
  example: []
  syntax:
    content: public PlanQuantity(double ? allowance = null, double ? amount = null, string includedQuantityMeter = null, string overageMeter = null)
    content.vb: Public Sub New(allowance As Double? = Nothing, amount As Double? = Nothing, includedQuantityMeter As String = Nothing, overageMeter As String = Nothing)
    parameters:
    - id: allowance
      type: System.Nullable{System.Double}
      description: >-
        The quantity added to the commitment plan

        at an interval specified by its allowance frequency.
    - id: amount
      type: System.Nullable{System.Double}
      description: >-
        The quantity available to the plan the last

        time usage was calculated.
    - id: includedQuantityMeter
      type: System.String
      description: >-
        The Azure meter for usage

        against included quantities.
    - id: overageMeter
      type: System.String
      description: >-
        The Azure meter for usage which exceeds

        included quantities.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanQuantity.PlanQuantity(System.Nullable(Of System.Double), System.Nullable(Of System.Double), System.String, System.String)
  name.vb: PlanQuantity(Nullable(Of Double), Nullable(Of Double), String, String)
- uid: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanQuantity.Allowance
  commentId: P:Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanQuantity.Allowance
  id: Allowance
  parent: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanQuantity
  langs:
  - csharp
  - vb
  name: Allowance
  fullName: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanQuantity.Allowance
  type: Property
  source:
    remote:
      path: src/ResourceManagement/MachineLearning/Microsoft.Azure.Management.MachineLearning/Generated/CommitmentPlans/Models/PlanQuantity.cs
      branch: 7139473a34eb7e28258087bb9931a74955701814
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Allowance
    path: src/ResourceManagement/MachineLearning/Microsoft.Azure.Management.MachineLearning/Generated/CommitmentPlans/Models/PlanQuantity.cs
    startLine: 46
  assemblies:
  - Microsoft.Azure.Management.MachineLearning
  packages:
  - Microsoft.Azure.Management.MachineLearning(0.9.5-preview)
  namespace: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models
  summary: "\nGets the quantity added to the commitment plan at an interval\nspecified by its allowance frequency.\n"
  example: []
  syntax:
    content: public double ? Allowance { get; }
    content.vb: Public ReadOnly Property Allowance As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanQuantity.Amount
  commentId: P:Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanQuantity.Amount
  id: Amount
  parent: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanQuantity
  langs:
  - csharp
  - vb
  name: Amount
  fullName: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanQuantity.Amount
  type: Property
  source:
    remote:
      path: src/ResourceManagement/MachineLearning/Microsoft.Azure.Management.MachineLearning/Generated/CommitmentPlans/Models/PlanQuantity.cs
      branch: 7139473a34eb7e28258087bb9931a74955701814
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Amount
    path: src/ResourceManagement/MachineLearning/Microsoft.Azure.Management.MachineLearning/Generated/CommitmentPlans/Models/PlanQuantity.cs
    startLine: 53
  assemblies:
  - Microsoft.Azure.Management.MachineLearning
  packages:
  - Microsoft.Azure.Management.MachineLearning(0.9.5-preview)
  namespace: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models
  summary: "\nGets the quantity available to the plan the last time usage was\ncalculated.\n"
  example: []
  syntax:
    content: public double ? Amount { get; }
    content.vb: Public ReadOnly Property Amount As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanQuantity.IncludedQuantityMeter
  commentId: P:Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanQuantity.IncludedQuantityMeter
  id: IncludedQuantityMeter
  parent: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanQuantity
  langs:
  - csharp
  - vb
  name: IncludedQuantityMeter
  fullName: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanQuantity.IncludedQuantityMeter
  type: Property
  source:
    remote:
      path: src/ResourceManagement/MachineLearning/Microsoft.Azure.Management.MachineLearning/Generated/CommitmentPlans/Models/PlanQuantity.cs
      branch: 7139473a34eb7e28258087bb9931a74955701814
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IncludedQuantityMeter
    path: src/ResourceManagement/MachineLearning/Microsoft.Azure.Management.MachineLearning/Generated/CommitmentPlans/Models/PlanQuantity.cs
    startLine: 59
  assemblies:
  - Microsoft.Azure.Management.MachineLearning
  packages:
  - Microsoft.Azure.Management.MachineLearning(0.9.5-preview)
  namespace: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models
  summary: "\nGets the Azure meter for usage against included quantities.\n"
  example: []
  syntax:
    content: public string IncludedQuantityMeter { get; }
    content.vb: Public ReadOnly Property IncludedQuantityMeter As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanQuantity.OverageMeter
  commentId: P:Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanQuantity.OverageMeter
  id: OverageMeter
  parent: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanQuantity
  langs:
  - csharp
  - vb
  name: OverageMeter
  fullName: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanQuantity.OverageMeter
  type: Property
  source:
    remote:
      path: src/ResourceManagement/MachineLearning/Microsoft.Azure.Management.MachineLearning/Generated/CommitmentPlans/Models/PlanQuantity.cs
      branch: 7139473a34eb7e28258087bb9931a74955701814
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: OverageMeter
    path: src/ResourceManagement/MachineLearning/Microsoft.Azure.Management.MachineLearning/Generated/CommitmentPlans/Models/PlanQuantity.cs
    startLine: 65
  assemblies:
  - Microsoft.Azure.Management.MachineLearning
  packages:
  - Microsoft.Azure.Management.MachineLearning(0.9.5-preview)
  namespace: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models
  summary: "\nGets the Azure meter for usage which exceeds included quantities.\n"
  example: []
  syntax:
    content: public string OverageMeter { get; }
    content.vb: Public ReadOnly Property OverageMeter As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models
  isExternal: false
  name: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models
  fullName: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Double>
  fullName: System.Nullable<System.Double>
  fullname.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
