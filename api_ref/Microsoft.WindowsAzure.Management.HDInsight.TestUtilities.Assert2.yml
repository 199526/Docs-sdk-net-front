### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.HDInsight.TestUtilities.Assert2
  commentId: T:Microsoft.WindowsAzure.Management.HDInsight.TestUtilities.Assert2
  id: Assert2
  parent: Microsoft.WindowsAzure.Management.HDInsight.TestUtilities
  children:
  - Microsoft.WindowsAzure.Management.HDInsight.TestUtilities.Assert2.AreEquivalent(System.Collections.Generic.IEnumerable{System.Xml.XmlAttribute},System.Collections.Generic.IEnumerable{System.Xml.XmlAttribute})
  - Microsoft.WindowsAzure.Management.HDInsight.TestUtilities.Assert2.AreSame(System.Collections.Generic.IEnumerable{System.Xml.XmlElement},System.Collections.Generic.IEnumerable{System.Xml.XmlElement})
  - Microsoft.WindowsAzure.Management.HDInsight.TestUtilities.Assert2.AreSame(System.Xml.XmlAttribute,System.Xml.XmlAttribute)
  - Microsoft.WindowsAzure.Management.HDInsight.TestUtilities.Assert2.AreSame(System.Xml.XmlDocument,System.Xml.XmlDocument)
  - Microsoft.WindowsAzure.Management.HDInsight.TestUtilities.Assert2.AreSame(System.Xml.XmlElement,System.Xml.XmlElement)
  - Microsoft.WindowsAzure.Management.HDInsight.TestUtilities.Assert2.ToEnumerable``1(System.Collections.Generic.ICollection{System.Management.Automation.PSObject})
  langs:
  - csharp
  - vb
  name: Assert2
  nameWithType: Assert2
  fullName: Microsoft.WindowsAzure.Management.HDInsight.TestUtilities.Assert2
  type: Class
  source:
    remote:
      path: src/ServiceManagement/HDInsight/Microsoft.WindowsAzure.Management.HDInsight.TestUtilities/Assert2.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Assert2
    path: src/ServiceManagement/HDInsight/Microsoft.WindowsAzure.Management.HDInsight.TestUtilities/Assert2.cs
    startLine: 26
  assemblies:
  - Microsoft.WindowsAzure.Management.HDInsight.TestUtilities
  namespace: Microsoft.WindowsAzure.Management.HDInsight.TestUtilities
  syntax:
    content: public static class Assert2
    content.vb: Public Module Assert2
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.WindowsAzure.Management.HDInsight.TestUtilities.Assert2.AreSame(System.Xml.XmlAttribute,System.Xml.XmlAttribute)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.TestUtilities.Assert2.AreSame(System.Xml.XmlAttribute,System.Xml.XmlAttribute)
  id: AreSame(System.Xml.XmlAttribute,System.Xml.XmlAttribute)
  parent: Microsoft.WindowsAzure.Management.HDInsight.TestUtilities.Assert2
  langs:
  - csharp
  - vb
  name: AreSame(XmlAttribute, XmlAttribute)
  nameWithType: Assert2.AreSame(XmlAttribute, XmlAttribute)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.TestUtilities.Assert2.AreSame(System.Xml.XmlAttribute, System.Xml.XmlAttribute)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/HDInsight/Microsoft.WindowsAzure.Management.HDInsight.TestUtilities/Assert2.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: AreSame
    path: src/ServiceManagement/HDInsight/Microsoft.WindowsAzure.Management.HDInsight.TestUtilities/Assert2.cs
    startLine: 61
  assemblies:
  - Microsoft.WindowsAzure.Management.HDInsight.TestUtilities
  namespace: Microsoft.WindowsAzure.Management.HDInsight.TestUtilities
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Design", "CA1059:MembersShouldNotExposeCertainConcreteTypes", MessageId = "System.Xml.XmlNode", Justification = "Suppressing for now until we can replace with an IXPathNavigable implementation. [tgs]")]

      public static void AreSame(XmlAttribute expected, XmlAttribute actual)
    content.vb: >-
      <SuppressMessage("Microsoft.Design", "CA1059:MembersShouldNotExposeCertainConcreteTypes", MessageId:="System.Xml.XmlNode", Justification:="Suppressing for now until we can replace with an IXPathNavigable implementation. [tgs]")>

      Public Shared Sub AreSame(expected As XmlAttribute, actual As XmlAttribute)
    parameters:
    - id: expected
      type: System.Xml.XmlAttribute
    - id: actual
      type: System.Xml.XmlAttribute
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1059:MembersShouldNotExposeCertainConcreteTypes
    namedArguments:
    - name: MessageId
      type: System.String
      value: System.Xml.XmlNode
    - name: Justification
      type: System.String
      value: Suppressing for now until we can replace with an IXPathNavigable implementation. [tgs]
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.HDInsight.TestUtilities.Assert2.AreEquivalent(System.Collections.Generic.IEnumerable{System.Xml.XmlAttribute},System.Collections.Generic.IEnumerable{System.Xml.XmlAttribute})
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.TestUtilities.Assert2.AreEquivalent(System.Collections.Generic.IEnumerable{System.Xml.XmlAttribute},System.Collections.Generic.IEnumerable{System.Xml.XmlAttribute})
  id: AreEquivalent(System.Collections.Generic.IEnumerable{System.Xml.XmlAttribute},System.Collections.Generic.IEnumerable{System.Xml.XmlAttribute})
  parent: Microsoft.WindowsAzure.Management.HDInsight.TestUtilities.Assert2
  langs:
  - csharp
  - vb
  name: AreEquivalent(IEnumerable<XmlAttribute>, IEnumerable<XmlAttribute>)
  nameWithType: Assert2.AreEquivalent(IEnumerable<XmlAttribute>, IEnumerable<XmlAttribute>)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.TestUtilities.Assert2.AreEquivalent(System.Collections.Generic.IEnumerable<System.Xml.XmlAttribute>, System.Collections.Generic.IEnumerable<System.Xml.XmlAttribute>)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/HDInsight/Microsoft.WindowsAzure.Management.HDInsight.TestUtilities/Assert2.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: AreEquivalent
    path: src/ServiceManagement/HDInsight/Microsoft.WindowsAzure.Management.HDInsight.TestUtilities/Assert2.cs
    startLine: 73
  assemblies:
  - Microsoft.WindowsAzure.Management.HDInsight.TestUtilities
  namespace: Microsoft.WindowsAzure.Management.HDInsight.TestUtilities
  syntax:
    content: public static void AreEquivalent(IEnumerable<XmlAttribute> expected, IEnumerable<XmlAttribute> actual)
    content.vb: Public Shared Sub AreEquivalent(expected As IEnumerable(Of XmlAttribute), actual As IEnumerable(Of XmlAttribute))
    parameters:
    - id: expected
      type: System.Collections.Generic.IEnumerable{System.Xml.XmlAttribute}
    - id: actual
      type: System.Collections.Generic.IEnumerable{System.Xml.XmlAttribute}
  nameWithType.vb: Assert2.AreEquivalent(IEnumerable(Of XmlAttribute), IEnumerable(Of XmlAttribute))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.Management.HDInsight.TestUtilities.Assert2.AreEquivalent(System.Collections.Generic.IEnumerable(Of System.Xml.XmlAttribute), System.Collections.Generic.IEnumerable(Of System.Xml.XmlAttribute))
  name.vb: AreEquivalent(IEnumerable(Of XmlAttribute), IEnumerable(Of XmlAttribute))
- uid: Microsoft.WindowsAzure.Management.HDInsight.TestUtilities.Assert2.AreSame(System.Collections.Generic.IEnumerable{System.Xml.XmlElement},System.Collections.Generic.IEnumerable{System.Xml.XmlElement})
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.TestUtilities.Assert2.AreSame(System.Collections.Generic.IEnumerable{System.Xml.XmlElement},System.Collections.Generic.IEnumerable{System.Xml.XmlElement})
  id: AreSame(System.Collections.Generic.IEnumerable{System.Xml.XmlElement},System.Collections.Generic.IEnumerable{System.Xml.XmlElement})
  parent: Microsoft.WindowsAzure.Management.HDInsight.TestUtilities.Assert2
  langs:
  - csharp
  - vb
  name: AreSame(IEnumerable<XmlElement>, IEnumerable<XmlElement>)
  nameWithType: Assert2.AreSame(IEnumerable<XmlElement>, IEnumerable<XmlElement>)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.TestUtilities.Assert2.AreSame(System.Collections.Generic.IEnumerable<System.Xml.XmlElement>, System.Collections.Generic.IEnumerable<System.Xml.XmlElement>)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/HDInsight/Microsoft.WindowsAzure.Management.HDInsight.TestUtilities/Assert2.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: AreSame
    path: src/ServiceManagement/HDInsight/Microsoft.WindowsAzure.Management.HDInsight.TestUtilities/Assert2.cs
    startLine: 86
  assemblies:
  - Microsoft.WindowsAzure.Management.HDInsight.TestUtilities
  namespace: Microsoft.WindowsAzure.Management.HDInsight.TestUtilities
  syntax:
    content: public static void AreSame(IEnumerable<XmlElement> expected, IEnumerable<XmlElement> actual)
    content.vb: Public Shared Sub AreSame(expected As IEnumerable(Of XmlElement), actual As IEnumerable(Of XmlElement))
    parameters:
    - id: expected
      type: System.Collections.Generic.IEnumerable{System.Xml.XmlElement}
    - id: actual
      type: System.Collections.Generic.IEnumerable{System.Xml.XmlElement}
  nameWithType.vb: Assert2.AreSame(IEnumerable(Of XmlElement), IEnumerable(Of XmlElement))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.Management.HDInsight.TestUtilities.Assert2.AreSame(System.Collections.Generic.IEnumerable(Of System.Xml.XmlElement), System.Collections.Generic.IEnumerable(Of System.Xml.XmlElement))
  name.vb: AreSame(IEnumerable(Of XmlElement), IEnumerable(Of XmlElement))
- uid: Microsoft.WindowsAzure.Management.HDInsight.TestUtilities.Assert2.AreSame(System.Xml.XmlElement,System.Xml.XmlElement)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.TestUtilities.Assert2.AreSame(System.Xml.XmlElement,System.Xml.XmlElement)
  id: AreSame(System.Xml.XmlElement,System.Xml.XmlElement)
  parent: Microsoft.WindowsAzure.Management.HDInsight.TestUtilities.Assert2
  langs:
  - csharp
  - vb
  name: AreSame(XmlElement, XmlElement)
  nameWithType: Assert2.AreSame(XmlElement, XmlElement)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.TestUtilities.Assert2.AreSame(System.Xml.XmlElement, System.Xml.XmlElement)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/HDInsight/Microsoft.WindowsAzure.Management.HDInsight.TestUtilities/Assert2.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: AreSame
    path: src/ServiceManagement/HDInsight/Microsoft.WindowsAzure.Management.HDInsight.TestUtilities/Assert2.cs
    startLine: 100
  assemblies:
  - Microsoft.WindowsAzure.Management.HDInsight.TestUtilities
  namespace: Microsoft.WindowsAzure.Management.HDInsight.TestUtilities
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Design", "CA1059:MembersShouldNotExposeCertainConcreteTypes", MessageId = "System.Xml.XmlNode", Justification = "Suppressing for now until we can replace with an IXPathNavigable implementation. [tgs]")]

      public static void AreSame(XmlElement expected, XmlElement actual)
    content.vb: >-
      <SuppressMessage("Microsoft.Design", "CA1059:MembersShouldNotExposeCertainConcreteTypes", MessageId:="System.Xml.XmlNode", Justification:="Suppressing for now until we can replace with an IXPathNavigable implementation. [tgs]")>

      Public Shared Sub AreSame(expected As XmlElement, actual As XmlElement)
    parameters:
    - id: expected
      type: System.Xml.XmlElement
    - id: actual
      type: System.Xml.XmlElement
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1059:MembersShouldNotExposeCertainConcreteTypes
    namedArguments:
    - name: MessageId
      type: System.String
      value: System.Xml.XmlNode
    - name: Justification
      type: System.String
      value: Suppressing for now until we can replace with an IXPathNavigable implementation. [tgs]
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.HDInsight.TestUtilities.Assert2.AreSame(System.Xml.XmlDocument,System.Xml.XmlDocument)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.TestUtilities.Assert2.AreSame(System.Xml.XmlDocument,System.Xml.XmlDocument)
  id: AreSame(System.Xml.XmlDocument,System.Xml.XmlDocument)
  parent: Microsoft.WindowsAzure.Management.HDInsight.TestUtilities.Assert2
  langs:
  - csharp
  - vb
  name: AreSame(XmlDocument, XmlDocument)
  nameWithType: Assert2.AreSame(XmlDocument, XmlDocument)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.TestUtilities.Assert2.AreSame(System.Xml.XmlDocument, System.Xml.XmlDocument)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/HDInsight/Microsoft.WindowsAzure.Management.HDInsight.TestUtilities/Assert2.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: AreSame
    path: src/ServiceManagement/HDInsight/Microsoft.WindowsAzure.Management.HDInsight.TestUtilities/Assert2.cs
    startLine: 143
  assemblies:
  - Microsoft.WindowsAzure.Management.HDInsight.TestUtilities
  namespace: Microsoft.WindowsAzure.Management.HDInsight.TestUtilities
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Design", "CA1059:MembersShouldNotExposeCertainConcreteTypes", MessageId = "System.Xml.XmlNode", Justification = "Suppressing for now until we can replace with an IXPathNavigable implementation. [tgs]")]

      public static void AreSame(XmlDocument expected, XmlDocument actual)
    content.vb: >-
      <SuppressMessage("Microsoft.Design", "CA1059:MembersShouldNotExposeCertainConcreteTypes", MessageId:="System.Xml.XmlNode", Justification:="Suppressing for now until we can replace with an IXPathNavigable implementation. [tgs]")>

      Public Shared Sub AreSame(expected As XmlDocument, actual As XmlDocument)
    parameters:
    - id: expected
      type: System.Xml.XmlDocument
    - id: actual
      type: System.Xml.XmlDocument
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1059:MembersShouldNotExposeCertainConcreteTypes
    namedArguments:
    - name: MessageId
      type: System.String
      value: System.Xml.XmlNode
    - name: Justification
      type: System.String
      value: Suppressing for now until we can replace with an IXPathNavigable implementation. [tgs]
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.HDInsight.TestUtilities.Assert2.ToEnumerable``1(System.Collections.Generic.ICollection{System.Management.Automation.PSObject})
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.TestUtilities.Assert2.ToEnumerable``1(System.Collections.Generic.ICollection{System.Management.Automation.PSObject})
  id: ToEnumerable``1(System.Collections.Generic.ICollection{System.Management.Automation.PSObject})
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.HDInsight.TestUtilities.Assert2
  langs:
  - csharp
  - vb
  name: ToEnumerable<TEntity>(ICollection<PSObject>)
  nameWithType: Assert2.ToEnumerable<TEntity>(ICollection<PSObject>)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.TestUtilities.Assert2.ToEnumerable<TEntity>(System.Collections.Generic.ICollection<System.Management.Automation.PSObject>)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/HDInsight/Microsoft.WindowsAzure.Management.HDInsight.TestUtilities/Assert2.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ToEnumerable
    path: src/ServiceManagement/HDInsight/Microsoft.WindowsAzure.Management.HDInsight.TestUtilities/Assert2.cs
    startLine: 153
  assemblies:
  - Microsoft.WindowsAzure.Management.HDInsight.TestUtilities
  namespace: Microsoft.WindowsAzure.Management.HDInsight.TestUtilities
  syntax:
    content: 'public static IEnumerable<TEntity> ToEnumerable<TEntity>(this ICollection<PSObject> powerShellObjects)where TEntity : class'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToEnumerable(Of TEntity As Class)(powerShellObjects As ICollection(Of PSObject)) As IEnumerable(Of TEntity)
    parameters:
    - id: powerShellObjects
      type: System.Collections.Generic.ICollection{System.Management.Automation.PSObject}
    typeParameters:
    - id: TEntity
    return:
      type: System.Collections.Generic.IEnumerable{{TEntity}}
  nameWithType.vb: Assert2.ToEnumerable(Of TEntity)(ICollection(Of PSObject))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.Management.HDInsight.TestUtilities.Assert2.ToEnumerable(Of TEntity)(System.Collections.Generic.ICollection(Of System.Management.Automation.PSObject))
  name.vb: ToEnumerable(Of TEntity)(ICollection(Of PSObject))
references:
- uid: Microsoft.WindowsAzure.Management.HDInsight.TestUtilities
  commentId: N:Microsoft.WindowsAzure.Management.HDInsight.TestUtilities
  isExternal: false
  name: Microsoft.WindowsAzure.Management.HDInsight.TestUtilities
  nameWithType: Microsoft.WindowsAzure.Management.HDInsight.TestUtilities
  fullName: Microsoft.WindowsAzure.Management.HDInsight.TestUtilities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Xml.XmlAttribute
  commentId: T:System.Xml.XmlAttribute
  parent: System.Xml
  isExternal: true
  name: XmlAttribute
  nameWithType: XmlAttribute
  fullName: System.Xml.XmlAttribute
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: System.Collections.Generic.IEnumerable{System.Xml.XmlAttribute}
  commentId: T:System.Collections.Generic.IEnumerable{System.Xml.XmlAttribute}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<XmlAttribute>
  nameWithType: IEnumerable<XmlAttribute>
  fullName: System.Collections.Generic.IEnumerable<System.Xml.XmlAttribute>
  nameWithType.vb: IEnumerable(Of XmlAttribute)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Xml.XmlAttribute)
  name.vb: IEnumerable(Of XmlAttribute)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.XmlAttribute
    name: XmlAttribute
    nameWithType: XmlAttribute
    fullName: System.Xml.XmlAttribute
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Xml.XmlAttribute
    name: XmlAttribute
    nameWithType: XmlAttribute
    fullName: System.Xml.XmlAttribute
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IEnumerable{System.Xml.XmlElement}
  commentId: T:System.Collections.Generic.IEnumerable{System.Xml.XmlElement}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<XmlElement>
  nameWithType: IEnumerable<XmlElement>
  fullName: System.Collections.Generic.IEnumerable<System.Xml.XmlElement>
  nameWithType.vb: IEnumerable(Of XmlElement)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Xml.XmlElement)
  name.vb: IEnumerable(Of XmlElement)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.XmlElement
    name: XmlElement
    nameWithType: XmlElement
    fullName: System.Xml.XmlElement
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Xml.XmlElement
    name: XmlElement
    nameWithType: XmlElement
    fullName: System.Xml.XmlElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlElement
  commentId: T:System.Xml.XmlElement
  parent: System.Xml
  isExternal: true
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Xml.XmlDocument
  commentId: T:System.Xml.XmlDocument
  parent: System.Xml
  isExternal: true
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.Collections.Generic.ICollection{System.Management.Automation.PSObject}
  commentId: T:System.Collections.Generic.ICollection{System.Management.Automation.PSObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<PSObject>
  nameWithType: ICollection<PSObject>
  fullName: System.Collections.Generic.ICollection<System.Management.Automation.PSObject>
  nameWithType.vb: ICollection(Of PSObject)
  fullname.vb: System.Collections.Generic.ICollection(Of System.Management.Automation.PSObject)
  name.vb: ICollection(Of PSObject)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Management.Automation.PSObject
    name: PSObject
    nameWithType: PSObject
    fullName: System.Management.Automation.PSObject
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Management.Automation.PSObject
    name: PSObject
    nameWithType: PSObject
    fullName: System.Management.Automation.PSObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{TEntity}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TEntity>
  nameWithType: IEnumerable<TEntity>
  fullName: System.Collections.Generic.IEnumerable<TEntity>
  nameWithType.vb: IEnumerable(Of TEntity)
  fullname.vb: System.Collections.Generic.IEnumerable(Of TEntity)
  name.vb: IEnumerable(Of TEntity)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
