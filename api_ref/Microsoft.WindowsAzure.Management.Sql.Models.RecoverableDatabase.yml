### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.Sql.Models.RecoverableDatabase
  commentId: T:Microsoft.WindowsAzure.Management.Sql.Models.RecoverableDatabase
  id: RecoverableDatabase
  parent: Microsoft.WindowsAzure.Management.Sql.Models
  children:
  - Microsoft.WindowsAzure.Management.Sql.Models.RecoverableDatabase.#ctor
  - Microsoft.WindowsAzure.Management.Sql.Models.RecoverableDatabase.Edition
  - Microsoft.WindowsAzure.Management.Sql.Models.RecoverableDatabase.EntityId
  - Microsoft.WindowsAzure.Management.Sql.Models.RecoverableDatabase.LastAvailableBackupDate
  - Microsoft.WindowsAzure.Management.Sql.Models.RecoverableDatabase.ServerName
  langs:
  - csharp
  - vb
  name: RecoverableDatabase
  nameWithType: RecoverableDatabase
  fullName: Microsoft.WindowsAzure.Management.Sql.Models.RecoverableDatabase
  type: Class
  source:
    remote:
      path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/RecoverableDatabase.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RecoverableDatabase
    path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/RecoverableDatabase.cs
    startLine: 30
  assemblies:
  - Microsoft.WindowsAzure.Management.Sql
  namespace: Microsoft.WindowsAzure.Management.Sql.Models
  summary: "\nRepresents a recoverable Azure SQL Database.\n"
  example: []
  syntax:
    content: 'public class RecoverableDatabase : SqlModelCommon'
    content.vb: >-
      Public Class RecoverableDatabase
          Inherits SqlModelCommon
  inheritance:
  - System.Object
  - Microsoft.WindowsAzure.Management.Sql.Models.SqlModelCommon
  inheritedMembers:
  - Microsoft.WindowsAzure.Management.Sql.Models.SqlModelCommon.Name
  - Microsoft.WindowsAzure.Management.Sql.Models.SqlModelCommon.State
  - Microsoft.WindowsAzure.Management.Sql.Models.SqlModelCommon.Type
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.Sql.Models.RecoverableDatabase.Edition
  commentId: P:Microsoft.WindowsAzure.Management.Sql.Models.RecoverableDatabase.Edition
  id: Edition
  parent: Microsoft.WindowsAzure.Management.Sql.Models.RecoverableDatabase
  langs:
  - csharp
  - vb
  name: Edition
  nameWithType: RecoverableDatabase.Edition
  fullName: Microsoft.WindowsAzure.Management.Sql.Models.RecoverableDatabase.Edition
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/RecoverableDatabase.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Edition
    path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/RecoverableDatabase.cs
    startLine: 37
  assemblies:
  - Microsoft.WindowsAzure.Management.Sql
  namespace: Microsoft.WindowsAzure.Management.Sql.Models
  summary: "\nOptional. Gets the edition of the database.\n"
  example: []
  syntax:
    content: public string Edition { get; set; }
    content.vb: Public Property Edition As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Sql.Models.RecoverableDatabase.EntityId
  commentId: P:Microsoft.WindowsAzure.Management.Sql.Models.RecoverableDatabase.EntityId
  id: EntityId
  parent: Microsoft.WindowsAzure.Management.Sql.Models.RecoverableDatabase
  langs:
  - csharp
  - vb
  name: EntityId
  nameWithType: RecoverableDatabase.EntityId
  fullName: Microsoft.WindowsAzure.Management.Sql.Models.RecoverableDatabase.EntityId
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/RecoverableDatabase.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EntityId
    path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/RecoverableDatabase.cs
    startLine: 48
  assemblies:
  - Microsoft.WindowsAzure.Management.Sql
  namespace: Microsoft.WindowsAzure.Management.Sql.Models
  summary: "\nOptional. Gets the entity ID of the database.\n"
  example: []
  syntax:
    content: public string EntityId { get; set; }
    content.vb: Public Property EntityId As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Sql.Models.RecoverableDatabase.LastAvailableBackupDate
  commentId: P:Microsoft.WindowsAzure.Management.Sql.Models.RecoverableDatabase.LastAvailableBackupDate
  id: LastAvailableBackupDate
  parent: Microsoft.WindowsAzure.Management.Sql.Models.RecoverableDatabase
  langs:
  - csharp
  - vb
  name: LastAvailableBackupDate
  nameWithType: RecoverableDatabase.LastAvailableBackupDate
  fullName: Microsoft.WindowsAzure.Management.Sql.Models.RecoverableDatabase.LastAvailableBackupDate
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/RecoverableDatabase.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LastAvailableBackupDate
    path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/RecoverableDatabase.cs
    startLine: 59
  assemblies:
  - Microsoft.WindowsAzure.Management.Sql
  namespace: Microsoft.WindowsAzure.Management.Sql.Models
  summary: "\nOptional. Gets the last available backup date for this database.\n"
  example: []
  syntax:
    content: public DateTime LastAvailableBackupDate { get; set; }
    content.vb: Public Property LastAvailableBackupDate As Date
    parameters: []
    return:
      type: System.DateTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Sql.Models.RecoverableDatabase.ServerName
  commentId: P:Microsoft.WindowsAzure.Management.Sql.Models.RecoverableDatabase.ServerName
  id: ServerName
  parent: Microsoft.WindowsAzure.Management.Sql.Models.RecoverableDatabase
  langs:
  - csharp
  - vb
  name: ServerName
  nameWithType: RecoverableDatabase.ServerName
  fullName: Microsoft.WindowsAzure.Management.Sql.Models.RecoverableDatabase.ServerName
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/RecoverableDatabase.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ServerName
    path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/RecoverableDatabase.cs
    startLine: 71
  assemblies:
  - Microsoft.WindowsAzure.Management.Sql
  namespace: Microsoft.WindowsAzure.Management.Sql.Models
  summary: "\nOptional. Gets the name of the Azure SQL Database Server where the\ndatabase resided.\n"
  example: []
  syntax:
    content: public string ServerName { get; set; }
    content.vb: Public Property ServerName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Sql.Models.RecoverableDatabase.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.Sql.Models.RecoverableDatabase.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.Sql.Models.RecoverableDatabase
  langs:
  - csharp
  - vb
  name: RecoverableDatabase()
  nameWithType: RecoverableDatabase.RecoverableDatabase()
  fullName: Microsoft.WindowsAzure.Management.Sql.Models.RecoverableDatabase.RecoverableDatabase()
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/RecoverableDatabase.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/RecoverableDatabase.cs
    startLine: 80
  assemblies:
  - Microsoft.WindowsAzure.Management.Sql
  namespace: Microsoft.WindowsAzure.Management.Sql.Models
  summary: "\nInitializes a new instance of the RecoverableDatabase class.\n"
  example: []
  syntax:
    content: public RecoverableDatabase()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.Sql.Models
  commentId: N:Microsoft.WindowsAzure.Management.Sql.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Sql.Models
  nameWithType: Microsoft.WindowsAzure.Management.Sql.Models
  fullName: Microsoft.WindowsAzure.Management.Sql.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.WindowsAzure.Management.Sql.Models.SqlModelCommon
  commentId: T:Microsoft.WindowsAzure.Management.Sql.Models.SqlModelCommon
  parent: Microsoft.WindowsAzure.Management.Sql.Models
  isExternal: false
  name: SqlModelCommon
  nameWithType: SqlModelCommon
  fullName: Microsoft.WindowsAzure.Management.Sql.Models.SqlModelCommon
- uid: Microsoft.WindowsAzure.Management.Sql.Models.SqlModelCommon.Name
  commentId: P:Microsoft.WindowsAzure.Management.Sql.Models.SqlModelCommon.Name
  parent: Microsoft.WindowsAzure.Management.Sql.Models.SqlModelCommon
  isExternal: false
  name: Name
  nameWithType: SqlModelCommon.Name
  fullName: Microsoft.WindowsAzure.Management.Sql.Models.SqlModelCommon.Name
- uid: Microsoft.WindowsAzure.Management.Sql.Models.SqlModelCommon.State
  commentId: P:Microsoft.WindowsAzure.Management.Sql.Models.SqlModelCommon.State
  parent: Microsoft.WindowsAzure.Management.Sql.Models.SqlModelCommon
  isExternal: false
  name: State
  nameWithType: SqlModelCommon.State
  fullName: Microsoft.WindowsAzure.Management.Sql.Models.SqlModelCommon.State
- uid: Microsoft.WindowsAzure.Management.Sql.Models.SqlModelCommon.Type
  commentId: P:Microsoft.WindowsAzure.Management.Sql.Models.SqlModelCommon.Type
  parent: Microsoft.WindowsAzure.Management.Sql.Models.SqlModelCommon
  isExternal: false
  name: Type
  nameWithType: SqlModelCommon.Type
  fullName: Microsoft.WindowsAzure.Management.Sql.Models.SqlModelCommon.Type
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
