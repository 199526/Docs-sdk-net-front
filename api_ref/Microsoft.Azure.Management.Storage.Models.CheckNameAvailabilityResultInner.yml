items:
- uid: Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResultInner
  commentId: T:Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResultInner
  id: CheckNameAvailabilityResultInner
  parent: Microsoft.Azure.Management.Storage.Models
  children:
  - Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResultInner.#ctor
  - Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResultInner.#ctor(System.Nullable{System.Boolean},System.Nullable{Microsoft.Azure.Management.Storage.Models.Reason},System.String)
  - Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResultInner.Message
  - Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResultInner.NameAvailable
  - Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResultInner.Reason
  langs:
  - csharp
  - vb
  name: CheckNameAvailabilityResultInner
  fullName: Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResultInner
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Fluent.Storage/Generated/Models/CheckNameAvailabilityResultInner.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CheckNameAvailabilityResultInner
    path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Fluent.Storage/Generated/Models/CheckNameAvailabilityResultInner.cs
    startLine: 15
  assemblies:
  - Microsoft.Azure.Management.Fluent.Storage
  packages:
  - Microsoft.Azure.Management.Fluent.Storage(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nThe CheckNameAvailability operation response.\n"
  example: []
  syntax:
    content: public class CheckNameAvailabilityResultInner
    content.vb: Public Class CheckNameAvailabilityResultInner
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResultInner.#ctor
  commentId: M:Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResultInner.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResultInner
  langs:
  - csharp
  - vb
  name: CheckNameAvailabilityResultInner()
  fullName: Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResultInner.CheckNameAvailabilityResultInner()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Fluent.Storage/Generated/Models/CheckNameAvailabilityResultInner.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Fluent.Storage/Generated/Models/CheckNameAvailabilityResultInner.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.Fluent.Storage
  packages:
  - Microsoft.Azure.Management.Fluent.Storage(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nInitializes a new instance of the CheckNameAvailabilityResultInner\nclass.\n"
  example: []
  syntax:
    content: public CheckNameAvailabilityResultInner()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResultInner.#ctor(System.Nullable{System.Boolean},System.Nullable{Microsoft.Azure.Management.Storage.Models.Reason},System.String)
  commentId: M:Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResultInner.#ctor(System.Nullable{System.Boolean},System.Nullable{Microsoft.Azure.Management.Storage.Models.Reason},System.String)
  id: '#ctor(System.Nullable{System.Boolean},System.Nullable{Microsoft.Azure.Management.Storage.Models.Reason},System.String)'
  parent: Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResultInner
  langs:
  - csharp
  - vb
  name: CheckNameAvailabilityResultInner(Nullable<Boolean>, Nullable<Reason>, String)
  fullName: Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResultInner.CheckNameAvailabilityResultInner(System.Nullable<System.Boolean>, System.Nullable<Microsoft.Azure.Management.Storage.Models.Reason>, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Fluent.Storage/Generated/Models/CheckNameAvailabilityResultInner.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Fluent.Storage/Generated/Models/CheckNameAvailabilityResultInner.cs
    startLine: 37
  assemblies:
  - Microsoft.Azure.Management.Fluent.Storage
  packages:
  - Microsoft.Azure.Management.Fluent.Storage(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nInitializes a new instance of the CheckNameAvailabilityResultInner\nclass.\n"
  example: []
  syntax:
    content: public CheckNameAvailabilityResultInner(bool ? nameAvailable = null, Reason? reason = null, string message = null)
    content.vb: Public Sub New(nameAvailable As Boolean? = Nothing, reason As Reason? = Nothing, message As String = Nothing)
    parameters:
    - id: nameAvailable
      type: System.Nullable{System.Boolean}
      description: >-
        Gets a boolean value that indicates

        whether the name is available for you to use. If true, the name

        is available. If false, the name has already been taken or

        invalid and cannot be used.
    - id: reason
      type: System.Nullable{Microsoft.Azure.Management.Storage.Models.Reason}
      description: >-
        Gets the reason that a storage account name

        could not be used. The Reason element is only returned if

        NameAvailable is false. Possible values include:

        'AccountNameInvalid', 'AlreadyExists'
    - id: message
      type: System.String
      description: >-
        Gets an error message explaining the Reason

        value in more detail.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResultInner.CheckNameAvailabilityResultInner(System.Nullable(Of System.Boolean), System.Nullable(Of Microsoft.Azure.Management.Storage.Models.Reason), System.String)
  name.vb: CheckNameAvailabilityResultInner(Nullable(Of Boolean), Nullable(Of Reason), String)
- uid: Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResultInner.NameAvailable
  commentId: P:Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResultInner.NameAvailable
  id: NameAvailable
  parent: Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResultInner
  langs:
  - csharp
  - vb
  name: NameAvailable
  fullName: Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResultInner.NameAvailable
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Fluent.Storage/Generated/Models/CheckNameAvailabilityResultInner.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: NameAvailable
    path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Fluent.Storage/Generated/Models/CheckNameAvailabilityResultInner.cs
    startLine: 49
  assemblies:
  - Microsoft.Azure.Management.Fluent.Storage
  packages:
  - Microsoft.Azure.Management.Fluent.Storage(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nGets a boolean value that indicates whether the name is available\nfor you to use. If true, the name is available. If false, the\nname has already been taken or invalid and cannot be used.\n"
  example: []
  syntax:
    content: public bool ? NameAvailable { get; }
    content.vb: Public ReadOnly Property NameAvailable As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResultInner.Reason
  commentId: P:Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResultInner.Reason
  id: Reason
  parent: Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResultInner
  langs:
  - csharp
  - vb
  name: Reason
  fullName: Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResultInner.Reason
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Fluent.Storage/Generated/Models/CheckNameAvailabilityResultInner.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Reason
    path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Fluent.Storage/Generated/Models/CheckNameAvailabilityResultInner.cs
    startLine: 57
  assemblies:
  - Microsoft.Azure.Management.Fluent.Storage
  packages:
  - Microsoft.Azure.Management.Fluent.Storage(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nGets the reason that a storage account name could not be used. The\nReason element is only returned if NameAvailable is false.\nPossible values include: 'AccountNameInvalid', 'AlreadyExists'\n"
  example: []
  syntax:
    content: public Reason? Reason { get; }
    content.vb: Public ReadOnly Property Reason As Reason?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.Storage.Models.Reason}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResultInner.Message
  commentId: P:Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResultInner.Message
  id: Message
  parent: Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResultInner
  langs:
  - csharp
  - vb
  name: Message
  fullName: Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResultInner.Message
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Fluent.Storage/Generated/Models/CheckNameAvailabilityResultInner.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Message
    path: src/ResourceManagement/Storage/Microsoft.Azure.Management.Fluent.Storage/Generated/Models/CheckNameAvailabilityResultInner.cs
    startLine: 63
  assemblies:
  - Microsoft.Azure.Management.Fluent.Storage
  packages:
  - Microsoft.Azure.Management.Fluent.Storage(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nGets an error message explaining the Reason value in more detail.\n"
  example: []
  syntax:
    content: public string Message { get; }
    content.vb: Public ReadOnly Property Message As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Azure.Management.Storage.Models
  isExternal: false
  name: Microsoft.Azure.Management.Storage.Models
  fullName: Microsoft.Azure.Management.Storage.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable{Microsoft.Azure.Management.Storage.Models.Reason}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Reason>
  fullName: System.Nullable<Microsoft.Azure.Management.Storage.Models.Reason>
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.Storage.Models.Reason)
  name.vb: Nullable(Of Reason)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Storage.Models.Reason
    name: Reason
    fullName: Microsoft.Azure.Management.Storage.Models.Reason
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Storage.Models.Reason
    name: Reason
    fullName: Microsoft.Azure.Management.Storage.Models.Reason
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
