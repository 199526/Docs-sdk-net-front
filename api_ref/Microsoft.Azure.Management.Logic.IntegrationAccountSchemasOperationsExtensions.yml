items:
- uid: Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions
  commentId: T:Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions
  id: IntegrationAccountSchemasOperationsExtensions
  parent: Microsoft.Azure.Management.Logic
  children:
  - Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema)
  - Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.Delete(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String,System.String,System.String)
  - Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.Get(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String,System.String,System.String)
  - Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.GetAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.List(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String,System.String,ODataQuery{Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchemaFilter})
  - Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.ListAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String,System.String,ODataQuery{Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchemaFilter},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.ListNext(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String)
  - Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IntegrationAccountSchemasOperationsExtensions
  fullName: Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountSchemasOperationsExtensions.cs
      branch: 8b1b76897c698a666a3f6c751a7ae04f4356a59f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IntegrationAccountSchemasOperationsExtensions
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountSchemasOperationsExtensions.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nExtension methods for IntegrationAccountSchemasOperations.\n"
  example: []
  syntax:
    content: public class IntegrationAccountSchemasOperationsExtensions
    content.vb: Public Class IntegrationAccountSchemasOperationsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.List(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String,System.String,ODataQuery{Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchemaFilter})
  commentId: M:Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.List(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String,System.String,ODataQuery{Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchemaFilter})
  id: List(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String,System.String,ODataQuery{Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchemaFilter})
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions
  langs:
  - csharp
  - vb
  name: List(IIntegrationAccountSchemasOperations, String, String, ODataQuery<IntegrationAccountSchemaFilter>)
  fullName: Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.List(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations, System.String, System.String, ODataQuery<Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchemaFilter>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountSchemasOperationsExtensions.cs
      branch: 8b1b76897c698a666a3f6c751a7ae04f4356a59f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: List
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountSchemasOperationsExtensions.cs
    startLine: 40
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nGets a list of integration account schemas.\n"
  example: []
  syntax:
    content: public static IPage<IntegrationAccountSchema> List(this IIntegrationAccountSchemasOperations operations, string resourceGroupName, string integrationAccountName, ODataQuery<IntegrationAccountSchemaFilter> odataQuery = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function List(operations As IIntegrationAccountSchemasOperations, resourceGroupName As String, integrationAccountName As String, odataQuery As ODataQuery(Of IntegrationAccountSchemaFilter) = Nothing) As IPage(Of IntegrationAccountSchema)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe resource group name.\n"
    - id: integrationAccountName
      type: System.String
      description: "\nThe integration account name.\n"
    - id: odataQuery
      type: ODataQuery{Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchemaFilter}
      description: "\nOData parameters to apply to the operation.\n"
    return:
      type: IPage{Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.List(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations, System.String, System.String, ODataQuery(Of Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchemaFilter))
  name.vb: List(IIntegrationAccountSchemasOperations, String, String, ODataQuery(Of IntegrationAccountSchemaFilter))
- uid: Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.ListAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String,System.String,ODataQuery{Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchemaFilter},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.ListAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String,System.String,ODataQuery{Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchemaFilter},System.Threading.CancellationToken)
  id: ListAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String,System.String,ODataQuery{Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchemaFilter},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListAsync(IIntegrationAccountSchemasOperations, String, String, ODataQuery<IntegrationAccountSchemaFilter>, CancellationToken)
  fullName: Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.ListAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations, System.String, System.String, ODataQuery<Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchemaFilter>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountSchemasOperationsExtensions.cs
      branch: 8b1b76897c698a666a3f6c751a7ae04f4356a59f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListAsync
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountSchemasOperationsExtensions.cs
    startLine: 63
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nGets a list of integration account schemas.\n"
  example: []
  syntax:
    content: public static Task<IPage<IntegrationAccountSchema>> ListAsync(this IIntegrationAccountSchemasOperations operations, string resourceGroupName, string integrationAccountName, ODataQuery<IntegrationAccountSchemaFilter> odataQuery = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListAsync(operations As IIntegrationAccountSchemasOperations, resourceGroupName As String, integrationAccountName As String, odataQuery As ODataQuery(Of IntegrationAccountSchemaFilter) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IPage(Of IntegrationAccountSchema))
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe resource group name.\n"
    - id: integrationAccountName
      type: System.String
      description: "\nThe integration account name.\n"
    - id: odataQuery
      type: ODataQuery{Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchemaFilter}
      description: "\nOData parameters to apply to the operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{IPage{Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema}}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.ListAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations, System.String, System.String, ODataQuery(Of Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchemaFilter), System.Threading.CancellationToken)
  name.vb: ListAsync(IIntegrationAccountSchemasOperations, String, String, ODataQuery(Of IntegrationAccountSchemaFilter), CancellationToken)
- uid: Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.Get(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.Get(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String,System.String,System.String)
  id: Get(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions
  langs:
  - csharp
  - vb
  name: Get(IIntegrationAccountSchemasOperations, String, String, String)
  fullName: Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.Get(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountSchemasOperationsExtensions.cs
      branch: 8b1b76897c698a666a3f6c751a7ae04f4356a59f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Get
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountSchemasOperationsExtensions.cs
    startLine: 86
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nGets an integration account schema.\n"
  example: []
  syntax:
    content: public static IntegrationAccountSchema Get(this IIntegrationAccountSchemasOperations operations, string resourceGroupName, string integrationAccountName, string schemaName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Get(operations As IIntegrationAccountSchemasOperations, resourceGroupName As String, integrationAccountName As String, schemaName As String) As IntegrationAccountSchema
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe resource group name.\n"
    - id: integrationAccountName
      type: System.String
      description: "\nThe integration account name.\n"
    - id: schemaName
      type: System.String
      description: "\nThe integration account schema name.\n"
    return:
      type: Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.GetAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.GetAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: GetAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetAsync(IIntegrationAccountSchemasOperations, String, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.GetAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations, System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountSchemasOperationsExtensions.cs
      branch: 8b1b76897c698a666a3f6c751a7ae04f4356a59f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetAsync
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountSchemasOperationsExtensions.cs
    startLine: 109
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nGets an integration account schema.\n"
  example: []
  syntax:
    content: public static Task<IntegrationAccountSchema> GetAsync(this IIntegrationAccountSchemasOperations operations, string resourceGroupName, string integrationAccountName, string schemaName, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAsync(operations As IIntegrationAccountSchemasOperations, resourceGroupName As String, integrationAccountName As String, schemaName As String, cancellationToken As CancellationToken = Nothing) As Task(Of IntegrationAccountSchema)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe resource group name.\n"
    - id: integrationAccountName
      type: System.String
      description: "\nThe integration account name.\n"
    - id: schemaName
      type: System.String
      description: "\nThe integration account schema name.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema)
  commentId: M:Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema)
  id: CreateOrUpdate(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateOrUpdate(IIntegrationAccountSchemasOperations, String, String, String, IntegrationAccountSchema)
  fullName: Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations, System.String, System.String, System.String, Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountSchemasOperationsExtensions.cs
      branch: 8b1b76897c698a666a3f6c751a7ae04f4356a59f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateOrUpdate
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountSchemasOperationsExtensions.cs
    startLine: 135
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nCreates or updates an integration account schema.\n"
  example: []
  syntax:
    content: public static IntegrationAccountSchema CreateOrUpdate(this IIntegrationAccountSchemasOperations operations, string resourceGroupName, string integrationAccountName, string schemaName, IntegrationAccountSchema schema)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateOrUpdate(operations As IIntegrationAccountSchemasOperations, resourceGroupName As String, integrationAccountName As String, schemaName As String, schema As IntegrationAccountSchema) As IntegrationAccountSchema
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe resource group name.\n"
    - id: integrationAccountName
      type: System.String
      description: "\nThe integration account name.\n"
    - id: schemaName
      type: System.String
      description: "\nThe integration account schema name.\n"
    - id: schema
      type: Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema
      description: "\nThe integration account schema.\n"
    return:
      type: Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema,System.Threading.CancellationToken)
  id: CreateOrUpdateAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateOrUpdateAsync(IIntegrationAccountSchemasOperations, String, String, String, IntegrationAccountSchema, CancellationToken)
  fullName: Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations, System.String, System.String, System.String, Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountSchemasOperationsExtensions.cs
      branch: 8b1b76897c698a666a3f6c751a7ae04f4356a59f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateOrUpdateAsync
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountSchemasOperationsExtensions.cs
    startLine: 161
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nCreates or updates an integration account schema.\n"
  example: []
  syntax:
    content: public static Task<IntegrationAccountSchema> CreateOrUpdateAsync(this IIntegrationAccountSchemasOperations operations, string resourceGroupName, string integrationAccountName, string schemaName, IntegrationAccountSchema schema, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateOrUpdateAsync(operations As IIntegrationAccountSchemasOperations, resourceGroupName As String, integrationAccountName As String, schemaName As String, schema As IntegrationAccountSchema, cancellationToken As CancellationToken = Nothing) As Task(Of IntegrationAccountSchema)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe resource group name.\n"
    - id: integrationAccountName
      type: System.String
      description: "\nThe integration account name.\n"
    - id: schemaName
      type: System.String
      description: "\nThe integration account schema name.\n"
    - id: schema
      type: Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema
      description: "\nThe integration account schema.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.Delete(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.Delete(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String,System.String,System.String)
  id: Delete(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions
  langs:
  - csharp
  - vb
  name: Delete(IIntegrationAccountSchemasOperations, String, String, String)
  fullName: Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.Delete(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountSchemasOperationsExtensions.cs
      branch: 8b1b76897c698a666a3f6c751a7ae04f4356a59f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Delete
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountSchemasOperationsExtensions.cs
    startLine: 184
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nDeletes an integration account schema.\n"
  example: []
  syntax:
    content: public static void Delete(this IIntegrationAccountSchemasOperations operations, string resourceGroupName, string integrationAccountName, string schemaName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Delete(operations As IIntegrationAccountSchemasOperations, resourceGroupName As String, integrationAccountName As String, schemaName As String)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe resource group name.\n"
    - id: integrationAccountName
      type: System.String
      description: "\nThe integration account name.\n"
    - id: schemaName
      type: System.String
      description: "\nThe integration account schema name.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: DeleteAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions
  langs:
  - csharp
  - vb
  name: DeleteAsync(IIntegrationAccountSchemasOperations, String, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations, System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountSchemasOperationsExtensions.cs
      branch: 8b1b76897c698a666a3f6c751a7ae04f4356a59f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeleteAsync
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountSchemasOperationsExtensions.cs
    startLine: 207
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nDeletes an integration account schema.\n"
  example: []
  syntax:
    content: public static Task DeleteAsync(this IIntegrationAccountSchemasOperations operations, string resourceGroupName, string integrationAccountName, string schemaName, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteAsync(operations As IIntegrationAccountSchemasOperations, resourceGroupName As String, integrationAccountName As String, schemaName As String, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe resource group name.\n"
    - id: integrationAccountName
      type: System.String
      description: "\nThe integration account name.\n"
    - id: schemaName
      type: System.String
      description: "\nThe integration account schema name.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.ListNext(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String)
  commentId: M:Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.ListNext(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String)
  id: ListNext(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListNext(IIntegrationAccountSchemasOperations, String)
  fullName: Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.ListNext(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountSchemasOperationsExtensions.cs
      branch: 8b1b76897c698a666a3f6c751a7ae04f4356a59f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListNext
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountSchemasOperationsExtensions.cs
    startLine: 221
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nGets a list of integration account schemas.\n"
  example: []
  syntax:
    content: public static IPage<IntegrationAccountSchema> ListNext(this IIntegrationAccountSchemasOperations operations, string nextPageLink)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListNext(operations As IIntegrationAccountSchemasOperations, nextPageLink As String) As IPage(Of IntegrationAccountSchema)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    return:
      type: IPage{Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String,System.Threading.CancellationToken)
  id: ListNextAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListNextAsync(IIntegrationAccountSchemasOperations, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Logic.IntegrationAccountSchemasOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountSchemasOperationsExtensions.cs
      branch: 8b1b76897c698a666a3f6c751a7ae04f4356a59f
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListNextAsync
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountSchemasOperationsExtensions.cs
    startLine: 238
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nGets a list of integration account schemas.\n"
  example: []
  syntax:
    content: public static Task<IPage<IntegrationAccountSchema>> ListNextAsync(this IIntegrationAccountSchemasOperations operations, string nextPageLink, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListNextAsync(operations As IIntegrationAccountSchemasOperations, nextPageLink As String, cancellationToken As CancellationToken = Nothing) As Task(Of IPage(Of IntegrationAccountSchema))
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{IPage{Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema}}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.Management.Logic
  isExternal: false
  name: Microsoft.Azure.Management.Logic
  fullName: Microsoft.Azure.Management.Logic
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations
  parent: Microsoft.Azure.Management.Logic
  isExternal: false
  name: IIntegrationAccountSchemasOperations
  fullName: Microsoft.Azure.Management.Logic.IIntegrationAccountSchemasOperations
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: ODataQuery{Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchemaFilter}
  definition: ODataQuery`1
  name: ODataQuery<IntegrationAccountSchemaFilter>
  fullName: ODataQuery<Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchemaFilter>
  fullname.vb: ODataQuery(Of Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchemaFilter)
  name.vb: ODataQuery(Of IntegrationAccountSchemaFilter)
  spec.csharp:
  - uid: ODataQuery`1
    name: ODataQuery
    fullName: ODataQuery
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchemaFilter
    name: IntegrationAccountSchemaFilter
    fullName: Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchemaFilter
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: ODataQuery`1
    name: ODataQuery
    fullName: ODataQuery
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchemaFilter
    name: IntegrationAccountSchemaFilter
    fullName: Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchemaFilter
  - name: )
    fullName: )
- uid: IPage{Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema}
  definition: IPage`1
  name: IPage<IntegrationAccountSchema>
  fullName: IPage<Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema>
  fullname.vb: IPage(Of Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema)
  name.vb: IPage(Of IntegrationAccountSchema)
  spec.csharp:
  - uid: IPage`1
    name: IPage
    fullName: IPage
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema
    name: IntegrationAccountSchema
    fullName: Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IPage`1
    name: IPage
    fullName: IPage
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema
    name: IntegrationAccountSchema
    fullName: Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema
  - name: )
    fullName: )
- uid: ODataQuery`1
  isExternal: true
  name: ODataQuery<>
  fullName: ODataQuery<>
  fullname.vb: ODataQuery(Of )
  name.vb: ODataQuery(Of )
  spec.csharp:
  - uid: ODataQuery`1
    name: ODataQuery
    fullName: ODataQuery
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: ODataQuery`1
    name: ODataQuery
    fullName: ODataQuery
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: IPage`1
  isExternal: true
  name: IPage<>
  fullName: IPage<>
  fullname.vb: IPage(Of )
  name.vb: IPage(Of )
  spec.csharp:
  - uid: IPage`1
    name: IPage
    fullName: IPage
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IPage`1
    name: IPage
    fullName: IPage
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{IPage{Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IPage<IntegrationAccountSchema>>
  fullName: System.Threading.Tasks.Task<IPage<Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema>>
  fullname.vb: System.Threading.Tasks.Task(Of IPage(Of Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema))
  name.vb: Task(Of IPage(Of IntegrationAccountSchema))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: IPage`1
    name: IPage
    fullName: IPage
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema
    name: IntegrationAccountSchema
    fullName: Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: IPage`1
    name: IPage
    fullName: IPage
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema
    name: IntegrationAccountSchema
    fullName: Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema
  parent: Microsoft.Azure.Management.Logic.Models
  isExternal: false
  name: IntegrationAccountSchema
  fullName: Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema
- uid: Microsoft.Azure.Management.Logic.Models
  isExternal: false
  name: Microsoft.Azure.Management.Logic.Models
  fullName: Microsoft.Azure.Management.Logic.Models
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IntegrationAccountSchema>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema)
  name.vb: Task(Of IntegrationAccountSchema)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema
    name: IntegrationAccountSchema
    fullName: Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema
    name: IntegrationAccountSchema
    fullName: Microsoft.Azure.Management.Logic.Models.IntegrationAccountSchema
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  fullName: System.Threading.Tasks.Task
