items:
- uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet`1
  commentId: T:Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet`1
  id: IWithSubnet`1
  parent: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition
  children:
  - Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet`1.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  langs:
  - csharp
  - vb
  name: IWithSubnet<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet<ParentT>
  type: Interface
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/PrivateFrontend/Definition/IDefinition.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IWithSubnet
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/PrivateFrontend/Definition/IDefinition.cs
    startLine: 43
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition
  syntax:
    content: 'public interface IWithSubnet<ParentT> : Resource.Core.HasSubnet.Definition.IWithSubnet<IWithAttach<ParentT>>'
    content.vb: >-
      Public Interface IWithSubnet(Of ParentT)
          Inherits Resource.Core.HasSubnet.Definition.IWithSubnet(Of IWithAttach(Of ParentT))
    typeParameters:
    - id: ParentT
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet(Of ParentT)
  name.vb: IWithSubnet(Of ParentT)
- uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet`1.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet`1.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  id: WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet`1
  langs:
  - csharp
  - vb
  name: WithExistingSubnet(INetwork, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet<ParentT>.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/PrivateFrontend/Definition/IDefinition.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithExistingSubnet
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/PrivateFrontend/Definition/IDefinition.cs
    startLine: 52
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition
  summary: "\nAssigns the specified subnet to this private frontend of an internal load balancer.\n"
  example: []
  syntax:
    content: IWithAttach<ParentT> WithExistingSubnet(INetwork network, string subnetName)
    content.vb: Function WithExistingSubnet(network As INetwork, subnetName As String) As IWithAttach(Of ParentT)
    parameters:
    - id: network
      type: Microsoft.Azure.Management.Fluent.Network.INetwork
      description: network the virtual network the subnet exists in
    - id: subnetName
      type: System.String
      description: subnetName the name of a subnet
    return:
      type: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach{{ParentT}}
      description: the next stage of the definition
  fullName.vb: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithSubnet(Of ParentT).WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork, System.String)
references:
- uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition
- uid: Microsoft.Azure.Management.Fluent.Network.INetwork
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: INetwork
  fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach{{ParentT}}
  parent: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach`1
  name: IWithAttach<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach(Of ParentT)
  name.vb: IWithAttach(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network
  fullName: Microsoft.Azure.Management.Fluent.Network
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach`1
  parent: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition
  isExternal: false
  name: IWithAttach<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach(Of ParentT)
  name.vb: IWithAttach(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
