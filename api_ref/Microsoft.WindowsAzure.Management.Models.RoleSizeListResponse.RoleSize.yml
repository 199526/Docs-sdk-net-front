### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize
  commentId: T:Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize
  id: RoleSizeListResponse.RoleSize
  parent: Microsoft.WindowsAzure.Management.Models
  children:
  - Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize.#ctor
  - Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize.Cores
  - Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize.Label
  - Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize.MaxDataDiskCount
  - Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize.MemoryInMb
  - Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize.Name
  - Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize.SupportedByVirtualMachines
  - Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize.SupportedByWebWorkerRoles
  - Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize.VirtualMachineResourceDiskSizeInMb
  - Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize.WebWorkerResourceDiskSizeInMb
  langs:
  - csharp
  - vb
  name: RoleSizeListResponse.RoleSize
  nameWithType: RoleSizeListResponse.RoleSize
  fullName: Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize
  type: Class
  source:
    remote:
      path: src/ServiceManagement/Management/Management/Generated/Models/RoleSizeListResponse.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RoleSize
    path: src/ServiceManagement/Management/Management/Generated/Models/RoleSizeListResponse.cs
    startLine: 73
  assemblies:
  - Microsoft.WindowsAzure.Management
  namespace: Microsoft.WindowsAzure.Management.Models
  summary: "\nA role size that is valid for your subscription.\n"
  example: []
  syntax:
    content: public class RoleSize
    content.vb: Public Class RoleSize
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize.Cores
  commentId: P:Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize.Cores
  id: Cores
  parent: Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize
  langs:
  - csharp
  - vb
  name: Cores
  nameWithType: RoleSizeListResponse.RoleSize.Cores
  fullName: Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize.Cores
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Management/Management/Generated/Models/RoleSizeListResponse.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Cores
    path: src/ServiceManagement/Management/Management/Generated/Models/RoleSizeListResponse.cs
    startLine: 80
  assemblies:
  - Microsoft.WindowsAzure.Management
  namespace: Microsoft.WindowsAzure.Management.Models
  summary: "\nOptional. Number of cores available for the role size.\n"
  example: []
  syntax:
    content: public int Cores { get; set; }
    content.vb: Public Property Cores As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize.Label
  commentId: P:Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize.Label
  id: Label
  parent: Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize
  langs:
  - csharp
  - vb
  name: Label
  nameWithType: RoleSizeListResponse.RoleSize.Label
  fullName: Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize.Label
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Management/Management/Generated/Models/RoleSizeListResponse.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Label
    path: src/ServiceManagement/Management/Management/Generated/Models/RoleSizeListResponse.cs
    startLine: 91
  assemblies:
  - Microsoft.WindowsAzure.Management
  namespace: Microsoft.WindowsAzure.Management.Models
  summary: "\nOptional. Localized label of the role size.\n"
  example: []
  syntax:
    content: public string Label { get; set; }
    content.vb: Public Property Label As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize.MaxDataDiskCount
  commentId: P:Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize.MaxDataDiskCount
  id: MaxDataDiskCount
  parent: Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize
  langs:
  - csharp
  - vb
  name: MaxDataDiskCount
  nameWithType: RoleSizeListResponse.RoleSize.MaxDataDiskCount
  fullName: Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize.MaxDataDiskCount
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Management/Management/Generated/Models/RoleSizeListResponse.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MaxDataDiskCount
    path: src/ServiceManagement/Management/Management/Generated/Models/RoleSizeListResponse.cs
    startLine: 103
  assemblies:
  - Microsoft.WindowsAzure.Management
  namespace: Microsoft.WindowsAzure.Management.Models
  summary: "\nOptional. Number of data disks that can be attached for the\ngiven role size.\n"
  example: []
  syntax:
    content: public int MaxDataDiskCount { get; set; }
    content.vb: Public Property MaxDataDiskCount As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize.MemoryInMb
  commentId: P:Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize.MemoryInMb
  id: MemoryInMb
  parent: Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize
  langs:
  - csharp
  - vb
  name: MemoryInMb
  nameWithType: RoleSizeListResponse.RoleSize.MemoryInMb
  fullName: Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize.MemoryInMb
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Management/Management/Generated/Models/RoleSizeListResponse.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MemoryInMb
    path: src/ServiceManagement/Management/Management/Generated/Models/RoleSizeListResponse.cs
    startLine: 114
  assemblies:
  - Microsoft.WindowsAzure.Management
  namespace: Microsoft.WindowsAzure.Management.Models
  summary: "\nOptional. Memory available for the role size.\n"
  example: []
  syntax:
    content: public int MemoryInMb { get; set; }
    content.vb: Public Property MemoryInMb As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize.Name
  commentId: P:Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize.Name
  id: Name
  parent: Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: RoleSizeListResponse.RoleSize.Name
  fullName: Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize.Name
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Management/Management/Generated/Models/RoleSizeListResponse.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/ServiceManagement/Management/Management/Generated/Models/RoleSizeListResponse.cs
    startLine: 126
  assemblies:
  - Microsoft.WindowsAzure.Management
  namespace: Microsoft.WindowsAzure.Management.Models
  summary: "\nOptional. The name of a role size that is valid for your\nsubscription.\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize.SupportedByVirtualMachines
  commentId: P:Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize.SupportedByVirtualMachines
  id: SupportedByVirtualMachines
  parent: Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize
  langs:
  - csharp
  - vb
  name: SupportedByVirtualMachines
  nameWithType: RoleSizeListResponse.RoleSize.SupportedByVirtualMachines
  fullName: Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize.SupportedByVirtualMachines
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Management/Management/Generated/Models/RoleSizeListResponse.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SupportedByVirtualMachines
    path: src/ServiceManagement/Management/Management/Generated/Models/RoleSizeListResponse.cs
    startLine: 137
  assemblies:
  - Microsoft.WindowsAzure.Management
  namespace: Microsoft.WindowsAzure.Management.Models
  summary: "\nOptional. Indicating if the role size is supported by VMs.\n"
  example: []
  syntax:
    content: public bool SupportedByVirtualMachines { get; set; }
    content.vb: Public Property SupportedByVirtualMachines As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize.SupportedByWebWorkerRoles
  commentId: P:Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize.SupportedByWebWorkerRoles
  id: SupportedByWebWorkerRoles
  parent: Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize
  langs:
  - csharp
  - vb
  name: SupportedByWebWorkerRoles
  nameWithType: RoleSizeListResponse.RoleSize.SupportedByWebWorkerRoles
  fullName: Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize.SupportedByWebWorkerRoles
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Management/Management/Generated/Models/RoleSizeListResponse.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SupportedByWebWorkerRoles
    path: src/ServiceManagement/Management/Management/Generated/Models/RoleSizeListResponse.cs
    startLine: 149
  assemblies:
  - Microsoft.WindowsAzure.Management
  namespace: Microsoft.WindowsAzure.Management.Models
  summary: "\nOptional. Indicating if the role size is supported by\nweb/worker roles.\n"
  example: []
  syntax:
    content: public bool SupportedByWebWorkerRoles { get; set; }
    content.vb: Public Property SupportedByWebWorkerRoles As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize.VirtualMachineResourceDiskSizeInMb
  commentId: P:Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize.VirtualMachineResourceDiskSizeInMb
  id: VirtualMachineResourceDiskSizeInMb
  parent: Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize
  langs:
  - csharp
  - vb
  name: VirtualMachineResourceDiskSizeInMb
  nameWithType: RoleSizeListResponse.RoleSize.VirtualMachineResourceDiskSizeInMb
  fullName: Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize.VirtualMachineResourceDiskSizeInMb
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Management/Management/Generated/Models/RoleSizeListResponse.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VirtualMachineResourceDiskSizeInMb
    path: src/ServiceManagement/Management/Management/Generated/Models/RoleSizeListResponse.cs
    startLine: 161
  assemblies:
  - Microsoft.WindowsAzure.Management
  namespace: Microsoft.WindowsAzure.Management.Models
  summary: "\nOptional. Resource disk drive size for the role size in IaaS\ndeployment.\n"
  example: []
  syntax:
    content: public int VirtualMachineResourceDiskSizeInMb { get; set; }
    content.vb: Public Property VirtualMachineResourceDiskSizeInMb As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize.WebWorkerResourceDiskSizeInMb
  commentId: P:Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize.WebWorkerResourceDiskSizeInMb
  id: WebWorkerResourceDiskSizeInMb
  parent: Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize
  langs:
  - csharp
  - vb
  name: WebWorkerResourceDiskSizeInMb
  nameWithType: RoleSizeListResponse.RoleSize.WebWorkerResourceDiskSizeInMb
  fullName: Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize.WebWorkerResourceDiskSizeInMb
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Management/Management/Generated/Models/RoleSizeListResponse.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WebWorkerResourceDiskSizeInMb
    path: src/ServiceManagement/Management/Management/Generated/Models/RoleSizeListResponse.cs
    startLine: 173
  assemblies:
  - Microsoft.WindowsAzure.Management
  namespace: Microsoft.WindowsAzure.Management.Models
  summary: "\nOptional. Resource disk drive size for the role size in PaaS\ndeployment.\n"
  example: []
  syntax:
    content: public int WebWorkerResourceDiskSizeInMb { get; set; }
    content.vb: Public Property WebWorkerResourceDiskSizeInMb As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize
  langs:
  - csharp
  - vb
  name: RoleSize()
  nameWithType: RoleSizeListResponse.RoleSize.RoleSize()
  fullName: Microsoft.WindowsAzure.Management.Models.RoleSizeListResponse.RoleSize.RoleSize()
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/Management/Management/Generated/Models/RoleSizeListResponse.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/Management/Management/Generated/Models/RoleSizeListResponse.cs
    startLine: 182
  assemblies:
  - Microsoft.WindowsAzure.Management
  namespace: Microsoft.WindowsAzure.Management.Models
  summary: "\nInitializes a new instance of the RoleSize class.\n"
  example: []
  syntax:
    content: public RoleSize()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.Models
  commentId: N:Microsoft.WindowsAzure.Management.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Models
  nameWithType: Microsoft.WindowsAzure.Management.Models
  fullName: Microsoft.WindowsAzure.Management.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
