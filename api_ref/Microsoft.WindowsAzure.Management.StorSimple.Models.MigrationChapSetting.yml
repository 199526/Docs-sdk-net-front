### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationChapSetting
  commentId: T:Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationChapSetting
  id: MigrationChapSetting
  parent: Microsoft.WindowsAzure.Management.StorSimple.Models
  children:
  - Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationChapSetting.#ctor
  - Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationChapSetting.Id
  - Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationChapSetting.Name
  - Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationChapSetting.Password
  - Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationChapSetting.SecretsEncryptionThumbprint
  - Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationChapSetting.Valid
  langs:
  - csharp
  - vb
  name: MigrationChapSetting
  nameWithType: MigrationChapSetting
  fullName: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationChapSetting
  type: Class
  source:
    remote:
      path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/MigrationChapSetting.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MigrationChapSetting
    path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/MigrationChapSetting.cs
    startLine: 29
  assemblies:
  - Microsoft.WindowsAzure.Management.StorSimple
  namespace: Microsoft.WindowsAzure.Management.StorSimple.Models
  summary: "\nThis class respresents the iSCSI chap settings.\n"
  example: []
  syntax:
    content: public class MigrationChapSetting
    content.vb: Public Class MigrationChapSetting
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationChapSetting.Id
  commentId: P:Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationChapSetting.Id
  id: Id
  parent: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationChapSetting
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: MigrationChapSetting.Id
  fullName: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationChapSetting.Id
  type: Property
  source:
    remote:
      path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/MigrationChapSetting.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Id
    path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/MigrationChapSetting.cs
    startLine: 36
  assemblies:
  - Microsoft.WindowsAzure.Management.StorSimple
  namespace: Microsoft.WindowsAzure.Management.StorSimple.Models
  summary: "\nOptional. Gets or sets the Id of the chap settings.\n"
  example: []
  syntax:
    content: public string Id { get; set; }
    content.vb: Public Property Id As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationChapSetting.Name
  commentId: P:Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationChapSetting.Name
  id: Name
  parent: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationChapSetting
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: MigrationChapSetting.Name
  fullName: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationChapSetting.Name
  type: Property
  source:
    remote:
      path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/MigrationChapSetting.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/MigrationChapSetting.cs
    startLine: 47
  assemblies:
  - Microsoft.WindowsAzure.Management.StorSimple
  namespace: Microsoft.WindowsAzure.Management.StorSimple.Models
  summary: "\nRequired. Gets or sets the name of the chap setting\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationChapSetting.Password
  commentId: P:Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationChapSetting.Password
  id: Password
  parent: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationChapSetting
  langs:
  - csharp
  - vb
  name: Password
  nameWithType: MigrationChapSetting.Password
  fullName: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationChapSetting.Password
  type: Property
  source:
    remote:
      path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/MigrationChapSetting.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Password
    path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/MigrationChapSetting.cs
    startLine: 58
  assemblies:
  - Microsoft.WindowsAzure.Management.StorSimple
  namespace: Microsoft.WindowsAzure.Management.StorSimple.Models
  summary: "\nRequired. Gets or sets the chap password\n"
  example: []
  syntax:
    content: public string Password { get; set; }
    content.vb: Public Property Password As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationChapSetting.SecretsEncryptionThumbprint
  commentId: P:Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationChapSetting.SecretsEncryptionThumbprint
  id: SecretsEncryptionThumbprint
  parent: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationChapSetting
  langs:
  - csharp
  - vb
  name: SecretsEncryptionThumbprint
  nameWithType: MigrationChapSetting.SecretsEncryptionThumbprint
  fullName: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationChapSetting.SecretsEncryptionThumbprint
  type: Property
  source:
    remote:
      path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/MigrationChapSetting.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SecretsEncryptionThumbprint
    path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/MigrationChapSetting.cs
    startLine: 69
  assemblies:
  - Microsoft.WindowsAzure.Management.StorSimple
  namespace: Microsoft.WindowsAzure.Management.StorSimple.Models
  summary: "\nRequired. Gets or sets the password encryption thumbprint.\n"
  example: []
  syntax:
    content: public string SecretsEncryptionThumbprint { get; set; }
    content.vb: Public Property SecretsEncryptionThumbprint As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationChapSetting.Valid
  commentId: P:Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationChapSetting.Valid
  id: Valid
  parent: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationChapSetting
  langs:
  - csharp
  - vb
  name: Valid
  nameWithType: MigrationChapSetting.Valid
  fullName: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationChapSetting.Valid
  type: Property
  source:
    remote:
      path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/MigrationChapSetting.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Valid
    path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/MigrationChapSetting.cs
    startLine: 81
  assemblies:
  - Microsoft.WindowsAzure.Management.StorSimple
  namespace: Microsoft.WindowsAzure.Management.StorSimple.Models
  summary: "\nRequired. Gets or sets a value indicating whether the chap is valid\nor not.\n"
  example: []
  syntax:
    content: public bool Valid { get; set; }
    content.vb: Public Property Valid As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationChapSetting.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationChapSetting.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationChapSetting
  langs:
  - csharp
  - vb
  name: MigrationChapSetting()
  nameWithType: MigrationChapSetting.MigrationChapSetting()
  fullName: Microsoft.WindowsAzure.Management.StorSimple.Models.MigrationChapSetting.MigrationChapSetting()
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/MigrationChapSetting.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/MigrationChapSetting.cs
    startLine: 90
  assemblies:
  - Microsoft.WindowsAzure.Management.StorSimple
  namespace: Microsoft.WindowsAzure.Management.StorSimple.Models
  summary: "\nInitializes a new instance of the MigrationChapSetting class.\n"
  example: []
  syntax:
    content: public MigrationChapSetting()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.StorSimple.Models
  commentId: N:Microsoft.WindowsAzure.Management.StorSimple.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.StorSimple.Models
  nameWithType: Microsoft.WindowsAzure.Management.StorSimple.Models
  fullName: Microsoft.WindowsAzure.Management.StorSimple.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
