items:
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  commentId: T:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  id: LoadBalancerImpl
  parent: Microsoft.Azure.Management.Fluent.Network
  children:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.AfterCreating
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Backends
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.BeforeCreating
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.CreateInner
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.DefineBackend(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.DefineHttpProbe(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.DefineInboundNatPool(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.DefineInboundNatRule(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.DefineLoadBalancingRule(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.DefinePrivateFrontend(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.DefinePublicFrontend(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.DefineTcpProbe(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Frontends
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.HttpProbes
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.InboundNatPools
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.InboundNatRules
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.InitializeChildrenFromInner
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.LoadBalancingRules
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#IHasLoadBalancingRules#LoadBalancingRules
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#ILoadBalancer#Backends
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#ILoadBalancer#Frontends
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#ILoadBalancer#HttpProbes
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#ILoadBalancer#InboundNatPools
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#ILoadBalancer#InboundNatRules
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#ILoadBalancer#PublicIpAddressIds
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#ILoadBalancer#TcpProbes
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithBackend#DefineBackend(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithInboundNatPool#DefineInboundNatPool(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithInboundNatRule#DefineInboundNatRule(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRule#DefineLoadBalancingRule(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRule#WithLoadBalancingRule(System.Int32,System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRule#WithLoadBalancingRule(System.Int32,System.String,System.Int32)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithNetworkSubnet#WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPrivateFrontend#DefinePrivateFrontend(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithProbe#DefineHttpProbe(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithProbe#DefineTcpProbe(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithProbe#WithHttpProbe(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithProbe#WithTcpProbe(System.Int32)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPublicFrontend#DefinePublicFrontend(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPublicFrontendOrBackend}#WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPublicFrontendOrBackend}#WithNewPublicIpAddress
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPublicFrontendOrBackend}#WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPublicFrontendOrBackend}#WithNewPublicIpAddress(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithVirtualMachine{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithBackendOrProbe}#WithExistingVirtualMachines(Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces[])
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithBackend#DefineBackend(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithBackend#UpdateBackend(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithBackend#WithoutBackend(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithInboundNatPool#DefineInboundNatPool(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithInboundNatPool#UpdateInboundNatPool(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithInboundNatPool#WithoutInboundNatPool(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithInboundNatRule#DefineInboundNatRule(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithInboundNatRule#UpdateInboundNatRule(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithInboundNatRule#WithoutInboundNatRule(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithInternalFrontend#DefinePrivateFrontend(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithInternalFrontend#UpdateInternalFrontend(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithInternetFrontend#DefinePublicFrontend(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithInternetFrontend#UpdateInternetFrontend(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithInternetFrontend#WithoutFrontend(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithLoadBalancingRule#DefineLoadBalancingRule(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithLoadBalancingRule#UpdateLoadBalancingRule(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithLoadBalancingRule#WithLoadBalancingRule(System.Int32,System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithLoadBalancingRule#WithLoadBalancingRule(System.Int32,System.String,System.Int32)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithLoadBalancingRule#WithoutLoadBalancingRule(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithNetworkSubnet#WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithProbe#DefineHttpProbe(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithProbe#DefineTcpProbe(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithProbe#UpdateHttpProbe(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithProbe#UpdateTcpProbe(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithProbe#WithHttpProbe(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithProbe#WithoutProbe(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithProbe#WithTcpProbe(System.Int32)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithPublicIpAddress#WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithPublicIpAddress#WithNewPublicIpAddress
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithPublicIpAddress#WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithPublicIpAddress#WithNewPublicIpAddress(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.PublicIpAddressIds
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Refresh
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.TcpProbes
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.UpdateBackend(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.UpdateHttpProbe(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.UpdateInboundNatPool(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.UpdateInboundNatRule(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.UpdateInternalFrontend(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.UpdateInternetFrontend(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.UpdateLoadBalancingRule(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.UpdateTcpProbe(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithExistingVirtualMachines(Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces[])
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithHttpProbe(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithLoadBalancingRule(System.Int32,System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithLoadBalancingRule(System.Int32,System.String,System.Int32)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithNewPublicIpAddress
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithNewPublicIpAddress(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithoutBackend(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithoutFrontend(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithoutInboundNatPool(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithoutInboundNatRule(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithoutLoadBalancingRule(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithoutProbe(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithTcpProbe(System.Int32)
  langs:
  - csharp
  - vb
  name: LoadBalancerImpl
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LoadBalancerImpl
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 12
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nImplementation of the LoadBalancer interface.\n"
  example: []
  syntax:
    content: 'public class LoadBalancerImpl : GroupableParentResource<ILoadBalancer, LoadBalancerInner, Rest.Azure.Resource, LoadBalancerImpl, INetworkManager, IWithGroup, IWithFrontend, IWithCreate, IUpdate>, ILoadBalancer, IGroupableResource, IRefreshable<ILoadBalancer>, IWrapper<LoadBalancerInner>, IUpdatable<IUpdate>, IHasLoadBalancingRules, IDefinition, IBlank, IDefinitionWithRegion<IWithGroup>, IWithGroup, Resource.Core.GroupableResource.Definition.IWithGroup<IWithFrontend>, IWithFrontend, IWithPublicIpAddress<IWithPublicFrontendOrBackend>, IWithPublicFrontendOrBackend, IWithPublicFrontend, IWithPrivateFrontendOrBackend, IWithPrivateFrontend, IWithNetworkSubnet, IWithBackendOrProbe, IWithBackend, IWithVirtualMachine<IWithBackendOrProbe>, IWithProbeOrLoadBalancingRule, IWithProbe, IWithLoadBalancingRuleOrCreate, IWithLoadBalancingRule, IWithCreateAndInboundNatPool, IWithCreateAndInboundNatRule, IWithCreateAndNatChoice, IWithCreate, ICreatable<ILoadBalancer>, IDefinitionWithTags<IWithCreate>, IWithInboundNatRule, IWithInboundNatPool, IUpdate, IAppliable<ILoadBalancer>, IUpdateWithTags<IUpdate>, IWithProbe, IWithBackend, IWithLoadBalancingRule, IWithInternetFrontend, IWithPublicIpAddress, IWithInternalFrontend, IWithNetworkSubnet, IWithInboundNatRule, IWithInboundNatPool'
    content.vb: >-
      Public Class LoadBalancerImpl
          Inherits GroupableParentResource(Of ILoadBalancer, LoadBalancerInner, Rest.Azure.Resource, LoadBalancerImpl, INetworkManager, IWithGroup, IWithFrontend, IWithCreate, IUpdate)
          Implements ILoadBalancer, IGroupableResource, IRefreshable(Of ILoadBalancer), IWrapper(Of LoadBalancerInner), IUpdatable(Of IUpdate), IHasLoadBalancingRules, IDefinition, IBlank, IDefinitionWithRegion(Of IWithGroup), IWithGroup, Resource.Core.GroupableResource.Definition.IWithGroup(Of IWithFrontend), IWithFrontend, IWithPublicIpAddress(Of IWithPublicFrontendOrBackend), IWithPublicFrontendOrBackend, IWithPublicFrontend, IWithPrivateFrontendOrBackend, IWithPrivateFrontend, IWithNetworkSubnet, IWithBackendOrProbe, IWithBackend, IWithVirtualMachine(Of IWithBackendOrProbe), IWithProbeOrLoadBalancingRule, IWithProbe, IWithLoadBalancingRuleOrCreate, IWithLoadBalancingRule, IWithCreateAndInboundNatPool, IWithCreateAndInboundNatRule, IWithCreateAndNatChoice, IWithCreate, ICreatable(Of ILoadBalancer), IDefinitionWithTags(Of IWithCreate), IWithInboundNatRule, IWithInboundNatPool, IUpdate, IAppliable(Of ILoadBalancer), IUpdateWithTags(Of IUpdate), IWithProbe, IWithBackend, IWithLoadBalancingRule, IWithInternetFrontend, IWithPublicIpAddress, IWithInternalFrontend, IWithNetworkSubnet, IWithInboundNatRule, IWithInboundNatPool
  inheritance:
  - System.Object
  implements:
  - Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  - IGroupableResource
  - IRefreshable{Microsoft.Azure.Management.Fluent.Network.ILoadBalancer}
  - IWrapper{Microsoft.Azure.Management.Network.Models.LoadBalancerInner}
  - IUpdatable{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IDefinition
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IBlank
  - IDefinitionWithRegion{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithGroup}
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithGroup
  - Microsoft.Azure.Management.Fluent.Resource.Core.GroupableResource.Definition.IWithGroup{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithFrontend}
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithFrontend
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend}
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontend
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontend
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithNetworkSubnet
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackend
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe}
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbeOrLoadBalancingRule
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRule
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndNatChoice
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreate
  - ICreatable{Microsoft.Azure.Management.Fluent.Network.ILoadBalancer}
  - IDefinitionWithTags{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreate}
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithInboundNatRule
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithInboundNatPool
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - IAppliable{Microsoft.Azure.Management.Fluent.Network.ILoadBalancer}
  - IUpdateWithTags{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternalFrontend
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithNetworkSubnet
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Refresh
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Refresh
  id: Refresh
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: Refresh()
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Refresh()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Refresh
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
    startLine: 52
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public override ILoadBalancer Refresh()
    content.vb: Public Overrides Function Refresh As ILoadBalancer
    return:
      type: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.InitializeChildrenFromInner
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.InitializeChildrenFromInner
  id: InitializeChildrenFromInner
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: InitializeChildrenFromInner()
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.InitializeChildrenFromInner()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: InitializeChildrenFromInner
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
    startLine: 59
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: protected override void InitializeChildrenFromInner()
    content.vb: Protected Overrides Sub InitializeChildrenFromInner
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.BeforeCreating
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.BeforeCreating
  id: BeforeCreating
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: BeforeCreating()
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.BeforeCreating()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BeforeCreating
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
    startLine: 69
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: protected override void BeforeCreating()
    content.vb: Protected Overrides Sub BeforeCreating
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.AfterCreating
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.AfterCreating
  id: AfterCreating
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: AfterCreating()
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.AfterCreating()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AfterCreating
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
    startLine: 142
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: protected override void AfterCreating()
    content.vb: Protected Overrides Sub AfterCreating
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.CreateInner
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.CreateInner
  id: CreateInner
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: CreateInner()
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.CreateInner()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateInner
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
    startLine: 169
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: protected override Task<LoadBalancerInner> CreateInner()
    content.vb: Protected Overrides Function CreateInner As Task(Of LoadBalancerInner)
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Network.Models.LoadBalancerInner}
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithNewPublicIpAddress
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithNewPublicIpAddress
  id: WithNewPublicIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: WithNewPublicIpAddress()
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithNewPublicIpAddress()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithNewPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
    startLine: 337
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public LoadBalancerImpl WithNewPublicIpAddress()
    content.vb: Public Function WithNewPublicIpAddress As LoadBalancerImpl
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithNewPublicIpAddress(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithNewPublicIpAddress(System.String)
  id: WithNewPublicIpAddress(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: WithNewPublicIpAddress(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithNewPublicIpAddress(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithNewPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
    startLine: 344
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public LoadBalancerImpl WithNewPublicIpAddress(string dnsLeafLabel)
    content.vb: Public Function WithNewPublicIpAddress(dnsLeafLabel As String) As LoadBalancerImpl
    parameters:
    - id: dnsLeafLabel
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  id: WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: WithNewPublicIpAddress(ICreatable<IPublicIpAddress>)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithNewPublicIpAddress(ICreatable<Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithNewPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
    startLine: 361
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public LoadBalancerImpl WithNewPublicIpAddress(ICreatable<IPublicIpAddress> creatablePIP)
    content.vb: Public Function WithNewPublicIpAddress(creatablePIP As ICreatable(Of IPublicIpAddress)) As LoadBalancerImpl
    parameters:
    - id: creatablePIP
      type: ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress}
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithNewPublicIpAddress(ICreatable(Of Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress))
  name.vb: WithNewPublicIpAddress(ICreatable(Of IPublicIpAddress))
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  id: WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: WithExistingPublicIpAddress(IPublicIpAddress)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithExistingPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
    startLine: 368
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public LoadBalancerImpl WithExistingPublicIpAddress(IPublicIpAddress publicIpAddress)
    content.vb: Public Function WithExistingPublicIpAddress(publicIpAddress As IPublicIpAddress) As LoadBalancerImpl
    parameters:
    - id: publicIpAddress
      type: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  id: WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: WithExistingSubnet(INetwork, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithExistingSubnet
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
    startLine: 384
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public LoadBalancerImpl WithExistingSubnet(INetwork network, string subnetName)
    content.vb: Public Function WithExistingSubnet(network As INetwork, subnetName As String) As LoadBalancerImpl
    parameters:
    - id: network
      type: Microsoft.Azure.Management.Fluent.Network.INetwork
    - id: subnetName
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithExistingVirtualMachines(Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces[])
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithExistingVirtualMachines(Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces[])
  id: WithExistingVirtualMachines(Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces[])
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: WithExistingVirtualMachines(IHasNetworkInterfaces[])
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithExistingVirtualMachines(Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces[])
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithExistingVirtualMachines
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
    startLine: 406
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public LoadBalancerImpl WithExistingVirtualMachines(params IHasNetworkInterfaces[] vms)
    content.vb: Public Function WithExistingVirtualMachines(ParamArray vms As IHasNetworkInterfaces()) As LoadBalancerImpl
    parameters:
    - id: vms
      type: Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces[]
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithExistingVirtualMachines(Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces())
  name.vb: WithExistingVirtualMachines(IHasNetworkInterfaces())
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithLoadBalancingRule(System.Int32,System.String,System.Int32)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithLoadBalancingRule(System.Int32,System.String,System.Int32)
  id: WithLoadBalancingRule(System.Int32,System.String,System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: WithLoadBalancingRule(Int32, String, Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithLoadBalancingRule(System.Int32, System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithLoadBalancingRule
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
    startLine: 416
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public LoadBalancerImpl WithLoadBalancingRule(int frontendPort, string protocol, int backendPort)
    content.vb: Public Function WithLoadBalancingRule(frontendPort As Integer, protocol As String, backendPort As Integer) As LoadBalancerImpl
    parameters:
    - id: frontendPort
      type: System.Int32
    - id: protocol
      type: System.String
    - id: backendPort
      type: System.Int32
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithLoadBalancingRule(System.Int32,System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithLoadBalancingRule(System.Int32,System.String)
  id: WithLoadBalancingRule(System.Int32,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: WithLoadBalancingRule(Int32, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithLoadBalancingRule(System.Int32, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithLoadBalancingRule
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
    startLine: 429
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public LoadBalancerImpl WithLoadBalancingRule(int port, string protocol)
    content.vb: Public Function WithLoadBalancingRule(port As Integer, protocol As String) As LoadBalancerImpl
    parameters:
    - id: port
      type: System.Int32
    - id: protocol
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithTcpProbe(System.Int32)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithTcpProbe(System.Int32)
  id: WithTcpProbe(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: WithTcpProbe(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithTcpProbe(System.Int32)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithTcpProbe
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
    startLine: 434
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public LoadBalancerImpl WithTcpProbe(int port)
    content.vb: Public Function WithTcpProbe(port As Integer) As LoadBalancerImpl
    parameters:
    - id: port
      type: System.Int32
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithHttpProbe(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithHttpProbe(System.String)
  id: WithHttpProbe(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: WithHttpProbe(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithHttpProbe(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithHttpProbe
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
    startLine: 441
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public LoadBalancerImpl WithHttpProbe(string path)
    content.vb: Public Function WithHttpProbe(path As String) As LoadBalancerImpl
    parameters:
    - id: path
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.DefineTcpProbe(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.DefineTcpProbe(System.String)
  id: DefineTcpProbe(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: DefineTcpProbe(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.DefineTcpProbe(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DefineTcpProbe
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
    startLine: 449
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public ProbeImpl DefineTcpProbe(string name)
    content.vb: Public Function DefineTcpProbe(name As String) As ProbeImpl
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.ProbeImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.DefineHttpProbe(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.DefineHttpProbe(System.String)
  id: DefineHttpProbe(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: DefineHttpProbe(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.DefineHttpProbe(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DefineHttpProbe
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
    startLine: 469
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public ProbeImpl DefineHttpProbe(string name)
    content.vb: Public Function DefineHttpProbe(name As String) As ProbeImpl
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.ProbeImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.DefineLoadBalancingRule(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.DefineLoadBalancingRule(System.String)
  id: DefineLoadBalancingRule(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: DefineLoadBalancingRule(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.DefineLoadBalancingRule(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DefineLoadBalancingRule
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
    startLine: 487
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public LoadBalancingRuleImpl DefineLoadBalancingRule(string name)
    content.vb: Public Function DefineLoadBalancingRule(name As String) As LoadBalancingRuleImpl
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.DefineInboundNatRule(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.DefineInboundNatRule(System.String)
  id: DefineInboundNatRule(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: DefineInboundNatRule(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.DefineInboundNatRule(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DefineInboundNatRule
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
    startLine: 505
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public InboundNatRuleImpl DefineInboundNatRule(string name)
    content.vb: Public Function DefineInboundNatRule(name As String) As InboundNatRuleImpl
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.DefineInboundNatPool(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.DefineInboundNatPool(System.String)
  id: DefineInboundNatPool(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: DefineInboundNatPool(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.DefineInboundNatPool(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DefineInboundNatPool
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
    startLine: 524
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public InboundNatPoolImpl DefineInboundNatPool(string name)
    content.vb: Public Function DefineInboundNatPool(name As String) As InboundNatPoolImpl
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.DefinePrivateFrontend(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.DefinePrivateFrontend(System.String)
  id: DefinePrivateFrontend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: DefinePrivateFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.DefinePrivateFrontend(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DefinePrivateFrontend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
    startLine: 543
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public FrontendImpl DefinePrivateFrontend(string name)
    content.vb: Public Function DefinePrivateFrontend(name As String) As FrontendImpl
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.DefinePublicFrontend(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.DefinePublicFrontend(System.String)
  id: DefinePublicFrontend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: DefinePublicFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.DefinePublicFrontend(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DefinePublicFrontend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
    startLine: 548
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public FrontendImpl DefinePublicFrontend(string name)
    content.vb: Public Function DefinePublicFrontend(name As String) As FrontendImpl
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.DefineBackend(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.DefineBackend(System.String)
  id: DefineBackend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: DefineBackend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.DefineBackend(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DefineBackend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
    startLine: 572
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public BackendImpl DefineBackend(string name)
    content.vb: Public Function DefineBackend(name As String) As BackendImpl
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.BackendImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithoutFrontend(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithoutFrontend(System.String)
  id: WithoutFrontend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: WithoutFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithoutFrontend(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithoutFrontend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
    startLine: 591
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public LoadBalancerImpl WithoutFrontend(string name)
    content.vb: Public Function WithoutFrontend(name As String) As LoadBalancerImpl
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithoutLoadBalancingRule(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithoutLoadBalancingRule(System.String)
  id: WithoutLoadBalancingRule(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: WithoutLoadBalancingRule(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithoutLoadBalancingRule(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithoutLoadBalancingRule
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
    startLine: 597
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public LoadBalancerImpl WithoutLoadBalancingRule(string name)
    content.vb: Public Function WithoutLoadBalancingRule(name As String) As LoadBalancerImpl
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithoutInboundNatRule(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithoutInboundNatRule(System.String)
  id: WithoutInboundNatRule(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: WithoutInboundNatRule(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithoutInboundNatRule(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithoutInboundNatRule
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
    startLine: 603
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public LoadBalancerImpl WithoutInboundNatRule(string name)
    content.vb: Public Function WithoutInboundNatRule(name As String) As LoadBalancerImpl
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithoutBackend(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithoutBackend(System.String)
  id: WithoutBackend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: WithoutBackend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithoutBackend(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithoutBackend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
    startLine: 609
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public LoadBalancerImpl WithoutBackend(string name)
    content.vb: Public Function WithoutBackend(name As String) As LoadBalancerImpl
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithoutInboundNatPool(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithoutInboundNatPool(System.String)
  id: WithoutInboundNatPool(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: WithoutInboundNatPool(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithoutInboundNatPool(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithoutInboundNatPool
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
    startLine: 615
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public IUpdate WithoutInboundNatPool(string name)
    content.vb: Public Function WithoutInboundNatPool(name As String) As IUpdate
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithoutProbe(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithoutProbe(System.String)
  id: WithoutProbe(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: WithoutProbe(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.WithoutProbe(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithoutProbe
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
    startLine: 621
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public LoadBalancerImpl WithoutProbe(string name)
    content.vb: Public Function WithoutProbe(name As String) As LoadBalancerImpl
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.UpdateTcpProbe(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.UpdateTcpProbe(System.String)
  id: UpdateTcpProbe(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: UpdateTcpProbe(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.UpdateTcpProbe(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UpdateTcpProbe
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
    startLine: 628
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public ProbeImpl UpdateTcpProbe(string name)
    content.vb: Public Function UpdateTcpProbe(name As String) As ProbeImpl
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.ProbeImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.UpdateBackend(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.UpdateBackend(System.String)
  id: UpdateBackend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: UpdateBackend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.UpdateBackend(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UpdateBackend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
    startLine: 633
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public BackendImpl UpdateBackend(string name)
    content.vb: Public Function UpdateBackend(name As String) As BackendImpl
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.BackendImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.UpdateInternetFrontend(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.UpdateInternetFrontend(System.String)
  id: UpdateInternetFrontend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: UpdateInternetFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.UpdateInternetFrontend(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UpdateInternetFrontend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
    startLine: 638
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public FrontendImpl UpdateInternetFrontend(string name)
    content.vb: Public Function UpdateInternetFrontend(name As String) As FrontendImpl
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.UpdateInternalFrontend(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.UpdateInternalFrontend(System.String)
  id: UpdateInternalFrontend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: UpdateInternalFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.UpdateInternalFrontend(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UpdateInternalFrontend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
    startLine: 643
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public FrontendImpl UpdateInternalFrontend(string name)
    content.vb: Public Function UpdateInternalFrontend(name As String) As FrontendImpl
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.UpdateInboundNatRule(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.UpdateInboundNatRule(System.String)
  id: UpdateInboundNatRule(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: UpdateInboundNatRule(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.UpdateInboundNatRule(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UpdateInboundNatRule
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
    startLine: 667
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public InboundNatRuleImpl UpdateInboundNatRule(string name)
    content.vb: Public Function UpdateInboundNatRule(name As String) As InboundNatRuleImpl
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.UpdateInboundNatPool(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.UpdateInboundNatPool(System.String)
  id: UpdateInboundNatPool(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: UpdateInboundNatPool(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.UpdateInboundNatPool(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UpdateInboundNatPool
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
    startLine: 672
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public InboundNatPoolImpl UpdateInboundNatPool(string name)
    content.vb: Public Function UpdateInboundNatPool(name As String) As InboundNatPoolImpl
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.UpdateHttpProbe(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.UpdateHttpProbe(System.String)
  id: UpdateHttpProbe(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: UpdateHttpProbe(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.UpdateHttpProbe(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UpdateHttpProbe
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
    startLine: 677
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public ProbeImpl UpdateHttpProbe(string name)
    content.vb: Public Function UpdateHttpProbe(name As String) As ProbeImpl
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.ProbeImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.UpdateLoadBalancingRule(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.UpdateLoadBalancingRule(System.String)
  id: UpdateLoadBalancingRule(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: UpdateLoadBalancingRule(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.UpdateLoadBalancingRule(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UpdateLoadBalancingRule
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
    startLine: 682
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public LoadBalancingRuleImpl UpdateLoadBalancingRule(string name)
    content.vb: Public Function UpdateLoadBalancingRule(name As String) As LoadBalancingRuleImpl
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Backends
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Backends
  id: Backends
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: Backends()
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Backends()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Backends
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
    startLine: 687
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public IDictionary<string, IBackend> Backends()
    content.vb: Public Function Backends As IDictionary(Of String, IBackend)
    return:
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.Fluent.Network.IBackend}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.InboundNatPools
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.InboundNatPools
  id: InboundNatPools
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: InboundNatPools()
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.InboundNatPools()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: InboundNatPools
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
    startLine: 692
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public IDictionary<string, IInboundNatPool> InboundNatPools()
    content.vb: Public Function InboundNatPools As IDictionary(Of String, IInboundNatPool)
    return:
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.Fluent.Network.IInboundNatPool}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.TcpProbes
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.TcpProbes
  id: TcpProbes
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: TcpProbes()
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.TcpProbes()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TcpProbes
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
    startLine: 697
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public IDictionary<string, ITcpProbe> TcpProbes()
    content.vb: Public Function TcpProbes As IDictionary(Of String, ITcpProbe)
    return:
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.Fluent.Network.ITcpProbe}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Frontends
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Frontends
  id: Frontends
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: Frontends()
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Frontends()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Frontends
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
    startLine: 702
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public IDictionary<string, IFrontend> Frontends()
    content.vb: Public Function Frontends As IDictionary(Of String, IFrontend)
    return:
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.Fluent.Network.IFrontend}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.InboundNatRules
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.InboundNatRules
  id: InboundNatRules
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: InboundNatRules()
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.InboundNatRules()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: InboundNatRules
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
    startLine: 707
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public IDictionary<string, IInboundNatRule> InboundNatRules()
    content.vb: Public Function InboundNatRules As IDictionary(Of String, IInboundNatRule)
    return:
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.Fluent.Network.IInboundNatRule}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.HttpProbes
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.HttpProbes
  id: HttpProbes
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: HttpProbes()
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.HttpProbes()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: HttpProbes
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
    startLine: 712
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public IDictionary<string, IHttpProbe> HttpProbes()
    content.vb: Public Function HttpProbes As IDictionary(Of String, IHttpProbe)
    return:
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.Fluent.Network.IHttpProbe}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.LoadBalancingRules
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.LoadBalancingRules
  id: LoadBalancingRules
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: LoadBalancingRules()
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.LoadBalancingRules()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LoadBalancingRules
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
    startLine: 717
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public IDictionary<string, ILoadBalancingRule> LoadBalancingRules()
    content.vb: Public Function LoadBalancingRules As IDictionary(Of String, ILoadBalancingRule)
    return:
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.PublicIpAddressIds
  commentId: P:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.PublicIpAddressIds
  id: PublicIpAddressIds
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: PublicIpAddressIds
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.PublicIpAddressIds
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PublicIpAddressIds
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancerImpl.cs
    startLine: 722
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public List<string> PublicIpAddressIds { get; }
    content.vb: Public ReadOnly Property PublicIpAddressIds As List(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithPublicIpAddress#WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithPublicIpAddress#WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithPublicIpAddress#WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IWithPublicIpAddress.WithExistingPublicIpAddress(IPublicIpAddress)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithExistingPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IUpdate IWithPublicIpAddress.WithExistingPublicIpAddress(IPublicIpAddress publicIpAddress)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithExistingPublicIpAddress(publicIpAddress As IPublicIpAddress) As IUpdate Implements IWithPublicIpAddress.WithExistingPublicIpAddress
    parameters:
    - id: publicIpAddress
      type: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithExistingPublicIpAddress(IPublicIpAddress)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithPublicIpAddress#WithNewPublicIpAddress
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithPublicIpAddress#WithNewPublicIpAddress
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithPublicIpAddress#WithNewPublicIpAddress
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IWithPublicIpAddress.WithNewPublicIpAddress()
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IUpdate IWithPublicIpAddress.WithNewPublicIpAddress()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress As IUpdate Implements IWithPublicIpAddress.WithNewPublicIpAddress
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress()
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithPublicIpAddress#WithNewPublicIpAddress(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithPublicIpAddress#WithNewPublicIpAddress(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithPublicIpAddress#WithNewPublicIpAddress(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IWithPublicIpAddress.WithNewPublicIpAddress(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 44
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nAdds a new public IP address as the default public frontend of the load balancer,\nusing the specified DNS leaf label, an automatically generated frontend name derived from the DNS label,\nin the same resource group and region as the load balancer.\n"
  example: []
  syntax:
    content: IUpdate IWithPublicIpAddress.WithNewPublicIpAddress(string dnsLeafLabel)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress(dnsLeafLabel As String) As IUpdate Implements IWithPublicIpAddress.WithNewPublicIpAddress
    parameters:
    - id: dnsLeafLabel
      type: System.String
      description: dnsLeafLabel a DNS leaf label
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
      description: the next stage of the update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress(String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithPublicIpAddress#WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithPublicIpAddress#WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithPublicIpAddress#WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IWithPublicIpAddress.WithNewPublicIpAddress(ICreatable<IPublicIpAddress>)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress(ICreatable<Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 53
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nAdds a new public IP address to the default front end of the load balancer.\n"
  example: []
  syntax:
    content: IUpdate IWithPublicIpAddress.WithNewPublicIpAddress(ICreatable<IPublicIpAddress> creatablePublicIpAddress)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress(creatablePublicIpAddress As ICreatable(Of IPublicIpAddress)) As IUpdate Implements IWithPublicIpAddress.WithNewPublicIpAddress
    parameters:
    - id: creatablePublicIpAddress
      type: ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress}
      description: creatablePublicIpAddress the creatable stage of a public IP address definition
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
      description: the next stage of the update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  fullName.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress(ICreatable(Of Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress))
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress(ICreatable(Of IPublicIpAddress))
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithNetworkSubnet#WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithNetworkSubnet#WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithNetworkSubnet#WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IWithNetworkSubnet.WithExistingSubnet(INetwork, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithNetworkSubnet.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithNetworkSubnet.WithExistingSubnet
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 66
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IWithPrivateFrontendOrBackend IWithNetworkSubnet.WithExistingSubnet(INetwork network, string subnetName)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithNetworkSubnet.WithExistingSubnet(network As INetwork, subnetName As String) As IWithPrivateFrontendOrBackend Implements IWithNetworkSubnet.WithExistingSubnet
    parameters:
    - id: network
      type: Microsoft.Azure.Management.Fluent.Network.INetwork
    - id: subnetName
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithNetworkSubnet.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithNetworkSubnet.WithExistingSubnet(INetwork, String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithNetworkSubnet#WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithNetworkSubnet#WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithNetworkSubnet#WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IWithNetworkSubnet.WithExistingSubnet(INetwork, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithNetworkSubnet.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithNetworkSubnet.WithExistingSubnet
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 76
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nAssigns the specified subnet from the specified network to the default frontend of this load balancer.\n"
  example: []
  syntax:
    content: IUpdate IWithNetworkSubnet.WithExistingSubnet(INetwork network, string subnetName)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithNetworkSubnet.WithExistingSubnet(network As INetwork, subnetName As String) As IUpdate Implements IWithNetworkSubnet.WithExistingSubnet
    parameters:
    - id: network
      type: Microsoft.Azure.Management.Fluent.Network.INetwork
      description: network an existing virtual network
    - id: subnetName
      type: System.String
      description: subnetName the name of an existing subnet on the specified network
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
      description: the next stage of the update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithNetworkSubnet.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithNetworkSubnet.WithExistingSubnet(INetwork, String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithInboundNatPool#DefineInboundNatPool(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithInboundNatPool#DefineInboundNatPool(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithInboundNatPool#DefineInboundNatPool(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IWithInboundNatPool.DefineInboundNatPool(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithInboundNatPool.DefineInboundNatPool(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithInboundNatPool.DefineInboundNatPool
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 87
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IBlank<IWithCreateAndInboundNatPool> IWithInboundNatPool.DefineInboundNatPool(string name)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithInboundNatPool.DefineInboundNatPool(name As String) As IBlank(Of IWithCreateAndInboundNatPool) Implements IWithInboundNatPool.DefineInboundNatPool
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool}
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithInboundNatPool.DefineInboundNatPool(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithInboundNatPool.DefineInboundNatPool(String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithInboundNatPool#DefineInboundNatPool(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithInboundNatPool#DefineInboundNatPool(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithInboundNatPool#DefineInboundNatPool(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IWithInboundNatPool.DefineInboundNatPool(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.DefineInboundNatPool(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.DefineInboundNatPool
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 96
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nBegins the definition of a new inbound NAT pool.\n"
  example: []
  syntax:
    content: IBlank<IUpdate> IWithInboundNatPool.DefineInboundNatPool(string name)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.DefineInboundNatPool(name As String) As IBlank(Of IUpdate) Implements IWithInboundNatPool.DefineInboundNatPool
    parameters:
    - id: name
      type: System.String
      description: name the name of the inbound NAT pool
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
      description: the first stage of the new inbound NAT pool definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.DefineInboundNatPool(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.DefineInboundNatPool(String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithInboundNatPool#UpdateInboundNatPool(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithInboundNatPool#UpdateInboundNatPool(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithInboundNatPool#UpdateInboundNatPool(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IWithInboundNatPool.UpdateInboundNatPool(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.UpdateInboundNatPool(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.UpdateInboundNatPool
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 105
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nBegins the description of an update to an existing inbound NAT pool.\n"
  example: []
  syntax:
    content: IUpdate IWithInboundNatPool.UpdateInboundNatPool(string name)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.UpdateInboundNatPool(name As String) As IUpdate Implements IWithInboundNatPool.UpdateInboundNatPool
    parameters:
    - id: name
      type: System.String
      description: name the name of the inbound NAT pool to update
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate
      description: the first stage of the inbound NAT pool update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.UpdateInboundNatPool(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.UpdateInboundNatPool(String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithInboundNatPool#WithoutInboundNatPool(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithInboundNatPool#WithoutInboundNatPool(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithInboundNatPool#WithoutInboundNatPool(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IWithInboundNatPool.WithoutInboundNatPool(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.WithoutInboundNatPool(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.WithoutInboundNatPool
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 114
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nRemoves the specified inbound NAT pool from the load balancer.\n"
  example: []
  syntax:
    content: IUpdate IWithInboundNatPool.WithoutInboundNatPool(string name)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.WithoutInboundNatPool(name As String) As IUpdate Implements IWithInboundNatPool.WithoutInboundNatPool
    parameters:
    - id: name
      type: System.String
      description: name the name of an existing inbound NAT pool on this load balancer
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
      description: the next stage of the update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.WithoutInboundNatPool(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.WithoutInboundNatPool(String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPublicFrontendOrBackend}#WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPublicFrontendOrBackend}#WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPublicFrontendOrBackend}#WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IWithPublicIpAddress<IWithPublicFrontendOrBackend>.WithExistingPublicIpAddress(IPublicIpAddress)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend>.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend>.WithExistingPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 128
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IWithPublicFrontendOrBackend IWithPublicIpAddress<IWithPublicFrontendOrBackend>.WithExistingPublicIpAddress(IPublicIpAddress publicIpAddress)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend>.WithExistingPublicIpAddress(publicIpAddress As IPublicIpAddress) As IWithPublicFrontendOrBackend Implements IWithPublicIpAddress(Of IWithPublicFrontendOrBackend).WithExistingPublicIpAddress
    parameters:
    - id: publicIpAddress
      type: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend}.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend>.WithExistingPublicIpAddress(IPublicIpAddress)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPublicFrontendOrBackend}#WithNewPublicIpAddress
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPublicFrontendOrBackend}#WithNewPublicIpAddress
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPublicFrontendOrBackend}#WithNewPublicIpAddress
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IWithPublicIpAddress<IWithPublicFrontendOrBackend>.WithNewPublicIpAddress()
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend>.WithNewPublicIpAddress()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend>.WithNewPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 142
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IWithPublicFrontendOrBackend IWithPublicIpAddress<IWithPublicFrontendOrBackend>.WithNewPublicIpAddress()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend>.WithNewPublicIpAddress As IWithPublicFrontendOrBackend Implements IWithPublicIpAddress(Of IWithPublicFrontendOrBackend).WithNewPublicIpAddress
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend}.WithNewPublicIpAddress
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend>.WithNewPublicIpAddress()
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPublicFrontendOrBackend}#WithNewPublicIpAddress(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPublicFrontendOrBackend}#WithNewPublicIpAddress(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPublicFrontendOrBackend}#WithNewPublicIpAddress(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IWithPublicIpAddress<IWithPublicFrontendOrBackend>.WithNewPublicIpAddress(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend>.WithNewPublicIpAddress(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend>.WithNewPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 153
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nAdds a new public IP address as the default public frontend of the load balancer,\nusing the specified DNS leaf label, an automatically generated frontend name derived from the DNS label,\nin the same resource group and region as the load balancer.\n"
  example: []
  syntax:
    content: IWithPublicFrontendOrBackend IWithPublicIpAddress<IWithPublicFrontendOrBackend>.WithNewPublicIpAddress(string dnsLeafLabel)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend>.WithNewPublicIpAddress(dnsLeafLabel As String) As IWithPublicFrontendOrBackend Implements IWithPublicIpAddress(Of IWithPublicFrontendOrBackend).WithNewPublicIpAddress
    parameters:
    - id: dnsLeafLabel
      type: System.String
      description: dnsLeafLabel a DNS leaf label
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend}.WithNewPublicIpAddress(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend>.WithNewPublicIpAddress(String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPublicFrontendOrBackend}#WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPublicFrontendOrBackend}#WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPublicFrontendOrBackend}#WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IWithPublicIpAddress<IWithPublicFrontendOrBackend>.WithNewPublicIpAddress(ICreatable<IPublicIpAddress>)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend>.WithNewPublicIpAddress(ICreatable<Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend>.WithNewPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 164
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nAdds a new public IP address to the front end of the load balancer,\ncreating the public IP based on the provided {@link Creatable}\nstage of a public IP endpoint's definition.\n"
  example: []
  syntax:
    content: IWithPublicFrontendOrBackend IWithPublicIpAddress<IWithPublicFrontendOrBackend>.WithNewPublicIpAddress(ICreatable<IPublicIpAddress> creatablePublicIpAddress)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend>.WithNewPublicIpAddress(creatablePublicIpAddress As ICreatable(Of IPublicIpAddress)) As IWithPublicFrontendOrBackend Implements IWithPublicIpAddress(Of IWithPublicFrontendOrBackend).WithNewPublicIpAddress
    parameters:
    - id: creatablePublicIpAddress
      type: ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress}
      description: creatablePublicIpAddress the creatable stage of a public IP address definition
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend}.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  fullName.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend>.WithNewPublicIpAddress(ICreatable(Of Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress))
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend>.WithNewPublicIpAddress(ICreatable(Of IPublicIpAddress))
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithInternalFrontend#DefinePrivateFrontend(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithInternalFrontend#DefinePrivateFrontend(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithInternalFrontend#DefinePrivateFrontend(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IWithInternalFrontend.DefinePrivateFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternalFrontend.DefinePrivateFrontend(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternalFrontend.DefinePrivateFrontend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 173
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nBegins the update of an internal load balancer frontend.\n"
  example: []
  syntax:
    content: IBlank<IUpdate> IWithInternalFrontend.DefinePrivateFrontend(string name)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternalFrontend.DefinePrivateFrontend(name As String) As IBlank(Of IUpdate) Implements IWithInternalFrontend.DefinePrivateFrontend
    parameters:
    - id: name
      type: System.String
      description: name the name for the frontend
    return:
      type: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
      description: the first stage of the new frontend definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternalFrontend.DefinePrivateFrontend(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternalFrontend.DefinePrivateFrontend(String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithInternalFrontend#UpdateInternalFrontend(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithInternalFrontend#UpdateInternalFrontend(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithInternalFrontend#UpdateInternalFrontend(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IWithInternalFrontend.UpdateInternalFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternalFrontend.UpdateInternalFrontend(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternalFrontend.UpdateInternalFrontend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 182
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nBegins the description of an update to an existing internal frontend.\n"
  example: []
  syntax:
    content: IUpdate IWithInternalFrontend.UpdateInternalFrontend(string name)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternalFrontend.UpdateInternalFrontend(name As String) As IUpdate Implements IWithInternalFrontend.UpdateInternalFrontend
    parameters:
    - id: name
      type: System.String
      description: name the name of an existing frontend from this load balancer
    return:
      type: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IUpdate
      description: the first stage of the frontend update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternalFrontend.UpdateInternalFrontend(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternalFrontend.UpdateInternalFrontend(String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithInboundNatRule#DefineInboundNatRule(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithInboundNatRule#DefineInboundNatRule(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithInboundNatRule#DefineInboundNatRule(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IWithInboundNatRule.DefineInboundNatRule(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithInboundNatRule.DefineInboundNatRule(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithInboundNatRule.DefineInboundNatRule
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 193
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IBlank<IWithCreateAndInboundNatRule> IWithInboundNatRule.DefineInboundNatRule(string name)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithInboundNatRule.DefineInboundNatRule(name As String) As IBlank(Of IWithCreateAndInboundNatRule) Implements IWithInboundNatRule.DefineInboundNatRule
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithInboundNatRule.DefineInboundNatRule(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithInboundNatRule.DefineInboundNatRule(String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithInboundNatRule#DefineInboundNatRule(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithInboundNatRule#DefineInboundNatRule(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithInboundNatRule#DefineInboundNatRule(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IWithInboundNatRule.DefineInboundNatRule(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.DefineInboundNatRule(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.DefineInboundNatRule
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 204
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IBlank<IUpdate> IWithInboundNatRule.DefineInboundNatRule(string name)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.DefineInboundNatRule(name As String) As IBlank(Of IUpdate) Implements IWithInboundNatRule.DefineInboundNatRule
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.DefineInboundNatRule(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.DefineInboundNatRule(String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithInboundNatRule#UpdateInboundNatRule(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithInboundNatRule#UpdateInboundNatRule(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithInboundNatRule#UpdateInboundNatRule(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IWithInboundNatRule.UpdateInboundNatRule(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.UpdateInboundNatRule(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.UpdateInboundNatRule
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 213
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nBegins the description of an update to an existing inbound NAT rule.\n"
  example: []
  syntax:
    content: IUpdate IWithInboundNatRule.UpdateInboundNatRule(string name)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.UpdateInboundNatRule(name As String) As IUpdate Implements IWithInboundNatRule.UpdateInboundNatRule
    parameters:
    - id: name
      type: System.String
      description: name the name of the inbound NAT rule to update
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate
      description: the first stage of the inbound NAT rule update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.UpdateInboundNatRule(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.UpdateInboundNatRule(String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithInboundNatRule#WithoutInboundNatRule(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithInboundNatRule#WithoutInboundNatRule(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithInboundNatRule#WithoutInboundNatRule(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IWithInboundNatRule.WithoutInboundNatRule(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.WithoutInboundNatRule(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.WithoutInboundNatRule
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 222
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nRemoves the specified inbound NAT rule from the load balancer.\n"
  example: []
  syntax:
    content: IUpdate IWithInboundNatRule.WithoutInboundNatRule(string name)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.WithoutInboundNatRule(name As String) As IUpdate Implements IWithInboundNatRule.WithoutInboundNatRule
    parameters:
    - id: name
      type: System.String
      description: name the name of an existing inbound NAT rule on this load balancer
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
      description: the next stage of the update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.WithoutInboundNatRule(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.WithoutInboundNatRule(String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithVirtualMachine{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithBackendOrProbe}#WithExistingVirtualMachines(Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces[])
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithVirtualMachine{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithBackendOrProbe}#WithExistingVirtualMachines(Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces[])
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithVirtualMachine{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithBackendOrProbe}#WithExistingVirtualMachines(Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces[])
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IWithVirtualMachine<IWithBackendOrProbe>.WithExistingVirtualMachines(IHasNetworkInterfaces[])
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe>.WithExistingVirtualMachines(Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces[])
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe>.WithExistingVirtualMachines
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 242
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IWithBackendOrProbe IWithVirtualMachine<IWithBackendOrProbe>.WithExistingVirtualMachines(params IHasNetworkInterfaces[] vms)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe>.WithExistingVirtualMachines(ParamArray vms As IHasNetworkInterfaces()) As IWithBackendOrProbe Implements IWithVirtualMachine(Of IWithBackendOrProbe).WithExistingVirtualMachines
    parameters:
    - id: vms
      type: Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces[]
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe}.WithExistingVirtualMachines(Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces[])
  fullName.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe>.WithExistingVirtualMachines(Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces())
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe>.WithExistingVirtualMachines(IHasNetworkInterfaces())
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPublicFrontend#DefinePublicFrontend(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPublicFrontend#DefinePublicFrontend(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPublicFrontend#DefinePublicFrontend(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IWithPublicFrontend.DefinePublicFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontend.DefinePublicFrontend(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontend.DefinePublicFrontend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 253
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IBlank<IWithPublicFrontendOrBackend> IWithPublicFrontend.DefinePublicFrontend(string name)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontend.DefinePublicFrontend(name As String) As IBlank(Of IWithPublicFrontendOrBackend) Implements IWithPublicFrontend.DefinePublicFrontend
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend}
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontend.DefinePublicFrontend(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontend.DefinePublicFrontend(String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithInternetFrontend#UpdateInternetFrontend(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithInternetFrontend#UpdateInternetFrontend(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithInternetFrontend#UpdateInternetFrontend(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IWithInternetFrontend.UpdateInternetFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.UpdateInternetFrontend(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.UpdateInternetFrontend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 262
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nBegins the description of an update to an existing Internet-facing frontend.\n"
  example: []
  syntax:
    content: IUpdate IWithInternetFrontend.UpdateInternetFrontend(string name)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.UpdateInternetFrontend(name As String) As IUpdate Implements IWithInternetFrontend.UpdateInternetFrontend
    parameters:
    - id: name
      type: System.String
      description: name the name of the frontend to update
    return:
      type: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate
      description: the first stage of the frontend update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.UpdateInternetFrontend(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.UpdateInternetFrontend(String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithInternetFrontend#DefinePublicFrontend(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithInternetFrontend#DefinePublicFrontend(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithInternetFrontend#DefinePublicFrontend(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IWithInternetFrontend.DefinePublicFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.DefinePublicFrontend(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.DefinePublicFrontend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 273
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IBlank<IUpdate> IWithInternetFrontend.DefinePublicFrontend(string name)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.DefinePublicFrontend(name As String) As IBlank(Of IUpdate) Implements IWithInternetFrontend.DefinePublicFrontend
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.DefinePublicFrontend(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.DefinePublicFrontend(String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithInternetFrontend#WithoutFrontend(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithInternetFrontend#WithoutFrontend(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithInternetFrontend#WithoutFrontend(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IWithInternetFrontend.WithoutFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.WithoutFrontend(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.WithoutFrontend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 282
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nRemoves the specified frontend from the load balancer.\n"
  example: []
  syntax:
    content: IUpdate IWithInternetFrontend.WithoutFrontend(string name)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.WithoutFrontend(name As String) As IUpdate Implements IWithInternetFrontend.WithoutFrontend
    parameters:
    - id: name
      type: System.String
      description: name the name of an existing front end on this load balancer
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
      description: the next stage of the update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.WithoutFrontend(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.WithoutFrontend(String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPrivateFrontend#DefinePrivateFrontend(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPrivateFrontend#DefinePrivateFrontend(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithPrivateFrontend#DefinePrivateFrontend(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IWithPrivateFrontend.DefinePrivateFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontend.DefinePrivateFrontend(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontend.DefinePrivateFrontend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 286
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IBlank<IWithPrivateFrontendOrBackend> IWithPrivateFrontend.DefinePrivateFrontend(string name)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontend.DefinePrivateFrontend(name As String) As IBlank(Of IWithPrivateFrontendOrBackend) Implements IWithPrivateFrontend.DefinePrivateFrontend
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend}
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontend.DefinePrivateFrontend(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontend.DefinePrivateFrontend(String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithProbe#DefineTcpProbe(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithProbe#DefineTcpProbe(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithProbe#DefineTcpProbe(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IWithProbe.DefineTcpProbe(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe.DefineTcpProbe(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe.DefineTcpProbe
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 297
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IBlank<IWithProbeOrLoadBalancingRule> IWithProbe.DefineTcpProbe(string name)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe.DefineTcpProbe(name As String) As IBlank(Of IWithProbeOrLoadBalancingRule) Implements IWithProbe.DefineTcpProbe
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.TcpProbe.Definition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbeOrLoadBalancingRule}
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe.DefineTcpProbe(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe.DefineTcpProbe(String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithProbe#WithHttpProbe(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithProbe#WithHttpProbe(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithProbe#WithHttpProbe(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IWithProbe.WithHttpProbe(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe.WithHttpProbe(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe.WithHttpProbe
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 308
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IWithProbeOrLoadBalancingRule IWithProbe.WithHttpProbe(string requestPath)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe.WithHttpProbe(requestPath As String) As IWithProbeOrLoadBalancingRule Implements IWithProbe.WithHttpProbe
    parameters:
    - id: requestPath
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbeOrLoadBalancingRule
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe.WithHttpProbe(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe.WithHttpProbe(String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithProbe#DefineHttpProbe(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithProbe#DefineHttpProbe(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithProbe#DefineHttpProbe(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IWithProbe.DefineHttpProbe(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe.DefineHttpProbe(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe.DefineHttpProbe
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 319
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IBlank<IWithProbeOrLoadBalancingRule> IWithProbe.DefineHttpProbe(string name)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe.DefineHttpProbe(name As String) As IBlank(Of IWithProbeOrLoadBalancingRule) Implements IWithProbe.DefineHttpProbe
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.HttpProbe.Definition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbeOrLoadBalancingRule}
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe.DefineHttpProbe(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe.DefineHttpProbe(String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithProbe#WithTcpProbe(System.Int32)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithProbe#WithTcpProbe(System.Int32)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithProbe#WithTcpProbe(System.Int32)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IWithProbe.WithTcpProbe(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe.WithTcpProbe(System.Int32)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe.WithTcpProbe
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 330
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IWithProbeOrLoadBalancingRule IWithProbe.WithTcpProbe(int port)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe.WithTcpProbe(port As Integer) As IWithProbeOrLoadBalancingRule Implements IWithProbe.WithTcpProbe
    parameters:
    - id: port
      type: System.Int32
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbeOrLoadBalancingRule
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe.WithTcpProbe(System.Int32)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe.WithTcpProbe(Int32)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithProbe#DefineTcpProbe(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithProbe#DefineTcpProbe(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithProbe#DefineTcpProbe(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IWithProbe.DefineTcpProbe(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.DefineTcpProbe(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.DefineTcpProbe
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 341
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IBlank<IUpdate> IWithProbe.DefineTcpProbe(string name)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.DefineTcpProbe(name As String) As IBlank(Of IUpdate) Implements IWithProbe.DefineTcpProbe
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.TcpProbe.UpdateDefinition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.DefineTcpProbe(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.DefineTcpProbe(String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithProbe#UpdateHttpProbe(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithProbe#UpdateHttpProbe(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithProbe#UpdateHttpProbe(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IWithProbe.UpdateHttpProbe(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.UpdateHttpProbe(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.UpdateHttpProbe
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 350
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nBegins the description of an update to an existing HTTP probe on this load balancer.\n"
  example: []
  syntax:
    content: IUpdate IWithProbe.UpdateHttpProbe(string name)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.UpdateHttpProbe(name As String) As IUpdate Implements IWithProbe.UpdateHttpProbe
    parameters:
    - id: name
      type: System.String
      description: name the name of the probe to update
    return:
      type: Microsoft.Azure.Management.Fluent.Network.HttpProbe.Update.IUpdate
      description: the first stage of the probe update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.UpdateHttpProbe(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.UpdateHttpProbe(String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithProbe#WithHttpProbe(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithProbe#WithHttpProbe(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithProbe#WithHttpProbe(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IWithProbe.WithHttpProbe(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithHttpProbe(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithHttpProbe
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 361
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IUpdate IWithProbe.WithHttpProbe(string requestPath)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithHttpProbe(requestPath As String) As IUpdate Implements IWithProbe.WithHttpProbe
    parameters:
    - id: requestPath
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithHttpProbe(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithHttpProbe(String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithProbe#WithoutProbe(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithProbe#WithoutProbe(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithProbe#WithoutProbe(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IWithProbe.WithoutProbe(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithoutProbe(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithoutProbe
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 370
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nRemoves the specified probe from the load balancer, if present.\n"
  example: []
  syntax:
    content: IUpdate IWithProbe.WithoutProbe(string name)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithoutProbe(name As String) As IUpdate Implements IWithProbe.WithoutProbe
    parameters:
    - id: name
      type: System.String
      description: name the name of the probe to remove
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
      description: the next stage of the update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithoutProbe(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithoutProbe(String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithProbe#DefineHttpProbe(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithProbe#DefineHttpProbe(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithProbe#DefineHttpProbe(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IWithProbe.DefineHttpProbe(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.DefineHttpProbe(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.DefineHttpProbe
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 381
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IBlank<IUpdate> IWithProbe.DefineHttpProbe(string name)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.DefineHttpProbe(name As String) As IBlank(Of IUpdate) Implements IWithProbe.DefineHttpProbe
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.HttpProbe.UpdateDefinition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.DefineHttpProbe(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.DefineHttpProbe(String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithProbe#UpdateTcpProbe(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithProbe#UpdateTcpProbe(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithProbe#UpdateTcpProbe(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IWithProbe.UpdateTcpProbe(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.UpdateTcpProbe(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.UpdateTcpProbe
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 390
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nBegins the description of an update to an existing TCP probe on this load balancer.\n"
  example: []
  syntax:
    content: IUpdate IWithProbe.UpdateTcpProbe(string name)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.UpdateTcpProbe(name As String) As IUpdate Implements IWithProbe.UpdateTcpProbe
    parameters:
    - id: name
      type: System.String
      description: name the name of the probe to update
    return:
      type: Microsoft.Azure.Management.Fluent.Network.TcpProbe.Update.IUpdate
      description: the first stage of the probe update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.UpdateTcpProbe(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.UpdateTcpProbe(String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithProbe#WithTcpProbe(System.Int32)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithProbe#WithTcpProbe(System.Int32)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithProbe#WithTcpProbe(System.Int32)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IWithProbe.WithTcpProbe(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithTcpProbe(System.Int32)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithTcpProbe
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 401
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IUpdate IWithProbe.WithTcpProbe(int port)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithTcpProbe(port As Integer) As IUpdate Implements IWithProbe.WithTcpProbe
    parameters:
    - id: port
      type: System.Int32
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithTcpProbe(System.Int32)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithTcpProbe(Int32)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRule#WithLoadBalancingRule(System.Int32,System.String,System.Int32)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRule#WithLoadBalancingRule(System.Int32,System.String,System.Int32)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRule#WithLoadBalancingRule(System.Int32,System.String,System.Int32)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IWithLoadBalancingRule.WithLoadBalancingRule(Int32, String, Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRule.WithLoadBalancingRule(System.Int32, System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRule.WithLoadBalancingRule
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 414
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IWithLoadBalancingRuleOrCreate IWithLoadBalancingRule.WithLoadBalancingRule(int frontendPort, string protocol, int backendPort)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRule.WithLoadBalancingRule(frontendPort As Integer, protocol As String, backendPort As Integer) As IWithLoadBalancingRuleOrCreate Implements IWithLoadBalancingRule.WithLoadBalancingRule
    parameters:
    - id: frontendPort
      type: System.Int32
    - id: protocol
      type: System.String
    - id: backendPort
      type: System.Int32
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRule.WithLoadBalancingRule(System.Int32,System.String,System.Int32)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRule.WithLoadBalancingRule(Int32, String, Int32)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRule#WithLoadBalancingRule(System.Int32,System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRule#WithLoadBalancingRule(System.Int32,System.String)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRule#WithLoadBalancingRule(System.Int32,System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IWithLoadBalancingRule.WithLoadBalancingRule(Int32, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRule.WithLoadBalancingRule(System.Int32, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRule.WithLoadBalancingRule
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 426
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IWithLoadBalancingRuleOrCreate IWithLoadBalancingRule.WithLoadBalancingRule(int port, string protocol)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRule.WithLoadBalancingRule(port As Integer, protocol As String) As IWithLoadBalancingRuleOrCreate Implements IWithLoadBalancingRule.WithLoadBalancingRule
    parameters:
    - id: port
      type: System.Int32
    - id: protocol
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRule.WithLoadBalancingRule(System.Int32,System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRule.WithLoadBalancingRule(Int32, String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRule#DefineLoadBalancingRule(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRule#DefineLoadBalancingRule(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRule#DefineLoadBalancingRule(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IWithLoadBalancingRule.DefineLoadBalancingRule(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRule.DefineLoadBalancingRule(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRule.DefineLoadBalancingRule
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 437
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IBlank<IWithLoadBalancingRuleOrCreate> IWithLoadBalancingRule.DefineLoadBalancingRule(string name)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRule.DefineLoadBalancingRule(name As String) As IBlank(Of IWithLoadBalancingRuleOrCreate) Implements IWithLoadBalancingRule.DefineLoadBalancingRule
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRule.DefineLoadBalancingRule(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRule.DefineLoadBalancingRule(String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithLoadBalancingRule#WithoutLoadBalancingRule(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithLoadBalancingRule#WithoutLoadBalancingRule(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithLoadBalancingRule#WithoutLoadBalancingRule(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IWithLoadBalancingRule.WithoutLoadBalancingRule(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithoutLoadBalancingRule(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithoutLoadBalancingRule
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 446
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nRemoves the specified load balancing rule from the load balancer, if present.\n"
  example: []
  syntax:
    content: IUpdate IWithLoadBalancingRule.WithoutLoadBalancingRule(string name)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithoutLoadBalancingRule(name As String) As IUpdate Implements IWithLoadBalancingRule.WithoutLoadBalancingRule
    parameters:
    - id: name
      type: System.String
      description: name the name of the load balancing rule to remove
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
      description: the next stage of the update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithoutLoadBalancingRule(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithoutLoadBalancingRule(String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithLoadBalancingRule#WithLoadBalancingRule(System.Int32,System.String,System.Int32)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithLoadBalancingRule#WithLoadBalancingRule(System.Int32,System.String,System.Int32)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithLoadBalancingRule#WithLoadBalancingRule(System.Int32,System.String,System.Int32)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IWithLoadBalancingRule.WithLoadBalancingRule(Int32, String, Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithLoadBalancingRule(System.Int32, System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithLoadBalancingRule
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 459
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IUpdate IWithLoadBalancingRule.WithLoadBalancingRule(int frontendPort, string protocol, int backendPort)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithLoadBalancingRule(frontendPort As Integer, protocol As String, backendPort As Integer) As IUpdate Implements IWithLoadBalancingRule.WithLoadBalancingRule
    parameters:
    - id: frontendPort
      type: System.Int32
    - id: protocol
      type: System.String
    - id: backendPort
      type: System.Int32
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithLoadBalancingRule(System.Int32,System.String,System.Int32)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithLoadBalancingRule(Int32, String, Int32)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithLoadBalancingRule#WithLoadBalancingRule(System.Int32,System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithLoadBalancingRule#WithLoadBalancingRule(System.Int32,System.String)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithLoadBalancingRule#WithLoadBalancingRule(System.Int32,System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IWithLoadBalancingRule.WithLoadBalancingRule(Int32, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithLoadBalancingRule(System.Int32, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithLoadBalancingRule
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 471
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IUpdate IWithLoadBalancingRule.WithLoadBalancingRule(int port, string protocol)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithLoadBalancingRule(port As Integer, protocol As String) As IUpdate Implements IWithLoadBalancingRule.WithLoadBalancingRule
    parameters:
    - id: port
      type: System.Int32
    - id: protocol
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithLoadBalancingRule(System.Int32,System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithLoadBalancingRule(Int32, String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithLoadBalancingRule#DefineLoadBalancingRule(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithLoadBalancingRule#DefineLoadBalancingRule(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithLoadBalancingRule#DefineLoadBalancingRule(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IWithLoadBalancingRule.DefineLoadBalancingRule(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.DefineLoadBalancingRule(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.DefineLoadBalancingRule
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 482
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IBlank<IUpdate> IWithLoadBalancingRule.DefineLoadBalancingRule(string name)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.DefineLoadBalancingRule(name As String) As IBlank(Of IUpdate) Implements IWithLoadBalancingRule.DefineLoadBalancingRule
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.DefineLoadBalancingRule(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.DefineLoadBalancingRule(String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithLoadBalancingRule#UpdateLoadBalancingRule(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithLoadBalancingRule#UpdateLoadBalancingRule(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithLoadBalancingRule#UpdateLoadBalancingRule(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IWithLoadBalancingRule.UpdateLoadBalancingRule(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.UpdateLoadBalancingRule(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.UpdateLoadBalancingRule
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 491
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nBegins the description of an update to an existing load balancing rule on this load balancer.\n"
  example: []
  syntax:
    content: IUpdate IWithLoadBalancingRule.UpdateLoadBalancingRule(string name)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.UpdateLoadBalancingRule(name As String) As IUpdate Implements IWithLoadBalancingRule.UpdateLoadBalancingRule
    parameters:
    - id: name
      type: System.String
      description: name the name of the load balancing rule to update
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
      description: the first stage of the load balancing rule update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.UpdateLoadBalancingRule(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.UpdateLoadBalancingRule(String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#ILoadBalancer#InboundNatPools
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#ILoadBalancer#InboundNatPools
  id: Microsoft#Azure#Management#Fluent#Network#ILoadBalancer#InboundNatPools
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: ILoadBalancer.InboundNatPools()
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.InboundNatPools()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.InboundNatPools
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 496
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: IDictionary<string, IInboundNatPool> ILoadBalancer.InboundNatPools()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.InboundNatPools As IDictionary(Of String, IInboundNatPool) Implements ILoadBalancer.InboundNatPools
    return:
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.Fluent.Network.IInboundNatPool}
      description: inbound NAT pools, indexed by name
  implements:
  - Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.InboundNatPools
  name.vb: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.InboundNatPools()
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#ILoadBalancer#HttpProbes
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#ILoadBalancer#HttpProbes
  id: Microsoft#Azure#Management#Fluent#Network#ILoadBalancer#HttpProbes
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: ILoadBalancer.HttpProbes()
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.HttpProbes()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.HttpProbes
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 501
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: IDictionary<string, IHttpProbe> ILoadBalancer.HttpProbes()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.HttpProbes As IDictionary(Of String, IHttpProbe) Implements ILoadBalancer.HttpProbes
    return:
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.Fluent.Network.IHttpProbe}
      description: HTTP probes of this load balancer, indexed by the name
  implements:
  - Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.HttpProbes
  name.vb: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.HttpProbes()
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#ILoadBalancer#PublicIpAddressIds
  commentId: P:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#ILoadBalancer#PublicIpAddressIds
  id: Microsoft#Azure#Management#Fluent#Network#ILoadBalancer#PublicIpAddressIds
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: ILoadBalancer.PublicIpAddressIds
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.PublicIpAddressIds
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.PublicIpAddressIds
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 506
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: List<string> ILoadBalancer.PublicIpAddressIds { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.PublicIpAddressIds As List(Of String) Implements ILoadBalancer.PublicIpAddressIds
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
      description: resource IDs of the public IP addresses assigned to the frontends of this load balancer
  implements:
  - Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.PublicIpAddressIds
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.PublicIpAddressIds
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#ILoadBalancer#Frontends
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#ILoadBalancer#Frontends
  id: Microsoft#Azure#Management#Fluent#Network#ILoadBalancer#Frontends
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: ILoadBalancer.Frontends()
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.Frontends()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.Frontends
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 514
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: IDictionary<string, IFrontend> ILoadBalancer.Frontends()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.Frontends As IDictionary(Of String, IFrontend) Implements ILoadBalancer.Frontends
    return:
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.Fluent.Network.IFrontend}
      description: frontends for this load balancer, for the incoming traffic to come from.
  implements:
  - Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.Frontends
  name.vb: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.Frontends()
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#ILoadBalancer#Backends
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#ILoadBalancer#Backends
  id: Microsoft#Azure#Management#Fluent#Network#ILoadBalancer#Backends
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: ILoadBalancer.Backends()
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.Backends()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.Backends
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 519
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: IDictionary<string, IBackend> ILoadBalancer.Backends()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.Backends As IDictionary(Of String, IBackend) Implements ILoadBalancer.Backends
    return:
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.Fluent.Network.IBackend}
      description: backends for this load balancer to load balance the incoming traffic among, indexed by name
  implements:
  - Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.Backends
  name.vb: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.Backends()
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#ILoadBalancer#TcpProbes
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#ILoadBalancer#TcpProbes
  id: Microsoft#Azure#Management#Fluent#Network#ILoadBalancer#TcpProbes
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: ILoadBalancer.TcpProbes()
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.TcpProbes()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.TcpProbes
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 524
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: IDictionary<string, ITcpProbe> ILoadBalancer.TcpProbes()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.TcpProbes As IDictionary(Of String, ITcpProbe) Implements ILoadBalancer.TcpProbes
    return:
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.Fluent.Network.ITcpProbe}
      description: TCP probes of this load balancer, indexed by the name
  implements:
  - Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.TcpProbes
  name.vb: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.TcpProbes()
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#ILoadBalancer#InboundNatRules
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#ILoadBalancer#InboundNatRules
  id: Microsoft#Azure#Management#Fluent#Network#ILoadBalancer#InboundNatRules
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: ILoadBalancer.InboundNatRules()
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.InboundNatRules()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.InboundNatRules
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 529
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: IDictionary<string, IInboundNatRule> ILoadBalancer.InboundNatRules()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.InboundNatRules As IDictionary(Of String, IInboundNatRule) Implements ILoadBalancer.InboundNatRules
    return:
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.Fluent.Network.IInboundNatRule}
      description: inbound NAT rules for this balancer
  implements:
  - Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.InboundNatRules
  name.vb: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.InboundNatRules()
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#IHasLoadBalancingRules#LoadBalancingRules
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#IHasLoadBalancingRules#LoadBalancingRules
  id: Microsoft#Azure#Management#Fluent#Network#IHasLoadBalancingRules#LoadBalancingRules
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IHasLoadBalancingRules.LoadBalancingRules()
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules.LoadBalancingRules()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules.LoadBalancingRules
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 534
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: IDictionary<string, ILoadBalancingRule> IHasLoadBalancingRules.LoadBalancingRules()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules.LoadBalancingRules As IDictionary(Of String, ILoadBalancingRule) Implements IHasLoadBalancingRules.LoadBalancingRules
    return:
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule}
      description: the associated load balancing rules from this load balancer, indexed by their names
  implements:
  - Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules.LoadBalancingRules
  name.vb: Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules.LoadBalancingRules()
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithBackend#DefineBackend(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithBackend#DefineBackend(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithBackend#DefineBackend(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IWithBackend.DefineBackend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackend.DefineBackend(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackend.DefineBackend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 543
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nStarts the definition of a backend.\n"
  example: []
  syntax:
    content: IBlank<IWithBackendOrProbe> IWithBackend.DefineBackend(string name)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackend.DefineBackend(name As String) As IBlank(Of IWithBackendOrProbe) Implements IWithBackend.DefineBackend
    parameters:
    - id: name
      type: System.String
      description: name the name to assign to the backend
    return:
      type: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe}
      description: the next stage of the update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackend.DefineBackend(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackend.DefineBackend(String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithBackend#DefineBackend(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithBackend#DefineBackend(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithBackend#DefineBackend(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IWithBackend.DefineBackend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.DefineBackend(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.DefineBackend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 552
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nBegins the definition of a new backend as part of this load balancer update.\n"
  example: []
  syntax:
    content: IBlank<IUpdate> IWithBackend.DefineBackend(string name)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.DefineBackend(name As String) As IBlank(Of IUpdate) Implements IWithBackend.DefineBackend
    parameters:
    - id: name
      type: System.String
      description: name the name for the new backend
    return:
      type: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
      description: the first stage of the backend definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.DefineBackend(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.DefineBackend(String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithBackend#WithoutBackend(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithBackend#WithoutBackend(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithBackend#WithoutBackend(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IWithBackend.WithoutBackend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.WithoutBackend(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.WithoutBackend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 561
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nRemoves the specified backend from the load balancer.\n"
  example: []
  syntax:
    content: IUpdate IWithBackend.WithoutBackend(string name)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.WithoutBackend(name As String) As IUpdate Implements IWithBackend.WithoutBackend
    parameters:
    - id: name
      type: System.String
      description: name the name of the backend to remove
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
      description: the next stage of the update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.WithoutBackend(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.WithoutBackend(String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithBackend#UpdateBackend(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithBackend#UpdateBackend(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IWithBackend#UpdateBackend(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  langs:
  - csharp
  - vb
  name: IWithBackend.UpdateBackend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.UpdateBackend(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.UpdateBackend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancerImpl.cs
    startLine: 570
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nBegins the description of an update to an existing backend of this load balancer.\n"
  example: []
  syntax:
    content: IUpdate IWithBackend.UpdateBackend(string name)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.UpdateBackend(name As String) As IUpdate Implements IWithBackend.UpdateBackend
    parameters:
    - id: name
      type: System.String
      description: name the name of the backend to update
    return:
      type: Microsoft.Azure.Management.Fluent.Network.Backend.Update.IUpdate
      description: the first stage of the update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.UpdateBackend(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.UpdateBackend(String)
references:
- uid: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network
  fullName: Microsoft.Azure.Management.Fluent.Network
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: ILoadBalancer
  fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
- uid: IGroupableResource
  isExternal: true
  name: IGroupableResource
  fullName: IGroupableResource
- uid: IRefreshable{Microsoft.Azure.Management.Fluent.Network.ILoadBalancer}
  definition: IRefreshable`1
  name: IRefreshable<ILoadBalancer>
  fullName: IRefreshable<Microsoft.Azure.Management.Fluent.Network.ILoadBalancer>
  fullname.vb: IRefreshable(Of Microsoft.Azure.Management.Fluent.Network.ILoadBalancer)
  name.vb: IRefreshable(Of ILoadBalancer)
  spec.csharp:
  - uid: IRefreshable`1
    name: IRefreshable
    fullName: IRefreshable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    name: ILoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IRefreshable`1
    name: IRefreshable
    fullName: IRefreshable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    name: ILoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  - name: )
    fullName: )
- uid: IWrapper{Microsoft.Azure.Management.Network.Models.LoadBalancerInner}
  definition: IWrapper`1
  name: IWrapper<LoadBalancerInner>
  fullName: IWrapper<Microsoft.Azure.Management.Network.Models.LoadBalancerInner>
  fullname.vb: IWrapper(Of Microsoft.Azure.Management.Network.Models.LoadBalancerInner)
  name.vb: IWrapper(Of LoadBalancerInner)
  spec.csharp:
  - uid: IWrapper`1
    name: IWrapper
    fullName: IWrapper
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Network.Models.LoadBalancerInner
    name: LoadBalancerInner
    fullName: Microsoft.Azure.Management.Network.Models.LoadBalancerInner
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IWrapper`1
    name: IWrapper
    fullName: IWrapper
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Network.Models.LoadBalancerInner
    name: LoadBalancerInner
    fullName: Microsoft.Azure.Management.Network.Models.LoadBalancerInner
  - name: )
    fullName: )
- uid: IUpdatable{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  definition: IUpdatable`1
  name: IUpdatable<IUpdate>
  fullName: IUpdatable<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: IUpdatable(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IUpdatable(Of IUpdate)
  spec.csharp:
  - uid: IUpdatable`1
    name: IUpdatable
    fullName: IUpdatable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IUpdatable`1
    name: IUpdatable
    fullName: IUpdatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: IHasLoadBalancingRules
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IDefinition
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
  isExternal: false
  name: IDefinition
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IDefinition
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IBlank
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
  isExternal: false
  name: IBlank
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IBlank
- uid: IDefinitionWithRegion{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithGroup}
  definition: IDefinitionWithRegion`1
  name: IDefinitionWithRegion<IWithGroup>
  fullName: IDefinitionWithRegion<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithGroup>
  fullname.vb: IDefinitionWithRegion(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithGroup)
  name.vb: IDefinitionWithRegion(Of IWithGroup)
  spec.csharp:
  - uid: IDefinitionWithRegion`1
    name: IDefinitionWithRegion
    fullName: IDefinitionWithRegion
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithGroup
    name: IWithGroup
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithGroup
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IDefinitionWithRegion`1
    name: IDefinitionWithRegion
    fullName: IDefinitionWithRegion
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithGroup
    name: IWithGroup
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithGroup
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithGroup
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
  isExternal: false
  name: IWithGroup
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithGroup
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableResource.Definition.IWithGroup{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithFrontend}
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableResource.Definition.IWithGroup`1
  name: Resource.Core.GroupableResource.Definition.IWithGroup<IWithFrontend>
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableResource.Definition.IWithGroup<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithFrontend>
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableResource.Definition.IWithGroup(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithFrontend)
  name.vb: Resource.Core.GroupableResource.Definition.IWithGroup(Of IWithFrontend)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableResource.Definition.IWithGroup`1
    name: Resource.Core.GroupableResource.Definition.IWithGroup
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableResource.Definition.IWithGroup
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithFrontend
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithFrontend
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableResource.Definition.IWithGroup`1
    name: Resource.Core.GroupableResource.Definition.IWithGroup
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableResource.Definition.IWithGroup
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithFrontend
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithFrontend
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithFrontend
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
  isExternal: false
  name: IWithFrontend
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithFrontend
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend}
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress`1
  name: IWithPublicIpAddress<IWithPublicFrontendOrBackend>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend)
  name.vb: IWithPublicIpAddress(Of IWithPublicFrontendOrBackend)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress`1
    name: IWithPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend
    name: IWithPublicFrontendOrBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress`1
    name: IWithPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend
    name: IWithPublicFrontendOrBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
  isExternal: false
  name: IWithPublicFrontendOrBackend
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontend
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
  isExternal: false
  name: IWithPublicFrontend
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontend
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
  isExternal: false
  name: IWithPrivateFrontendOrBackend
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontend
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
  isExternal: false
  name: IWithPrivateFrontend
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontend
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithNetworkSubnet
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
  isExternal: false
  name: IWithNetworkSubnet
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithNetworkSubnet
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
  isExternal: false
  name: IWithBackendOrProbe
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackend
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
  isExternal: false
  name: IWithBackend
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackend
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe}
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine`1
  name: IWithVirtualMachine<IWithBackendOrProbe>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe)
  name.vb: IWithVirtualMachine(Of IWithBackendOrProbe)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine`1
    name: IWithVirtualMachine
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe
    name: IWithBackendOrProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine`1
    name: IWithVirtualMachine
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe
    name: IWithBackendOrProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbeOrLoadBalancingRule
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
  isExternal: false
  name: IWithProbeOrLoadBalancingRule
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbeOrLoadBalancingRule
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
  isExternal: false
  name: IWithProbe
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
  isExternal: false
  name: IWithLoadBalancingRuleOrCreate
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRule
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
  isExternal: false
  name: IWithLoadBalancingRule
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRule
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
  isExternal: false
  name: IWithCreateAndInboundNatPool
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
  isExternal: false
  name: IWithCreateAndInboundNatRule
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndNatChoice
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
  isExternal: false
  name: IWithCreateAndNatChoice
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndNatChoice
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreate
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
  isExternal: false
  name: IWithCreate
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreate
- uid: ICreatable{Microsoft.Azure.Management.Fluent.Network.ILoadBalancer}
  definition: ICreatable`1
  name: ICreatable<ILoadBalancer>
  fullName: ICreatable<Microsoft.Azure.Management.Fluent.Network.ILoadBalancer>
  fullname.vb: ICreatable(Of Microsoft.Azure.Management.Fluent.Network.ILoadBalancer)
  name.vb: ICreatable(Of ILoadBalancer)
  spec.csharp:
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    name: ILoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    name: ILoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  - name: )
    fullName: )
- uid: IDefinitionWithTags{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreate}
  definition: IDefinitionWithTags`1
  name: IDefinitionWithTags<IWithCreate>
  fullName: IDefinitionWithTags<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreate>
  fullname.vb: IDefinitionWithTags(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreate)
  name.vb: IDefinitionWithTags(Of IWithCreate)
  spec.csharp:
  - uid: IDefinitionWithTags`1
    name: IDefinitionWithTags
    fullName: IDefinitionWithTags
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreate
    name: IWithCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IDefinitionWithTags`1
    name: IDefinitionWithTags
    fullName: IDefinitionWithTags
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreate
    name: IWithCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithInboundNatRule
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
  isExternal: false
  name: IWithInboundNatRule
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithInboundNatRule
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithInboundNatPool
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
  isExternal: false
  name: IWithInboundNatPool
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithInboundNatPool
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update
  isExternal: false
  name: IUpdate
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
- uid: IAppliable{Microsoft.Azure.Management.Fluent.Network.ILoadBalancer}
  definition: IAppliable`1
  name: IAppliable<ILoadBalancer>
  fullName: IAppliable<Microsoft.Azure.Management.Fluent.Network.ILoadBalancer>
  fullname.vb: IAppliable(Of Microsoft.Azure.Management.Fluent.Network.ILoadBalancer)
  name.vb: IAppliable(Of ILoadBalancer)
  spec.csharp:
  - uid: IAppliable`1
    name: IAppliable
    fullName: IAppliable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    name: ILoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IAppliable`1
    name: IAppliable
    fullName: IAppliable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    name: ILoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  - name: )
    fullName: )
- uid: IUpdateWithTags{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  definition: IUpdateWithTags`1
  name: IUpdateWithTags<IUpdate>
  fullName: IUpdateWithTags<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: IUpdateWithTags(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IUpdateWithTags(Of IUpdate)
  spec.csharp:
  - uid: IUpdateWithTags`1
    name: IUpdateWithTags
    fullName: IUpdateWithTags
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IUpdateWithTags`1
    name: IUpdateWithTags
    fullName: IUpdateWithTags
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update
  isExternal: false
  name: IWithProbe
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update
  isExternal: false
  name: IWithBackend
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update
  isExternal: false
  name: IWithLoadBalancingRule
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update
  isExternal: false
  name: IWithInternetFrontend
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update
  isExternal: false
  name: IWithPublicIpAddress
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternalFrontend
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update
  isExternal: false
  name: IWithInternalFrontend
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternalFrontend
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithNetworkSubnet
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update
  isExternal: false
  name: IWithNetworkSubnet
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithNetworkSubnet
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update
  isExternal: false
  name: IWithInboundNatRule
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update
  isExternal: false
  name: IWithInboundNatPool
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: IRefreshable`1
  isExternal: true
  name: IRefreshable<>
  fullName: IRefreshable<>
  fullname.vb: IRefreshable(Of )
  name.vb: IRefreshable(Of )
  spec.csharp:
  - uid: IRefreshable`1
    name: IRefreshable
    fullName: IRefreshable
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IRefreshable`1
    name: IRefreshable
    fullName: IRefreshable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: IWrapper`1
  isExternal: true
  name: IWrapper<>
  fullName: IWrapper<>
  fullname.vb: IWrapper(Of )
  name.vb: IWrapper(Of )
  spec.csharp:
  - uid: IWrapper`1
    name: IWrapper
    fullName: IWrapper
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IWrapper`1
    name: IWrapper
    fullName: IWrapper
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: IUpdatable`1
  isExternal: true
  name: IUpdatable<>
  fullName: IUpdatable<>
  fullname.vb: IUpdatable(Of )
  name.vb: IUpdatable(Of )
  spec.csharp:
  - uid: IUpdatable`1
    name: IUpdatable
    fullName: IUpdatable
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IUpdatable`1
    name: IUpdatable
    fullName: IUpdatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
- uid: IDefinitionWithRegion`1
  isExternal: true
  name: IDefinitionWithRegion<>
  fullName: IDefinitionWithRegion<>
  fullname.vb: IDefinitionWithRegion(Of )
  name.vb: IDefinitionWithRegion(Of )
  spec.csharp:
  - uid: IDefinitionWithRegion`1
    name: IDefinitionWithRegion
    fullName: IDefinitionWithRegion
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IDefinitionWithRegion`1
    name: IDefinitionWithRegion
    fullName: IDefinitionWithRegion
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableResource.Definition.IWithGroup`1
  isExternal: false
  name: Resource.Core.GroupableResource.Definition.IWithGroup<>
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableResource.Definition.IWithGroup<>
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableResource.Definition.IWithGroup(Of )
  name.vb: Resource.Core.GroupableResource.Definition.IWithGroup(Of )
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableResource.Definition.IWithGroup`1
    name: Resource.Core.GroupableResource.Definition.IWithGroup
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableResource.Definition.IWithGroup
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableResource.Definition.IWithGroup`1
    name: Resource.Core.GroupableResource.Definition.IWithGroup
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableResource.Definition.IWithGroup
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress`1
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
  isExternal: false
  name: IWithPublicIpAddress<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress(Of ReturnT)
  name.vb: IWithPublicIpAddress(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress`1
    name: IWithPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress`1
    name: IWithPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine`1
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
  isExternal: false
  name: IWithVirtualMachine<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine(Of ReturnT)
  name.vb: IWithVirtualMachine(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine`1
    name: IWithVirtualMachine
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine`1
    name: IWithVirtualMachine
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: ICreatable`1
  isExternal: true
  name: ICreatable<>
  fullName: ICreatable<>
  fullname.vb: ICreatable(Of )
  name.vb: ICreatable(Of )
  spec.csharp:
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: IDefinitionWithTags`1
  isExternal: true
  name: IDefinitionWithTags<>
  fullName: IDefinitionWithTags<>
  fullname.vb: IDefinitionWithTags(Of )
  name.vb: IDefinitionWithTags(Of )
  spec.csharp:
  - uid: IDefinitionWithTags`1
    name: IDefinitionWithTags
    fullName: IDefinitionWithTags
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IDefinitionWithTags`1
    name: IDefinitionWithTags
    fullName: IDefinitionWithTags
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update
- uid: IAppliable`1
  isExternal: true
  name: IAppliable<>
  fullName: IAppliable<>
  fullname.vb: IAppliable(Of )
  name.vb: IAppliable(Of )
  spec.csharp:
  - uid: IAppliable`1
    name: IAppliable
    fullName: IAppliable
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IAppliable`1
    name: IAppliable
    fullName: IAppliable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: IUpdateWithTags`1
  isExternal: true
  name: IUpdateWithTags<>
  fullName: IUpdateWithTags<>
  fullname.vb: IUpdateWithTags(Of )
  name.vb: IUpdateWithTags(Of )
  spec.csharp:
  - uid: IUpdateWithTags`1
    name: IUpdateWithTags
    fullName: IUpdateWithTags
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IUpdateWithTags`1
    name: IUpdateWithTags
    fullName: IUpdateWithTags
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.Network.Models.LoadBalancerInner}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<LoadBalancerInner>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.Network.Models.LoadBalancerInner>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.Network.Models.LoadBalancerInner)
  name.vb: Task(Of LoadBalancerInner)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Network.Models.LoadBalancerInner
    name: LoadBalancerInner
    fullName: Microsoft.Azure.Management.Network.Models.LoadBalancerInner
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Network.Models.LoadBalancerInner
    name: LoadBalancerInner
    fullName: Microsoft.Azure.Management.Network.Models.LoadBalancerInner
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: LoadBalancerImpl
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress}
  definition: ICreatable`1
  name: ICreatable<IPublicIpAddress>
  fullName: ICreatable<Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress>
  fullname.vb: ICreatable(Of Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  name.vb: ICreatable(Of IPublicIpAddress)
  spec.csharp:
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: IPublicIpAddress
  fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
- uid: Microsoft.Azure.Management.Fluent.Network.INetwork
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: INetwork
  fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
- uid: Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces[]
  isExternal: false
  name: IHasNetworkInterfaces[]
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces[]
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces()
  name.vb: IHasNetworkInterfaces()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces
    name: IHasNetworkInterfaces
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces
    name: IHasNetworkInterfaces
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces
  - name: ()
    fullName: ()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: Microsoft.Azure.Management.Fluent.Network.ProbeImpl
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: ProbeImpl
  fullName: Microsoft.Azure.Management.Fluent.Network.ProbeImpl
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: LoadBalancingRuleImpl
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: InboundNatRuleImpl
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: InboundNatPoolImpl
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl
- uid: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: FrontendImpl
  fullName: Microsoft.Azure.Management.Fluent.Network.FrontendImpl
- uid: Microsoft.Azure.Management.Fluent.Network.BackendImpl
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: BackendImpl
  fullName: Microsoft.Azure.Management.Fluent.Network.BackendImpl
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.Fluent.Network.IBackend}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, IBackend>
  fullName: System.Collections.Generic.IDictionary<System.String, Microsoft.Azure.Management.Fluent.Network.IBackend>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, Microsoft.Azure.Management.Fluent.Network.IBackend)
  name.vb: IDictionary(Of String, IBackend)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Fluent.Network.IBackend
    name: IBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.IBackend
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Fluent.Network.IBackend
    name: IBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.IBackend
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.Fluent.Network.IInboundNatPool}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, IInboundNatPool>
  fullName: System.Collections.Generic.IDictionary<System.String, Microsoft.Azure.Management.Fluent.Network.IInboundNatPool>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, Microsoft.Azure.Management.Fluent.Network.IInboundNatPool)
  name.vb: IDictionary(Of String, IInboundNatPool)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Fluent.Network.IInboundNatPool
    name: IInboundNatPool
    fullName: Microsoft.Azure.Management.Fluent.Network.IInboundNatPool
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Fluent.Network.IInboundNatPool
    name: IInboundNatPool
    fullName: Microsoft.Azure.Management.Fluent.Network.IInboundNatPool
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.Fluent.Network.ITcpProbe}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, ITcpProbe>
  fullName: System.Collections.Generic.IDictionary<System.String, Microsoft.Azure.Management.Fluent.Network.ITcpProbe>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, Microsoft.Azure.Management.Fluent.Network.ITcpProbe)
  name.vb: IDictionary(Of String, ITcpProbe)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Fluent.Network.ITcpProbe
    name: ITcpProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.ITcpProbe
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Fluent.Network.ITcpProbe
    name: ITcpProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.ITcpProbe
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.Fluent.Network.IFrontend}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, IFrontend>
  fullName: System.Collections.Generic.IDictionary<System.String, Microsoft.Azure.Management.Fluent.Network.IFrontend>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, Microsoft.Azure.Management.Fluent.Network.IFrontend)
  name.vb: IDictionary(Of String, IFrontend)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Fluent.Network.IFrontend
    name: IFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.IFrontend
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Fluent.Network.IFrontend
    name: IFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.IFrontend
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.Fluent.Network.IInboundNatRule}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, IInboundNatRule>
  fullName: System.Collections.Generic.IDictionary<System.String, Microsoft.Azure.Management.Fluent.Network.IInboundNatRule>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, Microsoft.Azure.Management.Fluent.Network.IInboundNatRule)
  name.vb: IDictionary(Of String, IInboundNatRule)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule
    name: IInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule
    name: IInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.Fluent.Network.IHttpProbe}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, IHttpProbe>
  fullName: System.Collections.Generic.IDictionary<System.String, Microsoft.Azure.Management.Fluent.Network.IHttpProbe>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, Microsoft.Azure.Management.Fluent.Network.IHttpProbe)
  name.vb: IDictionary(Of String, IHttpProbe)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Fluent.Network.IHttpProbe
    name: IHttpProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.IHttpProbe
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Fluent.Network.IHttpProbe
    name: IHttpProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.IHttpProbe
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, ILoadBalancingRule>
  fullName: System.Collections.Generic.IDictionary<System.String, Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule)
  name.vb: IDictionary(Of String, ILoadBalancingRule)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule
    name: ILoadBalancingRule
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule
    name: ILoadBalancingRule
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule
  - name: )
    fullName: )
- uid: System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  fullName: System.Collections.Generic.List<System.String>
  fullname.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.List`1
  parent: System.Collections.Generic
  isExternal: true
  name: List<T>
  fullName: System.Collections.Generic.List<T>
  fullname.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress
  isExternal: false
  name: WithExistingPublicIpAddress(IPublicIpAddress)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress
  isExternal: false
  name: WithNewPublicIpAddress()
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress
  isExternal: true
  name: WithNewPublicIpAddress(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress(System.String)
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress(System.String)
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress
  isExternal: true
  name: WithNewPublicIpAddress(ICreatable<IPublicIpAddress>)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress(ICreatable<Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress>)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress(ICreatable(Of Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress))
  name.vb: WithNewPublicIpAddress(ICreatable(Of IPublicIpAddress))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithPublicIpAddress.WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithNetworkSubnet.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithNetworkSubnet
  isExternal: true
  name: WithExistingSubnet(INetwork, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithNetworkSubnet.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithNetworkSubnet.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
    name: WithExistingSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithNetworkSubnet.WithExistingSubnet
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithNetworkSubnet.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
    name: WithExistingSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithNetworkSubnet.WithExistingSubnet
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithNetworkSubnet.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithNetworkSubnet
  isExternal: true
  name: WithExistingSubnet(INetwork, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithNetworkSubnet.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithNetworkSubnet.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
    name: WithExistingSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithNetworkSubnet.WithExistingSubnet
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithNetworkSubnet.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
    name: WithExistingSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithNetworkSubnet.WithExistingSubnet
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithInboundNatPool.DefineInboundNatPool(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithInboundNatPool
  isExternal: true
  name: DefineInboundNatPool(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithInboundNatPool.DefineInboundNatPool(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithInboundNatPool.DefineInboundNatPool(System.String)
    name: DefineInboundNatPool
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithInboundNatPool.DefineInboundNatPool
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithInboundNatPool.DefineInboundNatPool(System.String)
    name: DefineInboundNatPool
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithInboundNatPool.DefineInboundNatPool
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool}
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IBlank`1
  name: IBlank<IWithCreateAndInboundNatPool>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IBlank<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IBlank(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool)
  name.vb: IBlank(Of IWithCreateAndInboundNatPool)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IBlank
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
    name: IWithCreateAndInboundNatPool
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
    name: IWithCreateAndInboundNatPool
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IBlank`1
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition
  isExternal: false
  name: IBlank<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IBlank<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IBlank(Of ParentT)
  name.vb: IBlank(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IBlank
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.DefineInboundNatPool(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool
  isExternal: true
  name: DefineInboundNatPool(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.DefineInboundNatPool(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.DefineInboundNatPool(System.String)
    name: DefineInboundNatPool
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.DefineInboundNatPool
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.DefineInboundNatPool(System.String)
    name: DefineInboundNatPool
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.DefineInboundNatPool
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IBlank`1
  name: IBlank<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IBlank<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IBlank(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IBlank(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IBlank
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IBlank`1
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition
  isExternal: false
  name: IBlank<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IBlank<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IBlank(Of ParentT)
  name.vb: IBlank(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IBlank
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.UpdateInboundNatPool(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool
  isExternal: true
  name: UpdateInboundNatPool(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.UpdateInboundNatPool(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.UpdateInboundNatPool(System.String)
    name: UpdateInboundNatPool
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.UpdateInboundNatPool
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.UpdateInboundNatPool(System.String)
    name: UpdateInboundNatPool
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.UpdateInboundNatPool
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update
  isExternal: false
  name: IUpdate
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.WithoutInboundNatPool(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool
  isExternal: true
  name: WithoutInboundNatPool(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.WithoutInboundNatPool(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.WithoutInboundNatPool(System.String)
    name: WithoutInboundNatPool
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.WithoutInboundNatPool
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.WithoutInboundNatPool(System.String)
    name: WithoutInboundNatPool
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatPool.WithoutInboundNatPool
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend}.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend}
  definition: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  name: WithExistingPublicIpAddress(IPublicIpAddress)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend>.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend).WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend>.WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend).WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress`1
  isExternal: false
  name: WithExistingPublicIpAddress(IPublicIpAddress)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress<ReturnT>.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress(Of ReturnT).WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress<ReturnT>.WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress(Of ReturnT).WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend}.WithNewPublicIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend}
  definition: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress`1.WithNewPublicIpAddress
  name: WithNewPublicIpAddress()
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend>.WithNewPublicIpAddress()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend).WithNewPublicIpAddress()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress`1.WithNewPublicIpAddress
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend>.WithNewPublicIpAddress
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress`1.WithNewPublicIpAddress
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend).WithNewPublicIpAddress
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress`1.WithNewPublicIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress`1
  isExternal: false
  name: WithNewPublicIpAddress()
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress<ReturnT>.WithNewPublicIpAddress()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress(Of ReturnT).WithNewPublicIpAddress()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress`1.WithNewPublicIpAddress
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress<ReturnT>.WithNewPublicIpAddress
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress`1.WithNewPublicIpAddress
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress(Of ReturnT).WithNewPublicIpAddress
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend}.WithNewPublicIpAddress(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend}
  definition: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress`1.WithNewPublicIpAddress(System.String)
  name: WithNewPublicIpAddress(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend>.WithNewPublicIpAddress(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend).WithNewPublicIpAddress(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress`1.WithNewPublicIpAddress(System.String)
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend>.WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress`1.WithNewPublicIpAddress(System.String)
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend).WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress`1.WithNewPublicIpAddress(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress`1
  isExternal: true
  name: WithNewPublicIpAddress(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress<ReturnT>.WithNewPublicIpAddress(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress(Of ReturnT).WithNewPublicIpAddress(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress`1.WithNewPublicIpAddress(System.String)
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress<ReturnT>.WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress`1.WithNewPublicIpAddress(System.String)
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress(Of ReturnT).WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend}.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend}
  definition: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress`1.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  name: WithNewPublicIpAddress(ICreatable<IPublicIpAddress>)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend>.WithNewPublicIpAddress(ICreatable<Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress>)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend).WithNewPublicIpAddress(ICreatable(Of Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress))
  name.vb: WithNewPublicIpAddress(ICreatable(Of IPublicIpAddress))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress`1.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend>.WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress`1.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend).WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress`1.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress`1
  isExternal: true
  name: WithNewPublicIpAddress(ICreatable<IPublicIpAddress>)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress<ReturnT>.WithNewPublicIpAddress(ICreatable<Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress>)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress(Of ReturnT).WithNewPublicIpAddress(ICreatable(Of Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress))
  name.vb: WithNewPublicIpAddress(ICreatable(Of IPublicIpAddress))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress`1.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress<ReturnT>.WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress`1.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicIpAddress(Of ReturnT).WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternalFrontend.DefinePrivateFrontend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternalFrontend
  isExternal: true
  name: DefinePrivateFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternalFrontend.DefinePrivateFrontend(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternalFrontend.DefinePrivateFrontend(System.String)
    name: DefinePrivateFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternalFrontend.DefinePrivateFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternalFrontend.DefinePrivateFrontend(System.String)
    name: DefinePrivateFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternalFrontend.DefinePrivateFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IBlank`1
  name: IBlank<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IBlank<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IBlank(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IBlank(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IBlank
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IBlank`1
  parent: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition
  isExternal: false
  name: IBlank<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IBlank<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IBlank(Of ParentT)
  name.vb: IBlank(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IBlank
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition
  fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.UpdateDefinition
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternalFrontend.UpdateInternalFrontend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternalFrontend
  isExternal: true
  name: UpdateInternalFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternalFrontend.UpdateInternalFrontend(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternalFrontend.UpdateInternalFrontend(System.String)
    name: UpdateInternalFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternalFrontend.UpdateInternalFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternalFrontend.UpdateInternalFrontend(System.String)
    name: UpdateInternalFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternalFrontend.UpdateInternalFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IUpdate
  parent: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update
  isExternal: false
  name: IUpdate
  fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update.IUpdate
- uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update
  fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Update
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithInboundNatRule.DefineInboundNatRule(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithInboundNatRule
  isExternal: true
  name: DefineInboundNatRule(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithInboundNatRule.DefineInboundNatRule(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithInboundNatRule.DefineInboundNatRule(System.String)
    name: DefineInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithInboundNatRule.DefineInboundNatRule
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithInboundNatRule.DefineInboundNatRule(System.String)
    name: DefineInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithInboundNatRule.DefineInboundNatRule
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IBlank`1
  name: IBlank<IWithCreateAndInboundNatRule>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IBlank<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IBlank(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule)
  name.vb: IBlank(Of IWithCreateAndInboundNatRule)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IBlank
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
    name: IWithCreateAndInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
    name: IWithCreateAndInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IBlank`1
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition
  isExternal: false
  name: IBlank<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IBlank<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IBlank(Of ParentT)
  name.vb: IBlank(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IBlank
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.DefineInboundNatRule(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule
  isExternal: true
  name: DefineInboundNatRule(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.DefineInboundNatRule(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.DefineInboundNatRule(System.String)
    name: DefineInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.DefineInboundNatRule
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.DefineInboundNatRule(System.String)
    name: DefineInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.DefineInboundNatRule
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IBlank`1
  name: IBlank<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IBlank<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IBlank(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IBlank(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IBlank
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IBlank`1
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition
  isExternal: false
  name: IBlank<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IBlank<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IBlank(Of ParentT)
  name.vb: IBlank(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IBlank
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.UpdateInboundNatRule(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule
  isExternal: true
  name: UpdateInboundNatRule(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.UpdateInboundNatRule(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.UpdateInboundNatRule(System.String)
    name: UpdateInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.UpdateInboundNatRule
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.UpdateInboundNatRule(System.String)
    name: UpdateInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.UpdateInboundNatRule
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update
  isExternal: false
  name: IUpdate
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.WithoutInboundNatRule(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule
  isExternal: true
  name: WithoutInboundNatRule(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.WithoutInboundNatRule(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.WithoutInboundNatRule(System.String)
    name: WithoutInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.WithoutInboundNatRule
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.WithoutInboundNatRule(System.String)
    name: WithoutInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInboundNatRule.WithoutInboundNatRule
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe}.WithExistingVirtualMachines(Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces[])
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe}
  definition: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine`1.WithExistingVirtualMachines(Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces[])
  name: WithExistingVirtualMachines(IHasNetworkInterfaces[])
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe>.WithExistingVirtualMachines(Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces[])
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe).WithExistingVirtualMachines(Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces())
  name.vb: WithExistingVirtualMachines(IHasNetworkInterfaces())
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine`1.WithExistingVirtualMachines(Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces[])
    name: WithExistingVirtualMachines
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe>.WithExistingVirtualMachines
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces
    name: IHasNetworkInterfaces
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine`1.WithExistingVirtualMachines(Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces[])
    name: WithExistingVirtualMachines
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe).WithExistingVirtualMachines
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces
    name: IHasNetworkInterfaces
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine`1.WithExistingVirtualMachines(Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces[])
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine`1
  isExternal: false
  name: WithExistingVirtualMachines(IHasNetworkInterfaces[])
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine<ReturnT>.WithExistingVirtualMachines(Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces[])
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine(Of ReturnT).WithExistingVirtualMachines(Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces())
  name.vb: WithExistingVirtualMachines(IHasNetworkInterfaces())
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine`1.WithExistingVirtualMachines(Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces[])
    name: WithExistingVirtualMachines
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine<ReturnT>.WithExistingVirtualMachines
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces
    name: IHasNetworkInterfaces
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine`1.WithExistingVirtualMachines(Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces[])
    name: WithExistingVirtualMachines
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine(Of ReturnT).WithExistingVirtualMachines
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces
    name: IHasNetworkInterfaces
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontend.DefinePublicFrontend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontend
  isExternal: true
  name: DefinePublicFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontend.DefinePublicFrontend(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontend.DefinePublicFrontend(System.String)
    name: DefinePublicFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontend.DefinePublicFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontend.DefinePublicFrontend(System.String)
    name: DefinePublicFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontend.DefinePublicFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend}
  parent: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IBlank`1
  name: IBlank<IWithPublicFrontendOrBackend>
  fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IBlank<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IBlank(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend)
  name.vb: IBlank(Of IWithPublicFrontendOrBackend)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IBlank
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend
    name: IWithPublicFrontendOrBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend
    name: IWithPublicFrontendOrBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IBlank`1
  parent: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition
  isExternal: false
  name: IBlank<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IBlank<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IBlank(Of ParentT)
  name.vb: IBlank(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IBlank
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Definition
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.UpdateInternetFrontend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend
  isExternal: true
  name: UpdateInternetFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.UpdateInternetFrontend(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.UpdateInternetFrontend(System.String)
    name: UpdateInternetFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.UpdateInternetFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.UpdateInternetFrontend(System.String)
    name: UpdateInternetFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.UpdateInternetFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate
  parent: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update
  isExternal: false
  name: IUpdate
  fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update.IUpdate
- uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update
  fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.Update
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.DefinePublicFrontend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend
  isExternal: true
  name: DefinePublicFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.DefinePublicFrontend(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.DefinePublicFrontend(System.String)
    name: DefinePublicFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.DefinePublicFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.DefinePublicFrontend(System.String)
    name: DefinePublicFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.DefinePublicFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IBlank`1
  name: IBlank<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IBlank<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IBlank(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IBlank(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IBlank
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IBlank`1
  parent: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition
  isExternal: false
  name: IBlank<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IBlank<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IBlank(Of ParentT)
  name.vb: IBlank(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IBlank
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition
  fullName: Microsoft.Azure.Management.Fluent.Network.PublicFrontend.UpdateDefinition
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.WithoutFrontend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend
  isExternal: true
  name: WithoutFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.WithoutFrontend(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.WithoutFrontend(System.String)
    name: WithoutFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.WithoutFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.WithoutFrontend(System.String)
    name: WithoutFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithInternetFrontend.WithoutFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontend.DefinePrivateFrontend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontend
  isExternal: true
  name: DefinePrivateFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontend.DefinePrivateFrontend(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontend.DefinePrivateFrontend(System.String)
    name: DefinePrivateFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontend.DefinePrivateFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontend.DefinePrivateFrontend(System.String)
    name: DefinePrivateFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontend.DefinePrivateFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend}
  parent: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IBlank`1
  name: IBlank<IWithPrivateFrontendOrBackend>
  fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IBlank<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IBlank(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend)
  name.vb: IBlank(Of IWithPrivateFrontendOrBackend)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IBlank
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend
    name: IWithPrivateFrontendOrBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend
    name: IWithPrivateFrontendOrBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IBlank`1
  parent: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition
  isExternal: false
  name: IBlank<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IBlank<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IBlank(Of ParentT)
  name.vb: IBlank(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IBlank
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe.DefineTcpProbe(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe
  isExternal: true
  name: DefineTcpProbe(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe.DefineTcpProbe(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe.DefineTcpProbe(System.String)
    name: DefineTcpProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe.DefineTcpProbe
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe.DefineTcpProbe(System.String)
    name: DefineTcpProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe.DefineTcpProbe
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.TcpProbe.Definition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbeOrLoadBalancingRule}
  parent: Microsoft.Azure.Management.Fluent.Network.TcpProbe.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.TcpProbe.Definition.IBlank`1
  name: IBlank<IWithProbeOrLoadBalancingRule>
  fullName: Microsoft.Azure.Management.Fluent.Network.TcpProbe.Definition.IBlank<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbeOrLoadBalancingRule>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.TcpProbe.Definition.IBlank(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbeOrLoadBalancingRule)
  name.vb: IBlank(Of IWithProbeOrLoadBalancingRule)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.TcpProbe.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.TcpProbe.Definition.IBlank
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbeOrLoadBalancingRule
    name: IWithProbeOrLoadBalancingRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbeOrLoadBalancingRule
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.TcpProbe.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.TcpProbe.Definition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbeOrLoadBalancingRule
    name: IWithProbeOrLoadBalancingRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbeOrLoadBalancingRule
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.TcpProbe.Definition.IBlank`1
  parent: Microsoft.Azure.Management.Fluent.Network.TcpProbe.Definition
  isExternal: false
  name: IBlank<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.TcpProbe.Definition.IBlank<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.TcpProbe.Definition.IBlank(Of ParentT)
  name.vb: IBlank(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.TcpProbe.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.TcpProbe.Definition.IBlank
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.TcpProbe.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.TcpProbe.Definition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.TcpProbe.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.TcpProbe.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.TcpProbe.Definition
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe.WithHttpProbe(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe
  isExternal: true
  name: WithHttpProbe(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe.WithHttpProbe(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe.WithHttpProbe(System.String)
    name: WithHttpProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe.WithHttpProbe
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe.WithHttpProbe(System.String)
    name: WithHttpProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe.WithHttpProbe
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe.DefineHttpProbe(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe
  isExternal: true
  name: DefineHttpProbe(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe.DefineHttpProbe(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe.DefineHttpProbe(System.String)
    name: DefineHttpProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe.DefineHttpProbe
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe.DefineHttpProbe(System.String)
    name: DefineHttpProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe.DefineHttpProbe
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HttpProbe.Definition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbeOrLoadBalancingRule}
  parent: Microsoft.Azure.Management.Fluent.Network.HttpProbe.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.HttpProbe.Definition.IBlank`1
  name: IBlank<IWithProbeOrLoadBalancingRule>
  fullName: Microsoft.Azure.Management.Fluent.Network.HttpProbe.Definition.IBlank<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbeOrLoadBalancingRule>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HttpProbe.Definition.IBlank(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbeOrLoadBalancingRule)
  name.vb: IBlank(Of IWithProbeOrLoadBalancingRule)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HttpProbe.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.HttpProbe.Definition.IBlank
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbeOrLoadBalancingRule
    name: IWithProbeOrLoadBalancingRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbeOrLoadBalancingRule
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HttpProbe.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.HttpProbe.Definition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbeOrLoadBalancingRule
    name: IWithProbeOrLoadBalancingRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbeOrLoadBalancingRule
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HttpProbe.Definition.IBlank`1
  parent: Microsoft.Azure.Management.Fluent.Network.HttpProbe.Definition
  isExternal: false
  name: IBlank<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HttpProbe.Definition.IBlank<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HttpProbe.Definition.IBlank(Of ParentT)
  name.vb: IBlank(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HttpProbe.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.HttpProbe.Definition.IBlank
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HttpProbe.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.HttpProbe.Definition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HttpProbe.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HttpProbe.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.HttpProbe.Definition
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe.WithTcpProbe(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe
  isExternal: true
  name: WithTcpProbe(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe.WithTcpProbe(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe.WithTcpProbe(System.Int32)
    name: WithTcpProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe.WithTcpProbe
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe.WithTcpProbe(System.Int32)
    name: WithTcpProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithProbe.WithTcpProbe
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.DefineTcpProbe(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe
  isExternal: true
  name: DefineTcpProbe(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.DefineTcpProbe(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.DefineTcpProbe(System.String)
    name: DefineTcpProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.DefineTcpProbe
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.DefineTcpProbe(System.String)
    name: DefineTcpProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.DefineTcpProbe
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.TcpProbe.UpdateDefinition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.TcpProbe.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.TcpProbe.UpdateDefinition.IBlank`1
  name: IBlank<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.TcpProbe.UpdateDefinition.IBlank<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.TcpProbe.UpdateDefinition.IBlank(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IBlank(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.TcpProbe.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.TcpProbe.UpdateDefinition.IBlank
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.TcpProbe.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.TcpProbe.UpdateDefinition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.TcpProbe.UpdateDefinition.IBlank`1
  parent: Microsoft.Azure.Management.Fluent.Network.TcpProbe.UpdateDefinition
  isExternal: false
  name: IBlank<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.TcpProbe.UpdateDefinition.IBlank<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.TcpProbe.UpdateDefinition.IBlank(Of ParentT)
  name.vb: IBlank(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.TcpProbe.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.TcpProbe.UpdateDefinition.IBlank
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.TcpProbe.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.TcpProbe.UpdateDefinition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.TcpProbe.UpdateDefinition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.TcpProbe.UpdateDefinition
  fullName: Microsoft.Azure.Management.Fluent.Network.TcpProbe.UpdateDefinition
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.UpdateHttpProbe(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe
  isExternal: true
  name: UpdateHttpProbe(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.UpdateHttpProbe(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.UpdateHttpProbe(System.String)
    name: UpdateHttpProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.UpdateHttpProbe
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.UpdateHttpProbe(System.String)
    name: UpdateHttpProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.UpdateHttpProbe
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HttpProbe.Update.IUpdate
  parent: Microsoft.Azure.Management.Fluent.Network.HttpProbe.Update
  isExternal: false
  name: IUpdate
  fullName: Microsoft.Azure.Management.Fluent.Network.HttpProbe.Update.IUpdate
- uid: Microsoft.Azure.Management.Fluent.Network.HttpProbe.Update
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HttpProbe.Update
  fullName: Microsoft.Azure.Management.Fluent.Network.HttpProbe.Update
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithHttpProbe(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe
  isExternal: true
  name: WithHttpProbe(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithHttpProbe(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithHttpProbe(System.String)
    name: WithHttpProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithHttpProbe
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithHttpProbe(System.String)
    name: WithHttpProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithHttpProbe
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithoutProbe(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe
  isExternal: true
  name: WithoutProbe(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithoutProbe(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithoutProbe(System.String)
    name: WithoutProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithoutProbe
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithoutProbe(System.String)
    name: WithoutProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithoutProbe
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.DefineHttpProbe(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe
  isExternal: true
  name: DefineHttpProbe(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.DefineHttpProbe(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.DefineHttpProbe(System.String)
    name: DefineHttpProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.DefineHttpProbe
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.DefineHttpProbe(System.String)
    name: DefineHttpProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.DefineHttpProbe
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HttpProbe.UpdateDefinition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.HttpProbe.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.HttpProbe.UpdateDefinition.IBlank`1
  name: IBlank<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.HttpProbe.UpdateDefinition.IBlank<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HttpProbe.UpdateDefinition.IBlank(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IBlank(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HttpProbe.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.HttpProbe.UpdateDefinition.IBlank
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HttpProbe.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.HttpProbe.UpdateDefinition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HttpProbe.UpdateDefinition.IBlank`1
  parent: Microsoft.Azure.Management.Fluent.Network.HttpProbe.UpdateDefinition
  isExternal: false
  name: IBlank<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HttpProbe.UpdateDefinition.IBlank<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HttpProbe.UpdateDefinition.IBlank(Of ParentT)
  name.vb: IBlank(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HttpProbe.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.HttpProbe.UpdateDefinition.IBlank
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HttpProbe.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.HttpProbe.UpdateDefinition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HttpProbe.UpdateDefinition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HttpProbe.UpdateDefinition
  fullName: Microsoft.Azure.Management.Fluent.Network.HttpProbe.UpdateDefinition
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.UpdateTcpProbe(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe
  isExternal: true
  name: UpdateTcpProbe(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.UpdateTcpProbe(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.UpdateTcpProbe(System.String)
    name: UpdateTcpProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.UpdateTcpProbe
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.UpdateTcpProbe(System.String)
    name: UpdateTcpProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.UpdateTcpProbe
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.TcpProbe.Update.IUpdate
  parent: Microsoft.Azure.Management.Fluent.Network.TcpProbe.Update
  isExternal: false
  name: IUpdate
  fullName: Microsoft.Azure.Management.Fluent.Network.TcpProbe.Update.IUpdate
- uid: Microsoft.Azure.Management.Fluent.Network.TcpProbe.Update
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.TcpProbe.Update
  fullName: Microsoft.Azure.Management.Fluent.Network.TcpProbe.Update
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithTcpProbe(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe
  isExternal: true
  name: WithTcpProbe(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithTcpProbe(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithTcpProbe(System.Int32)
    name: WithTcpProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithTcpProbe
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithTcpProbe(System.Int32)
    name: WithTcpProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithProbe.WithTcpProbe
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRule.WithLoadBalancingRule(System.Int32,System.String,System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRule
  isExternal: true
  name: WithLoadBalancingRule(Int32, String, Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRule.WithLoadBalancingRule(System.Int32, System.String, System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRule.WithLoadBalancingRule(System.Int32,System.String,System.Int32)
    name: WithLoadBalancingRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRule.WithLoadBalancingRule
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRule.WithLoadBalancingRule(System.Int32,System.String,System.Int32)
    name: WithLoadBalancingRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRule.WithLoadBalancingRule
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRule.WithLoadBalancingRule(System.Int32,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRule
  isExternal: true
  name: WithLoadBalancingRule(Int32, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRule.WithLoadBalancingRule(System.Int32, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRule.WithLoadBalancingRule(System.Int32,System.String)
    name: WithLoadBalancingRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRule.WithLoadBalancingRule
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRule.WithLoadBalancingRule(System.Int32,System.String)
    name: WithLoadBalancingRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRule.WithLoadBalancingRule
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRule.DefineLoadBalancingRule(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRule
  isExternal: true
  name: DefineLoadBalancingRule(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRule.DefineLoadBalancingRule(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRule.DefineLoadBalancingRule(System.String)
    name: DefineLoadBalancingRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRule.DefineLoadBalancingRule
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRule.DefineLoadBalancingRule(System.String)
    name: DefineLoadBalancingRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRule.DefineLoadBalancingRule
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IBlank`1
  name: IBlank<IWithLoadBalancingRuleOrCreate>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IBlank<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IBlank(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate)
  name.vb: IBlank(Of IWithLoadBalancingRuleOrCreate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IBlank
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
    name: IWithLoadBalancingRuleOrCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
    name: IWithLoadBalancingRuleOrCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IBlank`1
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition
  isExternal: false
  name: IBlank<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IBlank<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IBlank(Of ParentT)
  name.vb: IBlank(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IBlank
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithoutLoadBalancingRule(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule
  isExternal: true
  name: WithoutLoadBalancingRule(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithoutLoadBalancingRule(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithoutLoadBalancingRule(System.String)
    name: WithoutLoadBalancingRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithoutLoadBalancingRule
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithoutLoadBalancingRule(System.String)
    name: WithoutLoadBalancingRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithoutLoadBalancingRule
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithLoadBalancingRule(System.Int32,System.String,System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule
  isExternal: true
  name: WithLoadBalancingRule(Int32, String, Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithLoadBalancingRule(System.Int32, System.String, System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithLoadBalancingRule(System.Int32,System.String,System.Int32)
    name: WithLoadBalancingRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithLoadBalancingRule
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithLoadBalancingRule(System.Int32,System.String,System.Int32)
    name: WithLoadBalancingRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithLoadBalancingRule
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithLoadBalancingRule(System.Int32,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule
  isExternal: true
  name: WithLoadBalancingRule(Int32, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithLoadBalancingRule(System.Int32, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithLoadBalancingRule(System.Int32,System.String)
    name: WithLoadBalancingRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithLoadBalancingRule
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithLoadBalancingRule(System.Int32,System.String)
    name: WithLoadBalancingRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.WithLoadBalancingRule
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.DefineLoadBalancingRule(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule
  isExternal: true
  name: DefineLoadBalancingRule(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.DefineLoadBalancingRule(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.DefineLoadBalancingRule(System.String)
    name: DefineLoadBalancingRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.DefineLoadBalancingRule
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.DefineLoadBalancingRule(System.String)
    name: DefineLoadBalancingRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.DefineLoadBalancingRule
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IBlank`1
  name: IBlank<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IBlank<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IBlank(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IBlank(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IBlank
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IBlank`1
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition
  isExternal: false
  name: IBlank<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IBlank<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IBlank(Of ParentT)
  name.vb: IBlank(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IBlank
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.UpdateLoadBalancingRule(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule
  isExternal: true
  name: UpdateLoadBalancingRule(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.UpdateLoadBalancingRule(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.UpdateLoadBalancingRule(System.String)
    name: UpdateLoadBalancingRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.UpdateLoadBalancingRule
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.UpdateLoadBalancingRule(System.String)
    name: UpdateLoadBalancingRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithLoadBalancingRule.UpdateLoadBalancingRule
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update
  isExternal: false
  name: IUpdate
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update
- uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.InboundNatPools
  parent: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  isExternal: false
  name: InboundNatPools()
  fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.InboundNatPools()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.InboundNatPools
    name: InboundNatPools
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.InboundNatPools
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.InboundNatPools
    name: InboundNatPools
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.InboundNatPools
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.HttpProbes
  parent: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  isExternal: false
  name: HttpProbes()
  fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.HttpProbes()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.HttpProbes
    name: HttpProbes
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.HttpProbes
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.HttpProbes
    name: HttpProbes
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.HttpProbes
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.PublicIpAddressIds
  parent: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  isExternal: false
  name: PublicIpAddressIds
  fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.PublicIpAddressIds
- uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.Frontends
  parent: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  isExternal: false
  name: Frontends()
  fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.Frontends()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.Frontends
    name: Frontends
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.Frontends
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.Frontends
    name: Frontends
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.Frontends
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.Backends
  parent: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  isExternal: false
  name: Backends()
  fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.Backends()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.Backends
    name: Backends
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.Backends
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.Backends
    name: Backends
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.Backends
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.TcpProbes
  parent: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  isExternal: false
  name: TcpProbes()
  fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.TcpProbes()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.TcpProbes
    name: TcpProbes
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.TcpProbes
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.TcpProbes
    name: TcpProbes
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.TcpProbes
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.InboundNatRules
  parent: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  isExternal: false
  name: InboundNatRules()
  fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.InboundNatRules()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.InboundNatRules
    name: InboundNatRules
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.InboundNatRules
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.InboundNatRules
    name: InboundNatRules
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer.InboundNatRules
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules.LoadBalancingRules
  parent: Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules
  isExternal: false
  name: LoadBalancingRules()
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules.LoadBalancingRules()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules.LoadBalancingRules
    name: LoadBalancingRules
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules.LoadBalancingRules
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules.LoadBalancingRules
    name: LoadBalancingRules
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules.LoadBalancingRules
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackend.DefineBackend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackend
  isExternal: true
  name: DefineBackend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackend.DefineBackend(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackend.DefineBackend(System.String)
    name: DefineBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackend.DefineBackend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackend.DefineBackend(System.String)
    name: DefineBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackend.DefineBackend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe}
  parent: Microsoft.Azure.Management.Fluent.Network.Backend.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IBlank`1
  name: IBlank<IWithBackendOrProbe>
  fullName: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IBlank<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IBlank(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe)
  name.vb: IBlank(Of IWithBackendOrProbe)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IBlank
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe
    name: IWithBackendOrProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe
    name: IWithBackendOrProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IBlank`1
  parent: Microsoft.Azure.Management.Fluent.Network.Backend.Definition
  isExternal: false
  name: IBlank<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IBlank<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IBlank(Of ParentT)
  name.vb: IBlank(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IBlank
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.Backend.Definition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.Backend.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.Backend.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.Backend.Definition
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.DefineBackend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend
  isExternal: true
  name: DefineBackend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.DefineBackend(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.DefineBackend(System.String)
    name: DefineBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.DefineBackend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.DefineBackend(System.String)
    name: DefineBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.DefineBackend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IBlank`1
  name: IBlank<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IBlank<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IBlank(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IBlank(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IBlank
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IBlank`1
  parent: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition
  isExternal: false
  name: IBlank<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IBlank<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IBlank(Of ParentT)
  name.vb: IBlank(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IBlank
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition
  fullName: Microsoft.Azure.Management.Fluent.Network.Backend.UpdateDefinition
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.WithoutBackend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend
  isExternal: true
  name: WithoutBackend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.WithoutBackend(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.WithoutBackend(System.String)
    name: WithoutBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.WithoutBackend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.WithoutBackend(System.String)
    name: WithoutBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.WithoutBackend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.UpdateBackend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend
  isExternal: true
  name: UpdateBackend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.UpdateBackend(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.UpdateBackend(System.String)
    name: UpdateBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.UpdateBackend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.UpdateBackend(System.String)
    name: UpdateBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IWithBackend.UpdateBackend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.Backend.Update.IUpdate
  parent: Microsoft.Azure.Management.Fluent.Network.Backend.Update
  isExternal: false
  name: IUpdate
  fullName: Microsoft.Azure.Management.Fluent.Network.Backend.Update.IUpdate
- uid: Microsoft.Azure.Management.Fluent.Network.Backend.Update
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.Backend.Update
  fullName: Microsoft.Azure.Management.Fluent.Network.Backend.Update
