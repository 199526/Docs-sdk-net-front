### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.Sql.Models.DatabaseCreateParameters
  commentId: T:Microsoft.WindowsAzure.Management.Sql.Models.DatabaseCreateParameters
  id: DatabaseCreateParameters
  parent: Microsoft.WindowsAzure.Management.Sql.Models
  children:
  - Microsoft.WindowsAzure.Management.Sql.Models.DatabaseCreateParameters.#ctor
  - Microsoft.WindowsAzure.Management.Sql.Models.DatabaseCreateParameters.#ctor(System.String)
  - Microsoft.WindowsAzure.Management.Sql.Models.DatabaseCreateParameters.CollationName
  - Microsoft.WindowsAzure.Management.Sql.Models.DatabaseCreateParameters.Edition
  - Microsoft.WindowsAzure.Management.Sql.Models.DatabaseCreateParameters.MaximumDatabaseSizeInBytes
  - Microsoft.WindowsAzure.Management.Sql.Models.DatabaseCreateParameters.MaximumDatabaseSizeInGB
  - Microsoft.WindowsAzure.Management.Sql.Models.DatabaseCreateParameters.Name
  - Microsoft.WindowsAzure.Management.Sql.Models.DatabaseCreateParameters.ServiceObjectiveId
  langs:
  - csharp
  - vb
  name: DatabaseCreateParameters
  nameWithType: DatabaseCreateParameters
  fullName: Microsoft.WindowsAzure.Management.Sql.Models.DatabaseCreateParameters
  type: Class
  source:
    remote:
      path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/DatabaseCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DatabaseCreateParameters
    path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/DatabaseCreateParameters.cs
    startLine: 30
  assemblies:
  - Microsoft.WindowsAzure.Management.Sql
  namespace: Microsoft.WindowsAzure.Management.Sql.Models
  summary: "\nRepresents the parameters required to create a new database on a Azure\nSQL Database Server.\n"
  example: []
  syntax:
    content: public class DatabaseCreateParameters
    content.vb: Public Class DatabaseCreateParameters
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.Sql.Models.DatabaseCreateParameters.CollationName
  commentId: P:Microsoft.WindowsAzure.Management.Sql.Models.DatabaseCreateParameters.CollationName
  id: CollationName
  parent: Microsoft.WindowsAzure.Management.Sql.Models.DatabaseCreateParameters
  langs:
  - csharp
  - vb
  name: CollationName
  nameWithType: DatabaseCreateParameters.CollationName
  fullName: Microsoft.WindowsAzure.Management.Sql.Models.DatabaseCreateParameters.CollationName
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/DatabaseCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CollationName
    path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/DatabaseCreateParameters.cs
    startLine: 37
  assemblies:
  - Microsoft.WindowsAzure.Management.Sql
  namespace: Microsoft.WindowsAzure.Management.Sql.Models
  summary: "\nOptional. Gets or sets the collation name for the new database.\n"
  example: []
  syntax:
    content: public string CollationName { get; set; }
    content.vb: Public Property CollationName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Sql.Models.DatabaseCreateParameters.Edition
  commentId: P:Microsoft.WindowsAzure.Management.Sql.Models.DatabaseCreateParameters.Edition
  id: Edition
  parent: Microsoft.WindowsAzure.Management.Sql.Models.DatabaseCreateParameters
  langs:
  - csharp
  - vb
  name: Edition
  nameWithType: DatabaseCreateParameters.Edition
  fullName: Microsoft.WindowsAzure.Management.Sql.Models.DatabaseCreateParameters.Edition
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/DatabaseCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Edition
    path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/DatabaseCreateParameters.cs
    startLine: 50
  assemblies:
  - Microsoft.WindowsAzure.Management.Sql
  namespace: Microsoft.WindowsAzure.Management.Sql.Models
  summary: "\nOptional. Gets or sets the edition for the new database.  The\nDatabaseEditions enumeration contains the valid values for this\nproperty.\n"
  example: []
  syntax:
    content: public string Edition { get; set; }
    content.vb: Public Property Edition As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Sql.Models.DatabaseCreateParameters.MaximumDatabaseSizeInBytes
  commentId: P:Microsoft.WindowsAzure.Management.Sql.Models.DatabaseCreateParameters.MaximumDatabaseSizeInBytes
  id: MaximumDatabaseSizeInBytes
  parent: Microsoft.WindowsAzure.Management.Sql.Models.DatabaseCreateParameters
  langs:
  - csharp
  - vb
  name: MaximumDatabaseSizeInBytes
  nameWithType: DatabaseCreateParameters.MaximumDatabaseSizeInBytes
  fullName: Microsoft.WindowsAzure.Management.Sql.Models.DatabaseCreateParameters.MaximumDatabaseSizeInBytes
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/DatabaseCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MaximumDatabaseSizeInBytes
    path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/DatabaseCreateParameters.cs
    startLine: 63
  assemblies:
  - Microsoft.WindowsAzure.Management.Sql
  namespace: Microsoft.WindowsAzure.Management.Sql.Models
  summary: "\nOptional. Gets or sets the maximum size of this database expressed\nin bytes.  If this is used in conjunction with\nMaximumDatabaseSizeInGB they must agree.\n"
  example: []
  syntax:
    content: public long ? MaximumDatabaseSizeInBytes { get; set; }
    content.vb: Public Property MaximumDatabaseSizeInBytes As Long?
    parameters: []
    return:
      type: System.Nullable{System.Int64}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Sql.Models.DatabaseCreateParameters.MaximumDatabaseSizeInGB
  commentId: P:Microsoft.WindowsAzure.Management.Sql.Models.DatabaseCreateParameters.MaximumDatabaseSizeInGB
  id: MaximumDatabaseSizeInGB
  parent: Microsoft.WindowsAzure.Management.Sql.Models.DatabaseCreateParameters
  langs:
  - csharp
  - vb
  name: MaximumDatabaseSizeInGB
  nameWithType: DatabaseCreateParameters.MaximumDatabaseSizeInGB
  fullName: Microsoft.WindowsAzure.Management.Sql.Models.DatabaseCreateParameters.MaximumDatabaseSizeInGB
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/DatabaseCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MaximumDatabaseSizeInGB
    path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/DatabaseCreateParameters.cs
    startLine: 76
  assemblies:
  - Microsoft.WindowsAzure.Management.Sql
  namespace: Microsoft.WindowsAzure.Management.Sql.Models
  summary: "\nOptional. Gets or sets the maximum size of this database expressed\nin gigabytes.  If this is used in conjunction with\nMaximumDatabaseSizeInBytes they must agree.\n"
  example: []
  syntax:
    content: public int ? MaximumDatabaseSizeInGB { get; set; }
    content.vb: Public Property MaximumDatabaseSizeInGB As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Sql.Models.DatabaseCreateParameters.Name
  commentId: P:Microsoft.WindowsAzure.Management.Sql.Models.DatabaseCreateParameters.Name
  id: Name
  parent: Microsoft.WindowsAzure.Management.Sql.Models.DatabaseCreateParameters
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: DatabaseCreateParameters.Name
  fullName: Microsoft.WindowsAzure.Management.Sql.Models.DatabaseCreateParameters.Name
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/DatabaseCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/DatabaseCreateParameters.cs
    startLine: 87
  assemblies:
  - Microsoft.WindowsAzure.Management.Sql
  namespace: Microsoft.WindowsAzure.Management.Sql.Models
  summary: "\nRequired. Gets or sets the name for the new database.\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Sql.Models.DatabaseCreateParameters.ServiceObjectiveId
  commentId: P:Microsoft.WindowsAzure.Management.Sql.Models.DatabaseCreateParameters.ServiceObjectiveId
  id: ServiceObjectiveId
  parent: Microsoft.WindowsAzure.Management.Sql.Models.DatabaseCreateParameters
  langs:
  - csharp
  - vb
  name: ServiceObjectiveId
  nameWithType: DatabaseCreateParameters.ServiceObjectiveId
  fullName: Microsoft.WindowsAzure.Management.Sql.Models.DatabaseCreateParameters.ServiceObjectiveId
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/DatabaseCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ServiceObjectiveId
    path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/DatabaseCreateParameters.cs
    startLine: 99
  assemblies:
  - Microsoft.WindowsAzure.Management.Sql
  namespace: Microsoft.WindowsAzure.Management.Sql.Models
  summary: "\nOptional. Gets or sets the service objective ID to be applied to\nthe database.\n"
  example: []
  syntax:
    content: public string ServiceObjectiveId { get; set; }
    content.vb: Public Property ServiceObjectiveId As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Sql.Models.DatabaseCreateParameters.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.Sql.Models.DatabaseCreateParameters.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.Sql.Models.DatabaseCreateParameters
  langs:
  - csharp
  - vb
  name: DatabaseCreateParameters()
  nameWithType: DatabaseCreateParameters.DatabaseCreateParameters()
  fullName: Microsoft.WindowsAzure.Management.Sql.Models.DatabaseCreateParameters.DatabaseCreateParameters()
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/DatabaseCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/DatabaseCreateParameters.cs
    startLine: 108
  assemblies:
  - Microsoft.WindowsAzure.Management.Sql
  namespace: Microsoft.WindowsAzure.Management.Sql.Models
  summary: "\nInitializes a new instance of the DatabaseCreateParameters class.\n"
  example: []
  syntax:
    content: public DatabaseCreateParameters()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Sql.Models.DatabaseCreateParameters.#ctor(System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Sql.Models.DatabaseCreateParameters.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.WindowsAzure.Management.Sql.Models.DatabaseCreateParameters
  langs:
  - csharp
  - vb
  name: DatabaseCreateParameters(String)
  nameWithType: DatabaseCreateParameters.DatabaseCreateParameters(String)
  fullName: Microsoft.WindowsAzure.Management.Sql.Models.DatabaseCreateParameters.DatabaseCreateParameters(System.String)
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/DatabaseCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/Sql/SqlManagement/Generated/Models/DatabaseCreateParameters.cs
    startLine: 116
  assemblies:
  - Microsoft.WindowsAzure.Management.Sql
  namespace: Microsoft.WindowsAzure.Management.Sql.Models
  summary: "\nInitializes a new instance of the DatabaseCreateParameters class\nwith required arguments.\n"
  example: []
  syntax:
    content: public DatabaseCreateParameters(string name)
    content.vb: Public Sub New(name As String)
    parameters:
    - id: name
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.Sql.Models
  commentId: N:Microsoft.WindowsAzure.Management.Sql.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Sql.Models
  nameWithType: Microsoft.WindowsAzure.Management.Sql.Models
  fullName: Microsoft.WindowsAzure.Management.Sql.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullname.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
