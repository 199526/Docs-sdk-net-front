items:
- uid: Microsoft.Azure.Management.WebSites.Models.RampUpRule
  commentId: T:Microsoft.Azure.Management.WebSites.Models.RampUpRule
  id: RampUpRule
  parent: Microsoft.Azure.Management.WebSites.Models
  children:
  - Microsoft.Azure.Management.WebSites.Models.RampUpRule.#ctor
  - Microsoft.Azure.Management.WebSites.Models.RampUpRule.#ctor(System.String,System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Int32},System.Nullable{System.Double},System.Nullable{System.Double},System.String,System.String)
  - Microsoft.Azure.Management.WebSites.Models.RampUpRule.ActionHostName
  - Microsoft.Azure.Management.WebSites.Models.RampUpRule.ChangeDecisionCallbackUrl
  - Microsoft.Azure.Management.WebSites.Models.RampUpRule.ChangeIntervalInMinutes
  - Microsoft.Azure.Management.WebSites.Models.RampUpRule.ChangeStep
  - Microsoft.Azure.Management.WebSites.Models.RampUpRule.MaxReroutePercentage
  - Microsoft.Azure.Management.WebSites.Models.RampUpRule.MinReroutePercentage
  - Microsoft.Azure.Management.WebSites.Models.RampUpRule.Name
  - Microsoft.Azure.Management.WebSites.Models.RampUpRule.ReroutePercentage
  langs:
  - csharp
  - vb
  name: RampUpRule
  fullName: Microsoft.Azure.Management.WebSites.Models.RampUpRule
  type: Class
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/RampUpRule.cs
      branch: 1e01bafcd8b025065a7c4afb930c63ba2e078288
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RampUpRule
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/RampUpRule.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Management.Websites
  packages:
  - Microsoft.Azure.Management.Websites(1.3.2-preview)
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nRouting rules for ramp up testing. This rule allows to redirect static\ntraffic % to a slot or to gradually change routing % based on\nperformance\n"
  example: []
  syntax:
    content: public class RampUpRule
    content.vb: Public Class RampUpRule
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.WebSites.Models.RampUpRule.#ctor
  commentId: M:Microsoft.Azure.Management.WebSites.Models.RampUpRule.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.WebSites.Models.RampUpRule
  langs:
  - csharp
  - vb
  name: RampUpRule()
  fullName: Microsoft.Azure.Management.WebSites.Models.RampUpRule.RampUpRule()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/RampUpRule.cs
      branch: 1e01bafcd8b025065a7c4afb930c63ba2e078288
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/RampUpRule.cs
    startLine: 28
  assemblies:
  - Microsoft.Azure.Management.Websites
  packages:
  - Microsoft.Azure.Management.Websites(1.3.2-preview)
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the RampUpRule class.\n"
  example: []
  syntax:
    content: public RampUpRule()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.RampUpRule.#ctor(System.String,System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Int32},System.Nullable{System.Double},System.Nullable{System.Double},System.String,System.String)
  commentId: M:Microsoft.Azure.Management.WebSites.Models.RampUpRule.#ctor(System.String,System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Int32},System.Nullable{System.Double},System.Nullable{System.Double},System.String,System.String)
  id: '#ctor(System.String,System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Int32},System.Nullable{System.Double},System.Nullable{System.Double},System.String,System.String)'
  parent: Microsoft.Azure.Management.WebSites.Models.RampUpRule
  langs:
  - csharp
  - vb
  name: RampUpRule(String, Nullable<Double>, Nullable<Double>, Nullable<Int32>, Nullable<Double>, Nullable<Double>, String, String)
  fullName: Microsoft.Azure.Management.WebSites.Models.RampUpRule.RampUpRule(System.String, System.Nullable<System.Double>, System.Nullable<System.Double>, System.Nullable<System.Int32>, System.Nullable<System.Double>, System.Nullable<System.Double>, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/RampUpRule.cs
      branch: 1e01bafcd8b025065a7c4afb930c63ba2e078288
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/RampUpRule.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Management.Websites
  packages:
  - Microsoft.Azure.Management.Websites(1.3.2-preview)
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the RampUpRule class.\n"
  example: []
  syntax:
    content: public RampUpRule(string actionHostName = null, double ? reroutePercentage = null, double ? changeStep = null, int ? changeIntervalInMinutes = null, double ? minReroutePercentage = null, double ? maxReroutePercentage = null, string changeDecisionCallbackUrl = null, string name = null)
    content.vb: Public Sub New(actionHostName As String = Nothing, reroutePercentage As Double? = Nothing, changeStep As Double? = Nothing, changeIntervalInMinutes As Integer? = Nothing, minReroutePercentage As Double? = Nothing, maxReroutePercentage As Double? = Nothing, changeDecisionCallbackUrl As String = Nothing, name As String = Nothing)
    parameters:
    - id: actionHostName
      type: System.String
    - id: reroutePercentage
      type: System.Nullable{System.Double}
    - id: changeStep
      type: System.Nullable{System.Double}
    - id: changeIntervalInMinutes
      type: System.Nullable{System.Int32}
    - id: minReroutePercentage
      type: System.Nullable{System.Double}
    - id: maxReroutePercentage
      type: System.Nullable{System.Double}
    - id: changeDecisionCallbackUrl
      type: System.String
    - id: name
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.WebSites.Models.RampUpRule.RampUpRule(System.String, System.Nullable(Of System.Double), System.Nullable(Of System.Double), System.Nullable(Of System.Int32), System.Nullable(Of System.Double), System.Nullable(Of System.Double), System.String, System.String)
  name.vb: RampUpRule(String, Nullable(Of Double), Nullable(Of Double), Nullable(Of Int32), Nullable(Of Double), Nullable(Of Double), String, String)
- uid: Microsoft.Azure.Management.WebSites.Models.RampUpRule.ActionHostName
  commentId: P:Microsoft.Azure.Management.WebSites.Models.RampUpRule.ActionHostName
  id: ActionHostName
  parent: Microsoft.Azure.Management.WebSites.Models.RampUpRule
  langs:
  - csharp
  - vb
  name: ActionHostName
  fullName: Microsoft.Azure.Management.WebSites.Models.RampUpRule.ActionHostName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/RampUpRule.cs
      branch: 1e01bafcd8b025065a7c4afb930c63ba2e078288
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ActionHostName
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/RampUpRule.cs
    startLine: 49
  assemblies:
  - Microsoft.Azure.Management.Websites
  packages:
  - Microsoft.Azure.Management.Websites(1.3.2-preview)
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nHostname of a slot to which the traffic will be redirected if\ndecided to. E.g. mysite-stage.azurewebsites.net\n"
  example: []
  syntax:
    content: public string ActionHostName { get; set; }
    content.vb: Public Property ActionHostName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.RampUpRule.ReroutePercentage
  commentId: P:Microsoft.Azure.Management.WebSites.Models.RampUpRule.ReroutePercentage
  id: ReroutePercentage
  parent: Microsoft.Azure.Management.WebSites.Models.RampUpRule
  langs:
  - csharp
  - vb
  name: ReroutePercentage
  fullName: Microsoft.Azure.Management.WebSites.Models.RampUpRule.ReroutePercentage
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/RampUpRule.cs
      branch: 1e01bafcd8b025065a7c4afb930c63ba2e078288
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ReroutePercentage
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/RampUpRule.cs
    startLine: 56
  assemblies:
  - Microsoft.Azure.Management.Websites
  packages:
  - Microsoft.Azure.Management.Websites(1.3.2-preview)
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nPercentage of the traffic which will be redirected to\n{Microsoft.Web.Hosting.Administration.RampUpRule.ActionHostName}\n"
  example: []
  syntax:
    content: public double ? ReroutePercentage { get; set; }
    content.vb: Public Property ReroutePercentage As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.RampUpRule.ChangeStep
  commentId: P:Microsoft.Azure.Management.WebSites.Models.RampUpRule.ChangeStep
  id: ChangeStep
  parent: Microsoft.Azure.Management.WebSites.Models.RampUpRule
  langs:
  - csharp
  - vb
  name: ChangeStep
  fullName: Microsoft.Azure.Management.WebSites.Models.RampUpRule.ChangeStep
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/RampUpRule.cs
      branch: 1e01bafcd8b025065a7c4afb930c63ba2e078288
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ChangeStep
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/RampUpRule.cs
    startLine: 73
  assemblies:
  - Microsoft.Azure.Management.Websites
  packages:
  - Microsoft.Azure.Management.Websites(1.3.2-preview)
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\n[Optional] In auto ramp up scenario this is the step to to\nadd/remove from\n{Microsoft.Web.Hosting.Administration.RampUpRule.ReroutePercentage}\nuntil it reaches\n{Microsoft.Web.Hosting.Administration.RampUpRule.MinReroutePercentage}\nor\n{Microsoft.Web.Hosting.Administration.RampUpRule.MaxReroutePercentage}.\nSite metrics are checked every N minutes specificed in\n{Microsoft.Web.Hosting.Administration.RampUpRule.ChangeIntervalInMinutes}.\nCustom decision algorithm can be provided in\nTiPCallback site extension which Url can be specified in\n{Microsoft.Web.Hosting.Administration.RampUpRule.ChangeDecisionCallbackUrl}\n"
  example: []
  syntax:
    content: public double ? ChangeStep { get; set; }
    content.vb: Public Property ChangeStep As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.RampUpRule.ChangeIntervalInMinutes
  commentId: P:Microsoft.Azure.Management.WebSites.Models.RampUpRule.ChangeIntervalInMinutes
  id: ChangeIntervalInMinutes
  parent: Microsoft.Azure.Management.WebSites.Models.RampUpRule
  langs:
  - csharp
  - vb
  name: ChangeIntervalInMinutes
  fullName: Microsoft.Azure.Management.WebSites.Models.RampUpRule.ChangeIntervalInMinutes
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/RampUpRule.cs
      branch: 1e01bafcd8b025065a7c4afb930c63ba2e078288
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ChangeIntervalInMinutes
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/RampUpRule.cs
    startLine: 80
  assemblies:
  - Microsoft.Azure.Management.Websites
  packages:
  - Microsoft.Azure.Management.Websites(1.3.2-preview)
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\n[Optional] Specifies interval in mimuntes to reevaluate\nReroutePercentage\n"
  example: []
  syntax:
    content: public int ? ChangeIntervalInMinutes { get; set; }
    content.vb: Public Property ChangeIntervalInMinutes As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.RampUpRule.MinReroutePercentage
  commentId: P:Microsoft.Azure.Management.WebSites.Models.RampUpRule.MinReroutePercentage
  id: MinReroutePercentage
  parent: Microsoft.Azure.Management.WebSites.Models.RampUpRule
  langs:
  - csharp
  - vb
  name: MinReroutePercentage
  fullName: Microsoft.Azure.Management.WebSites.Models.RampUpRule.MinReroutePercentage
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/RampUpRule.cs
      branch: 1e01bafcd8b025065a7c4afb930c63ba2e078288
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MinReroutePercentage
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/RampUpRule.cs
    startLine: 87
  assemblies:
  - Microsoft.Azure.Management.Websites
  packages:
  - Microsoft.Azure.Management.Websites(1.3.2-preview)
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\n[Optional] Specifies lower boundary above which ReroutePercentage\nwill stay.\n"
  example: []
  syntax:
    content: public double ? MinReroutePercentage { get; set; }
    content.vb: Public Property MinReroutePercentage As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.RampUpRule.MaxReroutePercentage
  commentId: P:Microsoft.Azure.Management.WebSites.Models.RampUpRule.MaxReroutePercentage
  id: MaxReroutePercentage
  parent: Microsoft.Azure.Management.WebSites.Models.RampUpRule
  langs:
  - csharp
  - vb
  name: MaxReroutePercentage
  fullName: Microsoft.Azure.Management.WebSites.Models.RampUpRule.MaxReroutePercentage
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/RampUpRule.cs
      branch: 1e01bafcd8b025065a7c4afb930c63ba2e078288
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MaxReroutePercentage
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/RampUpRule.cs
    startLine: 94
  assemblies:
  - Microsoft.Azure.Management.Websites
  packages:
  - Microsoft.Azure.Management.Websites(1.3.2-preview)
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\n[Optional] Specifies upper boundary below which ReroutePercentage\nwill stay.\n"
  example: []
  syntax:
    content: public double ? MaxReroutePercentage { get; set; }
    content.vb: Public Property MaxReroutePercentage As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.RampUpRule.ChangeDecisionCallbackUrl
  commentId: P:Microsoft.Azure.Management.WebSites.Models.RampUpRule.ChangeDecisionCallbackUrl
  id: ChangeDecisionCallbackUrl
  parent: Microsoft.Azure.Management.WebSites.Models.RampUpRule
  langs:
  - csharp
  - vb
  name: ChangeDecisionCallbackUrl
  fullName: Microsoft.Azure.Management.WebSites.Models.RampUpRule.ChangeDecisionCallbackUrl
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/RampUpRule.cs
      branch: 1e01bafcd8b025065a7c4afb930c63ba2e078288
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ChangeDecisionCallbackUrl
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/RampUpRule.cs
    startLine: 103
  assemblies:
  - Microsoft.Azure.Management.Websites
  packages:
  - Microsoft.Azure.Management.Websites(1.3.2-preview)
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nCustom decision algorithm can be provided in TiPCallback site\nextension which Url can be specified. See TiPCallback site\nextension for the scaffold and contracts.\nhttps://www.siteextensions.net/packages/TiPCallback/\n"
  example: []
  syntax:
    content: public string ChangeDecisionCallbackUrl { get; set; }
    content.vb: Public Property ChangeDecisionCallbackUrl As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.RampUpRule.Name
  commentId: P:Microsoft.Azure.Management.WebSites.Models.RampUpRule.Name
  id: Name
  parent: Microsoft.Azure.Management.WebSites.Models.RampUpRule
  langs:
  - csharp
  - vb
  name: Name
  fullName: Microsoft.Azure.Management.WebSites.Models.RampUpRule.Name
  type: Property
  source:
    remote:
      path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/RampUpRule.cs
      branch: 1e01bafcd8b025065a7c4afb930c63ba2e078288
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/ResourceManagement/WebSite/Microsoft.Azure.Management.Websites/Generated/Models/RampUpRule.cs
    startLine: 110
  assemblies:
  - Microsoft.Azure.Management.Websites
  packages:
  - Microsoft.Azure.Management.Websites(1.3.2-preview)
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\nName of the routing rule. The recommended name would be to point\nto the slot which will receive the traffic in the experiment.\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: Microsoft.Azure.Management.WebSites.Models
  fullName: Microsoft.Azure.Management.WebSites.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Double>
  fullName: System.Nullable<System.Double>
  fullname.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
