items:
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontend
  commentId: T:Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontend
  id: IWithPrivateFrontend
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
  children:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontend.DefinePrivateFrontend(System.String)
  langs:
  - csharp
  - vb
  name: IWithPrivateFrontend
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontend
  type: Interface
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/LoadBalancer/Definition/IDefinition.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IWithPrivateFrontend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/LoadBalancer/Definition/IDefinition.cs
    startLine: 362
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
  summary: "\nThe stage of an internal load balancer definition allowing to define one or more private frontends.\n"
  example: []
  syntax:
    content: 'public interface IWithPrivateFrontend : IWithNetworkSubnet'
    content.vb: >-
      Public Interface IWithPrivateFrontend
          Inherits IWithNetworkSubnet
  inheritedMembers:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithNetworkSubnet.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontend.DefinePrivateFrontend(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontend.DefinePrivateFrontend(System.String)
  id: DefinePrivateFrontend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontend
  langs:
  - csharp
  - vb
  name: DefinePrivateFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontend.DefinePrivateFrontend(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/LoadBalancer/Definition/IDefinition.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DefinePrivateFrontend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/LoadBalancer/Definition/IDefinition.cs
    startLine: 365
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
  syntax:
    content: IBlank<IWithPrivateFrontendOrBackend> DefinePrivateFrontend(string name)
    content.vb: Function DefinePrivateFrontend(name As String) As IBlank(Of IWithPrivateFrontendOrBackend)
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend}
references:
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithNetworkSubnet.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithNetworkSubnet
  isExternal: true
  name: WithExistingSubnet(INetwork, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithNetworkSubnet.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithNetworkSubnet.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
    name: WithExistingSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithNetworkSubnet.WithExistingSubnet
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithNetworkSubnet.WithExistingSubnet(Microsoft.Azure.Management.Fluent.Network.INetwork,System.String)
    name: WithExistingSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithNetworkSubnet.WithExistingSubnet
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithNetworkSubnet
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
  isExternal: false
  name: IWithNetworkSubnet
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithNetworkSubnet
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend}
  parent: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IBlank`1
  name: IBlank<IWithPrivateFrontendOrBackend>
  fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IBlank<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IBlank(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend)
  name.vb: IBlank(Of IWithPrivateFrontendOrBackend)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IBlank
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend
    name: IWithPrivateFrontendOrBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend
    name: IWithPrivateFrontendOrBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPrivateFrontendOrBackend
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IBlank`1
  parent: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition
  isExternal: false
  name: IBlank<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IBlank<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IBlank(Of ParentT)
  name.vb: IBlank(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IBlank
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.PrivateFrontend.Definition
