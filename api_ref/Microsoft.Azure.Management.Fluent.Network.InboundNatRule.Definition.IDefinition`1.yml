items:
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IDefinition`1
  commentId: T:Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IDefinition`1
  id: IDefinition`1
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition
  children: []
  langs:
  - csharp
  - vb
  name: IDefinition<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IDefinition<ParentT>
  type: Interface
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InboundNatRule/Definition/IDefinition.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IDefinition
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InboundNatRule/Definition/IDefinition.cs
    startLine: 28
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition
  syntax:
    content: 'public interface IDefinition<ParentT> : IBlank<ParentT>, IWithProtocol<ParentT>, IWithProtocol<IWithFrontend<IWithCreateAndInboundNatRule>, string>, IWithFrontend<ParentT>, IWithFrontend<IWithFrontendPort<IWithCreateAndInboundNatRule>>, IWithFrontendPort<ParentT>, IWithAttach<ParentT>, IInDefinition<ParentT>, IWithBackendPort<ParentT>, IWithBackendPort<IWithAttach<IWithCreateAndInboundNatRule>>, IWithFloatingIp<ParentT>, IWithFloatingIp<IWithAttach<IWithCreateAndInboundNatRule>>, IWithIdleTimeout<ParentT>'
    content.vb: >-
      Public Interface IDefinition(Of ParentT)
          Inherits IBlank(Of ParentT), IWithProtocol(Of ParentT), IWithFrontend(Of ParentT), IWithFrontendPort(Of ParentT), IWithAttach(Of ParentT)
    typeParameters:
    - id: ParentT
  inheritedMembers:
  - Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule},System.String}.WithProtocol(System.String)
  - Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}}.WithFrontend(System.String)
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort{{ParentT}}.WithFrontendPort(System.Int32)
  - Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}}.WithBackendPort(System.Int32)
  - Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}}.WithFloatingIpEnabled
  - Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}}.WithFloatingIpDisabled
  - Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}}.WithFloatingIp(System.Boolean)
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout{{ParentT}}.WithIdleTimeoutInMinutes(System.Int32)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IDefinition(Of ParentT)
  name.vb: IDefinition(Of ParentT)
references:
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule},System.String}.WithProtocol(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule},System.String}
  definition: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2.WithProtocol(`1)
  name: WithProtocol(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>, System.String>.WithProtocol(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule), System.String).WithProtocol(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>, System.String>.WithProtocol
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule), System.String).WithProtocol
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}}.WithFrontend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1.WithFrontend(System.String)
  name: WithFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>>.WithFrontend(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule)).WithFrontend(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1.WithFrontend(System.String)
    name: WithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>>.WithFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1.WithFrontend(System.String)
    name: WithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule)).WithFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort{{ParentT}}.WithFrontendPort(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort{{ParentT}}
  definition: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort`1.WithFrontendPort(System.Int32)
  name: WithFrontendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort<ParentT>.WithFrontendPort(System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort(Of ParentT).WithFrontendPort(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort`1.WithFrontendPort(System.Int32)
    name: WithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort<ParentT>.WithFrontendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort`1.WithFrontendPort(System.Int32)
    name: WithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort(Of ParentT).WithFrontendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}}.WithBackendPort(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1.WithBackendPort(System.Int32)
  name: WithBackendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>>.WithBackendPort(System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule)).WithBackendPort(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1.WithBackendPort(System.Int32)
    name: WithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>>.WithBackendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1.WithBackendPort(System.Int32)
    name: WithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule)).WithBackendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}}.WithFloatingIpEnabled
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIpEnabled
  name: WithFloatingIpEnabled()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>>.WithFloatingIpEnabled()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule)).WithFloatingIpEnabled()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIpEnabled
    name: WithFloatingIpEnabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>>.WithFloatingIpEnabled
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIpEnabled
    name: WithFloatingIpEnabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule)).WithFloatingIpEnabled
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}}.WithFloatingIpDisabled
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIpDisabled
  name: WithFloatingIpDisabled()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>>.WithFloatingIpDisabled()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule)).WithFloatingIpDisabled()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIpDisabled
    name: WithFloatingIpDisabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>>.WithFloatingIpDisabled
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIpDisabled
    name: WithFloatingIpDisabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule)).WithFloatingIpDisabled
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}}.WithFloatingIp(System.Boolean)
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIp(System.Boolean)
  name: WithFloatingIp(Boolean)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>>.WithFloatingIp(System.Boolean)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule)).WithFloatingIp(System.Boolean)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIp(System.Boolean)
    name: WithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>>.WithFloatingIp
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIp(System.Boolean)
    name: WithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule)).WithFloatingIp
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout{{ParentT}}.WithIdleTimeoutInMinutes(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout{{ParentT}}
  definition: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout`1.WithIdleTimeoutInMinutes(System.Int32)
  name: WithIdleTimeoutInMinutes(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout<ParentT>.WithIdleTimeoutInMinutes(System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout(Of ParentT).WithIdleTimeoutInMinutes(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout`1.WithIdleTimeoutInMinutes(System.Int32)
    name: WithIdleTimeoutInMinutes
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout<ParentT>.WithIdleTimeoutInMinutes
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout`1.WithIdleTimeoutInMinutes(System.Int32)
    name: WithIdleTimeoutInMinutes
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout(Of ParentT).WithIdleTimeoutInMinutes
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2.WithProtocol(`1)
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2
  isExternal: false
  name: WithProtocol(ProtocolT)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<ReturnT, ProtocolT>.WithProtocol(ProtocolT)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol(Of ReturnT, ProtocolT).WithProtocol(ProtocolT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<ReturnT, ProtocolT>.WithProtocol
  - name: (
    fullName: (
  - name: ProtocolT
    fullName: ProtocolT
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol(Of ReturnT, ProtocolT).WithProtocol
  - name: (
    fullName: (
  - name: ProtocolT
    fullName: ProtocolT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule},System.String}
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2
  name: IWithProtocol<IWithFrontend<IWithCreateAndInboundNatRule>, String>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>, System.String>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule), System.String)
  name.vb: IWithProtocol(Of IWithFrontend(Of IWithCreateAndInboundNatRule), String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
    name: IWithCreateAndInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
    name: IWithCreateAndInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1.WithFrontend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1
  isExternal: true
  name: WithFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend<ReturnT>.WithFrontend(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend(Of ReturnT).WithFrontend(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1.WithFrontend(System.String)
    name: WithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend<ReturnT>.WithFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1.WithFrontend(System.String)
    name: WithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend(Of ReturnT).WithFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}}
  parent: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1
  name: IWithFrontend<IWithFrontendPort<IWithCreateAndInboundNatRule>>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule))
  name.vb: IWithFrontend(Of IWithFrontendPort(Of IWithCreateAndInboundNatRule))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort`1
    name: IWithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
    name: IWithCreateAndInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort`1
    name: IWithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
    name: IWithCreateAndInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort`1.WithFrontendPort(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort`1
  isExternal: true
  name: WithFrontendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort<ParentT>.WithFrontendPort(System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort(Of ParentT).WithFrontendPort(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort`1.WithFrontendPort(System.Int32)
    name: WithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort<ParentT>.WithFrontendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort`1.WithFrontendPort(System.Int32)
    name: WithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort(Of ParentT).WithFrontendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort{{ParentT}}
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort`1
  name: IWithFrontendPort<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort(Of ParentT)
  name.vb: IWithFrontendPort(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort`1
    name: IWithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort`1
    name: IWithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1.WithBackendPort(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1
  isExternal: true
  name: WithBackendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort<ReturnT>.WithBackendPort(System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort(Of ReturnT).WithBackendPort(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1.WithBackendPort(System.Int32)
    name: WithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort<ReturnT>.WithBackendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1.WithBackendPort(System.Int32)
    name: WithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort(Of ReturnT).WithBackendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}}
  parent: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1
  name: IWithBackendPort<IWithAttach<IWithCreateAndInboundNatRule>>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule))
  name.vb: IWithBackendPort(Of IWithAttach(Of IWithCreateAndInboundNatRule))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
    name: IWithCreateAndInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
    name: IWithCreateAndInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIpEnabled
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1
  isExternal: false
  name: WithFloatingIpEnabled()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<ReturnT>.WithFloatingIpEnabled()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp(Of ReturnT).WithFloatingIpEnabled()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIpEnabled
    name: WithFloatingIpEnabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<ReturnT>.WithFloatingIpEnabled
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIpEnabled
    name: WithFloatingIpEnabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp(Of ReturnT).WithFloatingIpEnabled
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}}
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1
  name: IWithFloatingIp<IWithAttach<IWithCreateAndInboundNatRule>>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule))
  name.vb: IWithFloatingIp(Of IWithAttach(Of IWithCreateAndInboundNatRule))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1
    name: IWithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
    name: IWithCreateAndInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1
    name: IWithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
    name: IWithCreateAndInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIpDisabled
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1
  isExternal: false
  name: WithFloatingIpDisabled()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<ReturnT>.WithFloatingIpDisabled()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp(Of ReturnT).WithFloatingIpDisabled()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIpDisabled
    name: WithFloatingIpDisabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<ReturnT>.WithFloatingIpDisabled
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIpDisabled
    name: WithFloatingIpDisabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp(Of ReturnT).WithFloatingIpDisabled
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIp(System.Boolean)
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1
  isExternal: true
  name: WithFloatingIp(Boolean)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<ReturnT>.WithFloatingIp(System.Boolean)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp(Of ReturnT).WithFloatingIp(System.Boolean)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIp(System.Boolean)
    name: WithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<ReturnT>.WithFloatingIp
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIp(System.Boolean)
    name: WithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp(Of ReturnT).WithFloatingIp
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout`1.WithIdleTimeoutInMinutes(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout`1
  isExternal: true
  name: WithIdleTimeoutInMinutes(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout<ParentT>.WithIdleTimeoutInMinutes(System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout(Of ParentT).WithIdleTimeoutInMinutes(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout`1.WithIdleTimeoutInMinutes(System.Int32)
    name: WithIdleTimeoutInMinutes
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout<ParentT>.WithIdleTimeoutInMinutes
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout`1.WithIdleTimeoutInMinutes(System.Int32)
    name: WithIdleTimeoutInMinutes
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout(Of ParentT).WithIdleTimeoutInMinutes
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout{{ParentT}}
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout`1
  name: IWithIdleTimeout<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout(Of ParentT)
  name.vb: IWithIdleTimeout(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout`1
    name: IWithIdleTimeout
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout`1
    name: IWithIdleTimeout
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition
  isExternal: false
  name: IWithProtocol<ReturnT, ProtocolT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<ReturnT, ProtocolT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol(Of ReturnT, ProtocolT)
  name.vb: IWithProtocol(Of ReturnT, ProtocolT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: ', '
    fullName: ', '
  - name: ProtocolT
    fullName: ProtocolT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: ', '
    fullName: ', '
  - name: ProtocolT
    fullName: ProtocolT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition
  isExternal: false
  name: IWithFrontend<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend(Of ReturnT)
  name.vb: IWithFrontend(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort`1
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition
  isExternal: false
  name: IWithFrontendPort<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort(Of ParentT)
  name.vb: IWithFrontendPort(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort`1
    name: IWithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort`1
    name: IWithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition
  isExternal: false
  name: IWithBackendPort<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort(Of ReturnT)
  name.vb: IWithBackendPort(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition
  isExternal: false
  name: IWithFloatingIp<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp(Of ReturnT)
  name.vb: IWithFloatingIp(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1
    name: IWithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1
    name: IWithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout`1
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition
  isExternal: false
  name: IWithIdleTimeout<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout(Of ParentT)
  name.vb: IWithIdleTimeout(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout`1
    name: IWithIdleTimeout
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout`1
    name: IWithIdleTimeout
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
