### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountTypes
  commentId: T:Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountTypes
  id: StorageAccountTypes
  parent: Microsoft.WindowsAzure.Management.Storage.Models
  children:
  - Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountTypes.StandardGRS
  - Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountTypes.StandardLRS
  - Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountTypes.StandardRAGRS
  - Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountTypes.StandardZRS
  langs:
  - csharp
  - vb
  name: StorageAccountTypes
  nameWithType: StorageAccountTypes
  fullName: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountTypes
  type: Class
  source:
    remote:
      path: src/ServiceManagement/Storage/StorageManagement/Generated/Models/StorageAccountTypes.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: StorageAccountTypes
    path: src/ServiceManagement/Storage/StorageManagement/Generated/Models/StorageAccountTypes.cs
    startLine: 32
  assemblies:
  - Microsoft.WindowsAzure.Management.Storage
  namespace: Microsoft.WindowsAzure.Management.Storage.Models
  summary: "\nSpecifies whether the account supports locally-redundant storage,\ngeo-redundant storage, zone-redundant storage, or read access\ngeo-redundant storage. Possible values are:'Standard_LRS',\n'Standard_ZRS', 'Standard_GRS', and 'Standard_RAGRS'.\n"
  example: []
  syntax:
    content: public static class StorageAccountTypes
    content.vb: Public Module StorageAccountTypes
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountTypes.StandardLRS
  commentId: F:Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountTypes.StandardLRS
  id: StandardLRS
  parent: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountTypes
  langs:
  - csharp
  - vb
  name: StandardLRS
  nameWithType: StorageAccountTypes.StandardLRS
  fullName: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountTypes.StandardLRS
  type: Field
  source:
    remote:
      path: src/ServiceManagement/Storage/StorageManagement/Generated/Models/StorageAccountTypes.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: StandardLRS
    path: src/ServiceManagement/Storage/StorageManagement/Generated/Models/StorageAccountTypes.cs
    startLine: 34
  assemblies:
  - Microsoft.WindowsAzure.Management.Storage
  namespace: Microsoft.WindowsAzure.Management.Storage.Models
  syntax:
    content: public const string StandardLRS = "Standard_LRS"
    content.vb: Public Const StandardLRS As String = "Standard_LRS"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountTypes.StandardZRS
  commentId: F:Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountTypes.StandardZRS
  id: StandardZRS
  parent: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountTypes
  langs:
  - csharp
  - vb
  name: StandardZRS
  nameWithType: StorageAccountTypes.StandardZRS
  fullName: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountTypes.StandardZRS
  type: Field
  source:
    remote:
      path: src/ServiceManagement/Storage/StorageManagement/Generated/Models/StorageAccountTypes.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: StandardZRS
    path: src/ServiceManagement/Storage/StorageManagement/Generated/Models/StorageAccountTypes.cs
    startLine: 36
  assemblies:
  - Microsoft.WindowsAzure.Management.Storage
  namespace: Microsoft.WindowsAzure.Management.Storage.Models
  syntax:
    content: public const string StandardZRS = "Standard_ZRS"
    content.vb: Public Const StandardZRS As String = "Standard_ZRS"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountTypes.StandardGRS
  commentId: F:Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountTypes.StandardGRS
  id: StandardGRS
  parent: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountTypes
  langs:
  - csharp
  - vb
  name: StandardGRS
  nameWithType: StorageAccountTypes.StandardGRS
  fullName: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountTypes.StandardGRS
  type: Field
  source:
    remote:
      path: src/ServiceManagement/Storage/StorageManagement/Generated/Models/StorageAccountTypes.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: StandardGRS
    path: src/ServiceManagement/Storage/StorageManagement/Generated/Models/StorageAccountTypes.cs
    startLine: 38
  assemblies:
  - Microsoft.WindowsAzure.Management.Storage
  namespace: Microsoft.WindowsAzure.Management.Storage.Models
  syntax:
    content: public const string StandardGRS = "Standard_GRS"
    content.vb: Public Const StandardGRS As String = "Standard_GRS"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountTypes.StandardRAGRS
  commentId: F:Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountTypes.StandardRAGRS
  id: StandardRAGRS
  parent: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountTypes
  langs:
  - csharp
  - vb
  name: StandardRAGRS
  nameWithType: StorageAccountTypes.StandardRAGRS
  fullName: Microsoft.WindowsAzure.Management.Storage.Models.StorageAccountTypes.StandardRAGRS
  type: Field
  source:
    remote:
      path: src/ServiceManagement/Storage/StorageManagement/Generated/Models/StorageAccountTypes.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: StandardRAGRS
    path: src/ServiceManagement/Storage/StorageManagement/Generated/Models/StorageAccountTypes.cs
    startLine: 40
  assemblies:
  - Microsoft.WindowsAzure.Management.Storage
  namespace: Microsoft.WindowsAzure.Management.Storage.Models
  syntax:
    content: public const string StandardRAGRS = "Standard_RAGRS"
    content.vb: Public Const StandardRAGRS As String = "Standard_RAGRS"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Microsoft.WindowsAzure.Management.Storage.Models
  commentId: N:Microsoft.WindowsAzure.Management.Storage.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Storage.Models
  nameWithType: Microsoft.WindowsAzure.Management.Storage.Models
  fullName: Microsoft.WindowsAzure.Management.Storage.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
