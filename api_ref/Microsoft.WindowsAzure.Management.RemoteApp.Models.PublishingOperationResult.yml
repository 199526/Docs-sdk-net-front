### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.PublishingOperationResult
  commentId: T:Microsoft.WindowsAzure.Management.RemoteApp.Models.PublishingOperationResult
  id: PublishingOperationResult
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models
  children:
  - Microsoft.WindowsAzure.Management.RemoteApp.Models.PublishingOperationResult.#ctor
  - Microsoft.WindowsAzure.Management.RemoteApp.Models.PublishingOperationResult.ApplicationAlias
  - Microsoft.WindowsAzure.Management.RemoteApp.Models.PublishingOperationResult.ApplicationVirtualPath
  - Microsoft.WindowsAzure.Management.RemoteApp.Models.PublishingOperationResult.ErrorMessage
  - Microsoft.WindowsAzure.Management.RemoteApp.Models.PublishingOperationResult.Success
  langs:
  - csharp
  - vb
  name: PublishingOperationResult
  nameWithType: PublishingOperationResult
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.PublishingOperationResult
  type: Class
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/PublishingOperationResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PublishingOperationResult
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/PublishingOperationResult.cs
    startLine: 29
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp.Models
  summary: "\nDetails of publishing / unpublishing operation results\n"
  example: []
  syntax:
    content: public class PublishingOperationResult
    content.vb: Public Class PublishingOperationResult
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.PublishingOperationResult.ApplicationAlias
  commentId: P:Microsoft.WindowsAzure.Management.RemoteApp.Models.PublishingOperationResult.ApplicationAlias
  id: ApplicationAlias
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models.PublishingOperationResult
  langs:
  - csharp
  - vb
  name: ApplicationAlias
  nameWithType: PublishingOperationResult.ApplicationAlias
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.PublishingOperationResult.ApplicationAlias
  type: Property
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/PublishingOperationResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ApplicationAlias
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/PublishingOperationResult.cs
    startLine: 36
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp.Models
  summary: "\nOptional. The application alias.\n"
  example: []
  syntax:
    content: public string ApplicationAlias { get; set; }
    content.vb: Public Property ApplicationAlias As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.PublishingOperationResult.ApplicationVirtualPath
  commentId: P:Microsoft.WindowsAzure.Management.RemoteApp.Models.PublishingOperationResult.ApplicationVirtualPath
  id: ApplicationVirtualPath
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models.PublishingOperationResult
  langs:
  - csharp
  - vb
  name: ApplicationVirtualPath
  nameWithType: PublishingOperationResult.ApplicationVirtualPath
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.PublishingOperationResult.ApplicationVirtualPath
  type: Property
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/PublishingOperationResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ApplicationVirtualPath
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/PublishingOperationResult.cs
    startLine: 48
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp.Models
  summary: "\nOptional. The application virtual path with respect to local\nmachine.\n"
  example: []
  syntax:
    content: public string ApplicationVirtualPath { get; set; }
    content.vb: Public Property ApplicationVirtualPath As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.PublishingOperationResult.ErrorMessage
  commentId: P:Microsoft.WindowsAzure.Management.RemoteApp.Models.PublishingOperationResult.ErrorMessage
  id: ErrorMessage
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models.PublishingOperationResult
  langs:
  - csharp
  - vb
  name: ErrorMessage
  nameWithType: PublishingOperationResult.ErrorMessage
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.PublishingOperationResult.ErrorMessage
  type: Property
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/PublishingOperationResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ErrorMessage
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/PublishingOperationResult.cs
    startLine: 59
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp.Models
  summary: "\nOptional. Error message with respect to operation result.\n"
  example: []
  syntax:
    content: public string ErrorMessage { get; set; }
    content.vb: Public Property ErrorMessage As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.PublishingOperationResult.Success
  commentId: P:Microsoft.WindowsAzure.Management.RemoteApp.Models.PublishingOperationResult.Success
  id: Success
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models.PublishingOperationResult
  langs:
  - csharp
  - vb
  name: Success
  nameWithType: PublishingOperationResult.Success
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.PublishingOperationResult.Success
  type: Property
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/PublishingOperationResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Success
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/PublishingOperationResult.cs
    startLine: 70
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp.Models
  summary: "\nOptional. Whether operation was successful.\n"
  example: []
  syntax:
    content: public bool Success { get; set; }
    content.vb: Public Property Success As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.PublishingOperationResult.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.RemoteApp.Models.PublishingOperationResult.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models.PublishingOperationResult
  langs:
  - csharp
  - vb
  name: PublishingOperationResult()
  nameWithType: PublishingOperationResult.PublishingOperationResult()
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.PublishingOperationResult.PublishingOperationResult()
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/PublishingOperationResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/PublishingOperationResult.cs
    startLine: 79
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp.Models
  summary: "\nInitializes a new instance of the PublishingOperationResult class.\n"
  example: []
  syntax:
    content: public PublishingOperationResult()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models
  commentId: N:Microsoft.WindowsAzure.Management.RemoteApp.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.RemoteApp.Models
  nameWithType: Microsoft.WindowsAzure.Management.RemoteApp.Models
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
