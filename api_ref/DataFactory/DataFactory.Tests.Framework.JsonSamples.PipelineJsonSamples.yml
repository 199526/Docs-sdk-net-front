items:
- uid: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples
  commentId: T:DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples
  id: PipelineJsonSamples
  parent: DataFactory.Tests.Framework.JsonSamples
  children:
  - DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.ActivityTypePipeline
  - DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.AzureMLBatchExecutionPipelineWithAllParams
  - DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.AzureMLBatchExecutionPipelineWithNoParams
  - DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.AzureMLPipeline
  - DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.AzureMLPipelineWithWebParams
  - DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.AzureMLPipelineWithWebServiceInputs
  - DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.AzureMLUpdatePipeline
  - DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.CopyAzureDataLakeToAzureDataLake
  - DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.CopyAzureTableToSql
  - DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.CopyBlobToAzureDataLakeWithPerformanceParams
  - DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.CopyBlobToAzureQueue
  - DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.CopyBlobToFileSystemSink
  - DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.CopyCassandraToBlob
  - DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.CopyFileSystemSourceToFileSystemSink
  - DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.CopySqlDWToSqlDW
  - DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.CopySqlToBlob
  - DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.CopySqlToBlobWithCopyBehaviorProperty
  - DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.DataLakeAnalyticsActivityPipeline
  - DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.DotNetActivityPipeline
  - DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.HDInsightMapReducePipeline
  - DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.HDInsightPipeline
  - DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.HDInsightPipeline2
  - DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.MongoDbActivityPipeline
  - DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.PipelineOptionalHubName
  - DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.PipelineWithDataSet
  - DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.PiplieModeAndState
  - DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.StoredProcedureActivityPipeline
  - DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.StreamingWithExtendedProperties
  - DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.WebTableCopyActivityPipeline
  langs:
  - csharp
  - vb
  name: PipelineJsonSamples
  fullName: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples
  type: Class
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: PipelineJsonSamples
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
    startLine: 18
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework.JsonSamples
  syntax:
    content: 'public class PipelineJsonSamples : JsonSampleCollection<PipelineJsonSamples>, IEnumerable<object[]>, IEnumerable'
    content.vb: >-
      Public Class PipelineJsonSamples
          Inherits JsonSampleCollection(Of PipelineJsonSamples)
          Implements IEnumerable(Of Object()), IEnumerable
  inheritance:
  - System.Object
  - DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection{DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples}
  implements:
  - System.Collections.Generic.IEnumerable{System.Object[]}
  - System.Collections.IEnumerable
  inheritedMembers:
  - DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection{DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples}.GetEnumerator
  - DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection{DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples}.System#Collections#IEnumerable#GetEnumerator
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.ActivityTypePipeline
  commentId: F:DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.ActivityTypePipeline
  id: ActivityTypePipeline
  parent: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples
  langs:
  - csharp
  - vb
  name: ActivityTypePipeline
  fullName: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.ActivityTypePipeline
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: ActivityTypePipeline
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
    startLine: 27
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework.JsonSamples
  syntax:
    content: >-
      [JsonSample("Unregistered", new string[]{"properties.activities[0].typeProperties.AssemblyName", "properties.activities[0].typeProperties.SliceStart"})]

      public const string ActivityTypePipeline = "\n{\n    name: \"activityType pipeline name\",\n    properties: \n    {\n        description : \"activityType pipeline description\",\n        hubName: \"ActivityHub\",\n        activities:\n        [\n            {\n                name: \"activityName\",\n                description: \"activity description\", \n                type: \"MyCustomActivity\",\n                typeProperties: {                    \n                    AssemblyName: \"foo.dll\",\n                    SliceStart: \"$$Text.Format('{0:yyyyMMddHH-mm}', Time.AddMinutes(SliceStart, 0))\"\n                },\n                linkedServiceName: \"MyLinkedServiceName\",\n                scheduler:\n                {\n                    offset: \"01:00:00\",\n                    interval: 1,\n                    anchorDateTime: \"2014-02-27T12:00:00\",\n                    frequency: \"Hour\"\n                }\n            }\n        ],\n        start: \"2001-01-01\",\n        end: \"2001-01-01\",\n        isPaused: false,\n        runtimeInfo: \n        {\n            deploymentTime: \"2002-01-01\"\n        }\n    }\n}\n"
    content.vb: >-
      <JsonSample("Unregistered", New String() {"properties.activities[0].typeProperties.AssemblyName", "properties.activities[0].typeProperties.SliceStart"})>

      Public Const ActivityTypePipeline As String = vbLf & "{" & vbLf & "    name: ""activityType pipeline name""," & vbLf & "    properties: " & vbLf & "    {" & vbLf & "        description : ""activityType pipeline description""," & vbLf & "        hubName: ""ActivityHub""," & vbLf & "        activities:" & vbLf & "        [" & vbLf & "            {" & vbLf & "                name: ""activityName""," & vbLf & "                description: ""activity description"", " & vbLf & "                type: ""MyCustomActivity""," & vbLf & "                typeProperties: {                    " & vbLf & "                    AssemblyName: ""foo.dll""," & vbLf & "                    SliceStart: ""$$Text.Format('{0:yyyyMMddHH-mm}', Time.AddMinutes(SliceStart, 0))""" & vbLf & "                }," & vbLf & "                linkedServiceName: ""MyLinkedServiceName""," & vbLf & "                scheduler:" & vbLf & "                {" & vbLf & "                    offset: ""01:00:00""," & vbLf & "                    interval: 1," & vbLf & "                    anchorDateTime: ""2014-02-27T12:00:00""," & vbLf & "                    frequency: ""Hour""" & vbLf & "                }" & vbLf & "            }" & vbLf & "        ]," & vbLf & "        start: ""2001-01-01""," & vbLf & "        end: ""2001-01-01""," & vbLf & "        isPaused: false," & vbLf & "        runtimeInfo: " & vbLf & "        {" & vbLf & "            deploymentTime: ""2002-01-01""" & vbLf & "        }" & vbLf & "    }" & vbLf & "}" & vbLf
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.HDInsightPipeline
  commentId: F:DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.HDInsightPipeline
  id: HDInsightPipeline
  parent: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples
  langs:
  - csharp
  - vb
  name: HDInsightPipeline
  fullName: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.HDInsightPipeline
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: HDInsightPipeline
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
    startLine: 71
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework.JsonSamples
  syntax:
    content: >-
      [JsonSample(new string[]{"properties.activities[0].typeProperties.defines.PropertyBagPropertyName1"})]

      public const string HDInsightPipeline = "\n{\n    name: \"My HDInsight pipeline\",\n    properties: \n    {\n        description : \"HDInsight pipeline description\",\n        hubName: \"MyHDIHub\",\n        activities:\n        [\n            {\n                name: \"TestActivity\",\n                description: \"Test activity description\", \n                type: \"HDInsightHive\",\n                typeProperties:\n                {\n                    script: \"SELECT 1\",\n                    storageLinkedServices:\n                    [\n                        \"SA1\",\n                        \"SA2\"\n                    ],\n                    defines:\n                    {\n                        PropertyBagPropertyName1: \"PropertyBagValue1\"\n                    },\n                    getDebugInfo : \"Failure\"\n                },\n                linkedServiceName: \"MyLinkedServiceName\"\n            }\n        ],\n        pipelineMode: \"Scheduled\",\n        expirationTime: \"5.00:00:00\",\n        start: \"2001-01-01\",\n        end: \"2001-01-01\",\n        isPaused: false,\n        runtimeInfo: \n        {\n            deploymentTime: \"2002-01-01\"\n        }\n    }\n}\n"
    content.vb: >-
      <JsonSample(New String() {"properties.activities[0].typeProperties.defines.PropertyBagPropertyName1"})>

      Public Const HDInsightPipeline As String = vbLf & "{" & vbLf & "    name: ""My HDInsight pipeline""," & vbLf & "    properties: " & vbLf & "    {" & vbLf & "        description : ""HDInsight pipeline description""," & vbLf & "        hubName: ""MyHDIHub""," & vbLf & "        activities:" & vbLf & "        [" & vbLf & "            {" & vbLf & "                name: ""TestActivity""," & vbLf & "                description: ""Test activity description"", " & vbLf & "                type: ""HDInsightHive""," & vbLf & "                typeProperties:" & vbLf & "                {" & vbLf & "                    script: ""SELECT 1""," & vbLf & "                    storageLinkedServices:" & vbLf & "                    [" & vbLf & "                        ""SA1""," & vbLf & "                        ""SA2""" & vbLf & "                    ]," & vbLf & "                    defines:" & vbLf & "                    {" & vbLf & "                        PropertyBagPropertyName1: ""PropertyBagValue1""" & vbLf & "                    }," & vbLf & "                    getDebugInfo : ""Failure""" & vbLf & "                }," & vbLf & "                linkedServiceName: ""MyLinkedServiceName""" & vbLf & "            }" & vbLf & "        ]," & vbLf & "        pipelineMode: ""Scheduled""," & vbLf & "        expirationTime: ""5.00:00:00""," & vbLf & "        start: ""2001-01-01""," & vbLf & "        end: ""2001-01-01""," & vbLf & "        isPaused: false," & vbLf & "        runtimeInfo: " & vbLf & "        {" & vbLf & "            deploymentTime: ""2002-01-01""" & vbLf & "        }" & vbLf & "    }" & vbLf & "}" & vbLf
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.HDInsightPipeline2
  commentId: F:DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.HDInsightPipeline2
  id: HDInsightPipeline2
  parent: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples
  langs:
  - csharp
  - vb
  name: HDInsightPipeline2
  fullName: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.HDInsightPipeline2
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: HDInsightPipeline2
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
    startLine: 115
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework.JsonSamples
  syntax:
    content: >-
      [JsonSample]

      public const string HDInsightPipeline2 = "\n{\n    name: \"My HDInsight pipeline2\",\n    properties: \n    {\n        description : \"HDInsight pipeline description\",\n        hubName: \"MyHDIHub\",\n        activities:\n        [\n            {\n                name: \"TestActivity\",\n                description: \"Test activity description\", \n                type: \"HDInsightHive\",\n                typeProperties:\n                {\n                    scriptPath: \"scripts/script.hql\",\n                    scriptLinkedService: \"storageLinkedService1\",\n                    storageLinkedServices:\n                    [\n                        \"storageLinkedService2\"\n                    ]\n                },\n                linkedServiceName: \"MyLinkedServiceName\",\n                scheduler:\n                {\n                    offset: \"01:00:00\",\n                    interval: 1,\n                    anchorDateTime: \"2014-02-27T12:00:00\",\n                    frequency: \"Hour\"\n                }\n            }\n        ],\n        expirationTime: \"1.00:00:00\",\n        start: \"2001-01-01\",\n        end: \"2001-01-01\",\n        isPaused: false,\n        runtimeInfo: \n        {\n            deploymentTime: \"2002-01-01\"\n        }\n    }\n}\n"
    content.vb: >-
      <JsonSample>

      Public Const HDInsightPipeline2 As String = vbLf & "{" & vbLf & "    name: ""My HDInsight pipeline2""," & vbLf & "    properties: " & vbLf & "    {" & vbLf & "        description : ""HDInsight pipeline description""," & vbLf & "        hubName: ""MyHDIHub""," & vbLf & "        activities:" & vbLf & "        [" & vbLf & "            {" & vbLf & "                name: ""TestActivity""," & vbLf & "                description: ""Test activity description"", " & vbLf & "                type: ""HDInsightHive""," & vbLf & "                typeProperties:" & vbLf & "                {" & vbLf & "                    scriptPath: ""scripts/script.hql""," & vbLf & "                    scriptLinkedService: ""storageLinkedService1""," & vbLf & "                    storageLinkedServices:" & vbLf & "                    [" & vbLf & "                        ""storageLinkedService2""" & vbLf & "                    ]" & vbLf & "                }," & vbLf & "                linkedServiceName: ""MyLinkedServiceName""," & vbLf & "                scheduler:" & vbLf & "                {" & vbLf & "                    offset: ""01:00:00""," & vbLf & "                    interval: 1," & vbLf & "                    anchorDateTime: ""2014-02-27T12:00:00""," & vbLf & "                    frequency: ""Hour""" & vbLf & "                }" & vbLf & "            }" & vbLf & "        ]," & vbLf & "        expirationTime: ""1.00:00:00""," & vbLf & "        start: ""2001-01-01""," & vbLf & "        end: ""2001-01-01""," & vbLf & "        isPaused: false," & vbLf & "        runtimeInfo: " & vbLf & "        {" & vbLf & "            deploymentTime: ""2002-01-01""" & vbLf & "        }" & vbLf & "    }" & vbLf & "}" & vbLf
    return:
      type: System.String
  attributes:
  - type: DataFactory.Tests.Framework.JsonSampleAttribute
    ctor: DataFactory.Tests.Framework.JsonSampleAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.HDInsightMapReducePipeline
  commentId: F:DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.HDInsightMapReducePipeline
  id: HDInsightMapReducePipeline
  parent: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples
  langs:
  - csharp
  - vb
  name: HDInsightMapReducePipeline
  fullName: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.HDInsightMapReducePipeline
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: HDInsightMapReducePipeline
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
    startLine: 163
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework.JsonSamples
  syntax:
    content: >-
      [JsonSample(new string[]{"properties.activities[0].typeProperties.defines.PropertyBagPropertyName1"})]

      public const string HDInsightMapReducePipeline = "\n{\n    name: \"My HDInsight MapReduce pipeline\",\n    properties: \n    {\n        description : \"HDInsight pipeline description\",\n        hubName: \"MyHDIHub\",\n        activities:\n        [\n            {\n                name: \"MapReduceActivity\",\n                description: \"Test activity description\", \n                type: \"HDInsightMapReduce\",\n                typeProperties:\n                {\n                    className : \"MYClass\",\n                    jarFilePath: \"TestData/hadoop-mapreduce-examples.jar\",\n                    jarLinkedService: \"storageLinkedService1\",\n                    arguments:\n                    [\n                        \"wasb:///example/data/gutenberg/davinci.txt\"\n                    ],\n                    jarLibs:\n                    [\n                        \"TestData/test1.jar\"\n                    ],\n                    storageLinkedServices:\n                    [\n                        \"storageLinkedService2\"\n                    ], \n\t\t\t\t\tdefines:\n\t\t\t\t\t{\n                        PropertyBagPropertyName1: \"PropertyBagValue1\"\n\t\t\t\t\t}\n                },\n                linkedServiceName: \"MyLinkedServiceName\",\n                scheduler:\n                {\n                    offset: \"01:00:00\",\n                    interval: 1,\n                    anchorDateTime: \"2014-02-27T12:00:00\",\n                    frequency: \"Hour\"\n                }\n            }\n        ],\n        start: \"2001-01-01\",\n        end: \"2001-01-01\",\n        isPaused: false,\n        runtimeInfo: \n        {\n            deploymentTime: \"2002-01-01\",\n            pipelineState: \"Completed\"\n        }\n    }\n}\n"
    content.vb: >-
      <JsonSample(New String() {"properties.activities[0].typeProperties.defines.PropertyBagPropertyName1"})>

      Public Const HDInsightMapReducePipeline As String = vbLf & "{" & vbLf & "    name: ""My HDInsight MapReduce pipeline""," & vbLf & "    properties: " & vbLf & "    {" & vbLf & "        description : ""HDInsight pipeline description""," & vbLf & "        hubName: ""MyHDIHub""," & vbLf & "        activities:" & vbLf & "        [" & vbLf & "            {" & vbLf & "                name: ""MapReduceActivity""," & vbLf & "                description: ""Test activity description"", " & vbLf & "                type: ""HDInsightMapReduce""," & vbLf & "                typeProperties:" & vbLf & "                {" & vbLf & "                    className : ""MYClass""," & vbLf & "                    jarFilePath: ""TestData/hadoop-mapreduce-examples.jar""," & vbLf & "                    jarLinkedService: ""storageLinkedService1""," & vbLf & "                    arguments:" & vbLf & "                    [" & vbLf & "                        ""wasb:///example/data/gutenberg/davinci.txt""" & vbLf & "                    ]," & vbLf & "                    jarLibs:" & vbLf & "                    [" & vbLf & "                        ""TestData/test1.jar""" & vbLf & "                    ]," & vbLf & "                    storageLinkedServices:" & vbLf & "                    [" & vbLf & "                        ""storageLinkedService2""" & vbLf & "                    ], " & vbLf & vbTab & vbTab & vbTab & vbTab & vbTab & "defines:" & vbLf & vbTab & vbTab & vbTab & vbTab & vbTab & "{" & vbLf & "                        PropertyBagPropertyName1: ""PropertyBagValue1""" & vbLf & vbTab & vbTab & vbTab & vbTab & vbTab & "}" & vbLf & "                }," & vbLf & "                linkedServiceName: ""MyLinkedServiceName""," & vbLf & "                scheduler:" & vbLf & "                {" & vbLf & "                    offset: ""01:00:00""," & vbLf & "                    interval: 1," & vbLf & "                    anchorDateTime: ""2014-02-27T12:00:00""," & vbLf & "                    frequency: ""Hour""" & vbLf & "                }" & vbLf & "            }" & vbLf & "        ]," & vbLf & "        start: ""2001-01-01""," & vbLf & "        end: ""2001-01-01""," & vbLf & "        isPaused: false," & vbLf & "        runtimeInfo: " & vbLf & "        {" & vbLf & "            deploymentTime: ""2002-01-01""," & vbLf & "            pipelineState: ""Completed""" & vbLf & "        }" & vbLf & "    }" & vbLf & "}" & vbLf
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.CopySqlToBlob
  commentId: F:DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.CopySqlToBlob
  id: CopySqlToBlob
  parent: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples
  langs:
  - csharp
  - vb
  name: CopySqlToBlob
  fullName: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.CopySqlToBlob
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: CopySqlToBlob
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
    startLine: 221
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework.JsonSamples
  syntax:
    content: >-
      [JsonSample]

      public const string CopySqlToBlob = "\n{\n    name: \"MyPipelineName\",\n    properties: \n    {\n        description : \"Copy from SQL to Blob\",\n        hubName: \"MyHDIHub\",\n        activities:\n        [\n            {\n                type: \"Copy\",\n                name: \"TestActivity\",\n                description: \"Test activity description\", \n                typeProperties:\n                {\n                    source:\n                    {\n                        type: \"SqlSource\",\n                        sourceRetryCount: \"2\",\n                        sourceRetryWait: \"00:00:01\",\n                        sqlReaderQuery: \"$EncryptedString$MyEncryptedQuery\"\n                    },\n                    sink:\n                    {\n                        type: \"BlobSink\",\n                        blobWriterAddHeader: true,\n                        writeBatchSize: 1000000,\n                        writeBatchTimeout: \"01:00:00\"\n                    },\n                },\n                inputs: \n                [ \n                    {\n                        name: \"InputSqlDA\"\n                    }\n                ],\n                outputs: \n                [ \n                    {\n                        name: \"OutputBlobDA\"\n                    }\n                ],\n                linkedServiceName: \"MyLinkedServiceName\",\n                policy:\n                {\n                    concurrency: 3,\n                    executionPriorityOrder: \"NewestFirst\",\n                    retry: 3,\n                    timeout: \"00:00:05\",\n                    delay: \"00:00:01\"\n                },\n                scheduler:\n                {\n                    offset: \"01:00:00\",\n                    interval: 1,\n                    anchorDateTime: \"2014-02-27T12:00:00\",\n                    frequency: \"Hour\"\n                }\n            }\n        ]\n    }\n}\n"
    content.vb: >-
      <JsonSample>

      Public Const CopySqlToBlob As String = vbLf & "{" & vbLf & "    name: ""MyPipelineName""," & vbLf & "    properties: " & vbLf & "    {" & vbLf & "        description : ""Copy from SQL to Blob""," & vbLf & "        hubName: ""MyHDIHub""," & vbLf & "        activities:" & vbLf & "        [" & vbLf & "            {" & vbLf & "                type: ""Copy""," & vbLf & "                name: ""TestActivity""," & vbLf & "                description: ""Test activity description"", " & vbLf & "                typeProperties:" & vbLf & "                {" & vbLf & "                    source:" & vbLf & "                    {" & vbLf & "                        type: ""SqlSource""," & vbLf & "                        sourceRetryCount: ""2""," & vbLf & "                        sourceRetryWait: ""00:00:01""," & vbLf & "                        sqlReaderQuery: ""$EncryptedString$MyEncryptedQuery""" & vbLf & "                    }," & vbLf & "                    sink:" & vbLf & "                    {" & vbLf & "                        type: ""BlobSink""," & vbLf & "                        blobWriterAddHeader: true," & vbLf & "                        writeBatchSize: 1000000," & vbLf & "                        writeBatchTimeout: ""01:00:00""" & vbLf & "                    }," & vbLf & "                }," & vbLf & "                inputs: " & vbLf & "                [ " & vbLf & "                    {" & vbLf & "                        name: ""InputSqlDA""" & vbLf & "                    }" & vbLf & "                ]," & vbLf & "                outputs: " & vbLf & "                [ " & vbLf & "                    {" & vbLf & "                        name: ""OutputBlobDA""" & vbLf & "                    }" & vbLf & "                ]," & vbLf & "                linkedServiceName: ""MyLinkedServiceName""," & vbLf & "                policy:" & vbLf & "                {" & vbLf & "                    concurrency: 3," & vbLf & "                    executionPriorityOrder: ""NewestFirst""," & vbLf & "                    retry: 3," & vbLf & "                    timeout: ""00:00:05""," & vbLf & "                    delay: ""00:00:01""" & vbLf & "                }," & vbLf & "                scheduler:" & vbLf & "                {" & vbLf & "                    offset: ""01:00:00""," & vbLf & "                    interval: 1," & vbLf & "                    anchorDateTime: ""2014-02-27T12:00:00""," & vbLf & "                    frequency: ""Hour""" & vbLf & "                }" & vbLf & "            }" & vbLf & "        ]" & vbLf & "    }" & vbLf & "}" & vbLf
    return:
      type: System.String
  attributes:
  - type: DataFactory.Tests.Framework.JsonSampleAttribute
    ctor: DataFactory.Tests.Framework.JsonSampleAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.CopySqlDWToSqlDW
  commentId: F:DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.CopySqlDWToSqlDW
  id: CopySqlDWToSqlDW
  parent: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples
  langs:
  - csharp
  - vb
  name: CopySqlDWToSqlDW
  fullName: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.CopySqlDWToSqlDW
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: CopySqlDWToSqlDW
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
    startLine: 286
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework.JsonSamples
  syntax:
    content: >-
      [JsonSample]

      public const string CopySqlDWToSqlDW = "\n{\n    name: \"MyPipelineName\",\n    properties: \n    {\n        description : \"Copy from SQLDW to SQLDW\",\n        hubName: \"MyHDIHub\",\n        activities:\n        [\n            {\n                type: \"Copy\",\n                name: \"TestActivity\",\n                description: \"Test activity description\", \n                typeProperties:\n                {\n                    source:\n                    {\n                        type: \"SqlDWSource\",\n                        sourceRetryCount: \"2\",\n                        sourceRetryWait: \"00:00:01\",\n                        sqlReaderQuery: \"$EncryptedString$MyEncryptedQuery\",\n                        sqlReaderStoredProcedureName: \"$EncryptedString$MyEncryptedQuery\",\n                        storedProcedureParameters: {\n                            stringData: { value: \"str3\" },\n                            id: { value: \"$$Text.Format('{0:yyyy}', SliceStart)\", type: \"Int\"}\n                        }\n                    },\n                    sink:\n                    {\n                        type: \"SqlDWSink\",\n                        writeBatchSize: 1000000,\n                        writeBatchTimeout: \"01:00:00\",\n                        sqlWriterCleanupScript: \"Script\",\n                        sliceIdentifierColumnName: \"SliceID\",\n                        allowPolyBase: true,\n                        polyBaseSettings:\n                        {\n                            rejectType: \"percentage\",\n                            rejectValue: 10,\n                            rejectSampleValue: 100,\n                            useTypeDefault: true\n                        }\n                    },\n                    enableStaging: true,\n                    stagingSettings: \n                    {\n                        linkedServiceName: \"MyStagingBlob\",\n                        path: \"stagingcontainer/path\",\n                        enableCompression: true\n                    }\n                },\n                inputs: \n                [ \n                    {\n                        name: \"InputSqlDWDA\"\n                    }\n                ],\n                outputs: \n                [ \n                    {\n                        name: \"OutputSqlDWDA\"\n                    }\n                ],\n                linkedServiceName: \"MyLinkedServiceName\",\n                policy:\n                {\n                    concurrency: 3,\n                    executionPriorityOrder: \"NewestFirst\",\n                    retry: 3,\n                    timeout: \"00:00:05\",\n                    delay: \"00:00:01\"\n                }\n            }\n        ]\n    }\n}\n"
    content.vb: >-
      <JsonSample>

      Public Const CopySqlDWToSqlDW As String = vbLf & "{" & vbLf & "    name: ""MyPipelineName""," & vbLf & "    properties: " & vbLf & "    {" & vbLf & "        description : ""Copy from SQLDW to SQLDW""," & vbLf & "        hubName: ""MyHDIHub""," & vbLf & "        activities:" & vbLf & "        [" & vbLf & "            {" & vbLf & "                type: ""Copy""," & vbLf & "                name: ""TestActivity""," & vbLf & "                description: ""Test activity description"", " & vbLf & "                typeProperties:" & vbLf & "                {" & vbLf & "                    source:" & vbLf & "                    {" & vbLf & "                        type: ""SqlDWSource""," & vbLf & "                        sourceRetryCount: ""2""," & vbLf & "                        sourceRetryWait: ""00:00:01""," & vbLf & "                        sqlReaderQuery: ""$EncryptedString$MyEncryptedQuery""," & vbLf & "                        sqlReaderStoredProcedureName: ""$EncryptedString$MyEncryptedQuery""," & vbLf & "                        storedProcedureParameters: {" & vbLf & "                            stringData: { value: ""str3"" }," & vbLf & "                            id: { value: ""$$Text.Format('{0:yyyy}', SliceStart)"", type: ""Int""}" & vbLf & "                        }" & vbLf & "                    }," & vbLf & "                    sink:" & vbLf & "                    {" & vbLf & "                        type: ""SqlDWSink""," & vbLf & "                        writeBatchSize: 1000000," & vbLf & "                        writeBatchTimeout: ""01:00:00""," & vbLf & "                        sqlWriterCleanupScript: ""Script""," & vbLf & "                        sliceIdentifierColumnName: ""SliceID""," & vbLf & "                        allowPolyBase: true," & vbLf & "                        polyBaseSettings:" & vbLf & "                        {" & vbLf & "                            rejectType: ""percentage""," & vbLf & "                            rejectValue: 10," & vbLf & "                            rejectSampleValue: 100," & vbLf & "                            useTypeDefault: true" & vbLf & "                        }" & vbLf & "                    }," & vbLf & "                    enableStaging: true," & vbLf & "                    stagingSettings: " & vbLf & "                    {" & vbLf & "                        linkedServiceName: ""MyStagingBlob""," & vbLf & "                        path: ""stagingcontainer/path""," & vbLf & "                        enableCompression: true" & vbLf & "                    }" & vbLf & "                }," & vbLf & "                inputs: " & vbLf & "                [ " & vbLf & "                    {" & vbLf & "                        name: ""InputSqlDWDA""" & vbLf & "                    }" & vbLf & "                ]," & vbLf & "                outputs: " & vbLf & "                [ " & vbLf & "                    {" & vbLf & "                        name: ""OutputSqlDWDA""" & vbLf & "                    }" & vbLf & "                ]," & vbLf & "                linkedServiceName: ""MyLinkedServiceName""," & vbLf & "                policy:" & vbLf & "                {" & vbLf & "                    concurrency: 3," & vbLf & "                    executionPriorityOrder: ""NewestFirst""," & vbLf & "                    retry: 3," & vbLf & "                    timeout: ""00:00:05""," & vbLf & "                    delay: ""00:00:01""" & vbLf & "                }" & vbLf & "            }" & vbLf & "        ]" & vbLf & "    }" & vbLf & "}" & vbLf
    return:
      type: System.String
  attributes:
  - type: DataFactory.Tests.Framework.JsonSampleAttribute
    ctor: DataFactory.Tests.Framework.JsonSampleAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.CopyAzureTableToSql
  commentId: F:DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.CopyAzureTableToSql
  id: CopyAzureTableToSql
  parent: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples
  langs:
  - csharp
  - vb
  name: CopyAzureTableToSql
  fullName: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.CopyAzureTableToSql
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: CopyAzureTableToSql
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
    startLine: 365
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework.JsonSamples
  syntax:
    content: >-
      [JsonSample]

      public const string CopyAzureTableToSql = "\n{\n    name: \"MyPipelineName\",\n    properties:\n    {\n        description : \"Copy from Azure table to Sql\",\n        hubName: \"MyHDIHub\",\n        activities:\n        [\n            {\n                type: \"Copy\",\n                name: \"MyActivityName\",\n                typeProperties:\n                {\n                    source: \n                    {\n                        type: \"AzureTableSource\",\n                        sourceRetryCount: \"2\",\n                        sourceRetryWait: \"00:00:01\",\n                        azureTableSourceQuery: \"$$Text.Format('PartitionKey eq \\\\'ContosoSampleDevice\\\\' and RowKey eq \\\\'{0:yyyy-MM-ddTHH:mm:ss.fffffffZ}!{1:yyyy-MM-ddTHH:mm:ss.fffffffZ}\\\\'', Time.AddMinutes(SliceStart, -10), Time.AddMinutes(SliceStart, -9))\",\n                        azureTableSourceIgnoreTableNotFound: \"False\"\n                    },\n                    sink: \n                    {\n                        type: \"SqlSink\",\n                        writeBatchSize: 1000000,\n                        writeBatchTimeout: \"01:00:00\",\n                        sinkRetryCount: 3,\n                        sinkRetryWait: \"00:00:01\",\n                        sqlWriterStoredProcedureName: \"MySprocName\",\n                        sqlWriterTableType: \"MyTableType\"\n                    }\n                },\n                inputs: \n                [ \n                    {\n                        name: \"RawBlob\"\n                    }\n                ],\n                outputs: \n                [ \n                    {\n                        name: \"ProcessedSQL\"\n                    }\n                ],\n                linkedServiceName: \"MyLinkedServiceName\"\n            }\n        ]\n    }\n}\n"
    content.vb: >-
      <JsonSample>

      Public Const CopyAzureTableToSql As String = vbLf & "{" & vbLf & "    name: ""MyPipelineName""," & vbLf & "    properties:" & vbLf & "    {" & vbLf & "        description : ""Copy from Azure table to Sql""," & vbLf & "        hubName: ""MyHDIHub""," & vbLf & "        activities:" & vbLf & "        [" & vbLf & "            {" & vbLf & "                type: ""Copy""," & vbLf & "                name: ""MyActivityName""," & vbLf & "                typeProperties:" & vbLf & "                {" & vbLf & "                    source: " & vbLf & "                    {" & vbLf & "                        type: ""AzureTableSource""," & vbLf & "                        sourceRetryCount: ""2""," & vbLf & "                        sourceRetryWait: ""00:00:01""," & vbLf & "                        azureTableSourceQuery: ""$$Text.Format('PartitionKey eq \\'ContosoSampleDevice\\' and RowKey eq \\'{0:yyyy-MM-ddTHH:mm:ss.fffffffZ}!{1:yyyy-MM-ddTHH:mm:ss.fffffffZ}\\'', Time.AddMinutes(SliceStart, -10), Time.AddMinutes(SliceStart, -9))""," & vbLf & "                        azureTableSourceIgnoreTableNotFound: ""False""" & vbLf & "                    }," & vbLf & "                    sink: " & vbLf & "                    {" & vbLf & "                        type: ""SqlSink""," & vbLf & "                        writeBatchSize: 1000000," & vbLf & "                        writeBatchTimeout: ""01:00:00""," & vbLf & "                        sinkRetryCount: 3," & vbLf & "                        sinkRetryWait: ""00:00:01""," & vbLf & "                        sqlWriterStoredProcedureName: ""MySprocName""," & vbLf & "                        sqlWriterTableType: ""MyTableType""" & vbLf & "                    }" & vbLf & "                }," & vbLf & "                inputs: " & vbLf & "                [ " & vbLf & "                    {" & vbLf & "                        name: ""RawBlob""" & vbLf & "                    }" & vbLf & "                ]," & vbLf & "                outputs: " & vbLf & "                [ " & vbLf & "                    {" & vbLf & "                        name: ""ProcessedSQL""" & vbLf & "                    }" & vbLf & "                ]," & vbLf & "                linkedServiceName: ""MyLinkedServiceName""" & vbLf & "            }" & vbLf & "        ]" & vbLf & "    }" & vbLf & "}" & vbLf
    return:
      type: System.String
  attributes:
  - type: DataFactory.Tests.Framework.JsonSampleAttribute
    ctor: DataFactory.Tests.Framework.JsonSampleAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.CopyBlobToAzureQueue
  commentId: F:DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.CopyBlobToAzureQueue
  id: CopyBlobToAzureQueue
  parent: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples
  langs:
  - csharp
  - vb
  name: CopyBlobToAzureQueue
  fullName: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.CopyBlobToAzureQueue
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: CopyBlobToAzureQueue
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
    startLine: 418
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework.JsonSamples
  syntax:
    content: >-
      [JsonSample]

      public const string CopyBlobToAzureQueue = "\n{\n    name: \"MyPipelineName\",\n    properties:\n    {\n        description : \"Copy from Blob to Azure Queue\",\n        hubName: \"MyHDIHub\",\n        activities:\n        [\n            {\n                type: \"Copy\",\n                name: \"MyActivityName\",\n                typeProperties:\n                {\n                    source: \n                    {\n                        type: \"BlobSource\",\n                        sourceRetryCount: \"2\",\n                        sourceRetryWait: \"00:00:01\",\n                        treatEmptyAsNull: \"False\"\n                    },\n                    sink: \n                    {\n                        type: \"AzureQueueSink\",\n                        writeBatchSize: 1000000,\n                        writeBatchTimeout: \"01:00:00\",\n                        sinkRetryCount: 3,\n                        sinkRetryWait: \"00:00:01\"\n                    }\n                },\n                inputs: \n                [ \n                    {\n                        name: \"RawBlob\"\n                    }\n                ],\n                outputs: \n                [ \n                    {\n                        name: \"ProcessedBlob\"\n                    }\n                ],\n                linkedServiceName: \"MyLinkedServiceName\"\n            }\n        ]\n    }\n}\n"
    content.vb: >-
      <JsonSample>

      Public Const CopyBlobToAzureQueue As String = vbLf & "{" & vbLf & "    name: ""MyPipelineName""," & vbLf & "    properties:" & vbLf & "    {" & vbLf & "        description : ""Copy from Blob to Azure Queue""," & vbLf & "        hubName: ""MyHDIHub""," & vbLf & "        activities:" & vbLf & "        [" & vbLf & "            {" & vbLf & "                type: ""Copy""," & vbLf & "                name: ""MyActivityName""," & vbLf & "                typeProperties:" & vbLf & "                {" & vbLf & "                    source: " & vbLf & "                    {" & vbLf & "                        type: ""BlobSource""," & vbLf & "                        sourceRetryCount: ""2""," & vbLf & "                        sourceRetryWait: ""00:00:01""," & vbLf & "                        treatEmptyAsNull: ""False""" & vbLf & "                    }," & vbLf & "                    sink: " & vbLf & "                    {" & vbLf & "                        type: ""AzureQueueSink""," & vbLf & "                        writeBatchSize: 1000000," & vbLf & "                        writeBatchTimeout: ""01:00:00""," & vbLf & "                        sinkRetryCount: 3," & vbLf & "                        sinkRetryWait: ""00:00:01""" & vbLf & "                    }" & vbLf & "                }," & vbLf & "                inputs: " & vbLf & "                [ " & vbLf & "                    {" & vbLf & "                        name: ""RawBlob""" & vbLf & "                    }" & vbLf & "                ]," & vbLf & "                outputs: " & vbLf & "                [ " & vbLf & "                    {" & vbLf & "                        name: ""ProcessedBlob""" & vbLf & "                    }" & vbLf & "                ]," & vbLf & "                linkedServiceName: ""MyLinkedServiceName""" & vbLf & "            }" & vbLf & "        ]" & vbLf & "    }" & vbLf & "}" & vbLf
    return:
      type: System.String
  attributes:
  - type: DataFactory.Tests.Framework.JsonSampleAttribute
    ctor: DataFactory.Tests.Framework.JsonSampleAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.PipelineOptionalHubName
  commentId: F:DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.PipelineOptionalHubName
  id: PipelineOptionalHubName
  parent: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples
  langs:
  - csharp
  - vb
  name: PipelineOptionalHubName
  fullName: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.PipelineOptionalHubName
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: PipelineOptionalHubName
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
    startLine: 468
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework.JsonSamples
  syntax:
    content: >-
      [JsonSample]

      public const string PipelineOptionalHubName = "\n{\n    name: \"My HDInsight pipeline2\",\n    properties: \n    {\n        description : \"HDInsight pipeline description\",\n        activities:\n        [\n            {\n                name: \"TestActivity\",\n                description: \"Test activity description\", \n                type: \"HDInsightHive\",\n                typeProperties:\n                {\n                    scriptPath: \"scripts/script.hql\",\n                    scriptLinkedService: \"storageLinkedService1\",\n                    storageLinkedServices:\n                    [\n                        \"storageLinkedService2\"\n                    ]\n                },\n                linkedServiceName: \"MyLinkedServiceName\"\n            }\n        ],\n        start: \"2001-01-01\",\n        end: \"2001-01-01\",\n        isPaused: false,\n        runtimeInfo: \n        {\n            deploymentTime: \"2002-01-01\",\n            pipelineState: \"Running\"\n        }\n    }\n}\n"
    content.vb: >-
      <JsonSample>

      Public Const PipelineOptionalHubName As String = vbLf & "{" & vbLf & "    name: ""My HDInsight pipeline2""," & vbLf & "    properties: " & vbLf & "    {" & vbLf & "        description : ""HDInsight pipeline description""," & vbLf & "        activities:" & vbLf & "        [" & vbLf & "            {" & vbLf & "                name: ""TestActivity""," & vbLf & "                description: ""Test activity description"", " & vbLf & "                type: ""HDInsightHive""," & vbLf & "                typeProperties:" & vbLf & "                {" & vbLf & "                    scriptPath: ""scripts/script.hql""," & vbLf & "                    scriptLinkedService: ""storageLinkedService1""," & vbLf & "                    storageLinkedServices:" & vbLf & "                    [" & vbLf & "                        ""storageLinkedService2""" & vbLf & "                    ]" & vbLf & "                }," & vbLf & "                linkedServiceName: ""MyLinkedServiceName""" & vbLf & "            }" & vbLf & "        ]," & vbLf & "        start: ""2001-01-01""," & vbLf & "        end: ""2001-01-01""," & vbLf & "        isPaused: false," & vbLf & "        runtimeInfo: " & vbLf & "        {" & vbLf & "            deploymentTime: ""2002-01-01""," & vbLf & "            pipelineState: ""Running""" & vbLf & "        }" & vbLf & "    }" & vbLf & "}" & vbLf
    return:
      type: System.String
  attributes:
  - type: DataFactory.Tests.Framework.JsonSampleAttribute
    ctor: DataFactory.Tests.Framework.JsonSampleAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.DotNetActivityPipeline
  commentId: F:DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.DotNetActivityPipeline
  id: DotNetActivityPipeline
  parent: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples
  langs:
  - csharp
  - vb
  name: DotNetActivityPipeline
  fullName: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.DotNetActivityPipeline
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: DotNetActivityPipeline
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
    startLine: 511
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework.JsonSamples
  syntax:
    content: >-
      [JsonSample(new string[]{"properties.activities[0].typeProperties.extendedProperties.PropertyBagPropertyName1", "properties.activities[0].typeProperties.extendedProperties.propertyBagPropertyName2"})]

      public const string DotNetActivityPipeline = "\n{\n    name: \"DataPipeline_SamplePipeline\",\n    properties:\n    {\n        description : \"Sample Data Pipeline\",\n        hubName: \"MyHDIHub\",\n        activities:\n        [\n            {\n                name: \"DotNetActivity\",\n                inputs: [ {name: \"DA_WikipediaClickEvents\"} ],\n                outputs: [ {name: \"DA_CuratedWikiData\"} ],\n                linkedServiceName: \"HDILinkedService\",\n                type: \"DotNetActivity\",\n                typeProperties:\n                {\n\t\t\t        assemblyName: \"mycode.dll\",\n                    entryPoint: \"myclassname\",\n                    packageLinkedService: \"imagestoreLinkedService\",\n                    packageFile: \"images/assembly.zip\",\n                    extendedProperties:\n                    {\n                        PropertyBagPropertyName1: \"PropertyBagValue1\",\n                        propertyBagPropertyName2: \"PropertyBagValue2\"\n                    }\n                },\n                policy:\n                {\n                    concurrency: 1,\n                    executionPriorityOrder: \"NewestFirst\",\n                    retry: 2,\n                    timeout: \"01:00:00\"\n                },\n                scheduler:\n                {\n                    offset: \"01:00:00\",\n                    interval: 1,\n                    anchorDateTime: \"2014-02-27T12:00:00\",\n                    frequency: \"Hour\"\n                }\n            },\n        ]\n    }\n}\n"
    content.vb: >-
      <JsonSample(New String() {"properties.activities[0].typeProperties.extendedProperties.PropertyBagPropertyName1", "properties.activities[0].typeProperties.extendedProperties.propertyBagPropertyName2"})>

      Public Const DotNetActivityPipeline As String = vbLf & "{" & vbLf & "    name: ""DataPipeline_SamplePipeline""," & vbLf & "    properties:" & vbLf & "    {" & vbLf & "        description : ""Sample Data Pipeline""," & vbLf & "        hubName: ""MyHDIHub""," & vbLf & "        activities:" & vbLf & "        [" & vbLf & "            {" & vbLf & "                name: ""DotNetActivity""," & vbLf & "                inputs: [ {name: ""DA_WikipediaClickEvents""} ]," & vbLf & "                outputs: [ {name: ""DA_CuratedWikiData""} ]," & vbLf & "                linkedServiceName: ""HDILinkedService""," & vbLf & "                type: ""DotNetActivity""," & vbLf & "                typeProperties:" & vbLf & "                {" & vbLf & vbTab & vbTab & vbTab & "        assemblyName: ""mycode.dll""," & vbLf & "                    entryPoint: ""myclassname""," & vbLf & "                    packageLinkedService: ""imagestoreLinkedService""," & vbLf & "                    packageFile: ""images/assembly.zip""," & vbLf & "                    extendedProperties:" & vbLf & "                    {" & vbLf & "                        PropertyBagPropertyName1: ""PropertyBagValue1""," & vbLf & "                        propertyBagPropertyName2: ""PropertyBagValue2""" & vbLf & "                    }" & vbLf & "                }," & vbLf & "                policy:" & vbLf & "                {" & vbLf & "                    concurrency: 1," & vbLf & "                    executionPriorityOrder: ""NewestFirst""," & vbLf & "                    retry: 2," & vbLf & "                    timeout: ""01:00:00""" & vbLf & "                }," & vbLf & "                scheduler:" & vbLf & "                {" & vbLf & "                    offset: ""01:00:00""," & vbLf & "                    interval: 1," & vbLf & "                    anchorDateTime: ""2014-02-27T12:00:00""," & vbLf & "                    frequency: ""Hour""" & vbLf & "                }" & vbLf & "            }," & vbLf & "        ]" & vbLf & "    }" & vbLf & "}" & vbLf
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.AzureMLPipeline
  commentId: F:DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.AzureMLPipeline
  id: AzureMLPipeline
  parent: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples
  langs:
  - csharp
  - vb
  name: AzureMLPipeline
  fullName: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.AzureMLPipeline
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: AzureMLPipeline
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
    startLine: 559
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework.JsonSamples
  syntax:
    content: >-
      [JsonSample]

      public const string AzureMLPipeline = "\n{\n    name: \"My machine learning pipeline\",\n    properties: \n    {\n        description : \"ML pipeline description\",\n        hubName : \"someHub\",\n        activities:\n        [\n            {\n                name: \"MLActivity\",\n                description: \"Test activity description\", \n                type: \"AzureMLBatchScoring\",\n                typeProperties: { },\n                inputs: \n                [ \n                    {\n                        name: \"csvBlob\"\n                    }\n                ],\n                outputs: \n                [ \n                    {\n                        name: \"sasCopyBlob\"\n                    }\n                ],\n                linkedServiceName: \"mlLinkedService\",\n                policy:\n                {\n                    concurrency: 3,\n                    executionPriorityOrder: \"NewestFirst\",\n                    retry: 3,\n                        timeout: \"00:00:05\",\n                        delay: \"00:00:01\"\n                }\n            }\n        ]\n    }\n}\n"
    content.vb: >-
      <JsonSample>

      Public Const AzureMLPipeline As String = vbLf & "{" & vbLf & "    name: ""My machine learning pipeline""," & vbLf & "    properties: " & vbLf & "    {" & vbLf & "        description : ""ML pipeline description""," & vbLf & "        hubName : ""someHub""," & vbLf & "        activities:" & vbLf & "        [" & vbLf & "            {" & vbLf & "                name: ""MLActivity""," & vbLf & "                description: ""Test activity description"", " & vbLf & "                type: ""AzureMLBatchScoring""," & vbLf & "                typeProperties: { }," & vbLf & "                inputs: " & vbLf & "                [ " & vbLf & "                    {" & vbLf & "                        name: ""csvBlob""" & vbLf & "                    }" & vbLf & "                ]," & vbLf & "                outputs: " & vbLf & "                [ " & vbLf & "                    {" & vbLf & "                        name: ""sasCopyBlob""" & vbLf & "                    }" & vbLf & "                ]," & vbLf & "                linkedServiceName: ""mlLinkedService""," & vbLf & "                policy:" & vbLf & "                {" & vbLf & "                    concurrency: 3," & vbLf & "                    executionPriorityOrder: ""NewestFirst""," & vbLf & "                    retry: 3," & vbLf & "                        timeout: ""00:00:05""," & vbLf & "                        delay: ""00:00:01""" & vbLf & "                }" & vbLf & "            }" & vbLf & "        ]" & vbLf & "    }" & vbLf & "}" & vbLf
    return:
      type: System.String
  attributes:
  - type: DataFactory.Tests.Framework.JsonSampleAttribute
    ctor: DataFactory.Tests.Framework.JsonSampleAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.AzureMLPipelineWithWebServiceInputs
  commentId: F:DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.AzureMLPipelineWithWebServiceInputs
  id: AzureMLPipelineWithWebServiceInputs
  parent: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples
  langs:
  - csharp
  - vb
  name: AzureMLPipelineWithWebServiceInputs
  fullName: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.AzureMLPipelineWithWebServiceInputs
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: AzureMLPipelineWithWebServiceInputs
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
    startLine: 601
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework.JsonSamples
  syntax:
    content: >-
      [JsonSample]

      public const string AzureMLPipelineWithWebServiceInputs = "\n{\n    name: \"My machine learning pipeline WebServiceInputs\",\n    properties: \n    {\n        description : \"ML pipeline description\",\n        hubName : \"someHub\",\n        activities:\n        [\n            {\n                name: \"MLActivity\",\n                description: \"Test activity description\", \n                type: \"AzureMLBatchExecution\",\n                typeProperties: {\n                    webServiceInputs: {\n                        \"webServiceInput1\": \"csvBlob1\",\n                        \"webServiceInput2\": \"csvBlob2\"\n                    },\n                    webServiceOutputs: {\n                        \"webServiceOutput1\": \"sasCopyBlob\"\n                    }\n                },\n                inputs: \n                [ \n                    {\n                        name: \"csvBlob1\"\n                    },\n                    {   \n                        name: \"csvBLob2\"\n                    }\n                ],\n                outputs: \n                [ \n                    {\n                        name: \"sasCopyBlob\"\n                    }\n                ],\n                linkedServiceName: \"mlLinkedService\",\n                policy:\n                {\n                    concurrency: 3,\n                    executionPriorityOrder: \"NewestFirst\",\n                    retry: 3,\n                        timeout: \"00:00:05\",\n                        delay: \"00:00:01\"\n                }\n            }\n        ]\n    }\n}\n"
    content.vb: >-
      <JsonSample>

      Public Const AzureMLPipelineWithWebServiceInputs As String = vbLf & "{" & vbLf & "    name: ""My machine learning pipeline WebServiceInputs""," & vbLf & "    properties: " & vbLf & "    {" & vbLf & "        description : ""ML pipeline description""," & vbLf & "        hubName : ""someHub""," & vbLf & "        activities:" & vbLf & "        [" & vbLf & "            {" & vbLf & "                name: ""MLActivity""," & vbLf & "                description: ""Test activity description"", " & vbLf & "                type: ""AzureMLBatchExecution""," & vbLf & "                typeProperties: {" & vbLf & "                    webServiceInputs: {" & vbLf & "                        ""webServiceInput1"": ""csvBlob1""," & vbLf & "                        ""webServiceInput2"": ""csvBlob2""" & vbLf & "                    }," & vbLf & "                    webServiceOutputs: {" & vbLf & "                        ""webServiceOutput1"": ""sasCopyBlob""" & vbLf & "                    }" & vbLf & "                }," & vbLf & "                inputs: " & vbLf & "                [ " & vbLf & "                    {" & vbLf & "                        name: ""csvBlob1""" & vbLf & "                    }," & vbLf & "                    {   " & vbLf & "                        name: ""csvBLob2""" & vbLf & "                    }" & vbLf & "                ]," & vbLf & "                outputs: " & vbLf & "                [ " & vbLf & "                    {" & vbLf & "                        name: ""sasCopyBlob""" & vbLf & "                    }" & vbLf & "                ]," & vbLf & "                linkedServiceName: ""mlLinkedService""," & vbLf & "                policy:" & vbLf & "                {" & vbLf & "                    concurrency: 3," & vbLf & "                    executionPriorityOrder: ""NewestFirst""," & vbLf & "                    retry: 3," & vbLf & "                        timeout: ""00:00:05""," & vbLf & "                        delay: ""00:00:01""" & vbLf & "                }" & vbLf & "            }" & vbLf & "        ]" & vbLf & "    }" & vbLf & "}" & vbLf
    return:
      type: System.String
  attributes:
  - type: DataFactory.Tests.Framework.JsonSampleAttribute
    ctor: DataFactory.Tests.Framework.JsonSampleAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.AzureMLPipelineWithWebParams
  commentId: F:DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.AzureMLPipelineWithWebParams
  id: AzureMLPipelineWithWebParams
  parent: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples
  langs:
  - csharp
  - vb
  name: AzureMLPipelineWithWebParams
  fullName: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.AzureMLPipelineWithWebParams
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: AzureMLPipelineWithWebParams
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
    startLine: 659
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework.JsonSamples
  syntax:
    content: >-
      [JsonSample(new string[]{"properties.activities[0].typeProperties.webServiceParameters.oNe", "properties.activities[0].typeProperties.webServiceParameters.two NAME", "properties.activities[0].typeProperties.webServiceParameters.THREE"})]

      public const string AzureMLPipelineWithWebParams = "\n{\n    name: \"My machine learning pipeline2\",\n    properties: \n    {\n        description : \"ML pipeline description\",\n        hubName : \"someHub\",\n        activities:\n        [\n            {\n                name: \"MLActivity2\",\n                description: \"Test activity description\", \n                type: \"AzureMLBatchScoring\",\n                inputs: \n                [ \n                    {\n                        name: \"csvBlob\"\n                    }\n                ],\n                outputs: \n                [ \n                    {\n                        name: \"sasCopyBlob\"\n                    }\n                ],\n                linkedServiceName: \"mlLinkedService\",\n                policy:\n                {\n                    concurrency: 3,\n                    executionPriorityOrder: \"NewestFirst\",\n                    retry: 3,\n                    timeout: \"00:00:05\",\n                    delay: \"00:00:01\"\n                },\n                typeProperties:\n                {\n                    webServiceParameters:\n                    {\n                        \"oNe\": \"one value\",\n                        \"two NAME\": \"$$Text.Format('macro{0:yyyyMMddHH-mm}', Time.AddMinutes(SliceStart, 0))\", \n                        \"THREE\": \"HELLO\"\n                    }\n                }\n            }\n        ]\n    }\n}\n"
    content.vb: >-
      <JsonSample(New String() {"properties.activities[0].typeProperties.webServiceParameters.oNe", "properties.activities[0].typeProperties.webServiceParameters.two NAME", "properties.activities[0].typeProperties.webServiceParameters.THREE"})>

      Public Const AzureMLPipelineWithWebParams As String = vbLf & "{" & vbLf & "    name: ""My machine learning pipeline2""," & vbLf & "    properties: " & vbLf & "    {" & vbLf & "        description : ""ML pipeline description""," & vbLf & "        hubName : ""someHub""," & vbLf & "        activities:" & vbLf & "        [" & vbLf & "            {" & vbLf & "                name: ""MLActivity2""," & vbLf & "                description: ""Test activity description"", " & vbLf & "                type: ""AzureMLBatchScoring""," & vbLf & "                inputs: " & vbLf & "                [ " & vbLf & "                    {" & vbLf & "                        name: ""csvBlob""" & vbLf & "                    }" & vbLf & "                ]," & vbLf & "                outputs: " & vbLf & "                [ " & vbLf & "                    {" & vbLf & "                        name: ""sasCopyBlob""" & vbLf & "                    }" & vbLf & "                ]," & vbLf & "                linkedServiceName: ""mlLinkedService""," & vbLf & "                policy:" & vbLf & "                {" & vbLf & "                    concurrency: 3," & vbLf & "                    executionPriorityOrder: ""NewestFirst""," & vbLf & "                    retry: 3," & vbLf & "                    timeout: ""00:00:05""," & vbLf & "                    delay: ""00:00:01""" & vbLf & "                }," & vbLf & "                typeProperties:" & vbLf & "                {" & vbLf & "                    webServiceParameters:" & vbLf & "                    {" & vbLf & "                        ""oNe"": ""one value""," & vbLf & "                        ""two NAME"": ""$$Text.Format('macro{0:yyyyMMddHH-mm}', Time.AddMinutes(SliceStart, 0))"", " & vbLf & "                        ""THREE"": ""HELLO""" & vbLf & "                    }" & vbLf & "                }" & vbLf & "            }" & vbLf & "        ]" & vbLf & "    }" & vbLf & "}" & vbLf
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.AzureMLUpdatePipeline
  commentId: F:DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.AzureMLUpdatePipeline
  id: AzureMLUpdatePipeline
  parent: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples
  langs:
  - csharp
  - vb
  name: AzureMLUpdatePipeline
  fullName: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.AzureMLUpdatePipeline
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: AzureMLUpdatePipeline
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
    startLine: 709
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework.JsonSamples
  syntax:
    content: >-
      [JsonSample]

      public const string AzureMLUpdatePipeline = "\n{\n    name: \"My updatable machine learning pipeline\",\n    properties: \n    {\n        description : \"ML pipeline description\",\n        hubName : \"someHub\",\n        activities:\n        [\n            {\n                name: \"ML Update Resource Activity\",\n                description: \"Test activity description\", \n                type: \"AzureMLUpdateResource\",\n                typeProperties: {\n                    trainedModelDatasetName: \"retraining output dataset\",\n                    trainedModelName: \"Decision Tree trained model\"\n                },\n                inputs: \n                [ \n                    {\n                        name: \"retraining output dataset\"\n                    }\n                ],\n                outputs: \n                [ \n                    {\n                        name: \"some other output\"\n                    }\n                ],\n                linkedServiceName: \"mlLinkedService\",\n                policy:\n                {\n                    concurrency: 1,\n                    executionPriorityOrder: \"NewestFirst\",\n                    retry: 3,\n                        timeout: \"00:00:05\",\n                        delay: \"00:00:01\"\n                }\n            }\n        ]\n    }\n}\n"
    content.vb: >-
      <JsonSample>

      Public Const AzureMLUpdatePipeline As String = vbLf & "{" & vbLf & "    name: ""My updatable machine learning pipeline""," & vbLf & "    properties: " & vbLf & "    {" & vbLf & "        description : ""ML pipeline description""," & vbLf & "        hubName : ""someHub""," & vbLf & "        activities:" & vbLf & "        [" & vbLf & "            {" & vbLf & "                name: ""ML Update Resource Activity""," & vbLf & "                description: ""Test activity description"", " & vbLf & "                type: ""AzureMLUpdateResource""," & vbLf & "                typeProperties: {" & vbLf & "                    trainedModelDatasetName: ""retraining output dataset""," & vbLf & "                    trainedModelName: ""Decision Tree trained model""" & vbLf & "                }," & vbLf & "                inputs: " & vbLf & "                [ " & vbLf & "                    {" & vbLf & "                        name: ""retraining output dataset""" & vbLf & "                    }" & vbLf & "                ]," & vbLf & "                outputs: " & vbLf & "                [ " & vbLf & "                    {" & vbLf & "                        name: ""some other output""" & vbLf & "                    }" & vbLf & "                ]," & vbLf & "                linkedServiceName: ""mlLinkedService""," & vbLf & "                policy:" & vbLf & "                {" & vbLf & "                    concurrency: 1," & vbLf & "                    executionPriorityOrder: ""NewestFirst""," & vbLf & "                    retry: 3," & vbLf & "                        timeout: ""00:00:05""," & vbLf & "                        delay: ""00:00:01""" & vbLf & "                }" & vbLf & "            }" & vbLf & "        ]" & vbLf & "    }" & vbLf & "}" & vbLf
    return:
      type: System.String
  attributes:
  - type: DataFactory.Tests.Framework.JsonSampleAttribute
    ctor: DataFactory.Tests.Framework.JsonSampleAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.AzureMLBatchExecutionPipelineWithAllParams
  commentId: F:DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.AzureMLBatchExecutionPipelineWithAllParams
  id: AzureMLBatchExecutionPipelineWithAllParams
  parent: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples
  langs:
  - csharp
  - vb
  name: AzureMLBatchExecutionPipelineWithAllParams
  fullName: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.AzureMLBatchExecutionPipelineWithAllParams
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: AzureMLBatchExecutionPipelineWithAllParams
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
    startLine: 805
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework.JsonSamples
  syntax:
    content: >-
      [JsonSample(new string[]{"properties.activities[0].typeProperties.globalParameters.oNe", "properties.activities[0].typeProperties.globalParameters.two NAME", "properties.activities[0].typeProperties.webServiceOutputs.output 1", "properties.activities[0].typeProperties.webServiceInput"})]

      public const string AzureMLBatchExecutionPipelineWithAllParams = "\n{\n    name: \"My machine learning pipeline3\",\n    properties: \n    {\n        description : \"ML pipeline description\",\n        hubName : \"someHub\",\n        activities:\n        [\n            {\n                name: \"MLActivity3\",\n                description: \"Test activity description\", \n                type: \"AzureMLBatchExecution\",\n                inputs: \n                [ \n                    {\n                        name: \"csvBlob\",\n                        name: \"someOtherInput\"\n                    }\n                ],\n                outputs: \n                [ \n                    {\n                        name: \"someOtherOutput\",\n                        name: \"sasCopyBlob\"\n                    }\n                ],\n                linkedServiceName: \"mlLinkedService\",\n                policy:\n                {\n                    concurrency: 3,\n                    executionPriorityOrder: \"NewestFirst\",\n                    retry: 3,\n                    timeout: \"00:00:05\",\n                    delay: \"00:00:01\"\n                },\n                typeProperties:\n                {\n                    globalParameters:\n                    {\n                        \"oNe\": \"one value\",\n                        \"two NAME\": \"$$Text.Format('macro{0:yyyyMMddHH-mm}', Time.AddMinutes(SliceStart, 0))\"\n                    },\n                    webServiceOutputs:\n                    {\n                        \"output 1\": \"sasCopyBlob\",\n                    },\n                    webServiceInput: \"csvBlob\"\n                }\n            }\n        ]\n    }\n}\n"
    content.vb: >-
      <JsonSample(New String() {"properties.activities[0].typeProperties.globalParameters.oNe", "properties.activities[0].typeProperties.globalParameters.two NAME", "properties.activities[0].typeProperties.webServiceOutputs.output 1", "properties.activities[0].typeProperties.webServiceInput"})>

      Public Const AzureMLBatchExecutionPipelineWithAllParams As String = vbLf & "{" & vbLf & "    name: ""My machine learning pipeline3""," & vbLf & "    properties: " & vbLf & "    {" & vbLf & "        description : ""ML pipeline description""," & vbLf & "        hubName : ""someHub""," & vbLf & "        activities:" & vbLf & "        [" & vbLf & "            {" & vbLf & "                name: ""MLActivity3""," & vbLf & "                description: ""Test activity description"", " & vbLf & "                type: ""AzureMLBatchExecution""," & vbLf & "                inputs: " & vbLf & "                [ " & vbLf & "                    {" & vbLf & "                        name: ""csvBlob""," & vbLf & "                        name: ""someOtherInput""" & vbLf & "                    }" & vbLf & "                ]," & vbLf & "                outputs: " & vbLf & "                [ " & vbLf & "                    {" & vbLf & "                        name: ""someOtherOutput""," & vbLf & "                        name: ""sasCopyBlob""" & vbLf & "                    }" & vbLf & "                ]," & vbLf & "                linkedServiceName: ""mlLinkedService""," & vbLf & "                policy:" & vbLf & "                {" & vbLf & "                    concurrency: 3," & vbLf & "                    executionPriorityOrder: ""NewestFirst""," & vbLf & "                    retry: 3," & vbLf & "                    timeout: ""00:00:05""," & vbLf & "                    delay: ""00:00:01""" & vbLf & "                }," & vbLf & "                typeProperties:" & vbLf & "                {" & vbLf & "                    globalParameters:" & vbLf & "                    {" & vbLf & "                        ""oNe"": ""one value""," & vbLf & "                        ""two NAME"": ""$$Text.Format('macro{0:yyyyMMddHH-mm}', Time.AddMinutes(SliceStart, 0))""" & vbLf & "                    }," & vbLf & "                    webServiceOutputs:" & vbLf & "                    {" & vbLf & "                        ""output 1"": ""sasCopyBlob""," & vbLf & "                    }," & vbLf & "                    webServiceInput: ""csvBlob""" & vbLf & "                }" & vbLf & "            }" & vbLf & "        ]" & vbLf & "    }" & vbLf & "}" & vbLf
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.AzureMLBatchExecutionPipelineWithNoParams
  commentId: F:DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.AzureMLBatchExecutionPipelineWithNoParams
  id: AzureMLBatchExecutionPipelineWithNoParams
  parent: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples
  langs:
  - csharp
  - vb
  name: AzureMLBatchExecutionPipelineWithNoParams
  fullName: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.AzureMLBatchExecutionPipelineWithNoParams
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: AzureMLBatchExecutionPipelineWithNoParams
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
    startLine: 861
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework.JsonSamples
  syntax:
    content: >-
      [JsonSample]

      public const string AzureMLBatchExecutionPipelineWithNoParams = "\n{\n    name: \"My machine learning pipeline3\",\n    properties: \n    {\n        description : \"ML pipeline description\",\n        hubName : \"someHub\",\n        activities:\n        [\n            {\n                name: \"MLActivity3\",\n                description: \"Test activity description\", \n                type: \"AzureMLBatchExecution\",\n                inputs: \n                [ \n                    {\n                        name: \"csvBlob\",\n                        name: \"someOtherInput\"\n                    }\n                ],\n                outputs: \n                [ \n                    {\n                        name: \"someOtherOutput\",\n                        name: \"sasCopyBlob\"\n                    }\n                ],\n                linkedServiceName: \"mlLinkedService\",\n                policy:\n                {\n                    concurrency: 3,\n                    executionPriorityOrder: \"NewestFirst\",\n                    retry: 3,\n                    timeout: \"00:00:05\",\n                    delay: \"00:00:01\"\n                },\n            }\n        ]\n    }\n}\n"
    content.vb: >-
      <JsonSample>

      Public Const AzureMLBatchExecutionPipelineWithNoParams As String = vbLf & "{" & vbLf & "    name: ""My machine learning pipeline3""," & vbLf & "    properties: " & vbLf & "    {" & vbLf & "        description : ""ML pipeline description""," & vbLf & "        hubName : ""someHub""," & vbLf & "        activities:" & vbLf & "        [" & vbLf & "            {" & vbLf & "                name: ""MLActivity3""," & vbLf & "                description: ""Test activity description"", " & vbLf & "                type: ""AzureMLBatchExecution""," & vbLf & "                inputs: " & vbLf & "                [ " & vbLf & "                    {" & vbLf & "                        name: ""csvBlob""," & vbLf & "                        name: ""someOtherInput""" & vbLf & "                    }" & vbLf & "                ]," & vbLf & "                outputs: " & vbLf & "                [ " & vbLf & "                    {" & vbLf & "                        name: ""someOtherOutput""," & vbLf & "                        name: ""sasCopyBlob""" & vbLf & "                    }" & vbLf & "                ]," & vbLf & "                linkedServiceName: ""mlLinkedService""," & vbLf & "                policy:" & vbLf & "                {" & vbLf & "                    concurrency: 3," & vbLf & "                    executionPriorityOrder: ""NewestFirst""," & vbLf & "                    retry: 3," & vbLf & "                    timeout: ""00:00:05""," & vbLf & "                    delay: ""00:00:01""" & vbLf & "                }," & vbLf & "            }" & vbLf & "        ]" & vbLf & "    }" & vbLf & "}" & vbLf
    return:
      type: System.String
  attributes:
  - type: DataFactory.Tests.Framework.JsonSampleAttribute
    ctor: DataFactory.Tests.Framework.JsonSampleAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.StreamingWithExtendedProperties
  commentId: F:DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.StreamingWithExtendedProperties
  id: StreamingWithExtendedProperties
  parent: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples
  langs:
  - csharp
  - vb
  name: StreamingWithExtendedProperties
  fullName: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.StreamingWithExtendedProperties
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: StreamingWithExtendedProperties
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
    startLine: 909
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework.JsonSamples
  syntax:
    content: >-
      [JsonSample(new string[]{"properties.activities[0].typeproperties.defines.PropertyBagPropertyName1"})]

      public const string StreamingWithExtendedProperties = "\n{\n    name: \"HadoopStreamingPipeline\",\n    properties:\n    {\n        description : \"Hadoop Streaming Demo\",\n        activities:\n        [\n           {\n\t\t\t\tname: \"HadoopStreamingActivity\",\n\t\t\t\tdescription: \"HadoopStreamingActivity\",\n\t\t\t\ttype: \"HDInsightStreaming\",\n\t\t\t\toutputs: [ {\"name\": \"OutputTable\"} ],\n\t\t\t\tlinkedServiceName: \"HDInsightLinkedService\",\n\t\t\t\ttypeProperties:\n\t\t\t\t{\n\t\t\t\t\tmapper: \"cat.exe\",\n\t\t\t\t\treducer: \"wc.exe\",\n\t\t\t\t\tinput:  \"example/data/gutenberg/davinci.txt\",\n\t\t\t\t\toutput: \"example/data/StreamingOutput/wc.txt\",\n\t\t\t\t\tfilePaths: [ \n\t\t\t\t\t\t\"aureleu/example/apps/wc.exe\" , \n\t\t\t\t\t\t\"aureleu/example/apps/cat.exe\" \n\t\t\t\t\t],\n\t\t\t\t\tdefines:\n\t\t\t\t\t{\n                        PropertyBagPropertyName1: \"PropertyBagValue1\"\n\t\t\t\t\t},\n\t\t\t\t\tfileLinkedService : \"StorageLinkedService\",\n\t\t\t\t},\n\t\t\t\tpolicy:\n\t\t\t\t{\n\t\t\t\t\tconcurrency: 1,\n\t\t\t\t\tretry:\t1,\n\t\t\t\t\ttimeout: \"01:00:00\"\n\t\t\t\t}\n            }\n        ]\n    }\n}\n"
    content.vb: >-
      <JsonSample(New String() {"properties.activities[0].typeproperties.defines.PropertyBagPropertyName1"})>

      Public Const StreamingWithExtendedProperties As String = vbLf & "{" & vbLf & "    name: ""HadoopStreamingPipeline""," & vbLf & "    properties:" & vbLf & "    {" & vbLf & "        description : ""Hadoop Streaming Demo""," & vbLf & "        activities:" & vbLf & "        [" & vbLf & "           {" & vbLf & vbTab & vbTab & vbTab & vbTab & "name: ""HadoopStreamingActivity""," & vbLf & vbTab & vbTab & vbTab & vbTab & "description: ""HadoopStreamingActivity""," & vbLf & vbTab & vbTab & vbTab & vbTab & "type: ""HDInsightStreaming""," & vbLf & vbTab & vbTab & vbTab & vbTab & "outputs: [ {""name"": ""OutputTable""} ]," & vbLf & vbTab & vbTab & vbTab & vbTab & "linkedServiceName: ""HDInsightLinkedService""," & vbLf & vbTab & vbTab & vbTab & vbTab & "typeProperties:" & vbLf & vbTab & vbTab & vbTab & vbTab & "{" & vbLf & vbTab & vbTab & vbTab & vbTab & vbTab & "mapper: ""cat.exe""," & vbLf & vbTab & vbTab & vbTab & vbTab & vbTab & "reducer: ""wc.exe""," & vbLf & vbTab & vbTab & vbTab & vbTab & vbTab & "input:  ""example/data/gutenberg/davinci.txt""," & vbLf & vbTab & vbTab & vbTab & vbTab & vbTab & "output: ""example/data/StreamingOutput/wc.txt""," & vbLf & vbTab & vbTab & vbTab & vbTab & vbTab & "filePaths: [ " & vbLf & vbTab & vbTab & vbTab & vbTab & vbTab & vbTab & """aureleu/example/apps/wc.exe"" , " & vbLf & vbTab & vbTab & vbTab & vbTab & vbTab & vbTab & """aureleu/example/apps/cat.exe"" " & vbLf & vbTab & vbTab & vbTab & vbTab & vbTab & "]," & vbLf & vbTab & vbTab & vbTab & vbTab & vbTab & "defines:" & vbLf & vbTab & vbTab & vbTab & vbTab & vbTab & "{" & vbLf & "                        PropertyBagPropertyName1: ""PropertyBagValue1""" & vbLf & vbTab & vbTab & vbTab & vbTab & vbTab & "}," & vbLf & vbTab & vbTab & vbTab & vbTab & vbTab & "fileLinkedService : ""StorageLinkedService""," & vbLf & vbTab & vbTab & vbTab & vbTab & "}," & vbLf & vbTab & vbTab & vbTab & vbTab & "policy:" & vbLf & vbTab & vbTab & vbTab & vbTab & "{" & vbLf & vbTab & vbTab & vbTab & vbTab & vbTab & "concurrency: 1," & vbLf & vbTab & vbTab & vbTab & vbTab & vbTab & "retry:" & vbTab & "1," & vbLf & vbTab & vbTab & vbTab & vbTab & vbTab & "timeout: ""01:00:00""" & vbLf & vbTab & vbTab & vbTab & vbTab & "}" & vbLf & "            }" & vbLf & "        ]" & vbLf & "    }" & vbLf & "}" & vbLf
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.StoredProcedureActivityPipeline
  commentId: F:DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.StoredProcedureActivityPipeline
  id: StoredProcedureActivityPipeline
  parent: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples
  langs:
  - csharp
  - vb
  name: StoredProcedureActivityPipeline
  fullName: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.StoredProcedureActivityPipeline
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: StoredProcedureActivityPipeline
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
    startLine: 952
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework.JsonSamples
  syntax:
    content: >-
      [JsonSample]

      public const string StoredProcedureActivityPipeline = "\n{\n    name: \"MyPipelineName\",\n    properties:\n    {\n        description : \"Run a SQL stored procedure activity.\",\n        hubName: \"MyHDIHub\",\n        activities:\n        [\n            {\n                type: \"SqlServerStoredProcedure\",\n                name: \"MyProcActivity\",\n                typeProperties:\n                {\n                    storedProcedureName: \"StoredProcName\", \n                    storedProcedureParameters: {\n                        \"param1\": \"value1\",\n                        \"param2\": \"value2\",\n                        \"param3\": \"value3\",\n                    }\n                },\n                inputs: \n                [ \n                    {\n                        name: \"RawBlob\"\n                    }\n                ],\n                outputs: \n                [ \n                    {\n                        name: \"ProcessedBlob\"\n                    }\n                ],\n                linkedServiceName: \"MyLinkedServiceName\"\n            }\n        ]\n    }\n}\n"
    content.vb: >-
      <JsonSample>

      Public Const StoredProcedureActivityPipeline As String = vbLf & "{" & vbLf & "    name: ""MyPipelineName""," & vbLf & "    properties:" & vbLf & "    {" & vbLf & "        description : ""Run a SQL stored procedure activity.""," & vbLf & "        hubName: ""MyHDIHub""," & vbLf & "        activities:" & vbLf & "        [" & vbLf & "            {" & vbLf & "                type: ""SqlServerStoredProcedure""," & vbLf & "                name: ""MyProcActivity""," & vbLf & "                typeProperties:" & vbLf & "                {" & vbLf & "                    storedProcedureName: ""StoredProcName"", " & vbLf & "                    storedProcedureParameters: {" & vbLf & "                        ""param1"": ""value1""," & vbLf & "                        ""param2"": ""value2""," & vbLf & "                        ""param3"": ""value3""," & vbLf & "                    }" & vbLf & "                }," & vbLf & "                inputs: " & vbLf & "                [ " & vbLf & "                    {" & vbLf & "                        name: ""RawBlob""" & vbLf & "                    }" & vbLf & "                ]," & vbLf & "                outputs: " & vbLf & "                [ " & vbLf & "                    {" & vbLf & "                        name: ""ProcessedBlob""" & vbLf & "                    }" & vbLf & "                ]," & vbLf & "                linkedServiceName: ""MyLinkedServiceName""" & vbLf & "            }" & vbLf & "        ]" & vbLf & "    }" & vbLf & "}" & vbLf
    return:
      type: System.String
  attributes:
  - type: DataFactory.Tests.Framework.JsonSampleAttribute
    ctor: DataFactory.Tests.Framework.JsonSampleAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.CopySqlToBlobWithCopyBehaviorProperty
  commentId: F:DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.CopySqlToBlobWithCopyBehaviorProperty
  id: CopySqlToBlobWithCopyBehaviorProperty
  parent: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples
  langs:
  - csharp
  - vb
  name: CopySqlToBlobWithCopyBehaviorProperty
  fullName: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.CopySqlToBlobWithCopyBehaviorProperty
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: CopySqlToBlobWithCopyBehaviorProperty
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
    startLine: 992
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework.JsonSamples
  syntax:
    content: >-
      [JsonSample]

      public const string CopySqlToBlobWithCopyBehaviorProperty = "\n{\n    name: \"MyPipelineName\",\n    properties: \n    {\n        description : \"Copy from SQL to Blob with CopyBehavior property\",\n        hubName: \"MyHDIHub\",\n        activities:\n        [\n            {\n                type: \"Copy\",\n                name: \"TestActivity\",\n                description: \"Test activity description\", \n                typeProperties:\n                {\n                    source:\n                    {\n                        type: \"SqlSource\",\n                        sourceRetryCount: \"2\",\n                        sourceRetryWait: \"00:00:01\",\n                        sqlReaderQuery: \"$EncryptedString$MyEncryptedQuery\",\n                        sqlReaderStoredProcedureName: \"$EncryptedString$MyEncryptedQuery\",\n                        storedProcedureParameters: {\n                            stringData: { value: \"str3\" },\n                            id: { value: \"$$Text.Format('{0:yyyy}', SliceStart)\", type: \"Int\"}\n                        }\n                    },\n                    sink:\n                    {\n                        type: \"BlobSink\",\n                        blobWriterAddHeader: true,\n                        writeBatchSize: 1000000,\n                        writeBatchTimeout: \"01:00:00\",\n                        copyBehavior: \"PreserveHierarchy\"\n                    }\n                },\n                inputs: \n                [ \n                    {\n                        name: \"InputSqlDA\"\n                    }\n                ],\n                outputs: \n                [ \n                    {\n                        name: \"OutputBlobDA\"\n                    }\n                ],\n                linkedServiceName: \"MyLinkedServiceName\",\n                policy:\n                {\n                    concurrency: 3,\n                    executionPriorityOrder: \"NewestFirst\",\n                    retry: 3,\n                    timeout: \"00:00:05\",\n                    delay: \"00:00:01\"\n                }\n            }\n        ]\n    }\n}\n"
    content.vb: >-
      <JsonSample>

      Public Const CopySqlToBlobWithCopyBehaviorProperty As String = vbLf & "{" & vbLf & "    name: ""MyPipelineName""," & vbLf & "    properties: " & vbLf & "    {" & vbLf & "        description : ""Copy from SQL to Blob with CopyBehavior property""," & vbLf & "        hubName: ""MyHDIHub""," & vbLf & "        activities:" & vbLf & "        [" & vbLf & "            {" & vbLf & "                type: ""Copy""," & vbLf & "                name: ""TestActivity""," & vbLf & "                description: ""Test activity description"", " & vbLf & "                typeProperties:" & vbLf & "                {" & vbLf & "                    source:" & vbLf & "                    {" & vbLf & "                        type: ""SqlSource""," & vbLf & "                        sourceRetryCount: ""2""," & vbLf & "                        sourceRetryWait: ""00:00:01""," & vbLf & "                        sqlReaderQuery: ""$EncryptedString$MyEncryptedQuery""," & vbLf & "                        sqlReaderStoredProcedureName: ""$EncryptedString$MyEncryptedQuery""," & vbLf & "                        storedProcedureParameters: {" & vbLf & "                            stringData: { value: ""str3"" }," & vbLf & "                            id: { value: ""$$Text.Format('{0:yyyy}', SliceStart)"", type: ""Int""}" & vbLf & "                        }" & vbLf & "                    }," & vbLf & "                    sink:" & vbLf & "                    {" & vbLf & "                        type: ""BlobSink""," & vbLf & "                        blobWriterAddHeader: true," & vbLf & "                        writeBatchSize: 1000000," & vbLf & "                        writeBatchTimeout: ""01:00:00""," & vbLf & "                        copyBehavior: ""PreserveHierarchy""" & vbLf & "                    }" & vbLf & "                }," & vbLf & "                inputs: " & vbLf & "                [ " & vbLf & "                    {" & vbLf & "                        name: ""InputSqlDA""" & vbLf & "                    }" & vbLf & "                ]," & vbLf & "                outputs: " & vbLf & "                [ " & vbLf & "                    {" & vbLf & "                        name: ""OutputBlobDA""" & vbLf & "                    }" & vbLf & "                ]," & vbLf & "                linkedServiceName: ""MyLinkedServiceName""," & vbLf & "                policy:" & vbLf & "                {" & vbLf & "                    concurrency: 3," & vbLf & "                    executionPriorityOrder: ""NewestFirst""," & vbLf & "                    retry: 3," & vbLf & "                    timeout: ""00:00:05""," & vbLf & "                    delay: ""00:00:01""" & vbLf & "                }" & vbLf & "            }" & vbLf & "        ]" & vbLf & "    }" & vbLf & "}" & vbLf
    return:
      type: System.String
  attributes:
  - type: DataFactory.Tests.Framework.JsonSampleAttribute
    ctor: DataFactory.Tests.Framework.JsonSampleAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.CopyBlobToFileSystemSink
  commentId: F:DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.CopyBlobToFileSystemSink
  id: CopyBlobToFileSystemSink
  parent: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples
  langs:
  - csharp
  - vb
  name: CopyBlobToFileSystemSink
  fullName: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.CopyBlobToFileSystemSink
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: CopyBlobToFileSystemSink
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
    startLine: 1055
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework.JsonSamples
  syntax:
    content: >-
      [JsonSample]

      public const string CopyBlobToFileSystemSink = "\n{\n    name: \"MyPipelineName\",\n    properties:\n    {\n        description : \"Copy from Blob to File\",\n        hubName: \"MyHDIHub\",\n        activities:\n        [\n            {\n                type: \"Copy\",\n                name: \"MyActivityName\",\n                typeProperties:\n                {\n                    source: \n                    {\n                        type: \"BlobSource\",\n                        sourceRetryCount: \"2\",\n                        sourceRetryWait: \"00:00:01\",\n                        recursive: true,\n                        treatEmptyAsNull: \"False\"\n                    },\n                    sink: \n                    {\n                        type: \"FileSystemSink\",\n                        writeBatchSize: 1000000,\n                        writeBatchTimeout: \"01:00:00\",\n                        copyBehavior: \"FlattenHierarchy\"                                                \n                    }\n                },\n                inputs: \n                [ \n                    {\n                        name: \"RawBlob\"\n                    }\n                ],\n                outputs: \n                [ \n                    {\n                        name: \"ProcessedFileSink\"\n                    }\n                ],\n                linkedServiceName: \"MyLinkedServiceName\"\n            }\n        ]\n    }\n}\n"
    content.vb: >-
      <JsonSample>

      Public Const CopyBlobToFileSystemSink As String = vbLf & "{" & vbLf & "    name: ""MyPipelineName""," & vbLf & "    properties:" & vbLf & "    {" & vbLf & "        description : ""Copy from Blob to File""," & vbLf & "        hubName: ""MyHDIHub""," & vbLf & "        activities:" & vbLf & "        [" & vbLf & "            {" & vbLf & "                type: ""Copy""," & vbLf & "                name: ""MyActivityName""," & vbLf & "                typeProperties:" & vbLf & "                {" & vbLf & "                    source: " & vbLf & "                    {" & vbLf & "                        type: ""BlobSource""," & vbLf & "                        sourceRetryCount: ""2""," & vbLf & "                        sourceRetryWait: ""00:00:01""," & vbLf & "                        recursive: true," & vbLf & "                        treatEmptyAsNull: ""False""" & vbLf & "                    }," & vbLf & "                    sink: " & vbLf & "                    {" & vbLf & "                        type: ""FileSystemSink""," & vbLf & "                        writeBatchSize: 1000000," & vbLf & "                        writeBatchTimeout: ""01:00:00""," & vbLf & "                        copyBehavior: ""FlattenHierarchy""                                                " & vbLf & "                    }" & vbLf & "                }," & vbLf & "                inputs: " & vbLf & "                [ " & vbLf & "                    {" & vbLf & "                        name: ""RawBlob""" & vbLf & "                    }" & vbLf & "                ]," & vbLf & "                outputs: " & vbLf & "                [ " & vbLf & "                    {" & vbLf & "                        name: ""ProcessedFileSink""" & vbLf & "                    }" & vbLf & "                ]," & vbLf & "                linkedServiceName: ""MyLinkedServiceName""" & vbLf & "            }" & vbLf & "        ]" & vbLf & "    }" & vbLf & "}" & vbLf
    return:
      type: System.String
  attributes:
  - type: DataFactory.Tests.Framework.JsonSampleAttribute
    ctor: DataFactory.Tests.Framework.JsonSampleAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.CopyFileSystemSourceToFileSystemSink
  commentId: F:DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.CopyFileSystemSourceToFileSystemSink
  id: CopyFileSystemSourceToFileSystemSink
  parent: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples
  langs:
  - csharp
  - vb
  name: CopyFileSystemSourceToFileSystemSink
  fullName: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.CopyFileSystemSourceToFileSystemSink
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: CopyFileSystemSourceToFileSystemSink
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
    startLine: 1104
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework.JsonSamples
  syntax:
    content: >-
      [JsonSample]

      public const string CopyFileSystemSourceToFileSystemSink = "\n{\n    name: \"MyPipelineName\",\n    properties:\n    {\n        description : \"Copy from File to File\",\n        hubName: \"MyHDIHub\",\n        activities:\n        [\n            {\n                type: \"Copy\",\n                name: \"MyActivityName\",\n                typeProperties:\n                {\n                    source: \n                    {\n                        type: \"FileSystemSource\",\n                        recursive: false\n                    },\n                    sink: \n                    {\n                        type: \"FileSystemSink\",\n                        writeBatchSize: 1000000,\n                        writeBatchTimeout: \"01:00:00\",\n                        copyBehavior: \"FlattenHierarchy\"                                                \n                    }\n                },\n                inputs: \n                [ \n                    {\n                        name: \"RawFileSource\"\n                    }\n                ],\n                outputs: \n                [ \n                    {\n                        name: \"ProcessedFileSink\"\n                    }\n                ],\n                linkedServiceName: \"MyLinkedServiceName\"\n            }\n        ]\n    }\n}\n"
    content.vb: >-
      <JsonSample>

      Public Const CopyFileSystemSourceToFileSystemSink As String = vbLf & "{" & vbLf & "    name: ""MyPipelineName""," & vbLf & "    properties:" & vbLf & "    {" & vbLf & "        description : ""Copy from File to File""," & vbLf & "        hubName: ""MyHDIHub""," & vbLf & "        activities:" & vbLf & "        [" & vbLf & "            {" & vbLf & "                type: ""Copy""," & vbLf & "                name: ""MyActivityName""," & vbLf & "                typeProperties:" & vbLf & "                {" & vbLf & "                    source: " & vbLf & "                    {" & vbLf & "                        type: ""FileSystemSource""," & vbLf & "                        recursive: false" & vbLf & "                    }," & vbLf & "                    sink: " & vbLf & "                    {" & vbLf & "                        type: ""FileSystemSink""," & vbLf & "                        writeBatchSize: 1000000," & vbLf & "                        writeBatchTimeout: ""01:00:00""," & vbLf & "                        copyBehavior: ""FlattenHierarchy""                                                " & vbLf & "                    }" & vbLf & "                }," & vbLf & "                inputs: " & vbLf & "                [ " & vbLf & "                    {" & vbLf & "                        name: ""RawFileSource""" & vbLf & "                    }" & vbLf & "                ]," & vbLf & "                outputs: " & vbLf & "                [ " & vbLf & "                    {" & vbLf & "                        name: ""ProcessedFileSink""" & vbLf & "                    }" & vbLf & "                ]," & vbLf & "                linkedServiceName: ""MyLinkedServiceName""" & vbLf & "            }" & vbLf & "        ]" & vbLf & "    }" & vbLf & "}" & vbLf
    return:
      type: System.String
  attributes:
  - type: DataFactory.Tests.Framework.JsonSampleAttribute
    ctor: DataFactory.Tests.Framework.JsonSampleAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.CopyAzureDataLakeToAzureDataLake
  commentId: F:DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.CopyAzureDataLakeToAzureDataLake
  id: CopyAzureDataLakeToAzureDataLake
  parent: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples
  langs:
  - csharp
  - vb
  name: CopyAzureDataLakeToAzureDataLake
  fullName: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.CopyAzureDataLakeToAzureDataLake
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: CopyAzureDataLakeToAzureDataLake
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
    startLine: 1151
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework.JsonSamples
  syntax:
    content: >-
      [JsonSample]

      public const string CopyAzureDataLakeToAzureDataLake = "\n{\n    name: \"MyPipelineName\",\n    properties:\n    {\n        description : \"Copy from adl to adl\",\n        activities:\n        [\n            {\n                type: \"Copy\",\n                name: \"MyActivityName\",\n                typeProperties:\n                {\n                    source: \n                    {\n                        type: \"AzureDataLakeStoreSource\",\n                        recursive: true,\n                    },\n                    sink: \n                    {\n                        type: \"AzureDataLakeStoreSink\",\n                        writeBatchSize: 1000000,\n                        writeBatchTimeout: \"01:00:00\",\n                        copyBehavior: \"FlattenHierarchy\"\n                    }\n                },\n                inputs: \n                [ \n                    {\n                        name: \"adlIn\"\n                    }\n                ],\n                outputs: \n                [ \n                    {\n                        name: \"adlOut\"\n                    }\n                ],\n                linkedServiceName: \"MyLinkedServiceName\"\n            }\n        ]\n    }\n}\n"
    content.vb: >-
      <JsonSample>

      Public Const CopyAzureDataLakeToAzureDataLake As String = vbLf & "{" & vbLf & "    name: ""MyPipelineName""," & vbLf & "    properties:" & vbLf & "    {" & vbLf & "        description : ""Copy from adl to adl""," & vbLf & "        activities:" & vbLf & "        [" & vbLf & "            {" & vbLf & "                type: ""Copy""," & vbLf & "                name: ""MyActivityName""," & vbLf & "                typeProperties:" & vbLf & "                {" & vbLf & "                    source: " & vbLf & "                    {" & vbLf & "                        type: ""AzureDataLakeStoreSource""," & vbLf & "                        recursive: true," & vbLf & "                    }," & vbLf & "                    sink: " & vbLf & "                    {" & vbLf & "                        type: ""AzureDataLakeStoreSink""," & vbLf & "                        writeBatchSize: 1000000," & vbLf & "                        writeBatchTimeout: ""01:00:00""," & vbLf & "                        copyBehavior: ""FlattenHierarchy""" & vbLf & "                    }" & vbLf & "                }," & vbLf & "                inputs: " & vbLf & "                [ " & vbLf & "                    {" & vbLf & "                        name: ""adlIn""" & vbLf & "                    }" & vbLf & "                ]," & vbLf & "                outputs: " & vbLf & "                [ " & vbLf & "                    {" & vbLf & "                        name: ""adlOut""" & vbLf & "                    }" & vbLf & "                ]," & vbLf & "                linkedServiceName: ""MyLinkedServiceName""" & vbLf & "            }" & vbLf & "        ]" & vbLf & "    }" & vbLf & "}" & vbLf
    return:
      type: System.String
  attributes:
  - type: DataFactory.Tests.Framework.JsonSampleAttribute
    ctor: DataFactory.Tests.Framework.JsonSampleAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.DataLakeAnalyticsActivityPipeline
  commentId: F:DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.DataLakeAnalyticsActivityPipeline
  id: DataLakeAnalyticsActivityPipeline
  parent: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples
  langs:
  - csharp
  - vb
  name: DataLakeAnalyticsActivityPipeline
  fullName: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.DataLakeAnalyticsActivityPipeline
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: DataLakeAnalyticsActivityPipeline
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
    startLine: 1202
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework.JsonSamples
  syntax:
    content: >-
      [JsonSample(new string[]{"properties.activities[0].typeProperties.parameters.parameter1", "properties.activities[0].typeProperties.parameters.Parameter2"})]

      public const string DataLakeAnalyticsActivityPipeline = "\n{\n    name: \"MyPipelineName\",\n    properties:\n    {\n        description : \"Data Lake analytics pipeline\",\n        activities:\n        [\n            {\n                name: \"DataLakeAnalyticsUSQL\",\n                inputs: [ {name: \"DataLake-Table-In\"} ],\n                outputs: [ {name: \"DataLake-Table-Out\"} ],\n                linkedServiceName: \"Linked-ServiceDataLakeAnalytics\",\n                type: \"DataLakeAnalyticsU-SQL\",\n                typeProperties:\n                {\n                    script: \"CREATE DATABASE test;\",\n                    degreeOfParallelism: 3,\n                    priority: 100,\n                    parameters:\n                    {\n                        \"parameter1\": \"value1\",\n                        \"Parameter2\": \"Value2\"\n                    }\n                },\n                policy:\n                {\n                    concurrency: 1,\n                    executionPriorityOrder: \"NewestFirst\",\n                    retry: 2,\n                    timeout: \"01:00:00\"\n                }\n            }\n        ]\n    }\n}\n"
    content.vb: >-
      <JsonSample(New String() {"properties.activities[0].typeProperties.parameters.parameter1", "properties.activities[0].typeProperties.parameters.Parameter2"})>

      Public Const DataLakeAnalyticsActivityPipeline As String = vbLf & "{" & vbLf & "    name: ""MyPipelineName""," & vbLf & "    properties:" & vbLf & "    {" & vbLf & "        description : ""Data Lake analytics pipeline""," & vbLf & "        activities:" & vbLf & "        [" & vbLf & "            {" & vbLf & "                name: ""DataLakeAnalyticsUSQL""," & vbLf & "                inputs: [ {name: ""DataLake-Table-In""} ]," & vbLf & "                outputs: [ {name: ""DataLake-Table-Out""} ]," & vbLf & "                linkedServiceName: ""Linked-ServiceDataLakeAnalytics""," & vbLf & "                type: ""DataLakeAnalyticsU-SQL""," & vbLf & "                typeProperties:" & vbLf & "                {" & vbLf & "                    script: ""CREATE DATABASE test;""," & vbLf & "                    degreeOfParallelism: 3," & vbLf & "                    priority: 100," & vbLf & "                    parameters:" & vbLf & "                    {" & vbLf & "                        ""parameter1"": ""value1""," & vbLf & "                        ""Parameter2"": ""Value2""" & vbLf & "                    }" & vbLf & "                }," & vbLf & "                policy:" & vbLf & "                {" & vbLf & "                    concurrency: 1," & vbLf & "                    executionPriorityOrder: ""NewestFirst""," & vbLf & "                    retry: 2," & vbLf & "                    timeout: ""01:00:00""" & vbLf & "                }" & vbLf & "            }" & vbLf & "        ]" & vbLf & "    }" & vbLf & "}" & vbLf
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.PiplieModeAndState
  commentId: F:DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.PiplieModeAndState
  id: PiplieModeAndState
  parent: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples
  langs:
  - csharp
  - vb
  name: PiplieModeAndState
  fullName: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.PiplieModeAndState
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: PiplieModeAndState
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
    startLine: 1241
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework.JsonSamples
  syntax:
    content: >-
      [JsonSample]

      public const string PiplieModeAndState = "\n{\n    name: \"OneTime PipelineName\",\n    properties: \n    {\n        description : \"OneTime Copy from SQL to Blob\",\n        hubName: \"MyHDIHub\",\n        activities:\n        [\n            {\n                type: \"Copy\",\n                name: \"TestActivity\",\n                description: \"Test activity description\", \n                typeProperties:\n                {\n                    source:\n                    {\n                        type: \"SqlSource\",\n                        sourceRetryCount: \"2\",\n                        sourceRetryWait: \"00:00:01\",\n                        sqlReaderQuery: \"$EncryptedString$MyEncryptedQuery\"\n                    },\n                    sink:\n                    {\n                        type: \"BlobSink\",\n                        blobWriterAddHeader: true,\n                        writeBatchSize: 1000000,\n                        writeBatchTimeout: \"01:00:00\"\n                    },\n                },\n                inputs: \n                [ \n                    {\n                        name: \"InputSqlDA\"\n                    }\n                ],\n                outputs: \n                [ \n                    {\n                        name: \"OutputBlobDA\"\n                    }\n                ],\n                linkedServiceName: \"MyLinkedServiceName\",\n                policy:\n                {\n                    concurrency: 3,\n                    executionPriorityOrder: \"NewestFirst\",\n                    retry: 3,\n                    timeout: \"00:00:05\",\n                    delay: \"00:00:01\"\n                },\n                scheduler:\n                {\n                    offset: \"01:00:00\",\n                    interval: 1,\n                    anchorDateTime: \"2014-02-27T12:00:00\",\n                    frequency: \"Hour\"\n                }\n            }\n        ],\n        pipelineMode: \"OneTime\",\n        expirationTime: \"2.00:00:00\"\n    }\n}\n"
    content.vb: >-
      <JsonSample>

      Public Const PiplieModeAndState As String = vbLf & "{" & vbLf & "    name: ""OneTime PipelineName""," & vbLf & "    properties: " & vbLf & "    {" & vbLf & "        description : ""OneTime Copy from SQL to Blob""," & vbLf & "        hubName: ""MyHDIHub""," & vbLf & "        activities:" & vbLf & "        [" & vbLf & "            {" & vbLf & "                type: ""Copy""," & vbLf & "                name: ""TestActivity""," & vbLf & "                description: ""Test activity description"", " & vbLf & "                typeProperties:" & vbLf & "                {" & vbLf & "                    source:" & vbLf & "                    {" & vbLf & "                        type: ""SqlSource""," & vbLf & "                        sourceRetryCount: ""2""," & vbLf & "                        sourceRetryWait: ""00:00:01""," & vbLf & "                        sqlReaderQuery: ""$EncryptedString$MyEncryptedQuery""" & vbLf & "                    }," & vbLf & "                    sink:" & vbLf & "                    {" & vbLf & "                        type: ""BlobSink""," & vbLf & "                        blobWriterAddHeader: true," & vbLf & "                        writeBatchSize: 1000000," & vbLf & "                        writeBatchTimeout: ""01:00:00""" & vbLf & "                    }," & vbLf & "                }," & vbLf & "                inputs: " & vbLf & "                [ " & vbLf & "                    {" & vbLf & "                        name: ""InputSqlDA""" & vbLf & "                    }" & vbLf & "                ]," & vbLf & "                outputs: " & vbLf & "                [ " & vbLf & "                    {" & vbLf & "                        name: ""OutputBlobDA""" & vbLf & "                    }" & vbLf & "                ]," & vbLf & "                linkedServiceName: ""MyLinkedServiceName""," & vbLf & "                policy:" & vbLf & "                {" & vbLf & "                    concurrency: 3," & vbLf & "                    executionPriorityOrder: ""NewestFirst""," & vbLf & "                    retry: 3," & vbLf & "                    timeout: ""00:00:05""," & vbLf & "                    delay: ""00:00:01""" & vbLf & "                }," & vbLf & "                scheduler:" & vbLf & "                {" & vbLf & "                    offset: ""01:00:00""," & vbLf & "                    interval: 1," & vbLf & "                    anchorDateTime: ""2014-02-27T12:00:00""," & vbLf & "                    frequency: ""Hour""" & vbLf & "                }" & vbLf & "            }" & vbLf & "        ]," & vbLf & "        pipelineMode: ""OneTime""," & vbLf & "        expirationTime: ""2.00:00:00""" & vbLf & "    }" & vbLf & "}" & vbLf
    return:
      type: System.String
  attributes:
  - type: DataFactory.Tests.Framework.JsonSampleAttribute
    ctor: DataFactory.Tests.Framework.JsonSampleAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.PipelineWithDataSet
  commentId: F:DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.PipelineWithDataSet
  id: PipelineWithDataSet
  parent: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples
  langs:
  - csharp
  - vb
  name: PipelineWithDataSet
  fullName: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.PipelineWithDataSet
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: PipelineWithDataSet
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
    startLine: 1308
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework.JsonSamples
  syntax:
    content: >-
      [JsonSample]

      public const string PipelineWithDataSet = "\n{\n    name: \"Pipeline With Dataset\",\n    properties: \n    {\n        description : \"Copy from SQL to Blob\",\n        hubName: \"MyHDIHub\",\n        activities:\n        [\n            {\n                type: \"Copy\",\n                name: \"TestActivity\",\n                description: \"Test activity description\", \n                typeProperties:\n                {\n                    source:\n                    {\n                        type: \"SqlSource\",\n                        sourceRetryCount: \"2\",\n                        sourceRetryWait: \"00:00:01\",\n                        sqlReaderQuery: \"$EncryptedString$MyEncryptedQuery\"\n                    },\n                    sink:\n                    {\n                        type: \"BlobSink\",\n                        blobWriterAddHeader: true,\n                        writeBatchSize: 1000000,\n                        writeBatchTimeout: \"01:00:00\"\n                    },\n                },\n                inputs: \n                [ \n                    {\n                        name: \"InputSqlDA\"\n                    }\n                ],\n                outputs: \n                [ \n                    {\n                        name: \"OutputSqlDA\"\n                    }\n                ],\n                linkedServiceName: \"MyLinkedServiceName\",\n                policy:\n                {\n                    concurrency: 3,\n                    executionPriorityOrder: \"NewestFirst\",\n                    retry: 3,\n                    timeout: \"00:00:05\",\n                    delay: \"00:00:01\"\n                },\n                scheduler:\n                {\n                    offset: \"01:00:00\",\n                    interval: 1,\n                    anchorDateTime: \"2014-02-27T12:00:00\",\n                    frequency: \"Hour\"\n                }\n            }\n        ],\n        \"datasets\":[\n            {\n                name: \"InputSqlDA\",\n                properties:\n                {\n                    type: \"SqlServerTable\",\n                    linkedServiceName: \"MyLinkedServiceName\",\n                    typeProperties:\n                    {            \n                        tableName: \"$EncryptedString$MyEncryptedTableName\"            \n                    },\n                    availability:\n                    {\n                        offset: \"01:00:00\",\n                        interval: 1,\n                        anchorDateTime: \"2014-02-27T12:00:00\",\n                        frequency: \"Hour\"\n                    }\n                }\n            },\n            {\n                name: \"OutputSqlDA\",\n                properties:\n                {\n                    type: \"SqlServerTable\",\n                    linkedServiceName: \"MyLinkedServiceName\",\n                    typeProperties:\n                    {            \n                        tableName: \"$EncryptedString$MyEncryptedTableName\"            \n                    },\n                    availability:\n                    {\n                        offset: \"01:00:00\",\n                        interval: 1,\n                        anchorDateTime: \"2014-02-27T12:00:00\",\n                        frequency: \"Hour\"\n                    }\n                }\n            },\n        ]\n    }\n}"
    content.vb: >-
      <JsonSample>

      Public Const PipelineWithDataSet As String = vbLf & "{" & vbLf & "    name: ""Pipeline With Dataset""," & vbLf & "    properties: " & vbLf & "    {" & vbLf & "        description : ""Copy from SQL to Blob""," & vbLf & "        hubName: ""MyHDIHub""," & vbLf & "        activities:" & vbLf & "        [" & vbLf & "            {" & vbLf & "                type: ""Copy""," & vbLf & "                name: ""TestActivity""," & vbLf & "                description: ""Test activity description"", " & vbLf & "                typeProperties:" & vbLf & "                {" & vbLf & "                    source:" & vbLf & "                    {" & vbLf & "                        type: ""SqlSource""," & vbLf & "                        sourceRetryCount: ""2""," & vbLf & "                        sourceRetryWait: ""00:00:01""," & vbLf & "                        sqlReaderQuery: ""$EncryptedString$MyEncryptedQuery""" & vbLf & "                    }," & vbLf & "                    sink:" & vbLf & "                    {" & vbLf & "                        type: ""BlobSink""," & vbLf & "                        blobWriterAddHeader: true," & vbLf & "                        writeBatchSize: 1000000," & vbLf & "                        writeBatchTimeout: ""01:00:00""" & vbLf & "                    }," & vbLf & "                }," & vbLf & "                inputs: " & vbLf & "                [ " & vbLf & "                    {" & vbLf & "                        name: ""InputSqlDA""" & vbLf & "                    }" & vbLf & "                ]," & vbLf & "                outputs: " & vbLf & "                [ " & vbLf & "                    {" & vbLf & "                        name: ""OutputSqlDA""" & vbLf & "                    }" & vbLf & "                ]," & vbLf & "                linkedServiceName: ""MyLinkedServiceName""," & vbLf & "                policy:" & vbLf & "                {" & vbLf & "                    concurrency: 3," & vbLf & "                    executionPriorityOrder: ""NewestFirst""," & vbLf & "                    retry: 3," & vbLf & "                    timeout: ""00:00:05""," & vbLf & "                    delay: ""00:00:01""" & vbLf & "                }," & vbLf & "                scheduler:" & vbLf & "                {" & vbLf & "                    offset: ""01:00:00""," & vbLf & "                    interval: 1," & vbLf & "                    anchorDateTime: ""2014-02-27T12:00:00""," & vbLf & "                    frequency: ""Hour""" & vbLf & "                }" & vbLf & "            }" & vbLf & "        ]," & vbLf & "        ""datasets"":[" & vbLf & "            {" & vbLf & "                name: ""InputSqlDA""," & vbLf & "                properties:" & vbLf & "                {" & vbLf & "                    type: ""SqlServerTable""," & vbLf & "                    linkedServiceName: ""MyLinkedServiceName""," & vbLf & "                    typeProperties:" & vbLf & "                    {            " & vbLf & "                        tableName: ""$EncryptedString$MyEncryptedTableName""            " & vbLf & "                    }," & vbLf & "                    availability:" & vbLf & "                    {" & vbLf & "                        offset: ""01:00:00""," & vbLf & "                        interval: 1," & vbLf & "                        anchorDateTime: ""2014-02-27T12:00:00""," & vbLf & "                        frequency: ""Hour""" & vbLf & "                    }" & vbLf & "                }" & vbLf & "            }," & vbLf & "            {" & vbLf & "                name: ""OutputSqlDA""," & vbLf & "                properties:" & vbLf & "                {" & vbLf & "                    type: ""SqlServerTable""," & vbLf & "                    linkedServiceName: ""MyLinkedServiceName""," & vbLf & "                    typeProperties:" & vbLf & "                    {            " & vbLf & "                        tableName: ""$EncryptedString$MyEncryptedTableName""            " & vbLf & "                    }," & vbLf & "                    availability:" & vbLf & "                    {" & vbLf & "                        offset: ""01:00:00""," & vbLf & "                        interval: 1," & vbLf & "                        anchorDateTime: ""2014-02-27T12:00:00""," & vbLf & "                        frequency: ""Hour""" & vbLf & "                    }" & vbLf & "                }" & vbLf & "            }," & vbLf & "        ]" & vbLf & "    }" & vbLf & "}"
    return:
      type: System.String
  attributes:
  - type: DataFactory.Tests.Framework.JsonSampleAttribute
    ctor: DataFactory.Tests.Framework.JsonSampleAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.WebTableCopyActivityPipeline
  commentId: F:DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.WebTableCopyActivityPipeline
  id: WebTableCopyActivityPipeline
  parent: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples
  langs:
  - csharp
  - vb
  name: WebTableCopyActivityPipeline
  fullName: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.WebTableCopyActivityPipeline
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: WebTableCopyActivityPipeline
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
    startLine: 1411
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework.JsonSamples
  syntax:
    content: 'public const string WebTableCopyActivityPipeline = "\n{\n    name: \"MyPipelineName\",\n    properties:\n    {\n        description : \"Copy from Web Table.\",\n        activities:\n        [\n            {\n                name: \"WebTableCopy\",\n                inputs: [ {name: \"Input\"} ],\n                outputs: [ {name: \"Output\"} ],\n                type: \"Copy\",\n                typeProperties:\n                {\n                    source: \n                    {\n                        type: \"WebSource\"\n                    },\n                    sink: \n                    {\n                        type: \"AzureDataLakeStoreSink\",\n                        writeBatchSize: 1000000,\n                        writeBatchTimeout: \"01:00:00\",\n                        copyBehavior: \"FlattenHierarchy\"\n                    }\n                },\n                policy:\n                {\n                    concurrency: 1,\n                    executionPriorityOrder: \"NewestFirst\",\n                    retry: 2,\n                    timeout: \"01:00:00\"\n                }\n            }\n        ]\n    }\n}\n"'
    content.vb: 'Public Const WebTableCopyActivityPipeline As String = vbLf & "{" & vbLf & "    name: ""MyPipelineName""," & vbLf & "    properties:" & vbLf & "    {" & vbLf & "        description : ""Copy from Web Table.""," & vbLf & "        activities:" & vbLf & "        [" & vbLf & "            {" & vbLf & "                name: ""WebTableCopy""," & vbLf & "                inputs: [ {name: ""Input""} ]," & vbLf & "                outputs: [ {name: ""Output""} ]," & vbLf & "                type: ""Copy""," & vbLf & "                typeProperties:" & vbLf & "                {" & vbLf & "                    source: " & vbLf & "                    {" & vbLf & "                        type: ""WebSource""" & vbLf & "                    }," & vbLf & "                    sink: " & vbLf & "                    {" & vbLf & "                        type: ""AzureDataLakeStoreSink""," & vbLf & "                        writeBatchSize: 1000000," & vbLf & "                        writeBatchTimeout: ""01:00:00""," & vbLf & "                        copyBehavior: ""FlattenHierarchy""" & vbLf & "                    }" & vbLf & "                }," & vbLf & "                policy:" & vbLf & "                {" & vbLf & "                    concurrency: 1," & vbLf & "                    executionPriorityOrder: ""NewestFirst""," & vbLf & "                    retry: 2," & vbLf & "                    timeout: ""01:00:00""" & vbLf & "                }" & vbLf & "            }" & vbLf & "        ]" & vbLf & "    }" & vbLf & "}" & vbLf'
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.CopyBlobToAzureDataLakeWithPerformanceParams
  commentId: F:DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.CopyBlobToAzureDataLakeWithPerformanceParams
  id: CopyBlobToAzureDataLakeWithPerformanceParams
  parent: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples
  langs:
  - csharp
  - vb
  name: CopyBlobToAzureDataLakeWithPerformanceParams
  fullName: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.CopyBlobToAzureDataLakeWithPerformanceParams
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: CopyBlobToAzureDataLakeWithPerformanceParams
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
    startLine: 1452
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework.JsonSamples
  syntax:
    content: >-
      [JsonSample]

      public const string CopyBlobToAzureDataLakeWithPerformanceParams = "\n{\n    name: \"MyPipelineName\",\n    properties:\n    {\n        description : \"Copy from Blob to AzureDataLake with performance parameters\",\n        activities:\n        [\n            {\n                type: \"Copy\",\n                name: \"MyActivityName\",\n                typeProperties:\n                {\n                    source:\n                    {\n                        type: \"BlobSource\",\n                    },\n                     sink:\n                    {\n                        type: \"AzureDataLakeStoreSink\",\n                        writeBatchSize: 1000000,\n                        writeBatchTimeout: \"01:00:00\",\n                    },\n                    \"parallelCopies\": 5,\n                    \"cloudDataMovementUnits\": 4\n                },\n                inputs:\n                [ \n                    {\n                        name: \"RawBlob\"\n                    }\n                ],\n                outputs:\n                [ \n                    {\n                        name: \"AdlOut\"\n                    }\n                ],\n                linkedServiceName: \"MyLinkedServiceName\"\n            }\n        ]\n    }\n}\n"
    content.vb: >-
      <JsonSample>

      Public Const CopyBlobToAzureDataLakeWithPerformanceParams As String = vbLf & "{" & vbLf & "    name: ""MyPipelineName""," & vbLf & "    properties:" & vbLf & "    {" & vbLf & "        description : ""Copy from Blob to AzureDataLake with performance parameters""," & vbLf & "        activities:" & vbLf & "        [" & vbLf & "            {" & vbLf & "                type: ""Copy""," & vbLf & "                name: ""MyActivityName""," & vbLf & "                typeProperties:" & vbLf & "                {" & vbLf & "                    source:" & vbLf & "                    {" & vbLf & "                        type: ""BlobSource""," & vbLf & "                    }," & vbLf & "                     sink:" & vbLf & "                    {" & vbLf & "                        type: ""AzureDataLakeStoreSink""," & vbLf & "                        writeBatchSize: 1000000," & vbLf & "                        writeBatchTimeout: ""01:00:00""," & vbLf & "                    }," & vbLf & "                    ""parallelCopies"": 5," & vbLf & "                    ""cloudDataMovementUnits"": 4" & vbLf & "                }," & vbLf & "                inputs:" & vbLf & "                [ " & vbLf & "                    {" & vbLf & "                        name: ""RawBlob""" & vbLf & "                    }" & vbLf & "                ]," & vbLf & "                outputs:" & vbLf & "                [ " & vbLf & "                    {" & vbLf & "                        name: ""AdlOut""" & vbLf & "                    }" & vbLf & "                ]," & vbLf & "                linkedServiceName: ""MyLinkedServiceName""" & vbLf & "            }" & vbLf & "        ]" & vbLf & "    }" & vbLf & "}" & vbLf
    return:
      type: System.String
  attributes:
  - type: DataFactory.Tests.Framework.JsonSampleAttribute
    ctor: DataFactory.Tests.Framework.JsonSampleAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.CopyCassandraToBlob
  commentId: F:DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.CopyCassandraToBlob
  id: CopyCassandraToBlob
  parent: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples
  langs:
  - csharp
  - vb
  name: CopyCassandraToBlob
  fullName: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.CopyCassandraToBlob
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: CopyCassandraToBlob
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
    startLine: 1497
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework.JsonSamples
  syntax:
    content: >-
      [JsonSample]

      public const string CopyCassandraToBlob = "{\n    \"name\": \"Pipeline\",\n    \"properties\": {\n        \"hubName\": \"hdis-jsontest-hub\",\n        \"activities\": [\n            {\n                \"name\": \"blob-table\",\n                \"type\": \"Copy\",\n                \"inputs\": [\n                    {\n                        \"name\": \"Table-Blob\"\n                    }\n                ],\n                \"outputs\": [\n                    {\n                        \"name\": \"Table-AzureTable\"\n                    }\n                ],\n                \"policy\": {\n                    \"concurrency\": 1\n                },\n                \"typeProperties\": {\n                    \"source\": {\n                        \"type\": \"CassandraSource\",\n                        \"query\":\"select * from table\",\n                        \"consistencyLevel\":\"TWO\",\n                    },\n                    \"sink\": {\n                        \"type\": \"AzureTableSink\",\n                        \"writeBatchSize\": 1000000,\n                        \"azureTableDefaultPartitionKeyValue\": \"defaultParitionKey\"\n                    },\n                }\n            }\n        ]\n    }\n}\n"
    content.vb: >-
      <JsonSample>

      Public Const CopyCassandraToBlob As String = "{" & vbLf & "    ""name"": ""Pipeline""," & vbLf & "    ""properties"": {" & vbLf & "        ""hubName"": ""hdis-jsontest-hub""," & vbLf & "        ""activities"": [" & vbLf & "            {" & vbLf & "                ""name"": ""blob-table""," & vbLf & "                ""type"": ""Copy""," & vbLf & "                ""inputs"": [" & vbLf & "                    {" & vbLf & "                        ""name"": ""Table-Blob""" & vbLf & "                    }" & vbLf & "                ]," & vbLf & "                ""outputs"": [" & vbLf & "                    {" & vbLf & "                        ""name"": ""Table-AzureTable""" & vbLf & "                    }" & vbLf & "                ]," & vbLf & "                ""policy"": {" & vbLf & "                    ""concurrency"": 1" & vbLf & "                }," & vbLf & "                ""typeProperties"": {" & vbLf & "                    ""source"": {" & vbLf & "                        ""type"": ""CassandraSource""," & vbLf & "                        ""query"":""select * from table""," & vbLf & "                        ""consistencyLevel"":""TWO""," & vbLf & "                    }," & vbLf & "                    ""sink"": {" & vbLf & "                        ""type"": ""AzureTableSink""," & vbLf & "                        ""writeBatchSize"": 1000000," & vbLf & "                        ""azureTableDefaultPartitionKeyValue"": ""defaultParitionKey""" & vbLf & "                    }," & vbLf & "                }" & vbLf & "            }" & vbLf & "        ]" & vbLf & "    }" & vbLf & "}" & vbLf
    return:
      type: System.String
  attributes:
  - type: DataFactory.Tests.Framework.JsonSampleAttribute
    ctor: DataFactory.Tests.Framework.JsonSampleAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.MongoDbActivityPipeline
  commentId: F:DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.MongoDbActivityPipeline
  id: MongoDbActivityPipeline
  parent: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples
  langs:
  - csharp
  - vb
  name: MongoDbActivityPipeline
  fullName: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples.MongoDbActivityPipeline
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: MongoDbActivityPipeline
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/PipelineJsonSamples.cs
    startLine: 1537
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework.JsonSamples
  syntax:
    content: >-
      [JsonSample]

      public const string MongoDbActivityPipeline = "{\n    \"name\": \"Pipeline\",\n    \"properties\": {\n        \"hubName\": \"hdis-jsontest-hub\",\n        \"activities\": [\n            {\n                \"name\": \"blob-table\",\n                \"type\": \"Copy\",\n                \"inputs\": [\n                    {\n                        \"name\": \"Table-MongoDb\"\n                    }\n                ],\n                \"outputs\": [\n                    {\n                        \"name\": \"Table-AzureTable\"\n                    }\n                ],\n                \"policy\": {\n                    \"concurrency\": 1\n                },\n                \"typeProperties\": {\n                    \"source\": {\n                        \"type\": \"MongoDbSource\",\n                        \"query\":\"fake query\"\n                    },\n                    \"sink\": {\n                        \"type\": \"AzureTableSink\",\n                        \"writeBatchSize\": 1000000,\n                        \"azureTableDefaultPartitionKeyValue\": \"defaultParitionKey\"\n                    },\n                }\n            }\n        ]\n    }\n}\n"
    content.vb: >-
      <JsonSample>

      Public Const MongoDbActivityPipeline As String = "{" & vbLf & "    ""name"": ""Pipeline""," & vbLf & "    ""properties"": {" & vbLf & "        ""hubName"": ""hdis-jsontest-hub""," & vbLf & "        ""activities"": [" & vbLf & "            {" & vbLf & "                ""name"": ""blob-table""," & vbLf & "                ""type"": ""Copy""," & vbLf & "                ""inputs"": [" & vbLf & "                    {" & vbLf & "                        ""name"": ""Table-MongoDb""" & vbLf & "                    }" & vbLf & "                ]," & vbLf & "                ""outputs"": [" & vbLf & "                    {" & vbLf & "                        ""name"": ""Table-AzureTable""" & vbLf & "                    }" & vbLf & "                ]," & vbLf & "                ""policy"": {" & vbLf & "                    ""concurrency"": 1" & vbLf & "                }," & vbLf & "                ""typeProperties"": {" & vbLf & "                    ""source"": {" & vbLf & "                        ""type"": ""MongoDbSource""," & vbLf & "                        ""query"":""fake query""" & vbLf & "                    }," & vbLf & "                    ""sink"": {" & vbLf & "                        ""type"": ""AzureTableSink""," & vbLf & "                        ""writeBatchSize"": 1000000," & vbLf & "                        ""azureTableDefaultPartitionKeyValue"": ""defaultParitionKey""" & vbLf & "                    }," & vbLf & "                }" & vbLf & "            }" & vbLf & "        ]" & vbLf & "    }" & vbLf & "}" & vbLf
    return:
      type: System.String
  attributes:
  - type: DataFactory.Tests.Framework.JsonSampleAttribute
    ctor: DataFactory.Tests.Framework.JsonSampleAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: DataFactory.Tests.Framework.JsonSamples
  isExternal: false
  name: DataFactory.Tests.Framework.JsonSamples
  fullName: DataFactory.Tests.Framework.JsonSamples
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection{DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples}
  parent: DataFactory.Tests.Framework.JsonSamples
  definition: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1
  name: JsonSampleCollection<PipelineJsonSamples>
  fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection<DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples>
  fullname.vb: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection(Of DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples)
  name.vb: JsonSampleCollection(Of PipelineJsonSamples)
  spec.csharp:
  - uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1
    name: JsonSampleCollection
    fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection
  - name: <
    fullName: <
  - uid: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples
    name: PipelineJsonSamples
    fullName: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1
    name: JsonSampleCollection
    fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection
  - name: '(Of '
    fullName: '(Of '
  - uid: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples
    name: PipelineJsonSamples
    fullName: DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Object[]}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Object[]>
  fullName: System.Collections.Generic.IEnumerable<System.Object[]>
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Object())
  name.vb: IEnumerable(Of Object())
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection{DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples}.GetEnumerator
  parent: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection{DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples}
  definition: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1.GetEnumerator
  name: GetEnumerator()
  fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection<DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples>.GetEnumerator()
  fullname.vb: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection(Of DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples).GetEnumerator()
  spec.csharp:
  - uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1.GetEnumerator
    name: GetEnumerator
    fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection<DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples>.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1.GetEnumerator
    name: GetEnumerator
    fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection(Of DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples).GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection{DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples}.System#Collections#IEnumerable#GetEnumerator
  parent: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection{DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples}
  definition: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection<DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples>.System.Collections.IEnumerable.GetEnumerator()
  fullname.vb: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection(Of DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection<DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples>.System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection(Of DataFactory.Tests.Framework.JsonSamples.PipelineJsonSamples).System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1
  parent: DataFactory.Tests.Framework.JsonSamples
  isExternal: false
  name: JsonSampleCollection<T>
  fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection<T>
  fullname.vb: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection(Of T)
  name.vb: JsonSampleCollection(Of T)
  spec.csharp:
  - uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1
    name: JsonSampleCollection
    fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1
    name: JsonSampleCollection
    fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1.GetEnumerator
  parent: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1
  isExternal: false
  name: GetEnumerator()
  fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection<T>.GetEnumerator()
  fullname.vb: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection(Of T).GetEnumerator()
  spec.csharp:
  - uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1.GetEnumerator
    name: GetEnumerator
    fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection<T>.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1.GetEnumerator
    name: GetEnumerator
    fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection(Of T).GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1.System#Collections#IEnumerable#GetEnumerator
  parent: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1
  isExternal: false
  name: IEnumerable.GetEnumerator()
  fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection<T>.System.Collections.IEnumerable.GetEnumerator()
  fullname.vb: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection(Of T).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection<T>.System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection(Of T).System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
