items:
- uid: DataFactory.Tests.Framework.JsonSamples.DatasetInvalidDateTimeJsonSamples
  commentId: T:DataFactory.Tests.Framework.JsonSamples.DatasetInvalidDateTimeJsonSamples
  id: DatasetInvalidDateTimeJsonSamples
  parent: DataFactory.Tests.Framework.JsonSamples
  children:
  - DataFactory.Tests.Framework.JsonSamples.DatasetInvalidDateTimeJsonSamples.ExternalDataset
  - DataFactory.Tests.Framework.JsonSamples.DatasetInvalidDateTimeJsonSamples.ExternalDataset2
  - DataFactory.Tests.Framework.JsonSamples.DatasetInvalidDateTimeJsonSamples.HDISDataset
  langs:
  - csharp
  - vb
  name: DatasetInvalidDateTimeJsonSamples
  fullName: DataFactory.Tests.Framework.JsonSamples.DatasetInvalidDateTimeJsonSamples
  type: Class
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/DatasetInvalidDateTimeJsonSamples.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: DatasetInvalidDateTimeJsonSamples
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/DatasetInvalidDateTimeJsonSamples.cs
    startLine: 18
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework.JsonSamples
  syntax:
    content: 'public class DatasetInvalidDateTimeJsonSamples : JsonSampleCollection<DatasetInvalidDateTimeJsonSamples>, IEnumerable<object[]>, IEnumerable'
    content.vb: >-
      Public Class DatasetInvalidDateTimeJsonSamples
          Inherits JsonSampleCollection(Of DatasetInvalidDateTimeJsonSamples)
          Implements IEnumerable(Of Object()), IEnumerable
  inheritance:
  - System.Object
  - DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection{DataFactory.Tests.Framework.JsonSamples.DatasetInvalidDateTimeJsonSamples}
  implements:
  - System.Collections.Generic.IEnumerable{System.Object[]}
  - System.Collections.IEnumerable
  inheritedMembers:
  - DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection{DataFactory.Tests.Framework.JsonSamples.DatasetInvalidDateTimeJsonSamples}.GetEnumerator
  - DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection{DataFactory.Tests.Framework.JsonSamples.DatasetInvalidDateTimeJsonSamples}.System#Collections#IEnumerable#GetEnumerator
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DataFactory.Tests.Framework.JsonSamples.DatasetInvalidDateTimeJsonSamples.HDISDataset
  commentId: F:DataFactory.Tests.Framework.JsonSamples.DatasetInvalidDateTimeJsonSamples.HDISDataset
  id: HDISDataset
  parent: DataFactory.Tests.Framework.JsonSamples.DatasetInvalidDateTimeJsonSamples
  langs:
  - csharp
  - vb
  name: HDISDataset
  fullName: DataFactory.Tests.Framework.JsonSamples.DatasetInvalidDateTimeJsonSamples.HDISDataset
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/DatasetInvalidDateTimeJsonSamples.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: HDISDataset
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/DatasetInvalidDateTimeJsonSamples.cs
    startLine: 21
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework.JsonSamples
  syntax:
    content: >-
      [JsonSample]

      public const string HDISDataset = "\n{\n    name: \"TestOut\",\n    properties:\n    {\n        location:\n        {\n            type: \"OnPremisesSqlServerTableLocation\",\n            tableName: \"$EncryptedString$MyEncryptedTableName\",\n            linkedServiceName: \"MyLinkedServiceName\"\n        },\n        availability:\n        {\n            offset: \"01:00:00\",\n            interval: 1,\n            anchorDateTime: \"02/27/2013\",\n            frequency: \"Hour\"\n        },\n        createTime: \"2014-02-27T12:00:00\"\n    }\n}\n"
    content.vb: >-
      <JsonSample>

      Public Const HDISDataset As String = vbLf & "{" & vbLf & "    name: ""TestOut""," & vbLf & "    properties:" & vbLf & "    {" & vbLf & "        location:" & vbLf & "        {" & vbLf & "            type: ""OnPremisesSqlServerTableLocation""," & vbLf & "            tableName: ""$EncryptedString$MyEncryptedTableName""," & vbLf & "            linkedServiceName: ""MyLinkedServiceName""" & vbLf & "        }," & vbLf & "        availability:" & vbLf & "        {" & vbLf & "            offset: ""01:00:00""," & vbLf & "            interval: 1," & vbLf & "            anchorDateTime: ""02/27/2013""," & vbLf & "            frequency: ""Hour""" & vbLf & "        }," & vbLf & "        createTime: ""2014-02-27T12:00:00""" & vbLf & "    }" & vbLf & "}" & vbLf
    return:
      type: System.String
  attributes:
  - type: DataFactory.Tests.Framework.JsonSampleAttribute
    ctor: DataFactory.Tests.Framework.JsonSampleAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: DataFactory.Tests.Framework.JsonSamples.DatasetInvalidDateTimeJsonSamples.ExternalDataset
  commentId: F:DataFactory.Tests.Framework.JsonSamples.DatasetInvalidDateTimeJsonSamples.ExternalDataset
  id: ExternalDataset
  parent: DataFactory.Tests.Framework.JsonSamples.DatasetInvalidDateTimeJsonSamples
  langs:
  - csharp
  - vb
  name: ExternalDataset
  fullName: DataFactory.Tests.Framework.JsonSamples.DatasetInvalidDateTimeJsonSamples.ExternalDataset
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/DatasetInvalidDateTimeJsonSamples.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: ExternalDataset
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/DatasetInvalidDateTimeJsonSamples.cs
    startLine: 45
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework.JsonSamples
  syntax:
    content: >-
      [JsonSample]

      public const string ExternalDataset = "\n{\n    name: \"External\",\n    properties:\n    {\n    location:\n    {\n            type: \"AzureBlobLocation\",\n        blobPath: \"MyContainer\\\\MySubFolder\\\\$Date\\\\$Time\\\\FileName$Date$Time\",\n        blobName: \"TestBlobName\",\n        linkedServiceName: \"MyLinkedServiceName\",\n    },\n    availability:\n    {\n        offset: \"01:00:00\",\n        interval: 1,\n        anchorDateTime: \"2014.02.27\",\n        frequency: \"Hour\",\n        waitOnExternal:\n        {\n            dataDelay: \"00:10:00\",\n            retryInterval: \"00:01:00\",\n            retryTimeout: \"00:10:00\",\n            maximumRetry: 3\n        },\n    },\n    policy:\n    {\n        validation:\n        {\n            minimumSizeMB: 10.0,\n        }\n    }\n    }\n}"
    content.vb: >-
      <JsonSample>

      Public Const ExternalDataset As String = vbLf & "{" & vbLf & "    name: ""External""," & vbLf & "    properties:" & vbLf & "    {" & vbLf & "    location:" & vbLf & "    {" & vbLf & "            type: ""AzureBlobLocation""," & vbLf & "        blobPath: ""MyContainer\\MySubFolder\\$Date\\$Time\\FileName$Date$Time""," & vbLf & "        blobName: ""TestBlobName""," & vbLf & "        linkedServiceName: ""MyLinkedServiceName""," & vbLf & "    }," & vbLf & "    availability:" & vbLf & "    {" & vbLf & "        offset: ""01:00:00""," & vbLf & "        interval: 1," & vbLf & "        anchorDateTime: ""2014.02.27""," & vbLf & "        frequency: ""Hour""," & vbLf & "        waitOnExternal:" & vbLf & "        {" & vbLf & "            dataDelay: ""00:10:00""," & vbLf & "            retryInterval: ""00:01:00""," & vbLf & "            retryTimeout: ""00:10:00""," & vbLf & "            maximumRetry: 3" & vbLf & "        }," & vbLf & "    }," & vbLf & "    policy:" & vbLf & "    {" & vbLf & "        validation:" & vbLf & "        {" & vbLf & "            minimumSizeMB: 10.0," & vbLf & "        }" & vbLf & "    }" & vbLf & "    }" & vbLf & "}"
    return:
      type: System.String
  attributes:
  - type: DataFactory.Tests.Framework.JsonSampleAttribute
    ctor: DataFactory.Tests.Framework.JsonSampleAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: DataFactory.Tests.Framework.JsonSamples.DatasetInvalidDateTimeJsonSamples.ExternalDataset2
  commentId: F:DataFactory.Tests.Framework.JsonSamples.DatasetInvalidDateTimeJsonSamples.ExternalDataset2
  id: ExternalDataset2
  parent: DataFactory.Tests.Framework.JsonSamples.DatasetInvalidDateTimeJsonSamples
  langs:
  - csharp
  - vb
  name: ExternalDataset2
  fullName: DataFactory.Tests.Framework.JsonSamples.DatasetInvalidDateTimeJsonSamples.ExternalDataset2
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/DatasetInvalidDateTimeJsonSamples.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: ExternalDataset2
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/DatasetInvalidDateTimeJsonSamples.cs
    startLine: 82
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework.JsonSamples
  syntax:
    content: >-
      [JsonSample]

      public const string ExternalDataset2 = "\n{\n    name: \"External\",\n    properties:\n    {\n        location:\n        {\n                type: \"AzureBlobLocation\",\n            blobPath: \"MyContainer\\\\MySubFolder\\\\$Date\\\\$Time\\\\FileName$Date$Time\",\n            blobName: \"TestBlobName\",\n            linkedServiceName: \"MyLinkedServiceName\",\n        },\n        availability:\n        {\n            offset: \"01:00:00\",\n            interval: 1,\n            anchorDateTime: \"2014-02-27T00:00\",\n            frequency: \"Hour\",\n            waitOnExternal:\n            {\n            },\n        },\n        policy:\n        {\n            validation:\n            {\n                minimumSizeMB: 10.0,\n            }\n        }\n    }\n}"
    content.vb: >-
      <JsonSample>

      Public Const ExternalDataset2 As String = vbLf & "{" & vbLf & "    name: ""External""," & vbLf & "    properties:" & vbLf & "    {" & vbLf & "        location:" & vbLf & "        {" & vbLf & "                type: ""AzureBlobLocation""," & vbLf & "            blobPath: ""MyContainer\\MySubFolder\\$Date\\$Time\\FileName$Date$Time""," & vbLf & "            blobName: ""TestBlobName""," & vbLf & "            linkedServiceName: ""MyLinkedServiceName""," & vbLf & "        }," & vbLf & "        availability:" & vbLf & "        {" & vbLf & "            offset: ""01:00:00""," & vbLf & "            interval: 1," & vbLf & "            anchorDateTime: ""2014-02-27T00:00""," & vbLf & "            frequency: ""Hour""," & vbLf & "            waitOnExternal:" & vbLf & "            {" & vbLf & "            }," & vbLf & "        }," & vbLf & "        policy:" & vbLf & "        {" & vbLf & "            validation:" & vbLf & "            {" & vbLf & "                minimumSizeMB: 10.0," & vbLf & "            }" & vbLf & "        }" & vbLf & "    }" & vbLf & "}"
    return:
      type: System.String
  attributes:
  - type: DataFactory.Tests.Framework.JsonSampleAttribute
    ctor: DataFactory.Tests.Framework.JsonSampleAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: DataFactory.Tests.Framework.JsonSamples
  isExternal: false
  name: DataFactory.Tests.Framework.JsonSamples
  fullName: DataFactory.Tests.Framework.JsonSamples
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection{DataFactory.Tests.Framework.JsonSamples.DatasetInvalidDateTimeJsonSamples}
  parent: DataFactory.Tests.Framework.JsonSamples
  definition: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1
  name: JsonSampleCollection<DatasetInvalidDateTimeJsonSamples>
  fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection<DataFactory.Tests.Framework.JsonSamples.DatasetInvalidDateTimeJsonSamples>
  fullname.vb: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection(Of DataFactory.Tests.Framework.JsonSamples.DatasetInvalidDateTimeJsonSamples)
  name.vb: JsonSampleCollection(Of DatasetInvalidDateTimeJsonSamples)
  spec.csharp:
  - uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1
    name: JsonSampleCollection
    fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection
  - name: <
    fullName: <
  - uid: DataFactory.Tests.Framework.JsonSamples.DatasetInvalidDateTimeJsonSamples
    name: DatasetInvalidDateTimeJsonSamples
    fullName: DataFactory.Tests.Framework.JsonSamples.DatasetInvalidDateTimeJsonSamples
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1
    name: JsonSampleCollection
    fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection
  - name: '(Of '
    fullName: '(Of '
  - uid: DataFactory.Tests.Framework.JsonSamples.DatasetInvalidDateTimeJsonSamples
    name: DatasetInvalidDateTimeJsonSamples
    fullName: DataFactory.Tests.Framework.JsonSamples.DatasetInvalidDateTimeJsonSamples
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Object[]}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Object[]>
  fullName: System.Collections.Generic.IEnumerable<System.Object[]>
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Object())
  name.vb: IEnumerable(Of Object())
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection{DataFactory.Tests.Framework.JsonSamples.DatasetInvalidDateTimeJsonSamples}.GetEnumerator
  parent: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection{DataFactory.Tests.Framework.JsonSamples.DatasetInvalidDateTimeJsonSamples}
  definition: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1.GetEnumerator
  name: GetEnumerator()
  fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection<DataFactory.Tests.Framework.JsonSamples.DatasetInvalidDateTimeJsonSamples>.GetEnumerator()
  fullname.vb: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection(Of DataFactory.Tests.Framework.JsonSamples.DatasetInvalidDateTimeJsonSamples).GetEnumerator()
  spec.csharp:
  - uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1.GetEnumerator
    name: GetEnumerator
    fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection<DataFactory.Tests.Framework.JsonSamples.DatasetInvalidDateTimeJsonSamples>.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1.GetEnumerator
    name: GetEnumerator
    fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection(Of DataFactory.Tests.Framework.JsonSamples.DatasetInvalidDateTimeJsonSamples).GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection{DataFactory.Tests.Framework.JsonSamples.DatasetInvalidDateTimeJsonSamples}.System#Collections#IEnumerable#GetEnumerator
  parent: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection{DataFactory.Tests.Framework.JsonSamples.DatasetInvalidDateTimeJsonSamples}
  definition: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection<DataFactory.Tests.Framework.JsonSamples.DatasetInvalidDateTimeJsonSamples>.System.Collections.IEnumerable.GetEnumerator()
  fullname.vb: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection(Of DataFactory.Tests.Framework.JsonSamples.DatasetInvalidDateTimeJsonSamples).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection<DataFactory.Tests.Framework.JsonSamples.DatasetInvalidDateTimeJsonSamples>.System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection(Of DataFactory.Tests.Framework.JsonSamples.DatasetInvalidDateTimeJsonSamples).System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1
  parent: DataFactory.Tests.Framework.JsonSamples
  isExternal: false
  name: JsonSampleCollection<T>
  fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection<T>
  fullname.vb: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection(Of T)
  name.vb: JsonSampleCollection(Of T)
  spec.csharp:
  - uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1
    name: JsonSampleCollection
    fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1
    name: JsonSampleCollection
    fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1.GetEnumerator
  parent: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1
  isExternal: false
  name: GetEnumerator()
  fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection<T>.GetEnumerator()
  fullname.vb: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection(Of T).GetEnumerator()
  spec.csharp:
  - uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1.GetEnumerator
    name: GetEnumerator
    fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection<T>.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1.GetEnumerator
    name: GetEnumerator
    fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection(Of T).GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1.System#Collections#IEnumerable#GetEnumerator
  parent: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1
  isExternal: false
  name: IEnumerable.GetEnumerator()
  fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection<T>.System.Collections.IEnumerable.GetEnumerator()
  fullname.vb: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection(Of T).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection<T>.System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection(Of T).System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
