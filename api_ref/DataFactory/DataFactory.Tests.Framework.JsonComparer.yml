items:
- uid: DataFactory.Tests.Framework.JsonComparer
  commentId: T:DataFactory.Tests.Framework.JsonComparer
  id: JsonComparer
  parent: DataFactory.Tests.Framework
  children:
  - DataFactory.Tests.Framework.JsonComparer.IsDefaultValue(Newtonsoft.Json.Linq.JToken)
  - DataFactory.Tests.Framework.JsonComparer.ValidateAreSame(Newtonsoft.Json.Linq.JArray,Newtonsoft.Json.Linq.JArray,System.String,System.Boolean,System.Boolean)
  - DataFactory.Tests.Framework.JsonComparer.ValidateAreSame(Newtonsoft.Json.Linq.JObject,Newtonsoft.Json.Linq.JObject,System.String,System.Boolean,System.Boolean)
  - DataFactory.Tests.Framework.JsonComparer.ValidateAreSame(Newtonsoft.Json.Linq.JProperty,Newtonsoft.Json.Linq.JProperty,System.String,System.Boolean,System.Boolean)
  - DataFactory.Tests.Framework.JsonComparer.ValidateAreSame(Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken,System.String,System.Boolean,System.Boolean)
  - DataFactory.Tests.Framework.JsonComparer.ValidateAreSame(Newtonsoft.Json.Linq.JValue,Newtonsoft.Json.Linq.JValue,System.String,System.Boolean)
  - DataFactory.Tests.Framework.JsonComparer.ValidateAreSame(System.String,System.String,System.String,System.Boolean,System.Boolean)
  - DataFactory.Tests.Framework.JsonComparer.ValidatePropertyNameCasing(Newtonsoft.Json.Linq.JObject,Newtonsoft.Json.JsonSerializerSettings,System.String,System.Collections.Generic.HashSet{System.String})
  - DataFactory.Tests.Framework.JsonComparer.ValidatePropertyNameCasing(Newtonsoft.Json.Linq.JToken,System.Boolean,System.String,System.Collections.Generic.HashSet{System.String})
  langs:
  - csharp
  - vb
  name: JsonComparer
  fullName: DataFactory.Tests.Framework.JsonComparer
  type: Class
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonComparer.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: JsonComparer
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonComparer.cs
    startLine: 27
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework
  syntax:
    content: public class JsonComparer
    content.vb: Public Class JsonComparer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DataFactory.Tests.Framework.JsonComparer.ValidatePropertyNameCasing(Newtonsoft.Json.Linq.JObject,Newtonsoft.Json.JsonSerializerSettings,System.String,System.Collections.Generic.HashSet{System.String})
  commentId: M:DataFactory.Tests.Framework.JsonComparer.ValidatePropertyNameCasing(Newtonsoft.Json.Linq.JObject,Newtonsoft.Json.JsonSerializerSettings,System.String,System.Collections.Generic.HashSet{System.String})
  id: ValidatePropertyNameCasing(Newtonsoft.Json.Linq.JObject,Newtonsoft.Json.JsonSerializerSettings,System.String,System.Collections.Generic.HashSet{System.String})
  parent: DataFactory.Tests.Framework.JsonComparer
  langs:
  - csharp
  - vb
  name: ValidatePropertyNameCasing(JObject, JsonSerializerSettings, String, HashSet<String>)
  fullName: DataFactory.Tests.Framework.JsonComparer.ValidatePropertyNameCasing(Newtonsoft.Json.Linq.JObject, Newtonsoft.Json.JsonSerializerSettings, System.String, System.Collections.Generic.HashSet<System.String>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonComparer.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: ValidatePropertyNameCasing
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonComparer.cs
    startLine: 37
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework
  summary: "\n\n"
  example: []
  syntax:
    content: public static void ValidatePropertyNameCasing(JObject actualJObject, JsonSerializerSettings settings, string description, HashSet<string> propertiesToIgnore)
    content.vb: Public Shared Sub ValidatePropertyNameCasing(actualJObject As JObject, settings As JsonSerializerSettings, description As String, propertiesToIgnore As HashSet(Of String))
    parameters:
    - id: actualJObject
      type: Newtonsoft.Json.Linq.JObject
      description: 
    - id: settings
      type: Newtonsoft.Json.JsonSerializerSettings
      description: 
    - id: description
      type: System.String
      description: 
    - id: propertiesToIgnore
      type: System.Collections.Generic.HashSet{System.String}
      description: "The full paths of properties to ignore. Should contain properties that correspond to user-provided property bag keys. \nSince they don't correspond to OM properties, their casing is left exactly how the user specified."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DataFactory.Tests.Framework.JsonComparer.ValidatePropertyNameCasing(Newtonsoft.Json.Linq.JObject, Newtonsoft.Json.JsonSerializerSettings, System.String, System.Collections.Generic.HashSet(Of System.String))
  name.vb: ValidatePropertyNameCasing(JObject, JsonSerializerSettings, String, HashSet(Of String))
- uid: DataFactory.Tests.Framework.JsonComparer.ValidatePropertyNameCasing(Newtonsoft.Json.Linq.JToken,System.Boolean,System.String,System.Collections.Generic.HashSet{System.String})
  commentId: M:DataFactory.Tests.Framework.JsonComparer.ValidatePropertyNameCasing(Newtonsoft.Json.Linq.JToken,System.Boolean,System.String,System.Collections.Generic.HashSet{System.String})
  id: ValidatePropertyNameCasing(Newtonsoft.Json.Linq.JToken,System.Boolean,System.String,System.Collections.Generic.HashSet{System.String})
  parent: DataFactory.Tests.Framework.JsonComparer
  langs:
  - csharp
  - vb
  name: ValidatePropertyNameCasing(JToken, Boolean, String, HashSet<String>)
  fullName: DataFactory.Tests.Framework.JsonComparer.ValidatePropertyNameCasing(Newtonsoft.Json.Linq.JToken, System.Boolean, System.String, System.Collections.Generic.HashSet<System.String>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonComparer.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: ValidatePropertyNameCasing
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonComparer.cs
    startLine: 58
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework
  summary: "\n\n"
  example: []
  syntax:
    content: public static void ValidatePropertyNameCasing(JToken actualJToken, bool isCamelCase, string description, HashSet<string> propertiesToIgnore)
    content.vb: Public Shared Sub ValidatePropertyNameCasing(actualJToken As JToken, isCamelCase As Boolean, description As String, propertiesToIgnore As HashSet(Of String))
    parameters:
    - id: actualJToken
      type: Newtonsoft.Json.Linq.JToken
      description: 
    - id: isCamelCase
      type: System.Boolean
      description: 
    - id: description
      type: System.String
      description: 
    - id: propertiesToIgnore
      type: System.Collections.Generic.HashSet{System.String}
      description: "The full paths of properties to ignore. Should contain properties that correspond to user-provided property bag keys. \nSince they don't correspond to OM properties, their casing is left exactly how the user specified."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DataFactory.Tests.Framework.JsonComparer.ValidatePropertyNameCasing(Newtonsoft.Json.Linq.JToken, System.Boolean, System.String, System.Collections.Generic.HashSet(Of System.String))
  name.vb: ValidatePropertyNameCasing(JToken, Boolean, String, HashSet(Of String))
- uid: DataFactory.Tests.Framework.JsonComparer.ValidateAreSame(System.String,System.String,System.String,System.Boolean,System.Boolean)
  commentId: M:DataFactory.Tests.Framework.JsonComparer.ValidateAreSame(System.String,System.String,System.String,System.Boolean,System.Boolean)
  id: ValidateAreSame(System.String,System.String,System.String,System.Boolean,System.Boolean)
  parent: DataFactory.Tests.Framework.JsonComparer
  langs:
  - csharp
  - vb
  name: ValidateAreSame(String, String, String, Boolean, Boolean)
  fullName: DataFactory.Tests.Framework.JsonComparer.ValidateAreSame(System.String, System.String, System.String, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonComparer.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: ValidateAreSame
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonComparer.cs
    startLine: 146
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework
  syntax:
    content: public static void ValidateAreSame(string expected, string actual, string description = null, bool ignoreCase = false, bool ignoreDefaultValues = false)
    content.vb: Public Shared Sub ValidateAreSame(expected As String, actual As String, description As String = Nothing, ignoreCase As Boolean = False, ignoreDefaultValues As Boolean = False)
    parameters:
    - id: expected
      type: System.String
    - id: actual
      type: System.String
    - id: description
      type: System.String
    - id: ignoreCase
      type: System.Boolean
    - id: ignoreDefaultValues
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DataFactory.Tests.Framework.JsonComparer.ValidateAreSame(Newtonsoft.Json.Linq.JObject,Newtonsoft.Json.Linq.JObject,System.String,System.Boolean,System.Boolean)
  commentId: M:DataFactory.Tests.Framework.JsonComparer.ValidateAreSame(Newtonsoft.Json.Linq.JObject,Newtonsoft.Json.Linq.JObject,System.String,System.Boolean,System.Boolean)
  id: ValidateAreSame(Newtonsoft.Json.Linq.JObject,Newtonsoft.Json.Linq.JObject,System.String,System.Boolean,System.Boolean)
  parent: DataFactory.Tests.Framework.JsonComparer
  langs:
  - csharp
  - vb
  name: ValidateAreSame(JObject, JObject, String, Boolean, Boolean)
  fullName: DataFactory.Tests.Framework.JsonComparer.ValidateAreSame(Newtonsoft.Json.Linq.JObject, Newtonsoft.Json.Linq.JObject, System.String, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonComparer.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: ValidateAreSame
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonComparer.cs
    startLine: 157
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework
  summary: "\nAsserts if the two instances are not the same.\n"
  example: []
  syntax:
    content: public static void ValidateAreSame(JObject expected, JObject actual, string description = null, bool ignoreCase = false, bool ignoreDefaultValues = false)
    content.vb: Public Shared Sub ValidateAreSame(expected As JObject, actual As JObject, description As String = Nothing, ignoreCase As Boolean = False, ignoreDefaultValues As Boolean = False)
    parameters:
    - id: expected
      type: Newtonsoft.Json.Linq.JObject
    - id: actual
      type: Newtonsoft.Json.Linq.JObject
    - id: description
      type: System.String
    - id: ignoreCase
      type: System.Boolean
    - id: ignoreDefaultValues
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DataFactory.Tests.Framework.JsonComparer.ValidateAreSame(Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken,System.String,System.Boolean,System.Boolean)
  commentId: M:DataFactory.Tests.Framework.JsonComparer.ValidateAreSame(Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken,System.String,System.Boolean,System.Boolean)
  id: ValidateAreSame(Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken,System.String,System.Boolean,System.Boolean)
  parent: DataFactory.Tests.Framework.JsonComparer
  langs:
  - csharp
  - vb
  name: ValidateAreSame(JToken, JToken, String, Boolean, Boolean)
  fullName: DataFactory.Tests.Framework.JsonComparer.ValidateAreSame(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken, System.String, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonComparer.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: ValidateAreSame
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonComparer.cs
    startLine: 235
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework
  syntax:
    content: public static void ValidateAreSame(JToken expected, JToken actual, string description = null, bool ignoreCase = false, bool ignoreDefaultValues = false)
    content.vb: Public Shared Sub ValidateAreSame(expected As JToken, actual As JToken, description As String = Nothing, ignoreCase As Boolean = False, ignoreDefaultValues As Boolean = False)
    parameters:
    - id: expected
      type: Newtonsoft.Json.Linq.JToken
    - id: actual
      type: Newtonsoft.Json.Linq.JToken
    - id: description
      type: System.String
    - id: ignoreCase
      type: System.Boolean
    - id: ignoreDefaultValues
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DataFactory.Tests.Framework.JsonComparer.ValidateAreSame(Newtonsoft.Json.Linq.JProperty,Newtonsoft.Json.Linq.JProperty,System.String,System.Boolean,System.Boolean)
  commentId: M:DataFactory.Tests.Framework.JsonComparer.ValidateAreSame(Newtonsoft.Json.Linq.JProperty,Newtonsoft.Json.Linq.JProperty,System.String,System.Boolean,System.Boolean)
  id: ValidateAreSame(Newtonsoft.Json.Linq.JProperty,Newtonsoft.Json.Linq.JProperty,System.String,System.Boolean,System.Boolean)
  parent: DataFactory.Tests.Framework.JsonComparer
  langs:
  - csharp
  - vb
  name: ValidateAreSame(JProperty, JProperty, String, Boolean, Boolean)
  fullName: DataFactory.Tests.Framework.JsonComparer.ValidateAreSame(Newtonsoft.Json.Linq.JProperty, Newtonsoft.Json.Linq.JProperty, System.String, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonComparer.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: ValidateAreSame
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonComparer.cs
    startLine: 298
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework
  syntax:
    content: public static void ValidateAreSame(JProperty expected, JProperty actual, string description = null, bool ignoreCase = false, bool ignoreDefaultValues = false)
    content.vb: Public Shared Sub ValidateAreSame(expected As JProperty, actual As JProperty, description As String = Nothing, ignoreCase As Boolean = False, ignoreDefaultValues As Boolean = False)
    parameters:
    - id: expected
      type: Newtonsoft.Json.Linq.JProperty
    - id: actual
      type: Newtonsoft.Json.Linq.JProperty
    - id: description
      type: System.String
    - id: ignoreCase
      type: System.Boolean
    - id: ignoreDefaultValues
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DataFactory.Tests.Framework.JsonComparer.ValidateAreSame(Newtonsoft.Json.Linq.JArray,Newtonsoft.Json.Linq.JArray,System.String,System.Boolean,System.Boolean)
  commentId: M:DataFactory.Tests.Framework.JsonComparer.ValidateAreSame(Newtonsoft.Json.Linq.JArray,Newtonsoft.Json.Linq.JArray,System.String,System.Boolean,System.Boolean)
  id: ValidateAreSame(Newtonsoft.Json.Linq.JArray,Newtonsoft.Json.Linq.JArray,System.String,System.Boolean,System.Boolean)
  parent: DataFactory.Tests.Framework.JsonComparer
  langs:
  - csharp
  - vb
  name: ValidateAreSame(JArray, JArray, String, Boolean, Boolean)
  fullName: DataFactory.Tests.Framework.JsonComparer.ValidateAreSame(Newtonsoft.Json.Linq.JArray, Newtonsoft.Json.Linq.JArray, System.String, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonComparer.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: ValidateAreSame
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonComparer.cs
    startLine: 307
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework
  syntax:
    content: public static void ValidateAreSame(JArray expected, JArray actual, string description = null, bool ignoreCase = false, bool ignoreDefaultValues = false)
    content.vb: Public Shared Sub ValidateAreSame(expected As JArray, actual As JArray, description As String = Nothing, ignoreCase As Boolean = False, ignoreDefaultValues As Boolean = False)
    parameters:
    - id: expected
      type: Newtonsoft.Json.Linq.JArray
    - id: actual
      type: Newtonsoft.Json.Linq.JArray
    - id: description
      type: System.String
    - id: ignoreCase
      type: System.Boolean
    - id: ignoreDefaultValues
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DataFactory.Tests.Framework.JsonComparer.ValidateAreSame(Newtonsoft.Json.Linq.JValue,Newtonsoft.Json.Linq.JValue,System.String,System.Boolean)
  commentId: M:DataFactory.Tests.Framework.JsonComparer.ValidateAreSame(Newtonsoft.Json.Linq.JValue,Newtonsoft.Json.Linq.JValue,System.String,System.Boolean)
  id: ValidateAreSame(Newtonsoft.Json.Linq.JValue,Newtonsoft.Json.Linq.JValue,System.String,System.Boolean)
  parent: DataFactory.Tests.Framework.JsonComparer
  langs:
  - csharp
  - vb
  name: ValidateAreSame(JValue, JValue, String, Boolean)
  fullName: DataFactory.Tests.Framework.JsonComparer.ValidateAreSame(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonComparer.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: ValidateAreSame
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonComparer.cs
    startLine: 322
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework
  syntax:
    content: public static void ValidateAreSame(JValue expected, JValue actual, string description = null, bool ignoreCase = false)
    content.vb: Public Shared Sub ValidateAreSame(expected As JValue, actual As JValue, description As String = Nothing, ignoreCase As Boolean = False)
    parameters:
    - id: expected
      type: Newtonsoft.Json.Linq.JValue
    - id: actual
      type: Newtonsoft.Json.Linq.JValue
    - id: description
      type: System.String
    - id: ignoreCase
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DataFactory.Tests.Framework.JsonComparer.IsDefaultValue(Newtonsoft.Json.Linq.JToken)
  commentId: M:DataFactory.Tests.Framework.JsonComparer.IsDefaultValue(Newtonsoft.Json.Linq.JToken)
  id: IsDefaultValue(Newtonsoft.Json.Linq.JToken)
  parent: DataFactory.Tests.Framework.JsonComparer
  langs:
  - csharp
  - vb
  name: IsDefaultValue(JToken)
  fullName: DataFactory.Tests.Framework.JsonComparer.IsDefaultValue(Newtonsoft.Json.Linq.JToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonComparer.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: IsDefaultValue
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonComparer.cs
    startLine: 375
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework
  summary: "\nReturns whether the given token is the default value for its type.\n"
  example: []
  syntax:
    content: public static bool IsDefaultValue(JToken jToken)
    content.vb: Public Shared Function IsDefaultValue(jToken As JToken) As Boolean
    parameters:
    - id: jToken
      type: Newtonsoft.Json.Linq.JToken
      description: 
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: DataFactory.Tests.Framework
  isExternal: false
  name: DataFactory.Tests.Framework
  fullName: DataFactory.Tests.Framework
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Newtonsoft.Json.Linq.JObject
  parent: Newtonsoft.Json.Linq
  isExternal: true
  name: JObject
  fullName: Newtonsoft.Json.Linq.JObject
- uid: Newtonsoft.Json.JsonSerializerSettings
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonSerializerSettings
  fullName: Newtonsoft.Json.JsonSerializerSettings
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Collections.Generic.HashSet{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  name: HashSet<String>
  fullName: System.Collections.Generic.HashSet<System.String>
  fullname.vb: System.Collections.Generic.HashSet(Of System.String)
  name.vb: HashSet(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Newtonsoft.Json.Linq
  isExternal: false
  name: Newtonsoft.Json.Linq
  fullName: Newtonsoft.Json.Linq
- uid: Newtonsoft.Json
  isExternal: false
  name: Newtonsoft.Json
  fullName: Newtonsoft.Json
- uid: System.Collections.Generic.HashSet`1
  parent: System.Collections.Generic
  isExternal: true
  name: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  fullname.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Newtonsoft.Json.Linq.JToken
  parent: Newtonsoft.Json.Linq
  isExternal: true
  name: JToken
  fullName: Newtonsoft.Json.Linq.JToken
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: Newtonsoft.Json.Linq.JProperty
  parent: Newtonsoft.Json.Linq
  isExternal: true
  name: JProperty
  fullName: Newtonsoft.Json.Linq.JProperty
- uid: Newtonsoft.Json.Linq.JArray
  parent: Newtonsoft.Json.Linq
  isExternal: true
  name: JArray
  fullName: Newtonsoft.Json.Linq.JArray
- uid: Newtonsoft.Json.Linq.JValue
  parent: Newtonsoft.Json.Linq
  isExternal: true
  name: JValue
  fullName: Newtonsoft.Json.Linq.JValue
