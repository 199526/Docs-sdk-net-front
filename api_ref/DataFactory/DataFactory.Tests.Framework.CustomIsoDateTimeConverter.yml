items:
- uid: DataFactory.Tests.Framework.CustomIsoDateTimeConverter
  commentId: T:DataFactory.Tests.Framework.CustomIsoDateTimeConverter
  id: CustomIsoDateTimeConverter
  parent: DataFactory.Tests.Framework
  children:
  - DataFactory.Tests.Framework.CustomIsoDateTimeConverter.CanConvert(System.Type)
  - DataFactory.Tests.Framework.CustomIsoDateTimeConverter.DefaultCulture
  - DataFactory.Tests.Framework.CustomIsoDateTimeConverter.DefaultDateTimeFormat
  - DataFactory.Tests.Framework.CustomIsoDateTimeConverter.DefaultDateTimeStyles
  - DataFactory.Tests.Framework.CustomIsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  - DataFactory.Tests.Framework.CustomIsoDateTimeConverter.ValidDateTimeFormats
  - DataFactory.Tests.Framework.CustomIsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  langs:
  - csharp
  - vb
  name: CustomIsoDateTimeConverter
  fullName: DataFactory.Tests.Framework.CustomIsoDateTimeConverter
  type: Class
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/CustomIsoDateTimeConverter.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: CustomIsoDateTimeConverter
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/CustomIsoDateTimeConverter.cs
    startLine: 31
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework
  summary: "\nA customized DateTime ISO8601-based format converter.\n\nThe difference with the IsoDateTimeFormat defined in Json.Net are below:\n  1. Accepts shorthand formats such as \"2014-10-14\"\n\n  2. If no timezone designator is specified, assumes Utc as default.\n"
  example: []
  syntax:
    content: 'public class CustomIsoDateTimeConverter : JsonConverter'
    content.vb: >-
      Public Class CustomIsoDateTimeConverter
          Inherits JsonConverter
  inheritance:
  - System.Object
  - Newtonsoft.Json.JsonConverter
  inheritedMembers:
  - Newtonsoft.Json.JsonConverter.GetSchema
  - Newtonsoft.Json.JsonConverter.CanRead
  - Newtonsoft.Json.JsonConverter.CanWrite
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DataFactory.Tests.Framework.CustomIsoDateTimeConverter.DefaultDateTimeFormat
  commentId: F:DataFactory.Tests.Framework.CustomIsoDateTimeConverter.DefaultDateTimeFormat
  id: DefaultDateTimeFormat
  parent: DataFactory.Tests.Framework.CustomIsoDateTimeConverter
  langs:
  - csharp
  - vb
  name: DefaultDateTimeFormat
  fullName: DataFactory.Tests.Framework.CustomIsoDateTimeConverter.DefaultDateTimeFormat
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/CustomIsoDateTimeConverter.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: DefaultDateTimeFormat
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/CustomIsoDateTimeConverter.cs
    startLine: 35
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework
  syntax:
    content: public const string DefaultDateTimeFormat = "yyyy'-'MM'-'dd'T'HH':'mm':'ss.FFFFFFFK"
    content.vb: Public Const DefaultDateTimeFormat As String = "yyyy'-'MM'-'dd'T'HH':'mm':'ss.FFFFFFFK"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: DataFactory.Tests.Framework.CustomIsoDateTimeConverter.DefaultCulture
  commentId: F:DataFactory.Tests.Framework.CustomIsoDateTimeConverter.DefaultCulture
  id: DefaultCulture
  parent: DataFactory.Tests.Framework.CustomIsoDateTimeConverter
  langs:
  - csharp
  - vb
  name: DefaultCulture
  fullName: DataFactory.Tests.Framework.CustomIsoDateTimeConverter.DefaultCulture
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/CustomIsoDateTimeConverter.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: DefaultCulture
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/CustomIsoDateTimeConverter.cs
    startLine: 37
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework
  syntax:
    content: public static CultureInfo DefaultCulture
    content.vb: Public Shared DefaultCulture As CultureInfo
    return:
      type: System.Globalization.CultureInfo
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DataFactory.Tests.Framework.CustomIsoDateTimeConverter.DefaultDateTimeStyles
  commentId: F:DataFactory.Tests.Framework.CustomIsoDateTimeConverter.DefaultDateTimeStyles
  id: DefaultDateTimeStyles
  parent: DataFactory.Tests.Framework.CustomIsoDateTimeConverter
  langs:
  - csharp
  - vb
  name: DefaultDateTimeStyles
  fullName: DataFactory.Tests.Framework.CustomIsoDateTimeConverter.DefaultDateTimeStyles
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/CustomIsoDateTimeConverter.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: DefaultDateTimeStyles
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/CustomIsoDateTimeConverter.cs
    startLine: 39
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework
  syntax:
    content: public const DateTimeStyles DefaultDateTimeStyles = DateTimeStyles.RoundtripKind
    content.vb: Public Const DefaultDateTimeStyles As DateTimeStyles = DateTimeStyles.RoundtripKind
    return:
      type: System.Globalization.DateTimeStyles
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: DataFactory.Tests.Framework.CustomIsoDateTimeConverter.ValidDateTimeFormats
  commentId: F:DataFactory.Tests.Framework.CustomIsoDateTimeConverter.ValidDateTimeFormats
  id: ValidDateTimeFormats
  parent: DataFactory.Tests.Framework.CustomIsoDateTimeConverter
  langs:
  - csharp
  - vb
  name: ValidDateTimeFormats
  fullName: DataFactory.Tests.Framework.CustomIsoDateTimeConverter.ValidDateTimeFormats
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/CustomIsoDateTimeConverter.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: ValidDateTimeFormats
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/CustomIsoDateTimeConverter.cs
    startLine: 41
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework
  syntax:
    content: public static string[] ValidDateTimeFormats
    content.vb: Public Shared ValidDateTimeFormats As String()
    return:
      type: System.String[]
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DataFactory.Tests.Framework.CustomIsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  commentId: M:DataFactory.Tests.Framework.CustomIsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  id: ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  parent: DataFactory.Tests.Framework.CustomIsoDateTimeConverter
  langs:
  - csharp
  - vb
  name: ReadJson(JsonReader, Type, Object, JsonSerializer)
  fullName: DataFactory.Tests.Framework.CustomIsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Object, Newtonsoft.Json.JsonSerializer)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/CustomIsoDateTimeConverter.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: ReadJson
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/CustomIsoDateTimeConverter.cs
    startLine: 66
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework
  syntax:
    content: public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
    content.vb: Public Overrides Function ReadJson(reader As JsonReader, objectType As Type, existingValue As Object, serializer As JsonSerializer) As Object
    parameters:
    - id: reader
      type: Newtonsoft.Json.JsonReader
    - id: objectType
      type: System.Type
    - id: existingValue
      type: System.Object
    - id: serializer
      type: Newtonsoft.Json.JsonSerializer
    return:
      type: System.Object
  overridden: Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: DataFactory.Tests.Framework.CustomIsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  commentId: M:DataFactory.Tests.Framework.CustomIsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  id: WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  parent: DataFactory.Tests.Framework.CustomIsoDateTimeConverter
  langs:
  - csharp
  - vb
  name: WriteJson(JsonWriter, Object, JsonSerializer)
  fullName: DataFactory.Tests.Framework.CustomIsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Object, Newtonsoft.Json.JsonSerializer)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/CustomIsoDateTimeConverter.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: WriteJson
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/CustomIsoDateTimeConverter.cs
    startLine: 132
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework
  syntax:
    content: public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
    content.vb: Public Overrides Sub WriteJson(writer As JsonWriter, value As Object, serializer As JsonSerializer)
    parameters:
    - id: writer
      type: Newtonsoft.Json.JsonWriter
    - id: value
      type: System.Object
    - id: serializer
      type: Newtonsoft.Json.JsonSerializer
  overridden: Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: DataFactory.Tests.Framework.CustomIsoDateTimeConverter.CanConvert(System.Type)
  commentId: M:DataFactory.Tests.Framework.CustomIsoDateTimeConverter.CanConvert(System.Type)
  id: CanConvert(System.Type)
  parent: DataFactory.Tests.Framework.CustomIsoDateTimeConverter
  langs:
  - csharp
  - vb
  name: CanConvert(Type)
  fullName: DataFactory.Tests.Framework.CustomIsoDateTimeConverter.CanConvert(System.Type)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/CustomIsoDateTimeConverter.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: CanConvert
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/CustomIsoDateTimeConverter.cs
    startLine: 137
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework
  syntax:
    content: public override bool CanConvert(Type objectType)
    content.vb: Public Overrides Function CanConvert(objectType As Type) As Boolean
    parameters:
    - id: objectType
      type: System.Type
    return:
      type: System.Boolean
  overridden: Newtonsoft.Json.JsonConverter.CanConvert(System.Type)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: DataFactory.Tests.Framework
  isExternal: false
  name: DataFactory.Tests.Framework
  fullName: DataFactory.Tests.Framework
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Newtonsoft.Json.JsonConverter
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonConverter
  fullName: Newtonsoft.Json.JsonConverter
- uid: Newtonsoft.Json.JsonConverter.GetSchema
  parent: Newtonsoft.Json.JsonConverter
  isExternal: true
  name: GetSchema()
  fullName: Newtonsoft.Json.JsonConverter.GetSchema()
  spec.csharp:
  - uid: Newtonsoft.Json.JsonConverter.GetSchema
    name: GetSchema
    fullName: Newtonsoft.Json.JsonConverter.GetSchema
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.JsonConverter.GetSchema
    name: GetSchema
    fullName: Newtonsoft.Json.JsonConverter.GetSchema
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Newtonsoft.Json.JsonConverter.CanRead
  parent: Newtonsoft.Json.JsonConverter
  isExternal: true
  name: CanRead
  fullName: Newtonsoft.Json.JsonConverter.CanRead
- uid: Newtonsoft.Json.JsonConverter.CanWrite
  parent: Newtonsoft.Json.JsonConverter
  isExternal: true
  name: CanWrite
  fullName: Newtonsoft.Json.JsonConverter.CanWrite
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Newtonsoft.Json
  isExternal: false
  name: Newtonsoft.Json
  fullName: Newtonsoft.Json
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Globalization
  isExternal: false
  name: System.Globalization
  fullName: System.Globalization
- uid: System.Globalization.DateTimeStyles
  parent: System.Globalization
  isExternal: true
  name: DateTimeStyles
  fullName: System.Globalization.DateTimeStyles
- uid: System.String[]
  isExternal: true
  name: String[]
  fullName: System.String[]
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ()
    fullName: ()
- uid: Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  parent: Newtonsoft.Json.JsonConverter
  isExternal: true
  name: ReadJson(JsonReader, Type, Object, JsonSerializer)
  fullName: Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Object, Newtonsoft.Json.JsonSerializer)
  spec.csharp:
  - uid: Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
    name: ReadJson
    fullName: Newtonsoft.Json.JsonConverter.ReadJson
    isExternal: true
  - name: (
    fullName: (
  - uid: Newtonsoft.Json.JsonReader
    name: JsonReader
    fullName: Newtonsoft.Json.JsonReader
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    fullName: Newtonsoft.Json.JsonSerializer
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
    name: ReadJson
    fullName: Newtonsoft.Json.JsonConverter.ReadJson
    isExternal: true
  - name: (
    fullName: (
  - uid: Newtonsoft.Json.JsonReader
    name: JsonReader
    fullName: Newtonsoft.Json.JsonReader
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    fullName: Newtonsoft.Json.JsonSerializer
    isExternal: true
  - name: )
    fullName: )
- uid: Newtonsoft.Json.JsonReader
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonReader
  fullName: Newtonsoft.Json.JsonReader
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  fullName: System.Type
- uid: Newtonsoft.Json.JsonSerializer
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonSerializer
  fullName: Newtonsoft.Json.JsonSerializer
- uid: Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  parent: Newtonsoft.Json.JsonConverter
  isExternal: true
  name: WriteJson(JsonWriter, Object, JsonSerializer)
  fullName: Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Object, Newtonsoft.Json.JsonSerializer)
  spec.csharp:
  - uid: Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
    name: WriteJson
    fullName: Newtonsoft.Json.JsonConverter.WriteJson
    isExternal: true
  - name: (
    fullName: (
  - uid: Newtonsoft.Json.JsonWriter
    name: JsonWriter
    fullName: Newtonsoft.Json.JsonWriter
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    fullName: Newtonsoft.Json.JsonSerializer
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
    name: WriteJson
    fullName: Newtonsoft.Json.JsonConverter.WriteJson
    isExternal: true
  - name: (
    fullName: (
  - uid: Newtonsoft.Json.JsonWriter
    name: JsonWriter
    fullName: Newtonsoft.Json.JsonWriter
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    fullName: Newtonsoft.Json.JsonSerializer
    isExternal: true
  - name: )
    fullName: )
- uid: Newtonsoft.Json.JsonWriter
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonWriter
  fullName: Newtonsoft.Json.JsonWriter
- uid: Newtonsoft.Json.JsonConverter.CanConvert(System.Type)
  parent: Newtonsoft.Json.JsonConverter
  isExternal: true
  name: CanConvert(Type)
  fullName: Newtonsoft.Json.JsonConverter.CanConvert(System.Type)
  spec.csharp:
  - uid: Newtonsoft.Json.JsonConverter.CanConvert(System.Type)
    name: CanConvert
    fullName: Newtonsoft.Json.JsonConverter.CanConvert
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.JsonConverter.CanConvert(System.Type)
    name: CanConvert
    fullName: Newtonsoft.Json.JsonConverter.CanConvert
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
