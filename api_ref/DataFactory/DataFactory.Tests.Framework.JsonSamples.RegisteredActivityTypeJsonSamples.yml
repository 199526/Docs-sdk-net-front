items:
- uid: DataFactory.Tests.Framework.JsonSamples.RegisteredActivityTypeJsonSamples
  commentId: T:DataFactory.Tests.Framework.JsonSamples.RegisteredActivityTypeJsonSamples
  id: RegisteredActivityTypeJsonSamples
  parent: DataFactory.Tests.Framework.JsonSamples
  children:
  - DataFactory.Tests.Framework.JsonSamples.RegisteredActivityTypeJsonSamples.DotNetActivity
  - DataFactory.Tests.Framework.JsonSamples.RegisteredActivityTypeJsonSamples.DotNetActivityNestedProperties
  langs:
  - csharp
  - vb
  name: RegisteredActivityTypeJsonSamples
  fullName: DataFactory.Tests.Framework.JsonSamples.RegisteredActivityTypeJsonSamples
  type: Class
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/RegisteredActivityTypeJsonSamples.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: RegisteredActivityTypeJsonSamples
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/RegisteredActivityTypeJsonSamples.cs
    startLine: 21
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework.JsonSamples
  summary: "\nContains Registerd ActivityType JSON samples. Samples added here will automatically be hit by the serialization unit tests. \n"
  example: []
  syntax:
    content: 'public class RegisteredActivityTypeJsonSamples : JsonSampleCollection<RegisteredActivityTypeJsonSamples>, IEnumerable<object[]>, IEnumerable'
    content.vb: >-
      Public Class RegisteredActivityTypeJsonSamples
          Inherits JsonSampleCollection(Of RegisteredActivityTypeJsonSamples)
          Implements IEnumerable(Of Object()), IEnumerable
  inheritance:
  - System.Object
  - DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection{DataFactory.Tests.Framework.JsonSamples.RegisteredActivityTypeJsonSamples}
  implements:
  - System.Collections.Generic.IEnumerable{System.Object[]}
  - System.Collections.IEnumerable
  inheritedMembers:
  - DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection{DataFactory.Tests.Framework.JsonSamples.RegisteredActivityTypeJsonSamples}.GetEnumerator
  - DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection{DataFactory.Tests.Framework.JsonSamples.RegisteredActivityTypeJsonSamples}.System#Collections#IEnumerable#GetEnumerator
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DataFactory.Tests.Framework.JsonSamples.RegisteredActivityTypeJsonSamples.DotNetActivity
  commentId: F:DataFactory.Tests.Framework.JsonSamples.RegisteredActivityTypeJsonSamples.DotNetActivity
  id: DotNetActivity
  parent: DataFactory.Tests.Framework.JsonSamples.RegisteredActivityTypeJsonSamples
  langs:
  - csharp
  - vb
  name: DotNetActivity
  fullName: DataFactory.Tests.Framework.JsonSamples.RegisteredActivityTypeJsonSamples.DotNetActivity
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/RegisteredActivityTypeJsonSamples.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: DotNetActivity
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/RegisteredActivityTypeJsonSamples.cs
    startLine: 28
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework.JsonSamples
  syntax:
    content: >-
      [JsonSample(new string[]{"properties.schema.properties.PackageFile", "properties.schema.properties.Bar"})]

      public const string DotNetActivity = "\n{ \n    \"name\": \"CloudMLActivity\", \n    \"properties\": { \n        \"baseType\": \"DotNetActivity\", \n        \"scope\": \"DataFactory\", \n        \"schema\": {\n            \"properties\":{\n                \"PackageFile\": {\n                    \"type\": \"string\",\n                    \"default\": \"container/Foo.Zip\"\n                },\n                \"Bar\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [ \"PackageFile\", \"Bar\" ]\n        }\n    }\n}"
    content.vb: >-
      <JsonSample(New String() {"properties.schema.properties.PackageFile", "properties.schema.properties.Bar"})>

      Public Const DotNetActivity As String = vbLf & "{ " & vbLf & "    ""name"": ""CloudMLActivity"", " & vbLf & "    ""properties"": { " & vbLf & "        ""baseType"": ""DotNetActivity"", " & vbLf & "        ""scope"": ""DataFactory"", " & vbLf & "        ""schema"": {" & vbLf & "            ""properties"":{" & vbLf & "                ""PackageFile"": {" & vbLf & "                    ""type"": ""string""," & vbLf & "                    ""default"": ""container/Foo.Zip""" & vbLf & "                }," & vbLf & "                ""Bar"": {" & vbLf & "                    ""type"": ""string""" & vbLf & "                }" & vbLf & "            }," & vbLf & "            ""required"": [ ""PackageFile"", ""Bar"" ]" & vbLf & "        }" & vbLf & "    }" & vbLf & "}"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: DataFactory.Tests.Framework.JsonSamples.RegisteredActivityTypeJsonSamples.DotNetActivityNestedProperties
  commentId: F:DataFactory.Tests.Framework.JsonSamples.RegisteredActivityTypeJsonSamples.DotNetActivityNestedProperties
  id: DotNetActivityNestedProperties
  parent: DataFactory.Tests.Framework.JsonSamples.RegisteredActivityTypeJsonSamples
  langs:
  - csharp
  - vb
  name: DotNetActivityNestedProperties
  fullName: DataFactory.Tests.Framework.JsonSamples.RegisteredActivityTypeJsonSamples.DotNetActivityNestedProperties
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/RegisteredActivityTypeJsonSamples.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: DotNetActivityNestedProperties
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/RegisteredActivityTypeJsonSamples.cs
    startLine: 54
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework.JsonSamples
  syntax:
    content: >-
      [JsonSample(new string[]{"properties.schema.properties.PackageFile", "properties.schema.properties.Bar"})]

      public const string DotNetActivityNestedProperties = "\n{ \n    \"name\": \"CloudMLActivity\", \n    \"properties\": { \n        \"baseType\": \"DotNetActivity\", \n        \"scope\": \"DataFactory\", \n        \"schema\": {\n            \"properties\":{\n                \"PackageFile\": {\n                    \"type\": \"object\",\n                    \"properties\":{\n                        \"prop1\":\n                            {   \n                                \"type\": \"string\",\n                                \"default\":\"container/Foo.Zip\",\n                            },\n                    },\n                    \"required\":[ \"prop1\" ]\n                },\n                \"Bar\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [ \"PackageFile\", \"Bar\" ]\n        }\n        }\n    }"
    content.vb: >-
      <JsonSample(New String() {"properties.schema.properties.PackageFile", "properties.schema.properties.Bar"})>

      Public Const DotNetActivityNestedProperties As String = vbLf & "{ " & vbLf & "    ""name"": ""CloudMLActivity"", " & vbLf & "    ""properties"": { " & vbLf & "        ""baseType"": ""DotNetActivity"", " & vbLf & "        ""scope"": ""DataFactory"", " & vbLf & "        ""schema"": {" & vbLf & "            ""properties"":{" & vbLf & "                ""PackageFile"": {" & vbLf & "                    ""type"": ""object""," & vbLf & "                    ""properties"":{" & vbLf & "                        ""prop1"":" & vbLf & "                            {   " & vbLf & "                                ""type"": ""string""," & vbLf & "                                ""default"":""container/Foo.Zip""," & vbLf & "                            }," & vbLf & "                    }," & vbLf & "                    ""required"":[ ""prop1"" ]" & vbLf & "                }," & vbLf & "                ""Bar"": {" & vbLf & "                    ""type"": ""string""" & vbLf & "                }" & vbLf & "            }," & vbLf & "            ""required"": [ ""PackageFile"", ""Bar"" ]" & vbLf & "        }" & vbLf & "        }" & vbLf & "    }"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: DataFactory.Tests.Framework.JsonSamples
  isExternal: false
  name: DataFactory.Tests.Framework.JsonSamples
  fullName: DataFactory.Tests.Framework.JsonSamples
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection{DataFactory.Tests.Framework.JsonSamples.RegisteredActivityTypeJsonSamples}
  parent: DataFactory.Tests.Framework.JsonSamples
  definition: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1
  name: JsonSampleCollection<RegisteredActivityTypeJsonSamples>
  fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection<DataFactory.Tests.Framework.JsonSamples.RegisteredActivityTypeJsonSamples>
  fullname.vb: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection(Of DataFactory.Tests.Framework.JsonSamples.RegisteredActivityTypeJsonSamples)
  name.vb: JsonSampleCollection(Of RegisteredActivityTypeJsonSamples)
  spec.csharp:
  - uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1
    name: JsonSampleCollection
    fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection
  - name: <
    fullName: <
  - uid: DataFactory.Tests.Framework.JsonSamples.RegisteredActivityTypeJsonSamples
    name: RegisteredActivityTypeJsonSamples
    fullName: DataFactory.Tests.Framework.JsonSamples.RegisteredActivityTypeJsonSamples
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1
    name: JsonSampleCollection
    fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection
  - name: '(Of '
    fullName: '(Of '
  - uid: DataFactory.Tests.Framework.JsonSamples.RegisteredActivityTypeJsonSamples
    name: RegisteredActivityTypeJsonSamples
    fullName: DataFactory.Tests.Framework.JsonSamples.RegisteredActivityTypeJsonSamples
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Object[]}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Object[]>
  fullName: System.Collections.Generic.IEnumerable<System.Object[]>
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Object())
  name.vb: IEnumerable(Of Object())
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection{DataFactory.Tests.Framework.JsonSamples.RegisteredActivityTypeJsonSamples}.GetEnumerator
  parent: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection{DataFactory.Tests.Framework.JsonSamples.RegisteredActivityTypeJsonSamples}
  definition: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1.GetEnumerator
  name: GetEnumerator()
  fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection<DataFactory.Tests.Framework.JsonSamples.RegisteredActivityTypeJsonSamples>.GetEnumerator()
  fullname.vb: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection(Of DataFactory.Tests.Framework.JsonSamples.RegisteredActivityTypeJsonSamples).GetEnumerator()
  spec.csharp:
  - uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1.GetEnumerator
    name: GetEnumerator
    fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection<DataFactory.Tests.Framework.JsonSamples.RegisteredActivityTypeJsonSamples>.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1.GetEnumerator
    name: GetEnumerator
    fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection(Of DataFactory.Tests.Framework.JsonSamples.RegisteredActivityTypeJsonSamples).GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection{DataFactory.Tests.Framework.JsonSamples.RegisteredActivityTypeJsonSamples}.System#Collections#IEnumerable#GetEnumerator
  parent: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection{DataFactory.Tests.Framework.JsonSamples.RegisteredActivityTypeJsonSamples}
  definition: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection<DataFactory.Tests.Framework.JsonSamples.RegisteredActivityTypeJsonSamples>.System.Collections.IEnumerable.GetEnumerator()
  fullname.vb: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection(Of DataFactory.Tests.Framework.JsonSamples.RegisteredActivityTypeJsonSamples).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection<DataFactory.Tests.Framework.JsonSamples.RegisteredActivityTypeJsonSamples>.System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection(Of DataFactory.Tests.Framework.JsonSamples.RegisteredActivityTypeJsonSamples).System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1
  parent: DataFactory.Tests.Framework.JsonSamples
  isExternal: false
  name: JsonSampleCollection<T>
  fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection<T>
  fullname.vb: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection(Of T)
  name.vb: JsonSampleCollection(Of T)
  spec.csharp:
  - uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1
    name: JsonSampleCollection
    fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1
    name: JsonSampleCollection
    fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1.GetEnumerator
  parent: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1
  isExternal: false
  name: GetEnumerator()
  fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection<T>.GetEnumerator()
  fullname.vb: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection(Of T).GetEnumerator()
  spec.csharp:
  - uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1.GetEnumerator
    name: GetEnumerator
    fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection<T>.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1.GetEnumerator
    name: GetEnumerator
    fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection(Of T).GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1.System#Collections#IEnumerable#GetEnumerator
  parent: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1
  isExternal: false
  name: IEnumerable.GetEnumerator()
  fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection<T>.System.Collections.IEnumerable.GetEnumerator()
  fullname.vb: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection(Of T).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection<T>.System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection(Of T).System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
