items:
- uid: DataFactory.Tests.Framework.JsonSamples.RegisteredComputeTypeJsonSamples
  commentId: T:DataFactory.Tests.Framework.JsonSamples.RegisteredComputeTypeJsonSamples
  id: RegisteredComputeTypeJsonSamples
  parent: DataFactory.Tests.Framework.JsonSamples
  children:
  - DataFactory.Tests.Framework.JsonSamples.RegisteredComputeTypeJsonSamples.AmazonEMRCompute_ServiceBusTransport
  - DataFactory.Tests.Framework.JsonSamples.RegisteredComputeTypeJsonSamples.AmazonEMRCompute_ServiceBusTransport_NestedPropertiesAndDefinitions
  langs:
  - csharp
  - vb
  name: RegisteredComputeTypeJsonSamples
  fullName: DataFactory.Tests.Framework.JsonSamples.RegisteredComputeTypeJsonSamples
  type: Class
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/RegisteredComputeTypeJsonSamples.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: RegisteredComputeTypeJsonSamples
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/RegisteredComputeTypeJsonSamples.cs
    startLine: 21
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework.JsonSamples
  summary: "\nContains Registerd ComputeType JSON samples. Samples added here will automatically be hit by the serialization unit tests. \n"
  example: []
  syntax:
    content: 'public class RegisteredComputeTypeJsonSamples : JsonSampleCollection<RegisteredComputeTypeJsonSamples>, IEnumerable<object[]>, IEnumerable'
    content.vb: >-
      Public Class RegisteredComputeTypeJsonSamples
          Inherits JsonSampleCollection(Of RegisteredComputeTypeJsonSamples)
          Implements IEnumerable(Of Object()), IEnumerable
  inheritance:
  - System.Object
  - DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection{DataFactory.Tests.Framework.JsonSamples.RegisteredComputeTypeJsonSamples}
  implements:
  - System.Collections.Generic.IEnumerable{System.Object[]}
  - System.Collections.IEnumerable
  inheritedMembers:
  - DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection{DataFactory.Tests.Framework.JsonSamples.RegisteredComputeTypeJsonSamples}.GetEnumerator
  - DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection{DataFactory.Tests.Framework.JsonSamples.RegisteredComputeTypeJsonSamples}.System#Collections#IEnumerable#GetEnumerator
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DataFactory.Tests.Framework.JsonSamples.RegisteredComputeTypeJsonSamples.AmazonEMRCompute_ServiceBusTransport
  commentId: F:DataFactory.Tests.Framework.JsonSamples.RegisteredComputeTypeJsonSamples.AmazonEMRCompute_ServiceBusTransport
  id: AmazonEMRCompute_ServiceBusTransport
  parent: DataFactory.Tests.Framework.JsonSamples.RegisteredComputeTypeJsonSamples
  langs:
  - csharp
  - vb
  name: AmazonEMRCompute_ServiceBusTransport
  fullName: DataFactory.Tests.Framework.JsonSamples.RegisteredComputeTypeJsonSamples.AmazonEMRCompute_ServiceBusTransport
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/RegisteredComputeTypeJsonSamples.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: AmazonEMRCompute_ServiceBusTransport
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/RegisteredComputeTypeJsonSamples.cs
    startLine: 28
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework.JsonSamples
  syntax:
    content: >-
      [JsonSample(new string[]{"properties.schema.properties.KeyPairName", "properties.schema.properties.KeyPairKey"})]

      public const string AmazonEMRCompute_ServiceBusTransport = "\n{ \n    \"name\": \"AmazonEMR\", \n    \"properties\": { \n        \"scope\": \"Subscription\",\n        \"transport\": {\n            \"type\": \"ServiceBus\",\n            \"transportProtocolVersion\": \"2.0-preview\",\n            \"serviceBusEndpoint\": \"sb://azuredatafactory.servicebus.windows.net/\",\n            \"serviceBusSharedAccessKeyName\": \"RootManageSharedAccessKey\",\n            \"serviceBusSharedAccessKey\": \"FTTa0PM8=\",\n            \"activityRequestQueue\": \"http://request.queue.azure.com\",\n            \"activityStatusQueue\": \"http://response.queue.azure.com\"\n        },\n        \"supportedActivities\": [\n            \"HadoopActivity\"\n        ],\n        \"schema\": {\n            \"properties\":{\n                \"KeyPairName\": {\n                    \"type\": \"string\",\n                    \"default\": \"HadoopClusterKey\"\n                },\n                \"KeyPairKey\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [ \"KeyPairName\", \"KeyPairKey\" ]\n        }\n    }\n}"
    content.vb: >-
      <JsonSample(New String() {"properties.schema.properties.KeyPairName", "properties.schema.properties.KeyPairKey"})>

      Public Const AmazonEMRCompute_ServiceBusTransport As String = vbLf & "{ " & vbLf & "    ""name"": ""AmazonEMR"", " & vbLf & "    ""properties"": { " & vbLf & "        ""scope"": ""Subscription""," & vbLf & "        ""transport"": {" & vbLf & "            ""type"": ""ServiceBus""," & vbLf & "            ""transportProtocolVersion"": ""2.0-preview""," & vbLf & "            ""serviceBusEndpoint"": ""sb://azuredatafactory.servicebus.windows.net/""," & vbLf & "            ""serviceBusSharedAccessKeyName"": ""RootManageSharedAccessKey""," & vbLf & "            ""serviceBusSharedAccessKey"": ""FTTa0PM8=""," & vbLf & "            ""activityRequestQueue"": ""http://request.queue.azure.com""," & vbLf & "            ""activityStatusQueue"": ""http://response.queue.azure.com""" & vbLf & "        }," & vbLf & "        ""supportedActivities"": [" & vbLf & "            ""HadoopActivity""" & vbLf & "        ]," & vbLf & "        ""schema"": {" & vbLf & "            ""properties"":{" & vbLf & "                ""KeyPairName"": {" & vbLf & "                    ""type"": ""string""," & vbLf & "                    ""default"": ""HadoopClusterKey""" & vbLf & "                }," & vbLf & "                ""KeyPairKey"": {" & vbLf & "                    ""type"": ""string""" & vbLf & "                }" & vbLf & "            }," & vbLf & "            ""required"": [ ""KeyPairName"", ""KeyPairKey"" ]" & vbLf & "        }" & vbLf & "    }" & vbLf & "}"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: DataFactory.Tests.Framework.JsonSamples.RegisteredComputeTypeJsonSamples.AmazonEMRCompute_ServiceBusTransport_NestedPropertiesAndDefinitions
  commentId: F:DataFactory.Tests.Framework.JsonSamples.RegisteredComputeTypeJsonSamples.AmazonEMRCompute_ServiceBusTransport_NestedPropertiesAndDefinitions
  id: AmazonEMRCompute_ServiceBusTransport_NestedPropertiesAndDefinitions
  parent: DataFactory.Tests.Framework.JsonSamples.RegisteredComputeTypeJsonSamples
  langs:
  - csharp
  - vb
  name: AmazonEMRCompute_ServiceBusTransport_NestedPropertiesAndDefinitions
  fullName: DataFactory.Tests.Framework.JsonSamples.RegisteredComputeTypeJsonSamples.AmazonEMRCompute_ServiceBusTransport_NestedPropertiesAndDefinitions
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/RegisteredComputeTypeJsonSamples.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: AmazonEMRCompute_ServiceBusTransport_NestedPropertiesAndDefinitions
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSamples/RegisteredComputeTypeJsonSamples.cs
    startLine: 65
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework.JsonSamples
  syntax:
    content: >-
      [JsonSample(new string[]{"properties.schema.properties.KeyPairName", "properties.schema.properties.KeyPairKey"})]

      public const string AmazonEMRCompute_ServiceBusTransport_NestedPropertiesAndDefinitions = "\n{ \n    \"name\": \"AmazonEMR\", \n    \"properties\": { \n        \"scope\": \"Subscription\",\n        \"transport\": {\n            \"type\": \"ServiceBus\",\n            \"transportProtocolVersion\": \"2.0-preview\",\n            \"serviceBusEndpoint\": \"sb://azuredatafactory.servicebus.windows.net/\",\n            \"serviceBusSharedAccessKeyName\": \"RootManageSharedAccessKey\",\n            \"serviceBusSharedAccessKey\": \"FTTa0PM8=\",\n            \"activityRequestQueue\": \"http://request.queue.azure.com\",\n            \"activityStatusQueue\": \"http://response.queue.azure.com\"\n        },\n        \"supportedActivities\": [\n            \"HadoopActivity\"\n        ],\n        \"schema\": {\n            \"properties\":{\n                \"KeyPairName\": {\n                    \"type\": \"object\",\n                    \"properties\":{\n                        \"prop1\":\n                            {   \n                                \"type\": \"string\",\n                                \"default\":\"HadoopClusterKey\",\n                            }\n                    },\n                    \"required\":[ \"prop1\" ],\n                    \"type\": \"string\",\n                    \"default\": \"HadoopClusterKey\"\n                },\n                \"KeyPairKey\": {\n                    \"type\": \"string\"\n                },\n                \"switches\":{\n                }\n            },\n            \"required\": [ \"KeyPairName\", \"KeyPairKey\" ],\n            \"definitions\":{\n                \"switches\" :{\n                    \"type\": \"object\",\n                    \"properties\":{\n                        \"switchProp\":{\n                            \"type\": \"integer\",\n                            \"default\": 1\n                        }\n                    },\n                    \"required\": [ \"switchProp\" ]\n                }\n            }\n        }\n    }\n}"
    content.vb: >-
      <JsonSample(New String() {"properties.schema.properties.KeyPairName", "properties.schema.properties.KeyPairKey"})>

      Public Const AmazonEMRCompute_ServiceBusTransport_NestedPropertiesAndDefinitions As String = vbLf & "{ " & vbLf & "    ""name"": ""AmazonEMR"", " & vbLf & "    ""properties"": { " & vbLf & "        ""scope"": ""Subscription""," & vbLf & "        ""transport"": {" & vbLf & "            ""type"": ""ServiceBus""," & vbLf & "            ""transportProtocolVersion"": ""2.0-preview""," & vbLf & "            ""serviceBusEndpoint"": ""sb://azuredatafactory.servicebus.windows.net/""," & vbLf & "            ""serviceBusSharedAccessKeyName"": ""RootManageSharedAccessKey""," & vbLf & "            ""serviceBusSharedAccessKey"": ""FTTa0PM8=""," & vbLf & "            ""activityRequestQueue"": ""http://request.queue.azure.com""," & vbLf & "            ""activityStatusQueue"": ""http://response.queue.azure.com""" & vbLf & "        }," & vbLf & "        ""supportedActivities"": [" & vbLf & "            ""HadoopActivity""" & vbLf & "        ]," & vbLf & "        ""schema"": {" & vbLf & "            ""properties"":{" & vbLf & "                ""KeyPairName"": {" & vbLf & "                    ""type"": ""object""," & vbLf & "                    ""properties"":{" & vbLf & "                        ""prop1"":" & vbLf & "                            {   " & vbLf & "                                ""type"": ""string""," & vbLf & "                                ""default"":""HadoopClusterKey""," & vbLf & "                            }" & vbLf & "                    }," & vbLf & "                    ""required"":[ ""prop1"" ]," & vbLf & "                    ""type"": ""string""," & vbLf & "                    ""default"": ""HadoopClusterKey""" & vbLf & "                }," & vbLf & "                ""KeyPairKey"": {" & vbLf & "                    ""type"": ""string""" & vbLf & "                }," & vbLf & "                ""switches"":{" & vbLf & "                }" & vbLf & "            }," & vbLf & "            ""required"": [ ""KeyPairName"", ""KeyPairKey"" ]," & vbLf & "            ""definitions"":{" & vbLf & "                ""switches"" :{" & vbLf & "                    ""type"": ""object""," & vbLf & "                    ""properties"":{" & vbLf & "                        ""switchProp"":{" & vbLf & "                            ""type"": ""integer""," & vbLf & "                            ""default"": 1" & vbLf & "                        }" & vbLf & "                    }," & vbLf & "                    ""required"": [ ""switchProp"" ]" & vbLf & "                }" & vbLf & "            }" & vbLf & "        }" & vbLf & "    }" & vbLf & "}"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: DataFactory.Tests.Framework.JsonSamples
  isExternal: false
  name: DataFactory.Tests.Framework.JsonSamples
  fullName: DataFactory.Tests.Framework.JsonSamples
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection{DataFactory.Tests.Framework.JsonSamples.RegisteredComputeTypeJsonSamples}
  parent: DataFactory.Tests.Framework.JsonSamples
  definition: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1
  name: JsonSampleCollection<RegisteredComputeTypeJsonSamples>
  fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection<DataFactory.Tests.Framework.JsonSamples.RegisteredComputeTypeJsonSamples>
  fullname.vb: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection(Of DataFactory.Tests.Framework.JsonSamples.RegisteredComputeTypeJsonSamples)
  name.vb: JsonSampleCollection(Of RegisteredComputeTypeJsonSamples)
  spec.csharp:
  - uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1
    name: JsonSampleCollection
    fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection
  - name: <
    fullName: <
  - uid: DataFactory.Tests.Framework.JsonSamples.RegisteredComputeTypeJsonSamples
    name: RegisteredComputeTypeJsonSamples
    fullName: DataFactory.Tests.Framework.JsonSamples.RegisteredComputeTypeJsonSamples
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1
    name: JsonSampleCollection
    fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection
  - name: '(Of '
    fullName: '(Of '
  - uid: DataFactory.Tests.Framework.JsonSamples.RegisteredComputeTypeJsonSamples
    name: RegisteredComputeTypeJsonSamples
    fullName: DataFactory.Tests.Framework.JsonSamples.RegisteredComputeTypeJsonSamples
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Object[]}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Object[]>
  fullName: System.Collections.Generic.IEnumerable<System.Object[]>
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Object())
  name.vb: IEnumerable(Of Object())
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection{DataFactory.Tests.Framework.JsonSamples.RegisteredComputeTypeJsonSamples}.GetEnumerator
  parent: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection{DataFactory.Tests.Framework.JsonSamples.RegisteredComputeTypeJsonSamples}
  definition: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1.GetEnumerator
  name: GetEnumerator()
  fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection<DataFactory.Tests.Framework.JsonSamples.RegisteredComputeTypeJsonSamples>.GetEnumerator()
  fullname.vb: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection(Of DataFactory.Tests.Framework.JsonSamples.RegisteredComputeTypeJsonSamples).GetEnumerator()
  spec.csharp:
  - uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1.GetEnumerator
    name: GetEnumerator
    fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection<DataFactory.Tests.Framework.JsonSamples.RegisteredComputeTypeJsonSamples>.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1.GetEnumerator
    name: GetEnumerator
    fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection(Of DataFactory.Tests.Framework.JsonSamples.RegisteredComputeTypeJsonSamples).GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection{DataFactory.Tests.Framework.JsonSamples.RegisteredComputeTypeJsonSamples}.System#Collections#IEnumerable#GetEnumerator
  parent: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection{DataFactory.Tests.Framework.JsonSamples.RegisteredComputeTypeJsonSamples}
  definition: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection<DataFactory.Tests.Framework.JsonSamples.RegisteredComputeTypeJsonSamples>.System.Collections.IEnumerable.GetEnumerator()
  fullname.vb: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection(Of DataFactory.Tests.Framework.JsonSamples.RegisteredComputeTypeJsonSamples).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection<DataFactory.Tests.Framework.JsonSamples.RegisteredComputeTypeJsonSamples>.System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection(Of DataFactory.Tests.Framework.JsonSamples.RegisteredComputeTypeJsonSamples).System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1
  parent: DataFactory.Tests.Framework.JsonSamples
  isExternal: false
  name: JsonSampleCollection<T>
  fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection<T>
  fullname.vb: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection(Of T)
  name.vb: JsonSampleCollection(Of T)
  spec.csharp:
  - uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1
    name: JsonSampleCollection
    fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1
    name: JsonSampleCollection
    fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1.GetEnumerator
  parent: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1
  isExternal: false
  name: GetEnumerator()
  fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection<T>.GetEnumerator()
  fullname.vb: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection(Of T).GetEnumerator()
  spec.csharp:
  - uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1.GetEnumerator
    name: GetEnumerator
    fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection<T>.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1.GetEnumerator
    name: GetEnumerator
    fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection(Of T).GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1.System#Collections#IEnumerable#GetEnumerator
  parent: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1
  isExternal: false
  name: IEnumerable.GetEnumerator()
  fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection<T>.System.Collections.IEnumerable.GetEnumerator()
  fullname.vb: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection(Of T).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection<T>.System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    fullName: DataFactory.Tests.Framework.JsonSamples.JsonSampleCollection(Of T).System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
