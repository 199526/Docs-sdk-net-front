items:
- uid: Microsoft.Azure.Management.DataFactories.Models.AzureMLBatchExecutionActivity
  commentId: T:Microsoft.Azure.Management.DataFactories.Models.AzureMLBatchExecutionActivity
  id: AzureMLBatchExecutionActivity
  parent: Microsoft.Azure.Management.DataFactories.Models
  children:
  - Microsoft.Azure.Management.DataFactories.Models.AzureMLBatchExecutionActivity.#ctor
  - Microsoft.Azure.Management.DataFactories.Models.AzureMLBatchExecutionActivity.GlobalParameters
  - Microsoft.Azure.Management.DataFactories.Models.AzureMLBatchExecutionActivity.WebServiceInput
  - Microsoft.Azure.Management.DataFactories.Models.AzureMLBatchExecutionActivity.WebServiceInputs
  - Microsoft.Azure.Management.DataFactories.Models.AzureMLBatchExecutionActivity.WebServiceOutputs
  langs:
  - csharp
  - vb
  name: AzureMLBatchExecutionActivity
  fullName: Microsoft.Azure.Management.DataFactories.Models.AzureMLBatchExecutionActivity
  type: Class
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Activities/AzureMLBatchExecutionActivity .cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: AzureMLBatchExecutionActivity
    path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Activities/AzureMLBatchExecutionActivity .cs
    startLine: 22
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Models
  summary: "\nAzure ML Batch Execution Service activity.\n"
  example: []
  syntax:
    content: >-
      [AdfTypeName("AzureMLBatchExecution")]

      public class AzureMLBatchExecutionActivity : ActivityTypeProperties, IRegisteredType
    content.vb: >-
      <AdfTypeName("AzureMLBatchExecution")>

      Public Class AzureMLBatchExecutionActivity
          Inherits ActivityTypeProperties
          Implements IRegisteredType
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.DataFactories.Models.TypeProperties
  - Microsoft.Azure.Management.DataFactories.Models.ActivityTypeProperties
  implements:
  - Microsoft.Azure.Management.DataFactories.Registration.Models.IRegisteredType
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: Microsoft.Azure.Management.DataFactories.Models.AdfTypeNameAttribute
    ctor: Microsoft.Azure.Management.DataFactories.Models.AdfTypeNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: AzureMLBatchExecution
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.DataFactories.Models.AzureMLBatchExecutionActivity.GlobalParameters
  commentId: P:Microsoft.Azure.Management.DataFactories.Models.AzureMLBatchExecutionActivity.GlobalParameters
  id: GlobalParameters
  parent: Microsoft.Azure.Management.DataFactories.Models.AzureMLBatchExecutionActivity
  langs:
  - csharp
  - vb
  name: GlobalParameters
  fullName: Microsoft.Azure.Management.DataFactories.Models.AzureMLBatchExecutionActivity.GlobalParameters
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Activities/AzureMLBatchExecutionActivity .cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: GlobalParameters
    path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Activities/AzureMLBatchExecutionActivity .cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Models
  summary: "\nOptional. Key,Value pairs to be passed to the Azure ML Batch Execution Service Endpoint. \nKeys must match the names of web service parameters defined in the published Azure ML web service. \nValues may include Azure Data Factory functions to be resolved at each slice execution time \n(See http://go.microsoft.com/fwlink/?LinkId=823697). \nValues will be passed in the GlobalParameters property of the Azure ML batch execution request.\n"
  example: []
  syntax:
    content: public IDictionary<string, string> GlobalParameters { get; set; }
    content.vb: Public Property GlobalParameters As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataFactories.Models.AzureMLBatchExecutionActivity.WebServiceOutputs
  commentId: P:Microsoft.Azure.Management.DataFactories.Models.AzureMLBatchExecutionActivity.WebServiceOutputs
  id: WebServiceOutputs
  parent: Microsoft.Azure.Management.DataFactories.Models.AzureMLBatchExecutionActivity
  langs:
  - csharp
  - vb
  name: WebServiceOutputs
  fullName: Microsoft.Azure.Management.DataFactories.Models.AzureMLBatchExecutionActivity.WebServiceOutputs
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Activities/AzureMLBatchExecutionActivity .cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: WebServiceOutputs
    path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Activities/AzureMLBatchExecutionActivity .cs
    startLine: 40
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Models
  summary: "\nOptional. Key, Value pairs mapping the names of Azure ML web service outputs to names of Data Factory datasets.\nThe batch execution output is written to these datasets.\nThis information will be passed in the WebServiceOutputs property of the Azure ML batch execution request.\nMapped datasets must be included in the Activity's outputs.\n"
  example: []
  syntax:
    content: public IDictionary<string, string> WebServiceOutputs { get; set; }
    content.vb: Public Property WebServiceOutputs As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataFactories.Models.AzureMLBatchExecutionActivity.WebServiceInput
  commentId: P:Microsoft.Azure.Management.DataFactories.Models.AzureMLBatchExecutionActivity.WebServiceInput
  id: WebServiceInput
  parent: Microsoft.Azure.Management.DataFactories.Models.AzureMLBatchExecutionActivity
  langs:
  - csharp
  - vb
  name: WebServiceInput
  fullName: Microsoft.Azure.Management.DataFactories.Models.AzureMLBatchExecutionActivity.WebServiceInput
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Activities/AzureMLBatchExecutionActivity .cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: WebServiceInput
    path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Activities/AzureMLBatchExecutionActivity .cs
    startLine: 47
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Models
  summary: "\nOptional. Name of Data Factory dataset giving the input to the batch execution. \nThis information will be passed in the WebServiceInput property of the Azure ML batch execution request. \nWebServiceInput cannot be used simultaneously with WebServiceInputs.\n"
  example: []
  syntax:
    content: public string WebServiceInput { get; set; }
    content.vb: Public Property WebServiceInput As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataFactories.Models.AzureMLBatchExecutionActivity.WebServiceInputs
  commentId: P:Microsoft.Azure.Management.DataFactories.Models.AzureMLBatchExecutionActivity.WebServiceInputs
  id: WebServiceInputs
  parent: Microsoft.Azure.Management.DataFactories.Models.AzureMLBatchExecutionActivity
  langs:
  - csharp
  - vb
  name: WebServiceInputs
  fullName: Microsoft.Azure.Management.DataFactories.Models.AzureMLBatchExecutionActivity.WebServiceInputs
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Activities/AzureMLBatchExecutionActivity .cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: WebServiceInputs
    path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Activities/AzureMLBatchExecutionActivity .cs
    startLine: 56
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Models
  summary: "\nOptional. Key, Value pairs mapping the names of Azure ML web service inputs to names of Data Factory datasets.\nThe batch execution input is stored in these datasets.\nThis information will be passed in the WebServiceInputs property of the Azure ML batch execution request.\nMapped datasets must be included in the Activity's inputs. \nWebServiceInputs cannot be used simultaneously with WebServiceInput.\n"
  example: []
  syntax:
    content: public IDictionary<string, string> WebServiceInputs { get; set; }
    content.vb: Public Property WebServiceInputs As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataFactories.Models.AzureMLBatchExecutionActivity.#ctor
  commentId: M:Microsoft.Azure.Management.DataFactories.Models.AzureMLBatchExecutionActivity.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.DataFactories.Models.AzureMLBatchExecutionActivity
  langs:
  - csharp
  - vb
  name: AzureMLBatchExecutionActivity()
  fullName: Microsoft.Azure.Management.DataFactories.Models.AzureMLBatchExecutionActivity.AzureMLBatchExecutionActivity()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Activities/AzureMLBatchExecutionActivity .cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: .ctor
    path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Activities/AzureMLBatchExecutionActivity .cs
    startLine: 58
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Models
  syntax:
    content: public AzureMLBatchExecutionActivity()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.DataFactories.Models
  isExternal: false
  name: Microsoft.Azure.Management.DataFactories.Models
  fullName: Microsoft.Azure.Management.DataFactories.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.DataFactories.Models.TypeProperties
  parent: Microsoft.Azure.Management.DataFactories.Models
  isExternal: false
  name: TypeProperties
  fullName: Microsoft.Azure.Management.DataFactories.Models.TypeProperties
- uid: Microsoft.Azure.Management.DataFactories.Models.ActivityTypeProperties
  parent: Microsoft.Azure.Management.DataFactories.Models
  isExternal: false
  name: ActivityTypeProperties
  fullName: Microsoft.Azure.Management.DataFactories.Models.ActivityTypeProperties
- uid: Microsoft.Azure.Management.DataFactories.Registration.Models.IRegisteredType
  parent: Microsoft.Azure.Management.DataFactories.Registration.Models
  isExternal: false
  name: IRegisteredType
  fullName: Microsoft.Azure.Management.DataFactories.Registration.Models.IRegisteredType
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Management.DataFactories.Registration.Models
  isExternal: false
  name: Microsoft.Azure.Management.DataFactories.Registration.Models
  fullName: Microsoft.Azure.Management.DataFactories.Registration.Models
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
