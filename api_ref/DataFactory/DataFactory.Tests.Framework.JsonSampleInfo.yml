items:
- uid: DataFactory.Tests.Framework.JsonSampleInfo
  commentId: T:DataFactory.Tests.Framework.JsonSampleInfo
  id: JsonSampleInfo
  parent: DataFactory.Tests.Framework
  children:
  - DataFactory.Tests.Framework.JsonSampleInfo.#ctor(System.String,System.String,System.Collections.Generic.HashSet{System.String})
  - DataFactory.Tests.Framework.JsonSampleInfo.#ctor(System.String,System.String,System.String,System.Collections.Generic.HashSet{System.String})
  - DataFactory.Tests.Framework.JsonSampleInfo.Json
  - DataFactory.Tests.Framework.JsonSampleInfo.Name
  - DataFactory.Tests.Framework.JsonSampleInfo.PropertyBagKeys
  - DataFactory.Tests.Framework.JsonSampleInfo.Version
  langs:
  - csharp
  - vb
  name: JsonSampleInfo
  fullName: DataFactory.Tests.Framework.JsonSampleInfo
  type: Struct
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSampleInfo.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: JsonSampleInfo
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSampleInfo.cs
    startLine: 23
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework
  summary: "\nContains info about a JSON sample.\n"
  example: []
  syntax:
    content: public struct JsonSampleInfo
    content.vb: Public Structure JsonSampleInfo
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: DataFactory.Tests.Framework.JsonSampleInfo.Name
  commentId: F:DataFactory.Tests.Framework.JsonSampleInfo.Name
  id: Name
  parent: DataFactory.Tests.Framework.JsonSampleInfo
  langs:
  - csharp
  - vb
  name: Name
  fullName: DataFactory.Tests.Framework.JsonSampleInfo.Name
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSampleInfo.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: Name
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSampleInfo.cs
    startLine: 25
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework
  syntax:
    content: public string Name
    content.vb: Public Name As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DataFactory.Tests.Framework.JsonSampleInfo.Json
  commentId: F:DataFactory.Tests.Framework.JsonSampleInfo.Json
  id: Json
  parent: DataFactory.Tests.Framework.JsonSampleInfo
  langs:
  - csharp
  - vb
  name: Json
  fullName: DataFactory.Tests.Framework.JsonSampleInfo.Json
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSampleInfo.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: Json
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSampleInfo.cs
    startLine: 26
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework
  syntax:
    content: public string Json
    content.vb: Public Json As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DataFactory.Tests.Framework.JsonSampleInfo.Version
  commentId: F:DataFactory.Tests.Framework.JsonSampleInfo.Version
  id: Version
  parent: DataFactory.Tests.Framework.JsonSampleInfo
  langs:
  - csharp
  - vb
  name: Version
  fullName: DataFactory.Tests.Framework.JsonSampleInfo.Version
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSampleInfo.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: Version
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSampleInfo.cs
    startLine: 27
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework
  syntax:
    content: public string Version
    content.vb: Public Version As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DataFactory.Tests.Framework.JsonSampleInfo.PropertyBagKeys
  commentId: F:DataFactory.Tests.Framework.JsonSampleInfo.PropertyBagKeys
  id: PropertyBagKeys
  parent: DataFactory.Tests.Framework.JsonSampleInfo
  langs:
  - csharp
  - vb
  name: PropertyBagKeys
  fullName: DataFactory.Tests.Framework.JsonSampleInfo.PropertyBagKeys
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSampleInfo.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: PropertyBagKeys
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSampleInfo.cs
    startLine: 28
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework
  syntax:
    content: public HashSet<string> PropertyBagKeys
    content.vb: Public PropertyBagKeys As HashSet(Of String)
    return:
      type: System.Collections.Generic.HashSet{System.String}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DataFactory.Tests.Framework.JsonSampleInfo.#ctor(System.String,System.String,System.Collections.Generic.HashSet{System.String})
  commentId: M:DataFactory.Tests.Framework.JsonSampleInfo.#ctor(System.String,System.String,System.Collections.Generic.HashSet{System.String})
  id: '#ctor(System.String,System.String,System.Collections.Generic.HashSet{System.String})'
  parent: DataFactory.Tests.Framework.JsonSampleInfo
  langs:
  - csharp
  - vb
  name: JsonSampleInfo(String, String, HashSet<String>)
  fullName: DataFactory.Tests.Framework.JsonSampleInfo.JsonSampleInfo(System.String, System.String, System.Collections.Generic.HashSet<System.String>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSampleInfo.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: .ctor
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSampleInfo.cs
    startLine: 30
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework
  syntax:
    content: public JsonSampleInfo(string name, string json, HashSet<string> propertyBagKeys)
    content.vb: Public Sub New(name As String, json As String, propertyBagKeys As HashSet(Of String))
    parameters:
    - id: name
      type: System.String
    - id: json
      type: System.String
    - id: propertyBagKeys
      type: System.Collections.Generic.HashSet{System.String}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DataFactory.Tests.Framework.JsonSampleInfo.JsonSampleInfo(System.String, System.String, System.Collections.Generic.HashSet(Of System.String))
  name.vb: JsonSampleInfo(String, String, HashSet(Of String))
- uid: DataFactory.Tests.Framework.JsonSampleInfo.#ctor(System.String,System.String,System.String,System.Collections.Generic.HashSet{System.String})
  commentId: M:DataFactory.Tests.Framework.JsonSampleInfo.#ctor(System.String,System.String,System.String,System.Collections.Generic.HashSet{System.String})
  id: '#ctor(System.String,System.String,System.String,System.Collections.Generic.HashSet{System.String})'
  parent: DataFactory.Tests.Framework.JsonSampleInfo
  langs:
  - csharp
  - vb
  name: JsonSampleInfo(String, String, String, HashSet<String>)
  fullName: DataFactory.Tests.Framework.JsonSampleInfo.JsonSampleInfo(System.String, System.String, System.String, System.Collections.Generic.HashSet<System.String>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSampleInfo.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: .ctor
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSampleInfo.cs
    startLine: 35
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework
  syntax:
    content: public JsonSampleInfo(string name, string json, string version, HashSet<string> propertyBagKeys)
    content.vb: Public Sub New(name As String, json As String, version As String, propertyBagKeys As HashSet(Of String))
    parameters:
    - id: name
      type: System.String
    - id: json
      type: System.String
    - id: version
      type: System.String
    - id: propertyBagKeys
      type: System.Collections.Generic.HashSet{System.String}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DataFactory.Tests.Framework.JsonSampleInfo.JsonSampleInfo(System.String, System.String, System.String, System.Collections.Generic.HashSet(Of System.String))
  name.vb: JsonSampleInfo(String, String, String, HashSet(Of String))
references:
- uid: DataFactory.Tests.Framework
  isExternal: false
  name: DataFactory.Tests.Framework
  fullName: DataFactory.Tests.Framework
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  fullName: System.ValueType
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Collections.Generic.HashSet{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  name: HashSet<String>
  fullName: System.Collections.Generic.HashSet<System.String>
  fullname.vb: System.Collections.Generic.HashSet(Of System.String)
  name.vb: HashSet(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.HashSet`1
  parent: System.Collections.Generic
  isExternal: true
  name: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  fullname.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
