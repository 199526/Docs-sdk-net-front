items:
- uid: Microsoft.Azure.Management.DataFactories.Models.IGenericTypeProperties
  commentId: T:Microsoft.Azure.Management.DataFactories.Models.IGenericTypeProperties
  id: IGenericTypeProperties
  parent: Microsoft.Azure.Management.DataFactories.Models
  children:
  - Microsoft.Azure.Management.DataFactories.Models.IGenericTypeProperties.ServiceExtraProperties
  langs:
  - csharp
  - vb
  name: IGenericTypeProperties
  fullName: Microsoft.Azure.Management.DataFactories.Models.IGenericTypeProperties
  type: Interface
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/IGenericTypeProperties.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: IGenericTypeProperties
    path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/IGenericTypeProperties.cs
    startLine: 20
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Models
  syntax:
    content: public interface IGenericTypeProperties
    content.vb: Public Interface IGenericTypeProperties
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Azure.Management.DataFactories.Models.IGenericTypeProperties.ServiceExtraProperties
  commentId: P:Microsoft.Azure.Management.DataFactories.Models.IGenericTypeProperties.ServiceExtraProperties
  id: ServiceExtraProperties
  parent: Microsoft.Azure.Management.DataFactories.Models.IGenericTypeProperties
  langs:
  - csharp
  - vb
  name: ServiceExtraProperties
  fullName: Microsoft.Azure.Management.DataFactories.Models.IGenericTypeProperties.ServiceExtraProperties
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/IGenericTypeProperties.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: ServiceExtraProperties
    path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/IGenericTypeProperties.cs
    startLine: 22
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Models
  syntax:
    content: IDictionary<string, JToken> ServiceExtraProperties { get; set; }
    content.vb: Property ServiceExtraProperties As IDictionary(Of String, JToken)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,Newtonsoft.Json.Linq.JToken}
  modifiers.csharp:
  - get
  - set
references:
- uid: Microsoft.Azure.Management.DataFactories.Models
  isExternal: false
  name: Microsoft.Azure.Management.DataFactories.Models
  fullName: Microsoft.Azure.Management.DataFactories.Models
- uid: System.Collections.Generic.IDictionary{System.String,Newtonsoft.Json.Linq.JToken}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, JToken>
  fullName: System.Collections.Generic.IDictionary<System.String, Newtonsoft.Json.Linq.JToken>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, Newtonsoft.Json.Linq.JToken)
  name.vb: IDictionary(Of String, JToken)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.Linq.JToken
    name: JToken
    fullName: Newtonsoft.Json.Linq.JToken
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.Linq.JToken
    name: JToken
    fullName: Newtonsoft.Json.Linq.JToken
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
