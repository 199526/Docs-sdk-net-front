items:
- uid: DataFactory.Tests.Framework.JsonSampleCommon
  commentId: T:DataFactory.Tests.Framework.JsonSampleCommon
  id: JsonSampleCommon
  parent: DataFactory.Tests.Framework
  children:
  - DataFactory.Tests.Framework.JsonSampleCommon.GetJsonSample``1(System.String)
  - DataFactory.Tests.Framework.JsonSampleCommon.GetJsonSampleInfo(System.Type,System.Reflection.FieldInfo)
  - DataFactory.Tests.Framework.JsonSampleCommon.GetJsonSamplesFromFolder(System.String)
  - DataFactory.Tests.Framework.JsonSampleCommon.GetJsonSamplesFromType``1
  - DataFactory.Tests.Framework.JsonSampleCommon.GetSerializerSettings(System.Boolean,System.Boolean,System.String,System.String)
  - DataFactory.Tests.Framework.JsonSampleCommon.RemoveSchemaProperty(System.String)
  - DataFactory.Tests.Framework.JsonSampleCommon.TestJsonSample(DataFactory.Tests.Framework.JsonSampleInfo,System.Action{DataFactory.Tests.Framework.JsonSampleInfo})
  - DataFactory.Tests.Framework.JsonSampleCommon.TestJsonSamples(System.Collections.Generic.IEnumerable{DataFactory.Tests.Framework.JsonSampleInfo},System.Action{DataFactory.Tests.Framework.JsonSampleInfo})
  langs:
  - csharp
  - vb
  name: JsonSampleCommon
  fullName: DataFactory.Tests.Framework.JsonSampleCommon
  type: Class
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSampleCommon.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: JsonSampleCommon
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSampleCommon.cs
    startLine: 28
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework
  syntax:
    content: public class JsonSampleCommon
    content.vb: Public Class JsonSampleCommon
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DataFactory.Tests.Framework.JsonSampleCommon.GetSerializerSettings(System.Boolean,System.Boolean,System.String,System.String)
  commentId: M:DataFactory.Tests.Framework.JsonSampleCommon.GetSerializerSettings(System.Boolean,System.Boolean,System.String,System.String)
  id: GetSerializerSettings(System.Boolean,System.Boolean,System.String,System.String)
  parent: DataFactory.Tests.Framework.JsonSampleCommon
  langs:
  - csharp
  - vb
  name: GetSerializerSettings(Boolean, Boolean, String, String)
  fullName: DataFactory.Tests.Framework.JsonSampleCommon.GetSerializerSettings(System.Boolean, System.Boolean, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSampleCommon.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: GetSerializerSettings
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSampleCommon.cs
    startLine: 39
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework
  summary: "\nGets JSON.NET serializer settings for test usage.\n"
  example: []
  syntax:
    content: public static JsonSerializerSettings GetSerializerSettings(bool includeActivityConverter = false, bool includeLinkedServiceConverter = false, string itemNameForContext = null, string factoryName = null)
    content.vb: Public Shared Function GetSerializerSettings(includeActivityConverter As Boolean = False, includeLinkedServiceConverter As Boolean = False, itemNameForContext As String = Nothing, factoryName As String = Nothing) As JsonSerializerSettings
    parameters:
    - id: includeActivityConverter
      type: System.Boolean
      description: 
    - id: includeLinkedServiceConverter
      type: System.Boolean
      description: 
    - id: itemNameForContext
      type: System.String
      description: 
    - id: factoryName
      type: System.String
    return:
      type: Newtonsoft.Json.JsonSerializerSettings
      description: 
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DataFactory.Tests.Framework.JsonSampleCommon.GetJsonSamplesFromType``1
  commentId: M:DataFactory.Tests.Framework.JsonSampleCommon.GetJsonSamplesFromType``1
  id: GetJsonSamplesFromType``1
  parent: DataFactory.Tests.Framework.JsonSampleCommon
  langs:
  - csharp
  - vb
  name: GetJsonSamplesFromType<TSampleClass>()
  fullName: DataFactory.Tests.Framework.JsonSampleCommon.GetJsonSamplesFromType<TSampleClass>()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSampleCommon.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: GetJsonSamplesFromType
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSampleCommon.cs
    startLine: 62
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework
  summary: "\nGets all JSON samples (public constant strings) defined in <em>TSampleClass</em>\n"
  example: []
  syntax:
    content: public static IEnumerable<JsonSampleInfo> GetJsonSamplesFromType<TSampleClass>()
    content.vb: Public Shared Function GetJsonSamplesFromType(Of TSampleClass) As IEnumerable(Of JsonSampleInfo)
    typeParameters:
    - id: TSampleClass
      description: contains JSON samples as public constants.
    return:
      type: System.Collections.Generic.IEnumerable{DataFactory.Tests.Framework.JsonSampleInfo}
      description: JSON samples to test.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DataFactory.Tests.Framework.JsonSampleCommon.GetJsonSamplesFromType(Of TSampleClass)()
  name.vb: GetJsonSamplesFromType(Of TSampleClass)()
- uid: DataFactory.Tests.Framework.JsonSampleCommon.GetJsonSamplesFromFolder(System.String)
  commentId: M:DataFactory.Tests.Framework.JsonSampleCommon.GetJsonSamplesFromFolder(System.String)
  id: GetJsonSamplesFromFolder(System.String)
  parent: DataFactory.Tests.Framework.JsonSampleCommon
  langs:
  - csharp
  - vb
  name: GetJsonSamplesFromFolder(String)
  fullName: DataFactory.Tests.Framework.JsonSampleCommon.GetJsonSamplesFromFolder(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSampleCommon.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: GetJsonSamplesFromFolder
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSampleCommon.cs
    startLine: 75
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework
  summary: "\nGets all JSON samples from the files in the given folder.\n"
  example: []
  syntax:
    content: public static IEnumerable<JsonSampleInfo> GetJsonSamplesFromFolder(string folder)
    content.vb: Public Shared Function GetJsonSamplesFromFolder(folder As String) As IEnumerable(Of JsonSampleInfo)
    parameters:
    - id: folder
      type: System.String
      description: 
    return:
      type: System.Collections.Generic.IEnumerable{DataFactory.Tests.Framework.JsonSampleInfo}
      description: 
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DataFactory.Tests.Framework.JsonSampleCommon.GetJsonSampleInfo(System.Type,System.Reflection.FieldInfo)
  commentId: M:DataFactory.Tests.Framework.JsonSampleCommon.GetJsonSampleInfo(System.Type,System.Reflection.FieldInfo)
  id: GetJsonSampleInfo(System.Type,System.Reflection.FieldInfo)
  parent: DataFactory.Tests.Framework.JsonSampleCommon
  langs:
  - csharp
  - vb
  name: GetJsonSampleInfo(Type, FieldInfo)
  fullName: DataFactory.Tests.Framework.JsonSampleCommon.GetJsonSampleInfo(System.Type, System.Reflection.FieldInfo)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSampleCommon.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: GetJsonSampleInfo
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSampleCommon.cs
    startLine: 105
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework
  summary: "\nGet a JSON sample of type <em>sampleType</em> for the field <em>fieldInfo</em>.\n"
  example: []
  syntax:
    content: public static JsonSampleInfo GetJsonSampleInfo(Type sampleType, FieldInfo fieldInfo)
    content.vb: Public Shared Function GetJsonSampleInfo(sampleType As Type, fieldInfo As FieldInfo) As JsonSampleInfo
    parameters:
    - id: sampleType
      type: System.Type
      description: The type of the JSON sample.
    - id: fieldInfo
      type: System.Reflection.FieldInfo
      description: Info about the JSON sample field.
    return:
      type: DataFactory.Tests.Framework.JsonSampleInfo
      description: Info about the JSON sample.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DataFactory.Tests.Framework.JsonSampleCommon.GetJsonSample``1(System.String)
  commentId: M:DataFactory.Tests.Framework.JsonSampleCommon.GetJsonSample``1(System.String)
  id: GetJsonSample``1(System.String)
  parent: DataFactory.Tests.Framework.JsonSampleCommon
  langs:
  - csharp
  - vb
  name: GetJsonSample<TSampleClass>(String)
  fullName: DataFactory.Tests.Framework.JsonSampleCommon.GetJsonSample<TSampleClass>(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSampleCommon.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: GetJsonSample
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSampleCommon.cs
    startLine: 129
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework
  summary: "\nGet a JSON sample defined in <em>TSampleClass</em> with name <em>name</em>.\n"
  example: []
  syntax:
    content: public static JsonSampleInfo GetJsonSample<TSampleClass>(string name)
    content.vb: Public Shared Function GetJsonSample(Of TSampleClass)(name As String) As JsonSampleInfo
    parameters:
    - id: name
      type: System.String
      description: The name of the JSON constant.
    typeParameters:
    - id: TSampleClass
      description: Contains JSON samples as public constants.
    return:
      type: DataFactory.Tests.Framework.JsonSampleInfo
      description: Info about the JSON sample.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DataFactory.Tests.Framework.JsonSampleCommon.GetJsonSample(Of TSampleClass)(System.String)
  name.vb: GetJsonSample(Of TSampleClass)(String)
- uid: DataFactory.Tests.Framework.JsonSampleCommon.TestJsonSamples(System.Collections.Generic.IEnumerable{DataFactory.Tests.Framework.JsonSampleInfo},System.Action{DataFactory.Tests.Framework.JsonSampleInfo})
  commentId: M:DataFactory.Tests.Framework.JsonSampleCommon.TestJsonSamples(System.Collections.Generic.IEnumerable{DataFactory.Tests.Framework.JsonSampleInfo},System.Action{DataFactory.Tests.Framework.JsonSampleInfo})
  id: TestJsonSamples(System.Collections.Generic.IEnumerable{DataFactory.Tests.Framework.JsonSampleInfo},System.Action{DataFactory.Tests.Framework.JsonSampleInfo})
  parent: DataFactory.Tests.Framework.JsonSampleCommon
  langs:
  - csharp
  - vb
  name: TestJsonSamples(IEnumerable<JsonSampleInfo>, Action<JsonSampleInfo>)
  fullName: DataFactory.Tests.Framework.JsonSampleCommon.TestJsonSamples(System.Collections.Generic.IEnumerable<DataFactory.Tests.Framework.JsonSampleInfo>, System.Action<DataFactory.Tests.Framework.JsonSampleInfo>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSampleCommon.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: TestJsonSamples
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSampleCommon.cs
    startLine: 146
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework
  summary: "\nTests each of the given JSON samples using the given test method. If an error occurs when testing a \nsample, the error is logged and then the remaining samples are tested. Once all samples have been tested,\nan Assert.Fail is triggered if any of the samples failed.\n"
  example: []
  syntax:
    content: public static void TestJsonSamples(IEnumerable<JsonSampleInfo> samples, Action<JsonSampleInfo> testMethod)
    content.vb: Public Shared Sub TestJsonSamples(samples As IEnumerable(Of JsonSampleInfo), testMethod As Action(Of JsonSampleInfo))
    parameters:
    - id: samples
      type: System.Collections.Generic.IEnumerable{DataFactory.Tests.Framework.JsonSampleInfo}
    - id: testMethod
      type: System.Action{DataFactory.Tests.Framework.JsonSampleInfo}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DataFactory.Tests.Framework.JsonSampleCommon.TestJsonSamples(System.Collections.Generic.IEnumerable(Of DataFactory.Tests.Framework.JsonSampleInfo), System.Action(Of DataFactory.Tests.Framework.JsonSampleInfo))
  name.vb: TestJsonSamples(IEnumerable(Of JsonSampleInfo), Action(Of JsonSampleInfo))
- uid: DataFactory.Tests.Framework.JsonSampleCommon.TestJsonSample(DataFactory.Tests.Framework.JsonSampleInfo,System.Action{DataFactory.Tests.Framework.JsonSampleInfo})
  commentId: M:DataFactory.Tests.Framework.JsonSampleCommon.TestJsonSample(DataFactory.Tests.Framework.JsonSampleInfo,System.Action{DataFactory.Tests.Framework.JsonSampleInfo})
  id: TestJsonSample(DataFactory.Tests.Framework.JsonSampleInfo,System.Action{DataFactory.Tests.Framework.JsonSampleInfo})
  parent: DataFactory.Tests.Framework.JsonSampleCommon
  langs:
  - csharp
  - vb
  name: TestJsonSample(JsonSampleInfo, Action<JsonSampleInfo>)
  fullName: DataFactory.Tests.Framework.JsonSampleCommon.TestJsonSample(DataFactory.Tests.Framework.JsonSampleInfo, System.Action<DataFactory.Tests.Framework.JsonSampleInfo>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSampleCommon.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: TestJsonSample
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSampleCommon.cs
    startLine: 190
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework
  syntax:
    content: public static void TestJsonSample(JsonSampleInfo sampleInfo, Action<JsonSampleInfo> testMethod)
    content.vb: Public Shared Sub TestJsonSample(sampleInfo As JsonSampleInfo, testMethod As Action(Of JsonSampleInfo))
    parameters:
    - id: sampleInfo
      type: DataFactory.Tests.Framework.JsonSampleInfo
    - id: testMethod
      type: System.Action{DataFactory.Tests.Framework.JsonSampleInfo}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DataFactory.Tests.Framework.JsonSampleCommon.TestJsonSample(DataFactory.Tests.Framework.JsonSampleInfo, System.Action(Of DataFactory.Tests.Framework.JsonSampleInfo))
  name.vb: TestJsonSample(JsonSampleInfo, Action(Of JsonSampleInfo))
- uid: DataFactory.Tests.Framework.JsonSampleCommon.RemoveSchemaProperty(System.String)
  commentId: M:DataFactory.Tests.Framework.JsonSampleCommon.RemoveSchemaProperty(System.String)
  id: RemoveSchemaProperty(System.String)
  parent: DataFactory.Tests.Framework.JsonSampleCommon
  langs:
  - csharp
  - vb
  name: RemoveSchemaProperty(String)
  fullName: DataFactory.Tests.Framework.JsonSampleCommon.RemoveSchemaProperty(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSampleCommon.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: RemoveSchemaProperty
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/JsonSampleCommon.cs
    startLine: 201
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework
  syntax:
    content: public static string RemoveSchemaProperty(string json)
    content.vb: Public Shared Function RemoveSchemaProperty(json As String) As String
    parameters:
    - id: json
      type: System.String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: DataFactory.Tests.Framework
  isExternal: false
  name: DataFactory.Tests.Framework
  fullName: DataFactory.Tests.Framework
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Newtonsoft.Json.JsonSerializerSettings
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonSerializerSettings
  fullName: Newtonsoft.Json.JsonSerializerSettings
- uid: Newtonsoft.Json
  isExternal: false
  name: Newtonsoft.Json
  fullName: Newtonsoft.Json
- uid: System.Collections.Generic.IEnumerable{DataFactory.Tests.Framework.JsonSampleInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<JsonSampleInfo>
  fullName: System.Collections.Generic.IEnumerable<DataFactory.Tests.Framework.JsonSampleInfo>
  fullname.vb: System.Collections.Generic.IEnumerable(Of DataFactory.Tests.Framework.JsonSampleInfo)
  name.vb: IEnumerable(Of JsonSampleInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: DataFactory.Tests.Framework.JsonSampleInfo
    name: JsonSampleInfo
    fullName: DataFactory.Tests.Framework.JsonSampleInfo
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: DataFactory.Tests.Framework.JsonSampleInfo
    name: JsonSampleInfo
    fullName: DataFactory.Tests.Framework.JsonSampleInfo
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  fullName: System.Type
- uid: System.Reflection.FieldInfo
  parent: System.Reflection
  isExternal: true
  name: FieldInfo
  fullName: System.Reflection.FieldInfo
- uid: DataFactory.Tests.Framework.JsonSampleInfo
  parent: DataFactory.Tests.Framework
  isExternal: false
  name: JsonSampleInfo
  fullName: DataFactory.Tests.Framework.JsonSampleInfo
- uid: System.Reflection
  isExternal: false
  name: System.Reflection
  fullName: System.Reflection
- uid: System.Action{DataFactory.Tests.Framework.JsonSampleInfo}
  parent: System
  definition: System.Action`1
  name: Action<JsonSampleInfo>
  fullName: System.Action<DataFactory.Tests.Framework.JsonSampleInfo>
  fullname.vb: System.Action(Of DataFactory.Tests.Framework.JsonSampleInfo)
  name.vb: Action(Of JsonSampleInfo)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    fullName: System.Action
    isExternal: true
  - name: <
    fullName: <
  - uid: DataFactory.Tests.Framework.JsonSampleInfo
    name: JsonSampleInfo
    fullName: DataFactory.Tests.Framework.JsonSampleInfo
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: DataFactory.Tests.Framework.JsonSampleInfo
    name: JsonSampleInfo
    fullName: DataFactory.Tests.Framework.JsonSampleInfo
  - name: )
    fullName: )
- uid: System.Action`1
  parent: System
  isExternal: true
  name: Action<T>
  fullName: System.Action<T>
  fullname.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    fullName: System.Action
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
