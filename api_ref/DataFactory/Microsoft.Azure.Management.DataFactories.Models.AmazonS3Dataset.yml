items:
- uid: Microsoft.Azure.Management.DataFactories.Models.AmazonS3Dataset
  commentId: T:Microsoft.Azure.Management.DataFactories.Models.AmazonS3Dataset
  id: AmazonS3Dataset
  parent: Microsoft.Azure.Management.DataFactories.Models
  children:
  - Microsoft.Azure.Management.DataFactories.Models.AmazonS3Dataset.#ctor
  - Microsoft.Azure.Management.DataFactories.Models.AmazonS3Dataset.#ctor(System.String)
  - Microsoft.Azure.Management.DataFactories.Models.AmazonS3Dataset.BucketName
  - Microsoft.Azure.Management.DataFactories.Models.AmazonS3Dataset.Compression
  - Microsoft.Azure.Management.DataFactories.Models.AmazonS3Dataset.Format
  - Microsoft.Azure.Management.DataFactories.Models.AmazonS3Dataset.Key
  - Microsoft.Azure.Management.DataFactories.Models.AmazonS3Dataset.Prefix
  - Microsoft.Azure.Management.DataFactories.Models.AmazonS3Dataset.Version
  langs:
  - csharp
  - vb
  name: AmazonS3Dataset
  fullName: Microsoft.Azure.Management.DataFactories.Models.AmazonS3Dataset
  type: Class
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Datasets/AmazonS3Dataset.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: AmazonS3Dataset
    path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Datasets/AmazonS3Dataset.cs
    startLine: 20
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Models
  summary: "\nA single Amazon Simple Storage Service (S3) object or a set of S3 objects.\n"
  example: []
  syntax:
    content: >-
      [AdfTypeName("AmazonS3")]

      public class AmazonS3Dataset : DatasetTypeProperties, IRegisteredType
    content.vb: >-
      <AdfTypeName("AmazonS3")>

      Public Class AmazonS3Dataset
          Inherits DatasetTypeProperties
          Implements IRegisteredType
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.DataFactories.Models.TypeProperties
  - Microsoft.Azure.Management.DataFactories.Models.DatasetTypeProperties
  implements:
  - Microsoft.Azure.Management.DataFactories.Registration.Models.IRegisteredType
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: Microsoft.Azure.Management.DataFactories.Models.AdfTypeNameAttribute
    ctor: Microsoft.Azure.Management.DataFactories.Models.AdfTypeNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: AmazonS3
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.DataFactories.Models.AmazonS3Dataset.BucketName
  commentId: P:Microsoft.Azure.Management.DataFactories.Models.AmazonS3Dataset.BucketName
  id: BucketName
  parent: Microsoft.Azure.Management.DataFactories.Models.AmazonS3Dataset
  langs:
  - csharp
  - vb
  name: BucketName
  fullName: Microsoft.Azure.Management.DataFactories.Models.AmazonS3Dataset.BucketName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Datasets/AmazonS3Dataset.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: BucketName
    path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Datasets/AmazonS3Dataset.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Models
  summary: "\nThe name of the Amazon S3 bucket.\n"
  example: []
  syntax:
    content: public string BucketName { get; set; }
    content.vb: Public Property BucketName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataFactories.Models.AmazonS3Dataset.Key
  commentId: P:Microsoft.Azure.Management.DataFactories.Models.AmazonS3Dataset.Key
  id: Key
  parent: Microsoft.Azure.Management.DataFactories.Models.AmazonS3Dataset
  langs:
  - csharp
  - vb
  name: Key
  fullName: Microsoft.Azure.Management.DataFactories.Models.AmazonS3Dataset.Key
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Datasets/AmazonS3Dataset.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: Key
    path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Datasets/AmazonS3Dataset.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Models
  summary: "\nThe key of the Amazon S3 object.\n"
  example: []
  syntax:
    content: public string Key { get; set; }
    content.vb: Public Property Key As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataFactories.Models.AmazonS3Dataset.Prefix
  commentId: P:Microsoft.Azure.Management.DataFactories.Models.AmazonS3Dataset.Prefix
  id: Prefix
  parent: Microsoft.Azure.Management.DataFactories.Models.AmazonS3Dataset
  langs:
  - csharp
  - vb
  name: Prefix
  fullName: Microsoft.Azure.Management.DataFactories.Models.AmazonS3Dataset.Prefix
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Datasets/AmazonS3Dataset.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: Prefix
    path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Datasets/AmazonS3Dataset.cs
    startLine: 37
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Models
  summary: "\nThe prefix filter for the S3 object(s) name.\n"
  example: []
  syntax:
    content: public string Prefix { get; set; }
    content.vb: Public Property Prefix As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataFactories.Models.AmazonS3Dataset.Version
  commentId: P:Microsoft.Azure.Management.DataFactories.Models.AmazonS3Dataset.Version
  id: Version
  parent: Microsoft.Azure.Management.DataFactories.Models.AmazonS3Dataset
  langs:
  - csharp
  - vb
  name: Version
  fullName: Microsoft.Azure.Management.DataFactories.Models.AmazonS3Dataset.Version
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Datasets/AmazonS3Dataset.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: Version
    path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Datasets/AmazonS3Dataset.cs
    startLine: 42
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Models
  summary: "\nThe version for the S3 object.\n"
  example: []
  syntax:
    content: public string Version { get; set; }
    content.vb: Public Property Version As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataFactories.Models.AmazonS3Dataset.Format
  commentId: P:Microsoft.Azure.Management.DataFactories.Models.AmazonS3Dataset.Format
  id: Format
  parent: Microsoft.Azure.Management.DataFactories.Models.AmazonS3Dataset
  langs:
  - csharp
  - vb
  name: Format
  fullName: Microsoft.Azure.Management.DataFactories.Models.AmazonS3Dataset.Format
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Datasets/AmazonS3Dataset.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: Format
    path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Datasets/AmazonS3Dataset.cs
    startLine: 47
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Models
  summary: "\nThe format of the Amazon S3 object(s).\n"
  example: []
  syntax:
    content: public StorageFormat Format { get; set; }
    content.vb: Public Property Format As StorageFormat
    parameters: []
    return:
      type: Microsoft.Azure.Management.DataFactories.Models.StorageFormat
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataFactories.Models.AmazonS3Dataset.Compression
  commentId: P:Microsoft.Azure.Management.DataFactories.Models.AmazonS3Dataset.Compression
  id: Compression
  parent: Microsoft.Azure.Management.DataFactories.Models.AmazonS3Dataset
  langs:
  - csharp
  - vb
  name: Compression
  fullName: Microsoft.Azure.Management.DataFactories.Models.AmazonS3Dataset.Compression
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Datasets/AmazonS3Dataset.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: Compression
    path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Datasets/AmazonS3Dataset.cs
    startLine: 52
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Models
  summary: "\nThe data compression method used for the Amazon S3 object(s). \n"
  example: []
  syntax:
    content: public Compression Compression { get; set; }
    content.vb: Public Property Compression As Compression
    parameters: []
    return:
      type: Microsoft.Azure.Management.DataFactories.Models.Compression
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataFactories.Models.AmazonS3Dataset.#ctor
  commentId: M:Microsoft.Azure.Management.DataFactories.Models.AmazonS3Dataset.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.DataFactories.Models.AmazonS3Dataset
  langs:
  - csharp
  - vb
  name: AmazonS3Dataset()
  fullName: Microsoft.Azure.Management.DataFactories.Models.AmazonS3Dataset.AmazonS3Dataset()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Datasets/AmazonS3Dataset.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: .ctor
    path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Datasets/AmazonS3Dataset.cs
    startLine: 57
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Models
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.Management.DataFactories.Models.AmazonS3Dataset\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public AmazonS3Dataset()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataFactories.Models.AmazonS3Dataset.#ctor(System.String)
  commentId: M:Microsoft.Azure.Management.DataFactories.Models.AmazonS3Dataset.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Azure.Management.DataFactories.Models.AmazonS3Dataset
  langs:
  - csharp
  - vb
  name: AmazonS3Dataset(String)
  fullName: Microsoft.Azure.Management.DataFactories.Models.AmazonS3Dataset.AmazonS3Dataset(System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Datasets/AmazonS3Dataset.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: .ctor
    path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Datasets/AmazonS3Dataset.cs
    startLine: 65
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Models
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.Management.DataFactories.Models.AmazonS3Dataset\" data-throw-if-not-resolved=\"false\"></xref>\nclass with required arguments.\n"
  example: []
  syntax:
    content: public AmazonS3Dataset(string bucketName)
    content.vb: Public Sub New(bucketName As String)
    parameters:
    - id: bucketName
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.DataFactories.Models
  isExternal: false
  name: Microsoft.Azure.Management.DataFactories.Models
  fullName: Microsoft.Azure.Management.DataFactories.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.DataFactories.Models.TypeProperties
  parent: Microsoft.Azure.Management.DataFactories.Models
  isExternal: false
  name: TypeProperties
  fullName: Microsoft.Azure.Management.DataFactories.Models.TypeProperties
- uid: Microsoft.Azure.Management.DataFactories.Models.DatasetTypeProperties
  parent: Microsoft.Azure.Management.DataFactories.Models
  isExternal: false
  name: DatasetTypeProperties
  fullName: Microsoft.Azure.Management.DataFactories.Models.DatasetTypeProperties
- uid: Microsoft.Azure.Management.DataFactories.Registration.Models.IRegisteredType
  parent: Microsoft.Azure.Management.DataFactories.Registration.Models
  isExternal: false
  name: IRegisteredType
  fullName: Microsoft.Azure.Management.DataFactories.Registration.Models.IRegisteredType
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Management.DataFactories.Registration.Models
  isExternal: false
  name: Microsoft.Azure.Management.DataFactories.Registration.Models
  fullName: Microsoft.Azure.Management.DataFactories.Registration.Models
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.Azure.Management.DataFactories.Models.StorageFormat
  parent: Microsoft.Azure.Management.DataFactories.Models
  isExternal: false
  name: StorageFormat
  fullName: Microsoft.Azure.Management.DataFactories.Models.StorageFormat
- uid: Microsoft.Azure.Management.DataFactories.Models.Compression
  parent: Microsoft.Azure.Management.DataFactories.Models
  isExternal: false
  name: Compression
  fullName: Microsoft.Azure.Management.DataFactories.Models.Compression
- uid: Microsoft.Azure.Management.DataFactories.Models.AmazonS3Dataset
  isExternal: false
  name: AmazonS3Dataset
  fullName: Microsoft.Azure.Management.DataFactories.Models.AmazonS3Dataset
