items:
- uid: DataFactory.Tests.UnitTests.TestClasses.MyActivityType
  commentId: T:DataFactory.Tests.UnitTests.TestClasses.MyActivityType
  id: MyActivityType
  parent: DataFactory.Tests.UnitTests.TestClasses
  children:
  - DataFactory.Tests.UnitTests.TestClasses.MyActivityType.Count
  - DataFactory.Tests.UnitTests.TestClasses.MyActivityType.Password
  - DataFactory.Tests.UnitTests.TestClasses.MyActivityType.UserName
  langs:
  - csharp
  - vb
  name: MyActivityType
  fullName: DataFactory.Tests.UnitTests.TestClasses.MyActivityType
  type: Class
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/UnitTests/TestClasses/MyActivityType.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: MyActivityType
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/UnitTests/TestClasses/MyActivityType.cs
    startLine: 18
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.UnitTests.TestClasses
  syntax:
    content: 'public class MyActivityType : ActivityTypeProperties, IRegisteredType'
    content.vb: >-
      Public Class MyActivityType
          Inherits ActivityTypeProperties
          Implements IRegisteredType
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.DataFactories.Models.TypeProperties
  - Microsoft.Azure.Management.DataFactories.Models.ActivityTypeProperties
  implements:
  - Microsoft.Azure.Management.DataFactories.Registration.Models.IRegisteredType
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DataFactory.Tests.UnitTests.TestClasses.MyActivityType.UserName
  commentId: P:DataFactory.Tests.UnitTests.TestClasses.MyActivityType.UserName
  id: UserName
  parent: DataFactory.Tests.UnitTests.TestClasses.MyActivityType
  langs:
  - csharp
  - vb
  name: UserName
  fullName: DataFactory.Tests.UnitTests.TestClasses.MyActivityType.UserName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/UnitTests/TestClasses/MyActivityType.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: UserName
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/UnitTests/TestClasses/MyActivityType.cs
    startLine: 20
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.UnitTests.TestClasses
  syntax:
    content: public string UserName { get; set; }
    content.vb: Public Property UserName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DataFactory.Tests.UnitTests.TestClasses.MyActivityType.Password
  commentId: P:DataFactory.Tests.UnitTests.TestClasses.MyActivityType.Password
  id: Password
  parent: DataFactory.Tests.UnitTests.TestClasses.MyActivityType
  langs:
  - csharp
  - vb
  name: Password
  fullName: DataFactory.Tests.UnitTests.TestClasses.MyActivityType.Password
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/UnitTests/TestClasses/MyActivityType.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: Password
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/UnitTests/TestClasses/MyActivityType.cs
    startLine: 22
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.UnitTests.TestClasses
  syntax:
    content: public string Password { get; set; }
    content.vb: Public Property Password As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DataFactory.Tests.UnitTests.TestClasses.MyActivityType.Count
  commentId: P:DataFactory.Tests.UnitTests.TestClasses.MyActivityType.Count
  id: Count
  parent: DataFactory.Tests.UnitTests.TestClasses.MyActivityType
  langs:
  - csharp
  - vb
  name: Count
  fullName: DataFactory.Tests.UnitTests.TestClasses.MyActivityType.Count
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/UnitTests/TestClasses/MyActivityType.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: Count
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/UnitTests/TestClasses/MyActivityType.cs
    startLine: 24
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.UnitTests.TestClasses
  syntax:
    content: public int Count { get; set; }
    content.vb: Public Property Count As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: DataFactory.Tests.UnitTests.TestClasses
  isExternal: false
  name: DataFactory.Tests.UnitTests.TestClasses
  fullName: DataFactory.Tests.UnitTests.TestClasses
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.DataFactories.Models.TypeProperties
  parent: Microsoft.Azure.Management.DataFactories.Models
  isExternal: false
  name: TypeProperties
  fullName: Microsoft.Azure.Management.DataFactories.Models.TypeProperties
- uid: Microsoft.Azure.Management.DataFactories.Models.ActivityTypeProperties
  parent: Microsoft.Azure.Management.DataFactories.Models
  isExternal: false
  name: ActivityTypeProperties
  fullName: Microsoft.Azure.Management.DataFactories.Models.ActivityTypeProperties
- uid: Microsoft.Azure.Management.DataFactories.Registration.Models.IRegisteredType
  parent: Microsoft.Azure.Management.DataFactories.Registration.Models
  isExternal: false
  name: IRegisteredType
  fullName: Microsoft.Azure.Management.DataFactories.Registration.Models.IRegisteredType
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Management.DataFactories.Models
  isExternal: false
  name: Microsoft.Azure.Management.DataFactories.Models
  fullName: Microsoft.Azure.Management.DataFactories.Models
- uid: Microsoft.Azure.Management.DataFactories.Registration.Models
  isExternal: false
  name: Microsoft.Azure.Management.DataFactories.Registration.Models
  fullName: Microsoft.Azure.Management.DataFactories.Registration.Models
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
