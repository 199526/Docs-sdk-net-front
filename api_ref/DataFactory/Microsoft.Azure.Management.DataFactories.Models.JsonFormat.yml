items:
- uid: Microsoft.Azure.Management.DataFactories.Models.JsonFormat
  commentId: T:Microsoft.Azure.Management.DataFactories.Models.JsonFormat
  id: JsonFormat
  parent: Microsoft.Azure.Management.DataFactories.Models
  children:
  - Microsoft.Azure.Management.DataFactories.Models.JsonFormat.EncodingName
  - Microsoft.Azure.Management.DataFactories.Models.JsonFormat.FilePattern
  - Microsoft.Azure.Management.DataFactories.Models.JsonFormat.NestingSeparator
  langs:
  - csharp
  - vb
  name: JsonFormat
  fullName: Microsoft.Azure.Management.DataFactories.Models.JsonFormat
  type: Class
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Datasets/StorageFormats/JsonFormat.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: JsonFormat
    path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Datasets/StorageFormats/JsonFormat.cs
    startLine: 20
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Models
  summary: "\nThe data stored in JSON format.\n"
  example: []
  syntax:
    content: 'public class JsonFormat : StorageFormat, IRegisteredType'
    content.vb: >-
      Public Class JsonFormat
          Inherits StorageFormat
          Implements IRegisteredType
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.DataFactories.Models.StorageFormat
  implements:
  - Microsoft.Azure.Management.DataFactories.Registration.Models.IRegisteredType
  inheritedMembers:
  - Microsoft.Azure.Management.DataFactories.Models.StorageFormat.Serializer
  - Microsoft.Azure.Management.DataFactories.Models.StorageFormat.Deserializer
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.DataFactories.Models.JsonFormat.FilePattern
  commentId: P:Microsoft.Azure.Management.DataFactories.Models.JsonFormat.FilePattern
  id: FilePattern
  parent: Microsoft.Azure.Management.DataFactories.Models.JsonFormat
  langs:
  - csharp
  - vb
  name: FilePattern
  fullName: Microsoft.Azure.Management.DataFactories.Models.JsonFormat.FilePattern
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Datasets/StorageFormats/JsonFormat.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: FilePattern
    path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Datasets/StorageFormats/JsonFormat.cs
    startLine: 28
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Models
  summary: "\nFile pattern of JSON. To be more specific, the way of separating single JSON object. \nMust be one of <xref href=\"Microsoft.Azure.Management.DataFactories.Models.JsonFormatFilePattern\" data-throw-if-not-resolved=\"false\"></xref>.\nDefault value is \"setOfObjects\".\nIt is case-sensitive.\n"
  example: []
  syntax:
    content: public string FilePattern { get; set; }
    content.vb: Public Property FilePattern As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataFactories.Models.JsonFormat.NestingSeparator
  commentId: P:Microsoft.Azure.Management.DataFactories.Models.JsonFormat.NestingSeparator
  id: NestingSeparator
  parent: Microsoft.Azure.Management.DataFactories.Models.JsonFormat
  langs:
  - csharp
  - vb
  name: NestingSeparator
  fullName: Microsoft.Azure.Management.DataFactories.Models.JsonFormat.NestingSeparator
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Datasets/StorageFormats/JsonFormat.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: NestingSeparator
    path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Datasets/StorageFormats/JsonFormat.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Models
  summary: "\nThe character used to separate nesting levels. Default value is \".\" (dot). \n"
  example: []
  syntax:
    content: public string NestingSeparator { get; set; }
    content.vb: Public Property NestingSeparator As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataFactories.Models.JsonFormat.EncodingName
  commentId: P:Microsoft.Azure.Management.DataFactories.Models.JsonFormat.EncodingName
  id: EncodingName
  parent: Microsoft.Azure.Management.DataFactories.Models.JsonFormat
  langs:
  - csharp
  - vb
  name: EncodingName
  fullName: Microsoft.Azure.Management.DataFactories.Models.JsonFormat.EncodingName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Datasets/StorageFormats/JsonFormat.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: EncodingName
    path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Datasets/StorageFormats/JsonFormat.cs
    startLine: 41
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Models
  summary: "\nThe code page name of the preferred encoding. If not provided, the default value is \"utf-8\", \nunless the byte order mark (BOM) denotes another Unicode encoding. \nThe full list of supported values can be found in the \"Name\" column of the table of encodings in the following reference: \nhttps://msdn.microsoft.com/library/system.text.encoding.aspx#Anchor_5.\n"
  example: []
  syntax:
    content: public string EncodingName { get; set; }
    content.vb: Public Property EncodingName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.DataFactories.Models
  isExternal: false
  name: Microsoft.Azure.Management.DataFactories.Models
  fullName: Microsoft.Azure.Management.DataFactories.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.DataFactories.Models.StorageFormat
  parent: Microsoft.Azure.Management.DataFactories.Models
  isExternal: false
  name: StorageFormat
  fullName: Microsoft.Azure.Management.DataFactories.Models.StorageFormat
- uid: Microsoft.Azure.Management.DataFactories.Registration.Models.IRegisteredType
  parent: Microsoft.Azure.Management.DataFactories.Registration.Models
  isExternal: false
  name: IRegisteredType
  fullName: Microsoft.Azure.Management.DataFactories.Registration.Models.IRegisteredType
- uid: Microsoft.Azure.Management.DataFactories.Models.StorageFormat.Serializer
  parent: Microsoft.Azure.Management.DataFactories.Models.StorageFormat
  isExternal: false
  name: Serializer
  fullName: Microsoft.Azure.Management.DataFactories.Models.StorageFormat.Serializer
- uid: Microsoft.Azure.Management.DataFactories.Models.StorageFormat.Deserializer
  parent: Microsoft.Azure.Management.DataFactories.Models.StorageFormat
  isExternal: false
  name: Deserializer
  fullName: Microsoft.Azure.Management.DataFactories.Models.StorageFormat.Deserializer
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Management.DataFactories.Registration.Models
  isExternal: false
  name: Microsoft.Azure.Management.DataFactories.Registration.Models
  fullName: Microsoft.Azure.Management.DataFactories.Registration.Models
- uid: Microsoft.Azure.Management.DataFactories.Models.JsonFormatFilePattern
  isExternal: false
  name: JsonFormatFilePattern
  fullName: Microsoft.Azure.Management.DataFactories.Models.JsonFormatFilePattern
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
