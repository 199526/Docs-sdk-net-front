items:
- uid: DataFactory.Tests.Framework.ValueWrapper
  commentId: T:DataFactory.Tests.Framework.ValueWrapper
  id: ValueWrapper
  parent: DataFactory.Tests.Framework
  children:
  - DataFactory.Tests.Framework.ValueWrapper.GetValue
  - DataFactory.Tests.Framework.ValueWrapper.ToString
  - DataFactory.Tests.Framework.ValueWrapper.TryConvertToType(System.Object,System.Type,System.Object@)
  - DataFactory.Tests.Framework.ValueWrapper.TryConvertToType``2(``0,``1@)
  langs:
  - csharp
  - vb
  name: ValueWrapper
  fullName: DataFactory.Tests.Framework.ValueWrapper
  type: Class
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/ValueWrapper.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: ValueWrapper
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/ValueWrapper.cs
    startLine: 22
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework
  syntax:
    content: public abstract class ValueWrapper
    content.vb: Public MustInherit Class ValueWrapper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: DataFactory.Tests.Framework.ValueWrapper.GetValue
  commentId: M:DataFactory.Tests.Framework.ValueWrapper.GetValue
  id: GetValue
  parent: DataFactory.Tests.Framework.ValueWrapper
  langs:
  - csharp
  - vb
  name: GetValue()
  fullName: DataFactory.Tests.Framework.ValueWrapper.GetValue()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/ValueWrapper.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: GetValue
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/ValueWrapper.cs
    startLine: 24
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework
  syntax:
    content: public abstract object GetValue()
    content.vb: Public MustOverride Function GetValue As Object
    return:
      type: System.Object
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: DataFactory.Tests.Framework.ValueWrapper.ToString
  commentId: M:DataFactory.Tests.Framework.ValueWrapper.ToString
  id: ToString
  parent: DataFactory.Tests.Framework.ValueWrapper
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: DataFactory.Tests.Framework.ValueWrapper.ToString()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/ValueWrapper.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: ToString
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/ValueWrapper.cs
    startLine: 26
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  overridden: System.Object.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: DataFactory.Tests.Framework.ValueWrapper.TryConvertToType``2(``0,``1@)
  commentId: M:DataFactory.Tests.Framework.ValueWrapper.TryConvertToType``2(``0,``1@)
  id: TryConvertToType``2(``0,``1@)
  parent: DataFactory.Tests.Framework.ValueWrapper
  langs:
  - csharp
  - vb
  name: TryConvertToType<TActual, TExpected>(TActual, out TExpected)
  fullName: DataFactory.Tests.Framework.ValueWrapper.TryConvertToType<TActual, TExpected>(TActual, out TExpected)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/ValueWrapper.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: TryConvertToType
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/ValueWrapper.cs
    startLine: 31
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework
  syntax:
    content: public static bool TryConvertToType<TActual, TExpected>(TActual value, out TExpected convertedValue)
    content.vb: Public Shared Function TryConvertToType(Of TActual, TExpected)(value As TActual, ByRef convertedValue As TExpected) As Boolean
    parameters:
    - id: value
      type: '{TActual}'
    - id: convertedValue
      type: '{TExpected}'
    typeParameters:
    - id: TActual
    - id: TExpected
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DataFactory.Tests.Framework.ValueWrapper.TryConvertToType(Of TActual, TExpected)(TActual, ByRef TExpected)
  name.vb: TryConvertToType(Of TActual, TExpected)(TActual, ByRef TExpected)
- uid: DataFactory.Tests.Framework.ValueWrapper.TryConvertToType(System.Object,System.Type,System.Object@)
  commentId: M:DataFactory.Tests.Framework.ValueWrapper.TryConvertToType(System.Object,System.Type,System.Object@)
  id: TryConvertToType(System.Object,System.Type,System.Object@)
  parent: DataFactory.Tests.Framework.ValueWrapper
  langs:
  - csharp
  - vb
  name: TryConvertToType(Object, Type, out Object)
  fullName: DataFactory.Tests.Framework.ValueWrapper.TryConvertToType(System.Object, System.Type, out System.Object)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/ValueWrapper.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: TryConvertToType
    path: src/ResourceManagement/DataFactory/DataFactory.Tests/Framework/ValueWrapper.cs
    startLine: 53
  assemblies:
  - DataFactory.Tests
  namespace: DataFactory.Tests.Framework
  syntax:
    content: public static bool TryConvertToType(object value, Type expectedType, out object convertedValue)
    content.vb: Public Shared Function TryConvertToType(value As Object, expectedType As Type, ByRef convertedValue As Object) As Boolean
    parameters:
    - id: value
      type: System.Object
    - id: expectedType
      type: System.Type
    - id: convertedValue
      type: System.Object
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DataFactory.Tests.Framework.ValueWrapper.TryConvertToType(System.Object, System.Type, ByRef System.Object)
  name.vb: TryConvertToType(Object, Type, ByRef Object)
references:
- uid: DataFactory.Tests.Framework
  isExternal: false
  name: DataFactory.Tests.Framework
  fullName: DataFactory.Tests.Framework
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: '{TActual}'
  isExternal: false
  name: TActual
  fullName: TActual
- uid: '{TExpected}'
  isExternal: false
  name: TExpected
  fullName: TExpected
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  fullName: System.Type
