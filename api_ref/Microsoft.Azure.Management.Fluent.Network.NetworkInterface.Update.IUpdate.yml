items:
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
  commentId: T:Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
  id: IUpdate
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update
  children: []
  langs:
  - csharp
  - vb
  name: IUpdate
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
  type: Interface
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/NetworkInterface/Update/IUpdate.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IUpdate
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/NetworkInterface/Update/IUpdate.cs
    startLine: 208
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update
  syntax:
    content: 'public interface IUpdate : IAppliable<INetworkInterface>, IUpdateWithTags<IUpdate>, IWithPrimaryNetworkSubnet, IWithPrimaryPrivateIp, IWithPrimaryPublicIpAddress, IWithNetworkSecurityGroup, IWithIpForwarding, IWithDnsServer, IWithIpConfiguration, IWithLoadBalancer'
    content.vb: >-
      Public Interface IUpdate
          Inherits IAppliable(Of INetworkInterface), IUpdateWithTags(Of IUpdate), IWithPrimaryNetworkSubnet, IWithPrimaryPrivateIp, IWithPrimaryPublicIpAddress, IWithNetworkSecurityGroup, IWithIpForwarding, IWithDnsServer, IWithIpConfiguration, IWithLoadBalancer
  inheritedMembers:
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryNetworkSubnet.WithSubnet(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressDynamic
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressStatic(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithoutPrimaryPublicIpAddress
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithExistingPrimaryPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithNewNetworkSecurityGroup(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup})
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithExistingNetworkSecurityGroup(Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithoutNetworkSecurityGroup
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpForwarding.WithIpForwarding
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpForwarding.WithoutIpForwarding
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithDnsServer(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithoutDnsServer(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithAzureDnsServer
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpConfiguration.DefineSecondaryIpConfiguration(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpConfiguration.UpdateIpConfiguration(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithoutLoadBalancerBackends
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithoutLoadBalancerInboundNatRules
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
references:
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryNetworkSubnet.WithSubnet(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryNetworkSubnet
  isExternal: true
  name: WithSubnet(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryNetworkSubnet.WithSubnet(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryNetworkSubnet.WithSubnet(System.String)
    name: WithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryNetworkSubnet.WithSubnet
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryNetworkSubnet.WithSubnet(System.String)
    name: WithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryNetworkSubnet.WithSubnet
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressDynamic
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPrivateIp
  isExternal: false
  name: WithPrimaryPrivateIpAddressDynamic()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressDynamic()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressDynamic
    name: WithPrimaryPrivateIpAddressDynamic
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressDynamic
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressDynamic
    name: WithPrimaryPrivateIpAddressDynamic
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressDynamic
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressStatic(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPrivateIp
  isExternal: true
  name: WithPrimaryPrivateIpAddressStatic(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressStatic(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressStatic(System.String)
    name: WithPrimaryPrivateIpAddressStatic
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressStatic
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressStatic(System.String)
    name: WithPrimaryPrivateIpAddressStatic
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressStatic
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress
  isExternal: true
  name: WithNewPrimaryPublicIpAddress(ICreatable<IPublicIpAddress>)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(ICreatable<Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress>)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(ICreatable(Of Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress))
  name.vb: WithNewPrimaryPublicIpAddress(ICreatable(Of IPublicIpAddress))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
    name: WithNewPrimaryPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
    name: WithNewPrimaryPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress
  isExternal: false
  name: WithNewPrimaryPublicIpAddress()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress
    name: WithNewPrimaryPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress
    name: WithNewPrimaryPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress
  isExternal: true
  name: WithNewPrimaryPublicIpAddress(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(System.String)
    name: WithNewPrimaryPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(System.String)
    name: WithNewPrimaryPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithoutPrimaryPublicIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress
  isExternal: false
  name: WithoutPrimaryPublicIpAddress()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithoutPrimaryPublicIpAddress()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithoutPrimaryPublicIpAddress
    name: WithoutPrimaryPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithoutPrimaryPublicIpAddress
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithoutPrimaryPublicIpAddress
    name: WithoutPrimaryPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithoutPrimaryPublicIpAddress
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithExistingPrimaryPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress
  isExternal: false
  name: WithExistingPrimaryPublicIpAddress(IPublicIpAddress)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithExistingPrimaryPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithExistingPrimaryPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
    name: WithExistingPrimaryPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithExistingPrimaryPublicIpAddress
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithExistingPrimaryPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
    name: WithExistingPrimaryPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithExistingPrimaryPublicIpAddress
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithNewNetworkSecurityGroup(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup})
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup
  isExternal: true
  name: WithNewNetworkSecurityGroup(ICreatable<INetworkSecurityGroup>)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithNewNetworkSecurityGroup(ICreatable<Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup>)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithNewNetworkSecurityGroup(ICreatable(Of Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup))
  name.vb: WithNewNetworkSecurityGroup(ICreatable(Of INetworkSecurityGroup))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithNewNetworkSecurityGroup(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup})
    name: WithNewNetworkSecurityGroup
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithNewNetworkSecurityGroup
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup
    name: INetworkSecurityGroup
    fullName: Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithNewNetworkSecurityGroup(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup})
    name: WithNewNetworkSecurityGroup
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithNewNetworkSecurityGroup
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup
    name: INetworkSecurityGroup
    fullName: Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithExistingNetworkSecurityGroup(Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup
  isExternal: false
  name: WithExistingNetworkSecurityGroup(INetworkSecurityGroup)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithExistingNetworkSecurityGroup(Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithExistingNetworkSecurityGroup(Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup)
    name: WithExistingNetworkSecurityGroup
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithExistingNetworkSecurityGroup
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup
    name: INetworkSecurityGroup
    fullName: Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithExistingNetworkSecurityGroup(Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup)
    name: WithExistingNetworkSecurityGroup
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithExistingNetworkSecurityGroup
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup
    name: INetworkSecurityGroup
    fullName: Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithoutNetworkSecurityGroup
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup
  isExternal: false
  name: WithoutNetworkSecurityGroup()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithoutNetworkSecurityGroup()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithoutNetworkSecurityGroup
    name: WithoutNetworkSecurityGroup
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithoutNetworkSecurityGroup
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithoutNetworkSecurityGroup
    name: WithoutNetworkSecurityGroup
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithoutNetworkSecurityGroup
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpForwarding.WithIpForwarding
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpForwarding
  isExternal: false
  name: WithIpForwarding()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpForwarding.WithIpForwarding()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpForwarding.WithIpForwarding
    name: WithIpForwarding
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpForwarding.WithIpForwarding
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpForwarding.WithIpForwarding
    name: WithIpForwarding
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpForwarding.WithIpForwarding
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpForwarding.WithoutIpForwarding
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpForwarding
  isExternal: false
  name: WithoutIpForwarding()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpForwarding.WithoutIpForwarding()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpForwarding.WithoutIpForwarding
    name: WithoutIpForwarding
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpForwarding.WithoutIpForwarding
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpForwarding.WithoutIpForwarding
    name: WithoutIpForwarding
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpForwarding.WithoutIpForwarding
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithDnsServer(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer
  isExternal: true
  name: WithDnsServer(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithDnsServer(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithDnsServer(System.String)
    name: WithDnsServer
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithDnsServer
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithDnsServer(System.String)
    name: WithDnsServer
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithDnsServer
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithoutDnsServer(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer
  isExternal: true
  name: WithoutDnsServer(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithoutDnsServer(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithoutDnsServer(System.String)
    name: WithoutDnsServer
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithoutDnsServer
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithoutDnsServer(System.String)
    name: WithoutDnsServer
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithoutDnsServer
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithAzureDnsServer
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer
  isExternal: false
  name: WithAzureDnsServer()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithAzureDnsServer()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithAzureDnsServer
    name: WithAzureDnsServer
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithAzureDnsServer
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithAzureDnsServer
    name: WithAzureDnsServer
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithAzureDnsServer
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpConfiguration.DefineSecondaryIpConfiguration(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpConfiguration
  isExternal: true
  name: DefineSecondaryIpConfiguration(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpConfiguration.DefineSecondaryIpConfiguration(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpConfiguration.DefineSecondaryIpConfiguration(System.String)
    name: DefineSecondaryIpConfiguration
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpConfiguration.DefineSecondaryIpConfiguration
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpConfiguration.DefineSecondaryIpConfiguration(System.String)
    name: DefineSecondaryIpConfiguration
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpConfiguration.DefineSecondaryIpConfiguration
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpConfiguration.UpdateIpConfiguration(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpConfiguration
  isExternal: true
  name: UpdateIpConfiguration(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpConfiguration.UpdateIpConfiguration(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpConfiguration.UpdateIpConfiguration(System.String)
    name: UpdateIpConfiguration
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpConfiguration.UpdateIpConfiguration
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpConfiguration.UpdateIpConfiguration(System.String)
    name: UpdateIpConfiguration
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpConfiguration.UpdateIpConfiguration
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer
  isExternal: true
  name: WithExistingLoadBalancerBackend(ILoadBalancer, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
    name: WithExistingLoadBalancerBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithExistingLoadBalancerBackend
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    name: ILoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
    name: WithExistingLoadBalancerBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithExistingLoadBalancerBackend
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    name: ILoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer
  isExternal: true
  name: WithExistingLoadBalancerInboundNatRule(ILoadBalancer, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
    name: WithExistingLoadBalancerInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    name: ILoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
    name: WithExistingLoadBalancerInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    name: ILoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithoutLoadBalancerBackends
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer
  isExternal: false
  name: WithoutLoadBalancerBackends()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithoutLoadBalancerBackends()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithoutLoadBalancerBackends
    name: WithoutLoadBalancerBackends
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithoutLoadBalancerBackends
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithoutLoadBalancerBackends
    name: WithoutLoadBalancerBackends
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithoutLoadBalancerBackends
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithoutLoadBalancerInboundNatRules
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer
  isExternal: false
  name: WithoutLoadBalancerInboundNatRules()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithoutLoadBalancerInboundNatRules()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithoutLoadBalancerInboundNatRules
    name: WithoutLoadBalancerInboundNatRules
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithoutLoadBalancerInboundNatRules
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithoutLoadBalancerInboundNatRules
    name: WithoutLoadBalancerInboundNatRules
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithoutLoadBalancerInboundNatRules
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryNetworkSubnet
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update
  isExternal: false
  name: IWithPrimaryNetworkSubnet
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryNetworkSubnet
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPrivateIp
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update
  isExternal: false
  name: IWithPrimaryPrivateIp
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPrivateIp
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update
  isExternal: false
  name: IWithPrimaryPublicIpAddress
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update
  isExternal: false
  name: IWithNetworkSecurityGroup
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpForwarding
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update
  isExternal: false
  name: IWithIpForwarding
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpForwarding
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update
  isExternal: false
  name: IWithDnsServer
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpConfiguration
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update
  isExternal: false
  name: IWithIpConfiguration
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpConfiguration
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update
  isExternal: false
  name: IWithLoadBalancer
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer
