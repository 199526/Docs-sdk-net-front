items:
- uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.Node`1
  commentId: T:Microsoft.Azure.Management.V2.Resource.Core.DAG.Node`1
  id: Node`1
  parent: Microsoft.Azure.Management.V2.Resource.Core.DAG
  children:
  - Microsoft.Azure.Management.V2.Resource.Core.DAG.Node`1.#ctor(System.String,`0)
  - Microsoft.Azure.Management.V2.Resource.Core.DAG.Node`1.AddChild(System.String)
  - Microsoft.Azure.Management.V2.Resource.Core.DAG.Node`1.Children
  - Microsoft.Azure.Management.V2.Resource.Core.DAG.Node`1.Data
  - Microsoft.Azure.Management.V2.Resource.Core.DAG.Node`1.HasChildren
  - Microsoft.Azure.Management.V2.Resource.Core.DAG.Node`1.Key
  langs:
  - csharp
  - vb
  name: Node<DataT>
  fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.Node<DataT>
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/DAG/Node.cs
      branch: 953e663ab177b9ff6936c94c9fc5835e0bdce93b
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Node
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/DAG/Node.cs
    startLine: 9
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core.DAG
  syntax:
    content: public class Node<DataT>
    content.vb: Public Class Node(Of DataT)
    typeParameters:
    - id: DataT
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.DAG.Node(Of DataT)
  name.vb: Node(Of DataT)
- uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.Node`1.#ctor(System.String,`0)
  commentId: M:Microsoft.Azure.Management.V2.Resource.Core.DAG.Node`1.#ctor(System.String,`0)
  id: '#ctor(System.String,`0)'
  parent: Microsoft.Azure.Management.V2.Resource.Core.DAG.Node`1
  langs:
  - csharp
  - vb
  name: Node(String, DataT)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.Node<DataT>.Node(System.String, DataT)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/DAG/Node.cs
      branch: 953e663ab177b9ff6936c94c9fc5835e0bdce93b
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/DAG/Node.cs
    startLine: 13
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core.DAG
  syntax:
    content: public Node(string key, DataT data)
    content.vb: Public Sub New(key As String, data As DataT)
    parameters:
    - id: key
      type: System.String
    - id: data
      type: '{DataT}'
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.DAG.Node(Of DataT).Node(System.String, DataT)
- uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.Node`1.Key
  commentId: P:Microsoft.Azure.Management.V2.Resource.Core.DAG.Node`1.Key
  id: Key
  parent: Microsoft.Azure.Management.V2.Resource.Core.DAG.Node`1
  langs:
  - csharp
  - vb
  name: Key
  fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.Node<DataT>.Key
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/DAG/Node.cs
      branch: 953e663ab177b9ff6936c94c9fc5835e0bdce93b
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Key
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/DAG/Node.cs
    startLine: 20
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core.DAG
  syntax:
    content: public string Key { get; }
    content.vb: Public ReadOnly Property Key As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.DAG.Node(Of DataT).Key
- uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.Node`1.Data
  commentId: P:Microsoft.Azure.Management.V2.Resource.Core.DAG.Node`1.Data
  id: Data
  parent: Microsoft.Azure.Management.V2.Resource.Core.DAG.Node`1
  langs:
  - csharp
  - vb
  name: Data
  fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.Node<DataT>.Data
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/DAG/Node.cs
      branch: 953e663ab177b9ff6936c94c9fc5835e0bdce93b
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Data
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/DAG/Node.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core.DAG
  syntax:
    content: public DataT Data { get; }
    content.vb: Public ReadOnly Property Data As DataT
    parameters: []
    return:
      type: '{DataT}'
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.DAG.Node(Of DataT).Data
- uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.Node`1.HasChildren
  commentId: P:Microsoft.Azure.Management.V2.Resource.Core.DAG.Node`1.HasChildren
  id: HasChildren
  parent: Microsoft.Azure.Management.V2.Resource.Core.DAG.Node`1
  langs:
  - csharp
  - vb
  name: HasChildren
  fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.Node<DataT>.HasChildren
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/DAG/Node.cs
      branch: 953e663ab177b9ff6936c94c9fc5835e0bdce93b
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: HasChildren
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/DAG/Node.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core.DAG
  syntax:
    content: public bool HasChildren { get; }
    content.vb: Public ReadOnly Property HasChildren As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.DAG.Node(Of DataT).HasChildren
- uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.Node`1.Children
  commentId: P:Microsoft.Azure.Management.V2.Resource.Core.DAG.Node`1.Children
  id: Children
  parent: Microsoft.Azure.Management.V2.Resource.Core.DAG.Node`1
  langs:
  - csharp
  - vb
  name: Children
  fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.Node<DataT>.Children
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/DAG/Node.cs
      branch: 953e663ab177b9ff6936c94c9fc5835e0bdce93b
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Children
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/DAG/Node.cs
    startLine: 38
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core.DAG
  syntax:
    content: public IReadOnlyCollection<string> Children { get; }
    content.vb: Public ReadOnly Property Children As IReadOnlyCollection(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyCollection{System.String}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.DAG.Node(Of DataT).Children
- uid: Microsoft.Azure.Management.V2.Resource.Core.DAG.Node`1.AddChild(System.String)
  commentId: M:Microsoft.Azure.Management.V2.Resource.Core.DAG.Node`1.AddChild(System.String)
  id: AddChild(System.String)
  parent: Microsoft.Azure.Management.V2.Resource.Core.DAG.Node`1
  langs:
  - csharp
  - vb
  name: AddChild(String)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG.Node<DataT>.AddChild(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/DAG/Node.cs
      branch: 953e663ab177b9ff6936c94c9fc5835e0bdce93b
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AddChild
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/DAG/Node.cs
    startLine: 46
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core.DAG
  syntax:
    content: public void AddChild(string childKey)
    content.vb: Public Sub AddChild(childKey As String)
    parameters:
    - id: childKey
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.DAG.Node(Of DataT).AddChild(System.String)
references:
- uid: Microsoft.Azure.Management.V2.Resource.Core.DAG
  isExternal: false
  name: Microsoft.Azure.Management.V2.Resource.Core.DAG
  fullName: Microsoft.Azure.Management.V2.Resource.Core.DAG
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: '{DataT}'
  isExternal: false
  name: DataT
  fullName: DataT
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IReadOnlyCollection{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<String>
  fullName: System.Collections.Generic.IReadOnlyCollection<System.String>
  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of System.String)
  name.vb: IReadOnlyCollection(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  parent: System.Collections.Generic
  isExternal: true
  name: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
