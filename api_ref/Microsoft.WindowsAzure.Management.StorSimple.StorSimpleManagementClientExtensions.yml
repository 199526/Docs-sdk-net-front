### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.StorSimple.StorSimpleManagementClientExtensions
  commentId: T:Microsoft.WindowsAzure.Management.StorSimple.StorSimpleManagementClientExtensions
  id: StorSimpleManagementClientExtensions
  parent: Microsoft.WindowsAzure.Management.StorSimple
  children:
  - Microsoft.WindowsAzure.Management.StorSimple.StorSimpleManagementClientExtensions.GetOperationStatus(Microsoft.WindowsAzure.Management.StorSimple.IStorSimpleManagementClient,System.String)
  - Microsoft.WindowsAzure.Management.StorSimple.StorSimpleManagementClientExtensions.GetOperationStatusAsync(Microsoft.WindowsAzure.Management.StorSimple.IStorSimpleManagementClient,System.String)
  langs:
  - csharp
  - vb
  name: StorSimpleManagementClientExtensions
  nameWithType: StorSimpleManagementClientExtensions
  fullName: Microsoft.WindowsAzure.Management.StorSimple.StorSimpleManagementClientExtensions
  type: Class
  source:
    remote:
      path: src/ServiceManagement/StorSimple/StorSimple/Generated/StorSimpleManagementClientExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StorSimpleManagementClientExtensions
    path: src/ServiceManagement/StorSimple/StorSimple/Generated/StorSimpleManagementClientExtensions.cs
    startLine: 33
  assemblies:
  - Microsoft.WindowsAzure.Management.StorSimple
  namespace: Microsoft.WindowsAzure.Management.StorSimple
  summary: "\nThis is an RESTFul API to manage you StorSimple Objects\n"
  example: []
  syntax:
    content: public static class StorSimpleManagementClientExtensions
    content.vb: Public Module StorSimpleManagementClientExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.WindowsAzure.Management.StorSimple.StorSimpleManagementClientExtensions.GetOperationStatus(Microsoft.WindowsAzure.Management.StorSimple.IStorSimpleManagementClient,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.StorSimple.StorSimpleManagementClientExtensions.GetOperationStatus(Microsoft.WindowsAzure.Management.StorSimple.IStorSimpleManagementClient,System.String)
  id: GetOperationStatus(Microsoft.WindowsAzure.Management.StorSimple.IStorSimpleManagementClient,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.StorSimple.StorSimpleManagementClientExtensions
  langs:
  - csharp
  - vb
  name: GetOperationStatus(IStorSimpleManagementClient, String)
  nameWithType: StorSimpleManagementClientExtensions.GetOperationStatus(IStorSimpleManagementClient, String)
  fullName: Microsoft.WindowsAzure.Management.StorSimple.StorSimpleManagementClientExtensions.GetOperationStatus(Microsoft.WindowsAzure.Management.StorSimple.IStorSimpleManagementClient, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/StorSimple/StorSimple/Generated/StorSimpleManagementClientExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetOperationStatus
    path: src/ServiceManagement/StorSimple/StorSimple/Generated/StorSimpleManagementClientExtensions.cs
    startLine: 51
  assemblies:
  - Microsoft.WindowsAzure.Management.StorSimple
  namespace: Microsoft.WindowsAzure.Management.StorSimple
  summary: "\nThe Get Task Status returns the status of the specified task id.\nAfter calling an asynchronous task, you can call Get Task Status\nto determine whether the task has succeeded, failed, or is still\nin progress.\n"
  example: []
  syntax:
    content: public static TaskStatusInfo GetOperationStatus(this IStorSimpleManagementClient operations, string taskId)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetOperationStatus(operations As IStorSimpleManagementClient, taskId As String) As TaskStatusInfo
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.StorSimple.IStorSimpleManagementClient
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.StorSimple.IStorSimpleManagementClient.\n"
    - id: taskId
      type: System.String
      description: "\nRequired. The task Id for the request you wish to track.\n"
    return:
      type: Microsoft.WindowsAzure.Management.StorSimple.Models.TaskStatusInfo
      description: "\nInfo about the async task\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.StorSimple.StorSimpleManagementClientExtensions.GetOperationStatusAsync(Microsoft.WindowsAzure.Management.StorSimple.IStorSimpleManagementClient,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.StorSimple.StorSimpleManagementClientExtensions.GetOperationStatusAsync(Microsoft.WindowsAzure.Management.StorSimple.IStorSimpleManagementClient,System.String)
  id: GetOperationStatusAsync(Microsoft.WindowsAzure.Management.StorSimple.IStorSimpleManagementClient,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.StorSimple.StorSimpleManagementClientExtensions
  langs:
  - csharp
  - vb
  name: GetOperationStatusAsync(IStorSimpleManagementClient, String)
  nameWithType: StorSimpleManagementClientExtensions.GetOperationStatusAsync(IStorSimpleManagementClient, String)
  fullName: Microsoft.WindowsAzure.Management.StorSimple.StorSimpleManagementClientExtensions.GetOperationStatusAsync(Microsoft.WindowsAzure.Management.StorSimple.IStorSimpleManagementClient, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/StorSimple/StorSimple/Generated/StorSimpleManagementClientExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetOperationStatusAsync
    path: src/ServiceManagement/StorSimple/StorSimple/Generated/StorSimpleManagementClientExtensions.cs
    startLine: 76
  assemblies:
  - Microsoft.WindowsAzure.Management.StorSimple
  namespace: Microsoft.WindowsAzure.Management.StorSimple
  summary: "\nThe Get Task Status returns the status of the specified task id.\nAfter calling an asynchronous task, you can call Get Task Status\nto determine whether the task has succeeded, failed, or is still\nin progress.\n"
  example: []
  syntax:
    content: public static Task<TaskStatusInfo> GetOperationStatusAsync(this IStorSimpleManagementClient operations, string taskId)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetOperationStatusAsync(operations As IStorSimpleManagementClient, taskId As String) As Task(Of TaskStatusInfo)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.StorSimple.IStorSimpleManagementClient
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.StorSimple.IStorSimpleManagementClient.\n"
    - id: taskId
      type: System.String
      description: "\nRequired. The task Id for the request you wish to track.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.StorSimple.Models.TaskStatusInfo}
      description: "\nInfo about the async task\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.WindowsAzure.Management.StorSimple
  commentId: N:Microsoft.WindowsAzure.Management.StorSimple
  isExternal: false
  name: Microsoft.WindowsAzure.Management.StorSimple
  nameWithType: Microsoft.WindowsAzure.Management.StorSimple
  fullName: Microsoft.WindowsAzure.Management.StorSimple
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.Management.StorSimple.IStorSimpleManagementClient
  commentId: T:Microsoft.WindowsAzure.Management.StorSimple.IStorSimpleManagementClient
  parent: Microsoft.WindowsAzure.Management.StorSimple
  isExternal: false
  name: IStorSimpleManagementClient
  nameWithType: IStorSimpleManagementClient
  fullName: Microsoft.WindowsAzure.Management.StorSimple.IStorSimpleManagementClient
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.Management.StorSimple.Models.TaskStatusInfo
  commentId: T:Microsoft.WindowsAzure.Management.StorSimple.Models.TaskStatusInfo
  parent: Microsoft.WindowsAzure.Management.StorSimple.Models
  isExternal: false
  name: TaskStatusInfo
  nameWithType: TaskStatusInfo
  fullName: Microsoft.WindowsAzure.Management.StorSimple.Models.TaskStatusInfo
- uid: Microsoft.WindowsAzure.Management.StorSimple.Models
  commentId: N:Microsoft.WindowsAzure.Management.StorSimple.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.StorSimple.Models
  nameWithType: Microsoft.WindowsAzure.Management.StorSimple.Models
  fullName: Microsoft.WindowsAzure.Management.StorSimple.Models
- uid: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.StorSimple.Models.TaskStatusInfo}
  commentId: T:System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.StorSimple.Models.TaskStatusInfo}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TaskStatusInfo>
  nameWithType: Task<TaskStatusInfo>
  fullName: System.Threading.Tasks.Task<Microsoft.WindowsAzure.Management.StorSimple.Models.TaskStatusInfo>
  nameWithType.vb: Task(Of TaskStatusInfo)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.WindowsAzure.Management.StorSimple.Models.TaskStatusInfo)
  name.vb: Task(Of TaskStatusInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Management.StorSimple.Models.TaskStatusInfo
    name: TaskStatusInfo
    nameWithType: TaskStatusInfo
    fullName: Microsoft.WindowsAzure.Management.StorSimple.Models.TaskStatusInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Management.StorSimple.Models.TaskStatusInfo
    name: TaskStatusInfo
    nameWithType: TaskStatusInfo
    fullName: Microsoft.WindowsAzure.Management.StorSimple.Models.TaskStatusInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
