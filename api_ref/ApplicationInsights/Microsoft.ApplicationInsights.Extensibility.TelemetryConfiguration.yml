### YamlMime:ManagedReference
items:
- uid: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration
  commentId: T:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration
  id: TelemetryConfiguration
  parent: Microsoft.ApplicationInsights.Extensibility
  children:
  - Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.Active
  - Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.CreateDefault
  - Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.CreateFromConfiguration(System.String)
  - Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.DisableTelemetry
  - Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.Dispose
  - Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.InstrumentationKey
  - Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.TelemetryChannel
  - Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.TelemetryInitializers
  - Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.TelemetryProcessorChainBuilder
  - Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.TelemetryProcessors
  langs:
  - csharp
  - vb
  name: TelemetryConfiguration
  nameWithType: TelemetryConfiguration
  fullName: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration
  type: Class
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/TelemetryConfiguration.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: TelemetryConfiguration
    path: src/Core/Managed/Shared/Extensibility/TelemetryConfiguration.cs
    startLine: 18
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility
  summary: "\nEncapsulates the global telemetry configuration typically loaded from the ApplicationInsights.config file.\n"
  remarks: "\nAll <xref href=\"Microsoft.ApplicationInsights.DataContracts.TelemetryContext\" data-throw-if-not-resolved=\"false\"></xref> objects are initialized using the <xref href=\"Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.Active\" data-throw-if-not-resolved=\"false\"></xref> \ntelemetry configuration provided by this class.\n"
  example: []
  syntax:
    content: 'public sealed class TelemetryConfiguration : IDisposable'
    content.vb: >-
      Public NotInheritable Class TelemetryConfiguration
          Inherits IDisposable
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.Active
  commentId: P:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.Active
  id: Active
  parent: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration
  langs:
  - csharp
  - vb
  name: Active
  nameWithType: TelemetryConfiguration.Active
  fullName: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.Active
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/TelemetryConfiguration.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Active
    path: src/Core/Managed/Shared/Extensibility/TelemetryConfiguration.cs
    startLine: 34
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility
  summary: "\nGets the active <xref href=\"Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration\" data-throw-if-not-resolved=\"false\"></xref> instance loaded from the ApplicationInsights.config file. \nIf the configuration file does not exist, the active configuration instance is initialized with minimum defaults \nneeded to send telemetry to Application Insights.\n"
  example: []
  syntax:
    content: public static TelemetryConfiguration Active { get; }
    content.vb: Public Shared ReadOnly Property Active As TelemetryConfiguration
    parameters: []
    return:
      type: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration
  overload: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.Active*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.InstrumentationKey
  commentId: P:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.InstrumentationKey
  id: InstrumentationKey
  parent: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration
  langs:
  - csharp
  - vb
  name: InstrumentationKey
  nameWithType: TelemetryConfiguration.InstrumentationKey
  fullName: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.InstrumentationKey
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/TelemetryConfiguration.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: InstrumentationKey
    path: src/Core/Managed/Shared/Extensibility/TelemetryConfiguration.cs
    startLine: 71
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility
  summary: "\nGets or sets the default instrumentation key for the application.\n"
  remarks: "\nThis instrumentation key value is used by default by all <xref href=\"Microsoft.ApplicationInsights.TelemetryClient\" data-throw-if-not-resolved=\"false\"></xref> instances\ncreated in the application. This value can be overwritten by setting the <xref href=\"Microsoft.ApplicationInsights.DataContracts.TelemetryContext.InstrumentationKey\" data-throw-if-not-resolved=\"false\"></xref>\nproperty of the <xref href=\"Microsoft.ApplicationInsights.TelemetryClient.Context\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public string InstrumentationKey { get; set; }
    content.vb: Public Property InstrumentationKey As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.InstrumentationKey*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.DisableTelemetry
  commentId: P:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.DisableTelemetry
  id: DisableTelemetry
  parent: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration
  langs:
  - csharp
  - vb
  name: DisableTelemetry
  nameWithType: TelemetryConfiguration.DisableTelemetry
  fullName: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.DisableTelemetry
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/TelemetryConfiguration.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: DisableTelemetry
    path: src/Core/Managed/Shared/Extensibility/TelemetryConfiguration.cs
    startLine: 96
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility
  summary: "\nGets or sets a value indicating whether sending of telemetry to Application Insights is disabled.\n"
  remarks: "\nThis disable tracking setting value is used by default by all <xref href=\"Microsoft.ApplicationInsights.TelemetryClient\" data-throw-if-not-resolved=\"false\"></xref> instances\ncreated in the application. \n"
  example: []
  syntax:
    content: public bool DisableTelemetry { get; set; }
    content.vb: Public Property DisableTelemetry As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.DisableTelemetry*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.TelemetryInitializers
  commentId: P:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.TelemetryInitializers
  id: TelemetryInitializers
  parent: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration
  langs:
  - csharp
  - vb
  name: TelemetryInitializers
  nameWithType: TelemetryConfiguration.TelemetryInitializers
  fullName: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.TelemetryInitializers
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/TelemetryConfiguration.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: TelemetryInitializers
    path: src/Core/Managed/Shared/Extensibility/TelemetryConfiguration.cs
    startLine: 129
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility
  summary: "\nGets the list of <xref href=\"Microsoft.ApplicationInsights.Extensibility.ITelemetryInitializer\" data-throw-if-not-resolved=\"false\"></xref> objects that supply additional information about telemetry.\n"
  remarks: "\nTelemetry initializers extend Application Insights telemetry collection by supplying additional information \nabout individual <xref href=\"Microsoft.ApplicationInsights.Channel.ITelemetry\" data-throw-if-not-resolved=\"false\"></xref> items, such as <xref href=\"Microsoft.ApplicationInsights.Channel.ITelemetry.Timestamp\" data-throw-if-not-resolved=\"false\"></xref>. A <xref href=\"Microsoft.ApplicationInsights.TelemetryClient\" data-throw-if-not-resolved=\"false\"></xref>\ninvokes telemetry initializers each time <xref href=\"Microsoft.ApplicationInsights.TelemetryClient.Track(Microsoft.ApplicationInsights.Channel.ITelemetry)\" data-throw-if-not-resolved=\"false\"></xref> method is called.\nThe default list of telemetry initializers is provided by the Application Insights NuGet packages and loaded from \nthe ApplicationInsights.config file located in the application directory. \n"
  example: []
  syntax:
    content: public IList<ITelemetryInitializer> TelemetryInitializers { get; }
    content.vb: Public ReadOnly Property TelemetryInitializers As IList(Of ITelemetryInitializer)
    parameters: []
    return:
      type: IList{Microsoft.ApplicationInsights.Extensibility.ITelemetryInitializer}
  overload: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.TelemetryInitializers*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.TelemetryProcessors
  commentId: P:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.TelemetryProcessors
  id: TelemetryProcessors
  parent: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration
  langs:
  - csharp
  - vb
  name: TelemetryProcessors
  nameWithType: TelemetryConfiguration.TelemetryProcessors
  fullName: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.TelemetryProcessors
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/TelemetryConfiguration.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: TelemetryProcessors
    path: src/Core/Managed/Shared/Extensibility/TelemetryConfiguration.cs
    startLine: 137
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility
  summary: "\nGets a readonly collection of TelemetryProcessors.\n"
  example: []
  syntax:
    content: public ReadOnlyCollection<ITelemetryProcessor> TelemetryProcessors { get; }
    content.vb: Public ReadOnly Property TelemetryProcessors As ReadOnlyCollection(Of ITelemetryProcessor)
    parameters: []
    return:
      type: ReadOnlyCollection{Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor}
  overload: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.TelemetryProcessors*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.TelemetryProcessorChainBuilder
  commentId: P:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.TelemetryProcessorChainBuilder
  id: TelemetryProcessorChainBuilder
  parent: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration
  langs:
  - csharp
  - vb
  name: TelemetryProcessorChainBuilder
  nameWithType: TelemetryConfiguration.TelemetryProcessorChainBuilder
  fullName: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.TelemetryProcessorChainBuilder
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/TelemetryConfiguration.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: TelemetryProcessorChainBuilder
    path: src/Core/Managed/Shared/Extensibility/TelemetryConfiguration.cs
    startLine: 148
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility
  summary: "\nGets the TelemetryProcessorChainBuilder which can build and populate TelemetryProcessors in the TelemetryConfiguration.\n"
  example: []
  syntax:
    content: public TelemetryProcessorChainBuilder TelemetryProcessorChainBuilder { get; }
    content.vb: Public ReadOnly Property TelemetryProcessorChainBuilder As TelemetryProcessorChainBuilder
    parameters: []
    return:
      type: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder
  overload: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.TelemetryProcessorChainBuilder*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.TelemetryChannel
  commentId: P:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.TelemetryChannel
  id: TelemetryChannel
  parent: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration
  langs:
  - csharp
  - vb
  name: TelemetryChannel
  nameWithType: TelemetryConfiguration.TelemetryChannel
  fullName: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.TelemetryChannel
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/TelemetryConfiguration.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: TelemetryChannel
    path: src/Core/Managed/Shared/Extensibility/TelemetryConfiguration.cs
    startLine: 165
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility
  summary: "\nGets or sets the telemetry channel.\n"
  example: []
  syntax:
    content: public ITelemetryChannel TelemetryChannel { get; set; }
    content.vb: Public Property TelemetryChannel As ITelemetryChannel
    parameters: []
    return:
      type: Microsoft.ApplicationInsights.Channel.ITelemetryChannel
  overload: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.TelemetryChannel*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.CreateDefault
  commentId: M:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.CreateDefault
  id: CreateDefault
  parent: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration
  langs:
  - csharp
  - vb
  name: CreateDefault()
  nameWithType: TelemetryConfiguration.CreateDefault()
  fullName: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.CreateDefault()
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/TelemetryConfiguration.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: CreateDefault
    path: src/Core/Managed/Shared/Extensibility/TelemetryConfiguration.cs
    startLine: 198
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility
  summary: "\nCreates a new <xref href=\"Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration\" data-throw-if-not-resolved=\"false\"></xref> instance loaded from the ApplicationInsights.config file.\nIf the configuration file does not exist, the new configuration instance is initialized with minimum defaults \nneeded to send telemetry to Application Insights.\n"
  example: []
  syntax:
    content: public static TelemetryConfiguration CreateDefault()
    content.vb: Public Shared Function CreateDefault As TelemetryConfiguration
    return:
      type: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration
  overload: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.CreateDefault*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.CreateFromConfiguration(System.String)
  commentId: M:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.CreateFromConfiguration(System.String)
  id: CreateFromConfiguration(System.String)
  parent: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration
  langs:
  - csharp
  - vb
  name: CreateFromConfiguration(String)
  nameWithType: TelemetryConfiguration.CreateFromConfiguration(String)
  fullName: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.CreateFromConfiguration(System.String)
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/TelemetryConfiguration.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: CreateFromConfiguration
    path: src/Core/Managed/Shared/Extensibility/TelemetryConfiguration.cs
    startLine: 211
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility
  summary: "\nCreates a new <xref href=\"Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration\" data-throw-if-not-resolved=\"false\"></xref> instance loaded from the specified configuration.\n"
  example: []
  syntax:
    content: public static TelemetryConfiguration CreateFromConfiguration(string config)
    content.vb: Public Shared Function CreateFromConfiguration(config As String) As TelemetryConfiguration
    parameters:
    - id: config
      type: System.String
      description: An xml serialized configuration.
    return:
      type: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration
  overload: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.CreateFromConfiguration*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.Dispose
  commentId: M:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.Dispose
  id: Dispose
  parent: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: TelemetryConfiguration.Dispose()
  fullName: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.Dispose()
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/TelemetryConfiguration.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Dispose
    path: src/Core/Managed/Shared/Extensibility/TelemetryConfiguration.cs
    startLine: 226
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility
  summary: "\nReleases resources used by the current instance of the <xref href=\"Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.Dispose*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.ApplicationInsights.DataContracts.TelemetryContext
  commentId: T:Microsoft.ApplicationInsights.DataContracts.TelemetryContext
  parent: Microsoft.ApplicationInsights.DataContracts
  isExternal: false
  name: TelemetryContext
  nameWithType: TelemetryContext
  fullName: Microsoft.ApplicationInsights.DataContracts.TelemetryContext
- uid: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.Active
  commentId: P:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.Active
- uid: Microsoft.ApplicationInsights.Extensibility
  commentId: N:Microsoft.ApplicationInsights.Extensibility
  isExternal: false
  name: Microsoft.ApplicationInsights.Extensibility
  nameWithType: Microsoft.ApplicationInsights.Extensibility
  fullName: Microsoft.ApplicationInsights.Extensibility
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.ApplicationInsights.DataContracts
  commentId: N:Microsoft.ApplicationInsights.DataContracts
  isExternal: false
  name: Microsoft.ApplicationInsights.DataContracts
  nameWithType: Microsoft.ApplicationInsights.DataContracts
  fullName: Microsoft.ApplicationInsights.DataContracts
- uid: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration
  commentId: T:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration
  parent: Microsoft.ApplicationInsights.Extensibility
  isExternal: false
  name: TelemetryConfiguration
  nameWithType: TelemetryConfiguration
  fullName: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration
- uid: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.Active*
  commentId: Overload:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.Active
  isExternal: false
  name: Active
  nameWithType: TelemetryConfiguration.Active
  fullName: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.Active
- uid: Microsoft.ApplicationInsights.TelemetryClient
  commentId: T:Microsoft.ApplicationInsights.TelemetryClient
  parent: Microsoft.ApplicationInsights
  isExternal: false
  name: TelemetryClient
  nameWithType: TelemetryClient
  fullName: Microsoft.ApplicationInsights.TelemetryClient
- uid: Microsoft.ApplicationInsights.DataContracts.TelemetryContext.InstrumentationKey
  commentId: P:Microsoft.ApplicationInsights.DataContracts.TelemetryContext.InstrumentationKey
- uid: Microsoft.ApplicationInsights.TelemetryClient.Context
  commentId: P:Microsoft.ApplicationInsights.TelemetryClient.Context
- uid: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.InstrumentationKey*
  commentId: Overload:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.InstrumentationKey
  isExternal: false
  name: InstrumentationKey
  nameWithType: TelemetryConfiguration.InstrumentationKey
  fullName: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.InstrumentationKey
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.ApplicationInsights
  commentId: N:Microsoft.ApplicationInsights
  isExternal: false
  name: Microsoft.ApplicationInsights
  nameWithType: Microsoft.ApplicationInsights
  fullName: Microsoft.ApplicationInsights
- uid: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.DisableTelemetry*
  commentId: Overload:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.DisableTelemetry
  isExternal: false
  name: DisableTelemetry
  nameWithType: TelemetryConfiguration.DisableTelemetry
  fullName: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.DisableTelemetry
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.ApplicationInsights.Extensibility.ITelemetryInitializer
  commentId: T:Microsoft.ApplicationInsights.Extensibility.ITelemetryInitializer
  parent: Microsoft.ApplicationInsights.Extensibility
  isExternal: false
  name: ITelemetryInitializer
  nameWithType: ITelemetryInitializer
  fullName: Microsoft.ApplicationInsights.Extensibility.ITelemetryInitializer
- uid: Microsoft.ApplicationInsights.Channel.ITelemetry
  commentId: T:Microsoft.ApplicationInsights.Channel.ITelemetry
  parent: Microsoft.ApplicationInsights.Channel
  isExternal: false
  name: ITelemetry
  nameWithType: ITelemetry
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetry
- uid: Microsoft.ApplicationInsights.Channel.ITelemetry.Timestamp
  commentId: P:Microsoft.ApplicationInsights.Channel.ITelemetry.Timestamp
  parent: Microsoft.ApplicationInsights.Channel.ITelemetry
  isExternal: false
  name: Timestamp
  nameWithType: ITelemetry.Timestamp
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetry.Timestamp
- uid: Microsoft.ApplicationInsights.TelemetryClient.Track(Microsoft.ApplicationInsights.Channel.ITelemetry)
  commentId: M:Microsoft.ApplicationInsights.TelemetryClient.Track(Microsoft.ApplicationInsights.Channel.ITelemetry)
- uid: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.TelemetryInitializers*
  commentId: Overload:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.TelemetryInitializers
  isExternal: false
  name: TelemetryInitializers
  nameWithType: TelemetryConfiguration.TelemetryInitializers
  fullName: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.TelemetryInitializers
- uid: IList{Microsoft.ApplicationInsights.Extensibility.ITelemetryInitializer}
  commentId: '!:IList{Microsoft.ApplicationInsights.Extensibility.ITelemetryInitializer}'
  definition: IList`1
  name: IList<ITelemetryInitializer>
  nameWithType: IList<ITelemetryInitializer>
  fullName: IList<Microsoft.ApplicationInsights.Extensibility.ITelemetryInitializer>
  nameWithType.vb: IList(Of ITelemetryInitializer)
  fullname.vb: IList(Of Microsoft.ApplicationInsights.Extensibility.ITelemetryInitializer)
  name.vb: IList(Of ITelemetryInitializer)
  spec.csharp:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ApplicationInsights.Extensibility.ITelemetryInitializer
    name: ITelemetryInitializer
    nameWithType: ITelemetryInitializer
    fullName: Microsoft.ApplicationInsights.Extensibility.ITelemetryInitializer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ApplicationInsights.Extensibility.ITelemetryInitializer
    name: ITelemetryInitializer
    nameWithType: ITelemetryInitializer
    fullName: Microsoft.ApplicationInsights.Extensibility.ITelemetryInitializer
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ApplicationInsights.Channel
  commentId: N:Microsoft.ApplicationInsights.Channel
  isExternal: false
  name: Microsoft.ApplicationInsights.Channel
  nameWithType: Microsoft.ApplicationInsights.Channel
  fullName: Microsoft.ApplicationInsights.Channel
- uid: IList`1
  isExternal: true
  name: IList<>
  nameWithType: IList<>
  fullName: IList<>
  nameWithType.vb: IList(Of )
  fullname.vb: IList(Of )
  name.vb: IList(Of )
  spec.csharp:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.TelemetryProcessors*
  commentId: Overload:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.TelemetryProcessors
  isExternal: false
  name: TelemetryProcessors
  nameWithType: TelemetryConfiguration.TelemetryProcessors
  fullName: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.TelemetryProcessors
- uid: ReadOnlyCollection{Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor}
  commentId: '!:ReadOnlyCollection{Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor}'
  definition: ReadOnlyCollection`1
  name: ReadOnlyCollection<ITelemetryProcessor>
  nameWithType: ReadOnlyCollection<ITelemetryProcessor>
  fullName: ReadOnlyCollection<Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor>
  nameWithType.vb: ReadOnlyCollection(Of ITelemetryProcessor)
  fullname.vb: ReadOnlyCollection(Of Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor)
  name.vb: ReadOnlyCollection(Of ITelemetryProcessor)
  spec.csharp:
  - uid: ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor
    name: ITelemetryProcessor
    nameWithType: ITelemetryProcessor
    fullName: Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor
    name: ITelemetryProcessor
    nameWithType: ITelemetryProcessor
    fullName: Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: ReadOnlyCollection`1
  isExternal: true
  name: ReadOnlyCollection<>
  nameWithType: ReadOnlyCollection<>
  fullName: ReadOnlyCollection<>
  nameWithType.vb: ReadOnlyCollection(Of )
  fullname.vb: ReadOnlyCollection(Of )
  name.vb: ReadOnlyCollection(Of )
  spec.csharp:
  - uid: ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.TelemetryProcessorChainBuilder*
  commentId: Overload:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.TelemetryProcessorChainBuilder
  isExternal: false
  name: TelemetryProcessorChainBuilder
  nameWithType: TelemetryConfiguration.TelemetryProcessorChainBuilder
  fullName: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.TelemetryProcessorChainBuilder
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder
  commentId: T:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation
  isExternal: false
  name: TelemetryProcessorChainBuilder
  nameWithType: TelemetryProcessorChainBuilder
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation
  commentId: N:Microsoft.ApplicationInsights.Extensibility.Implementation
  isExternal: false
  name: Microsoft.ApplicationInsights.Extensibility.Implementation
  nameWithType: Microsoft.ApplicationInsights.Extensibility.Implementation
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation
- uid: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.TelemetryChannel*
  commentId: Overload:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.TelemetryChannel
  isExternal: false
  name: TelemetryChannel
  nameWithType: TelemetryConfiguration.TelemetryChannel
  fullName: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.TelemetryChannel
- uid: Microsoft.ApplicationInsights.Channel.ITelemetryChannel
  commentId: T:Microsoft.ApplicationInsights.Channel.ITelemetryChannel
  parent: Microsoft.ApplicationInsights.Channel
  isExternal: false
  name: ITelemetryChannel
  nameWithType: ITelemetryChannel
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetryChannel
- uid: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.CreateDefault*
  commentId: Overload:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.CreateDefault
  isExternal: false
  name: CreateDefault
  nameWithType: TelemetryConfiguration.CreateDefault
  fullName: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.CreateDefault
- uid: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.CreateFromConfiguration*
  commentId: Overload:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.CreateFromConfiguration
  isExternal: false
  name: CreateFromConfiguration
  nameWithType: TelemetryConfiguration.CreateFromConfiguration
  fullName: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.CreateFromConfiguration
- uid: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.Dispose*
  commentId: Overload:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.Dispose
  isExternal: false
  name: Dispose
  nameWithType: TelemetryConfiguration.Dispose
  fullName: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.Dispose
