items:
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext
  commentId: T:Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext
  id: DeviceContext
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation
  children:
  - Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext.Id
  - Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext.Language
  - Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext.Model
  - Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext.NetworkType
  - Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext.OemName
  - Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext.OperatingSystem
  - Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext.ScreenResolution
  - Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext.Type
  langs:
  - csharp
  - vb
  name: DeviceContext
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext
  type: Class
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/DeviceContext.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: DeviceContext
    path: src/Core/Managed/Shared/Extensibility/Implementation/DeviceContext.cs
    startLine: 8
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nEncapsulates information about a device where an application is running.\n"
  example: []
  syntax:
    content: 'public sealed class DeviceContext : object'
    content.vb: >-
      Public NotInheritable Class DeviceContext
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext.Type
  commentId: P:Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext.Type
  id: Type
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext
  langs:
  - csharp
  - vb
  name: Type
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext.Type
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/DeviceContext.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Type
    path: src/Core/Managed/Shared/Extensibility/Implementation/DeviceContext.cs
    startLine: 20
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nGets or sets the type for the current device.\n"
  example: []
  syntax:
    content: public string Type { get; set; }
    content.vb: Public Property Type As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext.Id
  commentId: P:Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext.Id
  id: Id
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext
  langs:
  - csharp
  - vb
  name: Id
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext.Id
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/DeviceContext.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Id
    path: src/Core/Managed/Shared/Extensibility/Implementation/DeviceContext.cs
    startLine: 29
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nGets or sets a device unique ID.\n"
  example: []
  syntax:
    content: public string Id { get; set; }
    content.vb: Public Property Id As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext.OperatingSystem
  commentId: P:Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext.OperatingSystem
  id: OperatingSystem
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext
  langs:
  - csharp
  - vb
  name: OperatingSystem
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext.OperatingSystem
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/DeviceContext.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: OperatingSystem
    path: src/Core/Managed/Shared/Extensibility/Implementation/DeviceContext.cs
    startLine: 38
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nGets or sets the operating system name.\n"
  example: []
  syntax:
    content: public string OperatingSystem { get; set; }
    content.vb: Public Property OperatingSystem As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext.OemName
  commentId: P:Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext.OemName
  id: OemName
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext
  langs:
  - csharp
  - vb
  name: OemName
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext.OemName
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/DeviceContext.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: OemName
    path: src/Core/Managed/Shared/Extensibility/Implementation/DeviceContext.cs
    startLine: 47
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nGets or sets the device OEM for the current device.\n"
  example: []
  syntax:
    content: public string OemName { get; set; }
    content.vb: Public Property OemName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext.Model
  commentId: P:Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext.Model
  id: Model
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext
  langs:
  - csharp
  - vb
  name: Model
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext.Model
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/DeviceContext.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Model
    path: src/Core/Managed/Shared/Extensibility/Implementation/DeviceContext.cs
    startLine: 56
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nGets or sets the device model for the current device.\n"
  example: []
  syntax:
    content: public string Model { get; set; }
    content.vb: Public Property Model As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext.NetworkType
  commentId: P:Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext.NetworkType
  id: NetworkType
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext
  langs:
  - csharp
  - vb
  name: NetworkType
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext.NetworkType
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/DeviceContext.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: NetworkType
    path: src/Core/Managed/Shared/Extensibility/Implementation/DeviceContext.cs
    startLine: 66
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nGets or sets the <a href=\"http://www.iana.org/assignments/ianaiftype-mib/ianaiftype-mib\">IANA interface type</a> \nfor the internet connected network adapter.\n"
  example: []
  syntax:
    content: public string NetworkType { get; set; }
    content.vb: Public Property NetworkType As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext.ScreenResolution
  commentId: P:Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext.ScreenResolution
  id: ScreenResolution
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext
  langs:
  - csharp
  - vb
  name: ScreenResolution
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext.ScreenResolution
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/DeviceContext.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: ScreenResolution
    path: src/Core/Managed/Shared/Extensibility/Implementation/DeviceContext.cs
    startLine: 75
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nGets or sets the current application screen resolution.\n"
  example: []
  syntax:
    content: public string ScreenResolution { get; set; }
    content.vb: Public Property ScreenResolution As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext.Language
  commentId: P:Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext.Language
  id: Language
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext
  langs:
  - csharp
  - vb
  name: Language
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext.Language
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/DeviceContext.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Language
    path: src/Core/Managed/Shared/Extensibility/Implementation/DeviceContext.cs
    startLine: 84
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nGets or sets the current display language of the operating system.\n"
  example: []
  syntax:
    content: public string Language { get; set; }
    content.vb: Public Property Language As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation
  isExternal: false
  name: Microsoft.ApplicationInsights.Extensibility.Implementation
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation
- uid: System.Object
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.String
  isExternal: true
  name: String
  fullName: System.String
