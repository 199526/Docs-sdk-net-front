items:
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry
  commentId: T:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry
  id: OperationTelemetry
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation
  children:
  - Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Context
  - Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Duration
  - Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Id
  - Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize
  - Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Name
  - Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Properties
  - Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Sanitize
  - Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Sequence
  - Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.StartTime
  - Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Success
  - Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Timestamp
  langs:
  - csharp
  - vb
  name: OperationTelemetry
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry
  type: Class
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/OperationTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: OperationTelemetry
    path: src/Core/Managed/Shared/Extensibility/Implementation/OperationTelemetry.cs
    startLine: 10
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nBase class for telemetry types representing duration in time.\n"
  example: []
  syntax:
    content: 'public abstract class OperationTelemetry : object, ITelemetry, ISupportProperties'
    content.vb: >-
      Public MustInherit Class OperationTelemetry
          Inherits Object
          Implements ITelemetry, ISupportProperties
  inheritance:
  - System.Object
  implements:
  - Microsoft.ApplicationInsights.Channel.ITelemetry
  - Microsoft.ApplicationInsights.DataContracts.ISupportProperties
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.StartTime
  commentId: P:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.StartTime
  id: StartTime
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry
  langs:
  - csharp
  - vb
  name: StartTime
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.StartTime
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/OperationTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: StartTime
    path: src/Core/Managed/Shared/Extensibility/Implementation/OperationTelemetry.cs
    startLine: 15
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nGets or sets the start time of the operation.\n"
  example: []
  syntax:
    content: public abstract DateTimeOffset StartTime { get; set; }
    content.vb: Public MustOverride Property StartTime As DateTimeOffset
    parameters: []
    return:
      type: DateTimeOffset
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Id
  commentId: P:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Id
  id: Id
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry
  langs:
  - csharp
  - vb
  name: Id
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Id
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/OperationTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Id
    path: src/Core/Managed/Shared/Extensibility/Implementation/OperationTelemetry.cs
    startLine: 20
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nGets or sets Operation ID.\n"
  example: []
  syntax:
    content: public abstract string Id { get; set; }
    content.vb: Public MustOverride Property Id As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Name
  commentId: P:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Name
  id: Name
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry
  langs:
  - csharp
  - vb
  name: Name
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Name
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/OperationTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Name
    path: src/Core/Managed/Shared/Extensibility/Implementation/OperationTelemetry.cs
    startLine: 25
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nGets or sets the name of the operation.\n"
  example: []
  syntax:
    content: public abstract string Name { get; set; }
    content.vb: Public MustOverride Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Success
  commentId: P:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Success
  id: Success
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry
  langs:
  - csharp
  - vb
  name: Success
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Success
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/OperationTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Success
    path: src/Core/Managed/Shared/Extensibility/Implementation/OperationTelemetry.cs
    startLine: 30
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nGets or sets whether operation has finished successfully.\n"
  example: []
  syntax:
    content: public abstract bool ? Success { get; set; }
    content.vb: Public MustOverride Property Success As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Duration
  commentId: P:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Duration
  id: Duration
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry
  langs:
  - csharp
  - vb
  name: Duration
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Duration
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/OperationTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Duration
    path: src/Core/Managed/Shared/Extensibility/Implementation/OperationTelemetry.cs
    startLine: 35
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nGets or sets the duration of the operation.\n"
  example: []
  syntax:
    content: public abstract TimeSpan Duration { get; set; }
    content.vb: Public MustOverride Property Duration As TimeSpan
    parameters: []
    return:
      type: TimeSpan
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Properties
  commentId: P:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Properties
  id: Properties
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry
  langs:
  - csharp
  - vb
  name: Properties
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Properties
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/OperationTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Properties
    path: src/Core/Managed/Shared/Extensibility/Implementation/OperationTelemetry.cs
    startLine: 40
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nGets the custom properties collection.\n"
  example: []
  syntax:
    content: public abstract IDictionary<string, string> Properties { get; }
    content.vb: Public MustOverride ReadOnly Property Properties As IDictionary(Of String, String)
    parameters: []
    return:
      type: IDictionary{System.String,System.String}
  implements:
  - Microsoft.ApplicationInsights.DataContracts.ISupportProperties.Properties
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Timestamp
  commentId: P:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Timestamp
  id: Timestamp
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry
  langs:
  - csharp
  - vb
  name: Timestamp
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Timestamp
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/OperationTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Timestamp
    path: src/Core/Managed/Shared/Extensibility/Implementation/OperationTelemetry.cs
    startLine: 45
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nGets or sets the timestamp for the operation.\n"
  example: []
  syntax:
    content: public abstract DateTimeOffset Timestamp { get; set; }
    content.vb: Public MustOverride Property Timestamp As DateTimeOffset
    parameters: []
    return:
      type: DateTimeOffset
  implements:
  - Microsoft.ApplicationInsights.Channel.ITelemetry.Timestamp
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Context
  commentId: P:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Context
  id: Context
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry
  langs:
  - csharp
  - vb
  name: Context
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Context
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/OperationTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Context
    path: src/Core/Managed/Shared/Extensibility/Implementation/OperationTelemetry.cs
    startLine: 50
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nGets the object that contains contextual information about the application at the time when it handled the request.\n"
  example: []
  syntax:
    content: public abstract TelemetryContext Context { get; }
    content.vb: Public MustOverride ReadOnly Property Context As TelemetryContext
    parameters: []
    return:
      type: Microsoft.ApplicationInsights.DataContracts.TelemetryContext
  implements:
  - Microsoft.ApplicationInsights.Channel.ITelemetry.Context
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Sequence
  commentId: P:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Sequence
  id: Sequence
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry
  langs:
  - csharp
  - vb
  name: Sequence
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Sequence
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/OperationTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Sequence
    path: src/Core/Managed/Shared/Extensibility/Implementation/OperationTelemetry.cs
    startLine: 55
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nGets or sets the value that defines absolute order of the telemetry item.\n"
  example: []
  syntax:
    content: public abstract string Sequence { get; set; }
    content.vb: Public MustOverride Property Sequence As String
    parameters: []
    return:
      type: System.String
  implements:
  - Microsoft.ApplicationInsights.Channel.ITelemetry.Sequence
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize
  commentId: M:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize
  id: Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize
  isEii: true
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry
  langs:
  - csharp
  - vb
  name: ITelemetry.Sanitize()
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize()
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/OperationTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
    path: src/Core/Managed/Shared/Extensibility/Implementation/OperationTelemetry.cs
    startLine: 60
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nSanitizes the properties based on constraints.\n"
  example: []
  syntax:
    content: void ITelemetry.Sanitize()
    content.vb: Sub Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize Implements ITelemetry.Sanitize
  implements:
  - Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
  name.vb: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize()
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Sanitize
  commentId: M:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Sanitize
  id: Sanitize
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry
  langs:
  - csharp
  - vb
  name: Sanitize()
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Sanitize()
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/OperationTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Sanitize
    path: src/Core/Managed/Shared/Extensibility/Implementation/OperationTelemetry.cs
    startLine: 68
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nAllow to call OperationTelemetry.Sanitize method from child classes.\n"
  example: []
  syntax:
    content: protected void Sanitize()
    content.vb: Protected Sub Sanitize
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation
  isExternal: false
  name: Microsoft.ApplicationInsights.Extensibility.Implementation
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation
- uid: System.Object
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.ApplicationInsights.Channel.ITelemetry
  parent: Microsoft.ApplicationInsights.Channel
  isExternal: false
  name: ITelemetry
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetry
- uid: Microsoft.ApplicationInsights.DataContracts.ISupportProperties
  parent: Microsoft.ApplicationInsights.DataContracts
  isExternal: false
  name: ISupportProperties
  fullName: Microsoft.ApplicationInsights.DataContracts.ISupportProperties
- uid: Microsoft.ApplicationInsights.Channel
  isExternal: false
  name: Microsoft.ApplicationInsights.Channel
  fullName: Microsoft.ApplicationInsights.Channel
- uid: Microsoft.ApplicationInsights.DataContracts
  isExternal: false
  name: Microsoft.ApplicationInsights.DataContracts
  fullName: Microsoft.ApplicationInsights.DataContracts
- uid: DateTimeOffset
  isExternal: true
  name: DateTimeOffset
  fullName: DateTimeOffset
- uid: System.String
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Nullable{System.Boolean}
  definition: System.Nullable`1
  name: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  fullName: System.Nullable<>
  fullname.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: TimeSpan
  isExternal: true
  name: TimeSpan
  fullName: TimeSpan
- uid: Microsoft.ApplicationInsights.DataContracts.ISupportProperties.Properties
  parent: Microsoft.ApplicationInsights.DataContracts.ISupportProperties
  isExternal: false
  name: Properties
  fullName: Microsoft.ApplicationInsights.DataContracts.ISupportProperties.Properties
- uid: IDictionary{System.String,System.String}
  definition: IDictionary`2
  name: IDictionary<String, String>
  fullName: IDictionary<System.String, System.String>
  fullname.vb: IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: IDictionary`2
  isExternal: true
  name: IDictionary<, >
  fullName: IDictionary<, >
  fullname.vb: IDictionary(Of , )
  name.vb: IDictionary(Of , )
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: ', '
    fullName: ', '
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: ', '
    fullName: ', '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: Microsoft.ApplicationInsights.Channel.ITelemetry.Timestamp
  parent: Microsoft.ApplicationInsights.Channel.ITelemetry
  isExternal: false
  name: Timestamp
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetry.Timestamp
- uid: Microsoft.ApplicationInsights.Channel.ITelemetry.Context
  parent: Microsoft.ApplicationInsights.Channel.ITelemetry
  isExternal: false
  name: Context
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetry.Context
- uid: Microsoft.ApplicationInsights.DataContracts.TelemetryContext
  parent: Microsoft.ApplicationInsights.DataContracts
  isExternal: false
  name: TelemetryContext
  fullName: Microsoft.ApplicationInsights.DataContracts.TelemetryContext
- uid: Microsoft.ApplicationInsights.Channel.ITelemetry.Sequence
  parent: Microsoft.ApplicationInsights.Channel.ITelemetry
  isExternal: false
  name: Sequence
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetry.Sequence
- uid: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
  parent: Microsoft.ApplicationInsights.Channel.ITelemetry
  isExternal: false
  name: Sanitize()
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize()
  spec.csharp:
  - uid: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
    name: Sanitize
    fullName: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
    name: Sanitize
    fullName: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
  - name: (
    fullName: (
  - name: )
    fullName: )
