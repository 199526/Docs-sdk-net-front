items:
- uid: Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry
  commentId: T:Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry
  id: ExceptionTelemetry
  parent: Microsoft.ApplicationInsights.DataContracts
  children:
  - Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.#ctor
  - Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.#ctor(Exception)
  - Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.Context
  - Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.Exception
  - Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.HandledAt
  - Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.Message
  - Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.Metrics
  - Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize
  - Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.Microsoft#ApplicationInsights#DataContracts#ISupportSampling#SamplingPercentage
  - Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.Properties
  - Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.Sequence
  - Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.SeverityLevel
  - Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.Timestamp
  langs:
  - csharp
  - vb
  name: ExceptionTelemetry
  fullName: Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry
  type: Class
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/ExceptionTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: ExceptionTelemetry
    path: src/Core/Managed/Shared/DataContracts/ExceptionTelemetry.cs
    startLine: 14
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nTelemetry type used to track exceptions.\n"
  example: []
  syntax:
    content: 'public sealed class ExceptionTelemetry : object, ITelemetry, ISupportProperties, ISupportSampling'
    content.vb: >-
      Public NotInheritable Class ExceptionTelemetry
          Inherits Object
          Implements ITelemetry, ISupportProperties, ISupportSampling
  inheritance:
  - System.Object
  implements:
  - Microsoft.ApplicationInsights.Channel.ITelemetry
  - Microsoft.ApplicationInsights.DataContracts.ISupportProperties
  - Microsoft.ApplicationInsights.DataContracts.ISupportSampling
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.#ctor
  commentId: M:Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.#ctor
  id: '#ctor'
  parent: Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry
  langs:
  - csharp
  - vb
  name: ExceptionTelemetry()
  fullName: Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.ExceptionTelemetry()
  type: Constructor
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/ExceptionTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: .ctor
    path: src/Core/Managed/Shared/DataContracts/ExceptionTelemetry.cs
    startLine: 29
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry\" data-throw-if-not-resolved=\"false\"></xref> class with empty properties.\n"
  example: []
  syntax:
    content: public ExceptionTelemetry()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.#ctor(Exception)
  commentId: M:Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.#ctor(Exception)
  id: '#ctor(Exception)'
  parent: Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry
  langs:
  - csharp
  - vb
  name: ExceptionTelemetry(Exception)
  fullName: Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.ExceptionTelemetry(Exception)
  type: Constructor
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/ExceptionTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: .ctor
    path: src/Core/Managed/Shared/DataContracts/ExceptionTelemetry.cs
    startLine: 40
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry\" data-throw-if-not-resolved=\"false\"></xref> class with empty properties.\n"
  example: []
  syntax:
    content: public ExceptionTelemetry(Exception exception)
    content.vb: Public Sub New(exception As Exception)
    parameters:
    - id: exception
      type: Exception
      description: Exception instance.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.Timestamp
  commentId: P:Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.Timestamp
  id: Timestamp
  parent: Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry
  langs:
  - csharp
  - vb
  name: Timestamp
  fullName: Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.Timestamp
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/ExceptionTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Timestamp
    path: src/Core/Managed/Shared/DataContracts/ExceptionTelemetry.cs
    startLine: 54
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets or sets date and time when telemetry was recorded.\n"
  example: []
  syntax:
    content: public DateTimeOffset Timestamp { get; set; }
    content.vb: Public Property Timestamp As DateTimeOffset
    parameters: []
    return:
      type: DateTimeOffset
  implements:
  - Microsoft.ApplicationInsights.Channel.ITelemetry.Timestamp
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.Sequence
  commentId: P:Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.Sequence
  id: Sequence
  parent: Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry
  langs:
  - csharp
  - vb
  name: Sequence
  fullName: Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.Sequence
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/ExceptionTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Sequence
    path: src/Core/Managed/Shared/DataContracts/ExceptionTelemetry.cs
    startLine: 59
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets or sets the value that defines absolute order of the telemetry item.\n"
  example: []
  syntax:
    content: public string Sequence { get; set; }
    content.vb: Public Property Sequence As String
    parameters: []
    return:
      type: System.String
  implements:
  - Microsoft.ApplicationInsights.Channel.ITelemetry.Sequence
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.Context
  commentId: P:Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.Context
  id: Context
  parent: Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry
  langs:
  - csharp
  - vb
  name: Context
  fullName: Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.Context
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/ExceptionTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Context
    path: src/Core/Managed/Shared/DataContracts/ExceptionTelemetry.cs
    startLine: 64
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets the context associated with the current telemetry item.\n"
  example: []
  syntax:
    content: public TelemetryContext Context { get; }
    content.vb: Public ReadOnly Property Context As TelemetryContext
    parameters: []
    return:
      type: Microsoft.ApplicationInsights.DataContracts.TelemetryContext
  implements:
  - Microsoft.ApplicationInsights.Channel.ITelemetry.Context
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.HandledAt
  commentId: P:Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.HandledAt
  id: HandledAt
  parent: Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry
  langs:
  - csharp
  - vb
  name: HandledAt
  fullName: Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.HandledAt
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/ExceptionTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: HandledAt
    path: src/Core/Managed/Shared/DataContracts/ExceptionTelemetry.cs
    startLine: 72
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets or sets the value indicated where the exception was handled.\n"
  example: []
  syntax:
    content: public ExceptionHandledAt HandledAt { get; set; }
    content.vb: Public Property HandledAt As ExceptionHandledAt
    parameters: []
    return:
      type: Microsoft.ApplicationInsights.DataContracts.ExceptionHandledAt
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.Exception
  commentId: P:Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.Exception
  id: Exception
  parent: Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry
  langs:
  - csharp
  - vb
  name: Exception
  fullName: Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.Exception
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/ExceptionTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Exception
    path: src/Core/Managed/Shared/DataContracts/ExceptionTelemetry.cs
    startLine: 81
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets or sets the original exception tracked by this <xref href=\"Microsoft.ApplicationInsights.Channel.ITelemetry\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Exception Exception { get; set; }
    content.vb: Public Property Exception As Exception
    parameters: []
    return:
      type: Exception
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.Message
  commentId: P:Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.Message
  id: Message
  parent: Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry
  langs:
  - csharp
  - vb
  name: Message
  fullName: Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.Message
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/ExceptionTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Message
    path: src/Core/Managed/Shared/DataContracts/ExceptionTelemetry.cs
    startLine: 98
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets or sets ExceptionTelemetry message.\n"
  example: []
  syntax:
    content: public string Message { get; set; }
    content.vb: Public Property Message As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.Metrics
  commentId: P:Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.Metrics
  id: Metrics
  parent: Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry
  langs:
  - csharp
  - vb
  name: Metrics
  fullName: Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.Metrics
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/ExceptionTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Metrics
    path: src/Core/Managed/Shared/DataContracts/ExceptionTelemetry.cs
    startLine: 123
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets a dictionary of application-defined exception metrics.\n"
  example: []
  syntax:
    content: public IDictionary<string, double> Metrics { get; }
    content.vb: Public ReadOnly Property Metrics As IDictionary(Of String, Double)
    parameters: []
    return:
      type: IDictionary{System.String,System.Double}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.Properties
  commentId: P:Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.Properties
  id: Properties
  parent: Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry
  langs:
  - csharp
  - vb
  name: Properties
  fullName: Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.Properties
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/ExceptionTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Properties
    path: src/Core/Managed/Shared/DataContracts/ExceptionTelemetry.cs
    startLine: 131
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets a dictionary of application-defined property names and values providing additional information about this exception.\n"
  example: []
  syntax:
    content: public IDictionary<string, string> Properties { get; }
    content.vb: Public ReadOnly Property Properties As IDictionary(Of String, String)
    parameters: []
    return:
      type: IDictionary{System.String,System.String}
  implements:
  - Microsoft.ApplicationInsights.DataContracts.ISupportProperties.Properties
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.SeverityLevel
  commentId: P:Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.SeverityLevel
  id: SeverityLevel
  parent: Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry
  langs:
  - csharp
  - vb
  name: SeverityLevel
  fullName: Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.SeverityLevel
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/ExceptionTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: SeverityLevel
    path: src/Core/Managed/Shared/DataContracts/ExceptionTelemetry.cs
    startLine: 139
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets or sets Exception severity level.\n"
  example: []
  syntax:
    content: public SeverityLevel? SeverityLevel { get; set; }
    content.vb: Public Property SeverityLevel As SeverityLevel?
    parameters: []
    return:
      type: System.Nullable{Microsoft.ApplicationInsights.DataContracts.SeverityLevel}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.Microsoft#ApplicationInsights#DataContracts#ISupportSampling#SamplingPercentage
  commentId: P:Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.Microsoft#ApplicationInsights#DataContracts#ISupportSampling#SamplingPercentage
  id: Microsoft#ApplicationInsights#DataContracts#ISupportSampling#SamplingPercentage
  isEii: true
  parent: Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry
  langs:
  - csharp
  - vb
  name: ISupportSampling.SamplingPercentage
  fullName: Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.Microsoft.ApplicationInsights.DataContracts.ISupportSampling.SamplingPercentage
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/ExceptionTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Microsoft.ApplicationInsights.DataContracts.ISupportSampling.SamplingPercentage
    path: src/Core/Managed/Shared/DataContracts/ExceptionTelemetry.cs
    startLine: 148
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets or sets data sampling percentage (between 0 and 100).\n"
  example: []
  syntax:
    content: double ? ISupportSampling.SamplingPercentage { get; set; }
    content.vb: ReadOnly WriteOnly Property Microsoft.ApplicationInsights.DataContracts.ISupportSampling.SamplingPercentage As Double? Implements ISupportSampling.SamplingPercentage
    parameters: []
    return:
      type: System.Nullable{System.Double}
  implements:
  - Microsoft.ApplicationInsights.DataContracts.ISupportSampling.SamplingPercentage
  modifiers.csharp:
  - get
  - set
  name.vb: Microsoft.ApplicationInsights.DataContracts.ISupportSampling.SamplingPercentage
- uid: Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize
  commentId: M:Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize
  id: Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize
  isEii: true
  parent: Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry
  langs:
  - csharp
  - vb
  name: ITelemetry.Sanitize()
  fullName: Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize()
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/ExceptionTelemetry.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
    path: src/Core/Managed/Shared/DataContracts/ExceptionTelemetry.cs
    startLine: 162
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nSanitizes the properties based on constraints.\n"
  example: []
  syntax:
    content: void ITelemetry.Sanitize()
    content.vb: Sub Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize Implements ITelemetry.Sanitize
  implements:
  - Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
  name.vb: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize()
references:
- uid: Microsoft.ApplicationInsights.DataContracts
  isExternal: false
  name: Microsoft.ApplicationInsights.DataContracts
  fullName: Microsoft.ApplicationInsights.DataContracts
- uid: System.Object
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.ApplicationInsights.Channel.ITelemetry
  parent: Microsoft.ApplicationInsights.Channel
  isExternal: false
  name: ITelemetry
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetry
- uid: Microsoft.ApplicationInsights.DataContracts.ISupportProperties
  parent: Microsoft.ApplicationInsights.DataContracts
  isExternal: false
  name: ISupportProperties
  fullName: Microsoft.ApplicationInsights.DataContracts.ISupportProperties
- uid: Microsoft.ApplicationInsights.DataContracts.ISupportSampling
  parent: Microsoft.ApplicationInsights.DataContracts
  isExternal: false
  name: ISupportSampling
  fullName: Microsoft.ApplicationInsights.DataContracts.ISupportSampling
- uid: Microsoft.ApplicationInsights.Channel
  isExternal: false
  name: Microsoft.ApplicationInsights.Channel
  fullName: Microsoft.ApplicationInsights.Channel
- uid: Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry
  parent: Microsoft.ApplicationInsights.DataContracts
  isExternal: false
  name: ExceptionTelemetry
  fullName: Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry
- uid: Exception
  isExternal: true
  name: Exception
  fullName: Exception
- uid: Microsoft.ApplicationInsights.Channel.ITelemetry.Timestamp
  parent: Microsoft.ApplicationInsights.Channel.ITelemetry
  isExternal: false
  name: Timestamp
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetry.Timestamp
- uid: DateTimeOffset
  isExternal: true
  name: DateTimeOffset
  fullName: DateTimeOffset
- uid: Microsoft.ApplicationInsights.Channel.ITelemetry.Sequence
  parent: Microsoft.ApplicationInsights.Channel.ITelemetry
  isExternal: false
  name: Sequence
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetry.Sequence
- uid: System.String
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.ApplicationInsights.Channel.ITelemetry.Context
  parent: Microsoft.ApplicationInsights.Channel.ITelemetry
  isExternal: false
  name: Context
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetry.Context
- uid: Microsoft.ApplicationInsights.DataContracts.TelemetryContext
  parent: Microsoft.ApplicationInsights.DataContracts
  isExternal: false
  name: TelemetryContext
  fullName: Microsoft.ApplicationInsights.DataContracts.TelemetryContext
- uid: Microsoft.ApplicationInsights.DataContracts.ExceptionHandledAt
  parent: Microsoft.ApplicationInsights.DataContracts
  isExternal: false
  name: ExceptionHandledAt
  fullName: Microsoft.ApplicationInsights.DataContracts.ExceptionHandledAt
- uid: IDictionary{System.String,System.Double}
  definition: IDictionary`2
  name: IDictionary<String, Double>
  fullName: IDictionary<System.String, System.Double>
  fullname.vb: IDictionary(Of System.String, System.Double)
  name.vb: IDictionary(Of String, Double)
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
- uid: IDictionary`2
  isExternal: true
  name: IDictionary<, >
  fullName: IDictionary<, >
  fullname.vb: IDictionary(Of , )
  name.vb: IDictionary(Of , )
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: ', '
    fullName: ', '
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: ', '
    fullName: ', '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: Microsoft.ApplicationInsights.DataContracts.ISupportProperties.Properties
  parent: Microsoft.ApplicationInsights.DataContracts.ISupportProperties
  isExternal: false
  name: Properties
  fullName: Microsoft.ApplicationInsights.DataContracts.ISupportProperties.Properties
- uid: IDictionary{System.String,System.String}
  definition: IDictionary`2
  name: IDictionary<String, String>
  fullName: IDictionary<System.String, System.String>
  fullname.vb: IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable{Microsoft.ApplicationInsights.DataContracts.SeverityLevel}
  definition: System.Nullable`1
  name: Nullable<SeverityLevel>
  fullName: System.Nullable<Microsoft.ApplicationInsights.DataContracts.SeverityLevel>
  fullname.vb: System.Nullable(Of Microsoft.ApplicationInsights.DataContracts.SeverityLevel)
  name.vb: Nullable(Of SeverityLevel)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.ApplicationInsights.DataContracts.SeverityLevel
    name: SeverityLevel
    fullName: Microsoft.ApplicationInsights.DataContracts.SeverityLevel
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ApplicationInsights.DataContracts.SeverityLevel
    name: SeverityLevel
    fullName: Microsoft.ApplicationInsights.DataContracts.SeverityLevel
  - name: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  fullName: System.Nullable<>
  fullname.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: Microsoft.ApplicationInsights.DataContracts.ISupportSampling.SamplingPercentage
  parent: Microsoft.ApplicationInsights.DataContracts.ISupportSampling
  isExternal: false
  name: SamplingPercentage
  fullName: Microsoft.ApplicationInsights.DataContracts.ISupportSampling.SamplingPercentage
- uid: System.Nullable{System.Double}
  definition: System.Nullable`1
  name: Nullable<Double>
  fullName: System.Nullable<System.Double>
  fullname.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
  parent: Microsoft.ApplicationInsights.Channel.ITelemetry
  isExternal: false
  name: Sanitize()
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize()
  spec.csharp:
  - uid: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
    name: Sanitize
    fullName: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
    name: Sanitize
    fullName: Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize
  - name: (
    fullName: (
  - name: )
    fullName: )
