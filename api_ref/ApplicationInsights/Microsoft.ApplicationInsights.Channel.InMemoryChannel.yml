items:
- uid: Microsoft.ApplicationInsights.Channel.InMemoryChannel
  commentId: T:Microsoft.ApplicationInsights.Channel.InMemoryChannel
  id: InMemoryChannel
  parent: Microsoft.ApplicationInsights.Channel
  children:
  - Microsoft.ApplicationInsights.Channel.InMemoryChannel.#ctor
  - Microsoft.ApplicationInsights.Channel.InMemoryChannel.DeveloperMode
  - Microsoft.ApplicationInsights.Channel.InMemoryChannel.Dispose
  - Microsoft.ApplicationInsights.Channel.InMemoryChannel.EndpointAddress
  - Microsoft.ApplicationInsights.Channel.InMemoryChannel.Flush
  - Microsoft.ApplicationInsights.Channel.InMemoryChannel.Flush(TimeSpan)
  - Microsoft.ApplicationInsights.Channel.InMemoryChannel.MaxTelemetryBufferCapacity
  - Microsoft.ApplicationInsights.Channel.InMemoryChannel.Send(Microsoft.ApplicationInsights.Channel.ITelemetry)
  - Microsoft.ApplicationInsights.Channel.InMemoryChannel.SendingInterval
  langs:
  - csharp
  - vb
  name: InMemoryChannel
  fullName: Microsoft.ApplicationInsights.Channel.InMemoryChannel
  type: Class
  source:
    remote:
      path: src/Core/Managed/Shared/Channel/InMemoryChannel.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: InMemoryChannel
    path: src/Core/Managed/Shared/Channel/InMemoryChannel.cs
    startLine: 9
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Channel
  summary: "\nRepresents a communication channel for sending telemetry to Application Insights via HTTPS. There will be a buffer that will not be persisted, to enforce the \nqueued telemetry items to be sent, <xref href=\"Microsoft.ApplicationInsights.Channel.ITelemetryChannel.Flush\" data-throw-if-not-resolved=\"false\"></xref> should be called.    \n"
  example: []
  syntax:
    content: 'public class InMemoryChannel : object, ITelemetryChannel, IDisposable'
    content.vb: >-
      Public Class InMemoryChannel
          Inherits Object
          Implements ITelemetryChannel, IDisposable
  inheritance:
  - System.Object
  implements:
  - Microsoft.ApplicationInsights.Channel.ITelemetryChannel
  - IDisposable
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.ApplicationInsights.Channel.InMemoryChannel.#ctor
  commentId: M:Microsoft.ApplicationInsights.Channel.InMemoryChannel.#ctor
  id: '#ctor'
  parent: Microsoft.ApplicationInsights.Channel.InMemoryChannel
  langs:
  - csharp
  - vb
  name: InMemoryChannel()
  fullName: Microsoft.ApplicationInsights.Channel.InMemoryChannel.InMemoryChannel()
  type: Constructor
  source:
    remote:
      path: src/Core/Managed/Shared/Channel/InMemoryChannel.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: .ctor
    path: src/Core/Managed/Shared/Channel/InMemoryChannel.cs
    startLine: 19
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Channel
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.ApplicationInsights.Channel.InMemoryChannel\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public InMemoryChannel()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.Channel.InMemoryChannel.DeveloperMode
  commentId: P:Microsoft.ApplicationInsights.Channel.InMemoryChannel.DeveloperMode
  id: DeveloperMode
  parent: Microsoft.ApplicationInsights.Channel.InMemoryChannel
  langs:
  - csharp
  - vb
  name: DeveloperMode
  fullName: Microsoft.ApplicationInsights.Channel.InMemoryChannel.DeveloperMode
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/Channel/InMemoryChannel.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: DeveloperMode
    path: src/Core/Managed/Shared/Channel/InMemoryChannel.cs
    startLine: 39
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Channel
  summary: "\nGets or sets a value indicating whether developer mode of telemetry transmission is enabled.\n"
  example: []
  syntax:
    content: public bool ? DeveloperMode { get; set; }
    content.vb: Public Property DeveloperMode As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  implements:
  - Microsoft.ApplicationInsights.Channel.ITelemetryChannel.DeveloperMode
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.Channel.InMemoryChannel.SendingInterval
  commentId: P:Microsoft.ApplicationInsights.Channel.InMemoryChannel.SendingInterval
  id: SendingInterval
  parent: Microsoft.ApplicationInsights.Channel.InMemoryChannel
  langs:
  - csharp
  - vb
  name: SendingInterval
  fullName: Microsoft.ApplicationInsights.Channel.InMemoryChannel.SendingInterval
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/Channel/InMemoryChannel.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: SendingInterval
    path: src/Core/Managed/Shared/Channel/InMemoryChannel.cs
    startLine: 69
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Channel
  summary: "\nGets or sets the sending interval. Once the interval expires, <xref href=\"Microsoft.ApplicationInsights.Channel.InMemoryChannel\" data-throw-if-not-resolved=\"false\"></xref> \nserializes the accumulated telemetry items for transmission and sends it over the wire.\n"
  example: []
  syntax:
    content: public TimeSpan SendingInterval { get; set; }
    content.vb: Public Property SendingInterval As TimeSpan
    parameters: []
    return:
      type: TimeSpan
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.Channel.InMemoryChannel.EndpointAddress
  commentId: P:Microsoft.ApplicationInsights.Channel.InMemoryChannel.EndpointAddress
  id: EndpointAddress
  parent: Microsoft.ApplicationInsights.Channel.InMemoryChannel
  langs:
  - csharp
  - vb
  name: EndpointAddress
  fullName: Microsoft.ApplicationInsights.Channel.InMemoryChannel.EndpointAddress
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/Channel/InMemoryChannel.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: EndpointAddress
    path: src/Core/Managed/Shared/Channel/InMemoryChannel.cs
    startLine: 85
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Channel
  summary: "\nGets or sets the HTTP address where the telemetry is sent.\n"
  example: []
  syntax:
    content: public string EndpointAddress { get; set; }
    content.vb: Public Property EndpointAddress As String
    parameters: []
    return:
      type: System.String
  implements:
  - Microsoft.ApplicationInsights.Channel.ITelemetryChannel.EndpointAddress
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.Channel.InMemoryChannel.MaxTelemetryBufferCapacity
  commentId: P:Microsoft.ApplicationInsights.Channel.InMemoryChannel.MaxTelemetryBufferCapacity
  id: MaxTelemetryBufferCapacity
  parent: Microsoft.ApplicationInsights.Channel.InMemoryChannel
  langs:
  - csharp
  - vb
  name: MaxTelemetryBufferCapacity
  fullName: Microsoft.ApplicationInsights.Channel.InMemoryChannel.MaxTelemetryBufferCapacity
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/Channel/InMemoryChannel.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: MaxTelemetryBufferCapacity
    path: src/Core/Managed/Shared/Channel/InMemoryChannel.cs
    startLine: 95
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Channel
  summary: "\nGets or sets the maximum number of telemetry items will accumulate in a memory before \nthe <xref href=\"Microsoft.ApplicationInsights.Channel.InMemoryChannel\" data-throw-if-not-resolved=\"false\"></xref> serializing them for transmission to Application Insights.\n"
  example: []
  syntax:
    content: public int MaxTelemetryBufferCapacity { get; set; }
    content.vb: Public Property MaxTelemetryBufferCapacity As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.Channel.InMemoryChannel.Send(Microsoft.ApplicationInsights.Channel.ITelemetry)
  commentId: M:Microsoft.ApplicationInsights.Channel.InMemoryChannel.Send(Microsoft.ApplicationInsights.Channel.ITelemetry)
  id: Send(Microsoft.ApplicationInsights.Channel.ITelemetry)
  parent: Microsoft.ApplicationInsights.Channel.InMemoryChannel
  langs:
  - csharp
  - vb
  name: Send(ITelemetry)
  fullName: Microsoft.ApplicationInsights.Channel.InMemoryChannel.Send(Microsoft.ApplicationInsights.Channel.ITelemetry)
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/Channel/InMemoryChannel.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Send
    path: src/Core/Managed/Shared/Channel/InMemoryChannel.cs
    startLine: 104
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Channel
  summary: "\nSends an instance of ITelemetry through the channel.\n"
  example: []
  syntax:
    content: public void Send(ITelemetry item)
    content.vb: Public Sub Send(item As ITelemetry)
    parameters:
    - id: item
      type: Microsoft.ApplicationInsights.Channel.ITelemetry
  implements:
  - Microsoft.ApplicationInsights.Channel.ITelemetryChannel.Send(Microsoft.ApplicationInsights.Channel.ITelemetry)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.Channel.InMemoryChannel.Flush
  commentId: M:Microsoft.ApplicationInsights.Channel.InMemoryChannel.Flush
  id: Flush
  parent: Microsoft.ApplicationInsights.Channel.InMemoryChannel
  langs:
  - csharp
  - vb
  name: Flush()
  fullName: Microsoft.ApplicationInsights.Channel.InMemoryChannel.Flush()
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/Channel/InMemoryChannel.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Flush
    path: src/Core/Managed/Shared/Channel/InMemoryChannel.cs
    startLine: 124
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Channel
  summary: "\nWill send all the telemetry items stored in the memory.\n"
  example: []
  syntax:
    content: public void Flush()
    content.vb: Public Sub Flush
  implements:
  - Microsoft.ApplicationInsights.Channel.ITelemetryChannel.Flush
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.Channel.InMemoryChannel.Flush(TimeSpan)
  commentId: M:Microsoft.ApplicationInsights.Channel.InMemoryChannel.Flush(TimeSpan)
  id: Flush(TimeSpan)
  parent: Microsoft.ApplicationInsights.Channel.InMemoryChannel
  langs:
  - csharp
  - vb
  name: Flush(TimeSpan)
  fullName: Microsoft.ApplicationInsights.Channel.InMemoryChannel.Flush(TimeSpan)
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/Channel/InMemoryChannel.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Flush
    path: src/Core/Managed/Shared/Channel/InMemoryChannel.cs
    startLine: 133
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Channel
  summary: "\nWill send all the telemetry items stored in the memory.\n"
  example: []
  syntax:
    content: public void Flush(TimeSpan timeout)
    content.vb: Public Sub Flush(timeout As TimeSpan)
    parameters:
    - id: timeout
      type: TimeSpan
      description: Timeout interval to abort sending.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.Channel.InMemoryChannel.Dispose
  commentId: M:Microsoft.ApplicationInsights.Channel.InMemoryChannel.Dispose
  id: Dispose
  parent: Microsoft.ApplicationInsights.Channel.InMemoryChannel
  langs:
  - csharp
  - vb
  name: Dispose()
  fullName: Microsoft.ApplicationInsights.Channel.InMemoryChannel.Dispose()
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/Channel/InMemoryChannel.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Dispose
    path: src/Core/Managed/Shared/Channel/InMemoryChannel.cs
    startLine: 141
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Channel
  summary: "\nDisposing the channel.\n"
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.ApplicationInsights.Channel.ITelemetryChannel.Flush
  parent: Microsoft.ApplicationInsights.Channel.ITelemetryChannel
  isExternal: false
  name: Flush()
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetryChannel.Flush()
  spec.csharp:
  - uid: Microsoft.ApplicationInsights.Channel.ITelemetryChannel.Flush
    name: Flush
    fullName: Microsoft.ApplicationInsights.Channel.ITelemetryChannel.Flush
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ApplicationInsights.Channel.ITelemetryChannel.Flush
    name: Flush
    fullName: Microsoft.ApplicationInsights.Channel.ITelemetryChannel.Flush
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.ApplicationInsights.Channel
  isExternal: false
  name: Microsoft.ApplicationInsights.Channel
  fullName: Microsoft.ApplicationInsights.Channel
- uid: System.Object
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.ApplicationInsights.Channel.ITelemetryChannel
  parent: Microsoft.ApplicationInsights.Channel
  isExternal: false
  name: ITelemetryChannel
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetryChannel
- uid: IDisposable
  isExternal: true
  name: IDisposable
  fullName: IDisposable
- uid: Microsoft.ApplicationInsights.Channel.InMemoryChannel
  isExternal: false
  name: InMemoryChannel
  fullName: Microsoft.ApplicationInsights.Channel.InMemoryChannel
- uid: Microsoft.ApplicationInsights.Channel.ITelemetryChannel.DeveloperMode
  parent: Microsoft.ApplicationInsights.Channel.ITelemetryChannel
  isExternal: false
  name: DeveloperMode
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetryChannel.DeveloperMode
- uid: System.Nullable{System.Boolean}
  definition: System.Nullable`1
  name: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  fullName: System.Nullable<>
  fullname.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: TimeSpan
  isExternal: true
  name: TimeSpan
  fullName: TimeSpan
- uid: Microsoft.ApplicationInsights.Channel.ITelemetryChannel.EndpointAddress
  parent: Microsoft.ApplicationInsights.Channel.ITelemetryChannel
  isExternal: false
  name: EndpointAddress
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetryChannel.EndpointAddress
- uid: System.String
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Int32
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: Microsoft.ApplicationInsights.Channel.ITelemetryChannel.Send(Microsoft.ApplicationInsights.Channel.ITelemetry)
  parent: Microsoft.ApplicationInsights.Channel.ITelemetryChannel
  isExternal: false
  name: Send(ITelemetry)
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetryChannel.Send(Microsoft.ApplicationInsights.Channel.ITelemetry)
  spec.csharp:
  - uid: Microsoft.ApplicationInsights.Channel.ITelemetryChannel.Send(Microsoft.ApplicationInsights.Channel.ITelemetry)
    name: Send
    fullName: Microsoft.ApplicationInsights.Channel.ITelemetryChannel.Send
  - name: (
    fullName: (
  - uid: Microsoft.ApplicationInsights.Channel.ITelemetry
    name: ITelemetry
    fullName: Microsoft.ApplicationInsights.Channel.ITelemetry
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ApplicationInsights.Channel.ITelemetryChannel.Send(Microsoft.ApplicationInsights.Channel.ITelemetry)
    name: Send
    fullName: Microsoft.ApplicationInsights.Channel.ITelemetryChannel.Send
  - name: (
    fullName: (
  - uid: Microsoft.ApplicationInsights.Channel.ITelemetry
    name: ITelemetry
    fullName: Microsoft.ApplicationInsights.Channel.ITelemetry
  - name: )
    fullName: )
- uid: Microsoft.ApplicationInsights.Channel.ITelemetry
  parent: Microsoft.ApplicationInsights.Channel
  isExternal: false
  name: ITelemetry
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetry
