items:
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder
  commentId: T:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder
  id: TelemetryProcessorChainBuilder
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation
  children:
  - Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder.#ctor(Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration)
  - Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder.Build
  - Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder.Use(Func{Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor,Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor})
  langs:
  - csharp
  - vb
  name: TelemetryProcessorChainBuilder
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder
  type: Class
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/TelemetryProcessorChainBuilder.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: TelemetryProcessorChainBuilder
    path: src/Core/Managed/Shared/Extensibility/Implementation/TelemetryProcessorChainBuilder.cs
    startLine: 9
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nRepresents an object used to Build a TelemetryProcessorChain.\n"
  example: []
  syntax:
    content: 'public sealed class TelemetryProcessorChainBuilder : object'
    content.vb: >-
      Public NotInheritable Class TelemetryProcessorChainBuilder
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder.#ctor(Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration)
  commentId: M:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder.#ctor(Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration)
  id: '#ctor(Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration)'
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder
  langs:
  - csharp
  - vb
  name: TelemetryProcessorChainBuilder(TelemetryConfiguration)
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder.TelemetryProcessorChainBuilder(Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration)
  type: Constructor
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/TelemetryProcessorChainBuilder.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: .ctor
    path: src/Core/Managed/Shared/Extensibility/Implementation/TelemetryProcessorChainBuilder.cs
    startLine: 18
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public TelemetryProcessorChainBuilder(TelemetryConfiguration configuration)
    content.vb: Public Sub New(configuration As TelemetryConfiguration)
    parameters:
    - id: configuration
      type: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration
      description: 'The <xref href="Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration" data-throw-if-not-resolved="false"></xref> instance to which the constructed processing chain should be set to. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder.Use(Func{Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor,Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor})
  commentId: M:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder.Use(Func{Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor,Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor})
  id: Use(Func{Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor,Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor})
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder
  langs:
  - csharp
  - vb
  name: Use(Func<ITelemetryProcessor, ITelemetryProcessor>)
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder.Use(Func<Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor, Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor>)
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/TelemetryProcessorChainBuilder.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Use
    path: src/Core/Managed/Shared/Extensibility/Implementation/TelemetryProcessorChainBuilder.cs
    startLine: 35
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nUses given factory to add TelemetryProcessor to the chain of processors. The processors\nin the chain will be invoked in the same order in which they are added.\n"
  example: []
  syntax:
    content: public TelemetryProcessorChainBuilder Use(Func<ITelemetryProcessor, ITelemetryProcessor> telemetryProcessorFactory)
    content.vb: Public Function Use(telemetryProcessorFactory As Func(Of ITelemetryProcessor, ITelemetryProcessor)) As TelemetryProcessorChainBuilder
    parameters:
    - id: telemetryProcessorFactory
      type: Func{Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor,Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor}
      description: >-
        A delegate that returns a <xref href="Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor" data-throw-if-not-resolved="false"></xref>

        , given the next <xref href="Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor" data-throw-if-not-resolved="false"></xref> in the call chain.
    return:
      type: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder.Use(Func(Of Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor, Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor))
  name.vb: Use(Func(Of ITelemetryProcessor, ITelemetryProcessor))
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder.Build
  commentId: M:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder.Build
  id: Build
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder
  langs:
  - csharp
  - vb
  name: Build()
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder.Build()
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/TelemetryProcessorChainBuilder.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Build
    path: src/Core/Managed/Shared/Extensibility/Implementation/TelemetryProcessorChainBuilder.cs
    startLine: 46
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nBuilds the chain of linked <xref href=\"Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor\" data-throw-if-not-resolved=\"false\"></xref> instances and sets the same in configuration object passed.\nA special telemetry processor for handling Transmission is always appended as the last\nprocessor in the chain.\n"
  example: []
  syntax:
    content: public void Build()
    content.vb: Public Sub Build
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation
  isExternal: false
  name: Microsoft.ApplicationInsights.Extensibility.Implementation
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation
- uid: System.Object
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation
  isExternal: false
  name: TelemetryProcessorChainBuilder
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder
- uid: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration
  parent: Microsoft.ApplicationInsights.Extensibility
  isExternal: false
  name: TelemetryConfiguration
  fullName: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration
- uid: Microsoft.ApplicationInsights.Extensibility
  isExternal: false
  name: Microsoft.ApplicationInsights.Extensibility
  fullName: Microsoft.ApplicationInsights.Extensibility
- uid: Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor
  isExternal: false
  name: ITelemetryProcessor
  fullName: Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor
- uid: Func{Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor,Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor}
  definition: Func`2
  name: Func<ITelemetryProcessor, ITelemetryProcessor>
  fullName: Func<Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor, Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor>
  fullname.vb: Func(Of Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor, Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor)
  name.vb: Func(Of ITelemetryProcessor, ITelemetryProcessor)
  spec.csharp:
  - uid: Func`2
    name: Func
    fullName: Func
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor
    name: ITelemetryProcessor
    fullName: Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor
  - name: ', '
    fullName: ', '
  - uid: Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor
    name: ITelemetryProcessor
    fullName: Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`2
    name: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor
    name: ITelemetryProcessor
    fullName: Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor
  - name: ', '
    fullName: ', '
  - uid: Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor
    name: ITelemetryProcessor
    fullName: Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor
  - name: )
    fullName: )
- uid: Func`2
  isExternal: true
  name: Func<, >
  fullName: Func<, >
  fullname.vb: Func(Of , )
  name.vb: Func(Of , )
  spec.csharp:
  - uid: Func`2
    name: Func
    fullName: Func
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: ', '
    fullName: ', '
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`2
    name: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: ', '
    fullName: ', '
  - name: 
    fullName: 
  - name: )
    fullName: )
