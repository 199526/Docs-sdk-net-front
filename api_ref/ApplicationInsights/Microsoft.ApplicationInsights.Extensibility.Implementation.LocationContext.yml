### YamlMime:ManagedReference
items:
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.LocationContext
  commentId: T:Microsoft.ApplicationInsights.Extensibility.Implementation.LocationContext
  id: LocationContext
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation
  children:
  - Microsoft.ApplicationInsights.Extensibility.Implementation.LocationContext.Ip
  langs:
  - csharp
  - vb
  name: LocationContext
  nameWithType: LocationContext
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.LocationContext
  type: Class
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/LocationContext.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: LocationContext
    path: src/Core/Managed/Shared/Extensibility/Implementation/LocationContext.cs
    startLine: 14
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nEncapsulates telemetry location information.\n"
  example: []
  syntax:
    content: 'public sealed class LocationContext : object'
    content.vb: >-
      Public NotInheritable Class LocationContext
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.LocationContext.Ip
  commentId: P:Microsoft.ApplicationInsights.Extensibility.Implementation.LocationContext.Ip
  id: Ip
  parent: Microsoft.ApplicationInsights.Extensibility.Implementation.LocationContext
  langs:
  - csharp
  - vb
  name: Ip
  nameWithType: LocationContext.Ip
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.LocationContext.Ip
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/Extensibility/Implementation/LocationContext.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Ip
    path: src/Core/Managed/Shared/Extensibility/Implementation/LocationContext.cs
    startLine: 26
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.Extensibility.Implementation
  summary: "\nGets or sets the location IP.\n"
  example: []
  syntax:
    content: public string Ip { get; set; }
    content.vb: Public Property Ip As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.ApplicationInsights.Extensibility.Implementation.LocationContext.Ip*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation
  commentId: N:Microsoft.ApplicationInsights.Extensibility.Implementation
  isExternal: false
  name: Microsoft.ApplicationInsights.Extensibility.Implementation
  nameWithType: Microsoft.ApplicationInsights.Extensibility.Implementation
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.ApplicationInsights.Extensibility.Implementation.LocationContext.Ip*
  commentId: Overload:Microsoft.ApplicationInsights.Extensibility.Implementation.LocationContext.Ip
  isExternal: false
  name: Ip
  nameWithType: LocationContext.Ip
  fullName: Microsoft.ApplicationInsights.Extensibility.Implementation.LocationContext.Ip
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
