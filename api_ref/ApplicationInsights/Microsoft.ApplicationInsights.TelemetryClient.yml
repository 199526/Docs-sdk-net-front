items:
- uid: Microsoft.ApplicationInsights.TelemetryClient
  commentId: T:Microsoft.ApplicationInsights.TelemetryClient
  id: TelemetryClient
  parent: Microsoft.ApplicationInsights
  children:
  - Microsoft.ApplicationInsights.TelemetryClient.#ctor
  - Microsoft.ApplicationInsights.TelemetryClient.#ctor(Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration)
  - Microsoft.ApplicationInsights.TelemetryClient.Context
  - Microsoft.ApplicationInsights.TelemetryClient.Flush
  - Microsoft.ApplicationInsights.TelemetryClient.Initialize(Microsoft.ApplicationInsights.Channel.ITelemetry)
  - Microsoft.ApplicationInsights.TelemetryClient.InstrumentationKey
  - Microsoft.ApplicationInsights.TelemetryClient.IsEnabled
  - Microsoft.ApplicationInsights.TelemetryClient.Track(Microsoft.ApplicationInsights.Channel.ITelemetry)
  - Microsoft.ApplicationInsights.TelemetryClient.TrackAvailability(Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry)
  - Microsoft.ApplicationInsights.TelemetryClient.TrackAvailability(System.String,DateTimeOffset,TimeSpan,System.String,System.Boolean,System.String)
  - Microsoft.ApplicationInsights.TelemetryClient.TrackDependency(Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry)
  - Microsoft.ApplicationInsights.TelemetryClient.TrackDependency(System.String,System.String,DateTimeOffset,TimeSpan,System.Boolean)
  - Microsoft.ApplicationInsights.TelemetryClient.TrackEvent(Microsoft.ApplicationInsights.DataContracts.EventTelemetry)
  - Microsoft.ApplicationInsights.TelemetryClient.TrackEvent(System.String,IDictionary{System.String,System.String},IDictionary{System.String,System.Double})
  - Microsoft.ApplicationInsights.TelemetryClient.TrackException(Exception,IDictionary{System.String,System.String},IDictionary{System.String,System.Double})
  - Microsoft.ApplicationInsights.TelemetryClient.TrackException(Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry)
  - Microsoft.ApplicationInsights.TelemetryClient.TrackMetric(Microsoft.ApplicationInsights.DataContracts.MetricTelemetry)
  - Microsoft.ApplicationInsights.TelemetryClient.TrackMetric(System.String,System.Double,IDictionary{System.String,System.String})
  - Microsoft.ApplicationInsights.TelemetryClient.TrackPageView(Microsoft.ApplicationInsights.DataContracts.PageViewTelemetry)
  - Microsoft.ApplicationInsights.TelemetryClient.TrackPageView(System.String)
  - Microsoft.ApplicationInsights.TelemetryClient.TrackRequest(Microsoft.ApplicationInsights.DataContracts.RequestTelemetry)
  - Microsoft.ApplicationInsights.TelemetryClient.TrackRequest(System.String,DateTimeOffset,TimeSpan,System.String,System.Boolean)
  - Microsoft.ApplicationInsights.TelemetryClient.TrackTrace(Microsoft.ApplicationInsights.DataContracts.TraceTelemetry)
  - Microsoft.ApplicationInsights.TelemetryClient.TrackTrace(System.String)
  - Microsoft.ApplicationInsights.TelemetryClient.TrackTrace(System.String,IDictionary{System.String,System.String})
  - Microsoft.ApplicationInsights.TelemetryClient.TrackTrace(System.String,Microsoft.ApplicationInsights.DataContracts.SeverityLevel)
  - Microsoft.ApplicationInsights.TelemetryClient.TrackTrace(System.String,Microsoft.ApplicationInsights.DataContracts.SeverityLevel,IDictionary{System.String,System.String})
  langs:
  - csharp
  - vb
  name: TelemetryClient
  fullName: Microsoft.ApplicationInsights.TelemetryClient
  type: Class
  source:
    remote:
      path: src/Core/Managed/Shared/TelemetryClient.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: TelemetryClient
    path: src/Core/Managed/Shared/TelemetryClient.cs
    startLine: 18
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights
  summary: "\nSend events, metrics and other telemetry to the Application Insights service.\n"
  example: []
  syntax:
    content: 'public sealed class TelemetryClient : object'
    content.vb: >-
      Public NotInheritable Class TelemetryClient
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.ApplicationInsights.TelemetryClient.#ctor
  commentId: M:Microsoft.ApplicationInsights.TelemetryClient.#ctor
  id: '#ctor'
  parent: Microsoft.ApplicationInsights.TelemetryClient
  langs:
  - csharp
  - vb
  name: TelemetryClient()
  fullName: Microsoft.ApplicationInsights.TelemetryClient.TelemetryClient()
  type: Constructor
  source:
    remote:
      path: src/Core/Managed/Shared/TelemetryClient.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: .ctor
    path: src/Core/Managed/Shared/TelemetryClient.cs
    startLine: 29
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.ApplicationInsights.TelemetryClient\" data-throw-if-not-resolved=\"false\"></xref> class. Send telemetry with the active configuration, usually loaded from ApplicationInsights.config.\n"
  example: []
  syntax:
    content: public TelemetryClient()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.TelemetryClient.#ctor(Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration)
  commentId: M:Microsoft.ApplicationInsights.TelemetryClient.#ctor(Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration)
  id: '#ctor(Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration)'
  parent: Microsoft.ApplicationInsights.TelemetryClient
  langs:
  - csharp
  - vb
  name: TelemetryClient(TelemetryConfiguration)
  fullName: Microsoft.ApplicationInsights.TelemetryClient.TelemetryClient(Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration)
  type: Constructor
  source:
    remote:
      path: src/Core/Managed/Shared/TelemetryClient.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: .ctor
    path: src/Core/Managed/Shared/TelemetryClient.cs
    startLine: 37
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.ApplicationInsights.TelemetryClient\" data-throw-if-not-resolved=\"false\"></xref> class. Send telemetry with the specified <em>configuration</em>.\n"
  example: []
  syntax:
    content: public TelemetryClient(TelemetryConfiguration configuration)
    content.vb: Public Sub New(configuration As TelemetryConfiguration)
    parameters:
    - id: configuration
      type: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.TelemetryClient.Context
  commentId: P:Microsoft.ApplicationInsights.TelemetryClient.Context
  id: Context
  parent: Microsoft.ApplicationInsights.TelemetryClient
  langs:
  - csharp
  - vb
  name: Context
  fullName: Microsoft.ApplicationInsights.TelemetryClient.Context
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/TelemetryClient.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Context
    path: src/Core/Managed/Shared/TelemetryClient.cs
    startLine: 51
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights
  summary: "\nGets the current context that will be used to augment telemetry you send.\n"
  example: []
  syntax:
    content: public TelemetryContext Context { get; }
    content.vb: Public ReadOnly Property Context As TelemetryContext
    parameters: []
    return:
      type: Microsoft.ApplicationInsights.DataContracts.TelemetryContext
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ApplicationInsights.TelemetryClient.InstrumentationKey
  commentId: P:Microsoft.ApplicationInsights.TelemetryClient.InstrumentationKey
  id: InstrumentationKey
  parent: Microsoft.ApplicationInsights.TelemetryClient
  langs:
  - csharp
  - vb
  name: InstrumentationKey
  fullName: Microsoft.ApplicationInsights.TelemetryClient.InstrumentationKey
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/TelemetryClient.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: InstrumentationKey
    path: src/Core/Managed/Shared/TelemetryClient.cs
    startLine: 60
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights
  summary: "\nGets or sets the default instrumentation key for all <xref href=\"Microsoft.ApplicationInsights.Channel.ITelemetry\" data-throw-if-not-resolved=\"false\"></xref> objects logged in this <xref href=\"Microsoft.ApplicationInsights.TelemetryClient\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public string InstrumentationKey { get; set; }
    content.vb: Public Property InstrumentationKey As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.TelemetryClient.IsEnabled
  commentId: M:Microsoft.ApplicationInsights.TelemetryClient.IsEnabled
  id: IsEnabled
  parent: Microsoft.ApplicationInsights.TelemetryClient
  langs:
  - csharp
  - vb
  name: IsEnabled()
  fullName: Microsoft.ApplicationInsights.TelemetryClient.IsEnabled()
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/TelemetryClient.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: IsEnabled
    path: src/Core/Managed/Shared/TelemetryClient.cs
    startLine: 77
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights
  summary: "\nCheck to determine if the tracking is enabled.\n"
  example: []
  syntax:
    content: public bool IsEnabled()
    content.vb: Public Function IsEnabled As Boolean
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.TelemetryClient.TrackEvent(System.String,IDictionary{System.String,System.String},IDictionary{System.String,System.Double})
  commentId: M:Microsoft.ApplicationInsights.TelemetryClient.TrackEvent(System.String,IDictionary{System.String,System.String},IDictionary{System.String,System.Double})
  id: TrackEvent(System.String,IDictionary{System.String,System.String},IDictionary{System.String,System.Double})
  parent: Microsoft.ApplicationInsights.TelemetryClient
  langs:
  - csharp
  - vb
  name: TrackEvent(String, IDictionary<String, String>, IDictionary<String, Double>)
  fullName: Microsoft.ApplicationInsights.TelemetryClient.TrackEvent(System.String, IDictionary<System.String, System.String>, IDictionary<System.String, System.Double>)
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/TelemetryClient.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: TrackEvent
    path: src/Core/Managed/Shared/TelemetryClient.cs
    startLine: 88
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights
  summary: "\nSend an <xref href=\"Microsoft.ApplicationInsights.DataContracts.EventTelemetry\" data-throw-if-not-resolved=\"false\"></xref> for display in Diagnostic Search and aggregation in Metrics Explorer.\n"
  example: []
  syntax:
    content: public void TrackEvent(string eventName, IDictionary<string, string> properties = null, IDictionary<string, double> metrics = null)
    content.vb: Public Sub TrackEvent(eventName As String, properties As IDictionary(Of String, String) = Nothing, metrics As IDictionary(Of String, Double) = Nothing)
    parameters:
    - id: eventName
      type: System.String
      description: A name for the event.
    - id: properties
      type: IDictionary{System.String,System.String}
      description: Named string values you can use to search and classify events.
    - id: metrics
      type: IDictionary{System.String,System.Double}
      description: Measurements associated with this event.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ApplicationInsights.TelemetryClient.TrackEvent(System.String, IDictionary(Of System.String, System.String), IDictionary(Of System.String, System.Double))
  name.vb: TrackEvent(String, IDictionary(Of String, String), IDictionary(Of String, Double))
- uid: Microsoft.ApplicationInsights.TelemetryClient.TrackEvent(Microsoft.ApplicationInsights.DataContracts.EventTelemetry)
  commentId: M:Microsoft.ApplicationInsights.TelemetryClient.TrackEvent(Microsoft.ApplicationInsights.DataContracts.EventTelemetry)
  id: TrackEvent(Microsoft.ApplicationInsights.DataContracts.EventTelemetry)
  parent: Microsoft.ApplicationInsights.TelemetryClient
  langs:
  - csharp
  - vb
  name: TrackEvent(EventTelemetry)
  fullName: Microsoft.ApplicationInsights.TelemetryClient.TrackEvent(Microsoft.ApplicationInsights.DataContracts.EventTelemetry)
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/TelemetryClient.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: TrackEvent
    path: src/Core/Managed/Shared/TelemetryClient.cs
    startLine: 110
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights
  summary: "\nSend an <xref href=\"Microsoft.ApplicationInsights.DataContracts.EventTelemetry\" data-throw-if-not-resolved=\"false\"></xref> for display in Diagnostic Search and aggregation in Metrics Explorer.\nCreate a separate <xref href=\"Microsoft.ApplicationInsights.DataContracts.EventTelemetry\" data-throw-if-not-resolved=\"false\"></xref> instance for each call to <xref href=\"Microsoft.ApplicationInsights.TelemetryClient.TrackEvent(Microsoft.ApplicationInsights.DataContracts.EventTelemetry)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void TrackEvent(EventTelemetry telemetry)
    content.vb: Public Sub TrackEvent(telemetry As EventTelemetry)
    parameters:
    - id: telemetry
      type: Microsoft.ApplicationInsights.DataContracts.EventTelemetry
      description: An event log item.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.TelemetryClient.TrackTrace(System.String)
  commentId: M:Microsoft.ApplicationInsights.TelemetryClient.TrackTrace(System.String)
  id: TrackTrace(System.String)
  parent: Microsoft.ApplicationInsights.TelemetryClient
  langs:
  - csharp
  - vb
  name: TrackTrace(String)
  fullName: Microsoft.ApplicationInsights.TelemetryClient.TrackTrace(System.String)
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/TelemetryClient.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: TrackTrace
    path: src/Core/Managed/Shared/TelemetryClient.cs
    startLine: 124
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights
  summary: "\nSend a trace message for display in Diagnostic Search.\n"
  example: []
  syntax:
    content: public void TrackTrace(string message)
    content.vb: Public Sub TrackTrace(message As String)
    parameters:
    - id: message
      type: System.String
      description: Message to display.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.TelemetryClient.TrackTrace(System.String,Microsoft.ApplicationInsights.DataContracts.SeverityLevel)
  commentId: M:Microsoft.ApplicationInsights.TelemetryClient.TrackTrace(System.String,Microsoft.ApplicationInsights.DataContracts.SeverityLevel)
  id: TrackTrace(System.String,Microsoft.ApplicationInsights.DataContracts.SeverityLevel)
  parent: Microsoft.ApplicationInsights.TelemetryClient
  langs:
  - csharp
  - vb
  name: TrackTrace(String, SeverityLevel)
  fullName: Microsoft.ApplicationInsights.TelemetryClient.TrackTrace(System.String, Microsoft.ApplicationInsights.DataContracts.SeverityLevel)
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/TelemetryClient.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: TrackTrace
    path: src/Core/Managed/Shared/TelemetryClient.cs
    startLine: 134
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights
  summary: "\nSend a trace message for display in Diagnostic Search.\n"
  example: []
  syntax:
    content: public void TrackTrace(string message, SeverityLevel severityLevel)
    content.vb: Public Sub TrackTrace(message As String, severityLevel As SeverityLevel)
    parameters:
    - id: message
      type: System.String
      description: Message to display.
    - id: severityLevel
      type: Microsoft.ApplicationInsights.DataContracts.SeverityLevel
      description: Trace severity level.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.TelemetryClient.TrackTrace(System.String,IDictionary{System.String,System.String})
  commentId: M:Microsoft.ApplicationInsights.TelemetryClient.TrackTrace(System.String,IDictionary{System.String,System.String})
  id: TrackTrace(System.String,IDictionary{System.String,System.String})
  parent: Microsoft.ApplicationInsights.TelemetryClient
  langs:
  - csharp
  - vb
  name: TrackTrace(String, IDictionary<String, String>)
  fullName: Microsoft.ApplicationInsights.TelemetryClient.TrackTrace(System.String, IDictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/TelemetryClient.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: TrackTrace
    path: src/Core/Managed/Shared/TelemetryClient.cs
    startLine: 144
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights
  summary: "\nSend a trace message for display in Diagnostic Search.\n"
  example: []
  syntax:
    content: public void TrackTrace(string message, IDictionary<string, string> properties)
    content.vb: Public Sub TrackTrace(message As String, properties As IDictionary(Of String, String))
    parameters:
    - id: message
      type: System.String
      description: Message to display.
    - id: properties
      type: IDictionary{System.String,System.String}
      description: Named string values you can use to search and classify events.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ApplicationInsights.TelemetryClient.TrackTrace(System.String, IDictionary(Of System.String, System.String))
  name.vb: TrackTrace(String, IDictionary(Of String, String))
- uid: Microsoft.ApplicationInsights.TelemetryClient.TrackTrace(System.String,Microsoft.ApplicationInsights.DataContracts.SeverityLevel,IDictionary{System.String,System.String})
  commentId: M:Microsoft.ApplicationInsights.TelemetryClient.TrackTrace(System.String,Microsoft.ApplicationInsights.DataContracts.SeverityLevel,IDictionary{System.String,System.String})
  id: TrackTrace(System.String,Microsoft.ApplicationInsights.DataContracts.SeverityLevel,IDictionary{System.String,System.String})
  parent: Microsoft.ApplicationInsights.TelemetryClient
  langs:
  - csharp
  - vb
  name: TrackTrace(String, SeverityLevel, IDictionary<String, String>)
  fullName: Microsoft.ApplicationInsights.TelemetryClient.TrackTrace(System.String, Microsoft.ApplicationInsights.DataContracts.SeverityLevel, IDictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/TelemetryClient.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: TrackTrace
    path: src/Core/Managed/Shared/TelemetryClient.cs
    startLine: 162
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights
  summary: "\nSend a trace message for display in Diagnostic Search.\n"
  example: []
  syntax:
    content: public void TrackTrace(string message, SeverityLevel severityLevel, IDictionary<string, string> properties)
    content.vb: Public Sub TrackTrace(message As String, severityLevel As SeverityLevel, properties As IDictionary(Of String, String))
    parameters:
    - id: message
      type: System.String
      description: Message to display.
    - id: severityLevel
      type: Microsoft.ApplicationInsights.DataContracts.SeverityLevel
      description: Trace severity level.
    - id: properties
      type: IDictionary{System.String,System.String}
      description: Named string values you can use to search and classify events.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ApplicationInsights.TelemetryClient.TrackTrace(System.String, Microsoft.ApplicationInsights.DataContracts.SeverityLevel, IDictionary(Of System.String, System.String))
  name.vb: TrackTrace(String, SeverityLevel, IDictionary(Of String, String))
- uid: Microsoft.ApplicationInsights.TelemetryClient.TrackTrace(Microsoft.ApplicationInsights.DataContracts.TraceTelemetry)
  commentId: M:Microsoft.ApplicationInsights.TelemetryClient.TrackTrace(Microsoft.ApplicationInsights.DataContracts.TraceTelemetry)
  id: TrackTrace(Microsoft.ApplicationInsights.DataContracts.TraceTelemetry)
  parent: Microsoft.ApplicationInsights.TelemetryClient
  langs:
  - csharp
  - vb
  name: TrackTrace(TraceTelemetry)
  fullName: Microsoft.ApplicationInsights.TelemetryClient.TrackTrace(Microsoft.ApplicationInsights.DataContracts.TraceTelemetry)
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/TelemetryClient.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: TrackTrace
    path: src/Core/Managed/Shared/TelemetryClient.cs
    startLine: 179
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights
  summary: "\nSend a trace message for display in Diagnostic Search.\nCreate a separate <xref href=\"Microsoft.ApplicationInsights.DataContracts.TraceTelemetry\" data-throw-if-not-resolved=\"false\"></xref> instance for each call to <xref href=\"Microsoft.ApplicationInsights.TelemetryClient.TrackTrace(Microsoft.ApplicationInsights.DataContracts.TraceTelemetry)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void TrackTrace(TraceTelemetry telemetry)
    content.vb: Public Sub TrackTrace(telemetry As TraceTelemetry)
    parameters:
    - id: telemetry
      type: Microsoft.ApplicationInsights.DataContracts.TraceTelemetry
      description: Message with optional properties.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.TelemetryClient.TrackMetric(System.String,System.Double,IDictionary{System.String,System.String})
  commentId: M:Microsoft.ApplicationInsights.TelemetryClient.TrackMetric(System.String,System.Double,IDictionary{System.String,System.String})
  id: TrackMetric(System.String,System.Double,IDictionary{System.String,System.String})
  parent: Microsoft.ApplicationInsights.TelemetryClient
  langs:
  - csharp
  - vb
  name: TrackMetric(String, Double, IDictionary<String, String>)
  fullName: Microsoft.ApplicationInsights.TelemetryClient.TrackMetric(System.String, System.Double, IDictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/TelemetryClient.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: TrackMetric
    path: src/Core/Managed/Shared/TelemetryClient.cs
    startLine: 191
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights
  summary: "\nSend a <xref href=\"Microsoft.ApplicationInsights.DataContracts.MetricTelemetry\" data-throw-if-not-resolved=\"false\"></xref> for aggregation in Metric Explorer.\n"
  example: []
  syntax:
    content: public void TrackMetric(string name, double value, IDictionary<string, string> properties = null)
    content.vb: Public Sub TrackMetric(name As String, value As Double, properties As IDictionary(Of String, String) = Nothing)
    parameters:
    - id: name
      type: System.String
      description: Metric name.
    - id: value
      type: System.Double
      description: Metric value.
    - id: properties
      type: IDictionary{System.String,System.String}
      description: Named string values you can use to classify and filter metrics.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ApplicationInsights.TelemetryClient.TrackMetric(System.String, System.Double, IDictionary(Of System.String, System.String))
  name.vb: TrackMetric(String, Double, IDictionary(Of String, String))
- uid: Microsoft.ApplicationInsights.TelemetryClient.TrackMetric(Microsoft.ApplicationInsights.DataContracts.MetricTelemetry)
  commentId: M:Microsoft.ApplicationInsights.TelemetryClient.TrackMetric(Microsoft.ApplicationInsights.DataContracts.MetricTelemetry)
  id: TrackMetric(Microsoft.ApplicationInsights.DataContracts.MetricTelemetry)
  parent: Microsoft.ApplicationInsights.TelemetryClient
  langs:
  - csharp
  - vb
  name: TrackMetric(MetricTelemetry)
  fullName: Microsoft.ApplicationInsights.TelemetryClient.TrackMetric(Microsoft.ApplicationInsights.DataContracts.MetricTelemetry)
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/TelemetryClient.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: TrackMetric
    path: src/Core/Managed/Shared/TelemetryClient.cs
    startLine: 206
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights
  summary: "\nSend a <xref href=\"Microsoft.ApplicationInsights.DataContracts.MetricTelemetry\" data-throw-if-not-resolved=\"false\"></xref> for aggregation in Metric Explorer.\nCreate a separate <xref href=\"Microsoft.ApplicationInsights.DataContracts.MetricTelemetry\" data-throw-if-not-resolved=\"false\"></xref> instance for each call to <xref href=\"Microsoft.ApplicationInsights.TelemetryClient.TrackMetric(Microsoft.ApplicationInsights.DataContracts.MetricTelemetry)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void TrackMetric(MetricTelemetry telemetry)
    content.vb: Public Sub TrackMetric(telemetry As MetricTelemetry)
    parameters:
    - id: telemetry
      type: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.TelemetryClient.TrackException(Exception,IDictionary{System.String,System.String},IDictionary{System.String,System.Double})
  commentId: M:Microsoft.ApplicationInsights.TelemetryClient.TrackException(Exception,IDictionary{System.String,System.String},IDictionary{System.String,System.Double})
  id: TrackException(Exception,IDictionary{System.String,System.String},IDictionary{System.String,System.Double})
  parent: Microsoft.ApplicationInsights.TelemetryClient
  langs:
  - csharp
  - vb
  name: TrackException(Exception, IDictionary<String, String>, IDictionary<String, Double>)
  fullName: Microsoft.ApplicationInsights.TelemetryClient.TrackException(Exception, IDictionary<System.String, System.String>, IDictionary<System.String, System.Double>)
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/TelemetryClient.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: TrackException
    path: src/Core/Managed/Shared/TelemetryClient.cs
    startLine: 222
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights
  summary: "\nSend an <xref href=\"Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry\" data-throw-if-not-resolved=\"false\"></xref> for display in Diagnostic Search.\n"
  example: []
  syntax:
    content: public void TrackException(Exception exception, IDictionary<string, string> properties = null, IDictionary<string, double> metrics = null)
    content.vb: Public Sub TrackException(exception As Exception, properties As IDictionary(Of String, String) = Nothing, metrics As IDictionary(Of String, Double) = Nothing)
    parameters:
    - id: exception
      type: Exception
      description: The exception to log.
    - id: properties
      type: IDictionary{System.String,System.String}
      description: Named string values you can use to classify and search for this exception.
    - id: metrics
      type: IDictionary{System.String,System.Double}
      description: Additional values associated with this exception.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ApplicationInsights.TelemetryClient.TrackException(Exception, IDictionary(Of System.String, System.String), IDictionary(Of System.String, System.Double))
  name.vb: TrackException(Exception, IDictionary(Of String, String), IDictionary(Of String, Double))
- uid: Microsoft.ApplicationInsights.TelemetryClient.TrackException(Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry)
  commentId: M:Microsoft.ApplicationInsights.TelemetryClient.TrackException(Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry)
  id: TrackException(Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry)
  parent: Microsoft.ApplicationInsights.TelemetryClient
  langs:
  - csharp
  - vb
  name: TrackException(ExceptionTelemetry)
  fullName: Microsoft.ApplicationInsights.TelemetryClient.TrackException(Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry)
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/TelemetryClient.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: TrackException
    path: src/Core/Managed/Shared/TelemetryClient.cs
    startLine: 248
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights
  summary: "\nSend an <xref href=\"Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry\" data-throw-if-not-resolved=\"false\"></xref> for display in Diagnostic Search.\nCreate a separate <xref href=\"Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry\" data-throw-if-not-resolved=\"false\"></xref> instance for each call to <xref href=\"Microsoft.ApplicationInsights.TelemetryClient.TrackException(Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public void TrackException(ExceptionTelemetry telemetry)
    content.vb: Public Sub TrackException(telemetry As ExceptionTelemetry)
    parameters:
    - id: telemetry
      type: Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.TelemetryClient.TrackDependency(System.String,System.String,DateTimeOffset,TimeSpan,System.Boolean)
  commentId: M:Microsoft.ApplicationInsights.TelemetryClient.TrackDependency(System.String,System.String,DateTimeOffset,TimeSpan,System.Boolean)
  id: TrackDependency(System.String,System.String,DateTimeOffset,TimeSpan,System.Boolean)
  parent: Microsoft.ApplicationInsights.TelemetryClient
  langs:
  - csharp
  - vb
  name: TrackDependency(String, String, DateTimeOffset, TimeSpan, Boolean)
  fullName: Microsoft.ApplicationInsights.TelemetryClient.TrackDependency(System.String, System.String, DateTimeOffset, TimeSpan, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/TelemetryClient.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: TrackDependency
    path: src/Core/Managed/Shared/TelemetryClient.cs
    startLine: 270
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights
  summary: "\nSend information about external dependency call in the application.\n"
  example: []
  syntax:
    content: public void TrackDependency(string dependencyName, string commandName, DateTimeOffset startTime, TimeSpan duration, bool success)
    content.vb: Public Sub TrackDependency(dependencyName As String, commandName As String, startTime As DateTimeOffset, duration As TimeSpan, success As Boolean)
    parameters:
    - id: dependencyName
      type: System.String
      description: External dependency name.
    - id: commandName
      type: System.String
      description: Dependency call command name.
    - id: startTime
      type: DateTimeOffset
      description: The time when the dependency was called.
    - id: duration
      type: TimeSpan
      description: The time taken by the external dependency to handle the call.
    - id: success
      type: System.Boolean
      description: True if the dependency call was handled successfully.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.TelemetryClient.TrackDependency(Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry)
  commentId: M:Microsoft.ApplicationInsights.TelemetryClient.TrackDependency(Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry)
  id: TrackDependency(Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry)
  parent: Microsoft.ApplicationInsights.TelemetryClient
  langs:
  - csharp
  - vb
  name: TrackDependency(DependencyTelemetry)
  fullName: Microsoft.ApplicationInsights.TelemetryClient.TrackDependency(Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry)
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/TelemetryClient.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: TrackDependency
    path: src/Core/Managed/Shared/TelemetryClient.cs
    startLine: 279
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights
  summary: "\nSend information about external dependency call in the application.\nCreate a separate <xref href=\"Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry\" data-throw-if-not-resolved=\"false\"></xref> instance for each call to <xref href=\"Microsoft.ApplicationInsights.TelemetryClient.TrackDependency(Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public void TrackDependency(DependencyTelemetry telemetry)
    content.vb: Public Sub TrackDependency(telemetry As DependencyTelemetry)
    parameters:
    - id: telemetry
      type: Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.TelemetryClient.TrackAvailability(System.String,DateTimeOffset,TimeSpan,System.String,System.Boolean,System.String)
  commentId: M:Microsoft.ApplicationInsights.TelemetryClient.TrackAvailability(System.String,DateTimeOffset,TimeSpan,System.String,System.Boolean,System.String)
  id: TrackAvailability(System.String,DateTimeOffset,TimeSpan,System.String,System.Boolean,System.String)
  parent: Microsoft.ApplicationInsights.TelemetryClient
  langs:
  - csharp
  - vb
  name: TrackAvailability(String, DateTimeOffset, TimeSpan, String, Boolean, String)
  fullName: Microsoft.ApplicationInsights.TelemetryClient.TrackAvailability(System.String, DateTimeOffset, TimeSpan, System.String, System.Boolean, System.String)
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/TelemetryClient.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: TrackAvailability
    path: src/Core/Managed/Shared/TelemetryClient.cs
    startLine: 298
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights
  summary: "\nSend information about availability of an application.\n"
  example: []
  syntax:
    content: public void TrackAvailability(string name, DateTimeOffset timeStamp, TimeSpan duration, string runLocation, bool success, string message = null)
    content.vb: Public Sub TrackAvailability(name As String, timeStamp As DateTimeOffset, duration As TimeSpan, runLocation As String, success As Boolean, message As String = Nothing)
    parameters:
    - id: name
      type: System.String
      description: Availability test name.
    - id: timeStamp
      type: DateTimeOffset
      description: The time when the availability was captured.
    - id: duration
      type: TimeSpan
      description: The time taken for the availability test to run.
    - id: runLocation
      type: System.String
      description: Name of the location the availability test was run from.
    - id: success
      type: System.Boolean
      description: True if the availability test ran successfully.
    - id: message
      type: System.String
      description: Error message on availability test run failure.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.TelemetryClient.TrackAvailability(Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry)
  commentId: M:Microsoft.ApplicationInsights.TelemetryClient.TrackAvailability(Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry)
  id: TrackAvailability(Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry)
  parent: Microsoft.ApplicationInsights.TelemetryClient
  langs:
  - csharp
  - vb
  name: TrackAvailability(AvailabilityTelemetry)
  fullName: Microsoft.ApplicationInsights.TelemetryClient.TrackAvailability(Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry)
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/TelemetryClient.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: TrackAvailability
    path: src/Core/Managed/Shared/TelemetryClient.cs
    startLine: 307
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights
  summary: "\nSend information about availability of an application.\nCreate a separate <xref href=\"Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry\" data-throw-if-not-resolved=\"false\"></xref> instance for each call to <xref href=\"Microsoft.ApplicationInsights.TelemetryClient.TrackAvailability(Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public void TrackAvailability(AvailabilityTelemetry telemetry)
    content.vb: Public Sub TrackAvailability(telemetry As AvailabilityTelemetry)
    parameters:
    - id: telemetry
      type: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.TelemetryClient.Track(Microsoft.ApplicationInsights.Channel.ITelemetry)
  commentId: M:Microsoft.ApplicationInsights.TelemetryClient.Track(Microsoft.ApplicationInsights.Channel.ITelemetry)
  id: Track(Microsoft.ApplicationInsights.Channel.ITelemetry)
  parent: Microsoft.ApplicationInsights.TelemetryClient
  langs:
  - csharp
  - vb
  name: Track(ITelemetry)
  fullName: Microsoft.ApplicationInsights.TelemetryClient.Track(Microsoft.ApplicationInsights.Channel.ITelemetry)
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/TelemetryClient.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Track
    path: src/Core/Managed/Shared/TelemetryClient.cs
    startLine: 320
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights
  summary: "\nThis method is an internal part of Application Insights infrastructure. Do not call.\n"
  example: []
  syntax:
    content: public void Track(ITelemetry telemetry)
    content.vb: Public Sub Track(telemetry As ITelemetry)
    parameters:
    - id: telemetry
      type: Microsoft.ApplicationInsights.Channel.ITelemetry
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.TelemetryClient.Initialize(Microsoft.ApplicationInsights.Channel.ITelemetry)
  commentId: M:Microsoft.ApplicationInsights.TelemetryClient.Initialize(Microsoft.ApplicationInsights.Channel.ITelemetry)
  id: Initialize(Microsoft.ApplicationInsights.Channel.ITelemetry)
  parent: Microsoft.ApplicationInsights.TelemetryClient
  langs:
  - csharp
  - vb
  name: Initialize(ITelemetry)
  fullName: Microsoft.ApplicationInsights.TelemetryClient.Initialize(Microsoft.ApplicationInsights.Channel.ITelemetry)
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/TelemetryClient.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Initialize
    path: src/Core/Managed/Shared/TelemetryClient.cs
    startLine: 350
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights
  summary: "\nThis method is an internal part of Application Insights infrastructure. Do not call.\n"
  example: []
  syntax:
    content: public void Initialize(ITelemetry telemetry)
    content.vb: Public Sub Initialize(telemetry As ITelemetry)
    parameters:
    - id: telemetry
      type: Microsoft.ApplicationInsights.Channel.ITelemetry
      description: Telemetry item to initialize.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.TelemetryClient.TrackPageView(System.String)
  commentId: M:Microsoft.ApplicationInsights.TelemetryClient.TrackPageView(System.String)
  id: TrackPageView(System.String)
  parent: Microsoft.ApplicationInsights.TelemetryClient
  langs:
  - csharp
  - vb
  name: TrackPageView(String)
  fullName: Microsoft.ApplicationInsights.TelemetryClient.TrackPageView(System.String)
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/TelemetryClient.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: TrackPageView
    path: src/Core/Managed/Shared/TelemetryClient.cs
    startLine: 408
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights
  summary: "\nSend information about the page viewed in the application.\n"
  example: []
  syntax:
    content: public void TrackPageView(string name)
    content.vb: Public Sub TrackPageView(name As String)
    parameters:
    - id: name
      type: System.String
      description: Name of the page.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.TelemetryClient.TrackPageView(Microsoft.ApplicationInsights.DataContracts.PageViewTelemetry)
  commentId: M:Microsoft.ApplicationInsights.TelemetryClient.TrackPageView(Microsoft.ApplicationInsights.DataContracts.PageViewTelemetry)
  id: TrackPageView(Microsoft.ApplicationInsights.DataContracts.PageViewTelemetry)
  parent: Microsoft.ApplicationInsights.TelemetryClient
  langs:
  - csharp
  - vb
  name: TrackPageView(PageViewTelemetry)
  fullName: Microsoft.ApplicationInsights.TelemetryClient.TrackPageView(Microsoft.ApplicationInsights.DataContracts.PageViewTelemetry)
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/TelemetryClient.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: TrackPageView
    path: src/Core/Managed/Shared/TelemetryClient.cs
    startLine: 417
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights
  summary: "\nSend information about the page viewed in the application.\nCreate a separate <xref href=\"Microsoft.ApplicationInsights.DataContracts.PageViewTelemetry\" data-throw-if-not-resolved=\"false\"></xref> instance for each call to <xref href=\"Microsoft.ApplicationInsights.TelemetryClient.TrackPageView(Microsoft.ApplicationInsights.DataContracts.PageViewTelemetry)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void TrackPageView(PageViewTelemetry telemetry)
    content.vb: Public Sub TrackPageView(telemetry As PageViewTelemetry)
    parameters:
    - id: telemetry
      type: Microsoft.ApplicationInsights.DataContracts.PageViewTelemetry
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.TelemetryClient.TrackRequest(System.String,DateTimeOffset,TimeSpan,System.String,System.Boolean)
  commentId: M:Microsoft.ApplicationInsights.TelemetryClient.TrackRequest(System.String,DateTimeOffset,TimeSpan,System.String,System.Boolean)
  id: TrackRequest(System.String,DateTimeOffset,TimeSpan,System.String,System.Boolean)
  parent: Microsoft.ApplicationInsights.TelemetryClient
  langs:
  - csharp
  - vb
  name: TrackRequest(String, DateTimeOffset, TimeSpan, String, Boolean)
  fullName: Microsoft.ApplicationInsights.TelemetryClient.TrackRequest(System.String, DateTimeOffset, TimeSpan, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/TelemetryClient.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: TrackRequest
    path: src/Core/Managed/Shared/TelemetryClient.cs
    startLine: 435
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights
  summary: "\nSend information about a request handled by the application.\n"
  example: []
  syntax:
    content: public void TrackRequest(string name, DateTimeOffset startTime, TimeSpan duration, string responseCode, bool success)
    content.vb: Public Sub TrackRequest(name As String, startTime As DateTimeOffset, duration As TimeSpan, responseCode As String, success As Boolean)
    parameters:
    - id: name
      type: System.String
      description: The request name.
    - id: startTime
      type: DateTimeOffset
      description: The time when the page was requested.
    - id: duration
      type: TimeSpan
      description: The time taken by the application to handle the request.
    - id: responseCode
      type: System.String
      description: The response status code.
    - id: success
      type: System.Boolean
      description: True if the request was handled successfully by the application.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.TelemetryClient.TrackRequest(Microsoft.ApplicationInsights.DataContracts.RequestTelemetry)
  commentId: M:Microsoft.ApplicationInsights.TelemetryClient.TrackRequest(Microsoft.ApplicationInsights.DataContracts.RequestTelemetry)
  id: TrackRequest(Microsoft.ApplicationInsights.DataContracts.RequestTelemetry)
  parent: Microsoft.ApplicationInsights.TelemetryClient
  langs:
  - csharp
  - vb
  name: TrackRequest(RequestTelemetry)
  fullName: Microsoft.ApplicationInsights.TelemetryClient.TrackRequest(Microsoft.ApplicationInsights.DataContracts.RequestTelemetry)
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/TelemetryClient.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: TrackRequest
    path: src/Core/Managed/Shared/TelemetryClient.cs
    startLine: 444
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights
  summary: "\nSend information about a request handled by the application.\nCreate a separate <xref href=\"Microsoft.ApplicationInsights.DataContracts.RequestTelemetry\" data-throw-if-not-resolved=\"false\"></xref> instance for each call to <xref href=\"Microsoft.ApplicationInsights.TelemetryClient.TrackRequest(Microsoft.ApplicationInsights.DataContracts.RequestTelemetry)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void TrackRequest(RequestTelemetry request)
    content.vb: Public Sub TrackRequest(request As RequestTelemetry)
    parameters:
    - id: request
      type: Microsoft.ApplicationInsights.DataContracts.RequestTelemetry
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ApplicationInsights.TelemetryClient.Flush
  commentId: M:Microsoft.ApplicationInsights.TelemetryClient.Flush
  id: Flush
  parent: Microsoft.ApplicationInsights.TelemetryClient
  langs:
  - csharp
  - vb
  name: Flush()
  fullName: Microsoft.ApplicationInsights.TelemetryClient.Flush()
  type: Method
  source:
    remote:
      path: src/Core/Managed/Shared/TelemetryClient.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Flush
    path: src/Core/Managed/Shared/TelemetryClient.cs
    startLine: 457
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights
  summary: "\nFlushes the in-memory buffer. \n"
  example: []
  syntax:
    content: public void Flush()
    content.vb: Public Sub Flush
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.ApplicationInsights
  isExternal: false
  name: Microsoft.ApplicationInsights
  fullName: Microsoft.ApplicationInsights
- uid: System.Object
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.ApplicationInsights.TelemetryClient
  parent: Microsoft.ApplicationInsights
  isExternal: false
  name: TelemetryClient
  fullName: Microsoft.ApplicationInsights.TelemetryClient
- uid: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration
  parent: Microsoft.ApplicationInsights.Extensibility
  isExternal: false
  name: TelemetryConfiguration
  fullName: Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration
- uid: Microsoft.ApplicationInsights.Extensibility
  isExternal: false
  name: Microsoft.ApplicationInsights.Extensibility
  fullName: Microsoft.ApplicationInsights.Extensibility
- uid: Microsoft.ApplicationInsights.DataContracts.TelemetryContext
  parent: Microsoft.ApplicationInsights.DataContracts
  isExternal: false
  name: TelemetryContext
  fullName: Microsoft.ApplicationInsights.DataContracts.TelemetryContext
- uid: Microsoft.ApplicationInsights.DataContracts
  isExternal: false
  name: Microsoft.ApplicationInsights.DataContracts
  fullName: Microsoft.ApplicationInsights.DataContracts
- uid: Microsoft.ApplicationInsights.Channel.ITelemetry
  parent: Microsoft.ApplicationInsights.Channel
  isExternal: false
  name: ITelemetry
  fullName: Microsoft.ApplicationInsights.Channel.ITelemetry
- uid: System.String
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.ApplicationInsights.Channel
  isExternal: false
  name: Microsoft.ApplicationInsights.Channel
  fullName: Microsoft.ApplicationInsights.Channel
- uid: System.Boolean
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: Microsoft.ApplicationInsights.DataContracts.EventTelemetry
  parent: Microsoft.ApplicationInsights.DataContracts
  isExternal: false
  name: EventTelemetry
  fullName: Microsoft.ApplicationInsights.DataContracts.EventTelemetry
- uid: IDictionary{System.String,System.String}
  definition: IDictionary`2
  name: IDictionary<String, String>
  fullName: IDictionary<System.String, System.String>
  fullname.vb: IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: IDictionary{System.String,System.Double}
  definition: IDictionary`2
  name: IDictionary<String, Double>
  fullName: IDictionary<System.String, System.Double>
  fullname.vb: IDictionary(Of System.String, System.Double)
  name.vb: IDictionary(Of String, Double)
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
- uid: IDictionary`2
  isExternal: true
  name: IDictionary<, >
  fullName: IDictionary<, >
  fullname.vb: IDictionary(Of , )
  name.vb: IDictionary(Of , )
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: ', '
    fullName: ', '
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: ', '
    fullName: ', '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: Microsoft.ApplicationInsights.TelemetryClient.TrackEvent(Microsoft.ApplicationInsights.DataContracts.EventTelemetry)
- uid: Microsoft.ApplicationInsights.DataContracts.SeverityLevel
  parent: Microsoft.ApplicationInsights.DataContracts
  isExternal: false
  name: SeverityLevel
  fullName: Microsoft.ApplicationInsights.DataContracts.SeverityLevel
- uid: Microsoft.ApplicationInsights.DataContracts.TraceTelemetry
  parent: Microsoft.ApplicationInsights.DataContracts
  isExternal: false
  name: TraceTelemetry
  fullName: Microsoft.ApplicationInsights.DataContracts.TraceTelemetry
- uid: Microsoft.ApplicationInsights.TelemetryClient.TrackTrace(Microsoft.ApplicationInsights.DataContracts.TraceTelemetry)
- uid: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry
  parent: Microsoft.ApplicationInsights.DataContracts
  isExternal: false
  name: MetricTelemetry
  fullName: Microsoft.ApplicationInsights.DataContracts.MetricTelemetry
- uid: System.Double
  isExternal: true
  name: Double
  fullName: System.Double
- uid: Microsoft.ApplicationInsights.TelemetryClient.TrackMetric(Microsoft.ApplicationInsights.DataContracts.MetricTelemetry)
- uid: Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry
  parent: Microsoft.ApplicationInsights.DataContracts
  isExternal: false
  name: ExceptionTelemetry
  fullName: Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry
- uid: Exception
  isExternal: true
  name: Exception
  fullName: Exception
- uid: Microsoft.ApplicationInsights.TelemetryClient.TrackException(Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry)
- uid: DateTimeOffset
  isExternal: true
  name: DateTimeOffset
  fullName: DateTimeOffset
- uid: TimeSpan
  isExternal: true
  name: TimeSpan
  fullName: TimeSpan
- uid: Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry
  parent: Microsoft.ApplicationInsights.DataContracts
  isExternal: false
  name: DependencyTelemetry
  fullName: Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry
- uid: Microsoft.ApplicationInsights.TelemetryClient.TrackDependency(Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry)
- uid: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry
  parent: Microsoft.ApplicationInsights.DataContracts
  isExternal: false
  name: AvailabilityTelemetry
  fullName: Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry
- uid: Microsoft.ApplicationInsights.TelemetryClient.TrackAvailability(Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry)
- uid: Microsoft.ApplicationInsights.DataContracts.PageViewTelemetry
  parent: Microsoft.ApplicationInsights.DataContracts
  isExternal: false
  name: PageViewTelemetry
  fullName: Microsoft.ApplicationInsights.DataContracts.PageViewTelemetry
- uid: Microsoft.ApplicationInsights.TelemetryClient.TrackPageView(Microsoft.ApplicationInsights.DataContracts.PageViewTelemetry)
- uid: Microsoft.ApplicationInsights.DataContracts.RequestTelemetry
  parent: Microsoft.ApplicationInsights.DataContracts
  isExternal: false
  name: RequestTelemetry
  fullName: Microsoft.ApplicationInsights.DataContracts.RequestTelemetry
- uid: Microsoft.ApplicationInsights.TelemetryClient.TrackRequest(Microsoft.ApplicationInsights.DataContracts.RequestTelemetry)
