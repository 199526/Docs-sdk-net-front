### YamlMime:ManagedReference
items:
- uid: Microsoft.ApplicationInsights.DataContracts.ISupportProperties
  commentId: T:Microsoft.ApplicationInsights.DataContracts.ISupportProperties
  id: ISupportProperties
  parent: Microsoft.ApplicationInsights.DataContracts
  children:
  - Microsoft.ApplicationInsights.DataContracts.ISupportProperties.Properties
  langs:
  - csharp
  - vb
  name: ISupportProperties
  nameWithType: ISupportProperties
  fullName: Microsoft.ApplicationInsights.DataContracts.ISupportProperties
  type: Interface
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/ISupportProperties.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: ISupportProperties
    path: src/Core/Managed/Shared/DataContracts/ISupportProperties.cs
    startLine: 7
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nRepresents an object that supports application-defined properties.\n"
  example: []
  syntax:
    content: public interface ISupportProperties
    content.vb: Public Interface ISupportProperties
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.ApplicationInsights.DataContracts.ISupportProperties.Properties
  commentId: P:Microsoft.ApplicationInsights.DataContracts.ISupportProperties.Properties
  id: Properties
  parent: Microsoft.ApplicationInsights.DataContracts.ISupportProperties
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: ISupportProperties.Properties
  fullName: Microsoft.ApplicationInsights.DataContracts.ISupportProperties.Properties
  type: Property
  source:
    remote:
      path: src/Core/Managed/Shared/DataContracts/ISupportProperties.cs
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-dotnet
    id: Properties
    path: src/Core/Managed/Shared/DataContracts/ISupportProperties.cs
    startLine: 12
  assemblies:
  - Microsoft.ApplicationInsights
  namespace: Microsoft.ApplicationInsights.DataContracts
  summary: "\nGets a dictionary of application-defined property names and values providing additional information about telemetry.\n"
  example: []
  syntax:
    content: IDictionary<string, string> Properties { get; }
    content.vb: ReadOnly Property Properties As IDictionary(Of String, String)
    parameters: []
    return:
      type: IDictionary{System.String,System.String}
  overload: Microsoft.ApplicationInsights.DataContracts.ISupportProperties.Properties*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Microsoft.ApplicationInsights.DataContracts
  commentId: N:Microsoft.ApplicationInsights.DataContracts
  isExternal: false
  name: Microsoft.ApplicationInsights.DataContracts
  nameWithType: Microsoft.ApplicationInsights.DataContracts
  fullName: Microsoft.ApplicationInsights.DataContracts
- uid: Microsoft.ApplicationInsights.DataContracts.ISupportProperties.Properties*
  commentId: Overload:Microsoft.ApplicationInsights.DataContracts.ISupportProperties.Properties
  isExternal: false
  name: Properties
  nameWithType: ISupportProperties.Properties
  fullName: Microsoft.ApplicationInsights.DataContracts.ISupportProperties.Properties
- uid: IDictionary{System.String,System.String}
  commentId: '!:IDictionary{System.String,System.String}'
  definition: IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IDictionary`2
  isExternal: true
  name: IDictionary<, >
  nameWithType: IDictionary<, >
  fullName: IDictionary<, >
  nameWithType.vb: IDictionary(Of , )
  fullname.vb: IDictionary(Of , )
  name.vb: IDictionary(Of , )
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
