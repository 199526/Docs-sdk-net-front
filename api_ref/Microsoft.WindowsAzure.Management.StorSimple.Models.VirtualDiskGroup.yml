### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.StorSimple.Models.VirtualDiskGroup
  commentId: T:Microsoft.WindowsAzure.Management.StorSimple.Models.VirtualDiskGroup
  id: VirtualDiskGroup
  parent: Microsoft.WindowsAzure.Management.StorSimple.Models
  children:
  - Microsoft.WindowsAzure.Management.StorSimple.Models.VirtualDiskGroup.#ctor
  - Microsoft.WindowsAzure.Management.StorSimple.Models.VirtualDiskGroup.#ctor(System.String,System.Collections.Generic.List{System.String})
  - Microsoft.WindowsAzure.Management.StorSimple.Models.VirtualDiskGroup.InstanceId
  - Microsoft.WindowsAzure.Management.StorSimple.Models.VirtualDiskGroup.Name
  - Microsoft.WindowsAzure.Management.StorSimple.Models.VirtualDiskGroup.OperationInProgress
  - Microsoft.WindowsAzure.Management.StorSimple.Models.VirtualDiskGroup.VirtualDiskList
  langs:
  - csharp
  - vb
  name: VirtualDiskGroup
  nameWithType: VirtualDiskGroup
  fullName: Microsoft.WindowsAzure.Management.StorSimple.Models.VirtualDiskGroup
  type: Class
  source:
    remote:
      path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/VirtualDiskGroup.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VirtualDiskGroup
    path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/VirtualDiskGroup.cs
    startLine: 31
  assemblies:
  - Microsoft.WindowsAzure.Management.StorSimple
  namespace: Microsoft.WindowsAzure.Management.StorSimple.Models
  summary: "\nThis class represents virtual disk group (volume group).\n"
  example: []
  syntax:
    content: public class VirtualDiskGroup
    content.vb: Public Class VirtualDiskGroup
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.StorSimple.Models.VirtualDiskGroup.InstanceId
  commentId: P:Microsoft.WindowsAzure.Management.StorSimple.Models.VirtualDiskGroup.InstanceId
  id: InstanceId
  parent: Microsoft.WindowsAzure.Management.StorSimple.Models.VirtualDiskGroup
  langs:
  - csharp
  - vb
  name: InstanceId
  nameWithType: VirtualDiskGroup.InstanceId
  fullName: Microsoft.WindowsAzure.Management.StorSimple.Models.VirtualDiskGroup.InstanceId
  type: Property
  source:
    remote:
      path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/VirtualDiskGroup.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: InstanceId
    path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/VirtualDiskGroup.cs
    startLine: 38
  assemblies:
  - Microsoft.WindowsAzure.Management.StorSimple
  namespace: Microsoft.WindowsAzure.Management.StorSimple.Models
  summary: "\nOptional. Gets or sets the instance id of the volume group\n"
  example: []
  syntax:
    content: public string InstanceId { get; set; }
    content.vb: Public Property InstanceId As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.StorSimple.Models.VirtualDiskGroup.Name
  commentId: P:Microsoft.WindowsAzure.Management.StorSimple.Models.VirtualDiskGroup.Name
  id: Name
  parent: Microsoft.WindowsAzure.Management.StorSimple.Models.VirtualDiskGroup
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: VirtualDiskGroup.Name
  fullName: Microsoft.WindowsAzure.Management.StorSimple.Models.VirtualDiskGroup.Name
  type: Property
  source:
    remote:
      path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/VirtualDiskGroup.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/VirtualDiskGroup.cs
    startLine: 49
  assemblies:
  - Microsoft.WindowsAzure.Management.StorSimple
  namespace: Microsoft.WindowsAzure.Management.StorSimple.Models
  summary: "\nRequired. Gets or sets the name of the volume group\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.StorSimple.Models.VirtualDiskGroup.OperationInProgress
  commentId: P:Microsoft.WindowsAzure.Management.StorSimple.Models.VirtualDiskGroup.OperationInProgress
  id: OperationInProgress
  parent: Microsoft.WindowsAzure.Management.StorSimple.Models.VirtualDiskGroup
  langs:
  - csharp
  - vb
  name: OperationInProgress
  nameWithType: VirtualDiskGroup.OperationInProgress
  fullName: Microsoft.WindowsAzure.Management.StorSimple.Models.VirtualDiskGroup.OperationInProgress
  type: Property
  source:
    remote:
      path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/VirtualDiskGroup.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: OperationInProgress
    path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/VirtualDiskGroup.cs
    startLine: 61
  assemblies:
  - Microsoft.WindowsAzure.Management.StorSimple
  namespace: Microsoft.WindowsAzure.Management.StorSimple.Models
  summary: "\nOptional. Gets or sets a value indicating whether any operation is\nin progress or not\n"
  example: []
  syntax:
    content: public OperationInProgress OperationInProgress { get; set; }
    content.vb: Public Property OperationInProgress As OperationInProgress
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Management.StorSimple.Models.OperationInProgress
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.StorSimple.Models.VirtualDiskGroup.VirtualDiskList
  commentId: P:Microsoft.WindowsAzure.Management.StorSimple.Models.VirtualDiskGroup.VirtualDiskList
  id: VirtualDiskList
  parent: Microsoft.WindowsAzure.Management.StorSimple.Models.VirtualDiskGroup
  langs:
  - csharp
  - vb
  name: VirtualDiskList
  nameWithType: VirtualDiskGroup.VirtualDiskList
  fullName: Microsoft.WindowsAzure.Management.StorSimple.Models.VirtualDiskGroup.VirtualDiskList
  type: Property
  source:
    remote:
      path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/VirtualDiskGroup.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VirtualDiskList
    path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/VirtualDiskGroup.cs
    startLine: 73
  assemblies:
  - Microsoft.WindowsAzure.Management.StorSimple
  namespace: Microsoft.WindowsAzure.Management.StorSimple.Models
  summary: "\nRequired. Gets or sets list of volumes associated with the volume\ngroup.\n"
  example: []
  syntax:
    content: public IList<string> VirtualDiskList { get; set; }
    content.vb: Public Property VirtualDiskList As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.StorSimple.Models.VirtualDiskGroup.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.StorSimple.Models.VirtualDiskGroup.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.StorSimple.Models.VirtualDiskGroup
  langs:
  - csharp
  - vb
  name: VirtualDiskGroup()
  nameWithType: VirtualDiskGroup.VirtualDiskGroup()
  fullName: Microsoft.WindowsAzure.Management.StorSimple.Models.VirtualDiskGroup.VirtualDiskGroup()
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/VirtualDiskGroup.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/VirtualDiskGroup.cs
    startLine: 82
  assemblies:
  - Microsoft.WindowsAzure.Management.StorSimple
  namespace: Microsoft.WindowsAzure.Management.StorSimple.Models
  summary: "\nInitializes a new instance of the VirtualDiskGroup class.\n"
  example: []
  syntax:
    content: public VirtualDiskGroup()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.StorSimple.Models.VirtualDiskGroup.#ctor(System.String,System.Collections.Generic.List{System.String})
  commentId: M:Microsoft.WindowsAzure.Management.StorSimple.Models.VirtualDiskGroup.#ctor(System.String,System.Collections.Generic.List{System.String})
  id: '#ctor(System.String,System.Collections.Generic.List{System.String})'
  parent: Microsoft.WindowsAzure.Management.StorSimple.Models.VirtualDiskGroup
  langs:
  - csharp
  - vb
  name: VirtualDiskGroup(String, List<String>)
  nameWithType: VirtualDiskGroup.VirtualDiskGroup(String, List<String>)
  fullName: Microsoft.WindowsAzure.Management.StorSimple.Models.VirtualDiskGroup.VirtualDiskGroup(System.String, System.Collections.Generic.List<System.String>)
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/VirtualDiskGroup.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/StorSimple/StorSimple/Generated/Models/VirtualDiskGroup.cs
    startLine: 91
  assemblies:
  - Microsoft.WindowsAzure.Management.StorSimple
  namespace: Microsoft.WindowsAzure.Management.StorSimple.Models
  summary: "\nInitializes a new instance of the VirtualDiskGroup class with\nrequired arguments.\n"
  example: []
  syntax:
    content: public VirtualDiskGroup(string name, List<string> virtualDiskList)
    content.vb: Public Sub New(name As String, virtualDiskList As List(Of String))
    parameters:
    - id: name
      type: System.String
    - id: virtualDiskList
      type: System.Collections.Generic.List{System.String}
  nameWithType.vb: VirtualDiskGroup.VirtualDiskGroup(String, List(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Management.StorSimple.Models.VirtualDiskGroup.VirtualDiskGroup(System.String, System.Collections.Generic.List(Of System.String))
  name.vb: VirtualDiskGroup(String, List(Of String))
references:
- uid: Microsoft.WindowsAzure.Management.StorSimple.Models
  commentId: N:Microsoft.WindowsAzure.Management.StorSimple.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.StorSimple.Models
  nameWithType: Microsoft.WindowsAzure.Management.StorSimple.Models
  fullName: Microsoft.WindowsAzure.Management.StorSimple.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.Management.StorSimple.Models.OperationInProgress
  commentId: T:Microsoft.WindowsAzure.Management.StorSimple.Models.OperationInProgress
  parent: Microsoft.WindowsAzure.Management.StorSimple.Models
  isExternal: false
  name: OperationInProgress
  nameWithType: OperationInProgress
  fullName: Microsoft.WindowsAzure.Management.StorSimple.Models.OperationInProgress
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullname.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullname.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
