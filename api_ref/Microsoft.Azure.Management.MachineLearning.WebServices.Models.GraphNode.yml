items:
- uid: Microsoft.Azure.Management.MachineLearning.WebServices.Models.GraphNode
  commentId: T:Microsoft.Azure.Management.MachineLearning.WebServices.Models.GraphNode
  id: GraphNode
  parent: Microsoft.Azure.Management.MachineLearning.WebServices.Models
  children:
  - Microsoft.Azure.Management.MachineLearning.WebServices.Models.GraphNode.#ctor
  - Microsoft.Azure.Management.MachineLearning.WebServices.Models.GraphNode.#ctor(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})
  - Microsoft.Azure.Management.MachineLearning.WebServices.Models.GraphNode.AssetId
  - Microsoft.Azure.Management.MachineLearning.WebServices.Models.GraphNode.InputId
  - Microsoft.Azure.Management.MachineLearning.WebServices.Models.GraphNode.OutputId
  - Microsoft.Azure.Management.MachineLearning.WebServices.Models.GraphNode.Parameters
  langs:
  - csharp
  - vb
  name: GraphNode
  fullName: Microsoft.Azure.Management.MachineLearning.WebServices.Models.GraphNode
  type: Class
  source:
    remote:
      path: src/ResourceManagement/MachineLearning/Microsoft.Azure.Management.MachineLearning/Generated/WebServices/Models/GraphNode.cs
      branch: 2d793328d097bcb56ec8f92d3d36ef0ffe249a1d
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GraphNode
    path: src/ResourceManagement/MachineLearning/Microsoft.Azure.Management.MachineLearning/Generated/WebServices/Models/GraphNode.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Management.MachineLearning
  packages:
  - Microsoft.Azure.Management.MachineLearning(0.9.4-preview)
  namespace: Microsoft.Azure.Management.MachineLearning.WebServices.Models
  summary: "\nSpecifies a node in the web service graph. The node can either be an\ninput, output or asset node, so only one of the corresponding id\nproperties is populated at any given time.\n"
  example: []
  syntax:
    content: public class GraphNode
    content.vb: Public Class GraphNode
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.MachineLearning.WebServices.Models.GraphNode.#ctor
  commentId: M:Microsoft.Azure.Management.MachineLearning.WebServices.Models.GraphNode.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.MachineLearning.WebServices.Models.GraphNode
  langs:
  - csharp
  - vb
  name: GraphNode()
  fullName: Microsoft.Azure.Management.MachineLearning.WebServices.Models.GraphNode.GraphNode()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/MachineLearning/Microsoft.Azure.Management.MachineLearning/Generated/WebServices/Models/GraphNode.cs
      branch: 2d793328d097bcb56ec8f92d3d36ef0ffe249a1d
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/MachineLearning/Microsoft.Azure.Management.MachineLearning/Generated/WebServices/Models/GraphNode.cs
    startLine: 28
  assemblies:
  - Microsoft.Azure.Management.MachineLearning
  packages:
  - Microsoft.Azure.Management.MachineLearning(0.9.4-preview)
  namespace: Microsoft.Azure.Management.MachineLearning.WebServices.Models
  summary: "\nInitializes a new instance of the GraphNode class.\n"
  example: []
  syntax:
    content: public GraphNode()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.MachineLearning.WebServices.Models.GraphNode.#ctor(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})
  commentId: M:Microsoft.Azure.Management.MachineLearning.WebServices.Models.GraphNode.#ctor(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})
  id: '#ctor(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})'
  parent: Microsoft.Azure.Management.MachineLearning.WebServices.Models.GraphNode
  langs:
  - csharp
  - vb
  name: GraphNode(String, String, String, IDictionary<String, String>)
  fullName: Microsoft.Azure.Management.MachineLearning.WebServices.Models.GraphNode.GraphNode(System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.String>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/MachineLearning/Microsoft.Azure.Management.MachineLearning/Generated/WebServices/Models/GraphNode.cs
      branch: 2d793328d097bcb56ec8f92d3d36ef0ffe249a1d
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/MachineLearning/Microsoft.Azure.Management.MachineLearning/Generated/WebServices/Models/GraphNode.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Management.MachineLearning
  packages:
  - Microsoft.Azure.Management.MachineLearning(0.9.4-preview)
  namespace: Microsoft.Azure.Management.MachineLearning.WebServices.Models
  summary: "\nInitializes a new instance of the GraphNode class.\n"
  example: []
  syntax:
    content: public GraphNode(string assetId = null, string inputId = null, string outputId = null, IDictionary<string, string> parameters = null)
    content.vb: Public Sub New(assetId As String = Nothing, inputId As String = Nothing, outputId As String = Nothing, parameters As IDictionary(Of String, String) = Nothing)
    parameters:
    - id: assetId
      type: System.String
    - id: inputId
      type: System.String
    - id: outputId
      type: System.String
    - id: parameters
      type: System.Collections.Generic.IDictionary{System.String,System.String}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.MachineLearning.WebServices.Models.GraphNode.GraphNode(System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.String))
  name.vb: GraphNode(String, String, String, IDictionary(Of String, String))
- uid: Microsoft.Azure.Management.MachineLearning.WebServices.Models.GraphNode.AssetId
  commentId: P:Microsoft.Azure.Management.MachineLearning.WebServices.Models.GraphNode.AssetId
  id: AssetId
  parent: Microsoft.Azure.Management.MachineLearning.WebServices.Models.GraphNode
  langs:
  - csharp
  - vb
  name: AssetId
  fullName: Microsoft.Azure.Management.MachineLearning.WebServices.Models.GraphNode.AssetId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/MachineLearning/Microsoft.Azure.Management.MachineLearning/Generated/WebServices/Models/GraphNode.cs
      branch: 2d793328d097bcb56ec8f92d3d36ef0ffe249a1d
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AssetId
    path: src/ResourceManagement/MachineLearning/Microsoft.Azure.Management.MachineLearning/Generated/WebServices/Models/GraphNode.cs
    startLine: 44
  assemblies:
  - Microsoft.Azure.Management.MachineLearning
  packages:
  - Microsoft.Azure.Management.MachineLearning(0.9.4-preview)
  namespace: Microsoft.Azure.Management.MachineLearning.WebServices.Models
  summary: "\nThe id of the asset represented by this node.\n"
  example: []
  syntax:
    content: public string AssetId { get; set; }
    content.vb: Public Property AssetId As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.MachineLearning.WebServices.Models.GraphNode.InputId
  commentId: P:Microsoft.Azure.Management.MachineLearning.WebServices.Models.GraphNode.InputId
  id: InputId
  parent: Microsoft.Azure.Management.MachineLearning.WebServices.Models.GraphNode
  langs:
  - csharp
  - vb
  name: InputId
  fullName: Microsoft.Azure.Management.MachineLearning.WebServices.Models.GraphNode.InputId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/MachineLearning/Microsoft.Azure.Management.MachineLearning/Generated/WebServices/Models/GraphNode.cs
      branch: 2d793328d097bcb56ec8f92d3d36ef0ffe249a1d
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: InputId
    path: src/ResourceManagement/MachineLearning/Microsoft.Azure.Management.MachineLearning/Generated/WebServices/Models/GraphNode.cs
    startLine: 50
  assemblies:
  - Microsoft.Azure.Management.MachineLearning
  packages:
  - Microsoft.Azure.Management.MachineLearning(0.9.4-preview)
  namespace: Microsoft.Azure.Management.MachineLearning.WebServices.Models
  summary: "\nThe id of the input element represented by this node.\n"
  example: []
  syntax:
    content: public string InputId { get; set; }
    content.vb: Public Property InputId As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.MachineLearning.WebServices.Models.GraphNode.OutputId
  commentId: P:Microsoft.Azure.Management.MachineLearning.WebServices.Models.GraphNode.OutputId
  id: OutputId
  parent: Microsoft.Azure.Management.MachineLearning.WebServices.Models.GraphNode
  langs:
  - csharp
  - vb
  name: OutputId
  fullName: Microsoft.Azure.Management.MachineLearning.WebServices.Models.GraphNode.OutputId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/MachineLearning/Microsoft.Azure.Management.MachineLearning/Generated/WebServices/Models/GraphNode.cs
      branch: 2d793328d097bcb56ec8f92d3d36ef0ffe249a1d
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: OutputId
    path: src/ResourceManagement/MachineLearning/Microsoft.Azure.Management.MachineLearning/Generated/WebServices/Models/GraphNode.cs
    startLine: 56
  assemblies:
  - Microsoft.Azure.Management.MachineLearning
  packages:
  - Microsoft.Azure.Management.MachineLearning(0.9.4-preview)
  namespace: Microsoft.Azure.Management.MachineLearning.WebServices.Models
  summary: "\nThe id of the output element represented by this node.\n"
  example: []
  syntax:
    content: public string OutputId { get; set; }
    content.vb: Public Property OutputId As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.MachineLearning.WebServices.Models.GraphNode.Parameters
  commentId: P:Microsoft.Azure.Management.MachineLearning.WebServices.Models.GraphNode.Parameters
  id: Parameters
  parent: Microsoft.Azure.Management.MachineLearning.WebServices.Models.GraphNode
  langs:
  - csharp
  - vb
  name: Parameters
  fullName: Microsoft.Azure.Management.MachineLearning.WebServices.Models.GraphNode.Parameters
  type: Property
  source:
    remote:
      path: src/ResourceManagement/MachineLearning/Microsoft.Azure.Management.MachineLearning/Generated/WebServices/Models/GraphNode.cs
      branch: 2d793328d097bcb56ec8f92d3d36ef0ffe249a1d
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Parameters
    path: src/ResourceManagement/MachineLearning/Microsoft.Azure.Management.MachineLearning/Generated/WebServices/Models/GraphNode.cs
    startLine: 63
  assemblies:
  - Microsoft.Azure.Management.MachineLearning
  packages:
  - Microsoft.Azure.Management.MachineLearning(0.9.4-preview)
  namespace: Microsoft.Azure.Management.MachineLearning.WebServices.Models
  summary: "\nIf applicable, parameters of the node. Global graph parameters map\ninto these, with values set at runtime.\n"
  example: []
  syntax:
    content: public IDictionary<string, string> Parameters { get; set; }
    content.vb: Public Property Parameters As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.MachineLearning.WebServices.Models
  isExternal: false
  name: Microsoft.Azure.Management.MachineLearning.WebServices.Models
  fullName: Microsoft.Azure.Management.MachineLearning.WebServices.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
