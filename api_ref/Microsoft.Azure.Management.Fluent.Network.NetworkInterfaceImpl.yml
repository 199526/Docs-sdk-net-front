items:
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  commentId: T:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  id: NetworkInterfaceImpl
  parent: Microsoft.Azure.Management.Fluent.Network
  children:
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.AfterCreating
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.AppliedDnsServers
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.BeforeCreating
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.CreateInner
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.DefineSecondaryIpConfiguration(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.DnsServers
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.GetNetworkSecurityGroup
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.InitializeChildrenFromInner
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.InternalDnsNameLabel
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.InternalDomainNameSuffix
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.InternalFqdn
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.IpConfigurations
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.IsIpForwardingEnabled
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.MacAddress
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#INetworkInterface#AppliedDnsServers
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#INetworkInterface#DnsServers
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#INetworkInterface#GetNetworkSecurityGroup
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#INetworkInterface#InternalDnsNameLabel
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#INetworkInterface#InternalDomainNameSuffix
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#INetworkInterface#InternalFqdn
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#INetworkInterface#IpConfigurations
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#INetworkInterface#IsIpForwardingEnabled
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#INetworkInterface#MacAddress
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#INetworkInterface#NetworkSecurityGroupId
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#INetworkInterface#PrimaryIpConfiguration
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#INetworkInterface#PrimaryPrivateIp
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#INetworkInterface#PrimaryPrivateIpAllocationMethod
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#INetworkInterface#VirtualMachineId
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate#WithDnsServer(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate#WithInternalDnsNameLabel(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate#WithIpForwarding
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithLoadBalancer#WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithLoadBalancer#WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithNetworkSecurityGroup#WithExistingNetworkSecurityGroup(Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithNetworkSecurityGroup#WithNewNetworkSecurityGroup(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup})
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithPrimaryNetwork#WithExistingPrimaryNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithPrimaryNetwork#WithNewPrimaryNetwork(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork})
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithPrimaryNetwork#WithNewPrimaryNetwork(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithPrimaryNetwork#WithNewPrimaryNetwork(System.String,System.String)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithPrimaryNetworkSubnet#WithSubnet(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithPrimaryPrivateIp#WithPrimaryPrivateIpAddressDynamic
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithPrimaryPrivateIp#WithPrimaryPrivateIpAddressStatic(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithPrimaryPublicIpAddress#WithExistingPrimaryPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithPrimaryPublicIpAddress#WithNewPrimaryPublicIpAddress
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithPrimaryPublicIpAddress#WithNewPrimaryPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithPrimaryPublicIpAddress#WithNewPrimaryPublicIpAddress(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithSecondaryIpConfiguration#DefineSecondaryIpConfiguration(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithDnsServer#WithAzureDnsServer
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithDnsServer#WithDnsServer(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithDnsServer#WithoutDnsServer(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithIpConfiguration#DefineSecondaryIpConfiguration(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithIpConfiguration#UpdateIpConfiguration(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithIpForwarding#WithIpForwarding
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithIpForwarding#WithoutIpForwarding
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithLoadBalancer#WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithLoadBalancer#WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithLoadBalancer#WithoutLoadBalancerBackends
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithLoadBalancer#WithoutLoadBalancerInboundNatRules
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithNetworkSecurityGroup#WithExistingNetworkSecurityGroup(Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithNetworkSecurityGroup#WithNewNetworkSecurityGroup(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup})
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithNetworkSecurityGroup#WithoutNetworkSecurityGroup
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithPrimaryNetworkSubnet#WithSubnet(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithPrimaryPrivateIp#WithPrimaryPrivateIpAddressDynamic
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithPrimaryPrivateIp#WithPrimaryPrivateIpAddressStatic(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithPrimaryPublicIpAddress#WithExistingPrimaryPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithPrimaryPublicIpAddress#WithNewPrimaryPublicIpAddress
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithPrimaryPublicIpAddress#WithNewPrimaryPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithPrimaryPublicIpAddress#WithNewPrimaryPublicIpAddress(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithPrimaryPublicIpAddress#WithoutPrimaryPublicIpAddress
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.namer
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.NetworkSecurityGroupId
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.PrimaryIpConfiguration
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.PrimaryPrivateIp
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.PrimaryPrivateIpAllocationMethod
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Refresh
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.UpdateIpConfiguration(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.VirtualMachineId
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithAzureDnsServer
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithDnsServer(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithExistingNetworkSecurityGroup(Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithExistingPrimaryNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithExistingPrimaryPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithInternalDnsNameLabel(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithIpForwarding
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithNewNetworkSecurityGroup(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup})
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithNewPrimaryNetwork(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork})
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithNewPrimaryNetwork(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithNewPrimaryNetwork(System.String,System.String)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithNewPrimaryPublicIpAddress
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithNewPrimaryPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithNewPrimaryPublicIpAddress(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithoutDnsServer(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithoutIpConfiguration(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithoutIpForwarding
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithoutLoadBalancerBackends
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithoutLoadBalancerInboundNatRules
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithoutNetworkSecurityGroup
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithoutPrimaryPublicIpAddress
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithPrimaryPrivateIpAddressDynamic
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithPrimaryPrivateIpAddressStatic(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithSubnet(System.String)
  langs:
  - csharp
  - vb
  name: NetworkInterfaceImpl
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: NetworkInterfaceImpl
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 13
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nImplementation for NetworkInterface and its create and update interfaces.\n"
  example: []
  syntax:
    content: 'public class NetworkInterfaceImpl : GroupableParentResource<INetworkInterface, NetworkInterfaceInner, Rest.Azure.Resource, NetworkInterfaceImpl, NetworkManager, IWithGroup, IWithPrimaryNetwork, IWithCreate, IUpdate>, INetworkInterface, IGroupableResource, IRefreshable<INetworkInterface>, IWrapper<NetworkInterfaceInner>, IUpdatable<IUpdate>, IDefinition, IBlank, IDefinitionWithRegion<IWithGroup>, IWithGroup, Resource.Core.GroupableResource.Definition.IWithGroup<IWithPrimaryNetwork>, IWithPrimaryNetwork, IWithPrimaryNetworkSubnet, IWithPrimaryPrivateIp, IWithCreate, ICreatable<INetworkInterface>, IDefinitionWithTags<IWithCreate>, IWithPrimaryPublicIpAddress, IWithNetworkSecurityGroup, IWithSecondaryIpConfiguration, IWithLoadBalancer, IUpdate, IAppliable<INetworkInterface>, IUpdateWithTags<IUpdate>, IWithPrimaryNetworkSubnet, IWithPrimaryPrivateIp, IWithPrimaryPublicIpAddress, IWithNetworkSecurityGroup, IWithIpForwarding, IWithDnsServer, IWithIpConfiguration, IWithLoadBalancer'
    content.vb: >-
      Public Class NetworkInterfaceImpl
          Inherits GroupableParentResource(Of INetworkInterface, NetworkInterfaceInner, Rest.Azure.Resource, NetworkInterfaceImpl, NetworkManager, IWithGroup, IWithPrimaryNetwork, IWithCreate, IUpdate)
          Implements INetworkInterface, IGroupableResource, IRefreshable(Of INetworkInterface), IWrapper(Of NetworkInterfaceInner), IUpdatable(Of IUpdate), IDefinition, IBlank, IDefinitionWithRegion(Of IWithGroup), IWithGroup, Resource.Core.GroupableResource.Definition.IWithGroup(Of IWithPrimaryNetwork), IWithPrimaryNetwork, IWithPrimaryNetworkSubnet, IWithPrimaryPrivateIp, IWithCreate, ICreatable(Of INetworkInterface), IDefinitionWithTags(Of IWithCreate), IWithPrimaryPublicIpAddress, IWithNetworkSecurityGroup, IWithSecondaryIpConfiguration, IWithLoadBalancer, IUpdate, IAppliable(Of INetworkInterface), IUpdateWithTags(Of IUpdate), IWithPrimaryNetworkSubnet, IWithPrimaryPrivateIp, IWithPrimaryPublicIpAddress, IWithNetworkSecurityGroup, IWithIpForwarding, IWithDnsServer, IWithIpConfiguration, IWithLoadBalancer
  inheritance:
  - System.Object
  implements:
  - Microsoft.Azure.Management.Fluent.Network.INetworkInterface
  - IGroupableResource
  - IRefreshable{Microsoft.Azure.Management.Fluent.Network.INetworkInterface}
  - IWrapper{Microsoft.Azure.Management.Network.Models.NetworkInterfaceInner}
  - IUpdatable{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IDefinition
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IBlank
  - IDefinitionWithRegion{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithGroup}
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithGroup
  - Microsoft.Azure.Management.Fluent.Resource.Core.GroupableResource.Definition.IWithGroup{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork}
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetworkSubnet
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPrivateIp
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
  - ICreatable{Microsoft.Azure.Management.Fluent.Network.INetworkInterface}
  - IDefinitionWithTags{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithNetworkSecurityGroup
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithSecondaryIpConfiguration
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithLoadBalancer
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
  - IAppliable{Microsoft.Azure.Management.Fluent.Network.INetworkInterface}
  - IUpdateWithTags{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryNetworkSubnet
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPrivateIp
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpForwarding
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpConfiguration
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.namer
  commentId: F:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.namer
  id: namer
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: namer
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.namer
  type: Field
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: namer
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
    startLine: 35
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: protected ResourceNamer namer
    content.vb: Protected namer As ResourceNamer
    return:
      type: ResourceNamer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithNewPrimaryNetwork(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork})
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithNewPrimaryNetwork(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork})
  id: WithNewPrimaryNetwork(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork})
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: WithNewPrimaryNetwork(ICreatable<INetwork>)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithNewPrimaryNetwork(ICreatable<Microsoft.Azure.Management.Fluent.Network.INetwork>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithNewPrimaryNetwork
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
    startLine: 54
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public NetworkInterfaceImpl WithNewPrimaryNetwork(ICreatable<INetwork> creatable)
    content.vb: Public Function WithNewPrimaryNetwork(creatable As ICreatable(Of INetwork)) As NetworkInterfaceImpl
    parameters:
    - id: creatable
      type: ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork}
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithNewPrimaryNetwork(ICreatable(Of Microsoft.Azure.Management.Fluent.Network.INetwork))
  name.vb: WithNewPrimaryNetwork(ICreatable(Of INetwork))
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithNewPrimaryNetwork(System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithNewPrimaryNetwork(System.String,System.String)
  id: WithNewPrimaryNetwork(System.String,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: WithNewPrimaryNetwork(String, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithNewPrimaryNetwork(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithNewPrimaryNetwork
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
    startLine: 60
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public NetworkInterfaceImpl WithNewPrimaryNetwork(string name, string addressSpaceCidr)
    content.vb: Public Function WithNewPrimaryNetwork(name As String, addressSpaceCidr As String) As NetworkInterfaceImpl
    parameters:
    - id: name
      type: System.String
    - id: addressSpaceCidr
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Refresh
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Refresh
  id: Refresh
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: Refresh()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Refresh()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Refresh
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
    startLine: 66
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public override INetworkInterface Refresh()
    content.vb: Public Overrides Function Refresh As INetworkInterface
    return:
      type: Microsoft.Azure.Management.Fluent.Network.INetworkInterface
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithNewPrimaryNetwork(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithNewPrimaryNetwork(System.String)
  id: WithNewPrimaryNetwork(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: WithNewPrimaryNetwork(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithNewPrimaryNetwork(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithNewPrimaryNetwork
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
    startLine: 73
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public NetworkInterfaceImpl WithNewPrimaryNetwork(string addressSpaceCidr)
    content.vb: Public Function WithNewPrimaryNetwork(addressSpaceCidr As String) As NetworkInterfaceImpl
    parameters:
    - id: addressSpaceCidr
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithExistingPrimaryNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithExistingPrimaryNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  id: WithExistingPrimaryNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: WithExistingPrimaryNetwork(INetwork)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithExistingPrimaryNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithExistingPrimaryNetwork
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
    startLine: 79
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public NetworkInterfaceImpl WithExistingPrimaryNetwork(INetwork network)
    content.vb: Public Function WithExistingPrimaryNetwork(network As INetwork) As NetworkInterfaceImpl
    parameters:
    - id: network
      type: Microsoft.Azure.Management.Fluent.Network.INetwork
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithNewPrimaryPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithNewPrimaryPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  id: WithNewPrimaryPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: WithNewPrimaryPublicIpAddress(ICreatable<IPublicIpAddress>)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithNewPrimaryPublicIpAddress(ICreatable<Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithNewPrimaryPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
    startLine: 85
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public NetworkInterfaceImpl WithNewPrimaryPublicIpAddress(ICreatable<IPublicIpAddress> creatable)
    content.vb: Public Function WithNewPrimaryPublicIpAddress(creatable As ICreatable(Of IPublicIpAddress)) As NetworkInterfaceImpl
    parameters:
    - id: creatable
      type: ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress}
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithNewPrimaryPublicIpAddress(ICreatable(Of Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress))
  name.vb: WithNewPrimaryPublicIpAddress(ICreatable(Of IPublicIpAddress))
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithNewPrimaryPublicIpAddress
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithNewPrimaryPublicIpAddress
  id: WithNewPrimaryPublicIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: WithNewPrimaryPublicIpAddress()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithNewPrimaryPublicIpAddress()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithNewPrimaryPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
    startLine: 91
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public NetworkInterfaceImpl WithNewPrimaryPublicIpAddress()
    content.vb: Public Function WithNewPrimaryPublicIpAddress As NetworkInterfaceImpl
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithNewPrimaryPublicIpAddress(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithNewPrimaryPublicIpAddress(System.String)
  id: WithNewPrimaryPublicIpAddress(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: WithNewPrimaryPublicIpAddress(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithNewPrimaryPublicIpAddress(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithNewPrimaryPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
    startLine: 97
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public NetworkInterfaceImpl WithNewPrimaryPublicIpAddress(string leafDnsLabel)
    content.vb: Public Function WithNewPrimaryPublicIpAddress(leafDnsLabel As String) As NetworkInterfaceImpl
    parameters:
    - id: leafDnsLabel
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  id: WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: WithExistingLoadBalancerBackend(ILoadBalancer, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithExistingLoadBalancerBackend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
    startLine: 103
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public NetworkInterfaceImpl WithExistingLoadBalancerBackend(ILoadBalancer loadBalancer, string backendName)
    content.vb: Public Function WithExistingLoadBalancerBackend(loadBalancer As ILoadBalancer, backendName As String) As NetworkInterfaceImpl
    parameters:
    - id: loadBalancer
      type: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    - id: backendName
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  id: WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: WithExistingLoadBalancerInboundNatRule(ILoadBalancer, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithExistingLoadBalancerInboundNatRule
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
    startLine: 109
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public NetworkInterfaceImpl WithExistingLoadBalancerInboundNatRule(ILoadBalancer loadBalancer, string inboundNatRuleName)
    content.vb: Public Function WithExistingLoadBalancerInboundNatRule(loadBalancer As ILoadBalancer, inboundNatRuleName As String) As NetworkInterfaceImpl
    parameters:
    - id: loadBalancer
      type: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    - id: inboundNatRuleName
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithoutLoadBalancerBackends
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithoutLoadBalancerBackends
  id: WithoutLoadBalancerBackends
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: WithoutLoadBalancerBackends()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithoutLoadBalancerBackends()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithoutLoadBalancerBackends
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
    startLine: 115
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public IUpdate WithoutLoadBalancerBackends()
    content.vb: Public Function WithoutLoadBalancerBackends As IUpdate
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithoutLoadBalancerInboundNatRules
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithoutLoadBalancerInboundNatRules
  id: WithoutLoadBalancerInboundNatRules
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: WithoutLoadBalancerInboundNatRules()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithoutLoadBalancerInboundNatRules()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithoutLoadBalancerInboundNatRules
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
    startLine: 126
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public IUpdate WithoutLoadBalancerInboundNatRules()
    content.vb: Public Function WithoutLoadBalancerInboundNatRules As IUpdate
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithoutPrimaryPublicIpAddress
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithoutPrimaryPublicIpAddress
  id: WithoutPrimaryPublicIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: WithoutPrimaryPublicIpAddress()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithoutPrimaryPublicIpAddress()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithoutPrimaryPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
    startLine: 137
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public NetworkInterfaceImpl WithoutPrimaryPublicIpAddress()
    content.vb: Public Function WithoutPrimaryPublicIpAddress As NetworkInterfaceImpl
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithExistingPrimaryPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithExistingPrimaryPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  id: WithExistingPrimaryPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: WithExistingPrimaryPublicIpAddress(IPublicIpAddress)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithExistingPrimaryPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithExistingPrimaryPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
    startLine: 143
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public NetworkInterfaceImpl WithExistingPrimaryPublicIpAddress(IPublicIpAddress publicIpAddress)
    content.vb: Public Function WithExistingPrimaryPublicIpAddress(publicIpAddress As IPublicIpAddress) As NetworkInterfaceImpl
    parameters:
    - id: publicIpAddress
      type: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithPrimaryPrivateIpAddressDynamic
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithPrimaryPrivateIpAddressDynamic
  id: WithPrimaryPrivateIpAddressDynamic
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: WithPrimaryPrivateIpAddressDynamic()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithPrimaryPrivateIpAddressDynamic()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithPrimaryPrivateIpAddressDynamic
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
    startLine: 149
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public NetworkInterfaceImpl WithPrimaryPrivateIpAddressDynamic()
    content.vb: Public Function WithPrimaryPrivateIpAddressDynamic As NetworkInterfaceImpl
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithPrimaryPrivateIpAddressStatic(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithPrimaryPrivateIpAddressStatic(System.String)
  id: WithPrimaryPrivateIpAddressStatic(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: WithPrimaryPrivateIpAddressStatic(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithPrimaryPrivateIpAddressStatic(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithPrimaryPrivateIpAddressStatic
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
    startLine: 155
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public NetworkInterfaceImpl WithPrimaryPrivateIpAddressStatic(string staticPrivateIpAddress)
    content.vb: Public Function WithPrimaryPrivateIpAddressStatic(staticPrivateIpAddress As String) As NetworkInterfaceImpl
    parameters:
    - id: staticPrivateIpAddress
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithNewNetworkSecurityGroup(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup})
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithNewNetworkSecurityGroup(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup})
  id: WithNewNetworkSecurityGroup(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup})
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: WithNewNetworkSecurityGroup(ICreatable<INetworkSecurityGroup>)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithNewNetworkSecurityGroup(ICreatable<Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithNewNetworkSecurityGroup
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
    startLine: 161
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public NetworkInterfaceImpl WithNewNetworkSecurityGroup(ICreatable<INetworkSecurityGroup> creatable)
    content.vb: Public Function WithNewNetworkSecurityGroup(creatable As ICreatable(Of INetworkSecurityGroup)) As NetworkInterfaceImpl
    parameters:
    - id: creatable
      type: ICreatable{Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup}
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithNewNetworkSecurityGroup(ICreatable(Of Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup))
  name.vb: WithNewNetworkSecurityGroup(ICreatable(Of INetworkSecurityGroup))
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithExistingNetworkSecurityGroup(Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithExistingNetworkSecurityGroup(Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup)
  id: WithExistingNetworkSecurityGroup(Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: WithExistingNetworkSecurityGroup(INetworkSecurityGroup)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithExistingNetworkSecurityGroup(Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithExistingNetworkSecurityGroup
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
    startLine: 172
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public NetworkInterfaceImpl WithExistingNetworkSecurityGroup(INetworkSecurityGroup networkSecurityGroup)
    content.vb: Public Function WithExistingNetworkSecurityGroup(networkSecurityGroup As INetworkSecurityGroup) As NetworkInterfaceImpl
    parameters:
    - id: networkSecurityGroup
      type: Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithoutNetworkSecurityGroup
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithoutNetworkSecurityGroup
  id: WithoutNetworkSecurityGroup
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: WithoutNetworkSecurityGroup()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithoutNetworkSecurityGroup()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithoutNetworkSecurityGroup
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
    startLine: 178
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public NetworkInterfaceImpl WithoutNetworkSecurityGroup()
    content.vb: Public Function WithoutNetworkSecurityGroup As NetworkInterfaceImpl
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.DefineSecondaryIpConfiguration(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.DefineSecondaryIpConfiguration(System.String)
  id: DefineSecondaryIpConfiguration(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: DefineSecondaryIpConfiguration(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.DefineSecondaryIpConfiguration(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DefineSecondaryIpConfiguration
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
    startLine: 184
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public NicIpConfigurationImpl DefineSecondaryIpConfiguration(string name)
    content.vb: Public Function DefineSecondaryIpConfiguration(name As String) As NicIpConfigurationImpl
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.UpdateIpConfiguration(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.UpdateIpConfiguration(System.String)
  id: UpdateIpConfiguration(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: UpdateIpConfiguration(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.UpdateIpConfiguration(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UpdateIpConfiguration
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
    startLine: 189
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public NicIpConfigurationImpl UpdateIpConfiguration(string name)
    content.vb: Public Function UpdateIpConfiguration(name As String) As NicIpConfigurationImpl
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithIpForwarding
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithIpForwarding
  id: WithIpForwarding
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: WithIpForwarding()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithIpForwarding()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithIpForwarding
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
    startLine: 194
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public NetworkInterfaceImpl WithIpForwarding()
    content.vb: Public Function WithIpForwarding As NetworkInterfaceImpl
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithoutIpConfiguration(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithoutIpConfiguration(System.String)
  id: WithoutIpConfiguration(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: WithoutIpConfiguration(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithoutIpConfiguration(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithoutIpConfiguration
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
    startLine: 200
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public NetworkInterfaceImpl WithoutIpConfiguration(string name)
    content.vb: Public Function WithoutIpConfiguration(name As String) As NetworkInterfaceImpl
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithoutIpForwarding
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithoutIpForwarding
  id: WithoutIpForwarding
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: WithoutIpForwarding()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithoutIpForwarding()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithoutIpForwarding
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
    startLine: 206
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public NetworkInterfaceImpl WithoutIpForwarding()
    content.vb: Public Function WithoutIpForwarding As NetworkInterfaceImpl
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithDnsServer(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithDnsServer(System.String)
  id: WithDnsServer(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: WithDnsServer(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithDnsServer(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithDnsServer
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
    startLine: 212
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public NetworkInterfaceImpl WithDnsServer(string ipAddress)
    content.vb: Public Function WithDnsServer(ipAddress As String) As NetworkInterfaceImpl
    parameters:
    - id: ipAddress
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithoutDnsServer(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithoutDnsServer(System.String)
  id: WithoutDnsServer(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: WithoutDnsServer(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithoutDnsServer(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithoutDnsServer
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
    startLine: 218
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public NetworkInterfaceImpl WithoutDnsServer(string ipAddress)
    content.vb: Public Function WithoutDnsServer(ipAddress As String) As NetworkInterfaceImpl
    parameters:
    - id: ipAddress
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithAzureDnsServer
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithAzureDnsServer
  id: WithAzureDnsServer
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: WithAzureDnsServer()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithAzureDnsServer()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithAzureDnsServer
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
    startLine: 224
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public NetworkInterfaceImpl WithAzureDnsServer()
    content.vb: Public Function WithAzureDnsServer As NetworkInterfaceImpl
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithSubnet(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithSubnet(System.String)
  id: WithSubnet(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: WithSubnet(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithSubnet(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithSubnet
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
    startLine: 230
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public NetworkInterfaceImpl WithSubnet(string name)
    content.vb: Public Function WithSubnet(name As String) As NetworkInterfaceImpl
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithInternalDnsNameLabel(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithInternalDnsNameLabel(System.String)
  id: WithInternalDnsNameLabel(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: WithInternalDnsNameLabel(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.WithInternalDnsNameLabel(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithInternalDnsNameLabel
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
    startLine: 236
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public NetworkInterfaceImpl WithInternalDnsNameLabel(string dnsNameLabel)
    content.vb: Public Function WithInternalDnsNameLabel(dnsNameLabel As String) As NetworkInterfaceImpl
    parameters:
    - id: dnsNameLabel
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.VirtualMachineId
  commentId: P:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.VirtualMachineId
  id: VirtualMachineId
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: VirtualMachineId
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.VirtualMachineId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VirtualMachineId
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
    startLine: 242
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public string VirtualMachineId { get; }
    content.vb: Public ReadOnly Property VirtualMachineId As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.IsIpForwardingEnabled
  commentId: P:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.IsIpForwardingEnabled
  id: IsIpForwardingEnabled
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: IsIpForwardingEnabled
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.IsIpForwardingEnabled
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IsIpForwardingEnabled
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
    startLine: 250
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public bool IsIpForwardingEnabled { get; }
    content.vb: Public ReadOnly Property IsIpForwardingEnabled As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.MacAddress
  commentId: P:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.MacAddress
  id: MacAddress
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: MacAddress
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.MacAddress
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MacAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
    startLine: 258
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public string MacAddress { get; }
    content.vb: Public ReadOnly Property MacAddress As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.InternalDnsNameLabel
  commentId: P:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.InternalDnsNameLabel
  id: InternalDnsNameLabel
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: InternalDnsNameLabel
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.InternalDnsNameLabel
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: InternalDnsNameLabel
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
    startLine: 266
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public string InternalDnsNameLabel { get; }
    content.vb: Public ReadOnly Property InternalDnsNameLabel As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.InternalDomainNameSuffix
  commentId: P:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.InternalDomainNameSuffix
  id: InternalDomainNameSuffix
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: InternalDomainNameSuffix
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.InternalDomainNameSuffix
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: InternalDomainNameSuffix
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
    startLine: 274
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public string InternalDomainNameSuffix { get; }
    content.vb: Public ReadOnly Property InternalDomainNameSuffix As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.AppliedDnsServers
  commentId: P:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.AppliedDnsServers
  id: AppliedDnsServers
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: AppliedDnsServers
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.AppliedDnsServers
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AppliedDnsServers
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
    startLine: 282
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public IList<string> AppliedDnsServers { get; }
    content.vb: Public ReadOnly Property AppliedDnsServers As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.InternalFqdn
  commentId: P:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.InternalFqdn
  id: InternalFqdn
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: InternalFqdn
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.InternalFqdn
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: InternalFqdn
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
    startLine: 296
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public string InternalFqdn { get; }
    content.vb: Public ReadOnly Property InternalFqdn As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.DnsServers
  commentId: P:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.DnsServers
  id: DnsServers
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: DnsServers
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.DnsServers
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DnsServers
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
    startLine: 304
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public IList<string> DnsServers { get; }
    content.vb: Public ReadOnly Property DnsServers As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.PrimaryPrivateIp
  commentId: P:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.PrimaryPrivateIp
  id: PrimaryPrivateIp
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: PrimaryPrivateIp
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.PrimaryPrivateIp
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PrimaryPrivateIp
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
    startLine: 312
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public string PrimaryPrivateIp { get; }
    content.vb: Public ReadOnly Property PrimaryPrivateIp As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.PrimaryPrivateIpAllocationMethod
  commentId: P:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.PrimaryPrivateIpAllocationMethod
  id: PrimaryPrivateIpAllocationMethod
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: PrimaryPrivateIpAllocationMethod
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.PrimaryPrivateIpAllocationMethod
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PrimaryPrivateIpAllocationMethod
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
    startLine: 319
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public string PrimaryPrivateIpAllocationMethod { get; }
    content.vb: Public ReadOnly Property PrimaryPrivateIpAllocationMethod As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.IpConfigurations
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.IpConfigurations
  id: IpConfigurations
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: IpConfigurations()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.IpConfigurations()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IpConfigurations
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
    startLine: 327
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public IDictionary<string, INicIpConfiguration> IpConfigurations()
    content.vb: Public Function IpConfigurations As IDictionary(Of String, INicIpConfiguration)
    return:
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.NetworkSecurityGroupId
  commentId: P:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.NetworkSecurityGroupId
  id: NetworkSecurityGroupId
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: NetworkSecurityGroupId
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.NetworkSecurityGroupId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: NetworkSecurityGroupId
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
    startLine: 332
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public string NetworkSecurityGroupId { get; }
    content.vb: Public ReadOnly Property NetworkSecurityGroupId As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.GetNetworkSecurityGroup
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.GetNetworkSecurityGroup
  id: GetNetworkSecurityGroup
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: GetNetworkSecurityGroup()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.GetNetworkSecurityGroup()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetNetworkSecurityGroup
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
    startLine: 340
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public INetworkSecurityGroup GetNetworkSecurityGroup()
    content.vb: Public Function GetNetworkSecurityGroup As INetworkSecurityGroup
    return:
      type: Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.PrimaryIpConfiguration
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.PrimaryIpConfiguration
  id: PrimaryIpConfiguration
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: PrimaryIpConfiguration()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.PrimaryIpConfiguration()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PrimaryIpConfiguration
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
    startLine: 353
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: public NicIpConfigurationImpl PrimaryIpConfiguration()
    content.vb: Public Function PrimaryIpConfiguration As NicIpConfigurationImpl
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
      description: the primary IP configuration of the network interface
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.InitializeChildrenFromInner
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.InitializeChildrenFromInner
  id: InitializeChildrenFromInner
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: InitializeChildrenFromInner()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.InitializeChildrenFromInner()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: InitializeChildrenFromInner
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
    startLine: 393
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: protected override void InitializeChildrenFromInner()
    content.vb: Protected Overrides Sub InitializeChildrenFromInner
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.CreateInner
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.CreateInner
  id: CreateInner
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: CreateInner()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.CreateInner()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateInner
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
    startLine: 445
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: protected override Task<NetworkInterfaceInner> CreateInner()
    content.vb: Protected Overrides Function CreateInner As Task(Of NetworkInterfaceInner)
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Network.Models.NetworkInterfaceInner}
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.AfterCreating
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.AfterCreating
  id: AfterCreating
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: AfterCreating()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.AfterCreating()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AfterCreating
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
    startLine: 450
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: protected override void AfterCreating()
    content.vb: Protected Overrides Sub AfterCreating
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.BeforeCreating
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.BeforeCreating
  id: BeforeCreating
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: BeforeCreating()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.BeforeCreating()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BeforeCreating
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NetworkInterfaceImpl.cs
    startLine: 455
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: protected override void BeforeCreating()
    content.vb: Protected Overrides Sub BeforeCreating
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithDnsServer#WithoutDnsServer(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithDnsServer#WithoutDnsServer(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithDnsServer#WithoutDnsServer(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: IWithDnsServer.WithoutDnsServer(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithoutDnsServer(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithoutDnsServer
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 20
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nRemoves a DNS server associated with the network interface.\n"
  example: []
  syntax:
    content: IUpdate IWithDnsServer.WithoutDnsServer(string ipAddress)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithoutDnsServer(ipAddress As String) As IUpdate Implements IWithDnsServer.WithoutDnsServer
    parameters:
    - id: ipAddress
      type: System.String
      description: ipAddress the IP address of the DNS server
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
      description: the next stage of the network interface update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithoutDnsServer(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithoutDnsServer(String)
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithDnsServer#WithDnsServer(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithDnsServer#WithDnsServer(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithDnsServer#WithDnsServer(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: IWithDnsServer.WithDnsServer(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithDnsServer(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithDnsServer
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IUpdate IWithDnsServer.WithDnsServer(string ipAddress)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithDnsServer(ipAddress As String) As IUpdate Implements IWithDnsServer.WithDnsServer
    parameters:
    - id: ipAddress
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithDnsServer(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithDnsServer(String)
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithDnsServer#WithAzureDnsServer
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithDnsServer#WithAzureDnsServer
  id: Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithDnsServer#WithAzureDnsServer
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: IWithDnsServer.WithAzureDnsServer()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithAzureDnsServer()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithAzureDnsServer
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 44
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IUpdate IWithDnsServer.WithAzureDnsServer()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithAzureDnsServer As IUpdate Implements IWithDnsServer.WithAzureDnsServer
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithAzureDnsServer
  name.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithAzureDnsServer()
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithNetworkSecurityGroup#WithExistingNetworkSecurityGroup(Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithNetworkSecurityGroup#WithExistingNetworkSecurityGroup(Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup)
  id: Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithNetworkSecurityGroup#WithExistingNetworkSecurityGroup(Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: IWithNetworkSecurityGroup.WithExistingNetworkSecurityGroup(INetworkSecurityGroup)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithExistingNetworkSecurityGroup(Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithExistingNetworkSecurityGroup
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 54
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nAssociates an existing network security group with the network interface.\n"
  example: []
  syntax:
    content: IUpdate IWithNetworkSecurityGroup.WithExistingNetworkSecurityGroup(INetworkSecurityGroup networkSecurityGroup)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithExistingNetworkSecurityGroup(networkSecurityGroup As INetworkSecurityGroup) As IUpdate Implements IWithNetworkSecurityGroup.WithExistingNetworkSecurityGroup
    parameters:
    - id: networkSecurityGroup
      type: Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup
      description: networkSecurityGroup an existing network security group
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
      description: the next stage of the network interface update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithExistingNetworkSecurityGroup(Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup)
  name.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithExistingNetworkSecurityGroup(INetworkSecurityGroup)
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithNetworkSecurityGroup#WithoutNetworkSecurityGroup
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithNetworkSecurityGroup#WithoutNetworkSecurityGroup
  id: Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithNetworkSecurityGroup#WithoutNetworkSecurityGroup
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: IWithNetworkSecurityGroup.WithoutNetworkSecurityGroup()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithoutNetworkSecurityGroup()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithoutNetworkSecurityGroup
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 63
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSpecifies that remove any network security group associated with the network interface.\n"
  example: []
  syntax:
    content: IUpdate IWithNetworkSecurityGroup.WithoutNetworkSecurityGroup()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithoutNetworkSecurityGroup As IUpdate Implements IWithNetworkSecurityGroup.WithoutNetworkSecurityGroup
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
      description: the next stage of the network interface update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithoutNetworkSecurityGroup
  name.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithoutNetworkSecurityGroup()
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithNetworkSecurityGroup#WithNewNetworkSecurityGroup(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup})
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithNetworkSecurityGroup#WithNewNetworkSecurityGroup(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup})
  id: Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithNetworkSecurityGroup#WithNewNetworkSecurityGroup(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup})
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: IWithNetworkSecurityGroup.WithNewNetworkSecurityGroup(ICreatable<INetworkSecurityGroup>)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithNewNetworkSecurityGroup(ICreatable<Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithNewNetworkSecurityGroup
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 73
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nCreate a new network security group to associate with network interface, based on the provided definition.\n"
  example: []
  syntax:
    content: IUpdate IWithNetworkSecurityGroup.WithNewNetworkSecurityGroup(ICreatable<INetworkSecurityGroup> creatable)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithNewNetworkSecurityGroup(creatable As ICreatable(Of INetworkSecurityGroup)) As IUpdate Implements IWithNetworkSecurityGroup.WithNewNetworkSecurityGroup
    parameters:
    - id: creatable
      type: ICreatable{Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup}
      description: creatable a creatable definition for a new network security group
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
      description: the next stage of the network interface update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithNewNetworkSecurityGroup(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup})
  fullName.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithNewNetworkSecurityGroup(ICreatable(Of Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup))
  name.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithNewNetworkSecurityGroup(ICreatable(Of INetworkSecurityGroup))
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithNetworkSecurityGroup#WithExistingNetworkSecurityGroup(Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithNetworkSecurityGroup#WithExistingNetworkSecurityGroup(Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup)
  id: Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithNetworkSecurityGroup#WithExistingNetworkSecurityGroup(Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: IWithNetworkSecurityGroup.WithExistingNetworkSecurityGroup(INetworkSecurityGroup)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithNetworkSecurityGroup.WithExistingNetworkSecurityGroup(Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithNetworkSecurityGroup.WithExistingNetworkSecurityGroup
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 83
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nAssociates an existing network security group with the network interface.\n"
  example: []
  syntax:
    content: IWithCreate IWithNetworkSecurityGroup.WithExistingNetworkSecurityGroup(INetworkSecurityGroup networkSecurityGroup)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithNetworkSecurityGroup.WithExistingNetworkSecurityGroup(networkSecurityGroup As INetworkSecurityGroup) As IWithCreate Implements IWithNetworkSecurityGroup.WithExistingNetworkSecurityGroup
    parameters:
    - id: networkSecurityGroup
      type: Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup
      description: networkSecurityGroup an existing network security group
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
      description: the next stage of the network interface definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithNetworkSecurityGroup.WithExistingNetworkSecurityGroup(Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup)
  name.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithNetworkSecurityGroup.WithExistingNetworkSecurityGroup(INetworkSecurityGroup)
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithNetworkSecurityGroup#WithNewNetworkSecurityGroup(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup})
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithNetworkSecurityGroup#WithNewNetworkSecurityGroup(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup})
  id: Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithNetworkSecurityGroup#WithNewNetworkSecurityGroup(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup})
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: IWithNetworkSecurityGroup.WithNewNetworkSecurityGroup(ICreatable<INetworkSecurityGroup>)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithNetworkSecurityGroup.WithNewNetworkSecurityGroup(ICreatable<Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithNetworkSecurityGroup.WithNewNetworkSecurityGroup
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 93
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nCreate a new network security group to associate with network interface, based on the provided definition.\n"
  example: []
  syntax:
    content: IWithCreate IWithNetworkSecurityGroup.WithNewNetworkSecurityGroup(ICreatable<INetworkSecurityGroup> creatable)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithNetworkSecurityGroup.WithNewNetworkSecurityGroup(creatable As ICreatable(Of INetworkSecurityGroup)) As IWithCreate Implements IWithNetworkSecurityGroup.WithNewNetworkSecurityGroup
    parameters:
    - id: creatable
      type: ICreatable{Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup}
      description: creatable a creatable definition for a new network security group
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
      description: the next stage of the network interface definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithNetworkSecurityGroup.WithNewNetworkSecurityGroup(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup})
  fullName.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithNetworkSecurityGroup.WithNewNetworkSecurityGroup(ICreatable(Of Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup))
  name.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithNetworkSecurityGroup.WithNewNetworkSecurityGroup(ICreatable(Of INetworkSecurityGroup))
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithPrimaryPublicIpAddress#WithNewPrimaryPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithPrimaryPublicIpAddress#WithNewPrimaryPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  id: Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithPrimaryPublicIpAddress#WithNewPrimaryPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(ICreatable<IPublicIpAddress>)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(ICreatable<Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 107
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IUpdate IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(ICreatable<IPublicIpAddress> creatable)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(creatable As ICreatable(Of IPublicIpAddress)) As IUpdate Implements IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress
    parameters:
    - id: creatable
      type: ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress}
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  fullName.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(ICreatable(Of Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress))
  name.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(ICreatable(Of IPublicIpAddress))
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithPrimaryPublicIpAddress#WithNewPrimaryPublicIpAddress
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithPrimaryPublicIpAddress#WithNewPrimaryPublicIpAddress
  id: Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithPrimaryPublicIpAddress#WithNewPrimaryPublicIpAddress
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 120
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IUpdate IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress As IUpdate Implements IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress
  name.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress()
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithPrimaryPublicIpAddress#WithNewPrimaryPublicIpAddress(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithPrimaryPublicIpAddress#WithNewPrimaryPublicIpAddress(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithPrimaryPublicIpAddress#WithNewPrimaryPublicIpAddress(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 134
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IUpdate IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(string leafDnsLabel)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(leafDnsLabel As String) As IUpdate Implements IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress
    parameters:
    - id: leafDnsLabel
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(String)
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithPrimaryPublicIpAddress#WithoutPrimaryPublicIpAddress
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithPrimaryPublicIpAddress#WithoutPrimaryPublicIpAddress
  id: Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithPrimaryPublicIpAddress#WithoutPrimaryPublicIpAddress
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: IWithPrimaryPublicIpAddress.WithoutPrimaryPublicIpAddress()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithoutPrimaryPublicIpAddress()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithoutPrimaryPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 143
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSpecifies that remove any public IP associated with the network interface's primary IP configuration.\n"
  example: []
  syntax:
    content: IUpdate IWithPrimaryPublicIpAddress.WithoutPrimaryPublicIpAddress()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithoutPrimaryPublicIpAddress As IUpdate Implements IWithPrimaryPublicIpAddress.WithoutPrimaryPublicIpAddress
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
      description: the next stage of the network interface update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithoutPrimaryPublicIpAddress
  name.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithoutPrimaryPublicIpAddress()
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithPrimaryPublicIpAddress#WithExistingPrimaryPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithPrimaryPublicIpAddress#WithExistingPrimaryPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  id: Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithPrimaryPublicIpAddress#WithExistingPrimaryPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: IWithPrimaryPublicIpAddress.WithExistingPrimaryPublicIpAddress(IPublicIpAddress)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithExistingPrimaryPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithExistingPrimaryPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 154
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nAssociates an existing public IP address with the network interface's primary IP configuration.\nif there is an existing public IP association then that will be removed in favour of this\n"
  example: []
  syntax:
    content: IUpdate IWithPrimaryPublicIpAddress.WithExistingPrimaryPublicIpAddress(IPublicIpAddress publicIpAddress)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithExistingPrimaryPublicIpAddress(publicIpAddress As IPublicIpAddress) As IUpdate Implements IWithPrimaryPublicIpAddress.WithExistingPrimaryPublicIpAddress
    parameters:
    - id: publicIpAddress
      type: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
      description: publicIpAddress an existing public IP address
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
      description: the next stage of the network interface update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithExistingPrimaryPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  name.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithExistingPrimaryPublicIpAddress(IPublicIpAddress)
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithPrimaryPublicIpAddress#WithNewPrimaryPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithPrimaryPublicIpAddress#WithNewPrimaryPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  id: Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithPrimaryPublicIpAddress#WithNewPrimaryPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(ICreatable<IPublicIpAddress>)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(ICreatable<Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 165
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nCreate a new public IP address to associate with network interface's primary IP configuration, based on\nthe provided definition.\n"
  example: []
  syntax:
    content: IWithCreate IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(ICreatable<IPublicIpAddress> creatable)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(creatable As ICreatable(Of IPublicIpAddress)) As IWithCreate Implements IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress
    parameters:
    - id: creatable
      type: ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress}
      description: creatable a creatable definition for a new public IP
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
      description: the next stage of the network interface definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  fullName.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(ICreatable(Of Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress))
  name.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(ICreatable(Of IPublicIpAddress))
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithPrimaryPublicIpAddress#WithNewPrimaryPublicIpAddress
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithPrimaryPublicIpAddress#WithNewPrimaryPublicIpAddress
  id: Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithPrimaryPublicIpAddress#WithNewPrimaryPublicIpAddress
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 177
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IWithCreate IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress As IWithCreate Implements IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress
  name.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress()
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithPrimaryPublicIpAddress#WithNewPrimaryPublicIpAddress(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithPrimaryPublicIpAddress#WithNewPrimaryPublicIpAddress(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithPrimaryPublicIpAddress#WithNewPrimaryPublicIpAddress(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 190
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IWithCreate IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(string leafDnsLabel)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(leafDnsLabel As String) As IWithCreate Implements IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress
    parameters:
    - id: leafDnsLabel
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(String)
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithPrimaryPublicIpAddress#WithExistingPrimaryPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithPrimaryPublicIpAddress#WithExistingPrimaryPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  id: Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithPrimaryPublicIpAddress#WithExistingPrimaryPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: IWithPrimaryPublicIpAddress.WithExistingPrimaryPublicIpAddress(IPublicIpAddress)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress.WithExistingPrimaryPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress.WithExistingPrimaryPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 200
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nAssociates an existing public IP address with the network interface's primary IP configuration.\n"
  example: []
  syntax:
    content: IWithCreate IWithPrimaryPublicIpAddress.WithExistingPrimaryPublicIpAddress(IPublicIpAddress publicIpAddress)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress.WithExistingPrimaryPublicIpAddress(publicIpAddress As IPublicIpAddress) As IWithCreate Implements IWithPrimaryPublicIpAddress.WithExistingPrimaryPublicIpAddress
    parameters:
    - id: publicIpAddress
      type: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
      description: publicIpAddress an existing public IP address
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
      description: the next stage of the network interface definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress.WithExistingPrimaryPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  name.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress.WithExistingPrimaryPublicIpAddress(IPublicIpAddress)
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithPrimaryPrivateIp#WithPrimaryPrivateIpAddressDynamic
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithPrimaryPrivateIp#WithPrimaryPrivateIpAddressDynamic
  id: Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithPrimaryPrivateIp#WithPrimaryPrivateIpAddressDynamic
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressDynamic()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressDynamic()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressDynamic
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 210
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nEnables dynamic private IP address allocation within the specified existing virtual network\nsubnet for the network interface's primary IP configuration.\n"
  example: []
  syntax:
    content: IUpdate IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressDynamic()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressDynamic As IUpdate Implements IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressDynamic
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
      description: the next stage of network interface update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressDynamic
  name.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressDynamic()
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithPrimaryPrivateIp#WithPrimaryPrivateIpAddressStatic(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithPrimaryPrivateIp#WithPrimaryPrivateIpAddressStatic(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithPrimaryPrivateIp#WithPrimaryPrivateIpAddressStatic(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressStatic(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressStatic(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressStatic
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 222
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nAssigns the specified static private IP address within the specified existing virtual network\nsubnet to the network interface's primary IP configuration.\n"
  example: []
  syntax:
    content: IUpdate IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressStatic(string staticPrivateIpAddress)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressStatic(staticPrivateIpAddress As String) As IUpdate Implements IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressStatic
    parameters:
    - id: staticPrivateIpAddress
      type: System.String
      description: staticPrivateIpAddress the static IP address within the specified subnet to assign to
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
      description: the next stage of network interface update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressStatic(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressStatic(String)
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithPrimaryPrivateIp#WithPrimaryPrivateIpAddressDynamic
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithPrimaryPrivateIp#WithPrimaryPrivateIpAddressDynamic
  id: Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithPrimaryPrivateIp#WithPrimaryPrivateIpAddressDynamic
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressDynamic()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressDynamic()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressDynamic
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 232
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nEnables dynamic private IP address allocation within the specified existing virtual network\nsubnet for the network interface's primary IP configuration.\n"
  example: []
  syntax:
    content: IWithCreate IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressDynamic()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressDynamic As IWithCreate Implements IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressDynamic
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
      description: the next stage of network interface definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressDynamic
  name.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressDynamic()
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithPrimaryPrivateIp#WithPrimaryPrivateIpAddressStatic(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithPrimaryPrivateIp#WithPrimaryPrivateIpAddressStatic(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithPrimaryPrivateIp#WithPrimaryPrivateIpAddressStatic(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressStatic(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressStatic(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressStatic
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 244
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nAssigns the specified static private IP address within the specified existing virtual network\nsubnet to the network interface's primary IP configuration.\n"
  example: []
  syntax:
    content: IWithCreate IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressStatic(string staticPrivateIpAddress)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressStatic(staticPrivateIpAddress As String) As IWithCreate Implements IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressStatic
    parameters:
    - id: staticPrivateIpAddress
      type: System.String
      description: staticPrivateIpAddress the static IP address within the specified subnet to assign to
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
      description: the next stage of network interface definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressStatic(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressStatic(String)
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate#WithIpForwarding
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate#WithIpForwarding
  id: Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate#WithIpForwarding
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: IWithCreate.WithIpForwarding()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate.WithIpForwarding()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate.WithIpForwarding
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 253
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nEnable IP forwarding in the network interface.\n"
  example: []
  syntax:
    content: IWithCreate IWithCreate.WithIpForwarding()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate.WithIpForwarding As IWithCreate Implements IWithCreate.WithIpForwarding
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
      description: the next stage of the network interface definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate.WithIpForwarding
  name.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate.WithIpForwarding()
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate#WithDnsServer(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate#WithDnsServer(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate#WithDnsServer(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: IWithCreate.WithDnsServer(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate.WithDnsServer(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate.WithDnsServer
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 266
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IWithCreate IWithCreate.WithDnsServer(string ipAddress)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate.WithDnsServer(ipAddress As String) As IWithCreate Implements IWithCreate.WithDnsServer
    parameters:
    - id: ipAddress
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate.WithDnsServer(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate.WithDnsServer(String)
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate#WithInternalDnsNameLabel(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate#WithInternalDnsNameLabel(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate#WithInternalDnsNameLabel(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: IWithCreate.WithInternalDnsNameLabel(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate.WithInternalDnsNameLabel(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate.WithInternalDnsNameLabel
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 276
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSpecifies the internal DNS name label for the network interface.\n"
  example: []
  syntax:
    content: IWithCreate IWithCreate.WithInternalDnsNameLabel(string dnsNameLabel)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate.WithInternalDnsNameLabel(dnsNameLabel As String) As IWithCreate Implements IWithCreate.WithInternalDnsNameLabel
    parameters:
    - id: dnsNameLabel
      type: System.String
      description: dnsNameLabel the internal DNS name label
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
      description: the next stage of the network interface definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate.WithInternalDnsNameLabel(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate.WithInternalDnsNameLabel(String)
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#INetworkInterface#PrimaryPrivateIp
  commentId: P:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#INetworkInterface#PrimaryPrivateIp
  id: Microsoft#Azure#Management#Fluent#Network#INetworkInterface#PrimaryPrivateIp
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: INetworkInterface.PrimaryPrivateIp
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.INetworkInterface.PrimaryPrivateIp
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.PrimaryPrivateIp
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 287
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: string INetworkInterface.PrimaryPrivateIp { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.Azure.Management.Fluent.Network.INetworkInterface.PrimaryPrivateIp As String Implements INetworkInterface.PrimaryPrivateIp
    parameters: []
    return:
      type: System.String
  implements:
  - Microsoft.Azure.Management.Fluent.Network.INetworkInterface.PrimaryPrivateIp
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.PrimaryPrivateIp
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#INetworkInterface#VirtualMachineId
  commentId: P:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#INetworkInterface#VirtualMachineId
  id: Microsoft#Azure#Management#Fluent#Network#INetworkInterface#VirtualMachineId
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: INetworkInterface.VirtualMachineId
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.INetworkInterface.VirtualMachineId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.VirtualMachineId
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 295
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: string INetworkInterface.VirtualMachineId { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.Azure.Management.Fluent.Network.INetworkInterface.VirtualMachineId As String Implements INetworkInterface.VirtualMachineId
    parameters: []
    return:
      type: System.String
      description: the resource ID of the associated virtual machine, or null if none.
  implements:
  - Microsoft.Azure.Management.Fluent.Network.INetworkInterface.VirtualMachineId
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.VirtualMachineId
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#INetworkInterface#DnsServers
  commentId: P:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#INetworkInterface#DnsServers
  id: Microsoft#Azure#Management#Fluent#Network#INetworkInterface#DnsServers
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: INetworkInterface.DnsServers
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.INetworkInterface.DnsServers
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.DnsServers
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 303
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: List<string> INetworkInterface.DnsServers { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.Azure.Management.Fluent.Network.INetworkInterface.DnsServers As List(Of String) Implements INetworkInterface.DnsServers
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
      description: IP addresses of this network interface's DNS servers
  implements:
  - Microsoft.Azure.Management.Fluent.Network.INetworkInterface.DnsServers
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.DnsServers
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#INetworkInterface#InternalFqdn
  commentId: P:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#INetworkInterface#InternalFqdn
  id: Microsoft#Azure#Management#Fluent#Network#INetworkInterface#InternalFqdn
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: INetworkInterface.InternalFqdn
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.INetworkInterface.InternalFqdn
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.InternalFqdn
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 316
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: string INetworkInterface.InternalFqdn { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.Azure.Management.Fluent.Network.INetworkInterface.InternalFqdn As String Implements INetworkInterface.InternalFqdn
    parameters: []
    return:
      type: System.String
  implements:
  - Microsoft.Azure.Management.Fluent.Network.INetworkInterface.InternalFqdn
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.InternalFqdn
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#INetworkInterface#IsIpForwardingEnabled
  commentId: P:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#INetworkInterface#IsIpForwardingEnabled
  id: Microsoft#Azure#Management#Fluent#Network#INetworkInterface#IsIpForwardingEnabled
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: INetworkInterface.IsIpForwardingEnabled
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.INetworkInterface.IsIpForwardingEnabled
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.IsIpForwardingEnabled
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 324
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: bool ? INetworkInterface.IsIpForwardingEnabled { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.Azure.Management.Fluent.Network.INetworkInterface.IsIpForwardingEnabled As Boolean? Implements INetworkInterface.IsIpForwardingEnabled
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
      description: <tt>true</tt> if IP forwarding is enabled in this network interface
  implements:
  - Microsoft.Azure.Management.Fluent.Network.INetworkInterface.IsIpForwardingEnabled
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.IsIpForwardingEnabled
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#INetworkInterface#MacAddress
  commentId: P:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#INetworkInterface#MacAddress
  id: Microsoft#Azure#Management#Fluent#Network#INetworkInterface#MacAddress
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: INetworkInterface.MacAddress
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.INetworkInterface.MacAddress
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.MacAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 332
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: string INetworkInterface.MacAddress { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.Azure.Management.Fluent.Network.INetworkInterface.MacAddress As String Implements INetworkInterface.MacAddress
    parameters: []
    return:
      type: System.String
      description: the MAC Address of the network interface
  implements:
  - Microsoft.Azure.Management.Fluent.Network.INetworkInterface.MacAddress
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.MacAddress
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#INetworkInterface#IpConfigurations
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#INetworkInterface#IpConfigurations
  id: Microsoft#Azure#Management#Fluent#Network#INetworkInterface#IpConfigurations
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: INetworkInterface.IpConfigurations()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.INetworkInterface.IpConfigurations()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.IpConfigurations
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 340
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: IDictionary<string, INicIpConfiguration> INetworkInterface.IpConfigurations()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.INetworkInterface.IpConfigurations As IDictionary(Of String, INicIpConfiguration) Implements INetworkInterface.IpConfigurations
    return:
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration}
      description: the IP configurations of this network interface, indexed by their names
  implements:
  - Microsoft.Azure.Management.Fluent.Network.INetworkInterface.IpConfigurations
  name.vb: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.IpConfigurations()
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#INetworkInterface#AppliedDnsServers
  commentId: P:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#INetworkInterface#AppliedDnsServers
  id: Microsoft#Azure#Management#Fluent#Network#INetworkInterface#AppliedDnsServers
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: INetworkInterface.AppliedDnsServers
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.INetworkInterface.AppliedDnsServers
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.AppliedDnsServers
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 346
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: List<string> INetworkInterface.AppliedDnsServers { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.Azure.Management.Fluent.Network.INetworkInterface.AppliedDnsServers As List(Of String) Implements INetworkInterface.AppliedDnsServers
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
      description: applied DNS servers
  implements:
  - Microsoft.Azure.Management.Fluent.Network.INetworkInterface.AppliedDnsServers
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.AppliedDnsServers
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#INetworkInterface#PrimaryIpConfiguration
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#INetworkInterface#PrimaryIpConfiguration
  id: Microsoft#Azure#Management#Fluent#Network#INetworkInterface#PrimaryIpConfiguration
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: INetworkInterface.PrimaryIpConfiguration()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.INetworkInterface.PrimaryIpConfiguration()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.PrimaryIpConfiguration
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 354
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: INicIpConfiguration INetworkInterface.PrimaryIpConfiguration()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.INetworkInterface.PrimaryIpConfiguration As INicIpConfiguration Implements INetworkInterface.PrimaryIpConfiguration
    return:
      type: Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration
      description: the primary IP configuration of this network interface
  implements:
  - Microsoft.Azure.Management.Fluent.Network.INetworkInterface.PrimaryIpConfiguration
  name.vb: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.PrimaryIpConfiguration()
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#INetworkInterface#GetNetworkSecurityGroup
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#INetworkInterface#GetNetworkSecurityGroup
  id: Microsoft#Azure#Management#Fluent#Network#INetworkInterface#GetNetworkSecurityGroup
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: INetworkInterface.GetNetworkSecurityGroup()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.INetworkInterface.GetNetworkSecurityGroup()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.GetNetworkSecurityGroup
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 365
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: INetworkSecurityGroup INetworkInterface.GetNetworkSecurityGroup()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.INetworkInterface.GetNetworkSecurityGroup As INetworkSecurityGroup Implements INetworkInterface.GetNetworkSecurityGroup
    return:
      type: Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup
  implements:
  - Microsoft.Azure.Management.Fluent.Network.INetworkInterface.GetNetworkSecurityGroup
  name.vb: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.GetNetworkSecurityGroup()
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#INetworkInterface#InternalDomainNameSuffix
  commentId: P:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#INetworkInterface#InternalDomainNameSuffix
  id: Microsoft#Azure#Management#Fluent#Network#INetworkInterface#InternalDomainNameSuffix
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: INetworkInterface.InternalDomainNameSuffix
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.INetworkInterface.InternalDomainNameSuffix
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.InternalDomainNameSuffix
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 371
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: string INetworkInterface.InternalDomainNameSuffix { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.Azure.Management.Fluent.Network.INetworkInterface.InternalDomainNameSuffix As String Implements INetworkInterface.InternalDomainNameSuffix
    parameters: []
    return:
      type: System.String
      description: the internal domain name suffix
  implements:
  - Microsoft.Azure.Management.Fluent.Network.INetworkInterface.InternalDomainNameSuffix
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.InternalDomainNameSuffix
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#INetworkInterface#PrimaryPrivateIpAllocationMethod
  commentId: P:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#INetworkInterface#PrimaryPrivateIpAllocationMethod
  id: Microsoft#Azure#Management#Fluent#Network#INetworkInterface#PrimaryPrivateIpAllocationMethod
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: INetworkInterface.PrimaryPrivateIpAllocationMethod
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.INetworkInterface.PrimaryPrivateIpAllocationMethod
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.PrimaryPrivateIpAllocationMethod
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 380
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: string INetworkInterface.PrimaryPrivateIpAllocationMethod { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.Azure.Management.Fluent.Network.INetworkInterface.PrimaryPrivateIpAllocationMethod As String Implements INetworkInterface.PrimaryPrivateIpAllocationMethod
    parameters: []
    return:
      type: System.String
      description: the private IP allocation method (Dynamic, Static) of this network interface's
  implements:
  - Microsoft.Azure.Management.Fluent.Network.INetworkInterface.PrimaryPrivateIpAllocationMethod
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.PrimaryPrivateIpAllocationMethod
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#INetworkInterface#InternalDnsNameLabel
  commentId: P:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#INetworkInterface#InternalDnsNameLabel
  id: Microsoft#Azure#Management#Fluent#Network#INetworkInterface#InternalDnsNameLabel
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: INetworkInterface.InternalDnsNameLabel
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.INetworkInterface.InternalDnsNameLabel
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.InternalDnsNameLabel
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 388
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: string INetworkInterface.InternalDnsNameLabel { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.Azure.Management.Fluent.Network.INetworkInterface.InternalDnsNameLabel As String Implements INetworkInterface.InternalDnsNameLabel
    parameters: []
    return:
      type: System.String
      description: the Internal DNS name assigned to this network interface
  implements:
  - Microsoft.Azure.Management.Fluent.Network.INetworkInterface.InternalDnsNameLabel
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.InternalDnsNameLabel
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#INetworkInterface#NetworkSecurityGroupId
  commentId: P:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#INetworkInterface#NetworkSecurityGroupId
  id: Microsoft#Azure#Management#Fluent#Network#INetworkInterface#NetworkSecurityGroupId
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: INetworkInterface.NetworkSecurityGroupId
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.INetworkInterface.NetworkSecurityGroupId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.NetworkSecurityGroupId
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 397
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: string INetworkInterface.NetworkSecurityGroupId { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.Azure.Management.Fluent.Network.INetworkInterface.NetworkSecurityGroupId As String Implements INetworkInterface.NetworkSecurityGroupId
    parameters: []
    return:
      type: System.String
      description: the network security group resource id or null if there is no network security group
  implements:
  - Microsoft.Azure.Management.Fluent.Network.INetworkInterface.NetworkSecurityGroupId
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.NetworkSecurityGroupId
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithLoadBalancer#WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithLoadBalancer#WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  id: Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithLoadBalancer#WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule(ILoadBalancer, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 410
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nAssociates the network interface's primary IP configuration with an inbound NAT rule of an existing load balancer.\n"
  example: []
  syntax:
    content: IUpdate IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule(ILoadBalancer loadBalancer, string inboundNatRuleName)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule(loadBalancer As ILoadBalancer, inboundNatRuleName As String) As IUpdate Implements IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule
    parameters:
    - id: loadBalancer
      type: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
      description: loadBalancer an existing load balancer
    - id: inboundNatRuleName
      type: System.String
      description: inboundNatRuleName the name of an existing inbound NAT rule on the selected load balancer
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
      description: the next stage of the update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule(ILoadBalancer, String)
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithLoadBalancer#WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithLoadBalancer#WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  id: Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithLoadBalancer#WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: IWithLoadBalancer.WithExistingLoadBalancerBackend(ILoadBalancer, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithExistingLoadBalancerBackend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 421
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nAssociates the network interface's primary IP configuration with a backend of an existing load balancer.\n"
  example: []
  syntax:
    content: IUpdate IWithLoadBalancer.WithExistingLoadBalancerBackend(ILoadBalancer loadBalancer, string backendName)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithExistingLoadBalancerBackend(loadBalancer As ILoadBalancer, backendName As String) As IUpdate Implements IWithLoadBalancer.WithExistingLoadBalancerBackend
    parameters:
    - id: loadBalancer
      type: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
      description: loadBalancer an existing load balancer
    - id: backendName
      type: System.String
      description: backendName the name of an existing backend on that load balancer
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
      description: the next stage of the update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithExistingLoadBalancerBackend(ILoadBalancer, String)
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithLoadBalancer#WithoutLoadBalancerBackends
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithLoadBalancer#WithoutLoadBalancerBackends
  id: Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithLoadBalancer#WithoutLoadBalancerBackends
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: IWithLoadBalancer.WithoutLoadBalancerBackends()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithoutLoadBalancerBackends()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithoutLoadBalancerBackends
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 430
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nRemoves all the existing associations with any load balancer backends.\n"
  example: []
  syntax:
    content: IUpdate IWithLoadBalancer.WithoutLoadBalancerBackends()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithoutLoadBalancerBackends As IUpdate Implements IWithLoadBalancer.WithoutLoadBalancerBackends
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
      description: the next stage of the update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithoutLoadBalancerBackends
  name.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithoutLoadBalancerBackends()
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithLoadBalancer#WithoutLoadBalancerInboundNatRules
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithLoadBalancer#WithoutLoadBalancerInboundNatRules
  id: Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithLoadBalancer#WithoutLoadBalancerInboundNatRules
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: IWithLoadBalancer.WithoutLoadBalancerInboundNatRules()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithoutLoadBalancerInboundNatRules()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithoutLoadBalancerInboundNatRules
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 439
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nRemoves all the existing associations with any load balancer inbound NAT rules.\n"
  example: []
  syntax:
    content: IUpdate IWithLoadBalancer.WithoutLoadBalancerInboundNatRules()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithoutLoadBalancerInboundNatRules As IUpdate Implements IWithLoadBalancer.WithoutLoadBalancerInboundNatRules
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
      description: the next stage of the update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithoutLoadBalancerInboundNatRules
  name.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithoutLoadBalancerInboundNatRules()
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithLoadBalancer#WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithLoadBalancer#WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  id: Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithLoadBalancer#WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule(ILoadBalancer, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 450
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nAssociates the network interface's primary IP configuration with an inbound NAT rule of an existing load balancer.\n"
  example: []
  syntax:
    content: IWithCreate IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule(ILoadBalancer loadBalancer, string inboundNatRuleName)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule(loadBalancer As ILoadBalancer, inboundNatRuleName As String) As IWithCreate Implements IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule
    parameters:
    - id: loadBalancer
      type: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
      description: loadBalancer an existing load balancer
    - id: inboundNatRuleName
      type: System.String
      description: inboundNatRuleName the name of an existing inbound NAT rule on the selected load balancer
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule(ILoadBalancer, String)
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithLoadBalancer#WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithLoadBalancer#WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  id: Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithLoadBalancer#WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: IWithLoadBalancer.WithExistingLoadBalancerBackend(ILoadBalancer, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithLoadBalancer.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithLoadBalancer.WithExistingLoadBalancerBackend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 461
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nAssociates the network interface's primary IP configuration with a backend of an existing load balancer.\n"
  example: []
  syntax:
    content: IWithCreate IWithLoadBalancer.WithExistingLoadBalancerBackend(ILoadBalancer loadBalancer, string backendName)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithLoadBalancer.WithExistingLoadBalancerBackend(loadBalancer As ILoadBalancer, backendName As String) As IWithCreate Implements IWithLoadBalancer.WithExistingLoadBalancerBackend
    parameters:
    - id: loadBalancer
      type: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
      description: loadBalancer an existing load balancer
    - id: backendName
      type: System.String
      description: backendName the name of an existing backend on that load balancer
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithLoadBalancer.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithLoadBalancer.WithExistingLoadBalancerBackend(ILoadBalancer, String)
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithSecondaryIpConfiguration#DefineSecondaryIpConfiguration(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithSecondaryIpConfiguration#DefineSecondaryIpConfiguration(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithSecondaryIpConfiguration#DefineSecondaryIpConfiguration(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: IWithSecondaryIpConfiguration.DefineSecondaryIpConfiguration(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithSecondaryIpConfiguration.DefineSecondaryIpConfiguration(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithSecondaryIpConfiguration.DefineSecondaryIpConfiguration
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 471
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nStarts definition of a secondary IP configuration.\n"
  example: []
  syntax:
    content: IBlank<IWithCreate> IWithSecondaryIpConfiguration.DefineSecondaryIpConfiguration(string name)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithSecondaryIpConfiguration.DefineSecondaryIpConfiguration(name As String) As IBlank(Of IWithCreate) Implements IWithSecondaryIpConfiguration.DefineSecondaryIpConfiguration
    parameters:
    - id: name
      type: System.String
      description: name name for the IP configuration
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IBlank{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}
      description: the first stage of a secondary IP configuration definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithSecondaryIpConfiguration.DefineSecondaryIpConfiguration(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithSecondaryIpConfiguration.DefineSecondaryIpConfiguration(String)
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithPrimaryNetwork#WithExistingPrimaryNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithPrimaryNetwork#WithExistingPrimaryNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  id: Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithPrimaryNetwork#WithExistingPrimaryNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: IWithPrimaryNetwork.WithExistingPrimaryNetwork(INetwork)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork.WithExistingPrimaryNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork.WithExistingPrimaryNetwork
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 481
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nAssociate an existing virtual network with the network interface's primary IP configuration.\n"
  example: []
  syntax:
    content: IWithPrimaryNetworkSubnet IWithPrimaryNetwork.WithExistingPrimaryNetwork(INetwork network)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork.WithExistingPrimaryNetwork(network As INetwork) As IWithPrimaryNetworkSubnet Implements IWithPrimaryNetwork.WithExistingPrimaryNetwork
    parameters:
    - id: network
      type: Microsoft.Azure.Management.Fluent.Network.INetwork
      description: network an existing virtual network
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetworkSubnet
      description: the next stage of the network interface definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork.WithExistingPrimaryNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  name.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork.WithExistingPrimaryNetwork(INetwork)
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithPrimaryNetwork#WithNewPrimaryNetwork(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork})
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithPrimaryNetwork#WithNewPrimaryNetwork(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork})
  id: Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithPrimaryNetwork#WithNewPrimaryNetwork(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork})
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: IWithPrimaryNetwork.WithNewPrimaryNetwork(ICreatable<INetwork>)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork.WithNewPrimaryNetwork(ICreatable<Microsoft.Azure.Management.Fluent.Network.INetwork>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork.WithNewPrimaryNetwork
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 492
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nCreate a new virtual network to associate with the network interface's primary IP configuration,\nbased on the provided definition.\n"
  example: []
  syntax:
    content: IWithPrimaryPrivateIp IWithPrimaryNetwork.WithNewPrimaryNetwork(ICreatable<INetwork> creatable)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork.WithNewPrimaryNetwork(creatable As ICreatable(Of INetwork)) As IWithPrimaryPrivateIp Implements IWithPrimaryNetwork.WithNewPrimaryNetwork
    parameters:
    - id: creatable
      type: ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork}
      description: creatable a creatable definition for a new virtual network
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPrivateIp
      description: the next stage of the network interface definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork.WithNewPrimaryNetwork(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork})
  fullName.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork.WithNewPrimaryNetwork(ICreatable(Of Microsoft.Azure.Management.Fluent.Network.INetwork))
  name.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork.WithNewPrimaryNetwork(ICreatable(Of INetwork))
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithPrimaryNetwork#WithNewPrimaryNetwork(System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithPrimaryNetwork#WithNewPrimaryNetwork(System.String,System.String)
  id: Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithPrimaryNetwork#WithNewPrimaryNetwork(System.String,System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: IWithPrimaryNetwork.WithNewPrimaryNetwork(String, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork.WithNewPrimaryNetwork(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork.WithNewPrimaryNetwork
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 507
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IWithPrimaryPrivateIp IWithPrimaryNetwork.WithNewPrimaryNetwork(string name, string addressSpace)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork.WithNewPrimaryNetwork(name As String, addressSpace As String) As IWithPrimaryPrivateIp Implements IWithPrimaryNetwork.WithNewPrimaryNetwork
    parameters:
    - id: name
      type: System.String
    - id: addressSpace
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPrivateIp
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork.WithNewPrimaryNetwork(System.String,System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork.WithNewPrimaryNetwork(String, String)
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithPrimaryNetwork#WithNewPrimaryNetwork(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithPrimaryNetwork#WithNewPrimaryNetwork(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithPrimaryNetwork#WithNewPrimaryNetwork(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: IWithPrimaryNetwork.WithNewPrimaryNetwork(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork.WithNewPrimaryNetwork(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork.WithNewPrimaryNetwork
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 521
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IWithPrimaryPrivateIp IWithPrimaryNetwork.WithNewPrimaryNetwork(string addressSpace)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork.WithNewPrimaryNetwork(addressSpace As String) As IWithPrimaryPrivateIp Implements IWithPrimaryNetwork.WithNewPrimaryNetwork
    parameters:
    - id: addressSpace
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPrivateIp
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork.WithNewPrimaryNetwork(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork.WithNewPrimaryNetwork(String)
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithIpConfiguration#UpdateIpConfiguration(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithIpConfiguration#UpdateIpConfiguration(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithIpConfiguration#UpdateIpConfiguration(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: IWithIpConfiguration.UpdateIpConfiguration(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpConfiguration.UpdateIpConfiguration(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpConfiguration.UpdateIpConfiguration
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 531
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nStarts update of an IP configuration.\n"
  example: []
  syntax:
    content: IUpdate IWithIpConfiguration.UpdateIpConfiguration(string name)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpConfiguration.UpdateIpConfiguration(name As String) As IUpdate Implements IWithIpConfiguration.UpdateIpConfiguration
    parameters:
    - id: name
      type: System.String
      description: name name of the IP configuration
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate
      description: the first stage of an IP configuration update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpConfiguration.UpdateIpConfiguration(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpConfiguration.UpdateIpConfiguration(String)
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithIpConfiguration#DefineSecondaryIpConfiguration(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithIpConfiguration#DefineSecondaryIpConfiguration(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithIpConfiguration#DefineSecondaryIpConfiguration(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: IWithIpConfiguration.DefineSecondaryIpConfiguration(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpConfiguration.DefineSecondaryIpConfiguration(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpConfiguration.DefineSecondaryIpConfiguration
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 541
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nStarts definition of a secondary IP configuration.\n"
  example: []
  syntax:
    content: IBlank<IUpdate> IWithIpConfiguration.DefineSecondaryIpConfiguration(string name)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpConfiguration.DefineSecondaryIpConfiguration(name As String) As IBlank(Of IUpdate) Implements IWithIpConfiguration.DefineSecondaryIpConfiguration
    parameters:
    - id: name
      type: System.String
      description: name name for the IP configuration
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IBlank{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}
      description: the first stage of a secondary IP configuration definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpConfiguration.DefineSecondaryIpConfiguration(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpConfiguration.DefineSecondaryIpConfiguration(String)
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithPrimaryNetworkSubnet#WithSubnet(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithPrimaryNetworkSubnet#WithSubnet(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithPrimaryNetworkSubnet#WithSubnet(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: IWithPrimaryNetworkSubnet.WithSubnet(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryNetworkSubnet.WithSubnet(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryNetworkSubnet.WithSubnet
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 551
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nAssociate a subnet with the network interface.\n"
  example: []
  syntax:
    content: IUpdate IWithPrimaryNetworkSubnet.WithSubnet(string name)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryNetworkSubnet.WithSubnet(name As String) As IUpdate Implements IWithPrimaryNetworkSubnet.WithSubnet
    parameters:
    - id: name
      type: System.String
      description: name the subnet name
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
      description: the next stage of the network interface update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryNetworkSubnet.WithSubnet(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryNetworkSubnet.WithSubnet(String)
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithPrimaryNetworkSubnet#WithSubnet(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithPrimaryNetworkSubnet#WithSubnet(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithPrimaryNetworkSubnet#WithSubnet(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: IWithPrimaryNetworkSubnet.WithSubnet(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetworkSubnet.WithSubnet(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetworkSubnet.WithSubnet
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 561
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nAssociate a subnet with the network interface's primary IP configuration.\n"
  example: []
  syntax:
    content: IWithPrimaryPrivateIp IWithPrimaryNetworkSubnet.WithSubnet(string name)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetworkSubnet.WithSubnet(name As String) As IWithPrimaryPrivateIp Implements IWithPrimaryNetworkSubnet.WithSubnet
    parameters:
    - id: name
      type: System.String
      description: name the subnet name
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPrivateIp
      description: the next stage of the network interface definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetworkSubnet.WithSubnet(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetworkSubnet.WithSubnet(String)
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithIpForwarding#WithIpForwarding
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithIpForwarding#WithIpForwarding
  id: Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithIpForwarding#WithIpForwarding
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: IWithIpForwarding.WithIpForwarding()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpForwarding.WithIpForwarding()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpForwarding.WithIpForwarding
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 579
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nEnable IP forwarding in the network interface.\n"
  example: []
  syntax:
    content: IUpdate IWithIpForwarding.WithIpForwarding()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpForwarding.WithIpForwarding As IUpdate Implements IWithIpForwarding.WithIpForwarding
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
      description: the next stage of the network interface update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpForwarding.WithIpForwarding
  name.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpForwarding.WithIpForwarding()
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithIpForwarding#WithoutIpForwarding
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithIpForwarding#WithoutIpForwarding
  id: Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IWithIpForwarding#WithoutIpForwarding
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  langs:
  - csharp
  - vb
  name: IWithIpForwarding.WithoutIpForwarding()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl.Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpForwarding.WithoutIpForwarding()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpForwarding.WithoutIpForwarding
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NetworkInterfaceImpl.cs
    startLine: 588
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nDisable IP forwarding in the network interface.\n"
  example: []
  syntax:
    content: IUpdate IWithIpForwarding.WithoutIpForwarding()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpForwarding.WithoutIpForwarding As IUpdate Implements IWithIpForwarding.WithoutIpForwarding
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
      description: the next stage of the network interface update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpForwarding.WithoutIpForwarding
  name.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpForwarding.WithoutIpForwarding()
references:
- uid: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network
  fullName: Microsoft.Azure.Management.Fluent.Network
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.Fluent.Network.INetworkInterface
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: INetworkInterface
  fullName: Microsoft.Azure.Management.Fluent.Network.INetworkInterface
- uid: IGroupableResource
  isExternal: true
  name: IGroupableResource
  fullName: IGroupableResource
- uid: IRefreshable{Microsoft.Azure.Management.Fluent.Network.INetworkInterface}
  definition: IRefreshable`1
  name: IRefreshable<INetworkInterface>
  fullName: IRefreshable<Microsoft.Azure.Management.Fluent.Network.INetworkInterface>
  fullname.vb: IRefreshable(Of Microsoft.Azure.Management.Fluent.Network.INetworkInterface)
  name.vb: IRefreshable(Of INetworkInterface)
  spec.csharp:
  - uid: IRefreshable`1
    name: IRefreshable
    fullName: IRefreshable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.INetworkInterface
    name: INetworkInterface
    fullName: Microsoft.Azure.Management.Fluent.Network.INetworkInterface
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IRefreshable`1
    name: IRefreshable
    fullName: IRefreshable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.INetworkInterface
    name: INetworkInterface
    fullName: Microsoft.Azure.Management.Fluent.Network.INetworkInterface
  - name: )
    fullName: )
- uid: IWrapper{Microsoft.Azure.Management.Network.Models.NetworkInterfaceInner}
  definition: IWrapper`1
  name: IWrapper<NetworkInterfaceInner>
  fullName: IWrapper<Microsoft.Azure.Management.Network.Models.NetworkInterfaceInner>
  fullname.vb: IWrapper(Of Microsoft.Azure.Management.Network.Models.NetworkInterfaceInner)
  name.vb: IWrapper(Of NetworkInterfaceInner)
  spec.csharp:
  - uid: IWrapper`1
    name: IWrapper
    fullName: IWrapper
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Network.Models.NetworkInterfaceInner
    name: NetworkInterfaceInner
    fullName: Microsoft.Azure.Management.Network.Models.NetworkInterfaceInner
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IWrapper`1
    name: IWrapper
    fullName: IWrapper
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Network.Models.NetworkInterfaceInner
    name: NetworkInterfaceInner
    fullName: Microsoft.Azure.Management.Network.Models.NetworkInterfaceInner
  - name: )
    fullName: )
- uid: IUpdatable{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}
  definition: IUpdatable`1
  name: IUpdatable<IUpdate>
  fullName: IUpdatable<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>
  fullname.vb: IUpdatable(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate)
  name.vb: IUpdatable(Of IUpdate)
  spec.csharp:
  - uid: IUpdatable`1
    name: IUpdatable
    fullName: IUpdatable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IUpdatable`1
    name: IUpdatable
    fullName: IUpdatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IDefinition
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition
  isExternal: false
  name: IDefinition
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IDefinition
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IBlank
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition
  isExternal: false
  name: IBlank
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IBlank
- uid: IDefinitionWithRegion{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithGroup}
  definition: IDefinitionWithRegion`1
  name: IDefinitionWithRegion<IWithGroup>
  fullName: IDefinitionWithRegion<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithGroup>
  fullname.vb: IDefinitionWithRegion(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithGroup)
  name.vb: IDefinitionWithRegion(Of IWithGroup)
  spec.csharp:
  - uid: IDefinitionWithRegion`1
    name: IDefinitionWithRegion
    fullName: IDefinitionWithRegion
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithGroup
    name: IWithGroup
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithGroup
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IDefinitionWithRegion`1
    name: IDefinitionWithRegion
    fullName: IDefinitionWithRegion
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithGroup
    name: IWithGroup
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithGroup
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithGroup
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition
  isExternal: false
  name: IWithGroup
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithGroup
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableResource.Definition.IWithGroup{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork}
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableResource.Definition.IWithGroup`1
  name: Resource.Core.GroupableResource.Definition.IWithGroup<IWithPrimaryNetwork>
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableResource.Definition.IWithGroup<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork>
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableResource.Definition.IWithGroup(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork)
  name.vb: Resource.Core.GroupableResource.Definition.IWithGroup(Of IWithPrimaryNetwork)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableResource.Definition.IWithGroup`1
    name: Resource.Core.GroupableResource.Definition.IWithGroup
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableResource.Definition.IWithGroup
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork
    name: IWithPrimaryNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableResource.Definition.IWithGroup`1
    name: Resource.Core.GroupableResource.Definition.IWithGroup
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableResource.Definition.IWithGroup
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork
    name: IWithPrimaryNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition
  isExternal: false
  name: IWithPrimaryNetwork
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetworkSubnet
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition
  isExternal: false
  name: IWithPrimaryNetworkSubnet
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetworkSubnet
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPrivateIp
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition
  isExternal: false
  name: IWithPrimaryPrivateIp
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPrivateIp
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition
  isExternal: false
  name: IWithCreate
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
- uid: ICreatable{Microsoft.Azure.Management.Fluent.Network.INetworkInterface}
  definition: ICreatable`1
  name: ICreatable<INetworkInterface>
  fullName: ICreatable<Microsoft.Azure.Management.Fluent.Network.INetworkInterface>
  fullname.vb: ICreatable(Of Microsoft.Azure.Management.Fluent.Network.INetworkInterface)
  name.vb: ICreatable(Of INetworkInterface)
  spec.csharp:
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.INetworkInterface
    name: INetworkInterface
    fullName: Microsoft.Azure.Management.Fluent.Network.INetworkInterface
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.INetworkInterface
    name: INetworkInterface
    fullName: Microsoft.Azure.Management.Fluent.Network.INetworkInterface
  - name: )
    fullName: )
- uid: IDefinitionWithTags{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}
  definition: IDefinitionWithTags`1
  name: IDefinitionWithTags<IWithCreate>
  fullName: IDefinitionWithTags<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>
  fullname.vb: IDefinitionWithTags(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate)
  name.vb: IDefinitionWithTags(Of IWithCreate)
  spec.csharp:
  - uid: IDefinitionWithTags`1
    name: IDefinitionWithTags
    fullName: IDefinitionWithTags
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
    name: IWithCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IDefinitionWithTags`1
    name: IDefinitionWithTags
    fullName: IDefinitionWithTags
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
    name: IWithCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition
  isExternal: false
  name: IWithPrimaryPublicIpAddress
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithNetworkSecurityGroup
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition
  isExternal: false
  name: IWithNetworkSecurityGroup
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithNetworkSecurityGroup
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithSecondaryIpConfiguration
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition
  isExternal: false
  name: IWithSecondaryIpConfiguration
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithSecondaryIpConfiguration
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithLoadBalancer
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition
  isExternal: false
  name: IWithLoadBalancer
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithLoadBalancer
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update
  isExternal: false
  name: IUpdate
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
- uid: IAppliable{Microsoft.Azure.Management.Fluent.Network.INetworkInterface}
  definition: IAppliable`1
  name: IAppliable<INetworkInterface>
  fullName: IAppliable<Microsoft.Azure.Management.Fluent.Network.INetworkInterface>
  fullname.vb: IAppliable(Of Microsoft.Azure.Management.Fluent.Network.INetworkInterface)
  name.vb: IAppliable(Of INetworkInterface)
  spec.csharp:
  - uid: IAppliable`1
    name: IAppliable
    fullName: IAppliable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.INetworkInterface
    name: INetworkInterface
    fullName: Microsoft.Azure.Management.Fluent.Network.INetworkInterface
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IAppliable`1
    name: IAppliable
    fullName: IAppliable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.INetworkInterface
    name: INetworkInterface
    fullName: Microsoft.Azure.Management.Fluent.Network.INetworkInterface
  - name: )
    fullName: )
- uid: IUpdateWithTags{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}
  definition: IUpdateWithTags`1
  name: IUpdateWithTags<IUpdate>
  fullName: IUpdateWithTags<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>
  fullname.vb: IUpdateWithTags(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate)
  name.vb: IUpdateWithTags(Of IUpdate)
  spec.csharp:
  - uid: IUpdateWithTags`1
    name: IUpdateWithTags
    fullName: IUpdateWithTags
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IUpdateWithTags`1
    name: IUpdateWithTags
    fullName: IUpdateWithTags
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryNetworkSubnet
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update
  isExternal: false
  name: IWithPrimaryNetworkSubnet
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryNetworkSubnet
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPrivateIp
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update
  isExternal: false
  name: IWithPrimaryPrivateIp
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPrivateIp
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update
  isExternal: false
  name: IWithPrimaryPublicIpAddress
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update
  isExternal: false
  name: IWithNetworkSecurityGroup
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpForwarding
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update
  isExternal: false
  name: IWithIpForwarding
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpForwarding
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update
  isExternal: false
  name: IWithDnsServer
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpConfiguration
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update
  isExternal: false
  name: IWithIpConfiguration
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpConfiguration
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update
  isExternal: false
  name: IWithLoadBalancer
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: IRefreshable`1
  isExternal: true
  name: IRefreshable<>
  fullName: IRefreshable<>
  fullname.vb: IRefreshable(Of )
  name.vb: IRefreshable(Of )
  spec.csharp:
  - uid: IRefreshable`1
    name: IRefreshable
    fullName: IRefreshable
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IRefreshable`1
    name: IRefreshable
    fullName: IRefreshable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: IWrapper`1
  isExternal: true
  name: IWrapper<>
  fullName: IWrapper<>
  fullname.vb: IWrapper(Of )
  name.vb: IWrapper(Of )
  spec.csharp:
  - uid: IWrapper`1
    name: IWrapper
    fullName: IWrapper
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IWrapper`1
    name: IWrapper
    fullName: IWrapper
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: IUpdatable`1
  isExternal: true
  name: IUpdatable<>
  fullName: IUpdatable<>
  fullname.vb: IUpdatable(Of )
  name.vb: IUpdatable(Of )
  spec.csharp:
  - uid: IUpdatable`1
    name: IUpdatable
    fullName: IUpdatable
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IUpdatable`1
    name: IUpdatable
    fullName: IUpdatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition
- uid: IDefinitionWithRegion`1
  isExternal: true
  name: IDefinitionWithRegion<>
  fullName: IDefinitionWithRegion<>
  fullname.vb: IDefinitionWithRegion(Of )
  name.vb: IDefinitionWithRegion(Of )
  spec.csharp:
  - uid: IDefinitionWithRegion`1
    name: IDefinitionWithRegion
    fullName: IDefinitionWithRegion
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IDefinitionWithRegion`1
    name: IDefinitionWithRegion
    fullName: IDefinitionWithRegion
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableResource.Definition.IWithGroup`1
  isExternal: false
  name: Resource.Core.GroupableResource.Definition.IWithGroup<>
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableResource.Definition.IWithGroup<>
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableResource.Definition.IWithGroup(Of )
  name.vb: Resource.Core.GroupableResource.Definition.IWithGroup(Of )
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableResource.Definition.IWithGroup`1
    name: Resource.Core.GroupableResource.Definition.IWithGroup
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableResource.Definition.IWithGroup
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableResource.Definition.IWithGroup`1
    name: Resource.Core.GroupableResource.Definition.IWithGroup
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableResource.Definition.IWithGroup
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: ICreatable`1
  isExternal: true
  name: ICreatable<>
  fullName: ICreatable<>
  fullname.vb: ICreatable(Of )
  name.vb: ICreatable(Of )
  spec.csharp:
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: IDefinitionWithTags`1
  isExternal: true
  name: IDefinitionWithTags<>
  fullName: IDefinitionWithTags<>
  fullname.vb: IDefinitionWithTags(Of )
  name.vb: IDefinitionWithTags(Of )
  spec.csharp:
  - uid: IDefinitionWithTags`1
    name: IDefinitionWithTags
    fullName: IDefinitionWithTags
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IDefinitionWithTags`1
    name: IDefinitionWithTags
    fullName: IDefinitionWithTags
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update
- uid: IAppliable`1
  isExternal: true
  name: IAppliable<>
  fullName: IAppliable<>
  fullname.vb: IAppliable(Of )
  name.vb: IAppliable(Of )
  spec.csharp:
  - uid: IAppliable`1
    name: IAppliable
    fullName: IAppliable
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IAppliable`1
    name: IAppliable
    fullName: IAppliable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: IUpdateWithTags`1
  isExternal: true
  name: IUpdateWithTags<>
  fullName: IUpdateWithTags<>
  fullname.vb: IUpdateWithTags(Of )
  name.vb: IUpdateWithTags(Of )
  spec.csharp:
  - uid: IUpdateWithTags`1
    name: IUpdateWithTags
    fullName: IUpdateWithTags
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IUpdateWithTags`1
    name: IUpdateWithTags
    fullName: IUpdateWithTags
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: ResourceNamer
  isExternal: true
  name: ResourceNamer
  fullName: ResourceNamer
- uid: ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork}
  definition: ICreatable`1
  name: ICreatable<INetwork>
  fullName: ICreatable<Microsoft.Azure.Management.Fluent.Network.INetwork>
  fullname.vb: ICreatable(Of Microsoft.Azure.Management.Fluent.Network.INetwork)
  name.vb: ICreatable(Of INetwork)
  spec.csharp:
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: NetworkInterfaceImpl
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.Azure.Management.Fluent.Network.INetwork
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: INetwork
  fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
- uid: ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress}
  definition: ICreatable`1
  name: ICreatable<IPublicIpAddress>
  fullName: ICreatable<Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress>
  fullname.vb: ICreatable(Of Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  name.vb: ICreatable(Of IPublicIpAddress)
  spec.csharp:
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: ILoadBalancer
  fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
- uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: IPublicIpAddress
  fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
- uid: ICreatable{Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup}
  definition: ICreatable`1
  name: ICreatable<INetworkSecurityGroup>
  fullName: ICreatable<Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup>
  fullname.vb: ICreatable(Of Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup)
  name.vb: ICreatable(Of INetworkSecurityGroup)
  spec.csharp:
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup
    name: INetworkSecurityGroup
    fullName: Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup
    name: INetworkSecurityGroup
    fullName: Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: INetworkSecurityGroup
  fullName: Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: NicIpConfigurationImpl
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: true
  name: IList<T>
  fullName: System.Collections.Generic.IList<T>
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, INicIpConfiguration>
  fullName: System.Collections.Generic.IDictionary<System.String, Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration)
  name.vb: IDictionary(Of String, INicIpConfiguration)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration
    name: INicIpConfiguration
    fullName: Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration
    name: INicIpConfiguration
    fullName: Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.Network.Models.NetworkInterfaceInner}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<NetworkInterfaceInner>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.Network.Models.NetworkInterfaceInner>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.Network.Models.NetworkInterfaceInner)
  name.vb: Task(Of NetworkInterfaceInner)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Network.Models.NetworkInterfaceInner
    name: NetworkInterfaceInner
    fullName: Microsoft.Azure.Management.Network.Models.NetworkInterfaceInner
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Network.Models.NetworkInterfaceInner
    name: NetworkInterfaceInner
    fullName: Microsoft.Azure.Management.Network.Models.NetworkInterfaceInner
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithoutDnsServer(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer
  isExternal: true
  name: WithoutDnsServer(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithoutDnsServer(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithoutDnsServer(System.String)
    name: WithoutDnsServer
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithoutDnsServer
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithoutDnsServer(System.String)
    name: WithoutDnsServer
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithoutDnsServer
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithDnsServer(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer
  isExternal: true
  name: WithDnsServer(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithDnsServer(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithDnsServer(System.String)
    name: WithDnsServer
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithDnsServer
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithDnsServer(System.String)
    name: WithDnsServer
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithDnsServer
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithAzureDnsServer
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer
  isExternal: false
  name: WithAzureDnsServer()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithAzureDnsServer()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithAzureDnsServer
    name: WithAzureDnsServer
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithAzureDnsServer
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithAzureDnsServer
    name: WithAzureDnsServer
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithDnsServer.WithAzureDnsServer
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithExistingNetworkSecurityGroup(Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup
  isExternal: false
  name: WithExistingNetworkSecurityGroup(INetworkSecurityGroup)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithExistingNetworkSecurityGroup(Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithExistingNetworkSecurityGroup(Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup)
    name: WithExistingNetworkSecurityGroup
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithExistingNetworkSecurityGroup
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup
    name: INetworkSecurityGroup
    fullName: Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithExistingNetworkSecurityGroup(Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup)
    name: WithExistingNetworkSecurityGroup
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithExistingNetworkSecurityGroup
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup
    name: INetworkSecurityGroup
    fullName: Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithoutNetworkSecurityGroup
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup
  isExternal: false
  name: WithoutNetworkSecurityGroup()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithoutNetworkSecurityGroup()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithoutNetworkSecurityGroup
    name: WithoutNetworkSecurityGroup
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithoutNetworkSecurityGroup
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithoutNetworkSecurityGroup
    name: WithoutNetworkSecurityGroup
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithoutNetworkSecurityGroup
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithNewNetworkSecurityGroup(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup})
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup
  isExternal: true
  name: WithNewNetworkSecurityGroup(ICreatable<INetworkSecurityGroup>)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithNewNetworkSecurityGroup(ICreatable<Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup>)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithNewNetworkSecurityGroup(ICreatable(Of Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup))
  name.vb: WithNewNetworkSecurityGroup(ICreatable(Of INetworkSecurityGroup))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithNewNetworkSecurityGroup(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup})
    name: WithNewNetworkSecurityGroup
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithNewNetworkSecurityGroup
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup
    name: INetworkSecurityGroup
    fullName: Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithNewNetworkSecurityGroup(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup})
    name: WithNewNetworkSecurityGroup
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithNetworkSecurityGroup.WithNewNetworkSecurityGroup
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup
    name: INetworkSecurityGroup
    fullName: Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithNetworkSecurityGroup.WithExistingNetworkSecurityGroup(Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithNetworkSecurityGroup
  isExternal: false
  name: WithExistingNetworkSecurityGroup(INetworkSecurityGroup)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithNetworkSecurityGroup.WithExistingNetworkSecurityGroup(Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithNetworkSecurityGroup.WithExistingNetworkSecurityGroup(Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup)
    name: WithExistingNetworkSecurityGroup
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithNetworkSecurityGroup.WithExistingNetworkSecurityGroup
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup
    name: INetworkSecurityGroup
    fullName: Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithNetworkSecurityGroup.WithExistingNetworkSecurityGroup(Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup)
    name: WithExistingNetworkSecurityGroup
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithNetworkSecurityGroup.WithExistingNetworkSecurityGroup
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup
    name: INetworkSecurityGroup
    fullName: Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithNetworkSecurityGroup.WithNewNetworkSecurityGroup(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup})
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithNetworkSecurityGroup
  isExternal: true
  name: WithNewNetworkSecurityGroup(ICreatable<INetworkSecurityGroup>)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithNetworkSecurityGroup.WithNewNetworkSecurityGroup(ICreatable<Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup>)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithNetworkSecurityGroup.WithNewNetworkSecurityGroup(ICreatable(Of Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup))
  name.vb: WithNewNetworkSecurityGroup(ICreatable(Of INetworkSecurityGroup))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithNetworkSecurityGroup.WithNewNetworkSecurityGroup(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup})
    name: WithNewNetworkSecurityGroup
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithNetworkSecurityGroup.WithNewNetworkSecurityGroup
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup
    name: INetworkSecurityGroup
    fullName: Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithNetworkSecurityGroup.WithNewNetworkSecurityGroup(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup})
    name: WithNewNetworkSecurityGroup
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithNetworkSecurityGroup.WithNewNetworkSecurityGroup
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup
    name: INetworkSecurityGroup
    fullName: Microsoft.Azure.Management.Fluent.Network.INetworkSecurityGroup
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress
  isExternal: true
  name: WithNewPrimaryPublicIpAddress(ICreatable<IPublicIpAddress>)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(ICreatable<Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress>)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(ICreatable(Of Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress))
  name.vb: WithNewPrimaryPublicIpAddress(ICreatable(Of IPublicIpAddress))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
    name: WithNewPrimaryPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
    name: WithNewPrimaryPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress
  isExternal: false
  name: WithNewPrimaryPublicIpAddress()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress
    name: WithNewPrimaryPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress
    name: WithNewPrimaryPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress
  isExternal: true
  name: WithNewPrimaryPublicIpAddress(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(System.String)
    name: WithNewPrimaryPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(System.String)
    name: WithNewPrimaryPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithoutPrimaryPublicIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress
  isExternal: false
  name: WithoutPrimaryPublicIpAddress()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithoutPrimaryPublicIpAddress()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithoutPrimaryPublicIpAddress
    name: WithoutPrimaryPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithoutPrimaryPublicIpAddress
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithoutPrimaryPublicIpAddress
    name: WithoutPrimaryPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithoutPrimaryPublicIpAddress
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithExistingPrimaryPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress
  isExternal: false
  name: WithExistingPrimaryPublicIpAddress(IPublicIpAddress)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithExistingPrimaryPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithExistingPrimaryPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
    name: WithExistingPrimaryPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithExistingPrimaryPublicIpAddress
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithExistingPrimaryPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
    name: WithExistingPrimaryPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPublicIpAddress.WithExistingPrimaryPublicIpAddress
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress
  isExternal: true
  name: WithNewPrimaryPublicIpAddress(ICreatable<IPublicIpAddress>)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(ICreatable<Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress>)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(ICreatable(Of Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress))
  name.vb: WithNewPrimaryPublicIpAddress(ICreatable(Of IPublicIpAddress))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
    name: WithNewPrimaryPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
    name: WithNewPrimaryPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress
  isExternal: false
  name: WithNewPrimaryPublicIpAddress()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress
    name: WithNewPrimaryPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress
    name: WithNewPrimaryPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress
  isExternal: true
  name: WithNewPrimaryPublicIpAddress(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(System.String)
    name: WithNewPrimaryPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress(System.String)
    name: WithNewPrimaryPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress.WithNewPrimaryPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress.WithExistingPrimaryPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress
  isExternal: false
  name: WithExistingPrimaryPublicIpAddress(IPublicIpAddress)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress.WithExistingPrimaryPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress.WithExistingPrimaryPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
    name: WithExistingPrimaryPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress.WithExistingPrimaryPublicIpAddress
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress.WithExistingPrimaryPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
    name: WithExistingPrimaryPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPublicIpAddress.WithExistingPrimaryPublicIpAddress
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressDynamic
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPrivateIp
  isExternal: false
  name: WithPrimaryPrivateIpAddressDynamic()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressDynamic()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressDynamic
    name: WithPrimaryPrivateIpAddressDynamic
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressDynamic
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressDynamic
    name: WithPrimaryPrivateIpAddressDynamic
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressDynamic
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressStatic(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPrivateIp
  isExternal: true
  name: WithPrimaryPrivateIpAddressStatic(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressStatic(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressStatic(System.String)
    name: WithPrimaryPrivateIpAddressStatic
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressStatic
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressStatic(System.String)
    name: WithPrimaryPrivateIpAddressStatic
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressStatic
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressDynamic
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPrivateIp
  isExternal: false
  name: WithPrimaryPrivateIpAddressDynamic()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressDynamic()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressDynamic
    name: WithPrimaryPrivateIpAddressDynamic
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressDynamic
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressDynamic
    name: WithPrimaryPrivateIpAddressDynamic
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressDynamic
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressStatic(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPrivateIp
  isExternal: true
  name: WithPrimaryPrivateIpAddressStatic(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressStatic(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressStatic(System.String)
    name: WithPrimaryPrivateIpAddressStatic
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressStatic
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressStatic(System.String)
    name: WithPrimaryPrivateIpAddressStatic
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryPrivateIp.WithPrimaryPrivateIpAddressStatic
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate.WithIpForwarding
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
  isExternal: false
  name: WithIpForwarding()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate.WithIpForwarding()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate.WithIpForwarding
    name: WithIpForwarding
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate.WithIpForwarding
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate.WithIpForwarding
    name: WithIpForwarding
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate.WithIpForwarding
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate.WithDnsServer(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
  isExternal: true
  name: WithDnsServer(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate.WithDnsServer(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate.WithDnsServer(System.String)
    name: WithDnsServer
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate.WithDnsServer
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate.WithDnsServer(System.String)
    name: WithDnsServer
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate.WithDnsServer
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate.WithInternalDnsNameLabel(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
  isExternal: true
  name: WithInternalDnsNameLabel(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate.WithInternalDnsNameLabel(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate.WithInternalDnsNameLabel(System.String)
    name: WithInternalDnsNameLabel
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate.WithInternalDnsNameLabel
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate.WithInternalDnsNameLabel(System.String)
    name: WithInternalDnsNameLabel
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate.WithInternalDnsNameLabel
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.PrimaryPrivateIp
  parent: Microsoft.Azure.Management.Fluent.Network.INetworkInterface
  isExternal: false
  name: PrimaryPrivateIp
  fullName: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.PrimaryPrivateIp
- uid: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.VirtualMachineId
  parent: Microsoft.Azure.Management.Fluent.Network.INetworkInterface
  isExternal: false
  name: VirtualMachineId
  fullName: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.VirtualMachineId
- uid: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.DnsServers
  parent: Microsoft.Azure.Management.Fluent.Network.INetworkInterface
  isExternal: false
  name: DnsServers
  fullName: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.DnsServers
- uid: System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  fullName: System.Collections.Generic.List<System.String>
  fullname.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.List`1
  parent: System.Collections.Generic
  isExternal: true
  name: List<T>
  fullName: System.Collections.Generic.List<T>
  fullname.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.InternalFqdn
  parent: Microsoft.Azure.Management.Fluent.Network.INetworkInterface
  isExternal: false
  name: InternalFqdn
  fullName: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.InternalFqdn
- uid: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.IsIpForwardingEnabled
  parent: Microsoft.Azure.Management.Fluent.Network.INetworkInterface
  isExternal: false
  name: IsIpForwardingEnabled
  fullName: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.IsIpForwardingEnabled
- uid: System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.MacAddress
  parent: Microsoft.Azure.Management.Fluent.Network.INetworkInterface
  isExternal: false
  name: MacAddress
  fullName: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.MacAddress
- uid: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.IpConfigurations
  parent: Microsoft.Azure.Management.Fluent.Network.INetworkInterface
  isExternal: false
  name: IpConfigurations()
  fullName: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.IpConfigurations()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.IpConfigurations
    name: IpConfigurations
    fullName: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.IpConfigurations
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.IpConfigurations
    name: IpConfigurations
    fullName: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.IpConfigurations
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.AppliedDnsServers
  parent: Microsoft.Azure.Management.Fluent.Network.INetworkInterface
  isExternal: false
  name: AppliedDnsServers
  fullName: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.AppliedDnsServers
- uid: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.PrimaryIpConfiguration
  parent: Microsoft.Azure.Management.Fluent.Network.INetworkInterface
  isExternal: false
  name: PrimaryIpConfiguration()
  fullName: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.PrimaryIpConfiguration()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.PrimaryIpConfiguration
    name: PrimaryIpConfiguration
    fullName: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.PrimaryIpConfiguration
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.PrimaryIpConfiguration
    name: PrimaryIpConfiguration
    fullName: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.PrimaryIpConfiguration
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: INicIpConfiguration
  fullName: Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration
- uid: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.GetNetworkSecurityGroup
  parent: Microsoft.Azure.Management.Fluent.Network.INetworkInterface
  isExternal: false
  name: GetNetworkSecurityGroup()
  fullName: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.GetNetworkSecurityGroup()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.GetNetworkSecurityGroup
    name: GetNetworkSecurityGroup
    fullName: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.GetNetworkSecurityGroup
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.GetNetworkSecurityGroup
    name: GetNetworkSecurityGroup
    fullName: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.GetNetworkSecurityGroup
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.InternalDomainNameSuffix
  parent: Microsoft.Azure.Management.Fluent.Network.INetworkInterface
  isExternal: false
  name: InternalDomainNameSuffix
  fullName: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.InternalDomainNameSuffix
- uid: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.PrimaryPrivateIpAllocationMethod
  parent: Microsoft.Azure.Management.Fluent.Network.INetworkInterface
  isExternal: false
  name: PrimaryPrivateIpAllocationMethod
  fullName: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.PrimaryPrivateIpAllocationMethod
- uid: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.InternalDnsNameLabel
  parent: Microsoft.Azure.Management.Fluent.Network.INetworkInterface
  isExternal: false
  name: InternalDnsNameLabel
  fullName: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.InternalDnsNameLabel
- uid: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.NetworkSecurityGroupId
  parent: Microsoft.Azure.Management.Fluent.Network.INetworkInterface
  isExternal: false
  name: NetworkSecurityGroupId
  fullName: Microsoft.Azure.Management.Fluent.Network.INetworkInterface.NetworkSecurityGroupId
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer
  isExternal: true
  name: WithExistingLoadBalancerInboundNatRule(ILoadBalancer, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
    name: WithExistingLoadBalancerInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    name: ILoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
    name: WithExistingLoadBalancerInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    name: ILoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer
  isExternal: true
  name: WithExistingLoadBalancerBackend(ILoadBalancer, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
    name: WithExistingLoadBalancerBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithExistingLoadBalancerBackend
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    name: ILoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
    name: WithExistingLoadBalancerBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithExistingLoadBalancerBackend
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    name: ILoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithoutLoadBalancerBackends
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer
  isExternal: false
  name: WithoutLoadBalancerBackends()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithoutLoadBalancerBackends()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithoutLoadBalancerBackends
    name: WithoutLoadBalancerBackends
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithoutLoadBalancerBackends
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithoutLoadBalancerBackends
    name: WithoutLoadBalancerBackends
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithoutLoadBalancerBackends
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithoutLoadBalancerInboundNatRules
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer
  isExternal: false
  name: WithoutLoadBalancerInboundNatRules()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithoutLoadBalancerInboundNatRules()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithoutLoadBalancerInboundNatRules
    name: WithoutLoadBalancerInboundNatRules
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithoutLoadBalancerInboundNatRules
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithoutLoadBalancerInboundNatRules
    name: WithoutLoadBalancerInboundNatRules
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithLoadBalancer.WithoutLoadBalancerInboundNatRules
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithLoadBalancer
  isExternal: true
  name: WithExistingLoadBalancerInboundNatRule(ILoadBalancer, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
    name: WithExistingLoadBalancerInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    name: ILoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
    name: WithExistingLoadBalancerInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    name: ILoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithLoadBalancer.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithLoadBalancer
  isExternal: true
  name: WithExistingLoadBalancerBackend(ILoadBalancer, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithLoadBalancer.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithLoadBalancer.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
    name: WithExistingLoadBalancerBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithLoadBalancer.WithExistingLoadBalancerBackend
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    name: ILoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithLoadBalancer.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
    name: WithExistingLoadBalancerBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithLoadBalancer.WithExistingLoadBalancerBackend
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    name: ILoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithSecondaryIpConfiguration.DefineSecondaryIpConfiguration(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithSecondaryIpConfiguration
  isExternal: true
  name: DefineSecondaryIpConfiguration(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithSecondaryIpConfiguration.DefineSecondaryIpConfiguration(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithSecondaryIpConfiguration.DefineSecondaryIpConfiguration(System.String)
    name: DefineSecondaryIpConfiguration
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithSecondaryIpConfiguration.DefineSecondaryIpConfiguration
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithSecondaryIpConfiguration.DefineSecondaryIpConfiguration(System.String)
    name: DefineSecondaryIpConfiguration
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithSecondaryIpConfiguration.DefineSecondaryIpConfiguration
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IBlank{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IBlank`1
  name: IBlank<IWithCreate>
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IBlank<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IBlank(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate)
  name.vb: IBlank(Of IWithCreate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IBlank
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
    name: IWithCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
    name: IWithCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IBlank`1
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition
  isExternal: false
  name: IBlank<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IBlank<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IBlank(Of ParentT)
  name.vb: IBlank(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IBlank
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork.WithExistingPrimaryNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork
  isExternal: false
  name: WithExistingPrimaryNetwork(INetwork)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork.WithExistingPrimaryNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork.WithExistingPrimaryNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
    name: WithExistingPrimaryNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork.WithExistingPrimaryNetwork
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork.WithExistingPrimaryNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
    name: WithExistingPrimaryNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork.WithExistingPrimaryNetwork
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork.WithNewPrimaryNetwork(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork})
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork
  isExternal: true
  name: WithNewPrimaryNetwork(ICreatable<INetwork>)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork.WithNewPrimaryNetwork(ICreatable<Microsoft.Azure.Management.Fluent.Network.INetwork>)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork.WithNewPrimaryNetwork(ICreatable(Of Microsoft.Azure.Management.Fluent.Network.INetwork))
  name.vb: WithNewPrimaryNetwork(ICreatable(Of INetwork))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork.WithNewPrimaryNetwork(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork})
    name: WithNewPrimaryNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork.WithNewPrimaryNetwork
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork.WithNewPrimaryNetwork(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork})
    name: WithNewPrimaryNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork.WithNewPrimaryNetwork
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork.WithNewPrimaryNetwork(System.String,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork
  isExternal: true
  name: WithNewPrimaryNetwork(String, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork.WithNewPrimaryNetwork(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork.WithNewPrimaryNetwork(System.String,System.String)
    name: WithNewPrimaryNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork.WithNewPrimaryNetwork
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork.WithNewPrimaryNetwork(System.String,System.String)
    name: WithNewPrimaryNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork.WithNewPrimaryNetwork
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork.WithNewPrimaryNetwork(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork
  isExternal: true
  name: WithNewPrimaryNetwork(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork.WithNewPrimaryNetwork(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork.WithNewPrimaryNetwork(System.String)
    name: WithNewPrimaryNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork.WithNewPrimaryNetwork
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork.WithNewPrimaryNetwork(System.String)
    name: WithNewPrimaryNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetwork.WithNewPrimaryNetwork
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpConfiguration.UpdateIpConfiguration(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpConfiguration
  isExternal: true
  name: UpdateIpConfiguration(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpConfiguration.UpdateIpConfiguration(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpConfiguration.UpdateIpConfiguration(System.String)
    name: UpdateIpConfiguration
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpConfiguration.UpdateIpConfiguration
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpConfiguration.UpdateIpConfiguration(System.String)
    name: UpdateIpConfiguration
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpConfiguration.UpdateIpConfiguration
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update
  isExternal: false
  name: IUpdate
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpConfiguration.DefineSecondaryIpConfiguration(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpConfiguration
  isExternal: true
  name: DefineSecondaryIpConfiguration(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpConfiguration.DefineSecondaryIpConfiguration(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpConfiguration.DefineSecondaryIpConfiguration(System.String)
    name: DefineSecondaryIpConfiguration
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpConfiguration.DefineSecondaryIpConfiguration
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpConfiguration.DefineSecondaryIpConfiguration(System.String)
    name: DefineSecondaryIpConfiguration
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpConfiguration.DefineSecondaryIpConfiguration
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IBlank{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IBlank`1
  name: IBlank<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IBlank<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IBlank(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate)
  name.vb: IBlank(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IBlank
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IBlank`1
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition
  isExternal: false
  name: IBlank<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IBlank<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IBlank(Of ParentT)
  name.vb: IBlank(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IBlank
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryNetworkSubnet.WithSubnet(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryNetworkSubnet
  isExternal: true
  name: WithSubnet(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryNetworkSubnet.WithSubnet(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryNetworkSubnet.WithSubnet(System.String)
    name: WithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryNetworkSubnet.WithSubnet
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryNetworkSubnet.WithSubnet(System.String)
    name: WithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithPrimaryNetworkSubnet.WithSubnet
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetworkSubnet.WithSubnet(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetworkSubnet
  isExternal: true
  name: WithSubnet(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetworkSubnet.WithSubnet(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetworkSubnet.WithSubnet(System.String)
    name: WithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetworkSubnet.WithSubnet
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetworkSubnet.WithSubnet(System.String)
    name: WithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithPrimaryNetworkSubnet.WithSubnet
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpForwarding.WithIpForwarding
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpForwarding
  isExternal: false
  name: WithIpForwarding()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpForwarding.WithIpForwarding()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpForwarding.WithIpForwarding
    name: WithIpForwarding
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpForwarding.WithIpForwarding
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpForwarding.WithIpForwarding
    name: WithIpForwarding
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpForwarding.WithIpForwarding
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpForwarding.WithoutIpForwarding
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpForwarding
  isExternal: false
  name: WithoutIpForwarding()
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpForwarding.WithoutIpForwarding()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpForwarding.WithoutIpForwarding
    name: WithoutIpForwarding
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpForwarding.WithoutIpForwarding
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpForwarding.WithoutIpForwarding
    name: WithoutIpForwarding
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IWithIpForwarding.WithoutIpForwarding
  - name: (
    fullName: (
  - name: )
    fullName: )
