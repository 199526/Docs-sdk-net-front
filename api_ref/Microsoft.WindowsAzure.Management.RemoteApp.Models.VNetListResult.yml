### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetListResult
  commentId: T:Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetListResult
  id: VNetListResult
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models
  children:
  - Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetListResult.#ctor
  - Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetListResult.VNetList
  langs:
  - csharp
  - vb
  name: VNetListResult
  nameWithType: VNetListResult
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetListResult
  type: Class
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/VNetListResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VNetListResult
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/VNetListResult.cs
    startLine: 33
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp.Models
  summary: "\nList of virtual networks.\n"
  example: []
  syntax:
    content: 'public class VNetListResult : AzureOperationResponse'
    content.vb: >-
      Public Class VNetListResult
          Inherits AzureOperationResponse
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetListResult.VNetList
  commentId: P:Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetListResult.VNetList
  id: VNetList
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetListResult
  langs:
  - csharp
  - vb
  name: VNetList
  nameWithType: VNetListResult.VNetList
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetListResult.VNetList
  type: Property
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/VNetListResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VNetList
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/VNetListResult.cs
    startLine: 40
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp.Models
  summary: "\nOptional. Gets the list of virtual networks.\n"
  example: []
  syntax:
    content: public IList<VNet> VNetList { get; set; }
    content.vb: Public Property VNetList As IList(Of VNet)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.WindowsAzure.Management.RemoteApp.Models.VNet}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetListResult.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetListResult.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetListResult
  langs:
  - csharp
  - vb
  name: VNetListResult()
  nameWithType: VNetListResult.VNetListResult()
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNetListResult.VNetListResult()
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/VNetListResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/RemoteApp/RemoteApp/Generated/Models/VNetListResult.cs
    startLine: 49
  assemblies:
  - Microsoft.WindowsAzure.Management.RemoteApp
  namespace: Microsoft.WindowsAzure.Management.RemoteApp.Models
  summary: "\nInitializes a new instance of the VNetListResult class.\n"
  example: []
  syntax:
    content: public VNetListResult()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.RemoteApp.Models
  commentId: N:Microsoft.WindowsAzure.Management.RemoteApp.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.RemoteApp.Models
  nameWithType: Microsoft.WindowsAzure.Management.RemoteApp.Models
  fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IList{Microsoft.WindowsAzure.Management.RemoteApp.Models.VNet}
  commentId: T:System.Collections.Generic.IList{Microsoft.WindowsAzure.Management.RemoteApp.Models.VNet}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<VNet>
  nameWithType: IList<VNet>
  fullName: System.Collections.Generic.IList<Microsoft.WindowsAzure.Management.RemoteApp.Models.VNet>
  nameWithType.vb: IList(Of VNet)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.WindowsAzure.Management.RemoteApp.Models.VNet)
  name.vb: IList(Of VNet)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNet
    name: VNet
    nameWithType: VNet
    fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNet
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNet
    name: VNet
    nameWithType: VNet
    fullName: Microsoft.WindowsAzure.Management.RemoteApp.Models.VNet
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
