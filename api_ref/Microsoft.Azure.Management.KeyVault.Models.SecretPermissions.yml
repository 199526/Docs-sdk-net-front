items:
- uid: Microsoft.Azure.Management.KeyVault.Models.SecretPermissions
  commentId: T:Microsoft.Azure.Management.KeyVault.Models.SecretPermissions
  id: SecretPermissions
  parent: Microsoft.Azure.Management.KeyVault.Models
  children:
  - Microsoft.Azure.Management.KeyVault.Models.SecretPermissions.#ctor(System.String)
  - Microsoft.Azure.Management.KeyVault.Models.SecretPermissions.All
  - Microsoft.Azure.Management.KeyVault.Models.SecretPermissions.Delete
  - Microsoft.Azure.Management.KeyVault.Models.SecretPermissions.Equals(System.Object)
  - Microsoft.Azure.Management.KeyVault.Models.SecretPermissions.Get
  - Microsoft.Azure.Management.KeyVault.Models.SecretPermissions.GetHashCode
  - Microsoft.Azure.Management.KeyVault.Models.SecretPermissions.List
  - Microsoft.Azure.Management.KeyVault.Models.SecretPermissions.Set
  - Microsoft.Azure.Management.KeyVault.Models.SecretPermissions.ToString
  langs:
  - csharp
  - vb
  name: SecretPermissions
  fullName: Microsoft.Azure.Management.KeyVault.Models.SecretPermissions
  type: Class
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/SecretPermissions.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SecretPermissions
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/SecretPermissions.cs
    startLine: 14
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.KeyVault.Models
  summary: "\nDefines values for SecretPermissions.\n"
  example: []
  syntax:
    content: public class SecretPermissions
    content.vb: Public Class SecretPermissions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.KeyVault.Models.SecretPermissions.All
  commentId: F:Microsoft.Azure.Management.KeyVault.Models.SecretPermissions.All
  id: All
  parent: Microsoft.Azure.Management.KeyVault.Models.SecretPermissions
  langs:
  - csharp
  - vb
  name: All
  fullName: Microsoft.Azure.Management.KeyVault.Models.SecretPermissions.All
  type: Field
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/SecretPermissions.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: All
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/SecretPermissions.cs
    startLine: 16
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.KeyVault.Models
  syntax:
    content: public static readonly SecretPermissions All
    content.vb: Public Shared ReadOnly All As SecretPermissions
    return:
      type: Microsoft.Azure.Management.KeyVault.Models.SecretPermissions
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Management.KeyVault.Models.SecretPermissions.Get
  commentId: F:Microsoft.Azure.Management.KeyVault.Models.SecretPermissions.Get
  id: Get
  parent: Microsoft.Azure.Management.KeyVault.Models.SecretPermissions
  langs:
  - csharp
  - vb
  name: Get
  fullName: Microsoft.Azure.Management.KeyVault.Models.SecretPermissions.Get
  type: Field
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/SecretPermissions.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Get
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/SecretPermissions.cs
    startLine: 17
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.KeyVault.Models
  syntax:
    content: public static readonly SecretPermissions Get
    content.vb: Public Shared ReadOnly Get As SecretPermissions
    return:
      type: Microsoft.Azure.Management.KeyVault.Models.SecretPermissions
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Management.KeyVault.Models.SecretPermissions.List
  commentId: F:Microsoft.Azure.Management.KeyVault.Models.SecretPermissions.List
  id: List
  parent: Microsoft.Azure.Management.KeyVault.Models.SecretPermissions
  langs:
  - csharp
  - vb
  name: List
  fullName: Microsoft.Azure.Management.KeyVault.Models.SecretPermissions.List
  type: Field
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/SecretPermissions.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: List
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/SecretPermissions.cs
    startLine: 18
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.KeyVault.Models
  syntax:
    content: public static readonly SecretPermissions List
    content.vb: Public Shared ReadOnly List As SecretPermissions
    return:
      type: Microsoft.Azure.Management.KeyVault.Models.SecretPermissions
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Management.KeyVault.Models.SecretPermissions.Set
  commentId: F:Microsoft.Azure.Management.KeyVault.Models.SecretPermissions.Set
  id: Set
  parent: Microsoft.Azure.Management.KeyVault.Models.SecretPermissions
  langs:
  - csharp
  - vb
  name: Set
  fullName: Microsoft.Azure.Management.KeyVault.Models.SecretPermissions.Set
  type: Field
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/SecretPermissions.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Set
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/SecretPermissions.cs
    startLine: 19
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.KeyVault.Models
  syntax:
    content: public static readonly SecretPermissions Set
    content.vb: Public Shared ReadOnly Set As SecretPermissions
    return:
      type: Microsoft.Azure.Management.KeyVault.Models.SecretPermissions
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Management.KeyVault.Models.SecretPermissions.Delete
  commentId: F:Microsoft.Azure.Management.KeyVault.Models.SecretPermissions.Delete
  id: Delete
  parent: Microsoft.Azure.Management.KeyVault.Models.SecretPermissions
  langs:
  - csharp
  - vb
  name: Delete
  fullName: Microsoft.Azure.Management.KeyVault.Models.SecretPermissions.Delete
  type: Field
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/SecretPermissions.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Delete
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/SecretPermissions.cs
    startLine: 20
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.KeyVault.Models
  syntax:
    content: public static readonly SecretPermissions Delete
    content.vb: Public Shared ReadOnly Delete As SecretPermissions
    return:
      type: Microsoft.Azure.Management.KeyVault.Models.SecretPermissions
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Management.KeyVault.Models.SecretPermissions.#ctor(System.String)
  commentId: M:Microsoft.Azure.Management.KeyVault.Models.SecretPermissions.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Azure.Management.KeyVault.Models.SecretPermissions
  langs:
  - csharp
  - vb
  name: SecretPermissions(String)
  fullName: Microsoft.Azure.Management.KeyVault.Models.SecretPermissions.SecretPermissions(System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/SecretPermissions.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/SecretPermissions.cs
    startLine: 28
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.KeyVault.Models
  summary: "\nCreates a custom value for SecretPermissions.\n"
  example: []
  syntax:
    content: public SecretPermissions(string permission)
    content.vb: Public Sub New(permission As String)
    parameters:
    - id: permission
      type: System.String
      description: the permission value
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.KeyVault.Models.SecretPermissions.ToString
  commentId: M:Microsoft.Azure.Management.KeyVault.Models.SecretPermissions.ToString
  id: ToString
  parent: Microsoft.Azure.Management.KeyVault.Models.SecretPermissions
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: Microsoft.Azure.Management.KeyVault.Models.SecretPermissions.ToString()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/SecretPermissions.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ToString
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/SecretPermissions.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.KeyVault.Models
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  overridden: System.Object.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.Management.KeyVault.Models.SecretPermissions.Equals(System.Object)
  commentId: M:Microsoft.Azure.Management.KeyVault.Models.SecretPermissions.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.Azure.Management.KeyVault.Models.SecretPermissions
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: Microsoft.Azure.Management.KeyVault.Models.SecretPermissions.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/SecretPermissions.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Equals
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/SecretPermissions.cs
    startLine: 38
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.KeyVault.Models
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
  overridden: System.Object.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.Management.KeyVault.Models.SecretPermissions.GetHashCode
  commentId: M:Microsoft.Azure.Management.KeyVault.Models.SecretPermissions.GetHashCode
  id: GetHashCode
  parent: Microsoft.Azure.Management.KeyVault.Models.SecretPermissions
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: Microsoft.Azure.Management.KeyVault.Models.SecretPermissions.GetHashCode()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/SecretPermissions.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetHashCode
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Generated/Models/SecretPermissions.cs
    startLine: 59
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.KeyVault.Models
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  overridden: System.Object.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Azure.Management.KeyVault.Models
  isExternal: false
  name: Microsoft.Azure.Management.KeyVault.Models
  fullName: Microsoft.Azure.Management.KeyVault.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Management.KeyVault.Models.SecretPermissions
  parent: Microsoft.Azure.Management.KeyVault.Models
  isExternal: false
  name: SecretPermissions
  fullName: Microsoft.Azure.Management.KeyVault.Models.SecretPermissions
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
