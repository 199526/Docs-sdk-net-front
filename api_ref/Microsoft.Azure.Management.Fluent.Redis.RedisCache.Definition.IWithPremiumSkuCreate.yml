items:
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithPremiumSkuCreate
  commentId: T:Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithPremiumSkuCreate
  id: IWithPremiumSkuCreate
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition
  children:
  - Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithPremiumSkuCreate.WithPatchSchedule(Microsoft.Azure.Management.Fluent.Redis.Models.DayOfWeek,System.Int32)
  - Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithPremiumSkuCreate.WithPatchSchedule(Microsoft.Azure.Management.Fluent.Redis.Models.DayOfWeek,System.Int32,System.Nullable{System.TimeSpan})
  - Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithPremiumSkuCreate.WithPatchSchedule(Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry)
  - Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithPremiumSkuCreate.WithPatchSchedule(System.Collections.Generic.IList{Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry})
  - Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithPremiumSkuCreate.WithShardCount(System.Int32)
  langs:
  - csharp
  - vb
  name: IWithPremiumSkuCreate
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithPremiumSkuCreate
  type: Interface
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Domain/RedisCache/Definition/IDefinition.cs
      branch: 622625bad63c765bc9dae6a4780b25341c1997f0
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IWithPremiumSkuCreate
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Domain/RedisCache/Definition/IDefinition.cs
    startLine: 133
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition
  summary: "\nA Redis Cache definition with Premium Sku specific functionality.\n"
  example: []
  syntax:
    content: 'public interface IWithPremiumSkuCreate : IWithCreate, ICreatable<IRedisCache>, IDefinitionWithTags<IWithCreate>'
    content.vb: >-
      Public Interface IWithPremiumSkuCreate
          Inherits IWithCreate
  inheritedMembers:
  - Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithCreate.WithNonSslPort
  - Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithCreate.WithRedisConfiguration(System.Collections.Generic.IDictionary{System.String,System.String})
  - Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithCreate.WithRedisConfiguration(System.String,System.String)
  - Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithCreate.WithSubnet(IGroupableResource,System.String)
  - Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithCreate.WithStaticIP(System.String)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithPremiumSkuCreate.WithShardCount(System.Int32)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithPremiumSkuCreate.WithShardCount(System.Int32)
  id: WithShardCount(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithPremiumSkuCreate
  langs:
  - csharp
  - vb
  name: WithShardCount(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithPremiumSkuCreate.WithShardCount(System.Int32)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Domain/RedisCache/Definition/IDefinition.cs
      branch: 622625bad63c765bc9dae6a4780b25341c1997f0
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithShardCount
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Domain/RedisCache/Definition/IDefinition.cs
    startLine: 141
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition
  summary: "\nThe number of shards to be created on a Premium Cluster Cache.\n"
  example: []
  syntax:
    content: IWithPremiumSkuCreate WithShardCount(int shardCount)
    content.vb: Function WithShardCount(shardCount As Integer) As IWithPremiumSkuCreate
    parameters:
    - id: shardCount
      type: System.Int32
      description: shardCount the shard count value to set.
    return:
      type: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithPremiumSkuCreate
      description: the next stage of Redis Cache with Premium SKU definition.
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithPremiumSkuCreate.WithPatchSchedule(Microsoft.Azure.Management.Fluent.Redis.Models.DayOfWeek,System.Int32)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithPremiumSkuCreate.WithPatchSchedule(Microsoft.Azure.Management.Fluent.Redis.Models.DayOfWeek,System.Int32)
  id: WithPatchSchedule(Microsoft.Azure.Management.Fluent.Redis.Models.DayOfWeek,System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithPremiumSkuCreate
  langs:
  - csharp
  - vb
  name: WithPatchSchedule(DayOfWeek, Int32)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithPremiumSkuCreate.WithPatchSchedule(Microsoft.Azure.Management.Fluent.Redis.Models.DayOfWeek, System.Int32)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Domain/RedisCache/Definition/IDefinition.cs
      branch: 622625bad63c765bc9dae6a4780b25341c1997f0
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithPatchSchedule
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Domain/RedisCache/Definition/IDefinition.cs
    startLine: 149
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition
  summary: "\nPatch schedule on a Premium Cluster Cache.\n"
  example: []
  syntax:
    content: IWithPremiumSkuCreate WithPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc)
    content.vb: Function WithPatchSchedule(dayOfWeek As DayOfWeek, startHourUtc As Integer) As IWithPremiumSkuCreate
    parameters:
    - id: dayOfWeek
      type: Microsoft.Azure.Management.Fluent.Redis.Models.DayOfWeek
      description: dayOfWeek day of week when cache can be patched.
    - id: startHourUtc
      type: System.Int32
      description: startHourUtc start hour after which cache patching can start.
    return:
      type: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithPremiumSkuCreate
      description: the next stage of Redis Cache with Premium SKU definition.
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithPremiumSkuCreate.WithPatchSchedule(Microsoft.Azure.Management.Fluent.Redis.Models.DayOfWeek,System.Int32,System.Nullable{System.TimeSpan})
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithPremiumSkuCreate.WithPatchSchedule(Microsoft.Azure.Management.Fluent.Redis.Models.DayOfWeek,System.Int32,System.Nullable{System.TimeSpan})
  id: WithPatchSchedule(Microsoft.Azure.Management.Fluent.Redis.Models.DayOfWeek,System.Int32,System.Nullable{System.TimeSpan})
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithPremiumSkuCreate
  langs:
  - csharp
  - vb
  name: WithPatchSchedule(DayOfWeek, Int32, Nullable<TimeSpan>)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithPremiumSkuCreate.WithPatchSchedule(Microsoft.Azure.Management.Fluent.Redis.Models.DayOfWeek, System.Int32, System.Nullable<System.TimeSpan>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Domain/RedisCache/Definition/IDefinition.cs
      branch: 622625bad63c765bc9dae6a4780b25341c1997f0
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithPatchSchedule
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Domain/RedisCache/Definition/IDefinition.cs
    startLine: 158
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition
  summary: "\nPatch schedule on a Premium Cluster Cache.\n"
  example: []
  syntax:
    content: IWithPremiumSkuCreate WithPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc, TimeSpan? maintenanceWindow)
    content.vb: Function WithPatchSchedule(dayOfWeek As DayOfWeek, startHourUtc As Integer, maintenanceWindow As TimeSpan?) As IWithPremiumSkuCreate
    parameters:
    - id: dayOfWeek
      type: Microsoft.Azure.Management.Fluent.Redis.Models.DayOfWeek
      description: dayOfWeek day of week when cache can be patched.
    - id: startHourUtc
      type: System.Int32
      description: startHourUtc start hour after which cache patching can start.
    - id: maintenanceWindow
      type: System.Nullable{System.TimeSpan}
      description: maintenanceWindow ISO8601 timespan specifying how much time cache patching can take.
    return:
      type: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithPremiumSkuCreate
      description: the next stage of Redis Cache with Premium SKU definition.
  fullName.vb: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithPremiumSkuCreate.WithPatchSchedule(Microsoft.Azure.Management.Fluent.Redis.Models.DayOfWeek, System.Int32, System.Nullable(Of System.TimeSpan))
  name.vb: WithPatchSchedule(DayOfWeek, Int32, Nullable(Of TimeSpan))
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithPremiumSkuCreate.WithPatchSchedule(Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithPremiumSkuCreate.WithPatchSchedule(Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry)
  id: WithPatchSchedule(Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry)
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithPremiumSkuCreate
  langs:
  - csharp
  - vb
  name: WithPatchSchedule(ScheduleEntry)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithPremiumSkuCreate.WithPatchSchedule(Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Domain/RedisCache/Definition/IDefinition.cs
      branch: 622625bad63c765bc9dae6a4780b25341c1997f0
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithPatchSchedule
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Domain/RedisCache/Definition/IDefinition.cs
    startLine: 165
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition
  summary: "\nPatch schedule on a Premium Cluster Cache.\n"
  example: []
  syntax:
    content: IWithPremiumSkuCreate WithPatchSchedule(ScheduleEntry scheduleEntry)
    content.vb: Function WithPatchSchedule(scheduleEntry As ScheduleEntry) As IWithPremiumSkuCreate
    parameters:
    - id: scheduleEntry
      type: Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry
      description: scheduleEntry Patch schedule entry for Premium Redis Cache.
    return:
      type: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithPremiumSkuCreate
      description: the next stage of Redis Cache with Premium SKU definition.
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithPremiumSkuCreate.WithPatchSchedule(System.Collections.Generic.IList{Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry})
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithPremiumSkuCreate.WithPatchSchedule(System.Collections.Generic.IList{Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry})
  id: WithPatchSchedule(System.Collections.Generic.IList{Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry})
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithPremiumSkuCreate
  langs:
  - csharp
  - vb
  name: WithPatchSchedule(IList<ScheduleEntry>)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithPremiumSkuCreate.WithPatchSchedule(System.Collections.Generic.IList<Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Domain/RedisCache/Definition/IDefinition.cs
      branch: 622625bad63c765bc9dae6a4780b25341c1997f0
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithPatchSchedule
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Domain/RedisCache/Definition/IDefinition.cs
    startLine: 172
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition
  summary: "\nPatch schedule on a Premium Cluster Cache.\n"
  example: []
  syntax:
    content: IWithPremiumSkuCreate WithPatchSchedule(IList<ScheduleEntry> scheduleEntry)
    content.vb: Function WithPatchSchedule(scheduleEntry As IList(Of ScheduleEntry)) As IWithPremiumSkuCreate
    parameters:
    - id: scheduleEntry
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry}
      description: scheduleEntry List of patch schedule entries for Premium Redis Cache.
    return:
      type: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithPremiumSkuCreate
      description: the next stage of Redis Cache with Premium SKU definition.
  fullName.vb: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithPremiumSkuCreate.WithPatchSchedule(System.Collections.Generic.IList(Of Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry))
  name.vb: WithPatchSchedule(IList(Of ScheduleEntry))
references:
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithCreate.WithNonSslPort
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithCreate
  isExternal: false
  name: WithNonSslPort()
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithCreate.WithNonSslPort()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithCreate.WithNonSslPort
    name: WithNonSslPort
    fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithCreate.WithNonSslPort
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithCreate.WithNonSslPort
    name: WithNonSslPort
    fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithCreate.WithNonSslPort
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithCreate.WithRedisConfiguration(System.Collections.Generic.IDictionary{System.String,System.String})
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithCreate
  isExternal: true
  name: WithRedisConfiguration(IDictionary<String, String>)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithCreate.WithRedisConfiguration(System.Collections.Generic.IDictionary<System.String, System.String>)
  fullname.vb: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithCreate.WithRedisConfiguration(System.Collections.Generic.IDictionary(Of System.String, System.String))
  name.vb: WithRedisConfiguration(IDictionary(Of String, String))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithCreate.WithRedisConfiguration(System.Collections.Generic.IDictionary{System.String,System.String})
    name: WithRedisConfiguration
    fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithCreate.WithRedisConfiguration
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithCreate.WithRedisConfiguration(System.Collections.Generic.IDictionary{System.String,System.String})
    name: WithRedisConfiguration
    fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithCreate.WithRedisConfiguration
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithCreate.WithRedisConfiguration(System.String,System.String)
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithCreate
  isExternal: true
  name: WithRedisConfiguration(String, String)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithCreate.WithRedisConfiguration(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithCreate.WithRedisConfiguration(System.String,System.String)
    name: WithRedisConfiguration
    fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithCreate.WithRedisConfiguration
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithCreate.WithRedisConfiguration(System.String,System.String)
    name: WithRedisConfiguration
    fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithCreate.WithRedisConfiguration
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithCreate.WithSubnet(IGroupableResource,System.String)
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithCreate
  isExternal: true
  name: WithSubnet(IGroupableResource, String)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithCreate.WithSubnet(IGroupableResource, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithCreate.WithSubnet(IGroupableResource,System.String)
    name: WithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithCreate.WithSubnet
  - name: (
    fullName: (
  - uid: IGroupableResource
    name: IGroupableResource
    fullName: IGroupableResource
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithCreate.WithSubnet(IGroupableResource,System.String)
    name: WithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithCreate.WithSubnet
  - name: (
    fullName: (
  - uid: IGroupableResource
    name: IGroupableResource
    fullName: IGroupableResource
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithCreate.WithStaticIP(System.String)
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithCreate
  isExternal: true
  name: WithStaticIP(String)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithCreate.WithStaticIP(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithCreate.WithStaticIP(System.String)
    name: WithStaticIP
    fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithCreate.WithStaticIP
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithCreate.WithStaticIP(System.String)
    name: WithStaticIP
    fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithCreate.WithStaticIP
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithCreate
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition
  isExternal: false
  name: IWithCreate
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithCreate
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithPremiumSkuCreate
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition
  isExternal: false
  name: IWithPremiumSkuCreate
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisCache.Definition.IWithPremiumSkuCreate
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Management.Fluent.Redis.Models.DayOfWeek
  parent: Microsoft.Azure.Management.Fluent.Redis.Models
  isExternal: false
  name: DayOfWeek
  fullName: Microsoft.Azure.Management.Fluent.Redis.Models.DayOfWeek
- uid: Microsoft.Azure.Management.Fluent.Redis.Models
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Redis.Models
  fullName: Microsoft.Azure.Management.Fluent.Redis.Models
- uid: System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  fullname.vb: System.Nullable(Of System.TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry
  parent: Microsoft.Azure.Management.Fluent.Redis.Models
  isExternal: false
  name: ScheduleEntry
  fullName: Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ScheduleEntry>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry>
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry)
  name.vb: IList(Of ScheduleEntry)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry
    name: ScheduleEntry
    fullName: Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry
    name: ScheduleEntry
    fullName: Microsoft.Azure.Management.Fluent.Redis.Models.ScheduleEntry
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: true
  name: IList<T>
  fullName: System.Collections.Generic.IList<T>
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
