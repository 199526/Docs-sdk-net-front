items:
- uid: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions
  commentId: T:Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions
  id: IWithPermissions
  parent: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update
  children:
  - Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.AllowKeyAllPermissions
  - Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.AllowKeyPermissions(Microsoft.Azure.Management.KeyVault.Models.KeyPermissions[])
  - Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.AllowKeyPermissions(System.Collections.Generic.IList{Microsoft.Azure.Management.KeyVault.Models.KeyPermissions})
  - Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.AllowSecretAllPermissions
  - Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.AllowSecretPermissions(Microsoft.Azure.Management.KeyVault.Models.SecretPermissions[])
  - Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.AllowSecretPermissions(System.Collections.Generic.IList{Microsoft.Azure.Management.KeyVault.Models.SecretPermissions})
  - Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.DisallowKeyAllPermissions
  - Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.DisallowKeyPermissions(Microsoft.Azure.Management.KeyVault.Models.KeyPermissions[])
  - Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.DisallowKeyPermissions(System.Collections.Generic.IList{Microsoft.Azure.Management.KeyVault.Models.KeyPermissions})
  - Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.DisallowSecretAllPermissions
  - Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.DisallowSecretPermissions(Microsoft.Azure.Management.KeyVault.Models.SecretPermissions[])
  - Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.DisallowSecretPermissions(System.Collections.Generic.IList{Microsoft.Azure.Management.KeyVault.Models.SecretPermissions})
  langs:
  - csharp
  - vb
  name: IWithPermissions
  fullName: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions
  type: Interface
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Domain/AccessPolicy/Update/IUpdate.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IWithPermissions
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Domain/AccessPolicy/Update/IUpdate.cs
    startLine: 12
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update
  summary: "\nThe access policy update stage allowing permissions to be added or removed.\n"
  example: []
  syntax:
    content: public interface IWithPermissions
    content.vb: Public Interface IWithPermissions
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.AllowKeyAllPermissions
  commentId: M:Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.AllowKeyAllPermissions
  id: AllowKeyAllPermissions
  parent: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions
  langs:
  - csharp
  - vb
  name: AllowKeyAllPermissions()
  fullName: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.AllowKeyAllPermissions()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Domain/AccessPolicy/Update/IUpdate.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AllowKeyAllPermissions
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Domain/AccessPolicy/Update/IUpdate.cs
    startLine: 18
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update
  summary: "\nAllow all permissions for the AD identity to access keys.\n"
  example: []
  syntax:
    content: IUpdate AllowKeyAllPermissions()
    content.vb: Function AllowKeyAllPermissions As IUpdate
    return:
      type: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IUpdate
      description: the next stage of access policy update
- uid: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.AllowKeyPermissions(Microsoft.Azure.Management.KeyVault.Models.KeyPermissions[])
  commentId: M:Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.AllowKeyPermissions(Microsoft.Azure.Management.KeyVault.Models.KeyPermissions[])
  id: AllowKeyPermissions(Microsoft.Azure.Management.KeyVault.Models.KeyPermissions[])
  parent: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions
  langs:
  - csharp
  - vb
  name: AllowKeyPermissions(KeyPermissions[])
  fullName: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.AllowKeyPermissions(Microsoft.Azure.Management.KeyVault.Models.KeyPermissions[])
  type: Method
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Domain/AccessPolicy/Update/IUpdate.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AllowKeyPermissions
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Domain/AccessPolicy/Update/IUpdate.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update
  summary: "\nAllow a list of permissions for the AD identity to access keys.\n"
  example: []
  syntax:
    content: IUpdate AllowKeyPermissions(params KeyPermissions[] permissions)
    content.vb: Function AllowKeyPermissions(ParamArray permissions As KeyPermissions()) As IUpdate
    parameters:
    - id: permissions
      type: Microsoft.Azure.Management.KeyVault.Models.KeyPermissions[]
      description: permissions the list of permissions allowed
    return:
      type: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IUpdate
      description: the next stage of access policy update
  fullName.vb: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.AllowKeyPermissions(Microsoft.Azure.Management.KeyVault.Models.KeyPermissions())
  name.vb: AllowKeyPermissions(KeyPermissions())
- uid: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.AllowKeyPermissions(System.Collections.Generic.IList{Microsoft.Azure.Management.KeyVault.Models.KeyPermissions})
  commentId: M:Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.AllowKeyPermissions(System.Collections.Generic.IList{Microsoft.Azure.Management.KeyVault.Models.KeyPermissions})
  id: AllowKeyPermissions(System.Collections.Generic.IList{Microsoft.Azure.Management.KeyVault.Models.KeyPermissions})
  parent: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions
  langs:
  - csharp
  - vb
  name: AllowKeyPermissions(IList<KeyPermissions>)
  fullName: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.AllowKeyPermissions(System.Collections.Generic.IList<Microsoft.Azure.Management.KeyVault.Models.KeyPermissions>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Domain/AccessPolicy/Update/IUpdate.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AllowKeyPermissions
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Domain/AccessPolicy/Update/IUpdate.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update
  summary: "\nAllow a list of permissions for the AD identity to access keys.\n"
  example: []
  syntax:
    content: IUpdate AllowKeyPermissions(IList<KeyPermissions> permissions)
    content.vb: Function AllowKeyPermissions(permissions As IList(Of KeyPermissions)) As IUpdate
    parameters:
    - id: permissions
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.KeyVault.Models.KeyPermissions}
      description: permissions the list of permissions allowed
    return:
      type: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IUpdate
      description: the next stage of access policy update
  fullName.vb: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.AllowKeyPermissions(System.Collections.Generic.IList(Of Microsoft.Azure.Management.KeyVault.Models.KeyPermissions))
  name.vb: AllowKeyPermissions(IList(Of KeyPermissions))
- uid: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.DisallowKeyAllPermissions
  commentId: M:Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.DisallowKeyAllPermissions
  id: DisallowKeyAllPermissions
  parent: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions
  langs:
  - csharp
  - vb
  name: DisallowKeyAllPermissions()
  fullName: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.DisallowKeyAllPermissions()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Domain/AccessPolicy/Update/IUpdate.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DisallowKeyAllPermissions
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Domain/AccessPolicy/Update/IUpdate.cs
    startLine: 38
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update
  summary: "\nRevoke all permissions for the AD identity to access keys.\n"
  example: []
  syntax:
    content: IUpdate DisallowKeyAllPermissions()
    content.vb: Function DisallowKeyAllPermissions As IUpdate
    return:
      type: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IUpdate
      description: the next stage of access policy update
- uid: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.DisallowKeyPermissions(Microsoft.Azure.Management.KeyVault.Models.KeyPermissions[])
  commentId: M:Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.DisallowKeyPermissions(Microsoft.Azure.Management.KeyVault.Models.KeyPermissions[])
  id: DisallowKeyPermissions(Microsoft.Azure.Management.KeyVault.Models.KeyPermissions[])
  parent: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions
  langs:
  - csharp
  - vb
  name: DisallowKeyPermissions(KeyPermissions[])
  fullName: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.DisallowKeyPermissions(Microsoft.Azure.Management.KeyVault.Models.KeyPermissions[])
  type: Method
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Domain/AccessPolicy/Update/IUpdate.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DisallowKeyPermissions
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Domain/AccessPolicy/Update/IUpdate.cs
    startLine: 45
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update
  summary: "\nRevoke a list of permissions for the AD identity to access keys.\n"
  example: []
  syntax:
    content: IUpdate DisallowKeyPermissions(params KeyPermissions[] permissions)
    content.vb: Function DisallowKeyPermissions(ParamArray permissions As KeyPermissions()) As IUpdate
    parameters:
    - id: permissions
      type: Microsoft.Azure.Management.KeyVault.Models.KeyPermissions[]
      description: permissions the list of permissions to revoke
    return:
      type: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IUpdate
      description: the next stage of access policy update
  fullName.vb: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.DisallowKeyPermissions(Microsoft.Azure.Management.KeyVault.Models.KeyPermissions())
  name.vb: DisallowKeyPermissions(KeyPermissions())
- uid: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.DisallowKeyPermissions(System.Collections.Generic.IList{Microsoft.Azure.Management.KeyVault.Models.KeyPermissions})
  commentId: M:Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.DisallowKeyPermissions(System.Collections.Generic.IList{Microsoft.Azure.Management.KeyVault.Models.KeyPermissions})
  id: DisallowKeyPermissions(System.Collections.Generic.IList{Microsoft.Azure.Management.KeyVault.Models.KeyPermissions})
  parent: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions
  langs:
  - csharp
  - vb
  name: DisallowKeyPermissions(IList<KeyPermissions>)
  fullName: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.DisallowKeyPermissions(System.Collections.Generic.IList<Microsoft.Azure.Management.KeyVault.Models.KeyPermissions>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Domain/AccessPolicy/Update/IUpdate.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DisallowKeyPermissions
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Domain/AccessPolicy/Update/IUpdate.cs
    startLine: 52
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update
  summary: "\nRevoke a list of permissions for the AD identity to access keys.\n"
  example: []
  syntax:
    content: IUpdate DisallowKeyPermissions(IList<KeyPermissions> permissions)
    content.vb: Function DisallowKeyPermissions(permissions As IList(Of KeyPermissions)) As IUpdate
    parameters:
    - id: permissions
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.KeyVault.Models.KeyPermissions}
      description: permissions the list of permissions to revoke
    return:
      type: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IUpdate
      description: the next stage of access policy update
  fullName.vb: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.DisallowKeyPermissions(System.Collections.Generic.IList(Of Microsoft.Azure.Management.KeyVault.Models.KeyPermissions))
  name.vb: DisallowKeyPermissions(IList(Of KeyPermissions))
- uid: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.AllowSecretAllPermissions
  commentId: M:Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.AllowSecretAllPermissions
  id: AllowSecretAllPermissions
  parent: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions
  langs:
  - csharp
  - vb
  name: AllowSecretAllPermissions()
  fullName: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.AllowSecretAllPermissions()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Domain/AccessPolicy/Update/IUpdate.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AllowSecretAllPermissions
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Domain/AccessPolicy/Update/IUpdate.cs
    startLine: 58
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update
  summary: "\nAllow all permissions for the AD identity to access secrets.\n"
  example: []
  syntax:
    content: IUpdate AllowSecretAllPermissions()
    content.vb: Function AllowSecretAllPermissions As IUpdate
    return:
      type: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IUpdate
      description: the next stage of access policy definition
- uid: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.AllowSecretPermissions(Microsoft.Azure.Management.KeyVault.Models.SecretPermissions[])
  commentId: M:Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.AllowSecretPermissions(Microsoft.Azure.Management.KeyVault.Models.SecretPermissions[])
  id: AllowSecretPermissions(Microsoft.Azure.Management.KeyVault.Models.SecretPermissions[])
  parent: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions
  langs:
  - csharp
  - vb
  name: AllowSecretPermissions(SecretPermissions[])
  fullName: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.AllowSecretPermissions(Microsoft.Azure.Management.KeyVault.Models.SecretPermissions[])
  type: Method
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Domain/AccessPolicy/Update/IUpdate.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AllowSecretPermissions
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Domain/AccessPolicy/Update/IUpdate.cs
    startLine: 65
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update
  summary: "\nAllow a list of permissions for the AD identity to access secrets.\n"
  example: []
  syntax:
    content: IUpdate AllowSecretPermissions(params SecretPermissions[] permissions)
    content.vb: Function AllowSecretPermissions(ParamArray permissions As SecretPermissions()) As IUpdate
    parameters:
    - id: permissions
      type: Microsoft.Azure.Management.KeyVault.Models.SecretPermissions[]
      description: permissions the list of permissions allowed
    return:
      type: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IUpdate
      description: the next stage of access policy definition
  fullName.vb: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.AllowSecretPermissions(Microsoft.Azure.Management.KeyVault.Models.SecretPermissions())
  name.vb: AllowSecretPermissions(SecretPermissions())
- uid: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.AllowSecretPermissions(System.Collections.Generic.IList{Microsoft.Azure.Management.KeyVault.Models.SecretPermissions})
  commentId: M:Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.AllowSecretPermissions(System.Collections.Generic.IList{Microsoft.Azure.Management.KeyVault.Models.SecretPermissions})
  id: AllowSecretPermissions(System.Collections.Generic.IList{Microsoft.Azure.Management.KeyVault.Models.SecretPermissions})
  parent: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions
  langs:
  - csharp
  - vb
  name: AllowSecretPermissions(IList<SecretPermissions>)
  fullName: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.AllowSecretPermissions(System.Collections.Generic.IList<Microsoft.Azure.Management.KeyVault.Models.SecretPermissions>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Domain/AccessPolicy/Update/IUpdate.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AllowSecretPermissions
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Domain/AccessPolicy/Update/IUpdate.cs
    startLine: 72
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update
  summary: "\nAllow a list of permissions for the AD identity to access secrets.\n"
  example: []
  syntax:
    content: IUpdate AllowSecretPermissions(IList<SecretPermissions> permissions)
    content.vb: Function AllowSecretPermissions(permissions As IList(Of SecretPermissions)) As IUpdate
    parameters:
    - id: permissions
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.KeyVault.Models.SecretPermissions}
      description: permissions the list of permissions allowed
    return:
      type: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IUpdate
      description: the next stage of access policy definition
  fullName.vb: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.AllowSecretPermissions(System.Collections.Generic.IList(Of Microsoft.Azure.Management.KeyVault.Models.SecretPermissions))
  name.vb: AllowSecretPermissions(IList(Of SecretPermissions))
- uid: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.DisallowSecretAllPermissions
  commentId: M:Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.DisallowSecretAllPermissions
  id: DisallowSecretAllPermissions
  parent: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions
  langs:
  - csharp
  - vb
  name: DisallowSecretAllPermissions()
  fullName: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.DisallowSecretAllPermissions()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Domain/AccessPolicy/Update/IUpdate.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DisallowSecretAllPermissions
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Domain/AccessPolicy/Update/IUpdate.cs
    startLine: 78
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update
  summary: "\nRevoke all permissions for the AD identity to access secrets.\n"
  example: []
  syntax:
    content: IUpdate DisallowSecretAllPermissions()
    content.vb: Function DisallowSecretAllPermissions As IUpdate
    return:
      type: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IUpdate
      description: the next stage of access policy update
- uid: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.DisallowSecretPermissions(Microsoft.Azure.Management.KeyVault.Models.SecretPermissions[])
  commentId: M:Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.DisallowSecretPermissions(Microsoft.Azure.Management.KeyVault.Models.SecretPermissions[])
  id: DisallowSecretPermissions(Microsoft.Azure.Management.KeyVault.Models.SecretPermissions[])
  parent: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions
  langs:
  - csharp
  - vb
  name: DisallowSecretPermissions(SecretPermissions[])
  fullName: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.DisallowSecretPermissions(Microsoft.Azure.Management.KeyVault.Models.SecretPermissions[])
  type: Method
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Domain/AccessPolicy/Update/IUpdate.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DisallowSecretPermissions
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Domain/AccessPolicy/Update/IUpdate.cs
    startLine: 85
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update
  summary: "\nRevoke a list of permissions for the AD identity to access secrets.\n"
  example: []
  syntax:
    content: IUpdate DisallowSecretPermissions(params SecretPermissions[] permissions)
    content.vb: Function DisallowSecretPermissions(ParamArray permissions As SecretPermissions()) As IUpdate
    parameters:
    - id: permissions
      type: Microsoft.Azure.Management.KeyVault.Models.SecretPermissions[]
      description: permissions the list of permissions to revoke
    return:
      type: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IUpdate
      description: the next stage of access policy update
  fullName.vb: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.DisallowSecretPermissions(Microsoft.Azure.Management.KeyVault.Models.SecretPermissions())
  name.vb: DisallowSecretPermissions(SecretPermissions())
- uid: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.DisallowSecretPermissions(System.Collections.Generic.IList{Microsoft.Azure.Management.KeyVault.Models.SecretPermissions})
  commentId: M:Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.DisallowSecretPermissions(System.Collections.Generic.IList{Microsoft.Azure.Management.KeyVault.Models.SecretPermissions})
  id: DisallowSecretPermissions(System.Collections.Generic.IList{Microsoft.Azure.Management.KeyVault.Models.SecretPermissions})
  parent: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions
  langs:
  - csharp
  - vb
  name: DisallowSecretPermissions(IList<SecretPermissions>)
  fullName: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.DisallowSecretPermissions(System.Collections.Generic.IList<Microsoft.Azure.Management.KeyVault.Models.SecretPermissions>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Domain/AccessPolicy/Update/IUpdate.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DisallowSecretPermissions
    path: src/ResourceManagement/KeyVault/Microsoft.Azure.Management.Fluent.KeyVault/Domain/AccessPolicy/Update/IUpdate.cs
    startLine: 92
  assemblies:
  - Microsoft.Azure.Management.Fluent.KeyVault
  packages:
  - Microsoft.Azure.Management.Fluent.KeyVault(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update
  summary: "\nRevoke a list of permissions for the AD identity to access secrets.\n"
  example: []
  syntax:
    content: IUpdate DisallowSecretPermissions(IList<SecretPermissions> permissions)
    content.vb: Function DisallowSecretPermissions(permissions As IList(Of SecretPermissions)) As IUpdate
    parameters:
    - id: permissions
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.KeyVault.Models.SecretPermissions}
      description: permissions the list of permissions to revoke
    return:
      type: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IUpdate
      description: the next stage of access policy update
  fullName.vb: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IWithPermissions.DisallowSecretPermissions(System.Collections.Generic.IList(Of Microsoft.Azure.Management.KeyVault.Models.SecretPermissions))
  name.vb: DisallowSecretPermissions(IList(Of SecretPermissions))
references:
- uid: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update
  fullName: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update
- uid: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IUpdate
  parent: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update
  isExternal: false
  name: IUpdate
  fullName: Microsoft.Azure.Management.Fluent.KeyVault.AccessPolicy.Update.IUpdate
- uid: Microsoft.Azure.Management.KeyVault.Models.KeyPermissions[]
  isExternal: false
  name: KeyPermissions[]
  fullName: Microsoft.Azure.Management.KeyVault.Models.KeyPermissions[]
  fullname.vb: Microsoft.Azure.Management.KeyVault.Models.KeyPermissions()
  name.vb: KeyPermissions()
  spec.csharp:
  - uid: Microsoft.Azure.Management.KeyVault.Models.KeyPermissions
    name: KeyPermissions
    fullName: Microsoft.Azure.Management.KeyVault.Models.KeyPermissions
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.Azure.Management.KeyVault.Models.KeyPermissions
    name: KeyPermissions
    fullName: Microsoft.Azure.Management.KeyVault.Models.KeyPermissions
  - name: ()
    fullName: ()
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.KeyVault.Models.KeyPermissions}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<KeyPermissions>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.KeyVault.Models.KeyPermissions>
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.KeyVault.Models.KeyPermissions)
  name.vb: IList(Of KeyPermissions)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.KeyVault.Models.KeyPermissions
    name: KeyPermissions
    fullName: Microsoft.Azure.Management.KeyVault.Models.KeyPermissions
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.KeyVault.Models.KeyPermissions
    name: KeyPermissions
    fullName: Microsoft.Azure.Management.KeyVault.Models.KeyPermissions
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: true
  name: IList<T>
  fullName: System.Collections.Generic.IList<T>
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Management.KeyVault.Models.SecretPermissions[]
  isExternal: false
  name: SecretPermissions[]
  fullName: Microsoft.Azure.Management.KeyVault.Models.SecretPermissions[]
  fullname.vb: Microsoft.Azure.Management.KeyVault.Models.SecretPermissions()
  name.vb: SecretPermissions()
  spec.csharp:
  - uid: Microsoft.Azure.Management.KeyVault.Models.SecretPermissions
    name: SecretPermissions
    fullName: Microsoft.Azure.Management.KeyVault.Models.SecretPermissions
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.Azure.Management.KeyVault.Models.SecretPermissions
    name: SecretPermissions
    fullName: Microsoft.Azure.Management.KeyVault.Models.SecretPermissions
  - name: ()
    fullName: ()
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.KeyVault.Models.SecretPermissions}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<SecretPermissions>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.KeyVault.Models.SecretPermissions>
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.KeyVault.Models.SecretPermissions)
  name.vb: IList(Of SecretPermissions)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.KeyVault.Models.SecretPermissions
    name: SecretPermissions
    fullName: Microsoft.Azure.Management.KeyVault.Models.SecretPermissions
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.KeyVault.Models.SecretPermissions
    name: SecretPermissions
    fullName: Microsoft.Azure.Management.KeyVault.Models.SecretPermissions
  - name: )
    fullName: )
