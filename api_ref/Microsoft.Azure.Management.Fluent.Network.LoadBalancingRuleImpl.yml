items:
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  commentId: T:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  id: LoadBalancingRuleImpl
  parent: Microsoft.Azure.Management.Fluent.Network
  children:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Attach
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Backend
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.BackendPort
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.FloatingIpEnabled
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Frontend
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.FrontendPort
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.IdleTimeoutInMinutes
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.LoadDistribution
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasBackendPort#Definition#IWithBackendPort{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRuleOrCreate}}#WithBackendPort(System.Int32)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasBackendPort#Update#IWithBackendPort{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Update#IUpdate}#WithBackendPort(System.Int32)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasBackendPort#UpdateDefinition#IWithBackendPort{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithBackendPort(System.Int32)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#Definition#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRuleOrCreate}}#WithFloatingIp(System.Boolean)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#Definition#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRuleOrCreate}}#WithFloatingIpDisabled
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#Definition#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRuleOrCreate}}#WithFloatingIpEnabled
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#Update#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Update#IUpdate}#WithFloatingIp(System.Boolean)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#Update#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Update#IUpdate}#WithFloatingIpDisabled
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#Update#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Update#IUpdate}#WithFloatingIpEnabled
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#UpdateDefinition#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithFloatingIp(System.Boolean)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#UpdateDefinition#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithFloatingIpDisabled
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#UpdateDefinition#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithFloatingIpEnabled
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFrontend#Definition#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Definition#IWithFrontendPort{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRuleOrCreate}}#WithFrontend(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFrontend#Update#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Update#IUpdate}#WithFrontend(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFrontend#UpdateDefinition#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#UpdateDefinition#IWithFrontendPort{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithFrontend(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasProtocol#Definition#IWithProtocol{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Definition#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRuleOrCreate},System#String}#WithProtocol(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasProtocol#Update#IWithProtocol{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Update#IUpdate,System#String}#WithProtocol(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasProtocol#UpdateDefinition#IWithProtocol{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#UpdateDefinition#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate},System#String}#WithProtocol(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#IHasBackendPort#BackendPort
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#IHasFloatingIp#FloatingIpEnabled
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#IHasFrontend#Frontend
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#IHasProtocol{System#String}#Protocol
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#ILoadBalancingRule#Backend
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#ILoadBalancingRule#FrontendPort
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#ILoadBalancingRule#IdleTimeoutInMinutes
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#ILoadBalancingRule#LoadDistribution
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#ILoadBalancingRule#Probe
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Definition#IWithBackend{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRuleOrCreate}#WithBackend(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Definition#IWithFrontendPort{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRuleOrCreate}#WithFrontendPort(System.Int32)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Definition#IWithIdleTimeoutInMinutes{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRuleOrCreate}#WithIdleTimeoutInMinutes(System.Int32)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Definition#IWithLoadDistribution{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRuleOrCreate}#WithLoadDistribution(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Definition#IWithProbe{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRuleOrCreate}#WithProbe(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Update#IWithFrontendPort#WithFrontendPort(System.Int32)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Update#IWithIdleTimeoutInMinutes#WithIdleTimeoutInMinutes(System.Int32)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Update#IWithLoadDistribution#WithLoadDistribution(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#UpdateDefinition#IWithBackend{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}#WithBackend(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#UpdateDefinition#IWithFrontendPort{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}#WithFrontendPort(System.Int32)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#UpdateDefinition#IWithIdleTimeoutInMinutes{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}#WithIdleTimeoutInMinutes(System.Int32)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#UpdateDefinition#IWithLoadDistribution{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}#WithLoadDistribution(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#UpdateDefinition#IWithProbe{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}#WithProbe(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Name
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Probe
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Protocol
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.WithBackend(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.WithBackendPort(System.Int32)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.WithFloatingIp(System.Boolean)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.WithFloatingIpDisabled
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.WithFloatingIpEnabled
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.WithFrontend(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.WithFrontendPort(System.Int32)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.WithIdleTimeoutInMinutes(System.Int32)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.WithLoadDistribution(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.WithProbe(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.WithProtocol(System.String)
  langs:
  - csharp
  - vb
  name: LoadBalancingRuleImpl
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LoadBalancingRuleImpl
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: 'public class LoadBalancingRuleImpl : ChildResource<LoadBalancingRuleInner, LoadBalancerImpl, ILoadBalancer>, ILoadBalancingRule, IWrapper<LoadBalancingRuleInner>, IChildResource<ILoadBalancer>, IHasBackendPort, IHasFrontend, IHasFloatingIp, IHasProtocol<string>, IDefinition<IWithLoadBalancingRuleOrCreate>, IBlank<IWithLoadBalancingRuleOrCreate>, IWithProtocol<IWithLoadBalancingRuleOrCreate>, IWithProtocol<IWithFrontend<IWithLoadBalancingRuleOrCreate>, string>, IWithFrontendPort<IWithLoadBalancingRuleOrCreate>, IWithFrontend<IWithLoadBalancingRuleOrCreate>, IWithFrontend<IWithFrontendPort<IWithLoadBalancingRuleOrCreate>>, IWithProbe<IWithLoadBalancingRuleOrCreate>, IWithBackend<IWithLoadBalancingRuleOrCreate>, IWithBackendPort<IWithLoadBalancingRuleOrCreate>, IWithBackendPort<IWithAttach<IWithLoadBalancingRuleOrCreate>>, IWithAttach<IWithLoadBalancingRuleOrCreate>, IInDefinition<IWithLoadBalancingRuleOrCreate>, IWithFloatingIp<IWithLoadBalancingRuleOrCreate>, IWithFloatingIp<IWithAttach<IWithLoadBalancingRuleOrCreate>>, IWithIdleTimeoutInMinutes<IWithLoadBalancingRuleOrCreate>, IWithLoadDistribution<IWithLoadBalancingRuleOrCreate>, IUpdateDefinition<IUpdate>, IBlank<IUpdate>, IWithProtocol<IUpdate>, IWithProtocol<IWithFrontend<IUpdate>, string>, IWithFrontendPort<IUpdate>, IWithFrontend<IUpdate>, IWithFrontend<IWithFrontendPort<IUpdate>>, IWithProbe<IUpdate>, IWithBackend<IUpdate>, IWithBackendPort<IUpdate>, IWithBackendPort<IWithAttach<IUpdate>>, IWithAttach<IUpdate>, IInUpdate<IUpdate>, IWithFloatingIp<IUpdate>, IWithFloatingIp<IWithAttach<IUpdate>>, IWithIdleTimeoutInMinutes<IUpdate>, IWithLoadDistribution<IUpdate>, IUpdate, ISettable<IUpdate>, IWithFrontendPort, IWithFrontend, IWithFrontend<IUpdate>, IWithProtocol, IWithProtocol<IUpdate, string>, IWithBackendPort, IWithBackendPort<IUpdate>, IWithFloatingIp, IWithFloatingIp<IUpdate>, IWithIdleTimeoutInMinutes, IWithLoadDistribution'
    content.vb: >-
      Public Class LoadBalancingRuleImpl
          Inherits ChildResource(Of LoadBalancingRuleInner, LoadBalancerImpl, ILoadBalancer)
          Implements ILoadBalancingRule, IWrapper(Of LoadBalancingRuleInner), IChildResource(Of ILoadBalancer), IHasBackendPort, IHasFrontend, IHasFloatingIp, IHasProtocol(Of String), IDefinition(Of IWithLoadBalancingRuleOrCreate), IBlank(Of IWithLoadBalancingRuleOrCreate), IWithProtocol(Of IWithLoadBalancingRuleOrCreate), IWithProtocol(Of IWithFrontend(Of IWithLoadBalancingRuleOrCreate), String), IWithFrontendPort(Of IWithLoadBalancingRuleOrCreate), IWithFrontend(Of IWithLoadBalancingRuleOrCreate), IWithFrontend(Of IWithFrontendPort(Of IWithLoadBalancingRuleOrCreate)), IWithProbe(Of IWithLoadBalancingRuleOrCreate), IWithBackend(Of IWithLoadBalancingRuleOrCreate), IWithBackendPort(Of IWithLoadBalancingRuleOrCreate), IWithBackendPort(Of IWithAttach(Of IWithLoadBalancingRuleOrCreate)), IWithAttach(Of IWithLoadBalancingRuleOrCreate), IInDefinition(Of IWithLoadBalancingRuleOrCreate), IWithFloatingIp(Of IWithLoadBalancingRuleOrCreate), IWithFloatingIp(Of IWithAttach(Of IWithLoadBalancingRuleOrCreate)), IWithIdleTimeoutInMinutes(Of IWithLoadBalancingRuleOrCreate), IWithLoadDistribution(Of IWithLoadBalancingRuleOrCreate), IUpdateDefinition(Of IUpdate), IBlank(Of IUpdate), IWithProtocol(Of IUpdate), IWithProtocol(Of IWithFrontend(Of IUpdate), String), IWithFrontendPort(Of IUpdate), IWithFrontend(Of IUpdate), IWithFrontend(Of IWithFrontendPort(Of IUpdate)), IWithProbe(Of IUpdate), IWithBackend(Of IUpdate), IWithBackendPort(Of IUpdate), IWithBackendPort(Of IWithAttach(Of IUpdate)), IWithAttach(Of IUpdate), IInUpdate(Of IUpdate), IWithFloatingIp(Of IUpdate), IWithFloatingIp(Of IWithAttach(Of IUpdate)), IWithIdleTimeoutInMinutes(Of IUpdate), IWithLoadDistribution(Of IUpdate), IUpdate, ISettable(Of IUpdate), IWithFrontendPort, IWithFrontend, IWithFrontend(Of IUpdate), IWithProtocol, IWithProtocol(Of IUpdate, String), IWithBackendPort, IWithBackendPort(Of IUpdate), IWithFloatingIp, IWithFloatingIp(Of IUpdate), IWithIdleTimeoutInMinutes, IWithLoadDistribution
  inheritance:
  - System.Object
  implements:
  - Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule
  - IWrapper{Microsoft.Azure.Management.Network.Models.LoadBalancingRuleInner}
  - IChildResource{Microsoft.Azure.Management.Fluent.Network.ILoadBalancer}
  - Microsoft.Azure.Management.Fluent.Network.IHasBackendPort
  - Microsoft.Azure.Management.Fluent.Network.IHasFrontend
  - Microsoft.Azure.Management.Fluent.Network.IHasFloatingIp
  - Microsoft.Azure.Management.Fluent.Network.IHasProtocol{System.String}
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IDefinition{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}
  - Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate},System.String}
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}
  - Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}}
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProbe{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}
  - Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}}
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}
  - IInDefinition{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}
  - Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}}
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithIdleTimeoutInMinutes{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithLoadDistribution{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IUpdateDefinition{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate},System.String}
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProbe{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - IInUpdate{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithIdleTimeoutInMinutes{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithLoadDistribution{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
  - ISettable{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithFrontendPort
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithFrontend
  - Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithProtocol
  - Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate,System.String}
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithBackendPort
  - Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithFloatingIp
  - Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithIdleTimeoutInMinutes
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithLoadDistribution
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Name
  commentId: P:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Name
  id: Name
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: Name
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Name
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancingRuleImpl.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public override string Name { get; }
    content.vb: Public Overrides ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Protocol
  commentId: P:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Protocol
  id: Protocol
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: Protocol
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Protocol
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Protocol
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancingRuleImpl.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public string Protocol { get; }
    content.vb: Public ReadOnly Property Protocol As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.FloatingIpEnabled
  commentId: P:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.FloatingIpEnabled
  id: FloatingIpEnabled
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: FloatingIpEnabled
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.FloatingIpEnabled
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: FloatingIpEnabled
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancingRuleImpl.cs
    startLine: 37
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public bool FloatingIpEnabled { get; }
    content.vb: Public ReadOnly Property FloatingIpEnabled As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.IdleTimeoutInMinutes
  commentId: P:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.IdleTimeoutInMinutes
  id: IdleTimeoutInMinutes
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: IdleTimeoutInMinutes
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.IdleTimeoutInMinutes
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IdleTimeoutInMinutes
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancingRuleImpl.cs
    startLine: 45
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public int IdleTimeoutInMinutes { get; }
    content.vb: Public ReadOnly Property IdleTimeoutInMinutes As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.FrontendPort
  commentId: P:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.FrontendPort
  id: FrontendPort
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: FrontendPort
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.FrontendPort
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: FrontendPort
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancingRuleImpl.cs
    startLine: 53
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public int FrontendPort { get; }
    content.vb: Public ReadOnly Property FrontendPort As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.BackendPort
  commentId: P:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.BackendPort
  id: BackendPort
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: BackendPort
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.BackendPort
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BackendPort
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancingRuleImpl.cs
    startLine: 61
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public int BackendPort { get; }
    content.vb: Public ReadOnly Property BackendPort As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.LoadDistribution
  commentId: P:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.LoadDistribution
  id: LoadDistribution
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: LoadDistribution
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.LoadDistribution
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LoadDistribution
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancingRuleImpl.cs
    startLine: 69
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public string LoadDistribution { get; }
    content.vb: Public ReadOnly Property LoadDistribution As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Frontend
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Frontend
  id: Frontend
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: Frontend()
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Frontend()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Frontend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancingRuleImpl.cs
    startLine: 77
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public IFrontend Frontend()
    content.vb: Public Function Frontend As IFrontend
    return:
      type: Microsoft.Azure.Management.Fluent.Network.IFrontend
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Backend
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Backend
  id: Backend
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: Backend()
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Backend()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Backend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancingRuleImpl.cs
    startLine: 93
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public IBackend Backend()
    content.vb: Public Function Backend As IBackend
    return:
      type: Microsoft.Azure.Management.Fluent.Network.IBackend
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Probe
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Probe
  id: Probe
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: Probe()
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Probe()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Probe
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancingRuleImpl.cs
    startLine: 109
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public IProbe Probe()
    content.vb: Public Function Probe As IProbe
    return:
      type: Microsoft.Azure.Management.Fluent.Network.IProbe
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.WithIdleTimeoutInMinutes(System.Int32)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.WithIdleTimeoutInMinutes(System.Int32)
  id: WithIdleTimeoutInMinutes(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: WithIdleTimeoutInMinutes(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.WithIdleTimeoutInMinutes(System.Int32)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithIdleTimeoutInMinutes
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancingRuleImpl.cs
    startLine: 128
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public LoadBalancingRuleImpl WithIdleTimeoutInMinutes(int minutes)
    content.vb: Public Function WithIdleTimeoutInMinutes(minutes As Integer) As LoadBalancingRuleImpl
    parameters:
    - id: minutes
      type: System.Int32
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.WithFloatingIp(System.Boolean)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.WithFloatingIp(System.Boolean)
  id: WithFloatingIp(System.Boolean)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: WithFloatingIp(Boolean)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.WithFloatingIp(System.Boolean)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithFloatingIp
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancingRuleImpl.cs
    startLine: 134
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public LoadBalancingRuleImpl WithFloatingIp(bool enable)
    content.vb: Public Function WithFloatingIp(enable As Boolean) As LoadBalancingRuleImpl
    parameters:
    - id: enable
      type: System.Boolean
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.WithFloatingIpEnabled
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.WithFloatingIpEnabled
  id: WithFloatingIpEnabled
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: WithFloatingIpEnabled()
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.WithFloatingIpEnabled()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithFloatingIpEnabled
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancingRuleImpl.cs
    startLine: 140
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public LoadBalancingRuleImpl WithFloatingIpEnabled()
    content.vb: Public Function WithFloatingIpEnabled As LoadBalancingRuleImpl
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.WithFloatingIpDisabled
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.WithFloatingIpDisabled
  id: WithFloatingIpDisabled
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: WithFloatingIpDisabled()
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.WithFloatingIpDisabled()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithFloatingIpDisabled
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancingRuleImpl.cs
    startLine: 145
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public LoadBalancingRuleImpl WithFloatingIpDisabled()
    content.vb: Public Function WithFloatingIpDisabled As LoadBalancingRuleImpl
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.WithProtocol(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.WithProtocol(System.String)
  id: WithProtocol(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: WithProtocol(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.WithProtocol(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithProtocol
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancingRuleImpl.cs
    startLine: 150
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public LoadBalancingRuleImpl WithProtocol(string protocol)
    content.vb: Public Function WithProtocol(protocol As String) As LoadBalancingRuleImpl
    parameters:
    - id: protocol
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.WithFrontendPort(System.Int32)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.WithFrontendPort(System.Int32)
  id: WithFrontendPort(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: WithFrontendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.WithFrontendPort(System.Int32)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithFrontendPort
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancingRuleImpl.cs
    startLine: 156
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public LoadBalancingRuleImpl WithFrontendPort(int port)
    content.vb: Public Function WithFrontendPort(port As Integer) As LoadBalancingRuleImpl
    parameters:
    - id: port
      type: System.Int32
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.WithBackendPort(System.Int32)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.WithBackendPort(System.Int32)
  id: WithBackendPort(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: WithBackendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.WithBackendPort(System.Int32)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithBackendPort
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancingRuleImpl.cs
    startLine: 166
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public LoadBalancingRuleImpl WithBackendPort(int port)
    content.vb: Public Function WithBackendPort(port As Integer) As LoadBalancingRuleImpl
    parameters:
    - id: port
      type: System.Int32
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.WithLoadDistribution(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.WithLoadDistribution(System.String)
  id: WithLoadDistribution(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: WithLoadDistribution(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.WithLoadDistribution(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithLoadDistribution
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancingRuleImpl.cs
    startLine: 172
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public LoadBalancingRuleImpl WithLoadDistribution(string loadDistribution)
    content.vb: Public Function WithLoadDistribution(loadDistribution As String) As LoadBalancingRuleImpl
    parameters:
    - id: loadDistribution
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.WithFrontend(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.WithFrontend(System.String)
  id: WithFrontend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: WithFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.WithFrontend(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithFrontend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancingRuleImpl.cs
    startLine: 178
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public LoadBalancingRuleImpl WithFrontend(string frontendName)
    content.vb: Public Function WithFrontend(frontendName As String) As LoadBalancingRuleImpl
    parameters:
    - id: frontendName
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.WithBackend(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.WithBackend(System.String)
  id: WithBackend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: WithBackend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.WithBackend(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithBackend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancingRuleImpl.cs
    startLine: 186
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public LoadBalancingRuleImpl WithBackend(string backendName)
    content.vb: Public Function WithBackend(backendName As String) As LoadBalancingRuleImpl
    parameters:
    - id: backendName
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.WithProbe(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.WithProbe(System.String)
  id: WithProbe(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: WithProbe(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.WithProbe(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithProbe
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancingRuleImpl.cs
    startLine: 194
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public LoadBalancingRuleImpl WithProbe(string name)
    content.vb: Public Function WithProbe(name As String) As LoadBalancingRuleImpl
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Attach
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Attach
  id: Attach
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: Attach()
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Attach()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Attach
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/LoadBalancingRuleImpl.cs
    startLine: 202
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public LoadBalancerImpl Attach()
    content.vb: Public Function Attach As LoadBalancerImpl
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Definition#IWithLoadDistribution{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRuleOrCreate}#WithLoadDistribution(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Definition#IWithLoadDistribution{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRuleOrCreate}#WithLoadDistribution(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Definition#IWithLoadDistribution{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRuleOrCreate}#WithLoadDistribution(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: IWithLoadDistribution<IWithLoadBalancingRuleOrCreate>.WithLoadDistribution(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithLoadDistribution<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>.WithLoadDistribution(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithLoadDistribution<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>.WithLoadDistribution
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSpecifies the load distribution mode.\n"
  example: []
  syntax:
    content: IWithAttach<IWithLoadBalancingRuleOrCreate> IWithLoadDistribution<IWithLoadBalancingRuleOrCreate>.WithLoadDistribution(string loadDistribution)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithLoadDistribution<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>.WithLoadDistribution(loadDistribution As String) As IWithAttach(Of IWithLoadBalancingRuleOrCreate) Implements IWithLoadDistribution(Of IWithLoadBalancingRuleOrCreate).WithLoadDistribution
    parameters:
    - id: loadDistribution
      type: System.String
      description: loadDistribution a supported load distribution mode
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithLoadDistribution{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}.WithLoadDistribution(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithLoadDistribution<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>.WithLoadDistribution(String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#UpdateDefinition#IWithLoadDistribution{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}#WithLoadDistribution(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#UpdateDefinition#IWithLoadDistribution{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}#WithLoadDistribution(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#UpdateDefinition#IWithLoadDistribution{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}#WithLoadDistribution(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: IWithLoadDistribution<IUpdate>.WithLoadDistribution(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithLoadDistribution<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithLoadDistribution(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithLoadDistribution<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithLoadDistribution
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
    startLine: 42
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSpecifies the load distribution mode.\n"
  example: []
  syntax:
    content: IWithAttach<IUpdate> IWithLoadDistribution<IUpdate>.WithLoadDistribution(string loadDistribution)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithLoadDistribution<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithLoadDistribution(loadDistribution As String) As IWithAttach(Of IUpdate) Implements IWithLoadDistribution(Of IUpdate).WithLoadDistribution
    parameters:
    - id: loadDistribution
      type: System.String
      description: loadDistribution a supported load distribution mode
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithLoadDistribution{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}.WithLoadDistribution(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithLoadDistribution<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithLoadDistribution(String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasProtocol#Update#IWithProtocol{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Update#IUpdate,System#String}#WithProtocol(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasProtocol#Update#IWithProtocol{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Update#IUpdate,System#String}#WithProtocol(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#HasProtocol#Update#IWithProtocol{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Update#IUpdate,System#String}#WithProtocol(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: IWithProtocol<IUpdate, String>.WithProtocol(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate, System.String>.WithProtocol(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate,System.String>.WithProtocol
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
    startLine: 51
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSpecifies the transport protocol.\n"
  example: []
  syntax:
    content: IUpdate IWithProtocol<IUpdate, string>.WithProtocol(string protocol)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate,System.String>.WithProtocol(protocol As String) As IUpdate Implements IWithProtocol(Of IUpdate, String).WithProtocol
    parameters:
    - id: protocol
      type: System.String
      description: protocol a transport protocol
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
      description: the next stage of the update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate,System.String}.WithProtocol(System.String)
  fullName.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate,System.String>.WithProtocol(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate,System.String>.WithProtocol(String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasProtocol#Definition#IWithProtocol{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Definition#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRuleOrCreate},System#String}#WithProtocol(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasProtocol#Definition#IWithProtocol{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Definition#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRuleOrCreate},System#String}#WithProtocol(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#HasProtocol#Definition#IWithProtocol{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Definition#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRuleOrCreate},System#String}#WithProtocol(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: IWithProtocol<IWithFrontend<IWithLoadBalancingRuleOrCreate>, String>.WithProtocol(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>, System.String>.WithProtocol(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>,System.String>.WithProtocol
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
    startLine: 60
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSpecifies the transport protocol.\n"
  example: []
  syntax:
    content: IWithFrontend<IWithLoadBalancingRuleOrCreate> IWithProtocol<IWithFrontend<IWithLoadBalancingRuleOrCreate>, string>.WithProtocol(string protocol)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>,System.String>.WithProtocol(protocol As String) As IWithFrontend(Of IWithLoadBalancingRuleOrCreate) Implements IWithProtocol(Of IWithFrontend(Of IWithLoadBalancingRuleOrCreate), String).WithProtocol
    parameters:
    - id: protocol
      type: System.String
      description: protocol a transport protocol
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate},System.String}.WithProtocol(System.String)
  fullName.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>,System.String>.WithProtocol(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>,System.String>.WithProtocol(String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasProtocol#UpdateDefinition#IWithProtocol{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#UpdateDefinition#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate},System#String}#WithProtocol(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasProtocol#UpdateDefinition#IWithProtocol{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#UpdateDefinition#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate},System#String}#WithProtocol(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#HasProtocol#UpdateDefinition#IWithProtocol{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#UpdateDefinition#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate},System#String}#WithProtocol(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: IWithProtocol<IWithFrontend<IUpdate>, String>.WithProtocol(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>, System.String>.WithProtocol(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>,System.String>.WithProtocol
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
    startLine: 69
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSpecifies the transport protocol.\n"
  example: []
  syntax:
    content: IWithFrontend<IUpdate> IWithProtocol<IWithFrontend<IUpdate>, string>.WithProtocol(string protocol)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>,System.String>.WithProtocol(protocol As String) As IWithFrontend(Of IUpdate) Implements IWithProtocol(Of IWithFrontend(Of IUpdate), String).WithProtocol
    parameters:
    - id: protocol
      type: System.String
      description: protocol a transport protocol
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate},System.String}.WithProtocol(System.String)
  fullName.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>,System.String>.WithProtocol(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>,System.String>.WithProtocol(String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Update#IWithLoadDistribution#WithLoadDistribution(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Update#IWithLoadDistribution#WithLoadDistribution(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Update#IWithLoadDistribution#WithLoadDistribution(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: IWithLoadDistribution.WithLoadDistribution(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithLoadDistribution.WithLoadDistribution(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithLoadDistribution.WithLoadDistribution
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
    startLine: 78
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSpecifies the load distribution mode.\n"
  example: []
  syntax:
    content: IUpdate IWithLoadDistribution.WithLoadDistribution(string loadDistribution)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithLoadDistribution.WithLoadDistribution(loadDistribution As String) As IUpdate Implements IWithLoadDistribution.WithLoadDistribution
    parameters:
    - id: loadDistribution
      type: System.String
      description: loadDistribution a supported load distribution mode
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithLoadDistribution.WithLoadDistribution(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithLoadDistribution.WithLoadDistribution(String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#IHasFloatingIp#FloatingIpEnabled
  commentId: P:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#IHasFloatingIp#FloatingIpEnabled
  id: Microsoft#Azure#Management#Fluent#Network#IHasFloatingIp#FloatingIpEnabled
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: IHasFloatingIp.FloatingIpEnabled
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft.Azure.Management.Fluent.Network.IHasFloatingIp.FloatingIpEnabled
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.IHasFloatingIp.FloatingIpEnabled
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
    startLine: 83
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: bool ? IHasFloatingIp.FloatingIpEnabled { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.Azure.Management.Fluent.Network.IHasFloatingIp.FloatingIpEnabled As Boolean? Implements IHasFloatingIp.FloatingIpEnabled
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
      description: the state of the floating IP enablement
  implements:
  - Microsoft.Azure.Management.Fluent.Network.IHasFloatingIp.FloatingIpEnabled
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.Azure.Management.Fluent.Network.IHasFloatingIp.FloatingIpEnabled
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#IHasFrontend#Frontend
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#IHasFrontend#Frontend
  id: Microsoft#Azure#Management#Fluent#Network#IHasFrontend#Frontend
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: IHasFrontend.Frontend()
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft.Azure.Management.Fluent.Network.IHasFrontend.Frontend()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.IHasFrontend.Frontend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
    startLine: 91
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: IFrontend IHasFrontend.Frontend()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.IHasFrontend.Frontend As IFrontend Implements IHasFrontend.Frontend
    return:
      type: Microsoft.Azure.Management.Fluent.Network.IFrontend
      description: the associated frontend
  implements:
  - Microsoft.Azure.Management.Fluent.Network.IHasFrontend.Frontend
  name.vb: Microsoft.Azure.Management.Fluent.Network.IHasFrontend.Frontend()
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasBackendPort#Update#IWithBackendPort{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Update#IUpdate}#WithBackendPort(System.Int32)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasBackendPort#Update#IWithBackendPort{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Update#IUpdate}#WithBackendPort(System.Int32)
  id: Microsoft#Azure#Management#Fluent#Network#HasBackendPort#Update#IWithBackendPort{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Update#IUpdate}#WithBackendPort(System.Int32)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: IWithBackendPort<IUpdate>.WithBackendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate>.WithBackendPort(System.Int32)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate>.WithBackendPort
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
    startLine: 108
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSpecifies the backend port.\n"
  example: []
  syntax:
    content: IUpdate IWithBackendPort<IUpdate>.WithBackendPort(int port)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate>.WithBackendPort(port As Integer) As IUpdate Implements IWithBackendPort(Of IUpdate).WithBackendPort
    parameters:
    - id: port
      type: System.Int32
      description: port a port number
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
      description: the next stage of the update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate}.WithBackendPort(System.Int32)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate>.WithBackendPort(Int32)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasBackendPort#Definition#IWithBackendPort{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRuleOrCreate}}#WithBackendPort(System.Int32)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasBackendPort#Definition#IWithBackendPort{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRuleOrCreate}}#WithBackendPort(System.Int32)
  id: Microsoft#Azure#Management#Fluent#Network#HasBackendPort#Definition#IWithBackendPort{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRuleOrCreate}}#WithBackendPort(System.Int32)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: IWithBackendPort<IWithAttach<IWithLoadBalancingRuleOrCreate>>.WithBackendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>>.WithBackendPort(System.Int32)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>>.WithBackendPort
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
    startLine: 119
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IWithAttach<IWithLoadBalancingRuleOrCreate> IWithBackendPort<IWithAttach<IWithLoadBalancingRuleOrCreate>>.WithBackendPort(int port)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>>.WithBackendPort(port As Integer) As IWithAttach(Of IWithLoadBalancingRuleOrCreate) Implements IWithBackendPort(Of IWithAttach(Of IWithLoadBalancingRuleOrCreate)).WithBackendPort
    parameters:
    - id: port
      type: System.Int32
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}}.WithBackendPort(System.Int32)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>>.WithBackendPort(Int32)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasBackendPort#UpdateDefinition#IWithBackendPort{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithBackendPort(System.Int32)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasBackendPort#UpdateDefinition#IWithBackendPort{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithBackendPort(System.Int32)
  id: Microsoft#Azure#Management#Fluent#Network#HasBackendPort#UpdateDefinition#IWithBackendPort{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithBackendPort(System.Int32)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: IWithBackendPort<IWithAttach<IUpdate>>.WithBackendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithBackendPort(System.Int32)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithBackendPort
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
    startLine: 130
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IWithAttach<IUpdate> IWithBackendPort<IWithAttach<IUpdate>>.WithBackendPort(int port)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithBackendPort(port As Integer) As IWithAttach(Of IUpdate) Implements IWithBackendPort(Of IWithAttach(Of IUpdate)).WithBackendPort
    parameters:
    - id: port
      type: System.Int32
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}.WithBackendPort(System.Int32)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithBackendPort(Int32)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Definition#IWithBackend{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRuleOrCreate}#WithBackend(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Definition#IWithBackend{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRuleOrCreate}#WithBackend(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Definition#IWithBackend{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRuleOrCreate}#WithBackend(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: IWithBackend<IWithLoadBalancingRuleOrCreate>.WithBackend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>.WithBackend(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>.WithBackend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
    startLine: 157
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IWithBackendPort<IWithLoadBalancingRuleOrCreate> IWithBackend<IWithLoadBalancingRuleOrCreate>.WithBackend(string backendName)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>.WithBackend(backendName As String) As IWithBackendPort(Of IWithLoadBalancingRuleOrCreate) Implements IWithBackend(Of IWithLoadBalancingRuleOrCreate).WithBackend
    parameters:
    - id: backendName
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}.WithBackend(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>.WithBackend(String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#UpdateDefinition#IWithBackend{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}#WithBackend(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#UpdateDefinition#IWithBackend{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}#WithBackend(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#UpdateDefinition#IWithBackend{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}#WithBackend(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: IWithBackend<IUpdate>.WithBackend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithBackend(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithBackend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
    startLine: 168
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IWithBackendPort<IUpdate> IWithBackend<IUpdate>.WithBackend(string backendName)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithBackend(backendName As String) As IWithBackendPort(Of IUpdate) Implements IWithBackend(Of IUpdate).WithBackend
    parameters:
    - id: backendName
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}.WithBackend(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithBackend(String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Update#IWithFrontendPort#WithFrontendPort(System.Int32)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Update#IWithFrontendPort#WithFrontendPort(System.Int32)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Update#IWithFrontendPort#WithFrontendPort(System.Int32)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: IWithFrontendPort.WithFrontendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithFrontendPort.WithFrontendPort(System.Int32)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithFrontendPort.WithFrontendPort
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
    startLine: 177
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSpecifies the frontend port to load balance.\n"
  example: []
  syntax:
    content: IUpdate IWithFrontendPort.WithFrontendPort(int port)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithFrontendPort.WithFrontendPort(port As Integer) As IUpdate Implements IWithFrontendPort.WithFrontendPort
    parameters:
    - id: port
      type: System.Int32
      description: port a port number
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
      description: the next stage of the update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithFrontendPort.WithFrontendPort(System.Int32)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithFrontendPort.WithFrontendPort(Int32)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#ILoadBalancingRule#FrontendPort
  commentId: P:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#ILoadBalancingRule#FrontendPort
  id: Microsoft#Azure#Management#Fluent#Network#ILoadBalancingRule#FrontendPort
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: ILoadBalancingRule.FrontendPort
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule.FrontendPort
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule.FrontendPort
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
    startLine: 182
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: int ? ILoadBalancingRule.FrontendPort { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule.FrontendPort As Integer? Implements ILoadBalancingRule.FrontendPort
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: the load balanced front end port
  implements:
  - Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule.FrontendPort
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule.FrontendPort
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#ILoadBalancingRule#IdleTimeoutInMinutes
  commentId: P:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#ILoadBalancingRule#IdleTimeoutInMinutes
  id: Microsoft#Azure#Management#Fluent#Network#ILoadBalancingRule#IdleTimeoutInMinutes
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: ILoadBalancingRule.IdleTimeoutInMinutes
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule.IdleTimeoutInMinutes
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule.IdleTimeoutInMinutes
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
    startLine: 190
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: int ? ILoadBalancingRule.IdleTimeoutInMinutes { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule.IdleTimeoutInMinutes As Integer? Implements ILoadBalancingRule.IdleTimeoutInMinutes
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: the number of minutes before an inactive connection is closed
  implements:
  - Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule.IdleTimeoutInMinutes
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule.IdleTimeoutInMinutes
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#ILoadBalancingRule#Probe
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#ILoadBalancingRule#Probe
  id: Microsoft#Azure#Management#Fluent#Network#ILoadBalancingRule#Probe
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: ILoadBalancingRule.Probe()
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule.Probe()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule.Probe
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
    startLine: 198
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: IProbe ILoadBalancingRule.Probe()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule.Probe As IProbe Implements ILoadBalancingRule.Probe
    return:
      type: Microsoft.Azure.Management.Fluent.Network.IProbe
      description: the probe associated with the load balancing rule
  implements:
  - Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule.Probe
  name.vb: Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule.Probe()
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#ILoadBalancingRule#Backend
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#ILoadBalancingRule#Backend
  id: Microsoft#Azure#Management#Fluent#Network#ILoadBalancingRule#Backend
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: ILoadBalancingRule.Backend()
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule.Backend()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule.Backend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
    startLine: 203
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: IBackend ILoadBalancingRule.Backend()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule.Backend As IBackend Implements ILoadBalancingRule.Backend
    return:
      type: Microsoft.Azure.Management.Fluent.Network.IBackend
      description: the backend associated with the load balancing rule
  implements:
  - Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule.Backend
  name.vb: Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule.Backend()
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#ILoadBalancingRule#LoadDistribution
  commentId: P:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#ILoadBalancingRule#LoadDistribution
  id: Microsoft#Azure#Management#Fluent#Network#ILoadBalancingRule#LoadDistribution
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: ILoadBalancingRule.LoadDistribution
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule.LoadDistribution
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule.LoadDistribution
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
    startLine: 208
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: string ILoadBalancingRule.LoadDistribution { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule.LoadDistribution As String Implements ILoadBalancingRule.LoadDistribution
    parameters: []
    return:
      type: System.String
      description: the method of load distribution
  implements:
  - Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule.LoadDistribution
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule.LoadDistribution
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Definition#IWithIdleTimeoutInMinutes{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRuleOrCreate}#WithIdleTimeoutInMinutes(System.Int32)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Definition#IWithIdleTimeoutInMinutes{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRuleOrCreate}#WithIdleTimeoutInMinutes(System.Int32)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Definition#IWithIdleTimeoutInMinutes{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRuleOrCreate}#WithIdleTimeoutInMinutes(System.Int32)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: IWithIdleTimeoutInMinutes<IWithLoadBalancingRuleOrCreate>.WithIdleTimeoutInMinutes(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithIdleTimeoutInMinutes<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>.WithIdleTimeoutInMinutes(System.Int32)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithIdleTimeoutInMinutes<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>.WithIdleTimeoutInMinutes
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
    startLine: 220
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSpecifies the number of minutes before an idle connection is closed.\n"
  example: []
  syntax:
    content: IWithAttach<IWithLoadBalancingRuleOrCreate> IWithIdleTimeoutInMinutes<IWithLoadBalancingRuleOrCreate>.WithIdleTimeoutInMinutes(int minutes)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithIdleTimeoutInMinutes<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>.WithIdleTimeoutInMinutes(minutes As Integer) As IWithAttach(Of IWithLoadBalancingRuleOrCreate) Implements IWithIdleTimeoutInMinutes(Of IWithLoadBalancingRuleOrCreate).WithIdleTimeoutInMinutes
    parameters:
    - id: minutes
      type: System.Int32
      description: minutes the desired number of minutes
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithIdleTimeoutInMinutes{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}.WithIdleTimeoutInMinutes(System.Int32)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithIdleTimeoutInMinutes<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>.WithIdleTimeoutInMinutes(Int32)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#UpdateDefinition#IWithIdleTimeoutInMinutes{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}#WithIdleTimeoutInMinutes(System.Int32)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#UpdateDefinition#IWithIdleTimeoutInMinutes{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}#WithIdleTimeoutInMinutes(System.Int32)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#UpdateDefinition#IWithIdleTimeoutInMinutes{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}#WithIdleTimeoutInMinutes(System.Int32)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: IWithIdleTimeoutInMinutes<IUpdate>.WithIdleTimeoutInMinutes(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithIdleTimeoutInMinutes<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithIdleTimeoutInMinutes(System.Int32)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithIdleTimeoutInMinutes<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithIdleTimeoutInMinutes
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
    startLine: 229
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSpecifies the number of minutes before an idle connection is closed.\n"
  example: []
  syntax:
    content: IWithAttach<IUpdate> IWithIdleTimeoutInMinutes<IUpdate>.WithIdleTimeoutInMinutes(int minutes)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithIdleTimeoutInMinutes<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithIdleTimeoutInMinutes(minutes As Integer) As IWithAttach(Of IUpdate) Implements IWithIdleTimeoutInMinutes(Of IUpdate).WithIdleTimeoutInMinutes
    parameters:
    - id: minutes
      type: System.Int32
      description: minutes the desired number of minutes
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithIdleTimeoutInMinutes{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}.WithIdleTimeoutInMinutes(System.Int32)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithIdleTimeoutInMinutes<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithIdleTimeoutInMinutes(Int32)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Definition#IWithProbe{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRuleOrCreate}#WithProbe(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Definition#IWithProbe{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRuleOrCreate}#WithProbe(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Definition#IWithProbe{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRuleOrCreate}#WithProbe(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: IWithProbe<IWithLoadBalancingRuleOrCreate>.WithProbe(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProbe<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>.WithProbe(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProbe<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>.WithProbe
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
    startLine: 238
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nAssociates the specified existing HTTP or TCP probe of this load balancer with the load balancing rule.\n"
  example: []
  syntax:
    content: IWithBackend<IWithLoadBalancingRuleOrCreate> IWithProbe<IWithLoadBalancingRuleOrCreate>.WithProbe(string name)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProbe<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>.WithProbe(name As String) As IWithBackend(Of IWithLoadBalancingRuleOrCreate) Implements IWithProbe(Of IWithLoadBalancingRuleOrCreate).WithProbe
    parameters:
    - id: name
      type: System.String
      description: name the name of an existing HTTP or TCP probe
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProbe{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}.WithProbe(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProbe<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>.WithProbe(String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#UpdateDefinition#IWithProbe{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}#WithProbe(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#UpdateDefinition#IWithProbe{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}#WithProbe(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#UpdateDefinition#IWithProbe{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}#WithProbe(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: IWithProbe<IUpdate>.WithProbe(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProbe<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithProbe(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProbe<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithProbe
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
    startLine: 247
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nAssociates the specified existing HTTP or TCP probe of this load balancer with the load balancing rule.\n"
  example: []
  syntax:
    content: IWithBackend<IUpdate> IWithProbe<IUpdate>.WithProbe(string name)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProbe<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithProbe(name As String) As IWithBackend(Of IUpdate) Implements IWithProbe(Of IUpdate).WithProbe
    parameters:
    - id: name
      type: System.String
      description: name the name of an existing HTTP or TCP probe
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProbe{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}.WithProbe(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProbe<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithProbe(String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#Update#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Update#IUpdate}#WithFloatingIpEnabled
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#Update#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Update#IUpdate}#WithFloatingIpEnabled
  id: Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#Update#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Update#IUpdate}#WithFloatingIpEnabled
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: IWithFloatingIp<IUpdate>.WithFloatingIpEnabled()
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate>.WithFloatingIpEnabled()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate>.WithFloatingIpEnabled
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
    startLine: 255
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nEnables floating IP support.\n"
  example: []
  syntax:
    content: IUpdate IWithFloatingIp<IUpdate>.WithFloatingIpEnabled()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate>.WithFloatingIpEnabled As IUpdate Implements IWithFloatingIp(Of IUpdate).WithFloatingIpEnabled
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate}.WithFloatingIpEnabled
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate>.WithFloatingIpEnabled()
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#Update#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Update#IUpdate}#WithFloatingIp(System.Boolean)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#Update#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Update#IUpdate}#WithFloatingIp(System.Boolean)
  id: Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#Update#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Update#IUpdate}#WithFloatingIp(System.Boolean)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: IWithFloatingIp<IUpdate>.WithFloatingIp(Boolean)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate>.WithFloatingIp(System.Boolean)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate>.WithFloatingIp
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
    startLine: 264
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSets the floating IP enablement.\n"
  example: []
  syntax:
    content: IUpdate IWithFloatingIp<IUpdate>.WithFloatingIp(bool enabled)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate>.WithFloatingIp(enabled As Boolean) As IUpdate Implements IWithFloatingIp(Of IUpdate).WithFloatingIp
    parameters:
    - id: enabled
      type: System.Boolean
      description: enabled true if floating IP should be enabled
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate}.WithFloatingIp(System.Boolean)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate>.WithFloatingIp(Boolean)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#Update#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Update#IUpdate}#WithFloatingIpDisabled
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#Update#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Update#IUpdate}#WithFloatingIpDisabled
  id: Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#Update#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Update#IUpdate}#WithFloatingIpDisabled
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: IWithFloatingIp<IUpdate>.WithFloatingIpDisabled()
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate>.WithFloatingIpDisabled()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate>.WithFloatingIpDisabled
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
    startLine: 272
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nDisables floating IP support.\n"
  example: []
  syntax:
    content: IUpdate IWithFloatingIp<IUpdate>.WithFloatingIpDisabled()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate>.WithFloatingIpDisabled As IUpdate Implements IWithFloatingIp(Of IUpdate).WithFloatingIpDisabled
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate}.WithFloatingIpDisabled
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate>.WithFloatingIpDisabled()
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#Definition#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRuleOrCreate}}#WithFloatingIpEnabled
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#Definition#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRuleOrCreate}}#WithFloatingIpEnabled
  id: Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#Definition#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRuleOrCreate}}#WithFloatingIpEnabled
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: IWithFloatingIp<IWithAttach<IWithLoadBalancingRuleOrCreate>>.WithFloatingIpEnabled()
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>>.WithFloatingIpEnabled()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>>.WithFloatingIpEnabled
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
    startLine: 280
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nEnables floating IP support.\n"
  example: []
  syntax:
    content: IWithAttach<IWithLoadBalancingRuleOrCreate> IWithFloatingIp<IWithAttach<IWithLoadBalancingRuleOrCreate>>.WithFloatingIpEnabled()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>>.WithFloatingIpEnabled As IWithAttach(Of IWithLoadBalancingRuleOrCreate) Implements IWithFloatingIp(Of IWithAttach(Of IWithLoadBalancingRuleOrCreate)).WithFloatingIpEnabled
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}}.WithFloatingIpEnabled
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>>.WithFloatingIpEnabled()
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#Definition#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRuleOrCreate}}#WithFloatingIp(System.Boolean)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#Definition#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRuleOrCreate}}#WithFloatingIp(System.Boolean)
  id: Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#Definition#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRuleOrCreate}}#WithFloatingIp(System.Boolean)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: IWithFloatingIp<IWithAttach<IWithLoadBalancingRuleOrCreate>>.WithFloatingIp(Boolean)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>>.WithFloatingIp(System.Boolean)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>>.WithFloatingIp
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
    startLine: 289
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSets the floating IP enablement.\n"
  example: []
  syntax:
    content: IWithAttach<IWithLoadBalancingRuleOrCreate> IWithFloatingIp<IWithAttach<IWithLoadBalancingRuleOrCreate>>.WithFloatingIp(bool enabled)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>>.WithFloatingIp(enabled As Boolean) As IWithAttach(Of IWithLoadBalancingRuleOrCreate) Implements IWithFloatingIp(Of IWithAttach(Of IWithLoadBalancingRuleOrCreate)).WithFloatingIp
    parameters:
    - id: enabled
      type: System.Boolean
      description: enabled true if floating IP should be enabled
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}}.WithFloatingIp(System.Boolean)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>>.WithFloatingIp(Boolean)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#Definition#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRuleOrCreate}}#WithFloatingIpDisabled
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#Definition#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRuleOrCreate}}#WithFloatingIpDisabled
  id: Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#Definition#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRuleOrCreate}}#WithFloatingIpDisabled
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: IWithFloatingIp<IWithAttach<IWithLoadBalancingRuleOrCreate>>.WithFloatingIpDisabled()
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>>.WithFloatingIpDisabled()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>>.WithFloatingIpDisabled
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
    startLine: 297
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nDisables floating IP support.\n"
  example: []
  syntax:
    content: IWithAttach<IWithLoadBalancingRuleOrCreate> IWithFloatingIp<IWithAttach<IWithLoadBalancingRuleOrCreate>>.WithFloatingIpDisabled()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>>.WithFloatingIpDisabled As IWithAttach(Of IWithLoadBalancingRuleOrCreate) Implements IWithFloatingIp(Of IWithAttach(Of IWithLoadBalancingRuleOrCreate)).WithFloatingIpDisabled
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}}.WithFloatingIpDisabled
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>>.WithFloatingIpDisabled()
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#UpdateDefinition#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithFloatingIpEnabled
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#UpdateDefinition#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithFloatingIpEnabled
  id: Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#UpdateDefinition#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithFloatingIpEnabled
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: IWithFloatingIp<IWithAttach<IUpdate>>.WithFloatingIpEnabled()
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFloatingIpEnabled()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFloatingIpEnabled
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
    startLine: 305
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nEnables floating IP support.\n"
  example: []
  syntax:
    content: IWithAttach<IUpdate> IWithFloatingIp<IWithAttach<IUpdate>>.WithFloatingIpEnabled()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFloatingIpEnabled As IWithAttach(Of IUpdate) Implements IWithFloatingIp(Of IWithAttach(Of IUpdate)).WithFloatingIpEnabled
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}.WithFloatingIpEnabled
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFloatingIpEnabled()
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#UpdateDefinition#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithFloatingIp(System.Boolean)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#UpdateDefinition#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithFloatingIp(System.Boolean)
  id: Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#UpdateDefinition#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithFloatingIp(System.Boolean)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: IWithFloatingIp<IWithAttach<IUpdate>>.WithFloatingIp(Boolean)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFloatingIp(System.Boolean)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFloatingIp
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
    startLine: 314
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSets the floating IP enablement.\n"
  example: []
  syntax:
    content: IWithAttach<IUpdate> IWithFloatingIp<IWithAttach<IUpdate>>.WithFloatingIp(bool enabled)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFloatingIp(enabled As Boolean) As IWithAttach(Of IUpdate) Implements IWithFloatingIp(Of IWithAttach(Of IUpdate)).WithFloatingIp
    parameters:
    - id: enabled
      type: System.Boolean
      description: enabled true if floating IP should be enabled
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}.WithFloatingIp(System.Boolean)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFloatingIp(Boolean)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#UpdateDefinition#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithFloatingIpDisabled
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#UpdateDefinition#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithFloatingIpDisabled
  id: Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#UpdateDefinition#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithFloatingIpDisabled
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: IWithFloatingIp<IWithAttach<IUpdate>>.WithFloatingIpDisabled()
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFloatingIpDisabled()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFloatingIpDisabled
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
    startLine: 322
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nDisables floating IP support.\n"
  example: []
  syntax:
    content: IWithAttach<IUpdate> IWithFloatingIp<IWithAttach<IUpdate>>.WithFloatingIpDisabled()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFloatingIpDisabled As IWithAttach(Of IUpdate) Implements IWithFloatingIp(Of IWithAttach(Of IUpdate)).WithFloatingIpDisabled
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}.WithFloatingIpDisabled
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFloatingIpDisabled()
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFrontend#Update#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Update#IUpdate}#WithFrontend(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFrontend#Update#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Update#IUpdate}#WithFrontend(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#HasFrontend#Update#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Update#IUpdate}#WithFrontend(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: IWithFrontend<IUpdate>.WithFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate>.WithFrontend(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate>.WithFrontend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
    startLine: 331
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSpecifies the frontend.\n"
  example: []
  syntax:
    content: IUpdate IWithFrontend<IUpdate>.WithFrontend(string frontendName)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate>.WithFrontend(frontendName As String) As IUpdate Implements IWithFrontend(Of IUpdate).WithFrontend
    parameters:
    - id: frontendName
      type: System.String
      description: frontendName an existing frontend name from this load balancer
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
      description: the next stage of the update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate}.WithFrontend(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate>.WithFrontend(String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFrontend#Definition#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Definition#IWithFrontendPort{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRuleOrCreate}}#WithFrontend(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFrontend#Definition#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Definition#IWithFrontendPort{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRuleOrCreate}}#WithFrontend(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#HasFrontend#Definition#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Definition#IWithFrontendPort{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRuleOrCreate}}#WithFrontend(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: IWithFrontend<IWithFrontendPort<IWithLoadBalancingRuleOrCreate>>.WithFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>>.WithFrontend(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>>.WithFrontend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
    startLine: 340
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSpecifies the frontend to associate.\n"
  example: []
  syntax:
    content: IWithFrontendPort<IWithLoadBalancingRuleOrCreate> IWithFrontend<IWithFrontendPort<IWithLoadBalancingRuleOrCreate>>.WithFrontend(string frontendName)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>>.WithFrontend(frontendName As String) As IWithFrontendPort(Of IWithLoadBalancingRuleOrCreate) Implements IWithFrontend(Of IWithFrontendPort(Of IWithLoadBalancingRuleOrCreate)).WithFrontend
    parameters:
    - id: frontendName
      type: System.String
      description: frontendName an existing frontend name on this load balancer
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}}.WithFrontend(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>>.WithFrontend(String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFrontend#UpdateDefinition#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#UpdateDefinition#IWithFrontendPort{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithFrontend(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFrontend#UpdateDefinition#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#UpdateDefinition#IWithFrontendPort{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithFrontend(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#HasFrontend#UpdateDefinition#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#UpdateDefinition#IWithFrontendPort{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithFrontend(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: IWithFrontend<IWithFrontendPort<IUpdate>>.WithFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFrontend(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFrontend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
    startLine: 349
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSpecifies the frontend to associate.\n"
  example: []
  syntax:
    content: IWithFrontendPort<IUpdate> IWithFrontend<IWithFrontendPort<IUpdate>>.WithFrontend(string frontendName)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFrontend(frontendName As String) As IWithFrontendPort(Of IUpdate) Implements IWithFrontend(Of IWithFrontendPort(Of IUpdate)).WithFrontend
    parameters:
    - id: frontendName
      type: System.String
      description: frontendName an existing frontend name on this load balancer
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}.WithFrontend(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFrontend(String)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#IHasBackendPort#BackendPort
  commentId: P:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#IHasBackendPort#BackendPort
  id: Microsoft#Azure#Management#Fluent#Network#IHasBackendPort#BackendPort
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: IHasBackendPort.BackendPort
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft.Azure.Management.Fluent.Network.IHasBackendPort.BackendPort
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.IHasBackendPort.BackendPort
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
    startLine: 354
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: int ? IHasBackendPort.BackendPort { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.Azure.Management.Fluent.Network.IHasBackendPort.BackendPort As Integer? Implements IHasBackendPort.BackendPort
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: the backend port number the network traffic is sent to
  implements:
  - Microsoft.Azure.Management.Fluent.Network.IHasBackendPort.BackendPort
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.Azure.Management.Fluent.Network.IHasBackendPort.BackendPort
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Update#IWithIdleTimeoutInMinutes#WithIdleTimeoutInMinutes(System.Int32)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Update#IWithIdleTimeoutInMinutes#WithIdleTimeoutInMinutes(System.Int32)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Update#IWithIdleTimeoutInMinutes#WithIdleTimeoutInMinutes(System.Int32)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: IWithIdleTimeoutInMinutes.WithIdleTimeoutInMinutes(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithIdleTimeoutInMinutes.WithIdleTimeoutInMinutes(System.Int32)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithIdleTimeoutInMinutes.WithIdleTimeoutInMinutes
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
    startLine: 366
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSpecifies the number of minutes before an idle connection is closed.\n"
  example: []
  syntax:
    content: IUpdate IWithIdleTimeoutInMinutes.WithIdleTimeoutInMinutes(int minutes)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithIdleTimeoutInMinutes.WithIdleTimeoutInMinutes(minutes As Integer) As IUpdate Implements IWithIdleTimeoutInMinutes.WithIdleTimeoutInMinutes
    parameters:
    - id: minutes
      type: System.Int32
      description: minutes the desired number of minutes
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
      description: the next stage of the update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithIdleTimeoutInMinutes.WithIdleTimeoutInMinutes(System.Int32)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithIdleTimeoutInMinutes.WithIdleTimeoutInMinutes(Int32)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#IHasProtocol{System#String}#Protocol
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#IHasProtocol{System#String}#Protocol
  id: Microsoft#Azure#Management#Fluent#Network#IHasProtocol{System#String}#Protocol
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: IHasProtocol<String>.Protocol()
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft.Azure.Management.Fluent.Network.IHasProtocol<System.String>.Protocol()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.IHasProtocol<System.String>.Protocol
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
    startLine: 371
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: string IHasProtocol<string>.Protocol()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.IHasProtocol<System.String>.Protocol As String Implements IHasProtocol(Of String).Protocol
    return:
      type: System.String
      description: the protocol
  implements:
  - Microsoft.Azure.Management.Fluent.Network.IHasProtocol{System.String}.Protocol
  name.vb: Microsoft.Azure.Management.Fluent.Network.IHasProtocol<System.String>.Protocol()
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Definition#IWithFrontendPort{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRuleOrCreate}#WithFrontendPort(System.Int32)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Definition#IWithFrontendPort{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRuleOrCreate}#WithFrontendPort(System.Int32)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#Definition#IWithFrontendPort{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithLoadBalancingRuleOrCreate}#WithFrontendPort(System.Int32)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: IWithFrontendPort<IWithLoadBalancingRuleOrCreate>.WithFrontendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>.WithFrontendPort(System.Int32)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>.WithFrontendPort
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
    startLine: 380
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSpecifies the frontend port to load balance.\n"
  example: []
  syntax:
    content: IWithProbe<IWithLoadBalancingRuleOrCreate> IWithFrontendPort<IWithLoadBalancingRuleOrCreate>.WithFrontendPort(int port)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>.WithFrontendPort(port As Integer) As IWithProbe(Of IWithLoadBalancingRuleOrCreate) Implements IWithFrontendPort(Of IWithLoadBalancingRuleOrCreate).WithFrontendPort
    parameters:
    - id: port
      type: System.Int32
      description: port a port number
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProbe{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}.WithFrontendPort(System.Int32)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>.WithFrontendPort(Int32)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#UpdateDefinition#IWithFrontendPort{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}#WithFrontendPort(System.Int32)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#UpdateDefinition#IWithFrontendPort{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}#WithFrontendPort(System.Int32)
  id: Microsoft#Azure#Management#Fluent#Network#LoadBalancingRule#UpdateDefinition#IWithFrontendPort{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}#WithFrontendPort(System.Int32)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  langs:
  - csharp
  - vb
  name: IWithFrontendPort<IUpdate>.WithFrontendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl.Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithFrontendPort(System.Int32)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithFrontendPort
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/LoadBalancingRuleImpl.cs
    startLine: 389
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSpecifies the frontend port to load balance.\n"
  example: []
  syntax:
    content: IWithProbe<IUpdate> IWithFrontendPort<IUpdate>.WithFrontendPort(int port)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithFrontendPort(port As Integer) As IWithProbe(Of IUpdate) Implements IWithFrontendPort(Of IUpdate).WithFrontendPort
    parameters:
    - id: port
      type: System.Int32
      description: port a port number
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProbe{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}.WithFrontendPort(System.Int32)
  name.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithFrontendPort(Int32)
references:
- uid: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network
  fullName: Microsoft.Azure.Management.Fluent.Network
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: ILoadBalancingRule
  fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule
- uid: IWrapper{Microsoft.Azure.Management.Network.Models.LoadBalancingRuleInner}
  definition: IWrapper`1
  name: IWrapper<LoadBalancingRuleInner>
  fullName: IWrapper<Microsoft.Azure.Management.Network.Models.LoadBalancingRuleInner>
  fullname.vb: IWrapper(Of Microsoft.Azure.Management.Network.Models.LoadBalancingRuleInner)
  name.vb: IWrapper(Of LoadBalancingRuleInner)
  spec.csharp:
  - uid: IWrapper`1
    name: IWrapper
    fullName: IWrapper
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Network.Models.LoadBalancingRuleInner
    name: LoadBalancingRuleInner
    fullName: Microsoft.Azure.Management.Network.Models.LoadBalancingRuleInner
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IWrapper`1
    name: IWrapper
    fullName: IWrapper
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Network.Models.LoadBalancingRuleInner
    name: LoadBalancingRuleInner
    fullName: Microsoft.Azure.Management.Network.Models.LoadBalancingRuleInner
  - name: )
    fullName: )
- uid: IChildResource{Microsoft.Azure.Management.Fluent.Network.ILoadBalancer}
  definition: IChildResource`1
  name: IChildResource<ILoadBalancer>
  fullName: IChildResource<Microsoft.Azure.Management.Fluent.Network.ILoadBalancer>
  fullname.vb: IChildResource(Of Microsoft.Azure.Management.Fluent.Network.ILoadBalancer)
  name.vb: IChildResource(Of ILoadBalancer)
  spec.csharp:
  - uid: IChildResource`1
    name: IChildResource
    fullName: IChildResource
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    name: ILoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IChildResource`1
    name: IChildResource
    fullName: IChildResource
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    name: ILoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.IHasBackendPort
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: IHasBackendPort
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasBackendPort
- uid: Microsoft.Azure.Management.Fluent.Network.IHasFrontend
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: IHasFrontend
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasFrontend
- uid: Microsoft.Azure.Management.Fluent.Network.IHasFloatingIp
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: IHasFloatingIp
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasFloatingIp
- uid: Microsoft.Azure.Management.Fluent.Network.IHasProtocol{System.String}
  parent: Microsoft.Azure.Management.Fluent.Network
  definition: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1
  name: IHasProtocol<String>
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasProtocol<System.String>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.IHasProtocol(Of System.String)
  name.vb: IHasProtocol(Of String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1
    name: IHasProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasProtocol
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1
    name: IHasProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasProtocol
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IDefinition{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IDefinition`1
  name: IDefinition<IWithLoadBalancingRuleOrCreate>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IDefinition<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IDefinition(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate)
  name.vb: IDefinition(Of IWithLoadBalancingRuleOrCreate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IDefinition`1
    name: IDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IDefinition
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
    name: IWithLoadBalancingRuleOrCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IDefinition`1
    name: IDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IDefinition
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
    name: IWithLoadBalancingRuleOrCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IBlank`1
  name: IBlank<IWithLoadBalancingRuleOrCreate>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IBlank<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IBlank(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate)
  name.vb: IBlank(Of IWithLoadBalancingRuleOrCreate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IBlank
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
    name: IWithLoadBalancingRuleOrCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
    name: IWithLoadBalancingRuleOrCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProtocol`1
  name: IWithProtocol<IWithLoadBalancingRuleOrCreate>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProtocol(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate)
  name.vb: IWithProtocol(Of IWithLoadBalancingRuleOrCreate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProtocol`1
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProtocol
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
    name: IWithLoadBalancingRuleOrCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProtocol`1
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProtocol
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
    name: IWithLoadBalancingRuleOrCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate},System.String}
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2
  name: IWithProtocol<IWithFrontend<IWithLoadBalancingRuleOrCreate>, String>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>, System.String>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate), System.String)
  name.vb: IWithProtocol(Of IWithFrontend(Of IWithLoadBalancingRuleOrCreate), String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontend
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
    name: IWithLoadBalancingRuleOrCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontend
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
    name: IWithLoadBalancingRuleOrCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort`1
  name: IWithFrontendPort<IWithLoadBalancingRuleOrCreate>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate)
  name.vb: IWithFrontendPort(Of IWithLoadBalancingRuleOrCreate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort`1
    name: IWithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
    name: IWithLoadBalancingRuleOrCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort`1
    name: IWithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
    name: IWithLoadBalancingRuleOrCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontend`1
  name: IWithFrontend<IWithLoadBalancingRuleOrCreate>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate)
  name.vb: IWithFrontend(Of IWithLoadBalancingRuleOrCreate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontend
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
    name: IWithLoadBalancingRuleOrCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontend
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
    name: IWithLoadBalancingRuleOrCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}}
  parent: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1
  name: IWithFrontend<IWithFrontendPort<IWithLoadBalancingRuleOrCreate>>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate))
  name.vb: IWithFrontend(Of IWithFrontendPort(Of IWithLoadBalancingRuleOrCreate))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort`1
    name: IWithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
    name: IWithLoadBalancingRuleOrCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort`1
    name: IWithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
    name: IWithLoadBalancingRuleOrCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProbe{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProbe`1
  name: IWithProbe<IWithLoadBalancingRuleOrCreate>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProbe<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProbe(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate)
  name.vb: IWithProbe(Of IWithLoadBalancingRuleOrCreate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProbe`1
    name: IWithProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProbe
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
    name: IWithLoadBalancingRuleOrCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProbe`1
    name: IWithProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProbe
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
    name: IWithLoadBalancingRuleOrCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackend`1
  name: IWithBackend<IWithLoadBalancingRuleOrCreate>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackend(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate)
  name.vb: IWithBackend(Of IWithLoadBalancingRuleOrCreate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackend`1
    name: IWithBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackend
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
    name: IWithLoadBalancingRuleOrCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackend`1
    name: IWithBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackend
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
    name: IWithLoadBalancingRuleOrCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackendPort`1
  name: IWithBackendPort<IWithLoadBalancingRuleOrCreate>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackendPort(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate)
  name.vb: IWithBackendPort(Of IWithLoadBalancingRuleOrCreate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackendPort
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
    name: IWithLoadBalancingRuleOrCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackendPort
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
    name: IWithLoadBalancingRuleOrCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}}
  parent: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1
  name: IWithBackendPort<IWithAttach<IWithLoadBalancingRuleOrCreate>>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate))
  name.vb: IWithBackendPort(Of IWithAttach(Of IWithLoadBalancingRuleOrCreate))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
    name: IWithLoadBalancingRuleOrCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
    name: IWithLoadBalancingRuleOrCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach`1
  name: IWithAttach<IWithLoadBalancingRuleOrCreate>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate)
  name.vb: IWithAttach(Of IWithLoadBalancingRuleOrCreate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
    name: IWithLoadBalancingRuleOrCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
    name: IWithLoadBalancingRuleOrCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
  - name: )
    fullName: )
- uid: IInDefinition{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}
  definition: IInDefinition`1
  name: IInDefinition<IWithLoadBalancingRuleOrCreate>
  fullName: IInDefinition<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>
  fullname.vb: IInDefinition(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate)
  name.vb: IInDefinition(Of IWithLoadBalancingRuleOrCreate)
  spec.csharp:
  - uid: IInDefinition`1
    name: IInDefinition
    fullName: IInDefinition
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
    name: IWithLoadBalancingRuleOrCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IInDefinition`1
    name: IInDefinition
    fullName: IInDefinition
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
    name: IWithLoadBalancingRuleOrCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFloatingIp`1
  name: IWithFloatingIp<IWithLoadBalancingRuleOrCreate>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate)
  name.vb: IWithFloatingIp(Of IWithLoadBalancingRuleOrCreate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFloatingIp`1
    name: IWithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFloatingIp
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
    name: IWithLoadBalancingRuleOrCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFloatingIp`1
    name: IWithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFloatingIp
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
    name: IWithLoadBalancingRuleOrCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}}
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1
  name: IWithFloatingIp<IWithAttach<IWithLoadBalancingRuleOrCreate>>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate))
  name.vb: IWithFloatingIp(Of IWithAttach(Of IWithLoadBalancingRuleOrCreate))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1
    name: IWithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
    name: IWithLoadBalancingRuleOrCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1
    name: IWithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
    name: IWithLoadBalancingRuleOrCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithIdleTimeoutInMinutes{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithIdleTimeoutInMinutes`1
  name: IWithIdleTimeoutInMinutes<IWithLoadBalancingRuleOrCreate>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithIdleTimeoutInMinutes<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithIdleTimeoutInMinutes(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate)
  name.vb: IWithIdleTimeoutInMinutes(Of IWithLoadBalancingRuleOrCreate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithIdleTimeoutInMinutes`1
    name: IWithIdleTimeoutInMinutes
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithIdleTimeoutInMinutes
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
    name: IWithLoadBalancingRuleOrCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithIdleTimeoutInMinutes`1
    name: IWithIdleTimeoutInMinutes
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithIdleTimeoutInMinutes
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
    name: IWithLoadBalancingRuleOrCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithLoadDistribution{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithLoadDistribution`1
  name: IWithLoadDistribution<IWithLoadBalancingRuleOrCreate>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithLoadDistribution<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithLoadDistribution(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate)
  name.vb: IWithLoadDistribution(Of IWithLoadBalancingRuleOrCreate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithLoadDistribution`1
    name: IWithLoadDistribution
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithLoadDistribution
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
    name: IWithLoadBalancingRuleOrCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithLoadDistribution`1
    name: IWithLoadDistribution
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithLoadDistribution
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
    name: IWithLoadBalancingRuleOrCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IUpdateDefinition{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IUpdateDefinition`1
  name: IUpdateDefinition<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IUpdateDefinition<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IUpdateDefinition(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IUpdateDefinition(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IUpdateDefinition`1
    name: IUpdateDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IUpdateDefinition
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IUpdateDefinition`1
    name: IUpdateDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IUpdateDefinition
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IBlank`1
  name: IBlank<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IBlank<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IBlank(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IBlank(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IBlank
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProtocol`1
  name: IWithProtocol<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProtocol(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IWithProtocol(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProtocol`1
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProtocol
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProtocol`1
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProtocol
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate},System.String}
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol`2
  name: IWithProtocol<IWithFrontend<IUpdate>, String>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>, System.String>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate), System.String)
  name.vb: IWithProtocol(Of IWithFrontend(Of IUpdate), String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontend
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontend
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort`1
  name: IWithFrontendPort<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IWithFrontendPort(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort`1
    name: IWithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort`1
    name: IWithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontend`1
  name: IWithFrontend<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IWithFrontend(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontend
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontend
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}
  parent: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend`1
  name: IWithFrontend<IWithFrontendPort<IUpdate>>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate))
  name.vb: IWithFrontend(Of IWithFrontendPort(Of IUpdate))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort`1
    name: IWithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort`1
    name: IWithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProbe{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProbe`1
  name: IWithProbe<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProbe<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProbe(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IWithProbe(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProbe`1
    name: IWithProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProbe
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProbe`1
    name: IWithProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProbe
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackend`1
  name: IWithBackend<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackend(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IWithBackend(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackend`1
    name: IWithBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackend
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackend`1
    name: IWithBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackend
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackendPort`1
  name: IWithBackendPort<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackendPort(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IWithBackendPort(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackendPort
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackendPort
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}
  parent: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort`1
  name: IWithBackendPort<IWithAttach<IUpdate>>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate))
  name.vb: IWithBackendPort(Of IWithAttach(Of IUpdate))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach`1
  name: IWithAttach<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IWithAttach(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: IInUpdate{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  definition: IInUpdate`1
  name: IInUpdate<IUpdate>
  fullName: IInUpdate<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: IInUpdate(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IInUpdate(Of IUpdate)
  spec.csharp:
  - uid: IInUpdate`1
    name: IInUpdate
    fullName: IInUpdate
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IInUpdate`1
    name: IInUpdate
    fullName: IInUpdate
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFloatingIp`1
  name: IWithFloatingIp<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IWithFloatingIp(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFloatingIp`1
    name: IWithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFloatingIp
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFloatingIp`1
    name: IWithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFloatingIp
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1
  name: IWithFloatingIp<IWithAttach<IUpdate>>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate))
  name.vb: IWithFloatingIp(Of IWithAttach(Of IUpdate))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1
    name: IWithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1
    name: IWithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithIdleTimeoutInMinutes{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithIdleTimeoutInMinutes`1
  name: IWithIdleTimeoutInMinutes<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithIdleTimeoutInMinutes<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithIdleTimeoutInMinutes(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IWithIdleTimeoutInMinutes(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithIdleTimeoutInMinutes`1
    name: IWithIdleTimeoutInMinutes
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithIdleTimeoutInMinutes
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithIdleTimeoutInMinutes`1
    name: IWithIdleTimeoutInMinutes
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithIdleTimeoutInMinutes
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithLoadDistribution{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithLoadDistribution`1
  name: IWithLoadDistribution<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithLoadDistribution<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithLoadDistribution(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IWithLoadDistribution(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithLoadDistribution`1
    name: IWithLoadDistribution
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithLoadDistribution
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithLoadDistribution`1
    name: IWithLoadDistribution
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithLoadDistribution
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update
  isExternal: false
  name: IUpdate
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
- uid: ISettable{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  definition: ISettable`1
  name: ISettable<IUpdate>
  fullName: ISettable<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: ISettable(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: ISettable(Of IUpdate)
  spec.csharp:
  - uid: ISettable`1
    name: ISettable
    fullName: ISettable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: ISettable`1
    name: ISettable
    fullName: ISettable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithFrontendPort
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update
  isExternal: false
  name: IWithFrontendPort
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithFrontendPort
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithFrontend
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update
  isExternal: false
  name: IWithFrontend
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithFrontend
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update
  definition: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1
  name: IWithFrontend<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate)
  name.vb: IWithFrontend(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithProtocol
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update
  isExternal: false
  name: IWithProtocol
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithProtocol
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate,System.String}
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update
  definition: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2
  name: IWithProtocol<IUpdate, String>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate, System.String>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate, System.String)
  name.vb: IWithProtocol(Of IUpdate, String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithBackendPort
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update
  isExternal: false
  name: IWithBackendPort
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithBackendPort
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update
  definition: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1
  name: IWithBackendPort<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate)
  name.vb: IWithBackendPort(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithFloatingIp
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update
  isExternal: false
  name: IWithFloatingIp
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithFloatingIp
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update
  definition: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1
  name: IWithFloatingIp<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate)
  name.vb: IWithFloatingIp(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1
    name: IWithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1
    name: IWithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithIdleTimeoutInMinutes
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update
  isExternal: false
  name: IWithIdleTimeoutInMinutes
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithIdleTimeoutInMinutes
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithLoadDistribution
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update
  isExternal: false
  name: IWithLoadDistribution
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithLoadDistribution
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: IWrapper`1
  isExternal: true
  name: IWrapper<>
  fullName: IWrapper<>
  fullname.vb: IWrapper(Of )
  name.vb: IWrapper(Of )
  spec.csharp:
  - uid: IWrapper`1
    name: IWrapper
    fullName: IWrapper
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IWrapper`1
    name: IWrapper
    fullName: IWrapper
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: IChildResource`1
  isExternal: true
  name: IChildResource<>
  fullName: IChildResource<>
  fullname.vb: IChildResource(Of )
  name.vb: IChildResource(Of )
  spec.csharp:
  - uid: IChildResource`1
    name: IChildResource
    fullName: IChildResource
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IChildResource`1
    name: IChildResource
    fullName: IChildResource
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: IHasProtocol<ProtocolT>
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasProtocol<ProtocolT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.IHasProtocol(Of ProtocolT)
  name.vb: IHasProtocol(Of ProtocolT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1
    name: IHasProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasProtocol
  - name: <
    fullName: <
  - name: ProtocolT
    fullName: ProtocolT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1
    name: IHasProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasProtocol
  - name: '(Of '
    fullName: '(Of '
  - name: ProtocolT
    fullName: ProtocolT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IDefinition`1
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition
  isExternal: false
  name: IDefinition<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IDefinition<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IDefinition(Of ParentT)
  name.vb: IDefinition(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IDefinition`1
    name: IDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IDefinition
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IDefinition`1
    name: IDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IDefinition
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IBlank`1
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition
  isExternal: false
  name: IBlank<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IBlank<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IBlank(Of ParentT)
  name.vb: IBlank(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IBlank
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProtocol`1
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition
  isExternal: false
  name: IWithProtocol<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProtocol<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProtocol(Of ParentT)
  name.vb: IWithProtocol(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProtocol`1
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProtocol
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProtocol`1
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProtocol
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition
  isExternal: false
  name: IWithProtocol<ReturnT, ProtocolT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<ReturnT, ProtocolT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol(Of ReturnT, ProtocolT)
  name.vb: IWithProtocol(Of ReturnT, ProtocolT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: ', '
    fullName: ', '
  - name: ProtocolT
    fullName: ProtocolT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: ', '
    fullName: ', '
  - name: ProtocolT
    fullName: ProtocolT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort`1
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition
  isExternal: false
  name: IWithFrontendPort<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort(Of ParentT)
  name.vb: IWithFrontendPort(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort`1
    name: IWithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort`1
    name: IWithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontend`1
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition
  isExternal: false
  name: IWithFrontend<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontend<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontend(Of ParentT)
  name.vb: IWithFrontend(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontend
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontend
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition
  isExternal: false
  name: IWithFrontend<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend(Of ReturnT)
  name.vb: IWithFrontend(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProbe`1
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition
  isExternal: false
  name: IWithProbe<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProbe<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProbe(Of ParentT)
  name.vb: IWithProbe(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProbe`1
    name: IWithProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProbe
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProbe`1
    name: IWithProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProbe
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackend`1
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition
  isExternal: false
  name: IWithBackend<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackend<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackend(Of ParentT)
  name.vb: IWithBackend(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackend`1
    name: IWithBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackend
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackend`1
    name: IWithBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackend
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackendPort`1
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition
  isExternal: false
  name: IWithBackendPort<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackendPort<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackendPort(Of ParentT)
  name.vb: IWithBackendPort(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackendPort
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackendPort
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition
  isExternal: false
  name: IWithBackendPort<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort(Of ReturnT)
  name.vb: IWithBackendPort(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach`1
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition
  isExternal: false
  name: IWithAttach<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach(Of ParentT)
  name.vb: IWithAttach(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: IInDefinition`1
  isExternal: true
  name: IInDefinition<>
  fullName: IInDefinition<>
  fullname.vb: IInDefinition(Of )
  name.vb: IInDefinition(Of )
  spec.csharp:
  - uid: IInDefinition`1
    name: IInDefinition
    fullName: IInDefinition
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IInDefinition`1
    name: IInDefinition
    fullName: IInDefinition
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFloatingIp`1
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition
  isExternal: false
  name: IWithFloatingIp<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFloatingIp<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFloatingIp(Of ParentT)
  name.vb: IWithFloatingIp(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFloatingIp`1
    name: IWithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFloatingIp
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFloatingIp`1
    name: IWithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFloatingIp
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition
  isExternal: false
  name: IWithFloatingIp<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp(Of ReturnT)
  name.vb: IWithFloatingIp(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1
    name: IWithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1
    name: IWithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithIdleTimeoutInMinutes`1
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition
  isExternal: false
  name: IWithIdleTimeoutInMinutes<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithIdleTimeoutInMinutes<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithIdleTimeoutInMinutes(Of ParentT)
  name.vb: IWithIdleTimeoutInMinutes(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithIdleTimeoutInMinutes`1
    name: IWithIdleTimeoutInMinutes
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithIdleTimeoutInMinutes
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithIdleTimeoutInMinutes`1
    name: IWithIdleTimeoutInMinutes
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithIdleTimeoutInMinutes
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithLoadDistribution`1
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition
  isExternal: false
  name: IWithLoadDistribution<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithLoadDistribution<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithLoadDistribution(Of ParentT)
  name.vb: IWithLoadDistribution(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithLoadDistribution`1
    name: IWithLoadDistribution
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithLoadDistribution
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithLoadDistribution`1
    name: IWithLoadDistribution
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithLoadDistribution
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IUpdateDefinition`1
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition
  isExternal: false
  name: IUpdateDefinition<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IUpdateDefinition<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IUpdateDefinition(Of ParentT)
  name.vb: IUpdateDefinition(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IUpdateDefinition`1
    name: IUpdateDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IUpdateDefinition
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IUpdateDefinition`1
    name: IUpdateDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IUpdateDefinition
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IBlank`1
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition
  isExternal: false
  name: IBlank<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IBlank<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IBlank(Of ParentT)
  name.vb: IBlank(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IBlank
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProtocol`1
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition
  isExternal: false
  name: IWithProtocol<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProtocol<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProtocol(Of ParentT)
  name.vb: IWithProtocol(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProtocol`1
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProtocol
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProtocol`1
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProtocol
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol`2
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition
  isExternal: false
  name: IWithProtocol<ReturnT, ProtocolT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol<ReturnT, ProtocolT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol(Of ReturnT, ProtocolT)
  name.vb: IWithProtocol(Of ReturnT, ProtocolT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: ', '
    fullName: ', '
  - name: ProtocolT
    fullName: ProtocolT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: ', '
    fullName: ', '
  - name: ProtocolT
    fullName: ProtocolT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort`1
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition
  isExternal: false
  name: IWithFrontendPort<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort(Of ParentT)
  name.vb: IWithFrontendPort(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort`1
    name: IWithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort`1
    name: IWithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontend`1
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition
  isExternal: false
  name: IWithFrontend<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontend<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontend(Of ParentT)
  name.vb: IWithFrontend(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontend
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontend
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition
  isExternal: false
  name: IWithFrontend<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend(Of ReturnT)
  name.vb: IWithFrontend(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProbe`1
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition
  isExternal: false
  name: IWithProbe<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProbe<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProbe(Of ParentT)
  name.vb: IWithProbe(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProbe`1
    name: IWithProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProbe
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProbe`1
    name: IWithProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProbe
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackend`1
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition
  isExternal: false
  name: IWithBackend<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackend<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackend(Of ParentT)
  name.vb: IWithBackend(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackend`1
    name: IWithBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackend
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackend`1
    name: IWithBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackend
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackendPort`1
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition
  isExternal: false
  name: IWithBackendPort<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackendPort<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackendPort(Of ParentT)
  name.vb: IWithBackendPort(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackendPort
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackendPort
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition
  isExternal: false
  name: IWithBackendPort<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort(Of ReturnT)
  name.vb: IWithBackendPort(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach`1
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition
  isExternal: false
  name: IWithAttach<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach(Of ParentT)
  name.vb: IWithAttach(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: IInUpdate`1
  isExternal: true
  name: IInUpdate<>
  fullName: IInUpdate<>
  fullname.vb: IInUpdate(Of )
  name.vb: IInUpdate(Of )
  spec.csharp:
  - uid: IInUpdate`1
    name: IInUpdate
    fullName: IInUpdate
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IInUpdate`1
    name: IInUpdate
    fullName: IInUpdate
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFloatingIp`1
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition
  isExternal: false
  name: IWithFloatingIp<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFloatingIp<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFloatingIp(Of ParentT)
  name.vb: IWithFloatingIp(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFloatingIp`1
    name: IWithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFloatingIp
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFloatingIp`1
    name: IWithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFloatingIp
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition
  isExternal: false
  name: IWithFloatingIp<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp(Of ReturnT)
  name.vb: IWithFloatingIp(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1
    name: IWithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1
    name: IWithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithIdleTimeoutInMinutes`1
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition
  isExternal: false
  name: IWithIdleTimeoutInMinutes<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithIdleTimeoutInMinutes<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithIdleTimeoutInMinutes(Of ParentT)
  name.vb: IWithIdleTimeoutInMinutes(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithIdleTimeoutInMinutes`1
    name: IWithIdleTimeoutInMinutes
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithIdleTimeoutInMinutes
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithIdleTimeoutInMinutes`1
    name: IWithIdleTimeoutInMinutes
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithIdleTimeoutInMinutes
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithLoadDistribution`1
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition
  isExternal: false
  name: IWithLoadDistribution<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithLoadDistribution<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithLoadDistribution(Of ParentT)
  name.vb: IWithLoadDistribution(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithLoadDistribution`1
    name: IWithLoadDistribution
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithLoadDistribution
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithLoadDistribution`1
    name: IWithLoadDistribution
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithLoadDistribution
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update
- uid: ISettable`1
  isExternal: true
  name: ISettable<>
  fullName: ISettable<>
  fullname.vb: ISettable(Of )
  name.vb: ISettable(Of )
  spec.csharp:
  - uid: ISettable`1
    name: ISettable
    fullName: ISettable
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: ISettable`1
    name: ISettable
    fullName: ISettable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update
  isExternal: false
  name: IWithFrontend<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend(Of ReturnT)
  name.vb: IWithFrontend(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update
  isExternal: false
  name: IWithProtocol<ReturnT, ProtocolT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol<ReturnT, ProtocolT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol(Of ReturnT, ProtocolT)
  name.vb: IWithProtocol(Of ReturnT, ProtocolT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: ', '
    fullName: ', '
  - name: ProtocolT
    fullName: ProtocolT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: ', '
    fullName: ', '
  - name: ProtocolT
    fullName: ProtocolT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update
  isExternal: false
  name: IWithBackendPort<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort(Of ReturnT)
  name.vb: IWithBackendPort(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update
  isExternal: false
  name: IWithFloatingIp<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp(Of ReturnT)
  name.vb: IWithFloatingIp(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1
    name: IWithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1
    name: IWithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: Microsoft.Azure.Management.Fluent.Network.IFrontend
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: IFrontend
  fullName: Microsoft.Azure.Management.Fluent.Network.IFrontend
- uid: Microsoft.Azure.Management.Fluent.Network.IBackend
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: IBackend
  fullName: Microsoft.Azure.Management.Fluent.Network.IBackend
- uid: Microsoft.Azure.Management.Fluent.Network.IProbe
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: IProbe
  fullName: Microsoft.Azure.Management.Fluent.Network.IProbe
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: LoadBalancingRuleImpl
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRuleImpl
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: LoadBalancerImpl
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithLoadDistribution{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}.WithLoadDistribution(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithLoadDistribution{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}
  definition: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithLoadDistribution`1.WithLoadDistribution(System.String)
  name: WithLoadDistribution(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithLoadDistribution<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>.WithLoadDistribution(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithLoadDistribution(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate).WithLoadDistribution(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithLoadDistribution`1.WithLoadDistribution(System.String)
    name: WithLoadDistribution
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithLoadDistribution<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>.WithLoadDistribution
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithLoadDistribution`1.WithLoadDistribution(System.String)
    name: WithLoadDistribution
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithLoadDistribution(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate).WithLoadDistribution
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithLoadDistribution`1.WithLoadDistribution(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithLoadDistribution`1
  isExternal: true
  name: WithLoadDistribution(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithLoadDistribution<ParentT>.WithLoadDistribution(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithLoadDistribution(Of ParentT).WithLoadDistribution(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithLoadDistribution`1.WithLoadDistribution(System.String)
    name: WithLoadDistribution
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithLoadDistribution<ParentT>.WithLoadDistribution
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithLoadDistribution`1.WithLoadDistribution(System.String)
    name: WithLoadDistribution
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithLoadDistribution(Of ParentT).WithLoadDistribution
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithLoadDistribution{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}.WithLoadDistribution(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithLoadDistribution{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  definition: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithLoadDistribution`1.WithLoadDistribution(System.String)
  name: WithLoadDistribution(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithLoadDistribution<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithLoadDistribution(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithLoadDistribution(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate).WithLoadDistribution(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithLoadDistribution`1.WithLoadDistribution(System.String)
    name: WithLoadDistribution
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithLoadDistribution<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithLoadDistribution
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithLoadDistribution`1.WithLoadDistribution(System.String)
    name: WithLoadDistribution
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithLoadDistribution(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate).WithLoadDistribution
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithLoadDistribution`1.WithLoadDistribution(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithLoadDistribution`1
  isExternal: true
  name: WithLoadDistribution(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithLoadDistribution<ParentT>.WithLoadDistribution(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithLoadDistribution(Of ParentT).WithLoadDistribution(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithLoadDistribution`1.WithLoadDistribution(System.String)
    name: WithLoadDistribution
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithLoadDistribution<ParentT>.WithLoadDistribution
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithLoadDistribution`1.WithLoadDistribution(System.String)
    name: WithLoadDistribution
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithLoadDistribution(Of ParentT).WithLoadDistribution
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate,System.String}.WithProtocol(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate,System.String}
  definition: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2.WithProtocol(`1)
  name: WithProtocol(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate, System.String>.WithProtocol(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate, System.String).WithProtocol(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate, System.String>.WithProtocol
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate, System.String).WithProtocol
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2.WithProtocol(`1)
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2
  isExternal: false
  name: WithProtocol(ProtocolT)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol<ReturnT, ProtocolT>.WithProtocol(ProtocolT)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol(Of ReturnT, ProtocolT).WithProtocol(ProtocolT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol<ReturnT, ProtocolT>.WithProtocol
  - name: (
    fullName: (
  - name: ProtocolT
    fullName: ProtocolT
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol(Of ReturnT, ProtocolT).WithProtocol
  - name: (
    fullName: (
  - name: ProtocolT
    fullName: ProtocolT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate},System.String}.WithProtocol(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate},System.String}
  definition: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2.WithProtocol(`1)
  name: WithProtocol(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>, System.String>.WithProtocol(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate), System.String).WithProtocol(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>, System.String>.WithProtocol
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate), System.String).WithProtocol
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2.WithProtocol(`1)
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2
  isExternal: false
  name: WithProtocol(ProtocolT)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<ReturnT, ProtocolT>.WithProtocol(ProtocolT)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol(Of ReturnT, ProtocolT).WithProtocol(ProtocolT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<ReturnT, ProtocolT>.WithProtocol
  - name: (
    fullName: (
  - name: ProtocolT
    fullName: ProtocolT
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol(Of ReturnT, ProtocolT).WithProtocol
  - name: (
    fullName: (
  - name: ProtocolT
    fullName: ProtocolT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate},System.String}.WithProtocol(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate},System.String}
  definition: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol`2.WithProtocol(`1)
  name: WithProtocol(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>, System.String>.WithProtocol(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate), System.String).WithProtocol(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>, System.String>.WithProtocol
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate), System.String).WithProtocol
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol`2.WithProtocol(`1)
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol`2
  isExternal: false
  name: WithProtocol(ProtocolT)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol<ReturnT, ProtocolT>.WithProtocol(ProtocolT)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol(Of ReturnT, ProtocolT).WithProtocol(ProtocolT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol<ReturnT, ProtocolT>.WithProtocol
  - name: (
    fullName: (
  - name: ProtocolT
    fullName: ProtocolT
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol(Of ReturnT, ProtocolT).WithProtocol
  - name: (
    fullName: (
  - name: ProtocolT
    fullName: ProtocolT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithLoadDistribution.WithLoadDistribution(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithLoadDistribution
  isExternal: true
  name: WithLoadDistribution(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithLoadDistribution.WithLoadDistribution(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithLoadDistribution.WithLoadDistribution(System.String)
    name: WithLoadDistribution
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithLoadDistribution.WithLoadDistribution
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithLoadDistribution.WithLoadDistribution(System.String)
    name: WithLoadDistribution
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithLoadDistribution.WithLoadDistribution
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.IHasFloatingIp.FloatingIpEnabled
  parent: Microsoft.Azure.Management.Fluent.Network.IHasFloatingIp
  isExternal: false
  name: FloatingIpEnabled
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasFloatingIp.FloatingIpEnabled
- uid: System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.IHasFrontend.Frontend
  parent: Microsoft.Azure.Management.Fluent.Network.IHasFrontend
  isExternal: false
  name: Frontend()
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasFrontend.Frontend()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasFrontend.Frontend
    name: Frontend
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasFrontend.Frontend
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasFrontend.Frontend
    name: Frontend
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasFrontend.Frontend
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate}.WithBackendPort(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate}
  definition: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1.WithBackendPort(System.Int32)
  name: WithBackendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate>.WithBackendPort(System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate).WithBackendPort(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1.WithBackendPort(System.Int32)
    name: WithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate>.WithBackendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1.WithBackendPort(System.Int32)
    name: WithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate).WithBackendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1.WithBackendPort(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1
  isExternal: true
  name: WithBackendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort<ReturnT>.WithBackendPort(System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort(Of ReturnT).WithBackendPort(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1.WithBackendPort(System.Int32)
    name: WithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort<ReturnT>.WithBackendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1.WithBackendPort(System.Int32)
    name: WithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort(Of ReturnT).WithBackendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}}.WithBackendPort(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1.WithBackendPort(System.Int32)
  name: WithBackendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>>.WithBackendPort(System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate)).WithBackendPort(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1.WithBackendPort(System.Int32)
    name: WithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>>.WithBackendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1.WithBackendPort(System.Int32)
    name: WithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate)).WithBackendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1.WithBackendPort(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1
  isExternal: true
  name: WithBackendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort<ReturnT>.WithBackendPort(System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort(Of ReturnT).WithBackendPort(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1.WithBackendPort(System.Int32)
    name: WithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort<ReturnT>.WithBackendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1.WithBackendPort(System.Int32)
    name: WithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort(Of ReturnT).WithBackendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}.WithBackendPort(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort`1.WithBackendPort(System.Int32)
  name: WithBackendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithBackendPort(System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)).WithBackendPort(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort`1.WithBackendPort(System.Int32)
    name: WithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithBackendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort`1.WithBackendPort(System.Int32)
    name: WithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)).WithBackendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort`1.WithBackendPort(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort`1
  isExternal: true
  name: WithBackendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort<ReturnT>.WithBackendPort(System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort(Of ReturnT).WithBackendPort(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort`1.WithBackendPort(System.Int32)
    name: WithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort<ReturnT>.WithBackendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort`1.WithBackendPort(System.Int32)
    name: WithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort(Of ReturnT).WithBackendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}.WithBackend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}
  definition: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackend`1.WithBackend(System.String)
  name: WithBackend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>.WithBackend(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackend(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate).WithBackend(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackend`1.WithBackend(System.String)
    name: WithBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>.WithBackend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackend`1.WithBackend(System.String)
    name: WithBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackend(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate).WithBackend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackend`1.WithBackend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackend`1
  isExternal: true
  name: WithBackend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackend<ParentT>.WithBackend(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackend(Of ParentT).WithBackend(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackend`1.WithBackend(System.String)
    name: WithBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackend<ParentT>.WithBackend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackend`1.WithBackend(System.String)
    name: WithBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithBackend(Of ParentT).WithBackend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}.WithBackend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  definition: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackend`1.WithBackend(System.String)
  name: WithBackend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithBackend(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackend(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate).WithBackend(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackend`1.WithBackend(System.String)
    name: WithBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithBackend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackend`1.WithBackend(System.String)
    name: WithBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackend(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate).WithBackend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackend`1.WithBackend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackend`1
  isExternal: true
  name: WithBackend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackend<ParentT>.WithBackend(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackend(Of ParentT).WithBackend(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackend`1.WithBackend(System.String)
    name: WithBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackend<ParentT>.WithBackend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackend`1.WithBackend(System.String)
    name: WithBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithBackend(Of ParentT).WithBackend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithFrontendPort.WithFrontendPort(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithFrontendPort
  isExternal: true
  name: WithFrontendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithFrontendPort.WithFrontendPort(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithFrontendPort.WithFrontendPort(System.Int32)
    name: WithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithFrontendPort.WithFrontendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithFrontendPort.WithFrontendPort(System.Int32)
    name: WithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithFrontendPort.WithFrontendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule.FrontendPort
  parent: Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule
  isExternal: false
  name: FrontendPort
  fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule.FrontendPort
- uid: System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule.IdleTimeoutInMinutes
  parent: Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule
  isExternal: false
  name: IdleTimeoutInMinutes
  fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule.IdleTimeoutInMinutes
- uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule.Probe
  parent: Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule
  isExternal: false
  name: Probe()
  fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule.Probe()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule.Probe
    name: Probe
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule.Probe
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule.Probe
    name: Probe
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule.Probe
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule.Backend
  parent: Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule
  isExternal: false
  name: Backend()
  fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule.Backend()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule.Backend
    name: Backend
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule.Backend
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule.Backend
    name: Backend
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule.Backend
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule.LoadDistribution
  parent: Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule
  isExternal: false
  name: LoadDistribution
  fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancingRule.LoadDistribution
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithIdleTimeoutInMinutes{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}.WithIdleTimeoutInMinutes(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithIdleTimeoutInMinutes{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}
  definition: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithIdleTimeoutInMinutes`1.WithIdleTimeoutInMinutes(System.Int32)
  name: WithIdleTimeoutInMinutes(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithIdleTimeoutInMinutes<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>.WithIdleTimeoutInMinutes(System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithIdleTimeoutInMinutes(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate).WithIdleTimeoutInMinutes(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithIdleTimeoutInMinutes`1.WithIdleTimeoutInMinutes(System.Int32)
    name: WithIdleTimeoutInMinutes
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithIdleTimeoutInMinutes<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>.WithIdleTimeoutInMinutes
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithIdleTimeoutInMinutes`1.WithIdleTimeoutInMinutes(System.Int32)
    name: WithIdleTimeoutInMinutes
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithIdleTimeoutInMinutes(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate).WithIdleTimeoutInMinutes
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithIdleTimeoutInMinutes`1.WithIdleTimeoutInMinutes(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithIdleTimeoutInMinutes`1
  isExternal: true
  name: WithIdleTimeoutInMinutes(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithIdleTimeoutInMinutes<ParentT>.WithIdleTimeoutInMinutes(System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithIdleTimeoutInMinutes(Of ParentT).WithIdleTimeoutInMinutes(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithIdleTimeoutInMinutes`1.WithIdleTimeoutInMinutes(System.Int32)
    name: WithIdleTimeoutInMinutes
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithIdleTimeoutInMinutes<ParentT>.WithIdleTimeoutInMinutes
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithIdleTimeoutInMinutes`1.WithIdleTimeoutInMinutes(System.Int32)
    name: WithIdleTimeoutInMinutes
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithIdleTimeoutInMinutes(Of ParentT).WithIdleTimeoutInMinutes
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithIdleTimeoutInMinutes{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}.WithIdleTimeoutInMinutes(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithIdleTimeoutInMinutes{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  definition: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithIdleTimeoutInMinutes`1.WithIdleTimeoutInMinutes(System.Int32)
  name: WithIdleTimeoutInMinutes(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithIdleTimeoutInMinutes<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithIdleTimeoutInMinutes(System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithIdleTimeoutInMinutes(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate).WithIdleTimeoutInMinutes(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithIdleTimeoutInMinutes`1.WithIdleTimeoutInMinutes(System.Int32)
    name: WithIdleTimeoutInMinutes
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithIdleTimeoutInMinutes<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithIdleTimeoutInMinutes
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithIdleTimeoutInMinutes`1.WithIdleTimeoutInMinutes(System.Int32)
    name: WithIdleTimeoutInMinutes
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithIdleTimeoutInMinutes(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate).WithIdleTimeoutInMinutes
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithIdleTimeoutInMinutes`1.WithIdleTimeoutInMinutes(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithIdleTimeoutInMinutes`1
  isExternal: true
  name: WithIdleTimeoutInMinutes(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithIdleTimeoutInMinutes<ParentT>.WithIdleTimeoutInMinutes(System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithIdleTimeoutInMinutes(Of ParentT).WithIdleTimeoutInMinutes(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithIdleTimeoutInMinutes`1.WithIdleTimeoutInMinutes(System.Int32)
    name: WithIdleTimeoutInMinutes
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithIdleTimeoutInMinutes<ParentT>.WithIdleTimeoutInMinutes
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithIdleTimeoutInMinutes`1.WithIdleTimeoutInMinutes(System.Int32)
    name: WithIdleTimeoutInMinutes
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithIdleTimeoutInMinutes(Of ParentT).WithIdleTimeoutInMinutes
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProbe{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}.WithProbe(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProbe{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}
  definition: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProbe`1.WithProbe(System.String)
  name: WithProbe(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProbe<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>.WithProbe(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProbe(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate).WithProbe(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProbe`1.WithProbe(System.String)
    name: WithProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProbe<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>.WithProbe
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProbe`1.WithProbe(System.String)
    name: WithProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProbe(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate).WithProbe
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProbe`1.WithProbe(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProbe`1
  isExternal: true
  name: WithProbe(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProbe<ParentT>.WithProbe(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProbe(Of ParentT).WithProbe(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProbe`1.WithProbe(System.String)
    name: WithProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProbe<ParentT>.WithProbe
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProbe`1.WithProbe(System.String)
    name: WithProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithProbe(Of ParentT).WithProbe
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProbe{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}.WithProbe(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProbe{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  definition: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProbe`1.WithProbe(System.String)
  name: WithProbe(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProbe<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithProbe(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProbe(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate).WithProbe(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProbe`1.WithProbe(System.String)
    name: WithProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProbe<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithProbe
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProbe`1.WithProbe(System.String)
    name: WithProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProbe(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate).WithProbe
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProbe`1.WithProbe(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProbe`1
  isExternal: true
  name: WithProbe(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProbe<ParentT>.WithProbe(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProbe(Of ParentT).WithProbe(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProbe`1.WithProbe(System.String)
    name: WithProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProbe<ParentT>.WithProbe
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProbe`1.WithProbe(System.String)
    name: WithProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithProbe(Of ParentT).WithProbe
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate}.WithFloatingIpEnabled
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate}
  definition: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIpEnabled
  name: WithFloatingIpEnabled()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate>.WithFloatingIpEnabled()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate).WithFloatingIpEnabled()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIpEnabled
    name: WithFloatingIpEnabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate>.WithFloatingIpEnabled
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIpEnabled
    name: WithFloatingIpEnabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate).WithFloatingIpEnabled
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIpEnabled
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1
  isExternal: false
  name: WithFloatingIpEnabled()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<ReturnT>.WithFloatingIpEnabled()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp(Of ReturnT).WithFloatingIpEnabled()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIpEnabled
    name: WithFloatingIpEnabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<ReturnT>.WithFloatingIpEnabled
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIpEnabled
    name: WithFloatingIpEnabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp(Of ReturnT).WithFloatingIpEnabled
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate}.WithFloatingIp(System.Boolean)
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate}
  definition: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIp(System.Boolean)
  name: WithFloatingIp(Boolean)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate>.WithFloatingIp(System.Boolean)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate).WithFloatingIp(System.Boolean)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIp(System.Boolean)
    name: WithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate>.WithFloatingIp
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIp(System.Boolean)
    name: WithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate).WithFloatingIp
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIp(System.Boolean)
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1
  isExternal: true
  name: WithFloatingIp(Boolean)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<ReturnT>.WithFloatingIp(System.Boolean)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp(Of ReturnT).WithFloatingIp(System.Boolean)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIp(System.Boolean)
    name: WithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<ReturnT>.WithFloatingIp
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIp(System.Boolean)
    name: WithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp(Of ReturnT).WithFloatingIp
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate}.WithFloatingIpDisabled
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate}
  definition: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIpDisabled
  name: WithFloatingIpDisabled()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate>.WithFloatingIpDisabled()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate).WithFloatingIpDisabled()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIpDisabled
    name: WithFloatingIpDisabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate>.WithFloatingIpDisabled
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIpDisabled
    name: WithFloatingIpDisabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate).WithFloatingIpDisabled
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIpDisabled
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1
  isExternal: false
  name: WithFloatingIpDisabled()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<ReturnT>.WithFloatingIpDisabled()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp(Of ReturnT).WithFloatingIpDisabled()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIpDisabled
    name: WithFloatingIpDisabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<ReturnT>.WithFloatingIpDisabled
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIpDisabled
    name: WithFloatingIpDisabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp(Of ReturnT).WithFloatingIpDisabled
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}}.WithFloatingIpEnabled
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIpEnabled
  name: WithFloatingIpEnabled()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>>.WithFloatingIpEnabled()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate)).WithFloatingIpEnabled()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIpEnabled
    name: WithFloatingIpEnabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>>.WithFloatingIpEnabled
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIpEnabled
    name: WithFloatingIpEnabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate)).WithFloatingIpEnabled
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIpEnabled
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1
  isExternal: false
  name: WithFloatingIpEnabled()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<ReturnT>.WithFloatingIpEnabled()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp(Of ReturnT).WithFloatingIpEnabled()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIpEnabled
    name: WithFloatingIpEnabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<ReturnT>.WithFloatingIpEnabled
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIpEnabled
    name: WithFloatingIpEnabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp(Of ReturnT).WithFloatingIpEnabled
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}}.WithFloatingIp(System.Boolean)
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIp(System.Boolean)
  name: WithFloatingIp(Boolean)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>>.WithFloatingIp(System.Boolean)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate)).WithFloatingIp(System.Boolean)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIp(System.Boolean)
    name: WithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>>.WithFloatingIp
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIp(System.Boolean)
    name: WithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate)).WithFloatingIp
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIp(System.Boolean)
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1
  isExternal: true
  name: WithFloatingIp(Boolean)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<ReturnT>.WithFloatingIp(System.Boolean)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp(Of ReturnT).WithFloatingIp(System.Boolean)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIp(System.Boolean)
    name: WithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<ReturnT>.WithFloatingIp
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIp(System.Boolean)
    name: WithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp(Of ReturnT).WithFloatingIp
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}}.WithFloatingIpDisabled
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIpDisabled
  name: WithFloatingIpDisabled()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>>.WithFloatingIpDisabled()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate)).WithFloatingIpDisabled()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIpDisabled
    name: WithFloatingIpDisabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>>.WithFloatingIpDisabled
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIpDisabled
    name: WithFloatingIpDisabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate)).WithFloatingIpDisabled
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIpDisabled
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1
  isExternal: false
  name: WithFloatingIpDisabled()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<ReturnT>.WithFloatingIpDisabled()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp(Of ReturnT).WithFloatingIpDisabled()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIpDisabled
    name: WithFloatingIpDisabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<ReturnT>.WithFloatingIpDisabled
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIpDisabled
    name: WithFloatingIpDisabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp(Of ReturnT).WithFloatingIpDisabled
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}.WithFloatingIpEnabled
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1.WithFloatingIpEnabled
  name: WithFloatingIpEnabled()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFloatingIpEnabled()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)).WithFloatingIpEnabled()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1.WithFloatingIpEnabled
    name: WithFloatingIpEnabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFloatingIpEnabled
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1.WithFloatingIpEnabled
    name: WithFloatingIpEnabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)).WithFloatingIpEnabled
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1.WithFloatingIpEnabled
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1
  isExternal: false
  name: WithFloatingIpEnabled()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<ReturnT>.WithFloatingIpEnabled()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp(Of ReturnT).WithFloatingIpEnabled()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1.WithFloatingIpEnabled
    name: WithFloatingIpEnabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<ReturnT>.WithFloatingIpEnabled
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1.WithFloatingIpEnabled
    name: WithFloatingIpEnabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp(Of ReturnT).WithFloatingIpEnabled
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}.WithFloatingIp(System.Boolean)
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1.WithFloatingIp(System.Boolean)
  name: WithFloatingIp(Boolean)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFloatingIp(System.Boolean)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)).WithFloatingIp(System.Boolean)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1.WithFloatingIp(System.Boolean)
    name: WithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFloatingIp
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1.WithFloatingIp(System.Boolean)
    name: WithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)).WithFloatingIp
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1.WithFloatingIp(System.Boolean)
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1
  isExternal: true
  name: WithFloatingIp(Boolean)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<ReturnT>.WithFloatingIp(System.Boolean)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp(Of ReturnT).WithFloatingIp(System.Boolean)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1.WithFloatingIp(System.Boolean)
    name: WithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<ReturnT>.WithFloatingIp
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1.WithFloatingIp(System.Boolean)
    name: WithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp(Of ReturnT).WithFloatingIp
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}.WithFloatingIpDisabled
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1.WithFloatingIpDisabled
  name: WithFloatingIpDisabled()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFloatingIpDisabled()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)).WithFloatingIpDisabled()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1.WithFloatingIpDisabled
    name: WithFloatingIpDisabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFloatingIpDisabled
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1.WithFloatingIpDisabled
    name: WithFloatingIpDisabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)).WithFloatingIpDisabled
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1.WithFloatingIpDisabled
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1
  isExternal: false
  name: WithFloatingIpDisabled()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<ReturnT>.WithFloatingIpDisabled()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp(Of ReturnT).WithFloatingIpDisabled()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1.WithFloatingIpDisabled
    name: WithFloatingIpDisabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<ReturnT>.WithFloatingIpDisabled
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1.WithFloatingIpDisabled
    name: WithFloatingIpDisabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp(Of ReturnT).WithFloatingIpDisabled
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate}.WithFrontend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate}
  definition: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1.WithFrontend(System.String)
  name: WithFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate>.WithFrontend(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate).WithFrontend(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1.WithFrontend(System.String)
    name: WithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate>.WithFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1.WithFrontend(System.String)
    name: WithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IUpdate).WithFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1.WithFrontend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1
  isExternal: true
  name: WithFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend<ReturnT>.WithFrontend(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend(Of ReturnT).WithFrontend(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1.WithFrontend(System.String)
    name: WithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend<ReturnT>.WithFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1.WithFrontend(System.String)
    name: WithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend(Of ReturnT).WithFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}}.WithFrontend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1.WithFrontend(System.String)
  name: WithFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>>.WithFrontend(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate)).WithFrontend(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1.WithFrontend(System.String)
    name: WithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>>.WithFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1.WithFrontend(System.String)
    name: WithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate)).WithFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1.WithFrontend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1
  isExternal: true
  name: WithFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend<ReturnT>.WithFrontend(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend(Of ReturnT).WithFrontend(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1.WithFrontend(System.String)
    name: WithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend<ReturnT>.WithFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1.WithFrontend(System.String)
    name: WithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend(Of ReturnT).WithFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}.WithFrontend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend`1.WithFrontend(System.String)
  name: WithFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFrontend(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)).WithFrontend(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend`1.WithFrontend(System.String)
    name: WithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend`1.WithFrontend(System.String)
    name: WithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)).WithFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend`1.WithFrontend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend`1
  isExternal: true
  name: WithFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend<ReturnT>.WithFrontend(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend(Of ReturnT).WithFrontend(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend`1.WithFrontend(System.String)
    name: WithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend<ReturnT>.WithFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend`1.WithFrontend(System.String)
    name: WithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend(Of ReturnT).WithFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.IHasBackendPort.BackendPort
  parent: Microsoft.Azure.Management.Fluent.Network.IHasBackendPort
  isExternal: false
  name: BackendPort
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasBackendPort.BackendPort
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithIdleTimeoutInMinutes.WithIdleTimeoutInMinutes(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithIdleTimeoutInMinutes
  isExternal: true
  name: WithIdleTimeoutInMinutes(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithIdleTimeoutInMinutes.WithIdleTimeoutInMinutes(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithIdleTimeoutInMinutes.WithIdleTimeoutInMinutes(System.Int32)
    name: WithIdleTimeoutInMinutes
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithIdleTimeoutInMinutes.WithIdleTimeoutInMinutes
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithIdleTimeoutInMinutes.WithIdleTimeoutInMinutes(System.Int32)
    name: WithIdleTimeoutInMinutes
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Update.IWithIdleTimeoutInMinutes.WithIdleTimeoutInMinutes
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.IHasProtocol{System.String}.Protocol
  parent: Microsoft.Azure.Management.Fluent.Network.IHasProtocol{System.String}
  definition: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1.Protocol
  name: Protocol()
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasProtocol<System.String>.Protocol()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.IHasProtocol(Of System.String).Protocol()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1.Protocol
    name: Protocol
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasProtocol<System.String>.Protocol
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1.Protocol
    name: Protocol
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasProtocol(Of System.String).Protocol
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1.Protocol
  parent: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1
  isExternal: false
  name: Protocol()
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasProtocol<ProtocolT>.Protocol()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.IHasProtocol(Of ProtocolT).Protocol()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1.Protocol
    name: Protocol
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasProtocol<ProtocolT>.Protocol
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1.Protocol
    name: Protocol
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasProtocol(Of ProtocolT).Protocol
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}.WithFrontendPort(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate}
  definition: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort`1.WithFrontendPort(System.Int32)
  name: WithFrontendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>.WithFrontendPort(System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate).WithFrontendPort(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort`1.WithFrontendPort(System.Int32)
    name: WithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate>.WithFrontendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort`1.WithFrontendPort(System.Int32)
    name: WithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithLoadBalancingRuleOrCreate).WithFrontendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort`1.WithFrontendPort(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort`1
  isExternal: true
  name: WithFrontendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort<ParentT>.WithFrontendPort(System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort(Of ParentT).WithFrontendPort(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort`1.WithFrontendPort(System.Int32)
    name: WithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort<ParentT>.WithFrontendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort`1.WithFrontendPort(System.Int32)
    name: WithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.Definition.IWithFrontendPort(Of ParentT).WithFrontendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}.WithFrontendPort(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  definition: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort`1.WithFrontendPort(System.Int32)
  name: WithFrontendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithFrontendPort(System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate).WithFrontendPort(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort`1.WithFrontendPort(System.Int32)
    name: WithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithFrontendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort`1.WithFrontendPort(System.Int32)
    name: WithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate).WithFrontendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort`1.WithFrontendPort(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort`1
  isExternal: true
  name: WithFrontendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort<ParentT>.WithFrontendPort(System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort(Of ParentT).WithFrontendPort(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort`1.WithFrontendPort(System.Int32)
    name: WithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort<ParentT>.WithFrontendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort`1.WithFrontendPort(System.Int32)
    name: WithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancingRule.UpdateDefinition.IWithFrontendPort(Of ParentT).WithFrontendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
