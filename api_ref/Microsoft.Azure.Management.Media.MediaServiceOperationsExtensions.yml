items:
- uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions
  commentId: T:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions
  id: MediaServiceOperationsExtensions
  parent: Microsoft.Azure.Management.Media
  children:
  - Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CheckNameAvailabilty(Microsoft.Azure.Management.Media.IMediaServiceOperations,Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput)
  - Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CheckNameAvailabiltyAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Create(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService)
  - Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CreateAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Delete(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String)
  - Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Get(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String)
  - Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.GetAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListByResourceGroup(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String)
  - Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListByResourceGroupAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListKeys(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String)
  - Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListKeysAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.RegenerateKey(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.RegenerateKeyInput)
  - Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.RegenerateKeyAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.RegenerateKeyInput,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.SyncStorageKeys(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput)
  - Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.SyncStorageKeysAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Update(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService)
  - Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: MediaServiceOperationsExtensions
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/MediaServiceOperationsExtensions.cs
      branch: 03e4766cf2a8f00863f873f72407547b59a15b8e
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MediaServiceOperationsExtensions
    path: src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/MediaServiceOperationsExtensions.cs
    startLine: 15
  assemblies:
  - Microsoft.Azure.Management.Media
  packages:
  - Microsoft.Azure.Management.Media(0.1.0)
  namespace: Microsoft.Azure.Management.Media
  summary: "\nExtension methods for MediaServiceOperations.\n"
  example: []
  syntax:
    content: public class MediaServiceOperationsExtensions
    content.vb: Public Class MediaServiceOperationsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CheckNameAvailabilty(Microsoft.Azure.Management.Media.IMediaServiceOperations,Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CheckNameAvailabilty(Microsoft.Azure.Management.Media.IMediaServiceOperations,Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput)
  id: CheckNameAvailabilty(Microsoft.Azure.Management.Media.IMediaServiceOperations,Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions
  langs:
  - csharp
  - vb
  name: CheckNameAvailabilty(IMediaServiceOperations, CheckNameAvailabilityInput)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CheckNameAvailabilty(Microsoft.Azure.Management.Media.IMediaServiceOperations, Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/MediaServiceOperationsExtensions.cs
      branch: 03e4766cf2a8f00863f873f72407547b59a15b8e
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CheckNameAvailabilty
    path: src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/MediaServiceOperationsExtensions.cs
    startLine: 27
  assemblies:
  - Microsoft.Azure.Management.Media
  packages:
  - Microsoft.Azure.Management.Media(0.1.0)
  namespace: Microsoft.Azure.Management.Media
  summary: "\nCheck whether the Media Service resource name is available. The name must\nbe globally unique.\n"
  example: []
  syntax:
    content: public static CheckNameAvailabilityOutput CheckNameAvailabilty(this IMediaServiceOperations operations, CheckNameAvailabilityInput checkNameAvailabilityInput)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CheckNameAvailabilty(operations As IMediaServiceOperations, checkNameAvailabilityInput As CheckNameAvailabilityInput) As CheckNameAvailabilityOutput
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Media.IMediaServiceOperations
      description: "\nThe operations group for this extension method.\n"
    - id: checkNameAvailabilityInput
      type: Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput
      description: "\nProperties needed to check the availability of a name.\n"
    return:
      type: Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityOutput
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CheckNameAvailabiltyAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CheckNameAvailabiltyAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput,System.Threading.CancellationToken)
  id: CheckNameAvailabiltyAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions
  langs:
  - csharp
  - vb
  name: CheckNameAvailabiltyAsync(IMediaServiceOperations, CheckNameAvailabilityInput, CancellationToken)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CheckNameAvailabiltyAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations, Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/MediaServiceOperationsExtensions.cs
      branch: 03e4766cf2a8f00863f873f72407547b59a15b8e
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CheckNameAvailabiltyAsync
    path: src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/MediaServiceOperationsExtensions.cs
    startLine: 45
  assemblies:
  - Microsoft.Azure.Management.Media
  packages:
  - Microsoft.Azure.Management.Media(0.1.0)
  namespace: Microsoft.Azure.Management.Media
  summary: "\nCheck whether the Media Service resource name is available. The name must\nbe globally unique.\n"
  example: []
  syntax:
    content: public static Task<CheckNameAvailabilityOutput> CheckNameAvailabiltyAsync(this IMediaServiceOperations operations, CheckNameAvailabilityInput checkNameAvailabilityInput, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CheckNameAvailabiltyAsync(operations As IMediaServiceOperations, checkNameAvailabilityInput As CheckNameAvailabilityInput, cancellationToken As CancellationToken = Nothing) As Task(Of CheckNameAvailabilityOutput)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Media.IMediaServiceOperations
      description: "\nThe operations group for this extension method.\n"
    - id: checkNameAvailabilityInput
      type: Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput
      description: "\nProperties needed to check the availability of a name.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityOutput}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListByResourceGroup(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListByResourceGroup(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String)
  id: ListByResourceGroup(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListByResourceGroup(IMediaServiceOperations, String)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListByResourceGroup(Microsoft.Azure.Management.Media.IMediaServiceOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/MediaServiceOperationsExtensions.cs
      branch: 03e4766cf2a8f00863f873f72407547b59a15b8e
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListByResourceGroup
    path: src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/MediaServiceOperationsExtensions.cs
    startLine: 62
  assemblies:
  - Microsoft.Azure.Management.Media
  packages:
  - Microsoft.Azure.Management.Media(0.1.0)
  namespace: Microsoft.Azure.Management.Media
  summary: "\nList all of the Media Services in a resource group.\n"
  example: []
  syntax:
    content: public static IEnumerable<MediaService> ListByResourceGroup(this IMediaServiceOperations operations, string resourceGroupName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListByResourceGroup(operations As IMediaServiceOperations, resourceGroupName As String) As IEnumerable(Of MediaService)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Media.IMediaServiceOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group within the Azure subscription.\n"
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Management.Media.Models.MediaService}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListByResourceGroupAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListByResourceGroupAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.Threading.CancellationToken)
  id: ListByResourceGroupAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListByResourceGroupAsync(IMediaServiceOperations, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListByResourceGroupAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/MediaServiceOperationsExtensions.cs
      branch: 03e4766cf2a8f00863f873f72407547b59a15b8e
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListByResourceGroupAsync
    path: src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/MediaServiceOperationsExtensions.cs
    startLine: 79
  assemblies:
  - Microsoft.Azure.Management.Media
  packages:
  - Microsoft.Azure.Management.Media(0.1.0)
  namespace: Microsoft.Azure.Management.Media
  summary: "\nList all of the Media Services in a resource group.\n"
  example: []
  syntax:
    content: public static Task<IEnumerable<MediaService>> ListByResourceGroupAsync(this IMediaServiceOperations operations, string resourceGroupName, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListByResourceGroupAsync(operations As IMediaServiceOperations, resourceGroupName As String, cancellationToken As CancellationToken = Nothing) As Task(Of IEnumerable(Of MediaService))
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Media.IMediaServiceOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group within the Azure subscription.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Microsoft.Azure.Management.Media.Models.MediaService}}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Get(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Get(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String)
  id: Get(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions
  langs:
  - csharp
  - vb
  name: Get(IMediaServiceOperations, String, String)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Get(Microsoft.Azure.Management.Media.IMediaServiceOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/MediaServiceOperationsExtensions.cs
      branch: 03e4766cf2a8f00863f873f72407547b59a15b8e
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Get
    path: src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/MediaServiceOperationsExtensions.cs
    startLine: 99
  assemblies:
  - Microsoft.Azure.Management.Media
  packages:
  - Microsoft.Azure.Management.Media(0.1.0)
  namespace: Microsoft.Azure.Management.Media
  summary: "\nGet a Media Service.\n"
  example: []
  syntax:
    content: public static MediaService Get(this IMediaServiceOperations operations, string resourceGroupName, string mediaServiceName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Get(operations As IMediaServiceOperations, resourceGroupName As String, mediaServiceName As String) As MediaService
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Media.IMediaServiceOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group within the Azure subscription.\n"
    - id: mediaServiceName
      type: System.String
      description: "\nName of the Media Service.\n"
    return:
      type: Microsoft.Azure.Management.Media.Models.MediaService
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.GetAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.GetAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,System.Threading.CancellationToken)
  id: GetAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetAsync(IMediaServiceOperations, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.GetAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/MediaServiceOperationsExtensions.cs
      branch: 03e4766cf2a8f00863f873f72407547b59a15b8e
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetAsync
    path: src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/MediaServiceOperationsExtensions.cs
    startLine: 119
  assemblies:
  - Microsoft.Azure.Management.Media
  packages:
  - Microsoft.Azure.Management.Media(0.1.0)
  namespace: Microsoft.Azure.Management.Media
  summary: "\nGet a Media Service.\n"
  example: []
  syntax:
    content: public static Task<MediaService> GetAsync(this IMediaServiceOperations operations, string resourceGroupName, string mediaServiceName, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAsync(operations As IMediaServiceOperations, resourceGroupName As String, mediaServiceName As String, cancellationToken As CancellationToken = Nothing) As Task(Of MediaService)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Media.IMediaServiceOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group within the Azure subscription.\n"
    - id: mediaServiceName
      type: System.String
      description: "\nName of the Media Service.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Media.Models.MediaService}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Create(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Create(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService)
  id: Create(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions
  langs:
  - csharp
  - vb
  name: Create(IMediaServiceOperations, String, String, MediaService)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Create(Microsoft.Azure.Management.Media.IMediaServiceOperations, System.String, System.String, Microsoft.Azure.Management.Media.Models.MediaService)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/MediaServiceOperationsExtensions.cs
      branch: 03e4766cf2a8f00863f873f72407547b59a15b8e
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Create
    path: src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/MediaServiceOperationsExtensions.cs
    startLine: 142
  assemblies:
  - Microsoft.Azure.Management.Media
  packages:
  - Microsoft.Azure.Management.Media(0.1.0)
  namespace: Microsoft.Azure.Management.Media
  summary: "\nCreate a Media Service.\n"
  example: []
  syntax:
    content: public static MediaService Create(this IMediaServiceOperations operations, string resourceGroupName, string mediaServiceName, MediaService mediaService)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Create(operations As IMediaServiceOperations, resourceGroupName As String, mediaServiceName As String, mediaService As MediaService) As MediaService
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Media.IMediaServiceOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group within the Azure subscription.\n"
    - id: mediaServiceName
      type: System.String
      description: "\nName of the Media Service.\n"
    - id: mediaService
      type: Microsoft.Azure.Management.Media.Models.MediaService
      description: "\nMedia Service properties needed for creation.\n"
    return:
      type: Microsoft.Azure.Management.Media.Models.MediaService
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CreateAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CreateAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService,System.Threading.CancellationToken)
  id: CreateAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateAsync(IMediaServiceOperations, String, String, MediaService, CancellationToken)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.CreateAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations, System.String, System.String, Microsoft.Azure.Management.Media.Models.MediaService, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/MediaServiceOperationsExtensions.cs
      branch: 03e4766cf2a8f00863f873f72407547b59a15b8e
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateAsync
    path: src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/MediaServiceOperationsExtensions.cs
    startLine: 165
  assemblies:
  - Microsoft.Azure.Management.Media
  packages:
  - Microsoft.Azure.Management.Media(0.1.0)
  namespace: Microsoft.Azure.Management.Media
  summary: "\nCreate a Media Service.\n"
  example: []
  syntax:
    content: public static Task<MediaService> CreateAsync(this IMediaServiceOperations operations, string resourceGroupName, string mediaServiceName, MediaService mediaService, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateAsync(operations As IMediaServiceOperations, resourceGroupName As String, mediaServiceName As String, mediaService As MediaService, cancellationToken As CancellationToken = Nothing) As Task(Of MediaService)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Media.IMediaServiceOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group within the Azure subscription.\n"
    - id: mediaServiceName
      type: System.String
      description: "\nName of the Media Service.\n"
    - id: mediaService
      type: Microsoft.Azure.Management.Media.Models.MediaService
      description: "\nMedia Service properties needed for creation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Media.Models.MediaService}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Delete(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Delete(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String)
  id: Delete(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions
  langs:
  - csharp
  - vb
  name: Delete(IMediaServiceOperations, String, String)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Delete(Microsoft.Azure.Management.Media.IMediaServiceOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/MediaServiceOperationsExtensions.cs
      branch: 03e4766cf2a8f00863f873f72407547b59a15b8e
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Delete
    path: src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/MediaServiceOperationsExtensions.cs
    startLine: 185
  assemblies:
  - Microsoft.Azure.Management.Media
  packages:
  - Microsoft.Azure.Management.Media(0.1.0)
  namespace: Microsoft.Azure.Management.Media
  summary: "\nDelete a Media Service.\n"
  example: []
  syntax:
    content: public static void Delete(this IMediaServiceOperations operations, string resourceGroupName, string mediaServiceName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Delete(operations As IMediaServiceOperations, resourceGroupName As String, mediaServiceName As String)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Media.IMediaServiceOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group within the Azure subscription.\n"
    - id: mediaServiceName
      type: System.String
      description: "\nName of the Media Service.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,System.Threading.CancellationToken)
  id: DeleteAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions
  langs:
  - csharp
  - vb
  name: DeleteAsync(IMediaServiceOperations, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/MediaServiceOperationsExtensions.cs
      branch: 03e4766cf2a8f00863f873f72407547b59a15b8e
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeleteAsync
    path: src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/MediaServiceOperationsExtensions.cs
    startLine: 205
  assemblies:
  - Microsoft.Azure.Management.Media
  packages:
  - Microsoft.Azure.Management.Media(0.1.0)
  namespace: Microsoft.Azure.Management.Media
  summary: "\nDelete a Media Service.\n"
  example: []
  syntax:
    content: public static Task DeleteAsync(this IMediaServiceOperations operations, string resourceGroupName, string mediaServiceName, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteAsync(operations As IMediaServiceOperations, resourceGroupName As String, mediaServiceName As String, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Media.IMediaServiceOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group within the Azure subscription.\n"
    - id: mediaServiceName
      type: System.String
      description: "\nName of the Media Service.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Update(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Update(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService)
  id: Update(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions
  langs:
  - csharp
  - vb
  name: Update(IMediaServiceOperations, String, String, MediaService)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.Update(Microsoft.Azure.Management.Media.IMediaServiceOperations, System.String, System.String, Microsoft.Azure.Management.Media.Models.MediaService)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/MediaServiceOperationsExtensions.cs
      branch: 03e4766cf2a8f00863f873f72407547b59a15b8e
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Update
    path: src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/MediaServiceOperationsExtensions.cs
    startLine: 225
  assemblies:
  - Microsoft.Azure.Management.Media
  packages:
  - Microsoft.Azure.Management.Media(0.1.0)
  namespace: Microsoft.Azure.Management.Media
  summary: "\nUpdate a Media Service.\n"
  example: []
  syntax:
    content: public static MediaService Update(this IMediaServiceOperations operations, string resourceGroupName, string mediaServiceName, MediaService mediaService)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Update(operations As IMediaServiceOperations, resourceGroupName As String, mediaServiceName As String, mediaService As MediaService) As MediaService
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Media.IMediaServiceOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group within the Azure subscription.\n"
    - id: mediaServiceName
      type: System.String
      description: "\nName of the Media Service.\n"
    - id: mediaService
      type: Microsoft.Azure.Management.Media.Models.MediaService
      description: "\nMedia Service properties needed for update.\n"
    return:
      type: Microsoft.Azure.Management.Media.Models.MediaService
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService,System.Threading.CancellationToken)
  id: UpdateAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.MediaService,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions
  langs:
  - csharp
  - vb
  name: UpdateAsync(IMediaServiceOperations, String, String, MediaService, CancellationToken)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations, System.String, System.String, Microsoft.Azure.Management.Media.Models.MediaService, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/MediaServiceOperationsExtensions.cs
      branch: 03e4766cf2a8f00863f873f72407547b59a15b8e
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UpdateAsync
    path: src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/MediaServiceOperationsExtensions.cs
    startLine: 248
  assemblies:
  - Microsoft.Azure.Management.Media
  packages:
  - Microsoft.Azure.Management.Media(0.1.0)
  namespace: Microsoft.Azure.Management.Media
  summary: "\nUpdate a Media Service.\n"
  example: []
  syntax:
    content: public static Task<MediaService> UpdateAsync(this IMediaServiceOperations operations, string resourceGroupName, string mediaServiceName, MediaService mediaService, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UpdateAsync(operations As IMediaServiceOperations, resourceGroupName As String, mediaServiceName As String, mediaService As MediaService, cancellationToken As CancellationToken = Nothing) As Task(Of MediaService)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Media.IMediaServiceOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group within the Azure subscription.\n"
    - id: mediaServiceName
      type: System.String
      description: "\nName of the Media Service.\n"
    - id: mediaService
      type: Microsoft.Azure.Management.Media.Models.MediaService
      description: "\nMedia Service properties needed for update.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Media.Models.MediaService}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.RegenerateKey(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.RegenerateKeyInput)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.RegenerateKey(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.RegenerateKeyInput)
  id: RegenerateKey(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.RegenerateKeyInput)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions
  langs:
  - csharp
  - vb
  name: RegenerateKey(IMediaServiceOperations, String, String, RegenerateKeyInput)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.RegenerateKey(Microsoft.Azure.Management.Media.IMediaServiceOperations, System.String, System.String, Microsoft.Azure.Management.Media.Models.RegenerateKeyInput)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/MediaServiceOperationsExtensions.cs
      branch: 03e4766cf2a8f00863f873f72407547b59a15b8e
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RegenerateKey
    path: src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/MediaServiceOperationsExtensions.cs
    startLine: 271
  assemblies:
  - Microsoft.Azure.Management.Media
  packages:
  - Microsoft.Azure.Management.Media(0.1.0)
  namespace: Microsoft.Azure.Management.Media
  summary: "\nRegenerate the key for a Media Service.\n"
  example: []
  syntax:
    content: public static RegenerateKeyOutput RegenerateKey(this IMediaServiceOperations operations, string resourceGroupName, string mediaServiceName, RegenerateKeyInput regenerateKeyInput)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RegenerateKey(operations As IMediaServiceOperations, resourceGroupName As String, mediaServiceName As String, regenerateKeyInput As RegenerateKeyInput) As RegenerateKeyOutput
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Media.IMediaServiceOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group within the Azure subscription.\n"
    - id: mediaServiceName
      type: System.String
      description: "\nName of the Media Service.\n"
    - id: regenerateKeyInput
      type: Microsoft.Azure.Management.Media.Models.RegenerateKeyInput
      description: "\nProperties needed to regenerate the Media Service key.\n"
    return:
      type: Microsoft.Azure.Management.Media.Models.RegenerateKeyOutput
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.RegenerateKeyAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.RegenerateKeyInput,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.RegenerateKeyAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.RegenerateKeyInput,System.Threading.CancellationToken)
  id: RegenerateKeyAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.RegenerateKeyInput,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions
  langs:
  - csharp
  - vb
  name: RegenerateKeyAsync(IMediaServiceOperations, String, String, RegenerateKeyInput, CancellationToken)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.RegenerateKeyAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations, System.String, System.String, Microsoft.Azure.Management.Media.Models.RegenerateKeyInput, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/MediaServiceOperationsExtensions.cs
      branch: 03e4766cf2a8f00863f873f72407547b59a15b8e
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RegenerateKeyAsync
    path: src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/MediaServiceOperationsExtensions.cs
    startLine: 294
  assemblies:
  - Microsoft.Azure.Management.Media
  packages:
  - Microsoft.Azure.Management.Media(0.1.0)
  namespace: Microsoft.Azure.Management.Media
  summary: "\nRegenerate the key for a Media Service.\n"
  example: []
  syntax:
    content: public static Task<RegenerateKeyOutput> RegenerateKeyAsync(this IMediaServiceOperations operations, string resourceGroupName, string mediaServiceName, RegenerateKeyInput regenerateKeyInput, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RegenerateKeyAsync(operations As IMediaServiceOperations, resourceGroupName As String, mediaServiceName As String, regenerateKeyInput As RegenerateKeyInput, cancellationToken As CancellationToken = Nothing) As Task(Of RegenerateKeyOutput)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Media.IMediaServiceOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group within the Azure subscription.\n"
    - id: mediaServiceName
      type: System.String
      description: "\nName of the Media Service.\n"
    - id: regenerateKeyInput
      type: Microsoft.Azure.Management.Media.Models.RegenerateKeyInput
      description: "\nProperties needed to regenerate the Media Service key.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Media.Models.RegenerateKeyOutput}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListKeys(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListKeys(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String)
  id: ListKeys(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListKeys(IMediaServiceOperations, String, String)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListKeys(Microsoft.Azure.Management.Media.IMediaServiceOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/MediaServiceOperationsExtensions.cs
      branch: 03e4766cf2a8f00863f873f72407547b59a15b8e
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListKeys
    path: src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/MediaServiceOperationsExtensions.cs
    startLine: 314
  assemblies:
  - Microsoft.Azure.Management.Media
  packages:
  - Microsoft.Azure.Management.Media(0.1.0)
  namespace: Microsoft.Azure.Management.Media
  summary: "\nList the keys for a Media Service.\n"
  example: []
  syntax:
    content: public static ServiceKeys ListKeys(this IMediaServiceOperations operations, string resourceGroupName, string mediaServiceName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListKeys(operations As IMediaServiceOperations, resourceGroupName As String, mediaServiceName As String) As ServiceKeys
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Media.IMediaServiceOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group within the Azure subscription.\n"
    - id: mediaServiceName
      type: System.String
      description: "\nName of the Media Service.\n"
    return:
      type: Microsoft.Azure.Management.Media.Models.ServiceKeys
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListKeysAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListKeysAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,System.Threading.CancellationToken)
  id: ListKeysAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListKeysAsync(IMediaServiceOperations, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.ListKeysAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/MediaServiceOperationsExtensions.cs
      branch: 03e4766cf2a8f00863f873f72407547b59a15b8e
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListKeysAsync
    path: src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/MediaServiceOperationsExtensions.cs
    startLine: 334
  assemblies:
  - Microsoft.Azure.Management.Media
  packages:
  - Microsoft.Azure.Management.Media(0.1.0)
  namespace: Microsoft.Azure.Management.Media
  summary: "\nList the keys for a Media Service.\n"
  example: []
  syntax:
    content: public static Task<ServiceKeys> ListKeysAsync(this IMediaServiceOperations operations, string resourceGroupName, string mediaServiceName, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListKeysAsync(operations As IMediaServiceOperations, resourceGroupName As String, mediaServiceName As String, cancellationToken As CancellationToken = Nothing) As Task(Of ServiceKeys)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Media.IMediaServiceOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group within the Azure subscription.\n"
    - id: mediaServiceName
      type: System.String
      description: "\nName of the Media Service.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Media.Models.ServiceKeys}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.SyncStorageKeys(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.SyncStorageKeys(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput)
  id: SyncStorageKeys(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions
  langs:
  - csharp
  - vb
  name: SyncStorageKeys(IMediaServiceOperations, String, String, SyncStorageKeysInput)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.SyncStorageKeys(Microsoft.Azure.Management.Media.IMediaServiceOperations, System.String, System.String, Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/MediaServiceOperationsExtensions.cs
      branch: 03e4766cf2a8f00863f873f72407547b59a15b8e
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SyncStorageKeys
    path: src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/MediaServiceOperationsExtensions.cs
    startLine: 358
  assemblies:
  - Microsoft.Azure.Management.Media
  packages:
  - Microsoft.Azure.Management.Media(0.1.0)
  namespace: Microsoft.Azure.Management.Media
  summary: "\nSynchronize the keys for a storage account to the Media Service.\n"
  example: []
  syntax:
    content: public static MediaService SyncStorageKeys(this IMediaServiceOperations operations, string resourceGroupName, string mediaServiceName, SyncStorageKeysInput syncStorageKeysInput)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SyncStorageKeys(operations As IMediaServiceOperations, resourceGroupName As String, mediaServiceName As String, syncStorageKeysInput As SyncStorageKeysInput) As MediaService
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Media.IMediaServiceOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group within the Azure subscription.\n"
    - id: mediaServiceName
      type: System.String
      description: "\nName of the Media Service.\n"
    - id: syncStorageKeysInput
      type: Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput
      description: "\nProperties needed to sycnronize the keys for a storage account to the\nMedia Service.\n"
    return:
      type: Microsoft.Azure.Management.Media.Models.MediaService
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.SyncStorageKeysAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.SyncStorageKeysAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput,System.Threading.CancellationToken)
  id: SyncStorageKeysAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations,System.String,System.String,Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions
  langs:
  - csharp
  - vb
  name: SyncStorageKeysAsync(IMediaServiceOperations, String, String, SyncStorageKeysInput, CancellationToken)
  fullName: Microsoft.Azure.Management.Media.MediaServiceOperationsExtensions.SyncStorageKeysAsync(Microsoft.Azure.Management.Media.IMediaServiceOperations, System.String, System.String, Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/MediaServiceOperationsExtensions.cs
      branch: 03e4766cf2a8f00863f873f72407547b59a15b8e
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SyncStorageKeysAsync
    path: src/ResourceManagement/Media/Microsoft.Azure.Management.Media/Generated/MediaServiceOperationsExtensions.cs
    startLine: 382
  assemblies:
  - Microsoft.Azure.Management.Media
  packages:
  - Microsoft.Azure.Management.Media(0.1.0)
  namespace: Microsoft.Azure.Management.Media
  summary: "\nSynchronize the keys for a storage account to the Media Service.\n"
  example: []
  syntax:
    content: public static Task<MediaService> SyncStorageKeysAsync(this IMediaServiceOperations operations, string resourceGroupName, string mediaServiceName, SyncStorageKeysInput syncStorageKeysInput, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SyncStorageKeysAsync(operations As IMediaServiceOperations, resourceGroupName As String, mediaServiceName As String, syncStorageKeysInput As SyncStorageKeysInput, cancellationToken As CancellationToken = Nothing) As Task(Of MediaService)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Media.IMediaServiceOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nName of the resource group within the Azure subscription.\n"
    - id: mediaServiceName
      type: System.String
      description: "\nName of the Media Service.\n"
    - id: syncStorageKeysInput
      type: Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput
      description: "\nProperties needed to sycnronize the keys for a storage account to the\nMedia Service.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Media.Models.MediaService}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.Management.Media
  isExternal: false
  name: Microsoft.Azure.Management.Media
  fullName: Microsoft.Azure.Management.Media
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Management.Media.IMediaServiceOperations
  parent: Microsoft.Azure.Management.Media
  isExternal: false
  name: IMediaServiceOperations
  fullName: Microsoft.Azure.Management.Media.IMediaServiceOperations
- uid: Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput
  parent: Microsoft.Azure.Management.Media.Models
  isExternal: false
  name: CheckNameAvailabilityInput
  fullName: Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityInput
- uid: Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityOutput
  parent: Microsoft.Azure.Management.Media.Models
  isExternal: false
  name: CheckNameAvailabilityOutput
  fullName: Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityOutput
- uid: Microsoft.Azure.Management.Media.Models
  isExternal: false
  name: Microsoft.Azure.Management.Media.Models
  fullName: Microsoft.Azure.Management.Media.Models
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityOutput}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<CheckNameAvailabilityOutput>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityOutput>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityOutput)
  name.vb: Task(Of CheckNameAvailabilityOutput)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityOutput
    name: CheckNameAvailabilityOutput
    fullName: Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityOutput
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityOutput
    name: CheckNameAvailabilityOutput
    fullName: Microsoft.Azure.Management.Media.Models.CheckNameAvailabilityOutput
  - name: )
    fullName: )
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{Microsoft.Azure.Management.Media.Models.MediaService}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<MediaService>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Azure.Management.Media.Models.MediaService>
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Management.Media.Models.MediaService)
  name.vb: IEnumerable(Of MediaService)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Media.Models.MediaService
    name: MediaService
    fullName: Microsoft.Azure.Management.Media.Models.MediaService
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Media.Models.MediaService
    name: MediaService
    fullName: Microsoft.Azure.Management.Media.Models.MediaService
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Microsoft.Azure.Management.Media.Models.MediaService}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IEnumerable<MediaService>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<Microsoft.Azure.Management.Media.Models.MediaService>>
  fullname.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Management.Media.Models.MediaService))
  name.vb: Task(Of IEnumerable(Of MediaService))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Media.Models.MediaService
    name: MediaService
    fullName: Microsoft.Azure.Management.Media.Models.MediaService
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Media.Models.MediaService
    name: MediaService
    fullName: Microsoft.Azure.Management.Media.Models.MediaService
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Media.Models.MediaService
  parent: Microsoft.Azure.Management.Media.Models
  isExternal: false
  name: MediaService
  fullName: Microsoft.Azure.Management.Media.Models.MediaService
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.Media.Models.MediaService}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<MediaService>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.Media.Models.MediaService>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.Media.Models.MediaService)
  name.vb: Task(Of MediaService)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Media.Models.MediaService
    name: MediaService
    fullName: Microsoft.Azure.Management.Media.Models.MediaService
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Media.Models.MediaService
    name: MediaService
    fullName: Microsoft.Azure.Management.Media.Models.MediaService
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.Azure.Management.Media.Models.RegenerateKeyInput
  parent: Microsoft.Azure.Management.Media.Models
  isExternal: false
  name: RegenerateKeyInput
  fullName: Microsoft.Azure.Management.Media.Models.RegenerateKeyInput
- uid: Microsoft.Azure.Management.Media.Models.RegenerateKeyOutput
  parent: Microsoft.Azure.Management.Media.Models
  isExternal: false
  name: RegenerateKeyOutput
  fullName: Microsoft.Azure.Management.Media.Models.RegenerateKeyOutput
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.Media.Models.RegenerateKeyOutput}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<RegenerateKeyOutput>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.Media.Models.RegenerateKeyOutput>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.Media.Models.RegenerateKeyOutput)
  name.vb: Task(Of RegenerateKeyOutput)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Media.Models.RegenerateKeyOutput
    name: RegenerateKeyOutput
    fullName: Microsoft.Azure.Management.Media.Models.RegenerateKeyOutput
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Media.Models.RegenerateKeyOutput
    name: RegenerateKeyOutput
    fullName: Microsoft.Azure.Management.Media.Models.RegenerateKeyOutput
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Media.Models.ServiceKeys
  parent: Microsoft.Azure.Management.Media.Models
  isExternal: false
  name: ServiceKeys
  fullName: Microsoft.Azure.Management.Media.Models.ServiceKeys
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.Media.Models.ServiceKeys}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ServiceKeys>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.Media.Models.ServiceKeys>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.Media.Models.ServiceKeys)
  name.vb: Task(Of ServiceKeys)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Media.Models.ServiceKeys
    name: ServiceKeys
    fullName: Microsoft.Azure.Management.Media.Models.ServiceKeys
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Media.Models.ServiceKeys
    name: ServiceKeys
    fullName: Microsoft.Azure.Management.Media.Models.ServiceKeys
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput
  parent: Microsoft.Azure.Management.Media.Models
  isExternal: false
  name: SyncStorageKeysInput
  fullName: Microsoft.Azure.Management.Media.Models.SyncStorageKeysInput
