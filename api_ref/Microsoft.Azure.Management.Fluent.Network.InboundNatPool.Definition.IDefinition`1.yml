items:
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IDefinition`1
  commentId: T:Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IDefinition`1
  id: IDefinition`1
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition
  children: []
  langs:
  - csharp
  - vb
  name: IDefinition<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IDefinition<ParentT>
  type: Interface
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InboundNatPool/Definition/IDefinition.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IDefinition
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InboundNatPool/Definition/IDefinition.cs
    startLine: 28
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition
  syntax:
    content: 'public interface IDefinition<ParentT> : IBlank<ParentT>, IWithAttach<ParentT>, IInDefinition<ParentT>, IWithProtocol<ParentT>, IWithProtocol<IWithFrontend<IWithCreateAndInboundNatPool>, string>, IWithFrontend<ParentT>, IWithFrontend<IWithFrontendPortRange<IWithCreateAndInboundNatPool>>, IWithFrontendPortRange<ParentT>, IWithBackendPort<ParentT>, IWithBackendPort<IWithAttach<IWithCreateAndInboundNatPool>>'
    content.vb: >-
      Public Interface IDefinition(Of ParentT)
          Inherits IBlank(Of ParentT), IWithAttach(Of ParentT), IWithProtocol(Of ParentT), IWithFrontend(Of ParentT), IWithFrontendPortRange(Of ParentT), IWithBackendPort(Of ParentT)
    typeParameters:
    - id: ParentT
  inheritedMembers:
  - Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool},System.String}.WithProtocol(System.String)
  - Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool}}.WithFrontend(System.String)
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange{{ParentT}}.WithFrontendPortRange(System.Int32,System.Int32)
  - Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool}}.WithBackendPort(System.Int32)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IDefinition(Of ParentT)
  name.vb: IDefinition(Of ParentT)
references:
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool},System.String}.WithProtocol(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool},System.String}
  definition: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2.WithProtocol(`1)
  name: WithProtocol(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool>, System.String>.WithProtocol(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol(Of Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool), System.String).WithProtocol(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool>, System.String>.WithProtocol
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol(Of Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool), System.String).WithProtocol
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool}}.WithFrontend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1.WithFrontend(System.String)
  name: WithFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool>>.WithFrontend(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool)).WithFrontend(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1.WithFrontend(System.String)
    name: WithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool>>.WithFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1.WithFrontend(System.String)
    name: WithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool)).WithFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange{{ParentT}}.WithFrontendPortRange(System.Int32,System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange{{ParentT}}
  definition: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange`1.WithFrontendPortRange(System.Int32,System.Int32)
  name: WithFrontendPortRange(Int32, Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange<ParentT>.WithFrontendPortRange(System.Int32, System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange(Of ParentT).WithFrontendPortRange(System.Int32, System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange`1.WithFrontendPortRange(System.Int32,System.Int32)
    name: WithFrontendPortRange
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange<ParentT>.WithFrontendPortRange
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange`1.WithFrontendPortRange(System.Int32,System.Int32)
    name: WithFrontendPortRange
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange(Of ParentT).WithFrontendPortRange
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool}}.WithBackendPort(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1.WithBackendPort(System.Int32)
  name: WithBackendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool>>.WithBackendPort(System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort(Of Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool)).WithBackendPort(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1.WithBackendPort(System.Int32)
    name: WithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool>>.WithBackendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1.WithBackendPort(System.Int32)
    name: WithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort(Of Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool)).WithBackendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2.WithProtocol(`1)
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2
  isExternal: false
  name: WithProtocol(ProtocolT)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<ReturnT, ProtocolT>.WithProtocol(ProtocolT)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol(Of ReturnT, ProtocolT).WithProtocol(ProtocolT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<ReturnT, ProtocolT>.WithProtocol
  - name: (
    fullName: (
  - name: ProtocolT
    fullName: ProtocolT
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol(Of ReturnT, ProtocolT).WithProtocol
  - name: (
    fullName: (
  - name: ProtocolT
    fullName: ProtocolT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool},System.String}
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2
  name: IWithProtocol<IWithFrontend<IWithCreateAndInboundNatPool>, String>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool>, System.String>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol(Of Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool), System.String)
  name.vb: IWithProtocol(Of IWithFrontend(Of IWithCreateAndInboundNatPool), String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
    name: IWithCreateAndInboundNatPool
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
    name: IWithCreateAndInboundNatPool
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1.WithFrontend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1
  isExternal: true
  name: WithFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend<ReturnT>.WithFrontend(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend(Of ReturnT).WithFrontend(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1.WithFrontend(System.String)
    name: WithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend<ReturnT>.WithFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1.WithFrontend(System.String)
    name: WithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend(Of ReturnT).WithFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool}}
  parent: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1
  name: IWithFrontend<IWithFrontendPortRange<IWithCreateAndInboundNatPool>>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool>>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool))
  name.vb: IWithFrontend(Of IWithFrontendPortRange(Of IWithCreateAndInboundNatPool))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange`1
    name: IWithFrontendPortRange
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
    name: IWithCreateAndInboundNatPool
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange`1
    name: IWithFrontendPortRange
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
    name: IWithCreateAndInboundNatPool
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange`1.WithFrontendPortRange(System.Int32,System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange`1
  isExternal: true
  name: WithFrontendPortRange(Int32, Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange<ParentT>.WithFrontendPortRange(System.Int32, System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange(Of ParentT).WithFrontendPortRange(System.Int32, System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange`1.WithFrontendPortRange(System.Int32,System.Int32)
    name: WithFrontendPortRange
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange<ParentT>.WithFrontendPortRange
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange`1.WithFrontendPortRange(System.Int32,System.Int32)
    name: WithFrontendPortRange
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange(Of ParentT).WithFrontendPortRange
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange{{ParentT}}
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange`1
  name: IWithFrontendPortRange<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange(Of ParentT)
  name.vb: IWithFrontendPortRange(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange`1
    name: IWithFrontendPortRange
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange`1
    name: IWithFrontendPortRange
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1.WithBackendPort(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1
  isExternal: true
  name: WithBackendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort<ReturnT>.WithBackendPort(System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort(Of ReturnT).WithBackendPort(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1.WithBackendPort(System.Int32)
    name: WithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort<ReturnT>.WithBackendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1.WithBackendPort(System.Int32)
    name: WithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort(Of ReturnT).WithBackendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool}}
  parent: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1
  name: IWithBackendPort<IWithAttach<IWithCreateAndInboundNatPool>>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool>>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort(Of Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool))
  name.vb: IWithBackendPort(Of IWithAttach(Of IWithCreateAndInboundNatPool))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
    name: IWithCreateAndInboundNatPool
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
    name: IWithCreateAndInboundNatPool
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition
  isExternal: false
  name: IWithProtocol<ReturnT, ProtocolT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<ReturnT, ProtocolT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol(Of ReturnT, ProtocolT)
  name.vb: IWithProtocol(Of ReturnT, ProtocolT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: ', '
    fullName: ', '
  - name: ProtocolT
    fullName: ProtocolT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: ', '
    fullName: ', '
  - name: ProtocolT
    fullName: ProtocolT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition
  isExternal: false
  name: IWithFrontend<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend(Of ReturnT)
  name.vb: IWithFrontend(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange`1
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition
  isExternal: false
  name: IWithFrontendPortRange<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange(Of ParentT)
  name.vb: IWithFrontendPortRange(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange`1
    name: IWithFrontendPortRange
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange`1
    name: IWithFrontendPortRange
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition
  isExternal: false
  name: IWithBackendPort<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort(Of ReturnT)
  name.vb: IWithBackendPort(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition
