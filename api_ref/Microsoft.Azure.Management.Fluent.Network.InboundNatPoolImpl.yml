items:
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl
  commentId: T:Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl
  id: InboundNatPoolImpl
  parent: Microsoft.Azure.Management.Fluent.Network
  children:
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Attach
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.BackendPort
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Frontend
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.FrontendPortRangeEnd
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.FrontendPortRangeStart
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#HasBackendPort#Definition#IWithBackendPort{Microsoft#Azure#Management#Fluent#Network#InboundNatPool#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithCreateAndInboundNatPool}}#WithBackendPort(System.Int32)
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#HasBackendPort#Update#IWithBackendPort{Microsoft#Azure#Management#Fluent#Network#InboundNatPool#Update#IUpdate}#WithBackendPort(System.Int32)
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#HasBackendPort#UpdateDefinition#IWithBackendPort{Microsoft#Azure#Management#Fluent#Network#InboundNatPool#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithBackendPort(System.Int32)
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#HasFrontend#Definition#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#InboundNatPool#Definition#IWithFrontendPortRange{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithCreateAndInboundNatPool}}#WithFrontend(System.String)
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#HasFrontend#Update#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#InboundNatPool#Update#IUpdate}#WithFrontend(System.String)
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#HasFrontend#UpdateDefinition#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#InboundNatPool#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithFrontend(System.String)
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#HasProtocol#Definition#IWithProtocol{Microsoft#Azure#Management#Fluent#Network#InboundNatPool#Definition#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithCreateAndInboundNatPool},System#String}#WithProtocol(System.String)
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#HasProtocol#Update#IWithProtocol{Microsoft#Azure#Management#Fluent#Network#InboundNatPool#Update#IUpdate,System#String}#WithProtocol(System.String)
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#HasProtocol#UpdateDefinition#IWithProtocol{Microsoft#Azure#Management#Fluent#Network#InboundNatPool#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate},System#String}#WithProtocol(System.String)
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#IHasBackendPort#BackendPort
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#IHasFrontend#Frontend
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#IHasProtocol{System#String}#Protocol
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#IInboundNatPool#FrontendPortRangeEnd
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#IInboundNatPool#FrontendPortRangeStart
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#InboundNatPool#Definition#IWithFrontendPortRange{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithCreateAndInboundNatPool}#WithFrontendPortRange(System.Int32,System.Int32)
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#InboundNatPool#Update#IWithFrontendPortRange#WithFrontendPortRange(System.Int32,System.Int32)
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#InboundNatPool#UpdateDefinition#IWithFrontendPortRange{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}#WithFrontendPortRange(System.Int32,System.Int32)
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Name
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Protocol
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.WithBackendPort(System.Int32)
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.WithFrontend(System.String)
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.WithFrontendPortRange(System.Int32,System.Int32)
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.WithProtocol(System.String)
  langs:
  - csharp
  - vb
  name: InboundNatPoolImpl
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatPoolImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: InboundNatPoolImpl
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatPoolImpl.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nImplementation for InboundNatRule.\n"
  example: []
  syntax:
    content: 'public class InboundNatPoolImpl : ChildResource<InboundNatPoolInner, LoadBalancerImpl, ILoadBalancer>, IInboundNatPool, IHasFrontend, IHasBackendPort, IHasProtocol<string>, IWrapper<InboundNatPoolInner>, IChildResource<ILoadBalancer>, IDefinition<IWithCreateAndInboundNatPool>, IBlank<IWithCreateAndInboundNatPool>, IWithAttach<IWithCreateAndInboundNatPool>, IInDefinition<IWithCreateAndInboundNatPool>, IWithProtocol<IWithCreateAndInboundNatPool>, IWithProtocol<IWithFrontend<IWithCreateAndInboundNatPool>, string>, IWithFrontend<IWithCreateAndInboundNatPool>, IWithFrontend<IWithFrontendPortRange<IWithCreateAndInboundNatPool>>, IWithFrontendPortRange<IWithCreateAndInboundNatPool>, IWithBackendPort<IWithCreateAndInboundNatPool>, IWithBackendPort<IWithAttach<IWithCreateAndInboundNatPool>>, IUpdateDefinition<IUpdate>, IBlank<IUpdate>, IWithAttach<IUpdate>, IInUpdate<IUpdate>, IWithProtocol<IUpdate>, IWithProtocol<IWithAttach<IUpdate>, string>, IWithFrontend<IUpdate>, IWithFrontend<IWithAttach<IUpdate>>, IWithFrontendPortRange<IUpdate>, IWithBackendPort<IUpdate>, IWithBackendPort<IWithAttach<IUpdate>>, IUpdate, ISettable<IUpdate>, IWithProtocol, IWithProtocol<IUpdate, string>, IWithFrontend, IWithFrontend<IUpdate>, IWithBackendPort, IWithBackendPort<IUpdate>, IWithFrontendPortRange'
    content.vb: >-
      Public Class InboundNatPoolImpl
          Inherits ChildResource(Of InboundNatPoolInner, LoadBalancerImpl, ILoadBalancer)
          Implements IInboundNatPool, IHasFrontend, IHasBackendPort, IHasProtocol(Of String), IWrapper(Of InboundNatPoolInner), IChildResource(Of ILoadBalancer), IDefinition(Of IWithCreateAndInboundNatPool), IBlank(Of IWithCreateAndInboundNatPool), IWithAttach(Of IWithCreateAndInboundNatPool), IInDefinition(Of IWithCreateAndInboundNatPool), IWithProtocol(Of IWithCreateAndInboundNatPool), IWithProtocol(Of IWithFrontend(Of IWithCreateAndInboundNatPool), String), IWithFrontend(Of IWithCreateAndInboundNatPool), IWithFrontend(Of IWithFrontendPortRange(Of IWithCreateAndInboundNatPool)), IWithFrontendPortRange(Of IWithCreateAndInboundNatPool), IWithBackendPort(Of IWithCreateAndInboundNatPool), IWithBackendPort(Of IWithAttach(Of IWithCreateAndInboundNatPool)), IUpdateDefinition(Of IUpdate), IBlank(Of IUpdate), IWithAttach(Of IUpdate), IInUpdate(Of IUpdate), IWithProtocol(Of IUpdate), IWithProtocol(Of IWithAttach(Of IUpdate), String), IWithFrontend(Of IUpdate), IWithFrontend(Of IWithAttach(Of IUpdate)), IWithFrontendPortRange(Of IUpdate), IWithBackendPort(Of IUpdate), IWithBackendPort(Of IWithAttach(Of IUpdate)), IUpdate, ISettable(Of IUpdate), IWithProtocol, IWithProtocol(Of IUpdate, String), IWithFrontend, IWithFrontend(Of IUpdate), IWithBackendPort, IWithBackendPort(Of IUpdate), IWithFrontendPortRange
  inheritance:
  - System.Object
  implements:
  - Microsoft.Azure.Management.Fluent.Network.IInboundNatPool
  - Microsoft.Azure.Management.Fluent.Network.IHasFrontend
  - Microsoft.Azure.Management.Fluent.Network.IHasBackendPort
  - Microsoft.Azure.Management.Fluent.Network.IHasProtocol{System.String}
  - IWrapper{Microsoft.Azure.Management.Network.Models.InboundNatPoolInner}
  - IChildResource{Microsoft.Azure.Management.Fluent.Network.ILoadBalancer}
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IDefinition{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool}
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool}
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool}
  - IInDefinition{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool}
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool}
  - Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool},System.String}
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool}
  - Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool}}
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool}
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool}
  - Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool}}
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IUpdateDefinition{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - IInUpdate{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate},System.String}
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontendPortRange{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate
  - ISettable{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IWithProtocol
  - Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate,System.String}
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IWithFrontend
  - Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IWithBackendPort
  - Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IWithFrontendPortRange
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Name
  commentId: P:Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Name
  id: Name
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl
  langs:
  - csharp
  - vb
  name: Name
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Name
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatPoolImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatPoolImpl.cs
    startLine: 24
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public override string Name { get; }
    content.vb: Public Overrides ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Protocol
  commentId: P:Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Protocol
  id: Protocol
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl
  langs:
  - csharp
  - vb
  name: Protocol
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Protocol
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatPoolImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Protocol
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatPoolImpl.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public string Protocol { get; }
    content.vb: Public ReadOnly Property Protocol As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.BackendPort
  commentId: P:Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.BackendPort
  id: BackendPort
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl
  langs:
  - csharp
  - vb
  name: BackendPort
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.BackendPort
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatPoolImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BackendPort
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatPoolImpl.cs
    startLine: 38
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public int BackendPort { get; }
    content.vb: Public ReadOnly Property BackendPort As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Frontend
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Frontend
  id: Frontend
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl
  langs:
  - csharp
  - vb
  name: Frontend()
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Frontend()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatPoolImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Frontend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatPoolImpl.cs
    startLine: 46
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public IFrontend Frontend()
    content.vb: Public Function Frontend As IFrontend
    return:
      type: Microsoft.Azure.Management.Fluent.Network.IFrontend
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.FrontendPortRangeStart
  commentId: P:Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.FrontendPortRangeStart
  id: FrontendPortRangeStart
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl
  langs:
  - csharp
  - vb
  name: FrontendPortRangeStart
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.FrontendPortRangeStart
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatPoolImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: FrontendPortRangeStart
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatPoolImpl.cs
    startLine: 54
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public int FrontendPortRangeStart { get; }
    content.vb: Public ReadOnly Property FrontendPortRangeStart As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.FrontendPortRangeEnd
  commentId: P:Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.FrontendPortRangeEnd
  id: FrontendPortRangeEnd
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl
  langs:
  - csharp
  - vb
  name: FrontendPortRangeEnd
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.FrontendPortRangeEnd
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatPoolImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: FrontendPortRangeEnd
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatPoolImpl.cs
    startLine: 62
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public int FrontendPortRangeEnd { get; }
    content.vb: Public ReadOnly Property FrontendPortRangeEnd As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.WithBackendPort(System.Int32)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.WithBackendPort(System.Int32)
  id: WithBackendPort(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl
  langs:
  - csharp
  - vb
  name: WithBackendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.WithBackendPort(System.Int32)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatPoolImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithBackendPort
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatPoolImpl.cs
    startLine: 70
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public InboundNatPoolImpl WithBackendPort(int port)
    content.vb: Public Function WithBackendPort(port As Integer) As InboundNatPoolImpl
    parameters:
    - id: port
      type: System.Int32
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.WithProtocol(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.WithProtocol(System.String)
  id: WithProtocol(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl
  langs:
  - csharp
  - vb
  name: WithProtocol(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.WithProtocol(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatPoolImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithProtocol
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatPoolImpl.cs
    startLine: 76
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public InboundNatPoolImpl WithProtocol(string protocol)
    content.vb: Public Function WithProtocol(protocol As String) As InboundNatPoolImpl
    parameters:
    - id: protocol
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.WithFrontend(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.WithFrontend(System.String)
  id: WithFrontend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl
  langs:
  - csharp
  - vb
  name: WithFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.WithFrontend(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatPoolImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithFrontend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatPoolImpl.cs
    startLine: 82
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public InboundNatPoolImpl WithFrontend(string frontendName)
    content.vb: Public Function WithFrontend(frontendName As String) As InboundNatPoolImpl
    parameters:
    - id: frontendName
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.WithFrontendPortRange(System.Int32,System.Int32)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.WithFrontendPortRange(System.Int32,System.Int32)
  id: WithFrontendPortRange(System.Int32,System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl
  langs:
  - csharp
  - vb
  name: WithFrontendPortRange(Int32, Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.WithFrontendPortRange(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatPoolImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithFrontendPortRange
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatPoolImpl.cs
    startLine: 89
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public InboundNatPoolImpl WithFrontendPortRange(int from, int to)
    content.vb: Public Function WithFrontendPortRange(from As Integer, to As Integer) As InboundNatPoolImpl
    parameters:
    - id: from
      type: System.Int32
    - id: to
      type: System.Int32
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Attach
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Attach
  id: Attach
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl
  langs:
  - csharp
  - vb
  name: Attach()
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Attach()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatPoolImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Attach
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatPoolImpl.cs
    startLine: 96
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public LoadBalancerImpl Attach()
    content.vb: Public Function Attach As LoadBalancerImpl
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#IHasProtocol{System#String}#Protocol
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#IHasProtocol{System#String}#Protocol
  id: Microsoft#Azure#Management#Fluent#Network#IHasProtocol{System#String}#Protocol
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl
  langs:
  - csharp
  - vb
  name: IHasProtocol<String>.Protocol()
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft.Azure.Management.Fluent.Network.IHasProtocol<System.String>.Protocol()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatPoolImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.IHasProtocol<System.String>.Protocol
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatPoolImpl.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: string IHasProtocol<string>.Protocol()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.IHasProtocol<System.String>.Protocol As String Implements IHasProtocol(Of String).Protocol
    return:
      type: System.String
      description: the protocol
  implements:
  - Microsoft.Azure.Management.Fluent.Network.IHasProtocol{System.String}.Protocol
  name.vb: Microsoft.Azure.Management.Fluent.Network.IHasProtocol<System.String>.Protocol()
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#IHasFrontend#Frontend
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#IHasFrontend#Frontend
  id: Microsoft#Azure#Management#Fluent#Network#IHasFrontend#Frontend
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl
  langs:
  - csharp
  - vb
  name: IHasFrontend.Frontend()
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft.Azure.Management.Fluent.Network.IHasFrontend.Frontend()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatPoolImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.IHasFrontend.Frontend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatPoolImpl.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: IFrontend IHasFrontend.Frontend()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.IHasFrontend.Frontend As IFrontend Implements IHasFrontend.Frontend
    return:
      type: Microsoft.Azure.Management.Fluent.Network.IFrontend
      description: the associated frontend
  implements:
  - Microsoft.Azure.Management.Fluent.Network.IHasFrontend.Frontend
  name.vb: Microsoft.Azure.Management.Fluent.Network.IHasFrontend.Frontend()
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#IHasBackendPort#BackendPort
  commentId: P:Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#IHasBackendPort#BackendPort
  id: Microsoft#Azure#Management#Fluent#Network#IHasBackendPort#BackendPort
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl
  langs:
  - csharp
  - vb
  name: IHasBackendPort.BackendPort
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft.Azure.Management.Fluent.Network.IHasBackendPort.BackendPort
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatPoolImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.IHasBackendPort.BackendPort
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatPoolImpl.cs
    startLine: 36
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: int ? IHasBackendPort.BackendPort { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.Azure.Management.Fluent.Network.IHasBackendPort.BackendPort As Integer? Implements IHasBackendPort.BackendPort
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: the backend port number the network traffic is sent to
  implements:
  - Microsoft.Azure.Management.Fluent.Network.IHasBackendPort.BackendPort
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.Azure.Management.Fluent.Network.IHasBackendPort.BackendPort
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#InboundNatPool#Update#IWithFrontendPortRange#WithFrontendPortRange(System.Int32,System.Int32)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#InboundNatPool#Update#IWithFrontendPortRange#WithFrontendPortRange(System.Int32,System.Int32)
  id: Microsoft#Azure#Management#Fluent#Network#InboundNatPool#Update#IWithFrontendPortRange#WithFrontendPortRange(System.Int32,System.Int32)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl
  langs:
  - csharp
  - vb
  name: IWithFrontendPortRange.WithFrontendPortRange(Int32, Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IWithFrontendPortRange.WithFrontendPortRange(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatPoolImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IWithFrontendPortRange.WithFrontendPortRange
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatPoolImpl.cs
    startLine: 49
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSpecifies the frontend port range.\n"
  example: []
  syntax:
    content: IUpdate IWithFrontendPortRange.WithFrontendPortRange(int from, int to)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IWithFrontendPortRange.WithFrontendPortRange(from As Integer, to As Integer) As IUpdate Implements IWithFrontendPortRange.WithFrontendPortRange
    parameters:
    - id: from
      type: System.Int32
      description: from the starting port number, between 1 and 65534
    - id: to
      type: System.Int32
      description: to the ending port number, greater than the starting port number and no more than 65534
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IWithFrontendPortRange.WithFrontendPortRange(System.Int32,System.Int32)
  name.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IWithFrontendPortRange.WithFrontendPortRange(Int32, Int32)
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#HasProtocol#Definition#IWithProtocol{Microsoft#Azure#Management#Fluent#Network#InboundNatPool#Definition#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithCreateAndInboundNatPool},System#String}#WithProtocol(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#HasProtocol#Definition#IWithProtocol{Microsoft#Azure#Management#Fluent#Network#InboundNatPool#Definition#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithCreateAndInboundNatPool},System#String}#WithProtocol(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#HasProtocol#Definition#IWithProtocol{Microsoft#Azure#Management#Fluent#Network#InboundNatPool#Definition#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithCreateAndInboundNatPool},System#String}#WithProtocol(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl
  langs:
  - csharp
  - vb
  name: IWithProtocol<IWithFrontend<IWithCreateAndInboundNatPool>, String>.WithProtocol(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool>, System.String>.WithProtocol(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatPoolImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool>,System.String>.WithProtocol
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatPoolImpl.cs
    startLine: 74
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSpecifies the transport protocol.\n"
  example: []
  syntax:
    content: IWithFrontend<IWithCreateAndInboundNatPool> IWithProtocol<IWithFrontend<IWithCreateAndInboundNatPool>, string>.WithProtocol(string protocol)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool>,System.String>.WithProtocol(protocol As String) As IWithFrontend(Of IWithCreateAndInboundNatPool) Implements IWithProtocol(Of IWithFrontend(Of IWithCreateAndInboundNatPool), String).WithProtocol
    parameters:
    - id: protocol
      type: System.String
      description: protocol a transport protocol
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool},System.String}.WithProtocol(System.String)
  fullName.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool>,System.String>.WithProtocol(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool>,System.String>.WithProtocol(String)
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#HasProtocol#Update#IWithProtocol{Microsoft#Azure#Management#Fluent#Network#InboundNatPool#Update#IUpdate,System#String}#WithProtocol(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#HasProtocol#Update#IWithProtocol{Microsoft#Azure#Management#Fluent#Network#InboundNatPool#Update#IUpdate,System#String}#WithProtocol(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#HasProtocol#Update#IWithProtocol{Microsoft#Azure#Management#Fluent#Network#InboundNatPool#Update#IUpdate,System#String}#WithProtocol(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl
  langs:
  - csharp
  - vb
  name: IWithProtocol<IUpdate, String>.WithProtocol(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate, System.String>.WithProtocol(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatPoolImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate,System.String>.WithProtocol
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatPoolImpl.cs
    startLine: 83
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSpecifies the transport protocol.\n"
  example: []
  syntax:
    content: IUpdate IWithProtocol<IUpdate, string>.WithProtocol(string protocol)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate,System.String>.WithProtocol(protocol As String) As IUpdate Implements IWithProtocol(Of IUpdate, String).WithProtocol
    parameters:
    - id: protocol
      type: System.String
      description: protocol a transport protocol
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate
      description: the next stage of the update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate,System.String}.WithProtocol(System.String)
  fullName.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate,System.String>.WithProtocol(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate,System.String>.WithProtocol(String)
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#HasProtocol#UpdateDefinition#IWithProtocol{Microsoft#Azure#Management#Fluent#Network#InboundNatPool#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate},System#String}#WithProtocol(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#HasProtocol#UpdateDefinition#IWithProtocol{Microsoft#Azure#Management#Fluent#Network#InboundNatPool#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate},System#String}#WithProtocol(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#HasProtocol#UpdateDefinition#IWithProtocol{Microsoft#Azure#Management#Fluent#Network#InboundNatPool#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate},System#String}#WithProtocol(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl
  langs:
  - csharp
  - vb
  name: IWithProtocol<IWithAttach<IUpdate>, String>.WithProtocol(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>, System.String>.WithProtocol(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatPoolImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>,System.String>.WithProtocol
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatPoolImpl.cs
    startLine: 92
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSpecifies the transport protocol.\n"
  example: []
  syntax:
    content: IWithAttach<IUpdate> IWithProtocol<IWithAttach<IUpdate>, string>.WithProtocol(string protocol)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>,System.String>.WithProtocol(protocol As String) As IWithAttach(Of IUpdate) Implements IWithProtocol(Of IWithAttach(Of IUpdate), String).WithProtocol
    parameters:
    - id: protocol
      type: System.String
      description: protocol a transport protocol
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate},System.String}.WithProtocol(System.String)
  fullName.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>,System.String>.WithProtocol(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>,System.String>.WithProtocol(String)
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#HasFrontend#Definition#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#InboundNatPool#Definition#IWithFrontendPortRange{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithCreateAndInboundNatPool}}#WithFrontend(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#HasFrontend#Definition#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#InboundNatPool#Definition#IWithFrontendPortRange{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithCreateAndInboundNatPool}}#WithFrontend(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#HasFrontend#Definition#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#InboundNatPool#Definition#IWithFrontendPortRange{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithCreateAndInboundNatPool}}#WithFrontend(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl
  langs:
  - csharp
  - vb
  name: IWithFrontend<IWithFrontendPortRange<IWithCreateAndInboundNatPool>>.WithFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool>>.WithFrontend(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatPoolImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool>>.WithFrontend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatPoolImpl.cs
    startLine: 101
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSpecifies the frontend to associate.\n"
  example: []
  syntax:
    content: IWithFrontendPortRange<IWithCreateAndInboundNatPool> IWithFrontend<IWithFrontendPortRange<IWithCreateAndInboundNatPool>>.WithFrontend(string frontendName)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool>>.WithFrontend(frontendName As String) As IWithFrontendPortRange(Of IWithCreateAndInboundNatPool) Implements IWithFrontend(Of IWithFrontendPortRange(Of IWithCreateAndInboundNatPool)).WithFrontend
    parameters:
    - id: frontendName
      type: System.String
      description: frontendName an existing frontend name on this load balancer
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool}}.WithFrontend(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool>>.WithFrontend(String)
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#HasFrontend#Update#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#InboundNatPool#Update#IUpdate}#WithFrontend(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#HasFrontend#Update#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#InboundNatPool#Update#IUpdate}#WithFrontend(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#HasFrontend#Update#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#InboundNatPool#Update#IUpdate}#WithFrontend(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl
  langs:
  - csharp
  - vb
  name: IWithFrontend<IUpdate>.WithFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate>.WithFrontend(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatPoolImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate>.WithFrontend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatPoolImpl.cs
    startLine: 110
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSpecifies the frontend.\n"
  example: []
  syntax:
    content: IUpdate IWithFrontend<IUpdate>.WithFrontend(string frontendName)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate>.WithFrontend(frontendName As String) As IUpdate Implements IWithFrontend(Of IUpdate).WithFrontend
    parameters:
    - id: frontendName
      type: System.String
      description: frontendName an existing frontend name from this load balancer
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate
      description: the next stage of the update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate}.WithFrontend(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate>.WithFrontend(String)
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#HasFrontend#UpdateDefinition#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#InboundNatPool#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithFrontend(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#HasFrontend#UpdateDefinition#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#InboundNatPool#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithFrontend(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#HasFrontend#UpdateDefinition#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#InboundNatPool#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithFrontend(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl
  langs:
  - csharp
  - vb
  name: IWithFrontend<IWithAttach<IUpdate>>.WithFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFrontend(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatPoolImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFrontend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatPoolImpl.cs
    startLine: 119
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSpecifies the frontend to associate.\n"
  example: []
  syntax:
    content: IWithAttach<IUpdate> IWithFrontend<IWithAttach<IUpdate>>.WithFrontend(string frontendName)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFrontend(frontendName As String) As IWithAttach(Of IUpdate) Implements IWithFrontend(Of IWithAttach(Of IUpdate)).WithFrontend
    parameters:
    - id: frontendName
      type: System.String
      description: frontendName an existing frontend name on this load balancer
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}.WithFrontend(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFrontend(String)
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#IInboundNatPool#FrontendPortRangeStart
  commentId: P:Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#IInboundNatPool#FrontendPortRangeStart
  id: Microsoft#Azure#Management#Fluent#Network#IInboundNatPool#FrontendPortRangeStart
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl
  langs:
  - csharp
  - vb
  name: IInboundNatPool.FrontendPortRangeStart
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft.Azure.Management.Fluent.Network.IInboundNatPool.FrontendPortRangeStart
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatPoolImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.IInboundNatPool.FrontendPortRangeStart
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatPoolImpl.cs
    startLine: 124
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: int ? IInboundNatPool.FrontendPortRangeStart { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.Azure.Management.Fluent.Network.IInboundNatPool.FrontendPortRangeStart As Integer? Implements IInboundNatPool.FrontendPortRangeStart
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: the starting frontend port number
  implements:
  - Microsoft.Azure.Management.Fluent.Network.IInboundNatPool.FrontendPortRangeStart
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.Azure.Management.Fluent.Network.IInboundNatPool.FrontendPortRangeStart
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#IInboundNatPool#FrontendPortRangeEnd
  commentId: P:Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#IInboundNatPool#FrontendPortRangeEnd
  id: Microsoft#Azure#Management#Fluent#Network#IInboundNatPool#FrontendPortRangeEnd
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl
  langs:
  - csharp
  - vb
  name: IInboundNatPool.FrontendPortRangeEnd
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft.Azure.Management.Fluent.Network.IInboundNatPool.FrontendPortRangeEnd
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatPoolImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.IInboundNatPool.FrontendPortRangeEnd
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatPoolImpl.cs
    startLine: 132
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: int ? IInboundNatPool.FrontendPortRangeEnd { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.Azure.Management.Fluent.Network.IInboundNatPool.FrontendPortRangeEnd As Integer? Implements IInboundNatPool.FrontendPortRangeEnd
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: the ending frontend port number
  implements:
  - Microsoft.Azure.Management.Fluent.Network.IInboundNatPool.FrontendPortRangeEnd
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.Azure.Management.Fluent.Network.IInboundNatPool.FrontendPortRangeEnd
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#HasBackendPort#Definition#IWithBackendPort{Microsoft#Azure#Management#Fluent#Network#InboundNatPool#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithCreateAndInboundNatPool}}#WithBackendPort(System.Int32)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#HasBackendPort#Definition#IWithBackendPort{Microsoft#Azure#Management#Fluent#Network#InboundNatPool#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithCreateAndInboundNatPool}}#WithBackendPort(System.Int32)
  id: Microsoft#Azure#Management#Fluent#Network#HasBackendPort#Definition#IWithBackendPort{Microsoft#Azure#Management#Fluent#Network#InboundNatPool#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithCreateAndInboundNatPool}}#WithBackendPort(System.Int32)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl
  langs:
  - csharp
  - vb
  name: IWithBackendPort<IWithAttach<IWithCreateAndInboundNatPool>>.WithBackendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool>>.WithBackendPort(System.Int32)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatPoolImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool>>.WithBackendPort
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatPoolImpl.cs
    startLine: 146
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IWithAttach<IWithCreateAndInboundNatPool> IWithBackendPort<IWithAttach<IWithCreateAndInboundNatPool>>.WithBackendPort(int port)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool>>.WithBackendPort(port As Integer) As IWithAttach(Of IWithCreateAndInboundNatPool) Implements IWithBackendPort(Of IWithAttach(Of IWithCreateAndInboundNatPool)).WithBackendPort
    parameters:
    - id: port
      type: System.Int32
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool}
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool}}.WithBackendPort(System.Int32)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool>>.WithBackendPort(Int32)
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#HasBackendPort#Update#IWithBackendPort{Microsoft#Azure#Management#Fluent#Network#InboundNatPool#Update#IUpdate}#WithBackendPort(System.Int32)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#HasBackendPort#Update#IWithBackendPort{Microsoft#Azure#Management#Fluent#Network#InboundNatPool#Update#IUpdate}#WithBackendPort(System.Int32)
  id: Microsoft#Azure#Management#Fluent#Network#HasBackendPort#Update#IWithBackendPort{Microsoft#Azure#Management#Fluent#Network#InboundNatPool#Update#IUpdate}#WithBackendPort(System.Int32)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl
  langs:
  - csharp
  - vb
  name: IWithBackendPort<IUpdate>.WithBackendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate>.WithBackendPort(System.Int32)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatPoolImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate>.WithBackendPort
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatPoolImpl.cs
    startLine: 155
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSpecifies the backend port.\n"
  example: []
  syntax:
    content: IUpdate IWithBackendPort<IUpdate>.WithBackendPort(int port)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate>.WithBackendPort(port As Integer) As IUpdate Implements IWithBackendPort(Of IUpdate).WithBackendPort
    parameters:
    - id: port
      type: System.Int32
      description: port a port number
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate
      description: the next stage of the update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate}.WithBackendPort(System.Int32)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate>.WithBackendPort(Int32)
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#HasBackendPort#UpdateDefinition#IWithBackendPort{Microsoft#Azure#Management#Fluent#Network#InboundNatPool#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithBackendPort(System.Int32)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#HasBackendPort#UpdateDefinition#IWithBackendPort{Microsoft#Azure#Management#Fluent#Network#InboundNatPool#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithBackendPort(System.Int32)
  id: Microsoft#Azure#Management#Fluent#Network#HasBackendPort#UpdateDefinition#IWithBackendPort{Microsoft#Azure#Management#Fluent#Network#InboundNatPool#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithBackendPort(System.Int32)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl
  langs:
  - csharp
  - vb
  name: IWithBackendPort<IWithAttach<IUpdate>>.WithBackendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithBackendPort(System.Int32)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatPoolImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithBackendPort
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatPoolImpl.cs
    startLine: 166
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IWithAttach<IUpdate> IWithBackendPort<IWithAttach<IUpdate>>.WithBackendPort(int port)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithBackendPort(port As Integer) As IWithAttach(Of IUpdate) Implements IWithBackendPort(Of IWithAttach(Of IUpdate)).WithBackendPort
    parameters:
    - id: port
      type: System.Int32
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}.WithBackendPort(System.Int32)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithBackendPort(Int32)
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#InboundNatPool#Definition#IWithFrontendPortRange{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithCreateAndInboundNatPool}#WithFrontendPortRange(System.Int32,System.Int32)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#InboundNatPool#Definition#IWithFrontendPortRange{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithCreateAndInboundNatPool}#WithFrontendPortRange(System.Int32,System.Int32)
  id: Microsoft#Azure#Management#Fluent#Network#InboundNatPool#Definition#IWithFrontendPortRange{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithCreateAndInboundNatPool}#WithFrontendPortRange(System.Int32,System.Int32)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl
  langs:
  - csharp
  - vb
  name: IWithFrontendPortRange<IWithCreateAndInboundNatPool>.WithFrontendPortRange(Int32, Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool>.WithFrontendPortRange(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatPoolImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool>.WithFrontendPortRange
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatPoolImpl.cs
    startLine: 176
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSpecifies the frontend port range.\n"
  example: []
  syntax:
    content: IWithBackendPort<IWithCreateAndInboundNatPool> IWithFrontendPortRange<IWithCreateAndInboundNatPool>.WithFrontendPortRange(int from, int to)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool>.WithFrontendPortRange(from As Integer, to As Integer) As IWithBackendPort(Of IWithCreateAndInboundNatPool) Implements IWithFrontendPortRange(Of IWithCreateAndInboundNatPool).WithFrontendPortRange
    parameters:
    - id: from
      type: System.Int32
      description: from the starting port number, between 1 and 65534
    - id: to
      type: System.Int32
      description: to the ending port number, greater than the starting port number and no more than 65534
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool}.WithFrontendPortRange(System.Int32,System.Int32)
  name.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool>.WithFrontendPortRange(Int32, Int32)
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#InboundNatPool#UpdateDefinition#IWithFrontendPortRange{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}#WithFrontendPortRange(System.Int32,System.Int32)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft#Azure#Management#Fluent#Network#InboundNatPool#UpdateDefinition#IWithFrontendPortRange{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}#WithFrontendPortRange(System.Int32,System.Int32)
  id: Microsoft#Azure#Management#Fluent#Network#InboundNatPool#UpdateDefinition#IWithFrontendPortRange{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}#WithFrontendPortRange(System.Int32,System.Int32)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl
  langs:
  - csharp
  - vb
  name: IWithFrontendPortRange<IUpdate>.WithFrontendPortRange(Int32, Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl.Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontendPortRange<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithFrontendPortRange(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatPoolImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontendPortRange<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithFrontendPortRange
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatPoolImpl.cs
    startLine: 186
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSpecified the frontend port range.\n"
  example: []
  syntax:
    content: IWithAttach<IUpdate> IWithFrontendPortRange<IUpdate>.WithFrontendPortRange(int from, int to)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontendPortRange<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithFrontendPortRange(from As Integer, to As Integer) As IWithAttach(Of IUpdate) Implements IWithFrontendPortRange(Of IUpdate).WithFrontendPortRange
    parameters:
    - id: from
      type: System.Int32
      description: from the starting port number, between 1 and 65534
    - id: to
      type: System.Int32
      description: to the ending port number, greater than the starting port number and no more than 65534
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontendPortRange{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}.WithFrontendPortRange(System.Int32,System.Int32)
  name.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontendPortRange<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithFrontendPortRange(Int32, Int32)
references:
- uid: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network
  fullName: Microsoft.Azure.Management.Fluent.Network
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.Fluent.Network.IInboundNatPool
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: IInboundNatPool
  fullName: Microsoft.Azure.Management.Fluent.Network.IInboundNatPool
- uid: Microsoft.Azure.Management.Fluent.Network.IHasFrontend
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: IHasFrontend
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasFrontend
- uid: Microsoft.Azure.Management.Fluent.Network.IHasBackendPort
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: IHasBackendPort
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasBackendPort
- uid: Microsoft.Azure.Management.Fluent.Network.IHasProtocol{System.String}
  parent: Microsoft.Azure.Management.Fluent.Network
  definition: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1
  name: IHasProtocol<String>
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasProtocol<System.String>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.IHasProtocol(Of System.String)
  name.vb: IHasProtocol(Of String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1
    name: IHasProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasProtocol
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1
    name: IHasProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasProtocol
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: IWrapper{Microsoft.Azure.Management.Network.Models.InboundNatPoolInner}
  definition: IWrapper`1
  name: IWrapper<InboundNatPoolInner>
  fullName: IWrapper<Microsoft.Azure.Management.Network.Models.InboundNatPoolInner>
  fullname.vb: IWrapper(Of Microsoft.Azure.Management.Network.Models.InboundNatPoolInner)
  name.vb: IWrapper(Of InboundNatPoolInner)
  spec.csharp:
  - uid: IWrapper`1
    name: IWrapper
    fullName: IWrapper
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Network.Models.InboundNatPoolInner
    name: InboundNatPoolInner
    fullName: Microsoft.Azure.Management.Network.Models.InboundNatPoolInner
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IWrapper`1
    name: IWrapper
    fullName: IWrapper
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Network.Models.InboundNatPoolInner
    name: InboundNatPoolInner
    fullName: Microsoft.Azure.Management.Network.Models.InboundNatPoolInner
  - name: )
    fullName: )
- uid: IChildResource{Microsoft.Azure.Management.Fluent.Network.ILoadBalancer}
  definition: IChildResource`1
  name: IChildResource<ILoadBalancer>
  fullName: IChildResource<Microsoft.Azure.Management.Fluent.Network.ILoadBalancer>
  fullname.vb: IChildResource(Of Microsoft.Azure.Management.Fluent.Network.ILoadBalancer)
  name.vb: IChildResource(Of ILoadBalancer)
  spec.csharp:
  - uid: IChildResource`1
    name: IChildResource
    fullName: IChildResource
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    name: ILoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IChildResource`1
    name: IChildResource
    fullName: IChildResource
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    name: ILoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IDefinition{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool}
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IDefinition`1
  name: IDefinition<IWithCreateAndInboundNatPool>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IDefinition<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IDefinition(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool)
  name.vb: IDefinition(Of IWithCreateAndInboundNatPool)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IDefinition`1
    name: IDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IDefinition
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
    name: IWithCreateAndInboundNatPool
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IDefinition`1
    name: IDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IDefinition
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
    name: IWithCreateAndInboundNatPool
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool}
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IBlank`1
  name: IBlank<IWithCreateAndInboundNatPool>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IBlank<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IBlank(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool)
  name.vb: IBlank(Of IWithCreateAndInboundNatPool)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IBlank
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
    name: IWithCreateAndInboundNatPool
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
    name: IWithCreateAndInboundNatPool
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool}
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach`1
  name: IWithAttach<IWithCreateAndInboundNatPool>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool)
  name.vb: IWithAttach(Of IWithCreateAndInboundNatPool)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
    name: IWithCreateAndInboundNatPool
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
    name: IWithCreateAndInboundNatPool
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
  - name: )
    fullName: )
- uid: IInDefinition{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool}
  definition: IInDefinition`1
  name: IInDefinition<IWithCreateAndInboundNatPool>
  fullName: IInDefinition<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool>
  fullname.vb: IInDefinition(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool)
  name.vb: IInDefinition(Of IWithCreateAndInboundNatPool)
  spec.csharp:
  - uid: IInDefinition`1
    name: IInDefinition
    fullName: IInDefinition
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
    name: IWithCreateAndInboundNatPool
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IInDefinition`1
    name: IInDefinition
    fullName: IInDefinition
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
    name: IWithCreateAndInboundNatPool
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool}
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithProtocol`1
  name: IWithProtocol<IWithCreateAndInboundNatPool>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithProtocol(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool)
  name.vb: IWithProtocol(Of IWithCreateAndInboundNatPool)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithProtocol`1
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithProtocol
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
    name: IWithCreateAndInboundNatPool
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithProtocol`1
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithProtocol
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
    name: IWithCreateAndInboundNatPool
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool},System.String}
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2
  name: IWithProtocol<IWithFrontend<IWithCreateAndInboundNatPool>, String>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool>, System.String>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol(Of Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool), System.String)
  name.vb: IWithProtocol(Of IWithFrontend(Of IWithCreateAndInboundNatPool), String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
    name: IWithCreateAndInboundNatPool
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
    name: IWithCreateAndInboundNatPool
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool}
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend`1
  name: IWithFrontend<IWithCreateAndInboundNatPool>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool)
  name.vb: IWithFrontend(Of IWithCreateAndInboundNatPool)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
    name: IWithCreateAndInboundNatPool
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
    name: IWithCreateAndInboundNatPool
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool}}
  parent: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1
  name: IWithFrontend<IWithFrontendPortRange<IWithCreateAndInboundNatPool>>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool>>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool))
  name.vb: IWithFrontend(Of IWithFrontendPortRange(Of IWithCreateAndInboundNatPool))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange`1
    name: IWithFrontendPortRange
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
    name: IWithCreateAndInboundNatPool
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange`1
    name: IWithFrontendPortRange
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
    name: IWithCreateAndInboundNatPool
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool}
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange`1
  name: IWithFrontendPortRange<IWithCreateAndInboundNatPool>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool)
  name.vb: IWithFrontendPortRange(Of IWithCreateAndInboundNatPool)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange`1
    name: IWithFrontendPortRange
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
    name: IWithCreateAndInboundNatPool
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange`1
    name: IWithFrontendPortRange
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
    name: IWithCreateAndInboundNatPool
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool}
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithBackendPort`1
  name: IWithBackendPort<IWithCreateAndInboundNatPool>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithBackendPort(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool)
  name.vb: IWithBackendPort(Of IWithCreateAndInboundNatPool)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithBackendPort
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
    name: IWithCreateAndInboundNatPool
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithBackendPort
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
    name: IWithCreateAndInboundNatPool
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool}}
  parent: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1
  name: IWithBackendPort<IWithAttach<IWithCreateAndInboundNatPool>>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool>>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort(Of Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool))
  name.vb: IWithBackendPort(Of IWithAttach(Of IWithCreateAndInboundNatPool))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
    name: IWithCreateAndInboundNatPool
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
    name: IWithCreateAndInboundNatPool
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IUpdateDefinition{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IUpdateDefinition`1
  name: IUpdateDefinition<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IUpdateDefinition<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IUpdateDefinition(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IUpdateDefinition(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IUpdateDefinition`1
    name: IUpdateDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IUpdateDefinition
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IUpdateDefinition`1
    name: IUpdateDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IUpdateDefinition
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IBlank`1
  name: IBlank<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IBlank<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IBlank(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IBlank(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IBlank
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach`1
  name: IWithAttach<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IWithAttach(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: IInUpdate{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  definition: IInUpdate`1
  name: IInUpdate<IUpdate>
  fullName: IInUpdate<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: IInUpdate(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IInUpdate(Of IUpdate)
  spec.csharp:
  - uid: IInUpdate`1
    name: IInUpdate
    fullName: IInUpdate
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IInUpdate`1
    name: IInUpdate
    fullName: IInUpdate
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithProtocol`1
  name: IWithProtocol<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithProtocol(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IWithProtocol(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithProtocol`1
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithProtocol
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithProtocol`1
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithProtocol
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate},System.String}
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol`2
  name: IWithProtocol<IWithAttach<IUpdate>, String>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>, System.String>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol(Of Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate), System.String)
  name.vb: IWithProtocol(Of IWithAttach(Of IUpdate), String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontend`1
  name: IWithFrontend<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IWithFrontend(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontend
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontend
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}
  parent: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend`1
  name: IWithFrontend<IWithAttach<IUpdate>>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate))
  name.vb: IWithFrontend(Of IWithAttach(Of IUpdate))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontendPortRange{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontendPortRange`1
  name: IWithFrontendPortRange<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontendPortRange<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontendPortRange(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IWithFrontendPortRange(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontendPortRange`1
    name: IWithFrontendPortRange
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontendPortRange
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontendPortRange`1
    name: IWithFrontendPortRange
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontendPortRange
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithBackendPort`1
  name: IWithBackendPort<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithBackendPort(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IWithBackendPort(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithBackendPort
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithBackendPort
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}
  parent: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort`1
  name: IWithBackendPort<IWithAttach<IUpdate>>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort(Of Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate))
  name.vb: IWithBackendPort(Of IWithAttach(Of IUpdate))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update
  isExternal: false
  name: IUpdate
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate
- uid: ISettable{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  definition: ISettable`1
  name: ISettable<IUpdate>
  fullName: ISettable<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: ISettable(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: ISettable(Of IUpdate)
  spec.csharp:
  - uid: ISettable`1
    name: ISettable
    fullName: ISettable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: ISettable`1
    name: ISettable
    fullName: ISettable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IWithProtocol
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update
  isExternal: false
  name: IWithProtocol
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IWithProtocol
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate,System.String}
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update
  definition: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2
  name: IWithProtocol<IUpdate, String>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate, System.String>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol(Of Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate, System.String)
  name.vb: IWithProtocol(Of IUpdate, String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IWithFrontend
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update
  isExternal: false
  name: IWithFrontend
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IWithFrontend
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update
  definition: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1
  name: IWithFrontend<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate)
  name.vb: IWithFrontend(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IWithBackendPort
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update
  isExternal: false
  name: IWithBackendPort
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IWithBackendPort
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update
  definition: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1
  name: IWithBackendPort<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort(Of Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate)
  name.vb: IWithBackendPort(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IWithFrontendPortRange
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update
  isExternal: false
  name: IWithFrontendPortRange
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IWithFrontendPortRange
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: IHasProtocol<ProtocolT>
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasProtocol<ProtocolT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.IHasProtocol(Of ProtocolT)
  name.vb: IHasProtocol(Of ProtocolT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1
    name: IHasProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasProtocol
  - name: <
    fullName: <
  - name: ProtocolT
    fullName: ProtocolT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1
    name: IHasProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasProtocol
  - name: '(Of '
    fullName: '(Of '
  - name: ProtocolT
    fullName: ProtocolT
  - name: )
    fullName: )
- uid: IWrapper`1
  isExternal: true
  name: IWrapper<>
  fullName: IWrapper<>
  fullname.vb: IWrapper(Of )
  name.vb: IWrapper(Of )
  spec.csharp:
  - uid: IWrapper`1
    name: IWrapper
    fullName: IWrapper
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IWrapper`1
    name: IWrapper
    fullName: IWrapper
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: IChildResource`1
  isExternal: true
  name: IChildResource<>
  fullName: IChildResource<>
  fullname.vb: IChildResource(Of )
  name.vb: IChildResource(Of )
  spec.csharp:
  - uid: IChildResource`1
    name: IChildResource
    fullName: IChildResource
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IChildResource`1
    name: IChildResource
    fullName: IChildResource
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IDefinition`1
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition
  isExternal: false
  name: IDefinition<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IDefinition<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IDefinition(Of ParentT)
  name.vb: IDefinition(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IDefinition`1
    name: IDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IDefinition
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IDefinition`1
    name: IDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IDefinition
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IBlank`1
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition
  isExternal: false
  name: IBlank<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IBlank<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IBlank(Of ParentT)
  name.vb: IBlank(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IBlank
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach`1
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition
  isExternal: false
  name: IWithAttach<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach(Of ParentT)
  name.vb: IWithAttach(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: IInDefinition`1
  isExternal: true
  name: IInDefinition<>
  fullName: IInDefinition<>
  fullname.vb: IInDefinition(Of )
  name.vb: IInDefinition(Of )
  spec.csharp:
  - uid: IInDefinition`1
    name: IInDefinition
    fullName: IInDefinition
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IInDefinition`1
    name: IInDefinition
    fullName: IInDefinition
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithProtocol`1
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition
  isExternal: false
  name: IWithProtocol<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithProtocol<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithProtocol(Of ParentT)
  name.vb: IWithProtocol(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithProtocol`1
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithProtocol
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithProtocol`1
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithProtocol
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition
  isExternal: false
  name: IWithProtocol<ReturnT, ProtocolT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<ReturnT, ProtocolT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol(Of ReturnT, ProtocolT)
  name.vb: IWithProtocol(Of ReturnT, ProtocolT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: ', '
    fullName: ', '
  - name: ProtocolT
    fullName: ProtocolT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: ', '
    fullName: ', '
  - name: ProtocolT
    fullName: ProtocolT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend`1
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition
  isExternal: false
  name: IWithFrontend<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend(Of ParentT)
  name.vb: IWithFrontend(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition
  isExternal: false
  name: IWithFrontend<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend(Of ReturnT)
  name.vb: IWithFrontend(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange`1
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition
  isExternal: false
  name: IWithFrontendPortRange<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange(Of ParentT)
  name.vb: IWithFrontendPortRange(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange`1
    name: IWithFrontendPortRange
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange`1
    name: IWithFrontendPortRange
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithBackendPort`1
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition
  isExternal: false
  name: IWithBackendPort<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithBackendPort<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithBackendPort(Of ParentT)
  name.vb: IWithBackendPort(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithBackendPort
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithBackendPort
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition
  isExternal: false
  name: IWithBackendPort<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort(Of ReturnT)
  name.vb: IWithBackendPort(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IUpdateDefinition`1
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition
  isExternal: false
  name: IUpdateDefinition<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IUpdateDefinition<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IUpdateDefinition(Of ParentT)
  name.vb: IUpdateDefinition(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IUpdateDefinition`1
    name: IUpdateDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IUpdateDefinition
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IUpdateDefinition`1
    name: IUpdateDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IUpdateDefinition
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IBlank`1
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition
  isExternal: false
  name: IBlank<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IBlank<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IBlank(Of ParentT)
  name.vb: IBlank(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IBlank
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach`1
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition
  isExternal: false
  name: IWithAttach<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach(Of ParentT)
  name.vb: IWithAttach(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: IInUpdate`1
  isExternal: true
  name: IInUpdate<>
  fullName: IInUpdate<>
  fullname.vb: IInUpdate(Of )
  name.vb: IInUpdate(Of )
  spec.csharp:
  - uid: IInUpdate`1
    name: IInUpdate
    fullName: IInUpdate
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IInUpdate`1
    name: IInUpdate
    fullName: IInUpdate
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithProtocol`1
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition
  isExternal: false
  name: IWithProtocol<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithProtocol<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithProtocol(Of ParentT)
  name.vb: IWithProtocol(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithProtocol`1
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithProtocol
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithProtocol`1
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithProtocol
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol`2
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition
  isExternal: false
  name: IWithProtocol<ReturnT, ProtocolT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol<ReturnT, ProtocolT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol(Of ReturnT, ProtocolT)
  name.vb: IWithProtocol(Of ReturnT, ProtocolT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: ', '
    fullName: ', '
  - name: ProtocolT
    fullName: ProtocolT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: ', '
    fullName: ', '
  - name: ProtocolT
    fullName: ProtocolT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontend`1
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition
  isExternal: false
  name: IWithFrontend<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontend<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontend(Of ParentT)
  name.vb: IWithFrontend(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontend
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontend
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition
  isExternal: false
  name: IWithFrontend<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend(Of ReturnT)
  name.vb: IWithFrontend(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontendPortRange`1
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition
  isExternal: false
  name: IWithFrontendPortRange<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontendPortRange<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontendPortRange(Of ParentT)
  name.vb: IWithFrontendPortRange(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontendPortRange`1
    name: IWithFrontendPortRange
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontendPortRange
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontendPortRange`1
    name: IWithFrontendPortRange
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontendPortRange
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithBackendPort`1
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition
  isExternal: false
  name: IWithBackendPort<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithBackendPort<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithBackendPort(Of ParentT)
  name.vb: IWithBackendPort(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithBackendPort
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithBackendPort
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition
  isExternal: false
  name: IWithBackendPort<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort(Of ReturnT)
  name.vb: IWithBackendPort(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update
- uid: ISettable`1
  isExternal: true
  name: ISettable<>
  fullName: ISettable<>
  fullname.vb: ISettable(Of )
  name.vb: ISettable(Of )
  spec.csharp:
  - uid: ISettable`1
    name: ISettable
    fullName: ISettable
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: ISettable`1
    name: ISettable
    fullName: ISettable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update
  isExternal: false
  name: IWithProtocol<ReturnT, ProtocolT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol<ReturnT, ProtocolT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol(Of ReturnT, ProtocolT)
  name.vb: IWithProtocol(Of ReturnT, ProtocolT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: ', '
    fullName: ', '
  - name: ProtocolT
    fullName: ProtocolT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: ', '
    fullName: ', '
  - name: ProtocolT
    fullName: ProtocolT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update
  isExternal: false
  name: IWithFrontend<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend(Of ReturnT)
  name.vb: IWithFrontend(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update
  isExternal: false
  name: IWithBackendPort<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort(Of ReturnT)
  name.vb: IWithBackendPort(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: Microsoft.Azure.Management.Fluent.Network.IFrontend
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: IFrontend
  fullName: Microsoft.Azure.Management.Fluent.Network.IFrontend
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: InboundNatPoolImpl
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPoolImpl
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: LoadBalancerImpl
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
- uid: Microsoft.Azure.Management.Fluent.Network.IHasProtocol{System.String}.Protocol
  parent: Microsoft.Azure.Management.Fluent.Network.IHasProtocol{System.String}
  definition: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1.Protocol
  name: Protocol()
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasProtocol<System.String>.Protocol()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.IHasProtocol(Of System.String).Protocol()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1.Protocol
    name: Protocol
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasProtocol<System.String>.Protocol
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1.Protocol
    name: Protocol
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasProtocol(Of System.String).Protocol
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1.Protocol
  parent: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1
  isExternal: false
  name: Protocol()
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasProtocol<ProtocolT>.Protocol()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.IHasProtocol(Of ProtocolT).Protocol()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1.Protocol
    name: Protocol
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasProtocol<ProtocolT>.Protocol
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1.Protocol
    name: Protocol
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasProtocol(Of ProtocolT).Protocol
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.IHasFrontend.Frontend
  parent: Microsoft.Azure.Management.Fluent.Network.IHasFrontend
  isExternal: false
  name: Frontend()
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasFrontend.Frontend()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasFrontend.Frontend
    name: Frontend
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasFrontend.Frontend
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasFrontend.Frontend
    name: Frontend
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasFrontend.Frontend
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.IHasBackendPort.BackendPort
  parent: Microsoft.Azure.Management.Fluent.Network.IHasBackendPort
  isExternal: false
  name: BackendPort
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasBackendPort.BackendPort
- uid: System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IWithFrontendPortRange.WithFrontendPortRange(System.Int32,System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IWithFrontendPortRange
  isExternal: true
  name: WithFrontendPortRange(Int32, Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IWithFrontendPortRange.WithFrontendPortRange(System.Int32, System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IWithFrontendPortRange.WithFrontendPortRange(System.Int32,System.Int32)
    name: WithFrontendPortRange
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IWithFrontendPortRange.WithFrontendPortRange
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IWithFrontendPortRange.WithFrontendPortRange(System.Int32,System.Int32)
    name: WithFrontendPortRange
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IWithFrontendPortRange.WithFrontendPortRange
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool},System.String}.WithProtocol(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool},System.String}
  definition: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2.WithProtocol(`1)
  name: WithProtocol(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool>, System.String>.WithProtocol(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol(Of Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool), System.String).WithProtocol(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool>, System.String>.WithProtocol
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol(Of Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool), System.String).WithProtocol
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2.WithProtocol(`1)
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2
  isExternal: false
  name: WithProtocol(ProtocolT)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<ReturnT, ProtocolT>.WithProtocol(ProtocolT)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol(Of ReturnT, ProtocolT).WithProtocol(ProtocolT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<ReturnT, ProtocolT>.WithProtocol
  - name: (
    fullName: (
  - name: ProtocolT
    fullName: ProtocolT
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol(Of ReturnT, ProtocolT).WithProtocol
  - name: (
    fullName: (
  - name: ProtocolT
    fullName: ProtocolT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate,System.String}.WithProtocol(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate,System.String}
  definition: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2.WithProtocol(`1)
  name: WithProtocol(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate, System.String>.WithProtocol(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol(Of Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate, System.String).WithProtocol(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate, System.String>.WithProtocol
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol(Of Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate, System.String).WithProtocol
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2.WithProtocol(`1)
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2
  isExternal: false
  name: WithProtocol(ProtocolT)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol<ReturnT, ProtocolT>.WithProtocol(ProtocolT)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol(Of ReturnT, ProtocolT).WithProtocol(ProtocolT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol<ReturnT, ProtocolT>.WithProtocol
  - name: (
    fullName: (
  - name: ProtocolT
    fullName: ProtocolT
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol(Of ReturnT, ProtocolT).WithProtocol
  - name: (
    fullName: (
  - name: ProtocolT
    fullName: ProtocolT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate},System.String}.WithProtocol(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate},System.String}
  definition: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol`2.WithProtocol(`1)
  name: WithProtocol(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>, System.String>.WithProtocol(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol(Of Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate), System.String).WithProtocol(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>, System.String>.WithProtocol
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol(Of Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate), System.String).WithProtocol
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol`2.WithProtocol(`1)
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol`2
  isExternal: false
  name: WithProtocol(ProtocolT)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol<ReturnT, ProtocolT>.WithProtocol(ProtocolT)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol(Of ReturnT, ProtocolT).WithProtocol(ProtocolT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol<ReturnT, ProtocolT>.WithProtocol
  - name: (
    fullName: (
  - name: ProtocolT
    fullName: ProtocolT
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol(Of ReturnT, ProtocolT).WithProtocol
  - name: (
    fullName: (
  - name: ProtocolT
    fullName: ProtocolT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool}}.WithFrontend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1.WithFrontend(System.String)
  name: WithFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool>>.WithFrontend(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool)).WithFrontend(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1.WithFrontend(System.String)
    name: WithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool>>.WithFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1.WithFrontend(System.String)
    name: WithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool)).WithFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1.WithFrontend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1
  isExternal: true
  name: WithFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend<ReturnT>.WithFrontend(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend(Of ReturnT).WithFrontend(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1.WithFrontend(System.String)
    name: WithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend<ReturnT>.WithFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1.WithFrontend(System.String)
    name: WithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend(Of ReturnT).WithFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate}.WithFrontend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate}
  definition: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1.WithFrontend(System.String)
  name: WithFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate>.WithFrontend(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate).WithFrontend(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1.WithFrontend(System.String)
    name: WithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate>.WithFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1.WithFrontend(System.String)
    name: WithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate).WithFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1.WithFrontend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1
  isExternal: true
  name: WithFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend<ReturnT>.WithFrontend(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend(Of ReturnT).WithFrontend(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1.WithFrontend(System.String)
    name: WithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend<ReturnT>.WithFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1.WithFrontend(System.String)
    name: WithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend(Of ReturnT).WithFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}.WithFrontend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend`1.WithFrontend(System.String)
  name: WithFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFrontend(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)).WithFrontend(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend`1.WithFrontend(System.String)
    name: WithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend`1.WithFrontend(System.String)
    name: WithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)).WithFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend`1.WithFrontend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend`1
  isExternal: true
  name: WithFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend<ReturnT>.WithFrontend(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend(Of ReturnT).WithFrontend(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend`1.WithFrontend(System.String)
    name: WithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend<ReturnT>.WithFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend`1.WithFrontend(System.String)
    name: WithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend(Of ReturnT).WithFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.IInboundNatPool.FrontendPortRangeStart
  parent: Microsoft.Azure.Management.Fluent.Network.IInboundNatPool
  isExternal: false
  name: FrontendPortRangeStart
  fullName: Microsoft.Azure.Management.Fluent.Network.IInboundNatPool.FrontendPortRangeStart
- uid: Microsoft.Azure.Management.Fluent.Network.IInboundNatPool.FrontendPortRangeEnd
  parent: Microsoft.Azure.Management.Fluent.Network.IInboundNatPool
  isExternal: false
  name: FrontendPortRangeEnd
  fullName: Microsoft.Azure.Management.Fluent.Network.IInboundNatPool.FrontendPortRangeEnd
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool}}.WithBackendPort(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1.WithBackendPort(System.Int32)
  name: WithBackendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool>>.WithBackendPort(System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort(Of Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool)).WithBackendPort(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1.WithBackendPort(System.Int32)
    name: WithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool>>.WithBackendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1.WithBackendPort(System.Int32)
    name: WithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort(Of Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool)).WithBackendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1.WithBackendPort(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1
  isExternal: true
  name: WithBackendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort<ReturnT>.WithBackendPort(System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort(Of ReturnT).WithBackendPort(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1.WithBackendPort(System.Int32)
    name: WithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort<ReturnT>.WithBackendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1.WithBackendPort(System.Int32)
    name: WithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort(Of ReturnT).WithBackendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate}.WithBackendPort(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate}
  definition: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1.WithBackendPort(System.Int32)
  name: WithBackendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate>.WithBackendPort(System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort(Of Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate).WithBackendPort(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1.WithBackendPort(System.Int32)
    name: WithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate>.WithBackendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1.WithBackendPort(System.Int32)
    name: WithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort(Of Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Update.IUpdate).WithBackendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1.WithBackendPort(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1
  isExternal: true
  name: WithBackendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort<ReturnT>.WithBackendPort(System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort(Of ReturnT).WithBackendPort(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1.WithBackendPort(System.Int32)
    name: WithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort<ReturnT>.WithBackendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1.WithBackendPort(System.Int32)
    name: WithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort(Of ReturnT).WithBackendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}.WithBackendPort(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort`1.WithBackendPort(System.Int32)
  name: WithBackendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithBackendPort(System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort(Of Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)).WithBackendPort(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort`1.WithBackendPort(System.Int32)
    name: WithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithBackendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort`1.WithBackendPort(System.Int32)
    name: WithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort(Of Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)).WithBackendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort`1.WithBackendPort(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort`1
  isExternal: true
  name: WithBackendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort<ReturnT>.WithBackendPort(System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort(Of ReturnT).WithBackendPort(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort`1.WithBackendPort(System.Int32)
    name: WithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort<ReturnT>.WithBackendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort`1.WithBackendPort(System.Int32)
    name: WithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort(Of ReturnT).WithBackendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool}.WithFrontendPortRange(System.Int32,System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool}
  definition: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange`1.WithFrontendPortRange(System.Int32,System.Int32)
  name: WithFrontendPortRange(Int32, Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool>.WithFrontendPortRange(System.Int32, System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool).WithFrontendPortRange(System.Int32, System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange`1.WithFrontendPortRange(System.Int32,System.Int32)
    name: WithFrontendPortRange
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool>.WithFrontendPortRange
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange`1.WithFrontendPortRange(System.Int32,System.Int32)
    name: WithFrontendPortRange
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatPool).WithFrontendPortRange
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange`1.WithFrontendPortRange(System.Int32,System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange`1
  isExternal: true
  name: WithFrontendPortRange(Int32, Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange<ParentT>.WithFrontendPortRange(System.Int32, System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange(Of ParentT).WithFrontendPortRange(System.Int32, System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange`1.WithFrontendPortRange(System.Int32,System.Int32)
    name: WithFrontendPortRange
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange<ParentT>.WithFrontendPortRange
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange`1.WithFrontendPortRange(System.Int32,System.Int32)
    name: WithFrontendPortRange
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.Definition.IWithFrontendPortRange(Of ParentT).WithFrontendPortRange
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontendPortRange{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}.WithFrontendPortRange(System.Int32,System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontendPortRange{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  definition: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontendPortRange`1.WithFrontendPortRange(System.Int32,System.Int32)
  name: WithFrontendPortRange(Int32, Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontendPortRange<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithFrontendPortRange(System.Int32, System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontendPortRange(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate).WithFrontendPortRange(System.Int32, System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontendPortRange`1.WithFrontendPortRange(System.Int32,System.Int32)
    name: WithFrontendPortRange
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontendPortRange<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithFrontendPortRange
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontendPortRange`1.WithFrontendPortRange(System.Int32,System.Int32)
    name: WithFrontendPortRange
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontendPortRange(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate).WithFrontendPortRange
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontendPortRange`1.WithFrontendPortRange(System.Int32,System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontendPortRange`1
  isExternal: true
  name: WithFrontendPortRange(Int32, Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontendPortRange<ParentT>.WithFrontendPortRange(System.Int32, System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontendPortRange(Of ParentT).WithFrontendPortRange(System.Int32, System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontendPortRange`1.WithFrontendPortRange(System.Int32,System.Int32)
    name: WithFrontendPortRange
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontendPortRange<ParentT>.WithFrontendPortRange
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontendPortRange`1.WithFrontendPortRange(System.Int32,System.Int32)
    name: WithFrontendPortRange
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatPool.UpdateDefinition.IWithFrontendPortRange(Of ParentT).WithFrontendPortRange
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
