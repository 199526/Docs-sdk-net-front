items:
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions
  commentId: T:Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions
  id: RedisOperationsExtensions
  parent: Microsoft.Azure.Management.Fluent.Redis
  children:
  - Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.BeginCreate(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisCreateParametersInner)
  - Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.BeginCreateAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisCreateParametersInner,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.BeginDelete(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String)
  - Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.BeginDeleteAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.BeginExportData(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.ExportRDBParametersInner)
  - Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.BeginExportDataAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.ExportRDBParametersInner,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.BeginImportData(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.ImportRDBParametersInner)
  - Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.BeginImportDataAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.ImportRDBParametersInner,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.BeginUpdate(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisUpdateParametersInner)
  - Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.BeginUpdateAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisUpdateParametersInner,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.Create(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisCreateParametersInner)
  - Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.CreateAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisCreateParametersInner,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.Delete(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String)
  - Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ExportData(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.ExportRDBParametersInner)
  - Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ExportDataAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.ExportRDBParametersInner,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ForceReboot(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisRebootParametersInner)
  - Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ForceRebootAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisRebootParametersInner,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.Get(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String)
  - Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.GetAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ImportData(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.ImportRDBParametersInner)
  - Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ImportDataAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.ImportRDBParametersInner,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.List(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations)
  - Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ListAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ListByResourceGroup(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String)
  - Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ListByResourceGroupAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ListByResourceGroupNext(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String)
  - Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ListByResourceGroupNextAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ListKeys(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String)
  - Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ListKeysAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ListNext(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String)
  - Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.RegenerateKey(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisKeyType)
  - Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.RegenerateKeyAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisKeyType,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.Update(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisUpdateParametersInner)
  - Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisUpdateParametersInner,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: RedisOperationsExtensions
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions
  type: Class
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
      branch: a22251cda68f724317d3ae2d0ae390f6642eb358
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RedisOperationsExtensions
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 17
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nExtension methods for RedisOperations.\n"
  example: []
  syntax:
    content: public class RedisOperationsExtensions
    content.vb: Public Class RedisOperationsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.Create(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisCreateParametersInner)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.Create(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisCreateParametersInner)
  id: Create(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisCreateParametersInner)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: Create(IRedisOperations, String, String, RedisCreateParametersInner)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.Create(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Fluent.Redis.Models.RedisCreateParametersInner)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
      branch: a22251cda68f724317d3ae2d0ae390f6642eb358
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Create
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 35
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nCreate or replace (overwrite/recreate, with potential downtime) an\nexisting redis cache\n"
  example: []
  syntax:
    content: public static RedisResourceInner Create(this IRedisOperations operations, string resourceGroupName, string name, RedisCreateParametersInner parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Create(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As RedisCreateParametersInner) As RedisResourceInner
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Fluent.Redis.Models.RedisCreateParametersInner
      description: "\nParameters supplied to the Create redis operation.\n"
    return:
      type: Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.CreateAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisCreateParametersInner,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.CreateAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisCreateParametersInner,System.Threading.CancellationToken)
  id: CreateAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisCreateParametersInner,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateAsync(IRedisOperations, String, String, RedisCreateParametersInner, CancellationToken)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.CreateAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Fluent.Redis.Models.RedisCreateParametersInner, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
      branch: a22251cda68f724317d3ae2d0ae390f6642eb358
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 59
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nCreate or replace (overwrite/recreate, with potential downtime) an\nexisting redis cache\n"
  example: []
  syntax:
    content: public static Task<RedisResourceInner> CreateAsync(this IRedisOperations operations, string resourceGroupName, string name, RedisCreateParametersInner parameters, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateAsync(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As RedisCreateParametersInner, cancellationToken As CancellationToken = Nothing) As Task(Of RedisResourceInner)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Fluent.Redis.Models.RedisCreateParametersInner
      description: "\nParameters supplied to the Create redis operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.BeginCreate(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisCreateParametersInner)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.BeginCreate(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisCreateParametersInner)
  id: BeginCreate(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisCreateParametersInner)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginCreate(IRedisOperations, String, String, RedisCreateParametersInner)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.BeginCreate(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Fluent.Redis.Models.RedisCreateParametersInner)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
      branch: a22251cda68f724317d3ae2d0ae390f6642eb358
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BeginCreate
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 83
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nCreate or replace (overwrite/recreate, with potential downtime) an\nexisting redis cache\n"
  example: []
  syntax:
    content: public static RedisResourceInner BeginCreate(this IRedisOperations operations, string resourceGroupName, string name, RedisCreateParametersInner parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginCreate(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As RedisCreateParametersInner) As RedisResourceInner
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Fluent.Redis.Models.RedisCreateParametersInner
      description: "\nParameters supplied to the Create redis operation.\n"
    return:
      type: Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.BeginCreateAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisCreateParametersInner,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.BeginCreateAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisCreateParametersInner,System.Threading.CancellationToken)
  id: BeginCreateAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisCreateParametersInner,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginCreateAsync(IRedisOperations, String, String, RedisCreateParametersInner, CancellationToken)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.BeginCreateAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Fluent.Redis.Models.RedisCreateParametersInner, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
      branch: a22251cda68f724317d3ae2d0ae390f6642eb358
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BeginCreateAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 107
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nCreate or replace (overwrite/recreate, with potential downtime) an\nexisting redis cache\n"
  example: []
  syntax:
    content: public static Task<RedisResourceInner> BeginCreateAsync(this IRedisOperations operations, string resourceGroupName, string name, RedisCreateParametersInner parameters, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginCreateAsync(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As RedisCreateParametersInner, cancellationToken As CancellationToken = Nothing) As Task(Of RedisResourceInner)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Fluent.Redis.Models.RedisCreateParametersInner
      description: "\nParameters supplied to the Create redis operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.Update(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisUpdateParametersInner)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.Update(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisUpdateParametersInner)
  id: Update(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisUpdateParametersInner)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: Update(IRedisOperations, String, String, RedisUpdateParametersInner)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.Update(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Fluent.Redis.Models.RedisUpdateParametersInner)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
      branch: a22251cda68f724317d3ae2d0ae390f6642eb358
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Update
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 130
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nUpdate an existing Redis cache\n"
  example: []
  syntax:
    content: public static RedisResourceInner Update(this IRedisOperations operations, string resourceGroupName, string name, RedisUpdateParametersInner parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Update(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As RedisUpdateParametersInner) As RedisResourceInner
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Fluent.Redis.Models.RedisUpdateParametersInner
      description: "\nParameters supplied to the Update redis operation.\n"
    return:
      type: Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisUpdateParametersInner,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisUpdateParametersInner,System.Threading.CancellationToken)
  id: UpdateAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisUpdateParametersInner,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: UpdateAsync(IRedisOperations, String, String, RedisUpdateParametersInner, CancellationToken)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Fluent.Redis.Models.RedisUpdateParametersInner, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
      branch: a22251cda68f724317d3ae2d0ae390f6642eb358
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UpdateAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 153
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nUpdate an existing Redis cache\n"
  example: []
  syntax:
    content: public static Task<RedisResourceInner> UpdateAsync(this IRedisOperations operations, string resourceGroupName, string name, RedisUpdateParametersInner parameters, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UpdateAsync(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As RedisUpdateParametersInner, cancellationToken As CancellationToken = Nothing) As Task(Of RedisResourceInner)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Fluent.Redis.Models.RedisUpdateParametersInner
      description: "\nParameters supplied to the Update redis operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.BeginUpdate(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisUpdateParametersInner)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.BeginUpdate(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisUpdateParametersInner)
  id: BeginUpdate(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisUpdateParametersInner)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginUpdate(IRedisOperations, String, String, RedisUpdateParametersInner)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.BeginUpdate(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Fluent.Redis.Models.RedisUpdateParametersInner)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
      branch: a22251cda68f724317d3ae2d0ae390f6642eb358
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BeginUpdate
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 176
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nUpdate an existing Redis cache\n"
  example: []
  syntax:
    content: public static RedisResourceInner BeginUpdate(this IRedisOperations operations, string resourceGroupName, string name, RedisUpdateParametersInner parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginUpdate(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As RedisUpdateParametersInner) As RedisResourceInner
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Fluent.Redis.Models.RedisUpdateParametersInner
      description: "\nParameters supplied to the Update redis operation.\n"
    return:
      type: Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.BeginUpdateAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisUpdateParametersInner,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.BeginUpdateAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisUpdateParametersInner,System.Threading.CancellationToken)
  id: BeginUpdateAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisUpdateParametersInner,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginUpdateAsync(IRedisOperations, String, String, RedisUpdateParametersInner, CancellationToken)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.BeginUpdateAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Fluent.Redis.Models.RedisUpdateParametersInner, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
      branch: a22251cda68f724317d3ae2d0ae390f6642eb358
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BeginUpdateAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 199
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nUpdate an existing Redis cache\n"
  example: []
  syntax:
    content: public static Task<RedisResourceInner> BeginUpdateAsync(this IRedisOperations operations, string resourceGroupName, string name, RedisUpdateParametersInner parameters, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginUpdateAsync(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As RedisUpdateParametersInner, cancellationToken As CancellationToken = Nothing) As Task(Of RedisResourceInner)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Fluent.Redis.Models.RedisUpdateParametersInner
      description: "\nParameters supplied to the Update redis operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.Delete(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.Delete(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String)
  id: Delete(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: Delete(IRedisOperations, String, String)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.Delete(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
      branch: a22251cda68f724317d3ae2d0ae390f6642eb358
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Delete
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 219
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nDeletes a redis cache. This operation takes a while to complete.\n"
  example: []
  syntax:
    content: public static void Delete(this IRedisOperations operations, string resourceGroupName, string name)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Delete(operations As IRedisOperations, resourceGroupName As String, name As String)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)
  id: DeleteAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: DeleteAsync(IRedisOperations, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
      branch: a22251cda68f724317d3ae2d0ae390f6642eb358
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeleteAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 239
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nDeletes a redis cache. This operation takes a while to complete.\n"
  example: []
  syntax:
    content: public static Task DeleteAsync(this IRedisOperations operations, string resourceGroupName, string name, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteAsync(operations As IRedisOperations, resourceGroupName As String, name As String, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.BeginDelete(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.BeginDelete(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String)
  id: BeginDelete(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginDelete(IRedisOperations, String, String)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.BeginDelete(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
      branch: a22251cda68f724317d3ae2d0ae390f6642eb358
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BeginDelete
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 256
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nDeletes a redis cache. This operation takes a while to complete.\n"
  example: []
  syntax:
    content: public static void BeginDelete(this IRedisOperations operations, string resourceGroupName, string name)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub BeginDelete(operations As IRedisOperations, resourceGroupName As String, name As String)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.BeginDeleteAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.BeginDeleteAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)
  id: BeginDeleteAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginDeleteAsync(IRedisOperations, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.BeginDeleteAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
      branch: a22251cda68f724317d3ae2d0ae390f6642eb358
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BeginDeleteAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 276
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nDeletes a redis cache. This operation takes a while to complete.\n"
  example: []
  syntax:
    content: public static Task BeginDeleteAsync(this IRedisOperations operations, string resourceGroupName, string name, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginDeleteAsync(operations As IRedisOperations, resourceGroupName As String, name As String, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.Get(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.Get(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String)
  id: Get(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: Get(IRedisOperations, String, String)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.Get(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
      branch: a22251cda68f724317d3ae2d0ae390f6642eb358
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Get
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 293
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nGets a redis cache (resource description).\n"
  example: []
  syntax:
    content: public static RedisResourceInner Get(this IRedisOperations operations, string resourceGroupName, string name)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Get(operations As IRedisOperations, resourceGroupName As String, name As String) As RedisResourceInner
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    return:
      type: Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.GetAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.GetAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)
  id: GetAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetAsync(IRedisOperations, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.GetAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
      branch: a22251cda68f724317d3ae2d0ae390f6642eb358
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 313
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nGets a redis cache (resource description).\n"
  example: []
  syntax:
    content: public static Task<RedisResourceInner> GetAsync(this IRedisOperations operations, string resourceGroupName, string name, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAsync(operations As IRedisOperations, resourceGroupName As String, name As String, cancellationToken As CancellationToken = Nothing) As Task(Of RedisResourceInner)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ListByResourceGroup(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ListByResourceGroup(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String)
  id: ListByResourceGroup(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListByResourceGroup(IRedisOperations, String)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ListByResourceGroup(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
      branch: a22251cda68f724317d3ae2d0ae390f6642eb358
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListByResourceGroup
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 330
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nGets all redis caches in a resource group.\n"
  example: []
  syntax:
    content: public static Rest.Azure.IPage<RedisResourceInner> ListByResourceGroup(this IRedisOperations operations, string resourceGroupName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListByResourceGroup(operations As IRedisOperations, resourceGroupName As String) As Rest.Azure.IPage(Of RedisResourceInner)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    return:
      type: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ListByResourceGroupAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ListByResourceGroupAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.Threading.CancellationToken)
  id: ListByResourceGroupAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListByResourceGroupAsync(IRedisOperations, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ListByResourceGroupAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
      branch: a22251cda68f724317d3ae2d0ae390f6642eb358
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListByResourceGroupAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 347
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nGets all redis caches in a resource group.\n"
  example: []
  syntax:
    content: public static Task<Rest.Azure.IPage<RedisResourceInner>> ListByResourceGroupAsync(this IRedisOperations operations, string resourceGroupName, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListByResourceGroupAsync(operations As IRedisOperations, resourceGroupName As String, cancellationToken As CancellationToken = Nothing) As Task(Of Rest.Azure.IPage(Of RedisResourceInner))
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner}}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.List(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.List(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations)
  id: List(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: List(IRedisOperations)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.List(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
      branch: a22251cda68f724317d3ae2d0ae390f6642eb358
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: List
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 361
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nGets all redis caches in the specified subscription.\n"
  example: []
  syntax:
    content: public static Rest.Azure.IPage<RedisResourceInner> List(this IRedisOperations operations)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function List(operations As IRedisOperations) As Rest.Azure.IPage(Of RedisResourceInner)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    return:
      type: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ListAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ListAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.Threading.CancellationToken)
  id: ListAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListAsync(IRedisOperations, CancellationToken)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ListAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
      branch: a22251cda68f724317d3ae2d0ae390f6642eb358
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 375
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nGets all redis caches in the specified subscription.\n"
  example: []
  syntax:
    content: public static Task<Rest.Azure.IPage<RedisResourceInner>> ListAsync(this IRedisOperations operations, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListAsync(operations As IRedisOperations, cancellationToken As CancellationToken = Nothing) As Task(Of Rest.Azure.IPage(Of RedisResourceInner))
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner}}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ListKeys(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ListKeys(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String)
  id: ListKeys(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListKeys(IRedisOperations, String, String)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ListKeys(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
      branch: a22251cda68f724317d3ae2d0ae390f6642eb358
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListKeys
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 396
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nRetrieve a redis cache's access keys. This operation requires write\npermission to the cache resource.\n"
  example: []
  syntax:
    content: public static RedisAccessKeysInner ListKeys(this IRedisOperations operations, string resourceGroupName, string name)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListKeys(operations As IRedisOperations, resourceGroupName As String, name As String) As RedisAccessKeysInner
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    return:
      type: Microsoft.Azure.Management.Fluent.Redis.Models.RedisAccessKeysInner
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ListKeysAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ListKeysAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)
  id: ListKeysAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListKeysAsync(IRedisOperations, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ListKeysAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
      branch: a22251cda68f724317d3ae2d0ae390f6642eb358
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListKeysAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 417
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nRetrieve a redis cache's access keys. This operation requires write\npermission to the cache resource.\n"
  example: []
  syntax:
    content: public static Task<RedisAccessKeysInner> ListKeysAsync(this IRedisOperations operations, string resourceGroupName, string name, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListKeysAsync(operations As IRedisOperations, resourceGroupName As String, name As String, cancellationToken As CancellationToken = Nothing) As Task(Of RedisAccessKeysInner)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Fluent.Redis.Models.RedisAccessKeysInner}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.RegenerateKey(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisKeyType)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.RegenerateKey(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisKeyType)
  id: RegenerateKey(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisKeyType)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: RegenerateKey(IRedisOperations, String, String, RedisKeyType)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.RegenerateKey(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Fluent.Redis.Models.RedisKeyType)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
      branch: a22251cda68f724317d3ae2d0ae390f6642eb358
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RegenerateKey
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 442
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nRegenerate redis cache's access keys. This operation requires write\npermission to the cache resource.\n"
  example: []
  syntax:
    content: public static RedisAccessKeysInner RegenerateKey(this IRedisOperations operations, string resourceGroupName, string name, RedisKeyType keyType)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RegenerateKey(operations As IRedisOperations, resourceGroupName As String, name As String, keyType As RedisKeyType) As RedisAccessKeysInner
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: keyType
      type: Microsoft.Azure.Management.Fluent.Redis.Models.RedisKeyType
      description: "\nWhich redis access key to reset. Possible values include: 'Primary',\n'Secondary'\n"
    return:
      type: Microsoft.Azure.Management.Fluent.Redis.Models.RedisAccessKeysInner
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.RegenerateKeyAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisKeyType,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.RegenerateKeyAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisKeyType,System.Threading.CancellationToken)
  id: RegenerateKeyAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisKeyType,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: RegenerateKeyAsync(IRedisOperations, String, String, RedisKeyType, CancellationToken)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.RegenerateKeyAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Fluent.Redis.Models.RedisKeyType, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
      branch: a22251cda68f724317d3ae2d0ae390f6642eb358
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RegenerateKeyAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 467
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nRegenerate redis cache's access keys. This operation requires write\npermission to the cache resource.\n"
  example: []
  syntax:
    content: public static Task<RedisAccessKeysInner> RegenerateKeyAsync(this IRedisOperations operations, string resourceGroupName, string name, RedisKeyType keyType, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RegenerateKeyAsync(operations As IRedisOperations, resourceGroupName As String, name As String, keyType As RedisKeyType, cancellationToken As CancellationToken = Nothing) As Task(Of RedisAccessKeysInner)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: keyType
      type: Microsoft.Azure.Management.Fluent.Redis.Models.RedisKeyType
      description: "\nWhich redis access key to reset. Possible values include: 'Primary',\n'Secondary'\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Fluent.Redis.Models.RedisAccessKeysInner}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ForceReboot(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisRebootParametersInner)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ForceReboot(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisRebootParametersInner)
  id: ForceReboot(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisRebootParametersInner)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: ForceReboot(IRedisOperations, String, String, RedisRebootParametersInner)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ForceReboot(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Fluent.Redis.Models.RedisRebootParametersInner)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
      branch: a22251cda68f724317d3ae2d0ae390f6642eb358
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ForceReboot
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 491
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nReboot specified redis node(s). This operation requires write permission\nto the cache resource. There can be potential data loss.\n"
  example: []
  syntax:
    content: public static void ForceReboot(this IRedisOperations operations, string resourceGroupName, string name, RedisRebootParametersInner parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub ForceReboot(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As RedisRebootParametersInner)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Fluent.Redis.Models.RedisRebootParametersInner
      description: "\nSpecifies which redis node(s) to reboot.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ForceRebootAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisRebootParametersInner,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ForceRebootAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisRebootParametersInner,System.Threading.CancellationToken)
  id: ForceRebootAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.RedisRebootParametersInner,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: ForceRebootAsync(IRedisOperations, String, String, RedisRebootParametersInner, CancellationToken)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ForceRebootAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Fluent.Redis.Models.RedisRebootParametersInner, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
      branch: a22251cda68f724317d3ae2d0ae390f6642eb358
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ForceRebootAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 515
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nReboot specified redis node(s). This operation requires write permission\nto the cache resource. There can be potential data loss.\n"
  example: []
  syntax:
    content: public static Task ForceRebootAsync(this IRedisOperations operations, string resourceGroupName, string name, RedisRebootParametersInner parameters, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ForceRebootAsync(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As RedisRebootParametersInner, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Fluent.Redis.Models.RedisRebootParametersInner
      description: "\nSpecifies which redis node(s) to reboot.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ImportData(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.ImportRDBParametersInner)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ImportData(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.ImportRDBParametersInner)
  id: ImportData(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.ImportRDBParametersInner)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: ImportData(IRedisOperations, String, String, ImportRDBParametersInner)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ImportData(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Fluent.Redis.Models.ImportRDBParametersInner)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
      branch: a22251cda68f724317d3ae2d0ae390f6642eb358
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ImportData
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 535
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nImport data into redis cache.\n"
  example: []
  syntax:
    content: public static void ImportData(this IRedisOperations operations, string resourceGroupName, string name, ImportRDBParametersInner parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub ImportData(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As ImportRDBParametersInner)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Fluent.Redis.Models.ImportRDBParametersInner
      description: "\nParameters for redis import operation.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ImportDataAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.ImportRDBParametersInner,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ImportDataAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.ImportRDBParametersInner,System.Threading.CancellationToken)
  id: ImportDataAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.ImportRDBParametersInner,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: ImportDataAsync(IRedisOperations, String, String, ImportRDBParametersInner, CancellationToken)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ImportDataAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Fluent.Redis.Models.ImportRDBParametersInner, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
      branch: a22251cda68f724317d3ae2d0ae390f6642eb358
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ImportDataAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 558
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nImport data into redis cache.\n"
  example: []
  syntax:
    content: public static Task ImportDataAsync(this IRedisOperations operations, string resourceGroupName, string name, ImportRDBParametersInner parameters, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ImportDataAsync(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As ImportRDBParametersInner, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Fluent.Redis.Models.ImportRDBParametersInner
      description: "\nParameters for redis import operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.BeginImportData(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.ImportRDBParametersInner)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.BeginImportData(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.ImportRDBParametersInner)
  id: BeginImportData(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.ImportRDBParametersInner)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginImportData(IRedisOperations, String, String, ImportRDBParametersInner)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.BeginImportData(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Fluent.Redis.Models.ImportRDBParametersInner)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
      branch: a22251cda68f724317d3ae2d0ae390f6642eb358
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BeginImportData
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 578
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nImport data into redis cache.\n"
  example: []
  syntax:
    content: public static void BeginImportData(this IRedisOperations operations, string resourceGroupName, string name, ImportRDBParametersInner parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub BeginImportData(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As ImportRDBParametersInner)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Fluent.Redis.Models.ImportRDBParametersInner
      description: "\nParameters for redis import operation.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.BeginImportDataAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.ImportRDBParametersInner,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.BeginImportDataAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.ImportRDBParametersInner,System.Threading.CancellationToken)
  id: BeginImportDataAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.ImportRDBParametersInner,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginImportDataAsync(IRedisOperations, String, String, ImportRDBParametersInner, CancellationToken)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.BeginImportDataAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Fluent.Redis.Models.ImportRDBParametersInner, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
      branch: a22251cda68f724317d3ae2d0ae390f6642eb358
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BeginImportDataAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 601
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nImport data into redis cache.\n"
  example: []
  syntax:
    content: public static Task BeginImportDataAsync(this IRedisOperations operations, string resourceGroupName, string name, ImportRDBParametersInner parameters, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginImportDataAsync(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As ImportRDBParametersInner, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Fluent.Redis.Models.ImportRDBParametersInner
      description: "\nParameters for redis import operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ExportData(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.ExportRDBParametersInner)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ExportData(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.ExportRDBParametersInner)
  id: ExportData(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.ExportRDBParametersInner)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: ExportData(IRedisOperations, String, String, ExportRDBParametersInner)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ExportData(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Fluent.Redis.Models.ExportRDBParametersInner)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
      branch: a22251cda68f724317d3ae2d0ae390f6642eb358
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ExportData
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 621
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nImport data into redis cache.\n"
  example: []
  syntax:
    content: public static void ExportData(this IRedisOperations operations, string resourceGroupName, string name, ExportRDBParametersInner parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub ExportData(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As ExportRDBParametersInner)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Fluent.Redis.Models.ExportRDBParametersInner
      description: "\nParameters for redis export operation.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ExportDataAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.ExportRDBParametersInner,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ExportDataAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.ExportRDBParametersInner,System.Threading.CancellationToken)
  id: ExportDataAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.ExportRDBParametersInner,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: ExportDataAsync(IRedisOperations, String, String, ExportRDBParametersInner, CancellationToken)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ExportDataAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Fluent.Redis.Models.ExportRDBParametersInner, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
      branch: a22251cda68f724317d3ae2d0ae390f6642eb358
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ExportDataAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 644
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nImport data into redis cache.\n"
  example: []
  syntax:
    content: public static Task ExportDataAsync(this IRedisOperations operations, string resourceGroupName, string name, ExportRDBParametersInner parameters, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ExportDataAsync(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As ExportRDBParametersInner, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Fluent.Redis.Models.ExportRDBParametersInner
      description: "\nParameters for redis export operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.BeginExportData(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.ExportRDBParametersInner)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.BeginExportData(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.ExportRDBParametersInner)
  id: BeginExportData(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.ExportRDBParametersInner)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginExportData(IRedisOperations, String, String, ExportRDBParametersInner)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.BeginExportData(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Fluent.Redis.Models.ExportRDBParametersInner)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
      branch: a22251cda68f724317d3ae2d0ae390f6642eb358
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BeginExportData
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 664
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nImport data into redis cache.\n"
  example: []
  syntax:
    content: public static void BeginExportData(this IRedisOperations operations, string resourceGroupName, string name, ExportRDBParametersInner parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub BeginExportData(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As ExportRDBParametersInner)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Fluent.Redis.Models.ExportRDBParametersInner
      description: "\nParameters for redis export operation.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.BeginExportDataAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.ExportRDBParametersInner,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.BeginExportDataAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.ExportRDBParametersInner,System.Threading.CancellationToken)
  id: BeginExportDataAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Fluent.Redis.Models.ExportRDBParametersInner,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginExportDataAsync(IRedisOperations, String, String, ExportRDBParametersInner, CancellationToken)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.BeginExportDataAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Fluent.Redis.Models.ExportRDBParametersInner, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
      branch: a22251cda68f724317d3ae2d0ae390f6642eb358
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BeginExportDataAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 687
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nImport data into redis cache.\n"
  example: []
  syntax:
    content: public static Task BeginExportDataAsync(this IRedisOperations operations, string resourceGroupName, string name, ExportRDBParametersInner parameters, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginExportDataAsync(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As ExportRDBParametersInner, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Fluent.Redis.Models.ExportRDBParametersInner
      description: "\nParameters for redis export operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ListByResourceGroupNext(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ListByResourceGroupNext(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String)
  id: ListByResourceGroupNext(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListByResourceGroupNext(IRedisOperations, String)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ListByResourceGroupNext(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
      branch: a22251cda68f724317d3ae2d0ae390f6642eb358
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListByResourceGroupNext
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 701
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nGets all redis caches in a resource group.\n"
  example: []
  syntax:
    content: public static Rest.Azure.IPage<RedisResourceInner> ListByResourceGroupNext(this IRedisOperations operations, string nextPageLink)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListByResourceGroupNext(operations As IRedisOperations, nextPageLink As String) As Rest.Azure.IPage(Of RedisResourceInner)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    return:
      type: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ListByResourceGroupNextAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ListByResourceGroupNextAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.Threading.CancellationToken)
  id: ListByResourceGroupNextAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListByResourceGroupNextAsync(IRedisOperations, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ListByResourceGroupNextAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
      branch: a22251cda68f724317d3ae2d0ae390f6642eb358
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListByResourceGroupNextAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 718
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nGets all redis caches in a resource group.\n"
  example: []
  syntax:
    content: public static Task<Rest.Azure.IPage<RedisResourceInner>> ListByResourceGroupNextAsync(this IRedisOperations operations, string nextPageLink, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListByResourceGroupNextAsync(operations As IRedisOperations, nextPageLink As String, cancellationToken As CancellationToken = Nothing) As Task(Of Rest.Azure.IPage(Of RedisResourceInner))
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner}}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ListNext(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ListNext(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String)
  id: ListNext(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListNext(IRedisOperations, String)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ListNext(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
      branch: a22251cda68f724317d3ae2d0ae390f6642eb358
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListNext
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 735
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nGets all redis caches in the specified subscription.\n"
  example: []
  syntax:
    content: public static Rest.Azure.IPage<RedisResourceInner> ListNext(this IRedisOperations operations, string nextPageLink)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListNext(operations As IRedisOperations, nextPageLink As String) As Rest.Azure.IPage(Of RedisResourceInner)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    return:
      type: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.Threading.CancellationToken)
  id: ListNextAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListNextAsync(IRedisOperations, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Fluent.Redis.RedisOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Fluent.Redis.IRedisOperations, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
      branch: a22251cda68f724317d3ae2d0ae390f6642eb358
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListNextAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Fluent.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 752
  assemblies:
  - Microsoft.Azure.Management.Fluent.Redis
  packages:
  - Microsoft.Azure.Management.Fluent.Redis(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Redis
  summary: "\nGets all redis caches in the specified subscription.\n"
  example: []
  syntax:
    content: public static Task<Rest.Azure.IPage<RedisResourceInner>> ListNextAsync(this IRedisOperations operations, string nextPageLink, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListNextAsync(operations As IRedisOperations, nextPageLink As String, cancellationToken As CancellationToken = Nothing) As Task(Of Rest.Azure.IPage(Of RedisResourceInner))
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner}}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.Management.Fluent.Redis
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Redis
  fullName: Microsoft.Azure.Management.Fluent.Redis
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
  parent: Microsoft.Azure.Management.Fluent.Redis
  isExternal: false
  name: IRedisOperations
  fullName: Microsoft.Azure.Management.Fluent.Redis.IRedisOperations
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.Azure.Management.Fluent.Redis.Models.RedisCreateParametersInner
  parent: Microsoft.Azure.Management.Fluent.Redis.Models
  isExternal: false
  name: RedisCreateParametersInner
  fullName: Microsoft.Azure.Management.Fluent.Redis.Models.RedisCreateParametersInner
- uid: Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner
  parent: Microsoft.Azure.Management.Fluent.Redis.Models
  isExternal: false
  name: RedisResourceInner
  fullName: Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner
- uid: Microsoft.Azure.Management.Fluent.Redis.Models
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Redis.Models
  fullName: Microsoft.Azure.Management.Fluent.Redis.Models
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<RedisResourceInner>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner)
  name.vb: Task(Of RedisResourceInner)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner
    name: RedisResourceInner
    fullName: Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner
    name: RedisResourceInner
    fullName: Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner
  - name: )
    fullName: )
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Azure.Management.Fluent.Redis.Models.RedisUpdateParametersInner
  parent: Microsoft.Azure.Management.Fluent.Redis.Models
  isExternal: false
  name: RedisUpdateParametersInner
  fullName: Microsoft.Azure.Management.Fluent.Redis.Models.RedisUpdateParametersInner
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner}
  definition: Microsoft.Rest.Azure.IPage`1
  name: Rest.Azure.IPage<RedisResourceInner>
  fullName: Microsoft.Rest.Azure.IPage<Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner>
  fullname.vb: Microsoft.Rest.Azure.IPage(Of Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner)
  name.vb: Rest.Azure.IPage(Of RedisResourceInner)
  spec.csharp:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: Rest.Azure.IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner
    name: RedisResourceInner
    fullName: Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: Rest.Azure.IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner
    name: RedisResourceInner
    fullName: Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner
  - name: )
    fullName: )
- uid: Microsoft.Rest.Azure.IPage`1
  isExternal: true
  name: Rest.Azure.IPage<>
  fullName: Microsoft.Rest.Azure.IPage<>
  fullname.vb: Microsoft.Rest.Azure.IPage(Of )
  name.vb: Rest.Azure.IPage(Of )
  spec.csharp:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: Rest.Azure.IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: Rest.Azure.IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Rest.Azure.IPage<RedisResourceInner>>
  fullName: System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner>>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Rest.Azure.IPage(Of Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner))
  name.vb: Task(Of Rest.Azure.IPage(Of RedisResourceInner))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Rest.Azure.IPage`1
    name: Rest.Azure.IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner
    name: RedisResourceInner
    fullName: Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Rest.Azure.IPage`1
    name: Rest.Azure.IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner
    name: RedisResourceInner
    fullName: Microsoft.Azure.Management.Fluent.Redis.Models.RedisResourceInner
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Redis.Models.RedisAccessKeysInner
  parent: Microsoft.Azure.Management.Fluent.Redis.Models
  isExternal: false
  name: RedisAccessKeysInner
  fullName: Microsoft.Azure.Management.Fluent.Redis.Models.RedisAccessKeysInner
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.Fluent.Redis.Models.RedisAccessKeysInner}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<RedisAccessKeysInner>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.Fluent.Redis.Models.RedisAccessKeysInner>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.Fluent.Redis.Models.RedisAccessKeysInner)
  name.vb: Task(Of RedisAccessKeysInner)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Redis.Models.RedisAccessKeysInner
    name: RedisAccessKeysInner
    fullName: Microsoft.Azure.Management.Fluent.Redis.Models.RedisAccessKeysInner
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Redis.Models.RedisAccessKeysInner
    name: RedisAccessKeysInner
    fullName: Microsoft.Azure.Management.Fluent.Redis.Models.RedisAccessKeysInner
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Redis.Models.RedisKeyType
  parent: Microsoft.Azure.Management.Fluent.Redis.Models
  isExternal: false
  name: RedisKeyType
  fullName: Microsoft.Azure.Management.Fluent.Redis.Models.RedisKeyType
- uid: Microsoft.Azure.Management.Fluent.Redis.Models.RedisRebootParametersInner
  parent: Microsoft.Azure.Management.Fluent.Redis.Models
  isExternal: false
  name: RedisRebootParametersInner
  fullName: Microsoft.Azure.Management.Fluent.Redis.Models.RedisRebootParametersInner
- uid: Microsoft.Azure.Management.Fluent.Redis.Models.ImportRDBParametersInner
  parent: Microsoft.Azure.Management.Fluent.Redis.Models
  isExternal: false
  name: ImportRDBParametersInner
  fullName: Microsoft.Azure.Management.Fluent.Redis.Models.ImportRDBParametersInner
- uid: Microsoft.Azure.Management.Fluent.Redis.Models.ExportRDBParametersInner
  parent: Microsoft.Azure.Management.Fluent.Redis.Models
  isExternal: false
  name: ExportRDBParametersInner
  fullName: Microsoft.Azure.Management.Fluent.Redis.Models.ExportRDBParametersInner
