items:
- uid: Microsoft.Azure.Management.Redis.IRedisOperations
  commentId: T:Microsoft.Azure.Management.Redis.IRedisOperations
  id: IRedisOperations
  parent: Microsoft.Azure.Management.Redis
  children:
  - Microsoft.Azure.Management.Redis.IRedisOperations.BeginExportWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.ExportRDBParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.IRedisOperations.BeginImportWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.ImportRDBParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.IRedisOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisCreateOrUpdateParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.IRedisOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.IRedisOperations.ExportWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.ExportRDBParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.IRedisOperations.ForceRebootWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRebootParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.IRedisOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.IRedisOperations.ImportWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.ImportRDBParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.IRedisOperations.ListByResourceGroupNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.IRedisOperations.ListByResourceGroupWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.IRedisOperations.ListKeysWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.IRedisOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.IRedisOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.IRedisOperations.RegenerateKeyWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IRedisOperations
  fullName: Microsoft.Azure.Management.Redis.IRedisOperations
  type: Interface
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/IRedisOperations.cs
      branch: 0d67211fb525d486d1f40f6b1ddfca74f6650556
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IRedisOperations
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/IRedisOperations.cs
    startLine: 22
  assemblies:
  - Microsoft.Azure.Management.Redis
  packages:
  - Microsoft.Azure.Management.Redis(3.1.1-preview)
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nRedisOperations operations.\n"
  example: []
  syntax:
    content: public interface IRedisOperations
    content.vb: Public Interface IRedisOperations
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Azure.Management.Redis.IRedisOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisCreateOrUpdateParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.IRedisOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisCreateOrUpdateParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisCreateOrUpdateParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Redis.IRedisOperations
  langs:
  - csharp
  - vb
  name: CreateOrUpdateWithHttpMessagesAsync(String, String, RedisCreateOrUpdateParameters, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.IRedisOperations.CreateOrUpdateWithHttpMessagesAsync(System.String, System.String, Microsoft.Azure.Management.Redis.Models.RedisCreateOrUpdateParameters, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/IRedisOperations.cs
      branch: 0d67211fb525d486d1f40f6b1ddfca74f6650556
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateOrUpdateWithHttpMessagesAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/IRedisOperations.cs
    startLine: 43
  assemblies:
  - Microsoft.Azure.Management.Redis
  packages:
  - Microsoft.Azure.Management.Redis(3.1.1-preview)
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nCreate a redis cache, or replace (overwrite/recreate, with\npotential downtime) an existing cache\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse<RedisResourceWithAccessKey>> CreateOrUpdateWithHttpMessagesAsync(string resourceGroupName, string name, RedisCreateOrUpdateParameters parameters, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function CreateOrUpdateWithHttpMessagesAsync(resourceGroupName As String, name As String, parameters As RedisCreateOrUpdateParameters, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse(Of RedisResourceWithAccessKey))
    parameters:
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Redis.Models.RedisCreateOrUpdateParameters
      description: "\nParameters supplied to the CreateOrUpdate redis operation.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse{Microsoft.Azure.Management.Redis.Models.RedisResourceWithAccessKey}}
  fullName.vb: Microsoft.Azure.Management.Redis.IRedisOperations.CreateOrUpdateWithHttpMessagesAsync(System.String, System.String, Microsoft.Azure.Management.Redis.Models.RedisCreateOrUpdateParameters, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: CreateOrUpdateWithHttpMessagesAsync(String, String, RedisCreateOrUpdateParameters, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.Redis.IRedisOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.IRedisOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Redis.IRedisOperations
  langs:
  - csharp
  - vb
  name: DeleteWithHttpMessagesAsync(String, String, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.IRedisOperations.DeleteWithHttpMessagesAsync(System.String, System.String, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/IRedisOperations.cs
      branch: 0d67211fb525d486d1f40f6b1ddfca74f6650556
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeleteWithHttpMessagesAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/IRedisOperations.cs
    startLine: 59
  assemblies:
  - Microsoft.Azure.Management.Redis
  packages:
  - Microsoft.Azure.Management.Redis(3.1.1-preview)
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nDeletes a redis cache. This operation takes a while to complete.\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse> DeleteWithHttpMessagesAsync(string resourceGroupName, string name, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function DeleteWithHttpMessagesAsync(resourceGroupName As String, name As String, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse)
    parameters:
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
  fullName.vb: Microsoft.Azure.Management.Redis.IRedisOperations.DeleteWithHttpMessagesAsync(System.String, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: DeleteWithHttpMessagesAsync(String, String, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.Redis.IRedisOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.IRedisOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Redis.IRedisOperations
  langs:
  - csharp
  - vb
  name: GetWithHttpMessagesAsync(String, String, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.IRedisOperations.GetWithHttpMessagesAsync(System.String, System.String, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/IRedisOperations.cs
      branch: 0d67211fb525d486d1f40f6b1ddfca74f6650556
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetWithHttpMessagesAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/IRedisOperations.cs
    startLine: 75
  assemblies:
  - Microsoft.Azure.Management.Redis
  packages:
  - Microsoft.Azure.Management.Redis(3.1.1-preview)
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nGets a redis cache (resource description).\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse<RedisResource>> GetWithHttpMessagesAsync(string resourceGroupName, string name, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function GetWithHttpMessagesAsync(resourceGroupName As String, name As String, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse(Of RedisResource))
    parameters:
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse{Microsoft.Azure.Management.Redis.Models.RedisResource}}
  fullName.vb: Microsoft.Azure.Management.Redis.IRedisOperations.GetWithHttpMessagesAsync(System.String, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: GetWithHttpMessagesAsync(String, String, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.Redis.IRedisOperations.ListByResourceGroupWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.IRedisOperations.ListByResourceGroupWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: ListByResourceGroupWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Redis.IRedisOperations
  langs:
  - csharp
  - vb
  name: ListByResourceGroupWithHttpMessagesAsync(String, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.IRedisOperations.ListByResourceGroupWithHttpMessagesAsync(System.String, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/IRedisOperations.cs
      branch: 0d67211fb525d486d1f40f6b1ddfca74f6650556
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListByResourceGroupWithHttpMessagesAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/IRedisOperations.cs
    startLine: 88
  assemblies:
  - Microsoft.Azure.Management.Redis
  packages:
  - Microsoft.Azure.Management.Redis(3.1.1-preview)
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nGets all redis caches in a resource group.\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse<IPage<RedisResource>>> ListByResourceGroupWithHttpMessagesAsync(string resourceGroupName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function ListByResourceGroupWithHttpMessagesAsync(resourceGroupName As String, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse(Of IPage(Of RedisResource)))
    parameters:
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse{IPage{Microsoft.Azure.Management.Redis.Models.RedisResource}}}
  fullName.vb: Microsoft.Azure.Management.Redis.IRedisOperations.ListByResourceGroupWithHttpMessagesAsync(System.String, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: ListByResourceGroupWithHttpMessagesAsync(String, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.Redis.IRedisOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.IRedisOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Redis.IRedisOperations
  langs:
  - csharp
  - vb
  name: ListWithHttpMessagesAsync(Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.IRedisOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/IRedisOperations.cs
      branch: 0d67211fb525d486d1f40f6b1ddfca74f6650556
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListWithHttpMessagesAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/IRedisOperations.cs
    startLine: 98
  assemblies:
  - Microsoft.Azure.Management.Redis
  packages:
  - Microsoft.Azure.Management.Redis(3.1.1-preview)
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nGets all redis caches in the specified subscription.\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse<IPage<RedisResource>>> ListWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function ListWithHttpMessagesAsync(customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse(Of IPage(Of RedisResource)))
    parameters:
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse{IPage{Microsoft.Azure.Management.Redis.Models.RedisResource}}}
  fullName.vb: Microsoft.Azure.Management.Redis.IRedisOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: ListWithHttpMessagesAsync(Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.Redis.IRedisOperations.ListKeysWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.IRedisOperations.ListKeysWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: ListKeysWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Redis.IRedisOperations
  langs:
  - csharp
  - vb
  name: ListKeysWithHttpMessagesAsync(String, String, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.IRedisOperations.ListKeysWithHttpMessagesAsync(System.String, System.String, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/IRedisOperations.cs
      branch: 0d67211fb525d486d1f40f6b1ddfca74f6650556
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListKeysWithHttpMessagesAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/IRedisOperations.cs
    startLine: 115
  assemblies:
  - Microsoft.Azure.Management.Redis
  packages:
  - Microsoft.Azure.Management.Redis(3.1.1-preview)
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nRetrieve a redis cache's access keys. This operation requires\nwrite permission to the cache resource.\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse<RedisListKeysResult>> ListKeysWithHttpMessagesAsync(string resourceGroupName, string name, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function ListKeysWithHttpMessagesAsync(resourceGroupName As String, name As String, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse(Of RedisListKeysResult))
    parameters:
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse{Microsoft.Azure.Management.Redis.Models.RedisListKeysResult}}
  fullName.vb: Microsoft.Azure.Management.Redis.IRedisOperations.ListKeysWithHttpMessagesAsync(System.String, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: ListKeysWithHttpMessagesAsync(String, String, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.Redis.IRedisOperations.RegenerateKeyWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.IRedisOperations.RegenerateKeyWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: RegenerateKeyWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Redis.IRedisOperations
  langs:
  - csharp
  - vb
  name: RegenerateKeyWithHttpMessagesAsync(String, String, RedisRegenerateKeyParameters, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.IRedisOperations.RegenerateKeyWithHttpMessagesAsync(System.String, System.String, Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/IRedisOperations.cs
      branch: 0d67211fb525d486d1f40f6b1ddfca74f6650556
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RegenerateKeyWithHttpMessagesAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/IRedisOperations.cs
    startLine: 135
  assemblies:
  - Microsoft.Azure.Management.Redis
  packages:
  - Microsoft.Azure.Management.Redis(3.1.1-preview)
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nRegenerate redis cache's access keys. This operation requires\nwrite permission to the cache resource.\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse<RedisListKeysResult>> RegenerateKeyWithHttpMessagesAsync(string resourceGroupName, string name, RedisRegenerateKeyParameters parameters, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function RegenerateKeyWithHttpMessagesAsync(resourceGroupName As String, name As String, parameters As RedisRegenerateKeyParameters, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse(Of RedisListKeysResult))
    parameters:
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters
      description: "\nSpecifies which key to reset.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse{Microsoft.Azure.Management.Redis.Models.RedisListKeysResult}}
  fullName.vb: Microsoft.Azure.Management.Redis.IRedisOperations.RegenerateKeyWithHttpMessagesAsync(System.String, System.String, Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: RegenerateKeyWithHttpMessagesAsync(String, String, RedisRegenerateKeyParameters, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.Redis.IRedisOperations.ForceRebootWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRebootParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.IRedisOperations.ForceRebootWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRebootParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: ForceRebootWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRebootParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Redis.IRedisOperations
  langs:
  - csharp
  - vb
  name: ForceRebootWithHttpMessagesAsync(String, String, RedisRebootParameters, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.IRedisOperations.ForceRebootWithHttpMessagesAsync(System.String, System.String, Microsoft.Azure.Management.Redis.Models.RedisRebootParameters, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/IRedisOperations.cs
      branch: 0d67211fb525d486d1f40f6b1ddfca74f6650556
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ForceRebootWithHttpMessagesAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/IRedisOperations.cs
    startLine: 156
  assemblies:
  - Microsoft.Azure.Management.Redis
  packages:
  - Microsoft.Azure.Management.Redis(3.1.1-preview)
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nReboot specified redis node(s). This operation requires write\npermission to the cache resource. There can be potential data\nloss.\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse> ForceRebootWithHttpMessagesAsync(string resourceGroupName, string name, RedisRebootParameters parameters, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function ForceRebootWithHttpMessagesAsync(resourceGroupName As String, name As String, parameters As RedisRebootParameters, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse)
    parameters:
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Redis.Models.RedisRebootParameters
      description: "\nSpecifies which redis node(s) to reboot.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
  fullName.vb: Microsoft.Azure.Management.Redis.IRedisOperations.ForceRebootWithHttpMessagesAsync(System.String, System.String, Microsoft.Azure.Management.Redis.Models.RedisRebootParameters, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: ForceRebootWithHttpMessagesAsync(String, String, RedisRebootParameters, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.Redis.IRedisOperations.ImportWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.ImportRDBParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.IRedisOperations.ImportWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.ImportRDBParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: ImportWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.ImportRDBParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Redis.IRedisOperations
  langs:
  - csharp
  - vb
  name: ImportWithHttpMessagesAsync(String, String, ImportRDBParameters, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.IRedisOperations.ImportWithHttpMessagesAsync(System.String, System.String, Microsoft.Azure.Management.Redis.Models.ImportRDBParameters, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/IRedisOperations.cs
      branch: 0d67211fb525d486d1f40f6b1ddfca74f6650556
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ImportWithHttpMessagesAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/IRedisOperations.cs
    startLine: 175
  assemblies:
  - Microsoft.Azure.Management.Redis
  packages:
  - Microsoft.Azure.Management.Redis(3.1.1-preview)
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nImport data into redis cache.\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse> ImportWithHttpMessagesAsync(string resourceGroupName, string name, ImportRDBParameters parameters, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function ImportWithHttpMessagesAsync(resourceGroupName As String, name As String, parameters As ImportRDBParameters, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse)
    parameters:
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Redis.Models.ImportRDBParameters
      description: "\nParameters for redis import operation.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
  fullName.vb: Microsoft.Azure.Management.Redis.IRedisOperations.ImportWithHttpMessagesAsync(System.String, System.String, Microsoft.Azure.Management.Redis.Models.ImportRDBParameters, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: ImportWithHttpMessagesAsync(String, String, ImportRDBParameters, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.Redis.IRedisOperations.BeginImportWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.ImportRDBParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.IRedisOperations.BeginImportWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.ImportRDBParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: BeginImportWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.ImportRDBParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Redis.IRedisOperations
  langs:
  - csharp
  - vb
  name: BeginImportWithHttpMessagesAsync(String, String, ImportRDBParameters, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.IRedisOperations.BeginImportWithHttpMessagesAsync(System.String, System.String, Microsoft.Azure.Management.Redis.Models.ImportRDBParameters, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/IRedisOperations.cs
      branch: 0d67211fb525d486d1f40f6b1ddfca74f6650556
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BeginImportWithHttpMessagesAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/IRedisOperations.cs
    startLine: 194
  assemblies:
  - Microsoft.Azure.Management.Redis
  packages:
  - Microsoft.Azure.Management.Redis(3.1.1-preview)
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nImport data into redis cache.\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse> BeginImportWithHttpMessagesAsync(string resourceGroupName, string name, ImportRDBParameters parameters, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function BeginImportWithHttpMessagesAsync(resourceGroupName As String, name As String, parameters As ImportRDBParameters, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse)
    parameters:
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Redis.Models.ImportRDBParameters
      description: "\nParameters for redis import operation.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
  fullName.vb: Microsoft.Azure.Management.Redis.IRedisOperations.BeginImportWithHttpMessagesAsync(System.String, System.String, Microsoft.Azure.Management.Redis.Models.ImportRDBParameters, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: BeginImportWithHttpMessagesAsync(String, String, ImportRDBParameters, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.Redis.IRedisOperations.ExportWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.ExportRDBParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.IRedisOperations.ExportWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.ExportRDBParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: ExportWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.ExportRDBParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Redis.IRedisOperations
  langs:
  - csharp
  - vb
  name: ExportWithHttpMessagesAsync(String, String, ExportRDBParameters, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.IRedisOperations.ExportWithHttpMessagesAsync(System.String, System.String, Microsoft.Azure.Management.Redis.Models.ExportRDBParameters, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/IRedisOperations.cs
      branch: 0d67211fb525d486d1f40f6b1ddfca74f6650556
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ExportWithHttpMessagesAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/IRedisOperations.cs
    startLine: 213
  assemblies:
  - Microsoft.Azure.Management.Redis
  packages:
  - Microsoft.Azure.Management.Redis(3.1.1-preview)
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nImport data into redis cache.\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse> ExportWithHttpMessagesAsync(string resourceGroupName, string name, ExportRDBParameters parameters, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function ExportWithHttpMessagesAsync(resourceGroupName As String, name As String, parameters As ExportRDBParameters, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse)
    parameters:
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Redis.Models.ExportRDBParameters
      description: "\nParameters for redis export operation.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
  fullName.vb: Microsoft.Azure.Management.Redis.IRedisOperations.ExportWithHttpMessagesAsync(System.String, System.String, Microsoft.Azure.Management.Redis.Models.ExportRDBParameters, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: ExportWithHttpMessagesAsync(String, String, ExportRDBParameters, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.Redis.IRedisOperations.BeginExportWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.ExportRDBParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.IRedisOperations.BeginExportWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.ExportRDBParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: BeginExportWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.ExportRDBParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Redis.IRedisOperations
  langs:
  - csharp
  - vb
  name: BeginExportWithHttpMessagesAsync(String, String, ExportRDBParameters, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.IRedisOperations.BeginExportWithHttpMessagesAsync(System.String, System.String, Microsoft.Azure.Management.Redis.Models.ExportRDBParameters, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/IRedisOperations.cs
      branch: 0d67211fb525d486d1f40f6b1ddfca74f6650556
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BeginExportWithHttpMessagesAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/IRedisOperations.cs
    startLine: 232
  assemblies:
  - Microsoft.Azure.Management.Redis
  packages:
  - Microsoft.Azure.Management.Redis(3.1.1-preview)
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nImport data into redis cache.\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse> BeginExportWithHttpMessagesAsync(string resourceGroupName, string name, ExportRDBParameters parameters, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function BeginExportWithHttpMessagesAsync(resourceGroupName As String, name As String, parameters As ExportRDBParameters, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse)
    parameters:
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Redis.Models.ExportRDBParameters
      description: "\nParameters for redis export operation.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
  fullName.vb: Microsoft.Azure.Management.Redis.IRedisOperations.BeginExportWithHttpMessagesAsync(System.String, System.String, Microsoft.Azure.Management.Redis.Models.ExportRDBParameters, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: BeginExportWithHttpMessagesAsync(String, String, ExportRDBParameters, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.Redis.IRedisOperations.ListByResourceGroupNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.IRedisOperations.ListByResourceGroupNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: ListByResourceGroupNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Redis.IRedisOperations
  langs:
  - csharp
  - vb
  name: ListByResourceGroupNextWithHttpMessagesAsync(String, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.IRedisOperations.ListByResourceGroupNextWithHttpMessagesAsync(System.String, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/IRedisOperations.cs
      branch: 0d67211fb525d486d1f40f6b1ddfca74f6650556
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListByResourceGroupNextWithHttpMessagesAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/IRedisOperations.cs
    startLine: 245
  assemblies:
  - Microsoft.Azure.Management.Redis
  packages:
  - Microsoft.Azure.Management.Redis(3.1.1-preview)
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nGets all redis caches in a resource group.\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse<IPage<RedisResource>>> ListByResourceGroupNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function ListByResourceGroupNextWithHttpMessagesAsync(nextPageLink As String, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse(Of IPage(Of RedisResource)))
    parameters:
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse{IPage{Microsoft.Azure.Management.Redis.Models.RedisResource}}}
  fullName.vb: Microsoft.Azure.Management.Redis.IRedisOperations.ListByResourceGroupNextWithHttpMessagesAsync(System.String, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: ListByResourceGroupNextWithHttpMessagesAsync(String, Dictionary(Of String, List(Of String)), CancellationToken)
- uid: Microsoft.Azure.Management.Redis.IRedisOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.IRedisOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  id: ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Redis.IRedisOperations
  langs:
  - csharp
  - vb
  name: ListNextWithHttpMessagesAsync(String, Dictionary<String, List<String>>, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.IRedisOperations.ListNextWithHttpMessagesAsync(System.String, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/IRedisOperations.cs
      branch: 0d67211fb525d486d1f40f6b1ddfca74f6650556
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListNextWithHttpMessagesAsync
    path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/IRedisOperations.cs
    startLine: 258
  assemblies:
  - Microsoft.Azure.Management.Redis
  packages:
  - Microsoft.Azure.Management.Redis(3.1.1-preview)
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nGets all redis caches in the specified subscription.\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse<IPage<RedisResource>>> ListNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = null)
    content.vb: Function ListNextWithHttpMessagesAsync(nextPageLink As String, customHeaders As Dictionary(Of String, List(Of String)) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse(Of IPage(Of RedisResource)))
    parameters:
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    - id: customHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "\nThe headers that will be added to request.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse{IPage{Microsoft.Azure.Management.Redis.Models.RedisResource}}}
  fullName.vb: Microsoft.Azure.Management.Redis.IRedisOperations.ListNextWithHttpMessagesAsync(System.String, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)), System.Threading.CancellationToken)
  name.vb: ListNextWithHttpMessagesAsync(String, Dictionary(Of String, List(Of String)), CancellationToken)
references:
- uid: Microsoft.Azure.Management.Redis
  isExternal: false
  name: Microsoft.Azure.Management.Redis
  fullName: Microsoft.Azure.Management.Redis
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.Azure.Management.Redis.Models.RedisCreateOrUpdateParameters
  parent: Microsoft.Azure.Management.Redis.Models
  isExternal: false
  name: RedisCreateOrUpdateParameters
  fullName: Microsoft.Azure.Management.Redis.Models.RedisCreateOrUpdateParameters
- uid: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, List<String>>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>
  fullname.vb: System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String))
  name.vb: Dictionary(Of String, List(Of String))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{AzureOperationResponse{Microsoft.Azure.Management.Redis.Models.RedisResourceWithAccessKey}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AzureOperationResponse<RedisResourceWithAccessKey>>
  fullName: System.Threading.Tasks.Task<AzureOperationResponse<Microsoft.Azure.Management.Redis.Models.RedisResourceWithAccessKey>>
  fullname.vb: System.Threading.Tasks.Task(Of AzureOperationResponse(Of Microsoft.Azure.Management.Redis.Models.RedisResourceWithAccessKey))
  name.vb: Task(Of AzureOperationResponse(Of RedisResourceWithAccessKey))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: AzureOperationResponse`1
    name: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Redis.Models.RedisResourceWithAccessKey
    name: RedisResourceWithAccessKey
    fullName: Microsoft.Azure.Management.Redis.Models.RedisResourceWithAccessKey
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: AzureOperationResponse`1
    name: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Redis.Models.RedisResourceWithAccessKey
    name: RedisResourceWithAccessKey
    fullName: Microsoft.Azure.Management.Redis.Models.RedisResourceWithAccessKey
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Management.Redis.Models
  isExternal: false
  name: Microsoft.Azure.Management.Redis.Models
  fullName: Microsoft.Azure.Management.Redis.Models
- uid: System.Collections.Generic.Dictionary`2
  parent: System.Collections.Generic
  isExternal: true
  name: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  fullname.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading.Tasks.Task{AzureOperationResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AzureOperationResponse>
  fullName: System.Threading.Tasks.Task<AzureOperationResponse>
  fullname.vb: System.Threading.Tasks.Task(Of AzureOperationResponse)
  name.vb: Task(Of AzureOperationResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: AzureOperationResponse
    name: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: AzureOperationResponse
    name: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{AzureOperationResponse{Microsoft.Azure.Management.Redis.Models.RedisResource}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AzureOperationResponse<RedisResource>>
  fullName: System.Threading.Tasks.Task<AzureOperationResponse<Microsoft.Azure.Management.Redis.Models.RedisResource>>
  fullname.vb: System.Threading.Tasks.Task(Of AzureOperationResponse(Of Microsoft.Azure.Management.Redis.Models.RedisResource))
  name.vb: Task(Of AzureOperationResponse(Of RedisResource))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: AzureOperationResponse`1
    name: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Redis.Models.RedisResource
    name: RedisResource
    fullName: Microsoft.Azure.Management.Redis.Models.RedisResource
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: AzureOperationResponse`1
    name: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Redis.Models.RedisResource
    name: RedisResource
    fullName: Microsoft.Azure.Management.Redis.Models.RedisResource
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{AzureOperationResponse{IPage{Microsoft.Azure.Management.Redis.Models.RedisResource}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AzureOperationResponse<IPage<RedisResource>>>
  fullName: System.Threading.Tasks.Task<AzureOperationResponse<IPage<Microsoft.Azure.Management.Redis.Models.RedisResource>>>
  fullname.vb: System.Threading.Tasks.Task(Of AzureOperationResponse(Of IPage(Of Microsoft.Azure.Management.Redis.Models.RedisResource)))
  name.vb: Task(Of AzureOperationResponse(Of IPage(Of RedisResource)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: AzureOperationResponse`1
    name: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: <
    fullName: <
  - uid: IPage`1
    name: IPage
    fullName: IPage
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Redis.Models.RedisResource
    name: RedisResource
    fullName: Microsoft.Azure.Management.Redis.Models.RedisResource
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: AzureOperationResponse`1
    name: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: IPage`1
    name: IPage
    fullName: IPage
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Redis.Models.RedisResource
    name: RedisResource
    fullName: Microsoft.Azure.Management.Redis.Models.RedisResource
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{AzureOperationResponse{Microsoft.Azure.Management.Redis.Models.RedisListKeysResult}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AzureOperationResponse<RedisListKeysResult>>
  fullName: System.Threading.Tasks.Task<AzureOperationResponse<Microsoft.Azure.Management.Redis.Models.RedisListKeysResult>>
  fullname.vb: System.Threading.Tasks.Task(Of AzureOperationResponse(Of Microsoft.Azure.Management.Redis.Models.RedisListKeysResult))
  name.vb: Task(Of AzureOperationResponse(Of RedisListKeysResult))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: AzureOperationResponse`1
    name: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Redis.Models.RedisListKeysResult
    name: RedisListKeysResult
    fullName: Microsoft.Azure.Management.Redis.Models.RedisListKeysResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: AzureOperationResponse`1
    name: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Redis.Models.RedisListKeysResult
    name: RedisListKeysResult
    fullName: Microsoft.Azure.Management.Redis.Models.RedisListKeysResult
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters
  parent: Microsoft.Azure.Management.Redis.Models
  isExternal: false
  name: RedisRegenerateKeyParameters
  fullName: Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters
- uid: Microsoft.Azure.Management.Redis.Models.RedisRebootParameters
  parent: Microsoft.Azure.Management.Redis.Models
  isExternal: false
  name: RedisRebootParameters
  fullName: Microsoft.Azure.Management.Redis.Models.RedisRebootParameters
- uid: Microsoft.Azure.Management.Redis.Models.ImportRDBParameters
  parent: Microsoft.Azure.Management.Redis.Models
  isExternal: false
  name: ImportRDBParameters
  fullName: Microsoft.Azure.Management.Redis.Models.ImportRDBParameters
- uid: Microsoft.Azure.Management.Redis.Models.ExportRDBParameters
  parent: Microsoft.Azure.Management.Redis.Models
  isExternal: false
  name: ExportRDBParameters
  fullName: Microsoft.Azure.Management.Redis.Models.ExportRDBParameters
