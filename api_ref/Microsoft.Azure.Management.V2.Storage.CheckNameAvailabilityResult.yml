items:
- uid: Microsoft.Azure.Management.V2.Storage.CheckNameAvailabilityResult
  commentId: T:Microsoft.Azure.Management.V2.Storage.CheckNameAvailabilityResult
  id: CheckNameAvailabilityResult
  parent: Microsoft.Azure.Management.V2.Storage
  children:
  - Microsoft.Azure.Management.V2.Storage.CheckNameAvailabilityResult.IsAvailalbe
  - Microsoft.Azure.Management.V2.Storage.CheckNameAvailabilityResult.Message
  - Microsoft.Azure.Management.V2.Storage.CheckNameAvailabilityResult.Reason
  langs:
  - csharp
  - vb
  name: CheckNameAvailabilityResult
  fullName: Microsoft.Azure.Management.V2.Storage.CheckNameAvailabilityResult
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.V2.Storage/StorageAccount/CheckNameAvailabilityResult.cs
      branch: 6741b9cfb99de698ca40cefe7507c88bd740f361
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CheckNameAvailabilityResult
    path: src/ResourceManagement/Storage/Microsoft.Azure.Management.V2.Storage/StorageAccount/CheckNameAvailabilityResult.cs
    startLine: 7
  assemblies:
  - Microsoft.Azure.Management.V2.Storage
  packages:
  - Microsoft.Azure.Management.V2.Storage(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Storage
  syntax:
    content: public class CheckNameAvailabilityResult
    content.vb: Public Class CheckNameAvailabilityResult
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.V2.Storage.CheckNameAvailabilityResult.IsAvailalbe
  commentId: P:Microsoft.Azure.Management.V2.Storage.CheckNameAvailabilityResult.IsAvailalbe
  id: IsAvailalbe
  parent: Microsoft.Azure.Management.V2.Storage.CheckNameAvailabilityResult
  langs:
  - csharp
  - vb
  name: IsAvailalbe
  fullName: Microsoft.Azure.Management.V2.Storage.CheckNameAvailabilityResult.IsAvailalbe
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.V2.Storage/StorageAccount/CheckNameAvailabilityResult.cs
      branch: 6741b9cfb99de698ca40cefe7507c88bd740f361
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IsAvailalbe
    path: src/ResourceManagement/Storage/Microsoft.Azure.Management.V2.Storage/StorageAccount/CheckNameAvailabilityResult.cs
    startLine: 16
  assemblies:
  - Microsoft.Azure.Management.V2.Storage
  packages:
  - Microsoft.Azure.Management.V2.Storage(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Storage
  syntax:
    content: public bool ? IsAvailalbe { get; }
    content.vb: Public ReadOnly Property IsAvailalbe As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.V2.Storage.CheckNameAvailabilityResult.Reason
  commentId: P:Microsoft.Azure.Management.V2.Storage.CheckNameAvailabilityResult.Reason
  id: Reason
  parent: Microsoft.Azure.Management.V2.Storage.CheckNameAvailabilityResult
  langs:
  - csharp
  - vb
  name: Reason
  fullName: Microsoft.Azure.Management.V2.Storage.CheckNameAvailabilityResult.Reason
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.V2.Storage/StorageAccount/CheckNameAvailabilityResult.cs
      branch: 6741b9cfb99de698ca40cefe7507c88bd740f361
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Reason
    path: src/ResourceManagement/Storage/Microsoft.Azure.Management.V2.Storage/StorageAccount/CheckNameAvailabilityResult.cs
    startLine: 24
  assemblies:
  - Microsoft.Azure.Management.V2.Storage
  packages:
  - Microsoft.Azure.Management.V2.Storage(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Storage
  syntax:
    content: public Reason? Reason { get; }
    content.vb: Public ReadOnly Property Reason As Reason?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.Storage.Models.Reason}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.V2.Storage.CheckNameAvailabilityResult.Message
  commentId: P:Microsoft.Azure.Management.V2.Storage.CheckNameAvailabilityResult.Message
  id: Message
  parent: Microsoft.Azure.Management.V2.Storage.CheckNameAvailabilityResult
  langs:
  - csharp
  - vb
  name: Message
  fullName: Microsoft.Azure.Management.V2.Storage.CheckNameAvailabilityResult.Message
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.V2.Storage/StorageAccount/CheckNameAvailabilityResult.cs
      branch: 6741b9cfb99de698ca40cefe7507c88bd740f361
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Message
    path: src/ResourceManagement/Storage/Microsoft.Azure.Management.V2.Storage/StorageAccount/CheckNameAvailabilityResult.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Management.V2.Storage
  packages:
  - Microsoft.Azure.Management.V2.Storage(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Storage
  syntax:
    content: public string Message { get; }
    content.vb: Public ReadOnly Property Message As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Azure.Management.V2.Storage
  isExternal: false
  name: Microsoft.Azure.Management.V2.Storage
  fullName: Microsoft.Azure.Management.V2.Storage
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Nullable{Microsoft.Azure.Management.Storage.Models.Reason}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Reason>
  fullName: System.Nullable<Microsoft.Azure.Management.Storage.Models.Reason>
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.Storage.Models.Reason)
  name.vb: Nullable(Of Reason)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Storage.Models.Reason
    name: Reason
    fullName: Microsoft.Azure.Management.Storage.Models.Reason
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Storage.Models.Reason
    name: Reason
    fullName: Microsoft.Azure.Management.Storage.Models.Reason
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
