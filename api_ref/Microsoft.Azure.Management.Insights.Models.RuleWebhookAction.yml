items:
- uid: Microsoft.Azure.Management.Insights.Models.RuleWebhookAction
  commentId: T:Microsoft.Azure.Management.Insights.Models.RuleWebhookAction
  id: RuleWebhookAction
  parent: Microsoft.Azure.Management.Insights.Models
  children:
  - Microsoft.Azure.Management.Insights.Models.RuleWebhookAction.#ctor
  - Microsoft.Azure.Management.Insights.Models.RuleWebhookAction.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})
  - Microsoft.Azure.Management.Insights.Models.RuleWebhookAction.Properties
  - Microsoft.Azure.Management.Insights.Models.RuleWebhookAction.ServiceUri
  langs:
  - csharp
  - vb
  name: RuleWebhookAction
  fullName: Microsoft.Azure.Management.Insights.Models.RuleWebhookAction
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Insights/Microsoft.Azure.Insights/Generated/Management/Insights/Models/RuleWebhookAction.cs
      branch: 90abd71e223211ca3db26acbd29390809f4183dd
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: RuleWebhookAction
    path: src/ResourceManagement/Insights/Microsoft.Azure.Insights/Generated/Management/Insights/Models/RuleWebhookAction.cs
    startLine: 16
  assemblies:
  - Microsoft.Azure.Insights
  packages:
  - Microsoft.Azure.Insights(0.14.0-preview)
  namespace: Microsoft.Azure.Management.Insights.Models
  summary: "\nSpecifies the action to post to service when the rule condition is\nevaluated.\n"
  example: []
  syntax:
    content: 'public class RuleWebhookAction : RuleAction'
    content.vb: >-
      Public Class RuleWebhookAction
          Inherits RuleAction
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.Insights.Models.RuleAction
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Insights.Models.RuleWebhookAction.#ctor
  commentId: M:Microsoft.Azure.Management.Insights.Models.RuleWebhookAction.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Insights.Models.RuleWebhookAction
  langs:
  - csharp
  - vb
  name: RuleWebhookAction()
  fullName: Microsoft.Azure.Management.Insights.Models.RuleWebhookAction.RuleWebhookAction()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Insights/Microsoft.Azure.Insights/Generated/Management/Insights/Models/RuleWebhookAction.cs
      branch: 90abd71e223211ca3db26acbd29390809f4183dd
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Insights/Microsoft.Azure.Insights/Generated/Management/Insights/Models/RuleWebhookAction.cs
    startLine: 22
  assemblies:
  - Microsoft.Azure.Insights
  packages:
  - Microsoft.Azure.Insights(0.14.0-preview)
  namespace: Microsoft.Azure.Management.Insights.Models
  summary: "\nInitializes a new instance of the RuleWebhookAction class.\n"
  example: []
  syntax:
    content: public RuleWebhookAction()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Insights.Models.RuleWebhookAction.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})
  commentId: M:Microsoft.Azure.Management.Insights.Models.RuleWebhookAction.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})
  id: '#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})'
  parent: Microsoft.Azure.Management.Insights.Models.RuleWebhookAction
  langs:
  - csharp
  - vb
  name: RuleWebhookAction(String, IDictionary<String, String>)
  fullName: Microsoft.Azure.Management.Insights.Models.RuleWebhookAction.RuleWebhookAction(System.String, System.Collections.Generic.IDictionary<System.String, System.String>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Insights/Microsoft.Azure.Insights/Generated/Management/Insights/Models/RuleWebhookAction.cs
      branch: 90abd71e223211ca3db26acbd29390809f4183dd
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Insights/Microsoft.Azure.Insights/Generated/Management/Insights/Models/RuleWebhookAction.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.Insights
  packages:
  - Microsoft.Azure.Insights(0.14.0-preview)
  namespace: Microsoft.Azure.Management.Insights.Models
  summary: "\nInitializes a new instance of the RuleWebhookAction class.\n"
  example: []
  syntax:
    content: public RuleWebhookAction(string serviceUri = null, IDictionary<string, string> properties = null)
    content.vb: Public Sub New(serviceUri As String = Nothing, properties As IDictionary(Of String, String) = Nothing)
    parameters:
    - id: serviceUri
      type: System.String
      description: >-
        the service uri to Post the

        notitication.
    - id: properties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: >-
        the dictionary of custom properties to

        include with the post operation.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Insights.Models.RuleWebhookAction.RuleWebhookAction(System.String, System.Collections.Generic.IDictionary(Of System.String, System.String))
  name.vb: RuleWebhookAction(String, IDictionary(Of String, String))
- uid: Microsoft.Azure.Management.Insights.Models.RuleWebhookAction.ServiceUri
  commentId: P:Microsoft.Azure.Management.Insights.Models.RuleWebhookAction.ServiceUri
  id: ServiceUri
  parent: Microsoft.Azure.Management.Insights.Models.RuleWebhookAction
  langs:
  - csharp
  - vb
  name: ServiceUri
  fullName: Microsoft.Azure.Management.Insights.Models.RuleWebhookAction.ServiceUri
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Insights/Microsoft.Azure.Insights/Generated/Management/Insights/Models/RuleWebhookAction.cs
      branch: 90abd71e223211ca3db26acbd29390809f4183dd
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ServiceUri
    path: src/ResourceManagement/Insights/Microsoft.Azure.Insights/Generated/Management/Insights/Models/RuleWebhookAction.cs
    startLine: 40
  assemblies:
  - Microsoft.Azure.Insights
  packages:
  - Microsoft.Azure.Insights(0.14.0-preview)
  namespace: Microsoft.Azure.Management.Insights.Models
  summary: "\nGets or sets the service uri to Post the notitication.\n"
  example: []
  syntax:
    content: public string ServiceUri { get; set; }
    content.vb: Public Property ServiceUri As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Insights.Models.RuleWebhookAction.Properties
  commentId: P:Microsoft.Azure.Management.Insights.Models.RuleWebhookAction.Properties
  id: Properties
  parent: Microsoft.Azure.Management.Insights.Models.RuleWebhookAction
  langs:
  - csharp
  - vb
  name: Properties
  fullName: Microsoft.Azure.Management.Insights.Models.RuleWebhookAction.Properties
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Insights/Microsoft.Azure.Insights/Generated/Management/Insights/Models/RuleWebhookAction.cs
      branch: 90abd71e223211ca3db26acbd29390809f4183dd
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Properties
    path: src/ResourceManagement/Insights/Microsoft.Azure.Insights/Generated/Management/Insights/Models/RuleWebhookAction.cs
    startLine: 47
  assemblies:
  - Microsoft.Azure.Insights
  packages:
  - Microsoft.Azure.Insights(0.14.0-preview)
  namespace: Microsoft.Azure.Management.Insights.Models
  summary: "\nGets or sets the dictionary of custom properties to include with\nthe post operation.\n"
  example: []
  syntax:
    content: public IDictionary<string, string> Properties { get; set; }
    content.vb: Public Property Properties As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Insights.Models
  isExternal: false
  name: Microsoft.Azure.Management.Insights.Models
  fullName: Microsoft.Azure.Management.Insights.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.Insights.Models.RuleAction
  parent: Microsoft.Azure.Management.Insights.Models
  isExternal: false
  name: RuleAction
  fullName: Microsoft.Azure.Management.Insights.Models.RuleAction
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
