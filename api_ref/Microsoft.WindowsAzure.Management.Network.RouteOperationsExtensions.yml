### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  commentId: T:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  id: RouteOperationsExtensions
  parent: Microsoft.WindowsAzure.Management.Network
  children:
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.AbortMigration(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.AbortMigrationAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.AddRouteTableToSubnet(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String,Microsoft.WindowsAzure.Management.Network.Models.AddRouteTableToSubnetParameters)
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.AddRouteTableToSubnetAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String,Microsoft.WindowsAzure.Management.Network.Models.AddRouteTableToSubnetParameters)
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginAbortMigration(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginAbortMigrationAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginAddRouteTableToSubnet(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String,Microsoft.WindowsAzure.Management.Network.Models.AddRouteTableToSubnetParameters)
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginAddRouteTableToSubnetAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String,Microsoft.WindowsAzure.Management.Network.Models.AddRouteTableToSubnetParameters)
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginCommitMigration(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginCommitMigrationAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginCreateRouteTable(Microsoft.WindowsAzure.Management.Network.IRouteOperations,Microsoft.WindowsAzure.Management.Network.Models.CreateRouteTableParameters)
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginCreateRouteTableAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,Microsoft.WindowsAzure.Management.Network.Models.CreateRouteTableParameters)
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginDeleteRoute(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String)
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginDeleteRouteAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String)
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginDeleteRouteTable(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginDeleteRouteTableAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginPrepareMigration(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginPrepareMigrationAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginRemoveRouteTableFromSubnet(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String)
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginRemoveRouteTableFromSubnetAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String)
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginSetRoute(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String,Microsoft.WindowsAzure.Management.Network.Models.SetRouteParameters)
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginSetRouteAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String,Microsoft.WindowsAzure.Management.Network.Models.SetRouteParameters)
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.CommitMigration(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.CommitMigrationAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.CreateRouteTable(Microsoft.WindowsAzure.Management.Network.IRouteOperations,Microsoft.WindowsAzure.Management.Network.Models.CreateRouteTableParameters)
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.CreateRouteTableAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,Microsoft.WindowsAzure.Management.Network.Models.CreateRouteTableParameters)
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.DeleteRoute(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String)
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.DeleteRouteAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String)
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.DeleteRouteTable(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.DeleteRouteTableAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.GetEffectiveRouteTableForNetworkInterface(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String,System.String,System.String)
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.GetEffectiveRouteTableForNetworkInterfaceAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String,System.String,System.String)
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.GetEffectiveRouteTableForRoleInstance(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String,System.String)
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.GetEffectiveRouteTableForRoleInstanceAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String,System.String)
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.GetRouteTable(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.GetRouteTableAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.GetRouteTableForSubnet(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String)
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.GetRouteTableForSubnetAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String)
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.GetRouteTableWithDetails(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String)
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.GetRouteTableWithDetailsAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String)
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.ListRouteTables(Microsoft.WindowsAzure.Management.Network.IRouteOperations)
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.ListRouteTablesAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations)
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.PrepareMigration(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.PrepareMigrationAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.RemoveRouteTableFromSubnet(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String)
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.RemoveRouteTableFromSubnetAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String)
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.SetRoute(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String,Microsoft.WindowsAzure.Management.Network.Models.SetRouteParameters)
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.SetRouteAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String,Microsoft.WindowsAzure.Management.Network.Models.SetRouteParameters)
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.ValidateMigration(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  - Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.ValidateMigrationAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  langs:
  - csharp
  - vb
  name: RouteOperationsExtensions
  nameWithType: RouteOperationsExtensions
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  type: Class
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: RouteOperationsExtensions
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 37
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nThe Service Management API includes operations for managing the virtual\nnetworks for your subscription.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/jj157182.aspx for\nmore information)\n"
  example: []
  syntax:
    content: public static class RouteOperationsExtensions
    content.vb: Public Module RouteOperationsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.AbortMigration(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.AbortMigration(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  id: AbortMigration(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: AbortMigration(IRouteOperations, String)
  nameWithType: RouteOperationsExtensions.AbortMigration(IRouteOperations, String)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.AbortMigration(Microsoft.WindowsAzure.Management.Network.IRouteOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: AbortMigration
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 61
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nAbort routetable migration api validates and aborts the given\nroutetable for IaaS Classic to ARM migration.\n"
  example: []
  syntax:
    content: public static OperationStatusResponse AbortMigration(this IRouteOperations operations, string routeTableName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AbortMigration(operations As IRouteOperations, routeTableName As String) As OperationStatusResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    - id: routeTableName
      type: System.String
      description: "\nRequired. Name of the routetable to be migrated.\n"
    return:
      type: OperationStatusResponse
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself. If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request. If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request, and also includes error\ninformation regarding the failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.AbortMigrationAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.AbortMigrationAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  id: AbortMigrationAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: AbortMigrationAsync(IRouteOperations, String)
  nameWithType: RouteOperationsExtensions.AbortMigrationAsync(IRouteOperations, String)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.AbortMigrationAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: AbortMigrationAsync
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 92
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nAbort routetable migration api validates and aborts the given\nroutetable for IaaS Classic to ARM migration.\n"
  example: []
  syntax:
    content: public static Task<OperationStatusResponse> AbortMigrationAsync(this IRouteOperations operations, string routeTableName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AbortMigrationAsync(operations As IRouteOperations, routeTableName As String) As Task(Of OperationStatusResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    - id: routeTableName
      type: System.String
      description: "\nRequired. Name of the routetable to be migrated.\n"
    return:
      type: System.Threading.Tasks.Task{OperationStatusResponse}
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself. If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request. If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request, and also includes error\ninformation regarding the failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.AddRouteTableToSubnet(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String,Microsoft.WindowsAzure.Management.Network.Models.AddRouteTableToSubnetParameters)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.AddRouteTableToSubnet(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String,Microsoft.WindowsAzure.Management.Network.Models.AddRouteTableToSubnetParameters)
  id: AddRouteTableToSubnet(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String,Microsoft.WindowsAzure.Management.Network.Models.AddRouteTableToSubnetParameters)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: AddRouteTableToSubnet(IRouteOperations, String, String, AddRouteTableToSubnetParameters)
  nameWithType: RouteOperationsExtensions.AddRouteTableToSubnet(IRouteOperations, String, String, AddRouteTableToSubnetParameters)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.AddRouteTableToSubnet(Microsoft.WindowsAzure.Management.Network.IRouteOperations, System.String, System.String, Microsoft.WindowsAzure.Management.Network.Models.AddRouteTableToSubnetParameters)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: AddRouteTableToSubnet
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 128
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nSet the specified route table for the provided subnet in the\nprovided virtual network in this subscription.\n"
  example: []
  syntax:
    content: public static OperationStatusResponse AddRouteTableToSubnet(this IRouteOperations operations, string vnetName, string subnetName, AddRouteTableToSubnetParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddRouteTableToSubnet(operations As IRouteOperations, vnetName As String, subnetName As String, parameters As AddRouteTableToSubnetParameters) As OperationStatusResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    - id: vnetName
      type: System.String
      description: "\nRequired. The name of the virtual network that contains the\nprovided subnet.\n"
    - id: subnetName
      type: System.String
      description: "\nRequired. The name of the subnet that the route table will be added\nto.\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Network.Models.AddRouteTableToSubnetParameters
      description: "\nRequired. The parameters necessary to add a route table to the\nprovided subnet.\n"
    return:
      type: OperationStatusResponse
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself. If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request. If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request, and also includes error\ninformation regarding the failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.AddRouteTableToSubnetAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String,Microsoft.WindowsAzure.Management.Network.Models.AddRouteTableToSubnetParameters)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.AddRouteTableToSubnetAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String,Microsoft.WindowsAzure.Management.Network.Models.AddRouteTableToSubnetParameters)
  id: AddRouteTableToSubnetAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String,Microsoft.WindowsAzure.Management.Network.Models.AddRouteTableToSubnetParameters)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: AddRouteTableToSubnetAsync(IRouteOperations, String, String, AddRouteTableToSubnetParameters)
  nameWithType: RouteOperationsExtensions.AddRouteTableToSubnetAsync(IRouteOperations, String, String, AddRouteTableToSubnetParameters)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.AddRouteTableToSubnetAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations, System.String, System.String, Microsoft.WindowsAzure.Management.Network.Models.AddRouteTableToSubnetParameters)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: AddRouteTableToSubnetAsync
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 168
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nSet the specified route table for the provided subnet in the\nprovided virtual network in this subscription.\n"
  example: []
  syntax:
    content: public static Task<OperationStatusResponse> AddRouteTableToSubnetAsync(this IRouteOperations operations, string vnetName, string subnetName, AddRouteTableToSubnetParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddRouteTableToSubnetAsync(operations As IRouteOperations, vnetName As String, subnetName As String, parameters As AddRouteTableToSubnetParameters) As Task(Of OperationStatusResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    - id: vnetName
      type: System.String
      description: "\nRequired. The name of the virtual network that contains the\nprovided subnet.\n"
    - id: subnetName
      type: System.String
      description: "\nRequired. The name of the subnet that the route table will be added\nto.\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Network.Models.AddRouteTableToSubnetParameters
      description: "\nRequired. The parameters necessary to add a route table to the\nprovided subnet.\n"
    return:
      type: System.Threading.Tasks.Task{OperationStatusResponse}
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself. If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request. If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request, and also includes error\ninformation regarding the failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginAbortMigration(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginAbortMigration(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  id: BeginAbortMigration(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginAbortMigration(IRouteOperations, String)
  nameWithType: RouteOperationsExtensions.BeginAbortMigration(IRouteOperations, String)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginAbortMigration(Microsoft.WindowsAzure.Management.Network.IRouteOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: BeginAbortMigration
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 188
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nAbort routetable migration api validates and aborts the given\nroutetable for IaaS Classic to ARM migration.\n"
  example: []
  syntax:
    content: public static AzureOperationResponse BeginAbortMigration(this IRouteOperations operations, string routeTableName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginAbortMigration(operations As IRouteOperations, routeTableName As String) As AzureOperationResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    - id: routeTableName
      type: System.String
      description: "\nRequired. Name of the routetable to be migrated.\n"
    return:
      type: AzureOperationResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginAbortMigrationAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginAbortMigrationAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  id: BeginAbortMigrationAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginAbortMigrationAsync(IRouteOperations, String)
  nameWithType: RouteOperationsExtensions.BeginAbortMigrationAsync(IRouteOperations, String)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginAbortMigrationAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: BeginAbortMigrationAsync
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 212
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nAbort routetable migration api validates and aborts the given\nroutetable for IaaS Classic to ARM migration.\n"
  example: []
  syntax:
    content: public static Task<AzureOperationResponse> BeginAbortMigrationAsync(this IRouteOperations operations, string routeTableName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginAbortMigrationAsync(operations As IRouteOperations, routeTableName As String) As Task(Of AzureOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    - id: routeTableName
      type: System.String
      description: "\nRequired. Name of the routetable to be migrated.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginAddRouteTableToSubnet(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String,Microsoft.WindowsAzure.Management.Network.Models.AddRouteTableToSubnetParameters)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginAddRouteTableToSubnet(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String,Microsoft.WindowsAzure.Management.Network.Models.AddRouteTableToSubnetParameters)
  id: BeginAddRouteTableToSubnet(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String,Microsoft.WindowsAzure.Management.Network.Models.AddRouteTableToSubnetParameters)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginAddRouteTableToSubnet(IRouteOperations, String, String, AddRouteTableToSubnetParameters)
  nameWithType: RouteOperationsExtensions.BeginAddRouteTableToSubnet(IRouteOperations, String, String, AddRouteTableToSubnetParameters)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginAddRouteTableToSubnet(Microsoft.WindowsAzure.Management.Network.IRouteOperations, System.String, System.String, Microsoft.WindowsAzure.Management.Network.Models.AddRouteTableToSubnetParameters)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: BeginAddRouteTableToSubnet
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 241
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nSet the specified route table for the provided subnet in the\nprovided virtual network in this subscription.\n"
  example: []
  syntax:
    content: public static AzureOperationResponse BeginAddRouteTableToSubnet(this IRouteOperations operations, string vnetName, string subnetName, AddRouteTableToSubnetParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginAddRouteTableToSubnet(operations As IRouteOperations, vnetName As String, subnetName As String, parameters As AddRouteTableToSubnetParameters) As AzureOperationResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    - id: vnetName
      type: System.String
      description: "\nRequired. The name of the virtual network that contains the\nprovided subnet.\n"
    - id: subnetName
      type: System.String
      description: "\nRequired. The name of the subnet that the route table will be added\nto.\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Network.Models.AddRouteTableToSubnetParameters
      description: "\nRequired. The parameters necessary to add a route table to the\nprovided subnet.\n"
    return:
      type: AzureOperationResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginAddRouteTableToSubnetAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String,Microsoft.WindowsAzure.Management.Network.Models.AddRouteTableToSubnetParameters)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginAddRouteTableToSubnetAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String,Microsoft.WindowsAzure.Management.Network.Models.AddRouteTableToSubnetParameters)
  id: BeginAddRouteTableToSubnetAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String,Microsoft.WindowsAzure.Management.Network.Models.AddRouteTableToSubnetParameters)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginAddRouteTableToSubnetAsync(IRouteOperations, String, String, AddRouteTableToSubnetParameters)
  nameWithType: RouteOperationsExtensions.BeginAddRouteTableToSubnetAsync(IRouteOperations, String, String, AddRouteTableToSubnetParameters)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginAddRouteTableToSubnetAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations, System.String, System.String, Microsoft.WindowsAzure.Management.Network.Models.AddRouteTableToSubnetParameters)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: BeginAddRouteTableToSubnetAsync
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 274
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nSet the specified route table for the provided subnet in the\nprovided virtual network in this subscription.\n"
  example: []
  syntax:
    content: public static Task<AzureOperationResponse> BeginAddRouteTableToSubnetAsync(this IRouteOperations operations, string vnetName, string subnetName, AddRouteTableToSubnetParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginAddRouteTableToSubnetAsync(operations As IRouteOperations, vnetName As String, subnetName As String, parameters As AddRouteTableToSubnetParameters) As Task(Of AzureOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    - id: vnetName
      type: System.String
      description: "\nRequired. The name of the virtual network that contains the\nprovided subnet.\n"
    - id: subnetName
      type: System.String
      description: "\nRequired. The name of the subnet that the route table will be added\nto.\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Network.Models.AddRouteTableToSubnetParameters
      description: "\nRequired. The parameters necessary to add a route table to the\nprovided subnet.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginCommitMigration(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginCommitMigration(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  id: BeginCommitMigration(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginCommitMigration(IRouteOperations, String)
  nameWithType: RouteOperationsExtensions.BeginCommitMigration(IRouteOperations, String)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginCommitMigration(Microsoft.WindowsAzure.Management.Network.IRouteOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: BeginCommitMigration
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 294
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nCommit routetable migration api validates and commits the given\nroutetable for IaaS Classic to ARM migration.\n"
  example: []
  syntax:
    content: public static AzureOperationResponse BeginCommitMigration(this IRouteOperations operations, string routeTableName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginCommitMigration(operations As IRouteOperations, routeTableName As String) As AzureOperationResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    - id: routeTableName
      type: System.String
      description: "\nRequired. Name of the routetable to be migrated.\n"
    return:
      type: AzureOperationResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginCommitMigrationAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginCommitMigrationAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  id: BeginCommitMigrationAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginCommitMigrationAsync(IRouteOperations, String)
  nameWithType: RouteOperationsExtensions.BeginCommitMigrationAsync(IRouteOperations, String)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginCommitMigrationAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: BeginCommitMigrationAsync
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 318
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nCommit routetable migration api validates and commits the given\nroutetable for IaaS Classic to ARM migration.\n"
  example: []
  syntax:
    content: public static Task<AzureOperationResponse> BeginCommitMigrationAsync(this IRouteOperations operations, string routeTableName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginCommitMigrationAsync(operations As IRouteOperations, routeTableName As String) As Task(Of AzureOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    - id: routeTableName
      type: System.String
      description: "\nRequired. Name of the routetable to be migrated.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginCreateRouteTable(Microsoft.WindowsAzure.Management.Network.IRouteOperations,Microsoft.WindowsAzure.Management.Network.Models.CreateRouteTableParameters)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginCreateRouteTable(Microsoft.WindowsAzure.Management.Network.IRouteOperations,Microsoft.WindowsAzure.Management.Network.Models.CreateRouteTableParameters)
  id: BeginCreateRouteTable(Microsoft.WindowsAzure.Management.Network.IRouteOperations,Microsoft.WindowsAzure.Management.Network.Models.CreateRouteTableParameters)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginCreateRouteTable(IRouteOperations, CreateRouteTableParameters)
  nameWithType: RouteOperationsExtensions.BeginCreateRouteTable(IRouteOperations, CreateRouteTableParameters)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginCreateRouteTable(Microsoft.WindowsAzure.Management.Network.IRouteOperations, Microsoft.WindowsAzure.Management.Network.Models.CreateRouteTableParameters)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: BeginCreateRouteTable
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 337
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nCreate the specified route table for this subscription.\n"
  example: []
  syntax:
    content: public static AzureOperationResponse BeginCreateRouteTable(this IRouteOperations operations, CreateRouteTableParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginCreateRouteTable(operations As IRouteOperations, parameters As CreateRouteTableParameters) As AzureOperationResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Network.Models.CreateRouteTableParameters
      description: "\nRequired. The parameters necessary to create a new route table.\n"
    return:
      type: AzureOperationResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginCreateRouteTableAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,Microsoft.WindowsAzure.Management.Network.Models.CreateRouteTableParameters)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginCreateRouteTableAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,Microsoft.WindowsAzure.Management.Network.Models.CreateRouteTableParameters)
  id: BeginCreateRouteTableAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,Microsoft.WindowsAzure.Management.Network.Models.CreateRouteTableParameters)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginCreateRouteTableAsync(IRouteOperations, CreateRouteTableParameters)
  nameWithType: RouteOperationsExtensions.BeginCreateRouteTableAsync(IRouteOperations, CreateRouteTableParameters)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginCreateRouteTableAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations, Microsoft.WindowsAzure.Management.Network.Models.CreateRouteTableParameters)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: BeginCreateRouteTableAsync
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 360
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nCreate the specified route table for this subscription.\n"
  example: []
  syntax:
    content: public static Task<AzureOperationResponse> BeginCreateRouteTableAsync(this IRouteOperations operations, CreateRouteTableParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginCreateRouteTableAsync(operations As IRouteOperations, parameters As CreateRouteTableParameters) As Task(Of AzureOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Network.Models.CreateRouteTableParameters
      description: "\nRequired. The parameters necessary to create a new route table.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginDeleteRoute(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginDeleteRoute(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String)
  id: BeginDeleteRoute(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginDeleteRoute(IRouteOperations, String, String)
  nameWithType: RouteOperationsExtensions.BeginDeleteRoute(IRouteOperations, String, String)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginDeleteRoute(Microsoft.WindowsAzure.Management.Network.IRouteOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: BeginDeleteRoute
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 384
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nSet the specified route for the provided table in this subscription.\n"
  example: []
  syntax:
    content: public static AzureOperationResponse BeginDeleteRoute(this IRouteOperations operations, string routeTableName, string routeName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginDeleteRoute(operations As IRouteOperations, routeTableName As String, routeName As String) As AzureOperationResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    - id: routeTableName
      type: System.String
      description: "\nRequired. The name of the route table where the provided route will\nbe set.\n"
    - id: routeName
      type: System.String
      description: "\nRequired. The name of the route that will be set on the provided\nroute table.\n"
    return:
      type: AzureOperationResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginDeleteRouteAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginDeleteRouteAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String)
  id: BeginDeleteRouteAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginDeleteRouteAsync(IRouteOperations, String, String)
  nameWithType: RouteOperationsExtensions.BeginDeleteRouteAsync(IRouteOperations, String, String)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginDeleteRouteAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: BeginDeleteRouteAsync
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 412
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nSet the specified route for the provided table in this subscription.\n"
  example: []
  syntax:
    content: public static Task<AzureOperationResponse> BeginDeleteRouteAsync(this IRouteOperations operations, string routeTableName, string routeName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginDeleteRouteAsync(operations As IRouteOperations, routeTableName As String, routeName As String) As Task(Of AzureOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    - id: routeTableName
      type: System.String
      description: "\nRequired. The name of the route table where the provided route will\nbe set.\n"
    - id: routeName
      type: System.String
      description: "\nRequired. The name of the route that will be set on the provided\nroute table.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginDeleteRouteTable(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginDeleteRouteTable(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  id: BeginDeleteRouteTable(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginDeleteRouteTable(IRouteOperations, String)
  nameWithType: RouteOperationsExtensions.BeginDeleteRouteTable(IRouteOperations, String)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginDeleteRouteTable(Microsoft.WindowsAzure.Management.Network.IRouteOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: BeginDeleteRouteTable
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 431
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nDelete the specified route table for this subscription.\n"
  example: []
  syntax:
    content: public static AzureOperationResponse BeginDeleteRouteTable(this IRouteOperations operations, string routeTableName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginDeleteRouteTable(operations As IRouteOperations, routeTableName As String) As AzureOperationResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    - id: routeTableName
      type: System.String
      description: "\nRequired. The name of the route table to delete.\n"
    return:
      type: AzureOperationResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginDeleteRouteTableAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginDeleteRouteTableAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  id: BeginDeleteRouteTableAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginDeleteRouteTableAsync(IRouteOperations, String)
  nameWithType: RouteOperationsExtensions.BeginDeleteRouteTableAsync(IRouteOperations, String)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginDeleteRouteTableAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: BeginDeleteRouteTableAsync
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 454
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nDelete the specified route table for this subscription.\n"
  example: []
  syntax:
    content: public static Task<AzureOperationResponse> BeginDeleteRouteTableAsync(this IRouteOperations operations, string routeTableName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginDeleteRouteTableAsync(operations As IRouteOperations, routeTableName As String) As Task(Of AzureOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    - id: routeTableName
      type: System.String
      description: "\nRequired. The name of the route table to delete.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginPrepareMigration(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginPrepareMigration(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  id: BeginPrepareMigration(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginPrepareMigration(IRouteOperations, String)
  nameWithType: RouteOperationsExtensions.BeginPrepareMigration(IRouteOperations, String)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginPrepareMigration(Microsoft.WindowsAzure.Management.Network.IRouteOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: BeginPrepareMigration
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 474
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nPrepare routetable migration api validates and prepares the given\nroutetable for IaaS Classic to ARM migration.\n"
  example: []
  syntax:
    content: public static AzureOperationResponse BeginPrepareMigration(this IRouteOperations operations, string routeTableName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginPrepareMigration(operations As IRouteOperations, routeTableName As String) As AzureOperationResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    - id: routeTableName
      type: System.String
      description: "\nRequired. Name of the routetable to be migrated.\n"
    return:
      type: AzureOperationResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginPrepareMigrationAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginPrepareMigrationAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  id: BeginPrepareMigrationAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginPrepareMigrationAsync(IRouteOperations, String)
  nameWithType: RouteOperationsExtensions.BeginPrepareMigrationAsync(IRouteOperations, String)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginPrepareMigrationAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: BeginPrepareMigrationAsync
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 498
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nPrepare routetable migration api validates and prepares the given\nroutetable for IaaS Classic to ARM migration.\n"
  example: []
  syntax:
    content: public static Task<AzureOperationResponse> BeginPrepareMigrationAsync(this IRouteOperations operations, string routeTableName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginPrepareMigrationAsync(operations As IRouteOperations, routeTableName As String) As Task(Of AzureOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    - id: routeTableName
      type: System.String
      description: "\nRequired. Name of the routetable to be migrated.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginRemoveRouteTableFromSubnet(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginRemoveRouteTableFromSubnet(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String)
  id: BeginRemoveRouteTableFromSubnet(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginRemoveRouteTableFromSubnet(IRouteOperations, String, String)
  nameWithType: RouteOperationsExtensions.BeginRemoveRouteTableFromSubnet(IRouteOperations, String, String)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginRemoveRouteTableFromSubnet(Microsoft.WindowsAzure.Management.Network.IRouteOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: BeginRemoveRouteTableFromSubnet
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 523
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nRemove the route table from the provided subnet in the provided\nvirtual network in this subscription.\n"
  example: []
  syntax:
    content: public static AzureOperationResponse BeginRemoveRouteTableFromSubnet(this IRouteOperations operations, string vnetName, string subnetName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginRemoveRouteTableFromSubnet(operations As IRouteOperations, vnetName As String, subnetName As String) As AzureOperationResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    - id: vnetName
      type: System.String
      description: "\nRequired. The name of the virtual network that contains the\nprovided subnet.\n"
    - id: subnetName
      type: System.String
      description: "\nRequired. The name of the subnet that the route table will be\nremoved from.\n"
    return:
      type: AzureOperationResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginRemoveRouteTableFromSubnetAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginRemoveRouteTableFromSubnetAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String)
  id: BeginRemoveRouteTableFromSubnetAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginRemoveRouteTableFromSubnetAsync(IRouteOperations, String, String)
  nameWithType: RouteOperationsExtensions.BeginRemoveRouteTableFromSubnetAsync(IRouteOperations, String, String)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginRemoveRouteTableFromSubnetAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: BeginRemoveRouteTableFromSubnetAsync
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 552
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nRemove the route table from the provided subnet in the provided\nvirtual network in this subscription.\n"
  example: []
  syntax:
    content: public static Task<AzureOperationResponse> BeginRemoveRouteTableFromSubnetAsync(this IRouteOperations operations, string vnetName, string subnetName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginRemoveRouteTableFromSubnetAsync(operations As IRouteOperations, vnetName As String, subnetName As String) As Task(Of AzureOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    - id: vnetName
      type: System.String
      description: "\nRequired. The name of the virtual network that contains the\nprovided subnet.\n"
    - id: subnetName
      type: System.String
      description: "\nRequired. The name of the subnet that the route table will be\nremoved from.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginSetRoute(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String,Microsoft.WindowsAzure.Management.Network.Models.SetRouteParameters)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginSetRoute(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String,Microsoft.WindowsAzure.Management.Network.Models.SetRouteParameters)
  id: BeginSetRoute(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String,Microsoft.WindowsAzure.Management.Network.Models.SetRouteParameters)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginSetRoute(IRouteOperations, String, String, SetRouteParameters)
  nameWithType: RouteOperationsExtensions.BeginSetRoute(IRouteOperations, String, String, SetRouteParameters)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginSetRoute(Microsoft.WindowsAzure.Management.Network.IRouteOperations, System.String, System.String, Microsoft.WindowsAzure.Management.Network.Models.SetRouteParameters)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: BeginSetRoute
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 579
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nSet the specified route for the provided table in this subscription.\n"
  example: []
  syntax:
    content: public static AzureOperationResponse BeginSetRoute(this IRouteOperations operations, string routeTableName, string routeName, SetRouteParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginSetRoute(operations As IRouteOperations, routeTableName As String, routeName As String, parameters As SetRouteParameters) As AzureOperationResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    - id: routeTableName
      type: System.String
      description: "\nRequired. The name of the route table where the provided route will\nbe set.\n"
    - id: routeName
      type: System.String
      description: "\nRequired. The name of the route that will be set on the provided\nroute table.\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Network.Models.SetRouteParameters
      description: "\nRequired. The parameters necessary to create a new route table.\n"
    return:
      type: AzureOperationResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginSetRouteAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String,Microsoft.WindowsAzure.Management.Network.Models.SetRouteParameters)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginSetRouteAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String,Microsoft.WindowsAzure.Management.Network.Models.SetRouteParameters)
  id: BeginSetRouteAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String,Microsoft.WindowsAzure.Management.Network.Models.SetRouteParameters)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginSetRouteAsync(IRouteOperations, String, String, SetRouteParameters)
  nameWithType: RouteOperationsExtensions.BeginSetRouteAsync(IRouteOperations, String, String, SetRouteParameters)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.BeginSetRouteAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations, System.String, System.String, Microsoft.WindowsAzure.Management.Network.Models.SetRouteParameters)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: BeginSetRouteAsync
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 610
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nSet the specified route for the provided table in this subscription.\n"
  example: []
  syntax:
    content: public static Task<AzureOperationResponse> BeginSetRouteAsync(this IRouteOperations operations, string routeTableName, string routeName, SetRouteParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginSetRouteAsync(operations As IRouteOperations, routeTableName As String, routeName As String, parameters As SetRouteParameters) As Task(Of AzureOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    - id: routeTableName
      type: System.String
      description: "\nRequired. The name of the route table where the provided route will\nbe set.\n"
    - id: routeName
      type: System.String
      description: "\nRequired. The name of the route that will be set on the provided\nroute table.\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Network.Models.SetRouteParameters
      description: "\nRequired. The parameters necessary to create a new route table.\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.CommitMigration(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.CommitMigration(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  id: CommitMigration(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: CommitMigration(IRouteOperations, String)
  nameWithType: RouteOperationsExtensions.CommitMigration(IRouteOperations, String)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.CommitMigration(Microsoft.WindowsAzure.Management.Network.IRouteOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: CommitMigration
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 637
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nCommit routetable migration api validates and commits the given\nroutetable for IaaS Classic to ARM migration.\n"
  example: []
  syntax:
    content: public static OperationStatusResponse CommitMigration(this IRouteOperations operations, string routeTableName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CommitMigration(operations As IRouteOperations, routeTableName As String) As OperationStatusResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    - id: routeTableName
      type: System.String
      description: "\nRequired. Name of the routetable to be migrated.\n"
    return:
      type: OperationStatusResponse
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself. If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request. If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request, and also includes error\ninformation regarding the failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.CommitMigrationAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.CommitMigrationAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  id: CommitMigrationAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: CommitMigrationAsync(IRouteOperations, String)
  nameWithType: RouteOperationsExtensions.CommitMigrationAsync(IRouteOperations, String)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.CommitMigrationAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: CommitMigrationAsync
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 668
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nCommit routetable migration api validates and commits the given\nroutetable for IaaS Classic to ARM migration.\n"
  example: []
  syntax:
    content: public static Task<OperationStatusResponse> CommitMigrationAsync(this IRouteOperations operations, string routeTableName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CommitMigrationAsync(operations As IRouteOperations, routeTableName As String) As Task(Of OperationStatusResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    - id: routeTableName
      type: System.String
      description: "\nRequired. Name of the routetable to be migrated.\n"
    return:
      type: System.Threading.Tasks.Task{OperationStatusResponse}
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself. If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request. If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request, and also includes error\ninformation regarding the failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.CreateRouteTable(Microsoft.WindowsAzure.Management.Network.IRouteOperations,Microsoft.WindowsAzure.Management.Network.Models.CreateRouteTableParameters)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.CreateRouteTable(Microsoft.WindowsAzure.Management.Network.IRouteOperations,Microsoft.WindowsAzure.Management.Network.Models.CreateRouteTableParameters)
  id: CreateRouteTable(Microsoft.WindowsAzure.Management.Network.IRouteOperations,Microsoft.WindowsAzure.Management.Network.Models.CreateRouteTableParameters)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateRouteTable(IRouteOperations, CreateRouteTableParameters)
  nameWithType: RouteOperationsExtensions.CreateRouteTable(IRouteOperations, CreateRouteTableParameters)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.CreateRouteTable(Microsoft.WindowsAzure.Management.Network.IRouteOperations, Microsoft.WindowsAzure.Management.Network.Models.CreateRouteTableParameters)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: CreateRouteTable
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 694
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nCreate the specified route table for this subscription.\n"
  example: []
  syntax:
    content: public static OperationStatusResponse CreateRouteTable(this IRouteOperations operations, CreateRouteTableParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateRouteTable(operations As IRouteOperations, parameters As CreateRouteTableParameters) As OperationStatusResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Network.Models.CreateRouteTableParameters
      description: "\nRequired. The parameters necessary to create a new route table.\n"
    return:
      type: OperationStatusResponse
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself. If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request. If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request, and also includes error\ninformation regarding the failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.CreateRouteTableAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,Microsoft.WindowsAzure.Management.Network.Models.CreateRouteTableParameters)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.CreateRouteTableAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,Microsoft.WindowsAzure.Management.Network.Models.CreateRouteTableParameters)
  id: CreateRouteTableAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,Microsoft.WindowsAzure.Management.Network.Models.CreateRouteTableParameters)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateRouteTableAsync(IRouteOperations, CreateRouteTableParameters)
  nameWithType: RouteOperationsExtensions.CreateRouteTableAsync(IRouteOperations, CreateRouteTableParameters)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.CreateRouteTableAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations, Microsoft.WindowsAzure.Management.Network.Models.CreateRouteTableParameters)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: CreateRouteTableAsync
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 724
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nCreate the specified route table for this subscription.\n"
  example: []
  syntax:
    content: public static Task<OperationStatusResponse> CreateRouteTableAsync(this IRouteOperations operations, CreateRouteTableParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateRouteTableAsync(operations As IRouteOperations, parameters As CreateRouteTableParameters) As Task(Of OperationStatusResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Network.Models.CreateRouteTableParameters
      description: "\nRequired. The parameters necessary to create a new route table.\n"
    return:
      type: System.Threading.Tasks.Task{OperationStatusResponse}
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself. If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request. If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request, and also includes error\ninformation regarding the failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.DeleteRoute(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.DeleteRoute(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String)
  id: DeleteRoute(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: DeleteRoute(IRouteOperations, String, String)
  nameWithType: RouteOperationsExtensions.DeleteRoute(IRouteOperations, String, String)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.DeleteRoute(Microsoft.WindowsAzure.Management.Network.IRouteOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: DeleteRoute
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 755
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nSet the specified route for the provided table in this subscription.\n"
  example: []
  syntax:
    content: public static OperationStatusResponse DeleteRoute(this IRouteOperations operations, string routeTableName, string routeName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteRoute(operations As IRouteOperations, routeTableName As String, routeName As String) As OperationStatusResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    - id: routeTableName
      type: System.String
      description: "\nRequired. The name of the route table where the provided route will\nbe set.\n"
    - id: routeName
      type: System.String
      description: "\nRequired. The name of the route that will be set on the provided\nroute table.\n"
    return:
      type: OperationStatusResponse
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself. If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request. If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request, and also includes error\ninformation regarding the failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.DeleteRouteAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.DeleteRouteAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String)
  id: DeleteRouteAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: DeleteRouteAsync(IRouteOperations, String, String)
  nameWithType: RouteOperationsExtensions.DeleteRouteAsync(IRouteOperations, String, String)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.DeleteRouteAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: DeleteRouteAsync
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 790
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nSet the specified route for the provided table in this subscription.\n"
  example: []
  syntax:
    content: public static Task<OperationStatusResponse> DeleteRouteAsync(this IRouteOperations operations, string routeTableName, string routeName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteRouteAsync(operations As IRouteOperations, routeTableName As String, routeName As String) As Task(Of OperationStatusResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    - id: routeTableName
      type: System.String
      description: "\nRequired. The name of the route table where the provided route will\nbe set.\n"
    - id: routeName
      type: System.String
      description: "\nRequired. The name of the route that will be set on the provided\nroute table.\n"
    return:
      type: System.Threading.Tasks.Task{OperationStatusResponse}
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself. If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request. If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request, and also includes error\ninformation regarding the failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.DeleteRouteTable(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.DeleteRouteTable(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  id: DeleteRouteTable(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: DeleteRouteTable(IRouteOperations, String)
  nameWithType: RouteOperationsExtensions.DeleteRouteTable(IRouteOperations, String)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.DeleteRouteTable(Microsoft.WindowsAzure.Management.Network.IRouteOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: DeleteRouteTable
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 816
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nDelete the specified route table for this subscription.\n"
  example: []
  syntax:
    content: public static OperationStatusResponse DeleteRouteTable(this IRouteOperations operations, string routeTableName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteRouteTable(operations As IRouteOperations, routeTableName As String) As OperationStatusResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    - id: routeTableName
      type: System.String
      description: "\nRequired. The name of the route table to delete.\n"
    return:
      type: OperationStatusResponse
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself. If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request. If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request, and also includes error\ninformation regarding the failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.DeleteRouteTableAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.DeleteRouteTableAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  id: DeleteRouteTableAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: DeleteRouteTableAsync(IRouteOperations, String)
  nameWithType: RouteOperationsExtensions.DeleteRouteTableAsync(IRouteOperations, String)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.DeleteRouteTableAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: DeleteRouteTableAsync
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 846
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nDelete the specified route table for this subscription.\n"
  example: []
  syntax:
    content: public static Task<OperationStatusResponse> DeleteRouteTableAsync(this IRouteOperations operations, string routeTableName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteRouteTableAsync(operations As IRouteOperations, routeTableName As String) As Task(Of OperationStatusResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    - id: routeTableName
      type: System.String
      description: "\nRequired. The name of the route table to delete.\n"
    return:
      type: System.Threading.Tasks.Task{OperationStatusResponse}
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself. If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request. If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request, and also includes error\ninformation regarding the failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.GetEffectiveRouteTableForNetworkInterface(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.GetEffectiveRouteTableForNetworkInterface(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String,System.String,System.String)
  id: GetEffectiveRouteTableForNetworkInterface(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetEffectiveRouteTableForNetworkInterface(IRouteOperations, String, String, String, String)
  nameWithType: RouteOperationsExtensions.GetEffectiveRouteTableForNetworkInterface(IRouteOperations, String, String, String, String)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.GetEffectiveRouteTableForNetworkInterface(Microsoft.WindowsAzure.Management.Network.IRouteOperations, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetEffectiveRouteTableForNetworkInterface
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 875
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nGet the effective route table for the provided network interface in\nthis subscription.\n"
  example: []
  syntax:
    content: public static GetEffectiveRouteTableResponse GetEffectiveRouteTableForNetworkInterface(this IRouteOperations operations, string serviceName, string deploymentName, string roleinstanceName, string networkInterfaceName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetEffectiveRouteTableForNetworkInterface(operations As IRouteOperations, serviceName As String, deploymentName As String, roleinstanceName As String, networkInterfaceName As String) As GetEffectiveRouteTableResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    - id: serviceName
      type: System.String
      description: "\nRequired. The name of the cloud service.\n"
    - id: deploymentName
      type: System.String
      description: "\nRequired. The name of the deployment.\n"
    - id: roleinstanceName
      type: System.String
      description: "\nRequired. The name of the role instance.\n"
    - id: networkInterfaceName
      type: System.String
      description: "\nRequired. The name of the network interface.\n"
    return:
      type: Microsoft.WindowsAzure.Management.Network.Models.GetEffectiveRouteTableResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.GetEffectiveRouteTableForNetworkInterfaceAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.GetEffectiveRouteTableForNetworkInterfaceAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String,System.String,System.String)
  id: GetEffectiveRouteTableForNetworkInterfaceAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetEffectiveRouteTableForNetworkInterfaceAsync(IRouteOperations, String, String, String, String)
  nameWithType: RouteOperationsExtensions.GetEffectiveRouteTableForNetworkInterfaceAsync(IRouteOperations, String, String, String, String)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.GetEffectiveRouteTableForNetworkInterfaceAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetEffectiveRouteTableForNetworkInterfaceAsync
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 908
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nGet the effective route table for the provided network interface in\nthis subscription.\n"
  example: []
  syntax:
    content: public static Task<GetEffectiveRouteTableResponse> GetEffectiveRouteTableForNetworkInterfaceAsync(this IRouteOperations operations, string serviceName, string deploymentName, string roleinstanceName, string networkInterfaceName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetEffectiveRouteTableForNetworkInterfaceAsync(operations As IRouteOperations, serviceName As String, deploymentName As String, roleinstanceName As String, networkInterfaceName As String) As Task(Of GetEffectiveRouteTableResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    - id: serviceName
      type: System.String
      description: "\nRequired. The name of the cloud service.\n"
    - id: deploymentName
      type: System.String
      description: "\nRequired. The name of the deployment.\n"
    - id: roleinstanceName
      type: System.String
      description: "\nRequired. The name of the role instance.\n"
    - id: networkInterfaceName
      type: System.String
      description: "\nRequired. The name of the network interface.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.Network.Models.GetEffectiveRouteTableResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.GetEffectiveRouteTableForRoleInstance(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.GetEffectiveRouteTableForRoleInstance(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String,System.String)
  id: GetEffectiveRouteTableForRoleInstance(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetEffectiveRouteTableForRoleInstance(IRouteOperations, String, String, String)
  nameWithType: RouteOperationsExtensions.GetEffectiveRouteTableForRoleInstance(IRouteOperations, String, String, String)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.GetEffectiveRouteTableForRoleInstance(Microsoft.WindowsAzure.Management.Network.IRouteOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetEffectiveRouteTableForRoleInstance
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 934
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nGet the effective route table for the provided role instance in\nthis subscription.\n"
  example: []
  syntax:
    content: public static GetEffectiveRouteTableResponse GetEffectiveRouteTableForRoleInstance(this IRouteOperations operations, string serviceName, string deploymentName, string roleinstanceName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetEffectiveRouteTableForRoleInstance(operations As IRouteOperations, serviceName As String, deploymentName As String, roleinstanceName As String) As GetEffectiveRouteTableResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    - id: serviceName
      type: System.String
      description: "\nRequired. The name of the cloud service.\n"
    - id: deploymentName
      type: System.String
      description: "\nRequired. The name of the deployment.\n"
    - id: roleinstanceName
      type: System.String
      description: "\nRequired. The name of the role instance.\n"
    return:
      type: Microsoft.WindowsAzure.Management.Network.Models.GetEffectiveRouteTableResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.GetEffectiveRouteTableForRoleInstanceAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.GetEffectiveRouteTableForRoleInstanceAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String,System.String)
  id: GetEffectiveRouteTableForRoleInstanceAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetEffectiveRouteTableForRoleInstanceAsync(IRouteOperations, String, String, String)
  nameWithType: RouteOperationsExtensions.GetEffectiveRouteTableForRoleInstanceAsync(IRouteOperations, String, String, String)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.GetEffectiveRouteTableForRoleInstanceAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetEffectiveRouteTableForRoleInstanceAsync
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 964
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nGet the effective route table for the provided role instance in\nthis subscription.\n"
  example: []
  syntax:
    content: public static Task<GetEffectiveRouteTableResponse> GetEffectiveRouteTableForRoleInstanceAsync(this IRouteOperations operations, string serviceName, string deploymentName, string roleinstanceName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetEffectiveRouteTableForRoleInstanceAsync(operations As IRouteOperations, serviceName As String, deploymentName As String, roleinstanceName As String) As Task(Of GetEffectiveRouteTableResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    - id: serviceName
      type: System.String
      description: "\nRequired. The name of the cloud service.\n"
    - id: deploymentName
      type: System.String
      description: "\nRequired. The name of the deployment.\n"
    - id: roleinstanceName
      type: System.String
      description: "\nRequired. The name of the role instance.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.Network.Models.GetEffectiveRouteTableResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.GetRouteTable(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.GetRouteTable(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  id: GetRouteTable(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetRouteTable(IRouteOperations, String)
  nameWithType: RouteOperationsExtensions.GetRouteTable(IRouteOperations, String)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.GetRouteTable(Microsoft.WindowsAzure.Management.Network.IRouteOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetRouteTable
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 984
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nGet the specified route table for this subscription.\n"
  example: []
  syntax:
    content: public static GetRouteTableResponse GetRouteTable(this IRouteOperations operations, string routeTableName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetRouteTable(operations As IRouteOperations, routeTableName As String) As GetRouteTableResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    - id: routeTableName
      type: System.String
      description: "\nRequired. The name of the route table in this subscription to\nretrieve.\n"
    return:
      type: Microsoft.WindowsAzure.Management.Network.Models.GetRouteTableResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.GetRouteTableAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.GetRouteTableAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  id: GetRouteTableAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetRouteTableAsync(IRouteOperations, String)
  nameWithType: RouteOperationsExtensions.GetRouteTableAsync(IRouteOperations, String)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.GetRouteTableAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetRouteTableAsync
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 1008
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nGet the specified route table for this subscription.\n"
  example: []
  syntax:
    content: public static Task<GetRouteTableResponse> GetRouteTableAsync(this IRouteOperations operations, string routeTableName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetRouteTableAsync(operations As IRouteOperations, routeTableName As String) As Task(Of GetRouteTableResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    - id: routeTableName
      type: System.String
      description: "\nRequired. The name of the route table in this subscription to\nretrieve.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.Network.Models.GetRouteTableResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.GetRouteTableForSubnet(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.GetRouteTableForSubnet(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String)
  id: GetRouteTableForSubnet(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetRouteTableForSubnet(IRouteOperations, String, String)
  nameWithType: RouteOperationsExtensions.GetRouteTableForSubnet(IRouteOperations, String, String)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.GetRouteTableForSubnet(Microsoft.WindowsAzure.Management.Network.IRouteOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetRouteTableForSubnet
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 1032
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nGet the specified route table for the provided subnet in the\nprovided virtual network in this subscription.\n"
  example: []
  syntax:
    content: public static GetRouteTableForSubnetResponse GetRouteTableForSubnet(this IRouteOperations operations, string vnetName, string subnetName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetRouteTableForSubnet(operations As IRouteOperations, vnetName As String, subnetName As String) As GetRouteTableForSubnetResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    - id: vnetName
      type: System.String
      description: "\nRequired. The name of the virtual network that contains the\nprovided subnet.\n"
    - id: subnetName
      type: System.String
      description: "\nRequired. The name of the subnet.\n"
    return:
      type: Microsoft.WindowsAzure.Management.Network.Models.GetRouteTableForSubnetResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.GetRouteTableForSubnetAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.GetRouteTableForSubnetAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String)
  id: GetRouteTableForSubnetAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetRouteTableForSubnetAsync(IRouteOperations, String, String)
  nameWithType: RouteOperationsExtensions.GetRouteTableForSubnetAsync(IRouteOperations, String, String)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.GetRouteTableForSubnetAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetRouteTableForSubnetAsync
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 1060
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nGet the specified route table for the provided subnet in the\nprovided virtual network in this subscription.\n"
  example: []
  syntax:
    content: public static Task<GetRouteTableForSubnetResponse> GetRouteTableForSubnetAsync(this IRouteOperations operations, string vnetName, string subnetName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetRouteTableForSubnetAsync(operations As IRouteOperations, vnetName As String, subnetName As String) As Task(Of GetRouteTableForSubnetResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    - id: vnetName
      type: System.String
      description: "\nRequired. The name of the virtual network that contains the\nprovided subnet.\n"
    - id: subnetName
      type: System.String
      description: "\nRequired. The name of the subnet.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.Network.Models.GetRouteTableForSubnetResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.GetRouteTableWithDetails(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.GetRouteTableWithDetails(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String)
  id: GetRouteTableWithDetails(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetRouteTableWithDetails(IRouteOperations, String, String)
  nameWithType: RouteOperationsExtensions.GetRouteTableWithDetails(IRouteOperations, String, String)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.GetRouteTableWithDetails(Microsoft.WindowsAzure.Management.Network.IRouteOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetRouteTableWithDetails
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 1084
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nGet the specified route table for this subscription.\n"
  example: []
  syntax:
    content: public static GetRouteTableResponse GetRouteTableWithDetails(this IRouteOperations operations, string routeTableName, string detailLevel)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetRouteTableWithDetails(operations As IRouteOperations, routeTableName As String, detailLevel As String) As GetRouteTableResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    - id: routeTableName
      type: System.String
      description: "\nRequired. The name of the route table in this subscription to\nretrieve.\n"
    - id: detailLevel
      type: System.String
      description: "\nRequired. The amount of detail about the requested route table that\nwill be returned.\n"
    return:
      type: Microsoft.WindowsAzure.Management.Network.Models.GetRouteTableResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.GetRouteTableWithDetailsAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.GetRouteTableWithDetailsAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String)
  id: GetRouteTableWithDetailsAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetRouteTableWithDetailsAsync(IRouteOperations, String, String)
  nameWithType: RouteOperationsExtensions.GetRouteTableWithDetailsAsync(IRouteOperations, String, String)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.GetRouteTableWithDetailsAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetRouteTableWithDetailsAsync
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 1112
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nGet the specified route table for this subscription.\n"
  example: []
  syntax:
    content: public static Task<GetRouteTableResponse> GetRouteTableWithDetailsAsync(this IRouteOperations operations, string routeTableName, string detailLevel)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetRouteTableWithDetailsAsync(operations As IRouteOperations, routeTableName As String, detailLevel As String) As Task(Of GetRouteTableResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    - id: routeTableName
      type: System.String
      description: "\nRequired. The name of the route table in this subscription to\nretrieve.\n"
    - id: detailLevel
      type: System.String
      description: "\nRequired. The amount of detail about the requested route table that\nwill be returned.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.Network.Models.GetRouteTableResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.ListRouteTables(Microsoft.WindowsAzure.Management.Network.IRouteOperations)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.ListRouteTables(Microsoft.WindowsAzure.Management.Network.IRouteOperations)
  id: ListRouteTables(Microsoft.WindowsAzure.Management.Network.IRouteOperations)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListRouteTables(IRouteOperations)
  nameWithType: RouteOperationsExtensions.ListRouteTables(IRouteOperations)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.ListRouteTables(Microsoft.WindowsAzure.Management.Network.IRouteOperations)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ListRouteTables
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 1128
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nList the existing route tables for this subscription.\n"
  example: []
  syntax:
    content: public static ListRouteTablesResponse ListRouteTables(this IRouteOperations operations)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListRouteTables(operations As IRouteOperations) As ListRouteTablesResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    return:
      type: Microsoft.WindowsAzure.Management.Network.Models.ListRouteTablesResponse
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.ListRouteTablesAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.ListRouteTablesAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations)
  id: ListRouteTablesAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListRouteTablesAsync(IRouteOperations)
  nameWithType: RouteOperationsExtensions.ListRouteTablesAsync(IRouteOperations)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.ListRouteTablesAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ListRouteTablesAsync
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 1148
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nList the existing route tables for this subscription.\n"
  example: []
  syntax:
    content: public static Task<ListRouteTablesResponse> ListRouteTablesAsync(this IRouteOperations operations)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListRouteTablesAsync(operations As IRouteOperations) As Task(Of ListRouteTablesResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.Network.Models.ListRouteTablesResponse}
      description: "\nA standard service response including an HTTP status code and\nrequest ID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.PrepareMigration(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.PrepareMigration(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  id: PrepareMigration(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: PrepareMigration(IRouteOperations, String)
  nameWithType: RouteOperationsExtensions.PrepareMigration(IRouteOperations, String)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.PrepareMigration(Microsoft.WindowsAzure.Management.Network.IRouteOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: PrepareMigration
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 1175
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nPrepare routetable migration api validates and prepares the given\nroutetable for IaaS Classic to ARM migration.\n"
  example: []
  syntax:
    content: public static OperationStatusResponse PrepareMigration(this IRouteOperations operations, string routeTableName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PrepareMigration(operations As IRouteOperations, routeTableName As String) As OperationStatusResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    - id: routeTableName
      type: System.String
      description: "\nRequired. Name of the routetable to be migrated.\n"
    return:
      type: OperationStatusResponse
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself. If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request. If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request, and also includes error\ninformation regarding the failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.PrepareMigrationAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.PrepareMigrationAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  id: PrepareMigrationAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: PrepareMigrationAsync(IRouteOperations, String)
  nameWithType: RouteOperationsExtensions.PrepareMigrationAsync(IRouteOperations, String)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.PrepareMigrationAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: PrepareMigrationAsync
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 1206
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nPrepare routetable migration api validates and prepares the given\nroutetable for IaaS Classic to ARM migration.\n"
  example: []
  syntax:
    content: public static Task<OperationStatusResponse> PrepareMigrationAsync(this IRouteOperations operations, string routeTableName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PrepareMigrationAsync(operations As IRouteOperations, routeTableName As String) As Task(Of OperationStatusResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    - id: routeTableName
      type: System.String
      description: "\nRequired. Name of the routetable to be migrated.\n"
    return:
      type: System.Threading.Tasks.Task{OperationStatusResponse}
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself. If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request. If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request, and also includes error\ninformation regarding the failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.RemoveRouteTableFromSubnet(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.RemoveRouteTableFromSubnet(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String)
  id: RemoveRouteTableFromSubnet(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: RemoveRouteTableFromSubnet(IRouteOperations, String, String)
  nameWithType: RouteOperationsExtensions.RemoveRouteTableFromSubnet(IRouteOperations, String, String)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.RemoveRouteTableFromSubnet(Microsoft.WindowsAzure.Management.Network.IRouteOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: RemoveRouteTableFromSubnet
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 1238
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nRemove the route table from the provided subnet in the provided\nvirtual network in this subscription.\n"
  example: []
  syntax:
    content: public static OperationStatusResponse RemoveRouteTableFromSubnet(this IRouteOperations operations, string vnetName, string subnetName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RemoveRouteTableFromSubnet(operations As IRouteOperations, vnetName As String, subnetName As String) As OperationStatusResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    - id: vnetName
      type: System.String
      description: "\nRequired. The name of the virtual network that contains the\nprovided subnet.\n"
    - id: subnetName
      type: System.String
      description: "\nRequired. The name of the subnet that the route table will be\nremoved from.\n"
    return:
      type: OperationStatusResponse
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself. If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request. If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request, and also includes error\ninformation regarding the failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.RemoveRouteTableFromSubnetAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.RemoveRouteTableFromSubnetAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String)
  id: RemoveRouteTableFromSubnetAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: RemoveRouteTableFromSubnetAsync(IRouteOperations, String, String)
  nameWithType: RouteOperationsExtensions.RemoveRouteTableFromSubnetAsync(IRouteOperations, String, String)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.RemoveRouteTableFromSubnetAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: RemoveRouteTableFromSubnetAsync
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 1274
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nRemove the route table from the provided subnet in the provided\nvirtual network in this subscription.\n"
  example: []
  syntax:
    content: public static Task<OperationStatusResponse> RemoveRouteTableFromSubnetAsync(this IRouteOperations operations, string vnetName, string subnetName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RemoveRouteTableFromSubnetAsync(operations As IRouteOperations, vnetName As String, subnetName As String) As Task(Of OperationStatusResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    - id: vnetName
      type: System.String
      description: "\nRequired. The name of the virtual network that contains the\nprovided subnet.\n"
    - id: subnetName
      type: System.String
      description: "\nRequired. The name of the subnet that the route table will be\nremoved from.\n"
    return:
      type: System.Threading.Tasks.Task{OperationStatusResponse}
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself. If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request. If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request, and also includes error\ninformation regarding the failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.SetRoute(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String,Microsoft.WindowsAzure.Management.Network.Models.SetRouteParameters)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.SetRoute(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String,Microsoft.WindowsAzure.Management.Network.Models.SetRouteParameters)
  id: SetRoute(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String,Microsoft.WindowsAzure.Management.Network.Models.SetRouteParameters)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: SetRoute(IRouteOperations, String, String, SetRouteParameters)
  nameWithType: RouteOperationsExtensions.SetRoute(IRouteOperations, String, String, SetRouteParameters)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.SetRoute(Microsoft.WindowsAzure.Management.Network.IRouteOperations, System.String, System.String, Microsoft.WindowsAzure.Management.Network.Models.SetRouteParameters)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: SetRoute
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 1308
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nSet the specified route for the provided table in this subscription.\n"
  example: []
  syntax:
    content: public static OperationStatusResponse SetRoute(this IRouteOperations operations, string routeTableName, string routeName, SetRouteParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetRoute(operations As IRouteOperations, routeTableName As String, routeName As String, parameters As SetRouteParameters) As OperationStatusResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    - id: routeTableName
      type: System.String
      description: "\nRequired. The name of the route table where the provided route will\nbe set.\n"
    - id: routeName
      type: System.String
      description: "\nRequired. The name of the route that will be set on the provided\nroute table.\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Network.Models.SetRouteParameters
      description: "\nRequired. The parameters necessary to create a new route table.\n"
    return:
      type: OperationStatusResponse
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself. If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request. If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request, and also includes error\ninformation regarding the failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.SetRouteAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String,Microsoft.WindowsAzure.Management.Network.Models.SetRouteParameters)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.SetRouteAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String,Microsoft.WindowsAzure.Management.Network.Models.SetRouteParameters)
  id: SetRouteAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String,System.String,Microsoft.WindowsAzure.Management.Network.Models.SetRouteParameters)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: SetRouteAsync(IRouteOperations, String, String, SetRouteParameters)
  nameWithType: RouteOperationsExtensions.SetRouteAsync(IRouteOperations, String, String, SetRouteParameters)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.SetRouteAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations, System.String, System.String, Microsoft.WindowsAzure.Management.Network.Models.SetRouteParameters)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: SetRouteAsync
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 1346
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nSet the specified route for the provided table in this subscription.\n"
  example: []
  syntax:
    content: public static Task<OperationStatusResponse> SetRouteAsync(this IRouteOperations operations, string routeTableName, string routeName, SetRouteParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetRouteAsync(operations As IRouteOperations, routeTableName As String, routeName As String, parameters As SetRouteParameters) As Task(Of OperationStatusResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    - id: routeTableName
      type: System.String
      description: "\nRequired. The name of the route table where the provided route will\nbe set.\n"
    - id: routeName
      type: System.String
      description: "\nRequired. The name of the route that will be set on the provided\nroute table.\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Network.Models.SetRouteParameters
      description: "\nRequired. The parameters necessary to create a new route table.\n"
    return:
      type: System.Threading.Tasks.Task{OperationStatusResponse}
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself. If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request. If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request, and also includes error\ninformation regarding the failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.ValidateMigration(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.ValidateMigration(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  id: ValidateMigration(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: ValidateMigration(IRouteOperations, String)
  nameWithType: RouteOperationsExtensions.ValidateMigration(IRouteOperations, String)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.ValidateMigration(Microsoft.WindowsAzure.Management.Network.IRouteOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ValidateMigration
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 1365
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nValidate routetable migration api validates the given routetable\nfor IaaS Classic to ARM migration.\n"
  example: []
  syntax:
    content: public static NetworkMigrationValidationResponse ValidateMigration(this IRouteOperations operations, string routeTableName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ValidateMigration(operations As IRouteOperations, routeTableName As String) As NetworkMigrationValidationResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    - id: routeTableName
      type: System.String
      description: "\nRequired. Name of the routetable to be migrated.\n"
    return:
      type: Microsoft.WindowsAzure.Management.Network.Models.NetworkMigrationValidationResponse
      description: "\nThe Validate Network Migration operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.ValidateMigrationAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.ValidateMigrationAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  id: ValidateMigrationAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions
  langs:
  - csharp
  - vb
  name: ValidateMigrationAsync(IRouteOperations, String)
  nameWithType: RouteOperationsExtensions.ValidateMigrationAsync(IRouteOperations, String)
  fullName: Microsoft.WindowsAzure.Management.Network.RouteOperationsExtensions.ValidateMigrationAsync(Microsoft.WindowsAzure.Management.Network.IRouteOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
      branch: 262a1259df657916182c62a9c11c797b967b1b33
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ValidateMigrationAsync
    path: src/ServiceManagement/Network/NetworkManagement/Generated/RouteOperationsExtensions.cs
    startLine: 1388
  assemblies:
  - Microsoft.WindowsAzure.Management.Network
  namespace: Microsoft.WindowsAzure.Management.Network
  summary: "\nValidate routetable migration api validates the given routetable\nfor IaaS Classic to ARM migration.\n"
  example: []
  syntax:
    content: public static Task<NetworkMigrationValidationResponse> ValidateMigrationAsync(this IRouteOperations operations, string routeTableName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ValidateMigrationAsync(operations As IRouteOperations, routeTableName As String) As Task(Of NetworkMigrationValidationResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Network.IRouteOperations
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.Network.IRouteOperations.\n"
    - id: routeTableName
      type: System.String
      description: "\nRequired. Name of the routetable to be migrated.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.Network.Models.NetworkMigrationValidationResponse}
      description: "\nThe Validate Network Migration operation response.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.WindowsAzure.Management.Network
  commentId: N:Microsoft.WindowsAzure.Management.Network
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Network
  nameWithType: Microsoft.WindowsAzure.Management.Network
  fullName: Microsoft.WindowsAzure.Management.Network
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.Management.Network.IRouteOperations
  commentId: T:Microsoft.WindowsAzure.Management.Network.IRouteOperations
  parent: Microsoft.WindowsAzure.Management.Network
  isExternal: false
  name: IRouteOperations
  nameWithType: IRouteOperations
  fullName: Microsoft.WindowsAzure.Management.Network.IRouteOperations
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OperationStatusResponse
  isExternal: true
  name: OperationStatusResponse
  nameWithType: OperationStatusResponse
  fullName: OperationStatusResponse
- uid: System.Threading.Tasks.Task{OperationStatusResponse}
  commentId: T:System.Threading.Tasks.Task{OperationStatusResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<OperationStatusResponse>
  nameWithType: Task<OperationStatusResponse>
  fullName: System.Threading.Tasks.Task<OperationStatusResponse>
  nameWithType.vb: Task(Of OperationStatusResponse)
  fullname.vb: System.Threading.Tasks.Task(Of OperationStatusResponse)
  name.vb: Task(Of OperationStatusResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OperationStatusResponse
    name: OperationStatusResponse
    nameWithType: OperationStatusResponse
    fullName: OperationStatusResponse
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OperationStatusResponse
    name: OperationStatusResponse
    nameWithType: OperationStatusResponse
    fullName: OperationStatusResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.WindowsAzure.Management.Network.Models.AddRouteTableToSubnetParameters
  commentId: T:Microsoft.WindowsAzure.Management.Network.Models.AddRouteTableToSubnetParameters
  parent: Microsoft.WindowsAzure.Management.Network.Models
  isExternal: false
  name: AddRouteTableToSubnetParameters
  nameWithType: AddRouteTableToSubnetParameters
  fullName: Microsoft.WindowsAzure.Management.Network.Models.AddRouteTableToSubnetParameters
- uid: Microsoft.WindowsAzure.Management.Network.Models
  commentId: N:Microsoft.WindowsAzure.Management.Network.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Network.Models
  nameWithType: Microsoft.WindowsAzure.Management.Network.Models
  fullName: Microsoft.WindowsAzure.Management.Network.Models
- uid: AzureOperationResponse
  isExternal: true
  name: AzureOperationResponse
  nameWithType: AzureOperationResponse
  fullName: AzureOperationResponse
- uid: System.Threading.Tasks.Task{AzureOperationResponse}
  commentId: T:System.Threading.Tasks.Task{AzureOperationResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AzureOperationResponse>
  nameWithType: Task<AzureOperationResponse>
  fullName: System.Threading.Tasks.Task<AzureOperationResponse>
  nameWithType.vb: Task(Of AzureOperationResponse)
  fullname.vb: System.Threading.Tasks.Task(Of AzureOperationResponse)
  name.vb: Task(Of AzureOperationResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AzureOperationResponse
    name: AzureOperationResponse
    nameWithType: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AzureOperationResponse
    name: AzureOperationResponse
    nameWithType: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.Network.Models.CreateRouteTableParameters
  commentId: T:Microsoft.WindowsAzure.Management.Network.Models.CreateRouteTableParameters
  parent: Microsoft.WindowsAzure.Management.Network.Models
  isExternal: false
  name: CreateRouteTableParameters
  nameWithType: CreateRouteTableParameters
  fullName: Microsoft.WindowsAzure.Management.Network.Models.CreateRouteTableParameters
- uid: Microsoft.WindowsAzure.Management.Network.Models.SetRouteParameters
  commentId: T:Microsoft.WindowsAzure.Management.Network.Models.SetRouteParameters
  parent: Microsoft.WindowsAzure.Management.Network.Models
  isExternal: false
  name: SetRouteParameters
  nameWithType: SetRouteParameters
  fullName: Microsoft.WindowsAzure.Management.Network.Models.SetRouteParameters
- uid: Microsoft.WindowsAzure.Management.Network.Models.GetEffectiveRouteTableResponse
  commentId: T:Microsoft.WindowsAzure.Management.Network.Models.GetEffectiveRouteTableResponse
  parent: Microsoft.WindowsAzure.Management.Network.Models
  isExternal: false
  name: GetEffectiveRouteTableResponse
  nameWithType: GetEffectiveRouteTableResponse
  fullName: Microsoft.WindowsAzure.Management.Network.Models.GetEffectiveRouteTableResponse
- uid: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.Network.Models.GetEffectiveRouteTableResponse}
  commentId: T:System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.Network.Models.GetEffectiveRouteTableResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<GetEffectiveRouteTableResponse>
  nameWithType: Task<GetEffectiveRouteTableResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.WindowsAzure.Management.Network.Models.GetEffectiveRouteTableResponse>
  nameWithType.vb: Task(Of GetEffectiveRouteTableResponse)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.WindowsAzure.Management.Network.Models.GetEffectiveRouteTableResponse)
  name.vb: Task(Of GetEffectiveRouteTableResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Management.Network.Models.GetEffectiveRouteTableResponse
    name: GetEffectiveRouteTableResponse
    nameWithType: GetEffectiveRouteTableResponse
    fullName: Microsoft.WindowsAzure.Management.Network.Models.GetEffectiveRouteTableResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Management.Network.Models.GetEffectiveRouteTableResponse
    name: GetEffectiveRouteTableResponse
    nameWithType: GetEffectiveRouteTableResponse
    fullName: Microsoft.WindowsAzure.Management.Network.Models.GetEffectiveRouteTableResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.Network.Models.GetRouteTableResponse
  commentId: T:Microsoft.WindowsAzure.Management.Network.Models.GetRouteTableResponse
  parent: Microsoft.WindowsAzure.Management.Network.Models
  isExternal: false
  name: GetRouteTableResponse
  nameWithType: GetRouteTableResponse
  fullName: Microsoft.WindowsAzure.Management.Network.Models.GetRouteTableResponse
- uid: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.Network.Models.GetRouteTableResponse}
  commentId: T:System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.Network.Models.GetRouteTableResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<GetRouteTableResponse>
  nameWithType: Task<GetRouteTableResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.WindowsAzure.Management.Network.Models.GetRouteTableResponse>
  nameWithType.vb: Task(Of GetRouteTableResponse)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.WindowsAzure.Management.Network.Models.GetRouteTableResponse)
  name.vb: Task(Of GetRouteTableResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Management.Network.Models.GetRouteTableResponse
    name: GetRouteTableResponse
    nameWithType: GetRouteTableResponse
    fullName: Microsoft.WindowsAzure.Management.Network.Models.GetRouteTableResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Management.Network.Models.GetRouteTableResponse
    name: GetRouteTableResponse
    nameWithType: GetRouteTableResponse
    fullName: Microsoft.WindowsAzure.Management.Network.Models.GetRouteTableResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.Network.Models.GetRouteTableForSubnetResponse
  commentId: T:Microsoft.WindowsAzure.Management.Network.Models.GetRouteTableForSubnetResponse
  parent: Microsoft.WindowsAzure.Management.Network.Models
  isExternal: false
  name: GetRouteTableForSubnetResponse
  nameWithType: GetRouteTableForSubnetResponse
  fullName: Microsoft.WindowsAzure.Management.Network.Models.GetRouteTableForSubnetResponse
- uid: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.Network.Models.GetRouteTableForSubnetResponse}
  commentId: T:System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.Network.Models.GetRouteTableForSubnetResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<GetRouteTableForSubnetResponse>
  nameWithType: Task<GetRouteTableForSubnetResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.WindowsAzure.Management.Network.Models.GetRouteTableForSubnetResponse>
  nameWithType.vb: Task(Of GetRouteTableForSubnetResponse)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.WindowsAzure.Management.Network.Models.GetRouteTableForSubnetResponse)
  name.vb: Task(Of GetRouteTableForSubnetResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Management.Network.Models.GetRouteTableForSubnetResponse
    name: GetRouteTableForSubnetResponse
    nameWithType: GetRouteTableForSubnetResponse
    fullName: Microsoft.WindowsAzure.Management.Network.Models.GetRouteTableForSubnetResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Management.Network.Models.GetRouteTableForSubnetResponse
    name: GetRouteTableForSubnetResponse
    nameWithType: GetRouteTableForSubnetResponse
    fullName: Microsoft.WindowsAzure.Management.Network.Models.GetRouteTableForSubnetResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.Network.Models.ListRouteTablesResponse
  commentId: T:Microsoft.WindowsAzure.Management.Network.Models.ListRouteTablesResponse
  parent: Microsoft.WindowsAzure.Management.Network.Models
  isExternal: false
  name: ListRouteTablesResponse
  nameWithType: ListRouteTablesResponse
  fullName: Microsoft.WindowsAzure.Management.Network.Models.ListRouteTablesResponse
- uid: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.Network.Models.ListRouteTablesResponse}
  commentId: T:System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.Network.Models.ListRouteTablesResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ListRouteTablesResponse>
  nameWithType: Task<ListRouteTablesResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.WindowsAzure.Management.Network.Models.ListRouteTablesResponse>
  nameWithType.vb: Task(Of ListRouteTablesResponse)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.WindowsAzure.Management.Network.Models.ListRouteTablesResponse)
  name.vb: Task(Of ListRouteTablesResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Management.Network.Models.ListRouteTablesResponse
    name: ListRouteTablesResponse
    nameWithType: ListRouteTablesResponse
    fullName: Microsoft.WindowsAzure.Management.Network.Models.ListRouteTablesResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Management.Network.Models.ListRouteTablesResponse
    name: ListRouteTablesResponse
    nameWithType: ListRouteTablesResponse
    fullName: Microsoft.WindowsAzure.Management.Network.Models.ListRouteTablesResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.Network.Models.NetworkMigrationValidationResponse
  commentId: T:Microsoft.WindowsAzure.Management.Network.Models.NetworkMigrationValidationResponse
  parent: Microsoft.WindowsAzure.Management.Network.Models
  isExternal: false
  name: NetworkMigrationValidationResponse
  nameWithType: NetworkMigrationValidationResponse
  fullName: Microsoft.WindowsAzure.Management.Network.Models.NetworkMigrationValidationResponse
- uid: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.Network.Models.NetworkMigrationValidationResponse}
  commentId: T:System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.Network.Models.NetworkMigrationValidationResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<NetworkMigrationValidationResponse>
  nameWithType: Task<NetworkMigrationValidationResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.WindowsAzure.Management.Network.Models.NetworkMigrationValidationResponse>
  nameWithType.vb: Task(Of NetworkMigrationValidationResponse)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.WindowsAzure.Management.Network.Models.NetworkMigrationValidationResponse)
  name.vb: Task(Of NetworkMigrationValidationResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Management.Network.Models.NetworkMigrationValidationResponse
    name: NetworkMigrationValidationResponse
    nameWithType: NetworkMigrationValidationResponse
    fullName: Microsoft.WindowsAzure.Management.Network.Models.NetworkMigrationValidationResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Management.Network.Models.NetworkMigrationValidationResponse
    name: NetworkMigrationValidationResponse
    nameWithType: NetworkMigrationValidationResponse
    fullName: Microsoft.WindowsAzure.Management.Network.Models.NetworkMigrationValidationResponse
  - name: )
    nameWithType: )
    fullName: )
