### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.StorSimple.ConfigSplitHelper
  commentId: T:Microsoft.WindowsAzure.Management.StorSimple.ConfigSplitHelper
  id: ConfigSplitHelper
  parent: Microsoft.WindowsAzure.Management.StorSimple
  children:
  - Microsoft.WindowsAzure.Management.StorSimple.ConfigSplitHelper.Split(Microsoft.WindowsAzure.Management.StorSimple.Models.LegacyApplianceConfig)
  langs:
  - csharp
  - vb
  name: ConfigSplitHelper
  nameWithType: ConfigSplitHelper
  fullName: Microsoft.WindowsAzure.Management.StorSimple.ConfigSplitHelper
  type: Class
  source:
    remote:
      path: src/ServiceManagement/StorSimple/StorSimple/Customization/Helpers/ConfigSplitHelper.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ConfigSplitHelper
    path: src/ServiceManagement/StorSimple/StorSimple/Customization/Helpers/ConfigSplitHelper.cs
    startLine: 21
  assemblies:
  - Microsoft.WindowsAzure.Management.StorSimple
  namespace: Microsoft.WindowsAzure.Management.StorSimple
  syntax:
    content: public class ConfigSplitHelper
    content.vb: Public Class ConfigSplitHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.StorSimple.ConfigSplitHelper.Split(Microsoft.WindowsAzure.Management.StorSimple.Models.LegacyApplianceConfig)
  commentId: M:Microsoft.WindowsAzure.Management.StorSimple.ConfigSplitHelper.Split(Microsoft.WindowsAzure.Management.StorSimple.Models.LegacyApplianceConfig)
  id: Split(Microsoft.WindowsAzure.Management.StorSimple.Models.LegacyApplianceConfig)
  parent: Microsoft.WindowsAzure.Management.StorSimple.ConfigSplitHelper
  langs:
  - csharp
  - vb
  name: Split(LegacyApplianceConfig)
  nameWithType: ConfigSplitHelper.Split(LegacyApplianceConfig)
  fullName: Microsoft.WindowsAzure.Management.StorSimple.ConfigSplitHelper.Split(Microsoft.WindowsAzure.Management.StorSimple.Models.LegacyApplianceConfig)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/StorSimple/StorSimple/Customization/Helpers/ConfigSplitHelper.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Split
    path: src/ServiceManagement/StorSimple/StorSimple/Customization/Helpers/ConfigSplitHelper.cs
    startLine: 50
  assemblies:
  - Microsoft.WindowsAzure.Management.StorSimple
  namespace: Microsoft.WindowsAzure.Management.StorSimple
  summary: "\nSplits the inputConfig in smaller chunks of a size which the service can accept\n"
  example: []
  syntax:
    content: public static List<LegacyApplianceConfig> Split(LegacyApplianceConfig inputConfig)
    content.vb: Public Shared Function Split(inputConfig As LegacyApplianceConfig) As List(Of LegacyApplianceConfig)
    parameters:
    - id: inputConfig
      type: Microsoft.WindowsAzure.Management.StorSimple.Models.LegacyApplianceConfig
      description: "\nRequired. The complete list of LegacyApplianceConfig parsed\n"
    return:
      type: System.Collections.Generic.List{Microsoft.WindowsAzure.Management.StorSimple.Models.LegacyApplianceConfig}
      description: "\nThe smaller chunks of LegacyApplianceConfig which the service can process\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.WindowsAzure.Management.StorSimple
  commentId: N:Microsoft.WindowsAzure.Management.StorSimple
  isExternal: false
  name: Microsoft.WindowsAzure.Management.StorSimple
  nameWithType: Microsoft.WindowsAzure.Management.StorSimple
  fullName: Microsoft.WindowsAzure.Management.StorSimple
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.Management.StorSimple.Models.LegacyApplianceConfig
  commentId: T:Microsoft.WindowsAzure.Management.StorSimple.Models.LegacyApplianceConfig
  parent: Microsoft.WindowsAzure.Management.StorSimple.Models
  isExternal: false
  name: LegacyApplianceConfig
  nameWithType: LegacyApplianceConfig
  fullName: Microsoft.WindowsAzure.Management.StorSimple.Models.LegacyApplianceConfig
- uid: System.Collections.Generic.List{Microsoft.WindowsAzure.Management.StorSimple.Models.LegacyApplianceConfig}
  commentId: T:System.Collections.Generic.List{Microsoft.WindowsAzure.Management.StorSimple.Models.LegacyApplianceConfig}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<LegacyApplianceConfig>
  nameWithType: List<LegacyApplianceConfig>
  fullName: System.Collections.Generic.List<Microsoft.WindowsAzure.Management.StorSimple.Models.LegacyApplianceConfig>
  nameWithType.vb: List(Of LegacyApplianceConfig)
  fullname.vb: System.Collections.Generic.List(Of Microsoft.WindowsAzure.Management.StorSimple.Models.LegacyApplianceConfig)
  name.vb: List(Of LegacyApplianceConfig)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Management.StorSimple.Models.LegacyApplianceConfig
    name: LegacyApplianceConfig
    nameWithType: LegacyApplianceConfig
    fullName: Microsoft.WindowsAzure.Management.StorSimple.Models.LegacyApplianceConfig
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Management.StorSimple.Models.LegacyApplianceConfig
    name: LegacyApplianceConfig
    nameWithType: LegacyApplianceConfig
    fullName: Microsoft.WindowsAzure.Management.StorSimple.Models.LegacyApplianceConfig
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.StorSimple.Models
  commentId: N:Microsoft.WindowsAzure.Management.StorSimple.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.StorSimple.Models
  nameWithType: Microsoft.WindowsAzure.Management.StorSimple.Models
  fullName: Microsoft.WindowsAzure.Management.StorSimple.Models
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullname.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
