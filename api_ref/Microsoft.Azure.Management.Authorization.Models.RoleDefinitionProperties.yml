items:
- uid: Microsoft.Azure.Management.Authorization.Models.RoleDefinitionProperties
  commentId: T:Microsoft.Azure.Management.Authorization.Models.RoleDefinitionProperties
  id: RoleDefinitionProperties
  parent: Microsoft.Azure.Management.Authorization.Models
  children:
  - Microsoft.Azure.Management.Authorization.Models.RoleDefinitionProperties.#ctor
  - Microsoft.Azure.Management.Authorization.Models.RoleDefinitionProperties.#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Authorization.Models.Permission},System.Collections.Generic.IList{System.String})
  - Microsoft.Azure.Management.Authorization.Models.RoleDefinitionProperties.AssignableScopes
  - Microsoft.Azure.Management.Authorization.Models.RoleDefinitionProperties.Description
  - Microsoft.Azure.Management.Authorization.Models.RoleDefinitionProperties.Permissions
  - Microsoft.Azure.Management.Authorization.Models.RoleDefinitionProperties.RoleName
  - Microsoft.Azure.Management.Authorization.Models.RoleDefinitionProperties.Type
  langs:
  - csharp
  - vb
  name: RoleDefinitionProperties
  fullName: Microsoft.Azure.Management.Authorization.Models.RoleDefinitionProperties
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Authorization/Microsoft.Azure.Management.Authorization/Generated/Models/RoleDefinitionProperties.cs
      branch: 9fcfd197b6707b17f8ee0fa1f28e0e820d1f087a
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RoleDefinitionProperties
    path: src/ResourceManagement/Authorization/Microsoft.Azure.Management.Authorization/Generated/Models/RoleDefinitionProperties.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.Authorization
  packages:
  - Microsoft.Azure.Management.Authorization(2.4.2-preview)
  namespace: Microsoft.Azure.Management.Authorization.Models
  summary: "\nRole definition properties.\n"
  example: []
  syntax:
    content: public class RoleDefinitionProperties
    content.vb: Public Class RoleDefinitionProperties
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Authorization.Models.RoleDefinitionProperties.#ctor
  commentId: M:Microsoft.Azure.Management.Authorization.Models.RoleDefinitionProperties.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Authorization.Models.RoleDefinitionProperties
  langs:
  - csharp
  - vb
  name: RoleDefinitionProperties()
  fullName: Microsoft.Azure.Management.Authorization.Models.RoleDefinitionProperties.RoleDefinitionProperties()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Authorization/Microsoft.Azure.Management.Authorization/Generated/Models/RoleDefinitionProperties.cs
      branch: 9fcfd197b6707b17f8ee0fa1f28e0e820d1f087a
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Authorization/Microsoft.Azure.Management.Authorization/Generated/Models/RoleDefinitionProperties.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Management.Authorization
  packages:
  - Microsoft.Azure.Management.Authorization(2.4.2-preview)
  namespace: Microsoft.Azure.Management.Authorization.Models
  summary: "\nInitializes a new instance of the RoleDefinitionProperties class.\n"
  example: []
  syntax:
    content: public RoleDefinitionProperties()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Authorization.Models.RoleDefinitionProperties.#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Authorization.Models.Permission},System.Collections.Generic.IList{System.String})
  commentId: M:Microsoft.Azure.Management.Authorization.Models.RoleDefinitionProperties.#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Authorization.Models.Permission},System.Collections.Generic.IList{System.String})
  id: '#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Authorization.Models.Permission},System.Collections.Generic.IList{System.String})'
  parent: Microsoft.Azure.Management.Authorization.Models.RoleDefinitionProperties
  langs:
  - csharp
  - vb
  name: RoleDefinitionProperties(String, String, String, IList<Permission>, IList<String>)
  fullName: Microsoft.Azure.Management.Authorization.Models.RoleDefinitionProperties.RoleDefinitionProperties(System.String, System.String, System.String, System.Collections.Generic.IList<Microsoft.Azure.Management.Authorization.Models.Permission>, System.Collections.Generic.IList<System.String>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Authorization/Microsoft.Azure.Management.Authorization/Generated/Models/RoleDefinitionProperties.cs
      branch: 9fcfd197b6707b17f8ee0fa1f28e0e820d1f087a
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Authorization/Microsoft.Azure.Management.Authorization/Generated/Models/RoleDefinitionProperties.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.Management.Authorization
  packages:
  - Microsoft.Azure.Management.Authorization(2.4.2-preview)
  namespace: Microsoft.Azure.Management.Authorization.Models
  summary: "\nInitializes a new instance of the RoleDefinitionProperties class.\n"
  example: []
  syntax:
    content: public RoleDefinitionProperties(string roleName = null, string description = null, string type = null, IList<Permission> permissions = null, IList<string> assignableScopes = null)
    content.vb: Public Sub New(roleName As String = Nothing, description As String = Nothing, type As String = Nothing, permissions As IList(Of Permission) = Nothing, assignableScopes As IList(Of String) = Nothing)
    parameters:
    - id: roleName
      type: System.String
    - id: description
      type: System.String
    - id: type
      type: System.String
    - id: permissions
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Authorization.Models.Permission}
    - id: assignableScopes
      type: System.Collections.Generic.IList{System.String}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Authorization.Models.RoleDefinitionProperties.RoleDefinitionProperties(System.String, System.String, System.String, System.Collections.Generic.IList(Of Microsoft.Azure.Management.Authorization.Models.Permission), System.Collections.Generic.IList(Of System.String))
  name.vb: RoleDefinitionProperties(String, String, String, IList(Of Permission), IList(Of String))
- uid: Microsoft.Azure.Management.Authorization.Models.RoleDefinitionProperties.RoleName
  commentId: P:Microsoft.Azure.Management.Authorization.Models.RoleDefinitionProperties.RoleName
  id: RoleName
  parent: Microsoft.Azure.Management.Authorization.Models.RoleDefinitionProperties
  langs:
  - csharp
  - vb
  name: RoleName
  fullName: Microsoft.Azure.Management.Authorization.Models.RoleDefinitionProperties.RoleName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Authorization/Microsoft.Azure.Management.Authorization/Generated/Models/RoleDefinitionProperties.cs
      branch: 9fcfd197b6707b17f8ee0fa1f28e0e820d1f087a
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RoleName
    path: src/ResourceManagement/Authorization/Microsoft.Azure.Management.Authorization/Generated/Models/RoleDefinitionProperties.cs
    startLine: 43
  assemblies:
  - Microsoft.Azure.Management.Authorization
  packages:
  - Microsoft.Azure.Management.Authorization(2.4.2-preview)
  namespace: Microsoft.Azure.Management.Authorization.Models
  summary: "\nGets or sets role name.\n"
  example: []
  syntax:
    content: public string RoleName { get; set; }
    content.vb: Public Property RoleName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Authorization.Models.RoleDefinitionProperties.Description
  commentId: P:Microsoft.Azure.Management.Authorization.Models.RoleDefinitionProperties.Description
  id: Description
  parent: Microsoft.Azure.Management.Authorization.Models.RoleDefinitionProperties
  langs:
  - csharp
  - vb
  name: Description
  fullName: Microsoft.Azure.Management.Authorization.Models.RoleDefinitionProperties.Description
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Authorization/Microsoft.Azure.Management.Authorization/Generated/Models/RoleDefinitionProperties.cs
      branch: 9fcfd197b6707b17f8ee0fa1f28e0e820d1f087a
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Description
    path: src/ResourceManagement/Authorization/Microsoft.Azure.Management.Authorization/Generated/Models/RoleDefinitionProperties.cs
    startLine: 49
  assemblies:
  - Microsoft.Azure.Management.Authorization
  packages:
  - Microsoft.Azure.Management.Authorization(2.4.2-preview)
  namespace: Microsoft.Azure.Management.Authorization.Models
  summary: "\nGets or sets role definition description.\n"
  example: []
  syntax:
    content: public string Description { get; set; }
    content.vb: Public Property Description As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Authorization.Models.RoleDefinitionProperties.Type
  commentId: P:Microsoft.Azure.Management.Authorization.Models.RoleDefinitionProperties.Type
  id: Type
  parent: Microsoft.Azure.Management.Authorization.Models.RoleDefinitionProperties
  langs:
  - csharp
  - vb
  name: Type
  fullName: Microsoft.Azure.Management.Authorization.Models.RoleDefinitionProperties.Type
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Authorization/Microsoft.Azure.Management.Authorization/Generated/Models/RoleDefinitionProperties.cs
      branch: 9fcfd197b6707b17f8ee0fa1f28e0e820d1f087a
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Type
    path: src/ResourceManagement/Authorization/Microsoft.Azure.Management.Authorization/Generated/Models/RoleDefinitionProperties.cs
    startLine: 55
  assemblies:
  - Microsoft.Azure.Management.Authorization
  packages:
  - Microsoft.Azure.Management.Authorization(2.4.2-preview)
  namespace: Microsoft.Azure.Management.Authorization.Models
  summary: "\nGets or sets role type.\n"
  example: []
  syntax:
    content: public string Type { get; set; }
    content.vb: Public Property Type As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Authorization.Models.RoleDefinitionProperties.Permissions
  commentId: P:Microsoft.Azure.Management.Authorization.Models.RoleDefinitionProperties.Permissions
  id: Permissions
  parent: Microsoft.Azure.Management.Authorization.Models.RoleDefinitionProperties
  langs:
  - csharp
  - vb
  name: Permissions
  fullName: Microsoft.Azure.Management.Authorization.Models.RoleDefinitionProperties.Permissions
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Authorization/Microsoft.Azure.Management.Authorization/Generated/Models/RoleDefinitionProperties.cs
      branch: 9fcfd197b6707b17f8ee0fa1f28e0e820d1f087a
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Permissions
    path: src/ResourceManagement/Authorization/Microsoft.Azure.Management.Authorization/Generated/Models/RoleDefinitionProperties.cs
    startLine: 61
  assemblies:
  - Microsoft.Azure.Management.Authorization
  packages:
  - Microsoft.Azure.Management.Authorization(2.4.2-preview)
  namespace: Microsoft.Azure.Management.Authorization.Models
  summary: "\nGets or sets role definition permissions.\n"
  example: []
  syntax:
    content: public IList<Permission> Permissions { get; set; }
    content.vb: Public Property Permissions As IList(Of Permission)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Authorization.Models.Permission}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Authorization.Models.RoleDefinitionProperties.AssignableScopes
  commentId: P:Microsoft.Azure.Management.Authorization.Models.RoleDefinitionProperties.AssignableScopes
  id: AssignableScopes
  parent: Microsoft.Azure.Management.Authorization.Models.RoleDefinitionProperties
  langs:
  - csharp
  - vb
  name: AssignableScopes
  fullName: Microsoft.Azure.Management.Authorization.Models.RoleDefinitionProperties.AssignableScopes
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Authorization/Microsoft.Azure.Management.Authorization/Generated/Models/RoleDefinitionProperties.cs
      branch: 9fcfd197b6707b17f8ee0fa1f28e0e820d1f087a
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AssignableScopes
    path: src/ResourceManagement/Authorization/Microsoft.Azure.Management.Authorization/Generated/Models/RoleDefinitionProperties.cs
    startLine: 67
  assemblies:
  - Microsoft.Azure.Management.Authorization
  packages:
  - Microsoft.Azure.Management.Authorization(2.4.2-preview)
  namespace: Microsoft.Azure.Management.Authorization.Models
  summary: "\nGets or sets role definition assignable scopes.\n"
  example: []
  syntax:
    content: public IList<string> AssignableScopes { get; set; }
    content.vb: Public Property AssignableScopes As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Authorization.Models
  isExternal: false
  name: Microsoft.Azure.Management.Authorization.Models
  fullName: Microsoft.Azure.Management.Authorization.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Authorization.Models.Permission}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Permission>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Authorization.Models.Permission>
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Authorization.Models.Permission)
  name.vb: IList(Of Permission)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Authorization.Models.Permission
    name: Permission
    fullName: Microsoft.Azure.Management.Authorization.Models.Permission
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Authorization.Models.Permission
    name: Permission
    fullName: Microsoft.Azure.Management.Authorization.Models.Permission
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: true
  name: IList<T>
  fullName: System.Collections.Generic.IList<T>
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
