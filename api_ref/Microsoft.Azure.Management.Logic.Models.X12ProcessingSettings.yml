items:
- uid: Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings
  commentId: T:Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings
  id: X12ProcessingSettings
  parent: Microsoft.Azure.Management.Logic.Models
  children:
  - Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings.#ctor
  - Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings.#ctor(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  - Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings.ConvertImpliedDecimal
  - Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings.CreateEmptyXmlTagsForTrailingSeparators
  - Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings.MaskSecurityInfo
  - Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings.PreserveInterchange
  - Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings.SuspendInterchangeOnError
  - Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings.UseDotAsDecimalSeparator
  langs:
  - csharp
  - vb
  name: X12ProcessingSettings
  fullName: Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/X12ProcessingSettings.cs
      branch: b699595315704e1c9871127f746bcdcb4a56bc11
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: X12ProcessingSettings
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/X12ProcessingSettings.cs
    startLine: 18
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic.Models
  syntax:
    content: public class X12ProcessingSettings
    content.vb: Public Class X12ProcessingSettings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings.#ctor
  commentId: M:Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings
  langs:
  - csharp
  - vb
  name: X12ProcessingSettings()
  fullName: Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings.X12ProcessingSettings()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/X12ProcessingSettings.cs
      branch: b699595315704e1c9871127f746bcdcb4a56bc11
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/X12ProcessingSettings.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic.Models
  summary: "\nInitializes a new instance of the X12ProcessingSettings class.\n"
  example: []
  syntax:
    content: public X12ProcessingSettings()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings.#ctor(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  commentId: M:Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings.#ctor(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  id: '#ctor(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})'
  parent: Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings
  langs:
  - csharp
  - vb
  name: X12ProcessingSettings(Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>)
  fullName: Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings.X12ProcessingSettings(System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/X12ProcessingSettings.cs
      branch: b699595315704e1c9871127f746bcdcb4a56bc11
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/X12ProcessingSettings.cs
    startLine: 28
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic.Models
  summary: "\nInitializes a new instance of the X12ProcessingSettings class.\n"
  example: []
  syntax:
    content: public X12ProcessingSettings(bool ? maskSecurityInfo = null, bool ? convertImpliedDecimal = null, bool ? preserveInterchange = null, bool ? suspendInterchangeOnError = null, bool ? createEmptyXmlTagsForTrailingSeparators = null, bool ? useDotAsDecimalSeparator = null)
    content.vb: Public Sub New(maskSecurityInfo As Boolean? = Nothing, convertImpliedDecimal As Boolean? = Nothing, preserveInterchange As Boolean? = Nothing, suspendInterchangeOnError As Boolean? = Nothing, createEmptyXmlTagsForTrailingSeparators As Boolean? = Nothing, useDotAsDecimalSeparator As Boolean? = Nothing)
    parameters:
    - id: maskSecurityInfo
      type: System.Nullable{System.Boolean}
    - id: convertImpliedDecimal
      type: System.Nullable{System.Boolean}
    - id: preserveInterchange
      type: System.Nullable{System.Boolean}
    - id: suspendInterchangeOnError
      type: System.Nullable{System.Boolean}
    - id: createEmptyXmlTagsForTrailingSeparators
      type: System.Nullable{System.Boolean}
    - id: useDotAsDecimalSeparator
      type: System.Nullable{System.Boolean}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings.X12ProcessingSettings(System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean))
  name.vb: X12ProcessingSettings(Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean))
- uid: Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings.MaskSecurityInfo
  commentId: P:Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings.MaskSecurityInfo
  id: MaskSecurityInfo
  parent: Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings
  langs:
  - csharp
  - vb
  name: MaskSecurityInfo
  fullName: Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings.MaskSecurityInfo
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/X12ProcessingSettings.cs
      branch: b699595315704e1c9871127f746bcdcb4a56bc11
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MaskSecurityInfo
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/X12ProcessingSettings.cs
    startLine: 42
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic.Models
  summary: "\nGets or sets the value indicating whether to mask security\ninformation.\n"
  example: []
  syntax:
    content: public bool ? MaskSecurityInfo { get; set; }
    content.vb: Public Property MaskSecurityInfo As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings.ConvertImpliedDecimal
  commentId: P:Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings.ConvertImpliedDecimal
  id: ConvertImpliedDecimal
  parent: Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings
  langs:
  - csharp
  - vb
  name: ConvertImpliedDecimal
  fullName: Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings.ConvertImpliedDecimal
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/X12ProcessingSettings.cs
      branch: b699595315704e1c9871127f746bcdcb4a56bc11
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ConvertImpliedDecimal
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/X12ProcessingSettings.cs
    startLine: 49
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic.Models
  summary: "\nGets or sets the value indicating whether to convert numerical\ntype to implied decimal.\n"
  example: []
  syntax:
    content: public bool ? ConvertImpliedDecimal { get; set; }
    content.vb: Public Property ConvertImpliedDecimal As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings.PreserveInterchange
  commentId: P:Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings.PreserveInterchange
  id: PreserveInterchange
  parent: Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings
  langs:
  - csharp
  - vb
  name: PreserveInterchange
  fullName: Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings.PreserveInterchange
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/X12ProcessingSettings.cs
      branch: b699595315704e1c9871127f746bcdcb4a56bc11
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PreserveInterchange
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/X12ProcessingSettings.cs
    startLine: 55
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic.Models
  summary: "\nGets or sets the value indicating whether to preserve interchange.\n"
  example: []
  syntax:
    content: public bool ? PreserveInterchange { get; set; }
    content.vb: Public Property PreserveInterchange As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings.SuspendInterchangeOnError
  commentId: P:Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings.SuspendInterchangeOnError
  id: SuspendInterchangeOnError
  parent: Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings
  langs:
  - csharp
  - vb
  name: SuspendInterchangeOnError
  fullName: Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings.SuspendInterchangeOnError
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/X12ProcessingSettings.cs
      branch: b699595315704e1c9871127f746bcdcb4a56bc11
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SuspendInterchangeOnError
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/X12ProcessingSettings.cs
    startLine: 62
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic.Models
  summary: "\nGets or sets the value indicating whether to suspend interchange\non error.\n"
  example: []
  syntax:
    content: public bool ? SuspendInterchangeOnError { get; set; }
    content.vb: Public Property SuspendInterchangeOnError As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings.CreateEmptyXmlTagsForTrailingSeparators
  commentId: P:Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings.CreateEmptyXmlTagsForTrailingSeparators
  id: CreateEmptyXmlTagsForTrailingSeparators
  parent: Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings
  langs:
  - csharp
  - vb
  name: CreateEmptyXmlTagsForTrailingSeparators
  fullName: Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings.CreateEmptyXmlTagsForTrailingSeparators
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/X12ProcessingSettings.cs
      branch: b699595315704e1c9871127f746bcdcb4a56bc11
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateEmptyXmlTagsForTrailingSeparators
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/X12ProcessingSettings.cs
    startLine: 69
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic.Models
  summary: "\nGets or sets the value indicating whether to create empty xml tags\nfor trailing separators.\n"
  example: []
  syntax:
    content: public bool ? CreateEmptyXmlTagsForTrailingSeparators { get; set; }
    content.vb: Public Property CreateEmptyXmlTagsForTrailingSeparators As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings.UseDotAsDecimalSeparator
  commentId: P:Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings.UseDotAsDecimalSeparator
  id: UseDotAsDecimalSeparator
  parent: Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings
  langs:
  - csharp
  - vb
  name: UseDotAsDecimalSeparator
  fullName: Microsoft.Azure.Management.Logic.Models.X12ProcessingSettings.UseDotAsDecimalSeparator
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/X12ProcessingSettings.cs
      branch: b699595315704e1c9871127f746bcdcb4a56bc11
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UseDotAsDecimalSeparator
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/X12ProcessingSettings.cs
    startLine: 76
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic.Models
  summary: "\nGets or sets the value indicating whether to use dot as decimal\nseparator.\n"
  example: []
  syntax:
    content: public bool ? UseDotAsDecimalSeparator { get; set; }
    content.vb: Public Property UseDotAsDecimalSeparator As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Logic.Models
  isExternal: false
  name: Microsoft.Azure.Management.Logic.Models
  fullName: Microsoft.Azure.Management.Logic.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
