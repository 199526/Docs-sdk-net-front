items:
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend
  commentId: T:Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend
  id: IWithPublicFrontendOrBackend
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
  children: []
  langs:
  - csharp
  - vb
  name: IWithPublicFrontendOrBackend
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontendOrBackend
  type: Interface
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/LoadBalancer/Definition/IDefinition.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IWithPublicFrontendOrBackend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/LoadBalancer/Definition/IDefinition.cs
    startLine: 147
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
  summary: "\nThe stage of an Internet-facing load balancer definition allowing to add additional public frontends\nor add the first backend pool.\n"
  example: []
  syntax:
    content: 'public interface IWithPublicFrontendOrBackend : IWithPublicFrontend, IWithBackend, IWithVirtualMachine<IWithBackendOrProbe>'
    content.vb: >-
      Public Interface IWithPublicFrontendOrBackend
          Inherits IWithPublicFrontend, IWithBackend
  inheritedMembers:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontend.DefinePublicFrontend(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackend.DefineBackend(System.String)
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe}.WithExistingVirtualMachines(Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces[])
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
references:
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontend.DefinePublicFrontend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontend
  isExternal: true
  name: DefinePublicFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontend.DefinePublicFrontend(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontend.DefinePublicFrontend(System.String)
    name: DefinePublicFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontend.DefinePublicFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontend.DefinePublicFrontend(System.String)
    name: DefinePublicFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontend.DefinePublicFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackend.DefineBackend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackend
  isExternal: true
  name: DefineBackend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackend.DefineBackend(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackend.DefineBackend(System.String)
    name: DefineBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackend.DefineBackend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackend.DefineBackend(System.String)
    name: DefineBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackend.DefineBackend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe}.WithExistingVirtualMachines(Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces[])
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe}
  definition: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine`1.WithExistingVirtualMachines(Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces[])
  name: WithExistingVirtualMachines(IHasNetworkInterfaces[])
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe>.WithExistingVirtualMachines(Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces[])
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe).WithExistingVirtualMachines(Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces())
  name.vb: WithExistingVirtualMachines(IHasNetworkInterfaces())
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine`1.WithExistingVirtualMachines(Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces[])
    name: WithExistingVirtualMachines
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe>.WithExistingVirtualMachines
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces
    name: IHasNetworkInterfaces
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine`1.WithExistingVirtualMachines(Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces[])
    name: WithExistingVirtualMachines
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe).WithExistingVirtualMachines
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces
    name: IHasNetworkInterfaces
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontend
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
  isExternal: false
  name: IWithPublicFrontend
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithPublicFrontend
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackend
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
  isExternal: false
  name: IWithBackend
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackend
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine`1.WithExistingVirtualMachines(Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces[])
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine`1
  isExternal: false
  name: WithExistingVirtualMachines(IHasNetworkInterfaces[])
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine<ReturnT>.WithExistingVirtualMachines(Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces[])
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine(Of ReturnT).WithExistingVirtualMachines(Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces())
  name.vb: WithExistingVirtualMachines(IHasNetworkInterfaces())
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine`1.WithExistingVirtualMachines(Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces[])
    name: WithExistingVirtualMachines
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine<ReturnT>.WithExistingVirtualMachines
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces
    name: IHasNetworkInterfaces
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine`1.WithExistingVirtualMachines(Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces[])
    name: WithExistingVirtualMachines
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine(Of ReturnT).WithExistingVirtualMachines
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces
    name: IHasNetworkInterfaces
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe}
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine`1
  name: IWithVirtualMachine<IWithBackendOrProbe>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe)
  name.vb: IWithVirtualMachine(Of IWithBackendOrProbe)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine`1
    name: IWithVirtualMachine
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe
    name: IWithBackendOrProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine`1
    name: IWithVirtualMachine
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe
    name: IWithBackendOrProbe
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithBackendOrProbe
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine`1
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
  isExternal: false
  name: IWithVirtualMachine<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine(Of ReturnT)
  name.vb: IWithVirtualMachine(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine`1
    name: IWithVirtualMachine
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine`1
    name: IWithVirtualMachine
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
