### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.WebSites.Models.HistoricalUsageMetricSample
  commentId: T:Microsoft.WindowsAzure.Management.WebSites.Models.HistoricalUsageMetricSample
  id: HistoricalUsageMetricSample
  parent: Microsoft.WindowsAzure.Management.WebSites.Models
  children:
  - Microsoft.WindowsAzure.Management.WebSites.Models.HistoricalUsageMetricSample.#ctor
  - Microsoft.WindowsAzure.Management.WebSites.Models.HistoricalUsageMetricSample.Count
  - Microsoft.WindowsAzure.Management.WebSites.Models.HistoricalUsageMetricSample.InstanceName
  - Microsoft.WindowsAzure.Management.WebSites.Models.HistoricalUsageMetricSample.Maximum
  - Microsoft.WindowsAzure.Management.WebSites.Models.HistoricalUsageMetricSample.Minimum
  - Microsoft.WindowsAzure.Management.WebSites.Models.HistoricalUsageMetricSample.TimeCreated
  - Microsoft.WindowsAzure.Management.WebSites.Models.HistoricalUsageMetricSample.Total
  langs:
  - csharp
  - vb
  name: HistoricalUsageMetricSample
  nameWithType: HistoricalUsageMetricSample
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models.HistoricalUsageMetricSample
  type: Class
  source:
    remote:
      path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/HistoricalUsageMetricSample.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: HistoricalUsageMetricSample
    path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/HistoricalUsageMetricSample.cs
    startLine: 29
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites.Models
  summary: "\nHistorical metric snapshot data sample.\n"
  example: []
  syntax:
    content: public class HistoricalUsageMetricSample
    content.vb: Public Class HistoricalUsageMetricSample
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.WebSites.Models.HistoricalUsageMetricSample.Count
  commentId: P:Microsoft.WindowsAzure.Management.WebSites.Models.HistoricalUsageMetricSample.Count
  id: Count
  parent: Microsoft.WindowsAzure.Management.WebSites.Models.HistoricalUsageMetricSample
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: HistoricalUsageMetricSample.Count
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models.HistoricalUsageMetricSample.Count
  type: Property
  source:
    remote:
      path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/HistoricalUsageMetricSample.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Count
    path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/HistoricalUsageMetricSample.cs
    startLine: 36
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites.Models
  summary: "\nOptional. The metric sample count. This value is usually 1.\n"
  example: []
  syntax:
    content: public int Count { get; set; }
    content.vb: Public Property Count As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.WebSites.Models.HistoricalUsageMetricSample.InstanceName
  commentId: P:Microsoft.WindowsAzure.Management.WebSites.Models.HistoricalUsageMetricSample.InstanceName
  id: InstanceName
  parent: Microsoft.WindowsAzure.Management.WebSites.Models.HistoricalUsageMetricSample
  langs:
  - csharp
  - vb
  name: InstanceName
  nameWithType: HistoricalUsageMetricSample.InstanceName
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models.HistoricalUsageMetricSample.InstanceName
  type: Property
  source:
    remote:
      path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/HistoricalUsageMetricSample.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: InstanceName
    path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/HistoricalUsageMetricSample.cs
    startLine: 48
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites.Models
  summary: "\nOptional. Name of the instance for which the metric applies. If\nempty the metric is aggregated on all instances.\n"
  example: []
  syntax:
    content: public string InstanceName { get; set; }
    content.vb: Public Property InstanceName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.WebSites.Models.HistoricalUsageMetricSample.Maximum
  commentId: P:Microsoft.WindowsAzure.Management.WebSites.Models.HistoricalUsageMetricSample.Maximum
  id: Maximum
  parent: Microsoft.WindowsAzure.Management.WebSites.Models.HistoricalUsageMetricSample
  langs:
  - csharp
  - vb
  name: Maximum
  nameWithType: HistoricalUsageMetricSample.Maximum
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models.HistoricalUsageMetricSample.Maximum
  type: Property
  source:
    remote:
      path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/HistoricalUsageMetricSample.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Maximum
    path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/HistoricalUsageMetricSample.cs
    startLine: 59
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites.Models
  summary: "\nOptional. Maximum value recorded.\n"
  example: []
  syntax:
    content: public string Maximum { get; set; }
    content.vb: Public Property Maximum As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.WebSites.Models.HistoricalUsageMetricSample.Minimum
  commentId: P:Microsoft.WindowsAzure.Management.WebSites.Models.HistoricalUsageMetricSample.Minimum
  id: Minimum
  parent: Microsoft.WindowsAzure.Management.WebSites.Models.HistoricalUsageMetricSample
  langs:
  - csharp
  - vb
  name: Minimum
  nameWithType: HistoricalUsageMetricSample.Minimum
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models.HistoricalUsageMetricSample.Minimum
  type: Property
  source:
    remote:
      path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/HistoricalUsageMetricSample.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Minimum
    path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/HistoricalUsageMetricSample.cs
    startLine: 70
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites.Models
  summary: "\nOptional. Minimum value recorded.\n"
  example: []
  syntax:
    content: public string Minimum { get; set; }
    content.vb: Public Property Minimum As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.WebSites.Models.HistoricalUsageMetricSample.TimeCreated
  commentId: P:Microsoft.WindowsAzure.Management.WebSites.Models.HistoricalUsageMetricSample.TimeCreated
  id: TimeCreated
  parent: Microsoft.WindowsAzure.Management.WebSites.Models.HistoricalUsageMetricSample
  langs:
  - csharp
  - vb
  name: TimeCreated
  nameWithType: HistoricalUsageMetricSample.TimeCreated
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models.HistoricalUsageMetricSample.TimeCreated
  type: Property
  source:
    remote:
      path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/HistoricalUsageMetricSample.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TimeCreated
    path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/HistoricalUsageMetricSample.cs
    startLine: 81
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites.Models
  summary: "\nOptional. Time the metric was taken.\n"
  example: []
  syntax:
    content: public DateTime TimeCreated { get; set; }
    content.vb: Public Property TimeCreated As Date
    parameters: []
    return:
      type: System.DateTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.WebSites.Models.HistoricalUsageMetricSample.Total
  commentId: P:Microsoft.WindowsAzure.Management.WebSites.Models.HistoricalUsageMetricSample.Total
  id: Total
  parent: Microsoft.WindowsAzure.Management.WebSites.Models.HistoricalUsageMetricSample
  langs:
  - csharp
  - vb
  name: Total
  nameWithType: HistoricalUsageMetricSample.Total
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models.HistoricalUsageMetricSample.Total
  type: Property
  source:
    remote:
      path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/HistoricalUsageMetricSample.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Total
    path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/HistoricalUsageMetricSample.cs
    startLine: 92
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites.Models
  summary: "\nOptional. Value of the metric sample for the time taken.\n"
  example: []
  syntax:
    content: public string Total { get; set; }
    content.vb: Public Property Total As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.WebSites.Models.HistoricalUsageMetricSample.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.WebSites.Models.HistoricalUsageMetricSample.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.WebSites.Models.HistoricalUsageMetricSample
  langs:
  - csharp
  - vb
  name: HistoricalUsageMetricSample()
  nameWithType: HistoricalUsageMetricSample.HistoricalUsageMetricSample()
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models.HistoricalUsageMetricSample.HistoricalUsageMetricSample()
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/HistoricalUsageMetricSample.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/HistoricalUsageMetricSample.cs
    startLine: 101
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites.Models
  summary: "\nInitializes a new instance of the HistoricalUsageMetricSample class.\n"
  example: []
  syntax:
    content: public HistoricalUsageMetricSample()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.WebSites.Models
  commentId: N:Microsoft.WindowsAzure.Management.WebSites.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.WebSites.Models
  nameWithType: Microsoft.WindowsAzure.Management.WebSites.Models
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
