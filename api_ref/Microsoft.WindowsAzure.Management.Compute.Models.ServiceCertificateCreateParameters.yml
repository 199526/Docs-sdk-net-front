### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateCreateParameters
  commentId: T:Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateCreateParameters
  id: ServiceCertificateCreateParameters
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  children:
  - Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateCreateParameters.#ctor
  - Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateCreateParameters.#ctor(System.Byte[],Microsoft.WindowsAzure.Management.Compute.Models.CertificateFormat)
  - Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateCreateParameters.CertificateFormat
  - Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateCreateParameters.Data
  - Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateCreateParameters.Password
  langs:
  - csharp
  - vb
  name: ServiceCertificateCreateParameters
  nameWithType: ServiceCertificateCreateParameters
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateCreateParameters
  type: Class
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ServiceCertificateCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ServiceCertificateCreateParameters
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ServiceCertificateCreateParameters.cs
    startLine: 30
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\nParameters supplied to the Create Service Certificate operation.\n"
  example: []
  syntax:
    content: public class ServiceCertificateCreateParameters
    content.vb: Public Class ServiceCertificateCreateParameters
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateCreateParameters.CertificateFormat
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateCreateParameters.CertificateFormat
  id: CertificateFormat
  parent: Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateCreateParameters
  langs:
  - csharp
  - vb
  name: CertificateFormat
  nameWithType: ServiceCertificateCreateParameters.CertificateFormat
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateCreateParameters.CertificateFormat
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ServiceCertificateCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CertificateFormat
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ServiceCertificateCreateParameters.cs
    startLine: 38
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\nRequired. The service certificate format. Azure supports the pfx\nand cer file formats.\n"
  example: []
  syntax:
    content: public CertificateFormat CertificateFormat { get; set; }
    content.vb: Public Property CertificateFormat As CertificateFormat
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Management.Compute.Models.CertificateFormat
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateCreateParameters.Data
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateCreateParameters.Data
  id: Data
  parent: Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateCreateParameters
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: ServiceCertificateCreateParameters.Data
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateCreateParameters.Data
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ServiceCertificateCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Data
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ServiceCertificateCreateParameters.cs
    startLine: 49
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\nRequired. The pfx or cer file.\n"
  example: []
  syntax:
    content: public byte[] Data { get; set; }
    content.vb: Public Property Data As Byte()
    parameters: []
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateCreateParameters.Password
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateCreateParameters.Password
  id: Password
  parent: Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateCreateParameters
  langs:
  - csharp
  - vb
  name: Password
  nameWithType: ServiceCertificateCreateParameters.Password
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateCreateParameters.Password
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ServiceCertificateCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Password
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ServiceCertificateCreateParameters.cs
    startLine: 61
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\nOptional. The password for a pfx certificate. A cer certificate\ndoes not require a password.\n"
  example: []
  syntax:
    content: public string Password { get; set; }
    content.vb: Public Property Password As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateCreateParameters.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateCreateParameters.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateCreateParameters
  langs:
  - csharp
  - vb
  name: ServiceCertificateCreateParameters()
  nameWithType: ServiceCertificateCreateParameters.ServiceCertificateCreateParameters()
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateCreateParameters.ServiceCertificateCreateParameters()
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ServiceCertificateCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ServiceCertificateCreateParameters.cs
    startLine: 71
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\nInitializes a new instance of the\nServiceCertificateCreateParameters class.\n"
  example: []
  syntax:
    content: public ServiceCertificateCreateParameters()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateCreateParameters.#ctor(System.Byte[],Microsoft.WindowsAzure.Management.Compute.Models.CertificateFormat)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateCreateParameters.#ctor(System.Byte[],Microsoft.WindowsAzure.Management.Compute.Models.CertificateFormat)
  id: '#ctor(System.Byte[],Microsoft.WindowsAzure.Management.Compute.Models.CertificateFormat)'
  parent: Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateCreateParameters
  langs:
  - csharp
  - vb
  name: ServiceCertificateCreateParameters(Byte[], CertificateFormat)
  nameWithType: ServiceCertificateCreateParameters.ServiceCertificateCreateParameters(Byte[], CertificateFormat)
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateCreateParameters.ServiceCertificateCreateParameters(System.Byte[], Microsoft.WindowsAzure.Management.Compute.Models.CertificateFormat)
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ServiceCertificateCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ServiceCertificateCreateParameters.cs
    startLine: 79
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\nInitializes a new instance of the\nServiceCertificateCreateParameters class with required arguments.\n"
  example: []
  syntax:
    content: public ServiceCertificateCreateParameters(byte[] data, CertificateFormat certificateFormat)
    content.vb: Public Sub New(data As Byte(), certificateFormat As CertificateFormat)
    parameters:
    - id: data
      type: System.Byte[]
    - id: certificateFormat
      type: Microsoft.WindowsAzure.Management.Compute.Models.CertificateFormat
  nameWithType.vb: ServiceCertificateCreateParameters.ServiceCertificateCreateParameters(Byte(), CertificateFormat)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Management.Compute.Models.ServiceCertificateCreateParameters.ServiceCertificateCreateParameters(System.Byte(), Microsoft.WindowsAzure.Management.Compute.Models.CertificateFormat)
  name.vb: ServiceCertificateCreateParameters(Byte(), CertificateFormat)
references:
- uid: Microsoft.WindowsAzure.Management.Compute.Models
  commentId: N:Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Compute.Models
  nameWithType: Microsoft.WindowsAzure.Management.Compute.Models
  fullName: Microsoft.WindowsAzure.Management.Compute.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.Management.Compute.Models.CertificateFormat
  commentId: T:Microsoft.WindowsAzure.Management.Compute.Models.CertificateFormat
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: CertificateFormat
  nameWithType: CertificateFormat
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.CertificateFormat
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
