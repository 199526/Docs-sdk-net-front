items:
- uid: Microsoft.Azure.Management.EventHub.EventHubManagementClient
  commentId: T:Microsoft.Azure.Management.EventHub.EventHubManagementClient
  id: EventHubManagementClient
  parent: Microsoft.Azure.Management.EventHub
  children:
  - Microsoft.Azure.Management.EventHub.EventHubManagementClient.#ctor(DelegatingHandler[])
  - Microsoft.Azure.Management.EventHub.EventHubManagementClient.#ctor(HttpClientHandler,DelegatingHandler[])
  - Microsoft.Azure.Management.EventHub.EventHubManagementClient.#ctor(ServiceClientCredentials,DelegatingHandler[])
  - Microsoft.Azure.Management.EventHub.EventHubManagementClient.#ctor(ServiceClientCredentials,HttpClientHandler,DelegatingHandler[])
  - Microsoft.Azure.Management.EventHub.EventHubManagementClient.#ctor(System.Uri,DelegatingHandler[])
  - Microsoft.Azure.Management.EventHub.EventHubManagementClient.#ctor(System.Uri,HttpClientHandler,DelegatingHandler[])
  - Microsoft.Azure.Management.EventHub.EventHubManagementClient.#ctor(System.Uri,ServiceClientCredentials,DelegatingHandler[])
  - Microsoft.Azure.Management.EventHub.EventHubManagementClient.#ctor(System.Uri,ServiceClientCredentials,HttpClientHandler,DelegatingHandler[])
  - Microsoft.Azure.Management.EventHub.EventHubManagementClient.AcceptLanguage
  - Microsoft.Azure.Management.EventHub.EventHubManagementClient.ApiVersion
  - Microsoft.Azure.Management.EventHub.EventHubManagementClient.BaseUri
  - Microsoft.Azure.Management.EventHub.EventHubManagementClient.ConsumerGroups
  - Microsoft.Azure.Management.EventHub.EventHubManagementClient.Credentials
  - Microsoft.Azure.Management.EventHub.EventHubManagementClient.DeserializationSettings
  - Microsoft.Azure.Management.EventHub.EventHubManagementClient.EventHubs
  - Microsoft.Azure.Management.EventHub.EventHubManagementClient.GenerateClientRequestId
  - Microsoft.Azure.Management.EventHub.EventHubManagementClient.LongRunningOperationRetryTimeout
  - Microsoft.Azure.Management.EventHub.EventHubManagementClient.Namespaces
  - Microsoft.Azure.Management.EventHub.EventHubManagementClient.SerializationSettings
  - Microsoft.Azure.Management.EventHub.EventHubManagementClient.SubscriptionId
  langs:
  - csharp
  - vb
  name: EventHubManagementClient
  fullName: Microsoft.Azure.Management.EventHub.EventHubManagementClient
  type: Class
  source:
    remote:
      path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/EventHubManagementClient.cs
      branch: d475becfaeb21e7414891db78cbe850447cd0253
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EventHubManagementClient
    path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/EventHubManagementClient.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Management.EventHub
  packages:
  - Microsoft.Azure.Management.EventHub(0.0.1-preview)
  namespace: Microsoft.Azure.Management.EventHub
  summary: "\nAzure EventHub client\n"
  example: []
  syntax:
    content: 'public class EventHubManagementClient : ServiceClient<EventHubManagementClient>, IEventHubManagementClient, IDisposable, IAzureClient'
    content.vb: >-
      Public Class EventHubManagementClient
          Inherits ServiceClient(Of EventHubManagementClient)
          Implements IEventHubManagementClient, IDisposable, IAzureClient
  inheritance:
  - System.Object
  implements:
  - Microsoft.Azure.Management.EventHub.IEventHubManagementClient
  - System.IDisposable
  - IAzureClient
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.EventHub.EventHubManagementClient.BaseUri
  commentId: P:Microsoft.Azure.Management.EventHub.EventHubManagementClient.BaseUri
  id: BaseUri
  parent: Microsoft.Azure.Management.EventHub.EventHubManagementClient
  langs:
  - csharp
  - vb
  name: BaseUri
  fullName: Microsoft.Azure.Management.EventHub.EventHubManagementClient.BaseUri
  type: Property
  source:
    remote:
      path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/EventHubManagementClient.cs
      branch: d475becfaeb21e7414891db78cbe850447cd0253
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BaseUri
    path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/EventHubManagementClient.cs
    startLine: 35
  assemblies:
  - Microsoft.Azure.Management.EventHub
  packages:
  - Microsoft.Azure.Management.EventHub(0.0.1-preview)
  namespace: Microsoft.Azure.Management.EventHub
  summary: "\nThe base URI of the service.\n"
  example: []
  syntax:
    content: public Uri BaseUri { get; set; }
    content.vb: Public Property BaseUri As Uri
    parameters: []
    return:
      type: System.Uri
  implements:
  - Microsoft.Azure.Management.EventHub.IEventHubManagementClient.BaseUri
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.EventHub.EventHubManagementClient.SerializationSettings
  commentId: P:Microsoft.Azure.Management.EventHub.EventHubManagementClient.SerializationSettings
  id: SerializationSettings
  parent: Microsoft.Azure.Management.EventHub.EventHubManagementClient
  langs:
  - csharp
  - vb
  name: SerializationSettings
  fullName: Microsoft.Azure.Management.EventHub.EventHubManagementClient.SerializationSettings
  type: Property
  source:
    remote:
      path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/EventHubManagementClient.cs
      branch: d475becfaeb21e7414891db78cbe850447cd0253
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SerializationSettings
    path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/EventHubManagementClient.cs
    startLine: 40
  assemblies:
  - Microsoft.Azure.Management.EventHub
  packages:
  - Microsoft.Azure.Management.EventHub(0.0.1-preview)
  namespace: Microsoft.Azure.Management.EventHub
  summary: "\nGets or sets json serialization settings.\n"
  example: []
  syntax:
    content: public JsonSerializerSettings SerializationSettings { get; }
    content.vb: Public ReadOnly Property SerializationSettings As JsonSerializerSettings
    parameters: []
    return:
      type: JsonSerializerSettings
  implements:
  - Microsoft.Azure.Management.EventHub.IEventHubManagementClient.SerializationSettings
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.EventHub.EventHubManagementClient.DeserializationSettings
  commentId: P:Microsoft.Azure.Management.EventHub.EventHubManagementClient.DeserializationSettings
  id: DeserializationSettings
  parent: Microsoft.Azure.Management.EventHub.EventHubManagementClient
  langs:
  - csharp
  - vb
  name: DeserializationSettings
  fullName: Microsoft.Azure.Management.EventHub.EventHubManagementClient.DeserializationSettings
  type: Property
  source:
    remote:
      path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/EventHubManagementClient.cs
      branch: d475becfaeb21e7414891db78cbe850447cd0253
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeserializationSettings
    path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/EventHubManagementClient.cs
    startLine: 45
  assemblies:
  - Microsoft.Azure.Management.EventHub
  packages:
  - Microsoft.Azure.Management.EventHub(0.0.1-preview)
  namespace: Microsoft.Azure.Management.EventHub
  summary: "\nGets or sets json deserialization settings.\n"
  example: []
  syntax:
    content: public JsonSerializerSettings DeserializationSettings { get; }
    content.vb: Public ReadOnly Property DeserializationSettings As JsonSerializerSettings
    parameters: []
    return:
      type: JsonSerializerSettings
  implements:
  - Microsoft.Azure.Management.EventHub.IEventHubManagementClient.DeserializationSettings
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.EventHub.EventHubManagementClient.Credentials
  commentId: P:Microsoft.Azure.Management.EventHub.EventHubManagementClient.Credentials
  id: Credentials
  parent: Microsoft.Azure.Management.EventHub.EventHubManagementClient
  langs:
  - csharp
  - vb
  name: Credentials
  fullName: Microsoft.Azure.Management.EventHub.EventHubManagementClient.Credentials
  type: Property
  source:
    remote:
      path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/EventHubManagementClient.cs
      branch: d475becfaeb21e7414891db78cbe850447cd0253
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Credentials
    path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/EventHubManagementClient.cs
    startLine: 50
  assemblies:
  - Microsoft.Azure.Management.EventHub
  packages:
  - Microsoft.Azure.Management.EventHub(0.0.1-preview)
  namespace: Microsoft.Azure.Management.EventHub
  summary: "\nGets Azure subscription credentials.\n"
  example: []
  syntax:
    content: public ServiceClientCredentials Credentials { get; }
    content.vb: Public ReadOnly Property Credentials As ServiceClientCredentials
    parameters: []
    return:
      type: ServiceClientCredentials
  implements:
  - Microsoft.Azure.Management.EventHub.IEventHubManagementClient.Credentials
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.EventHub.EventHubManagementClient.SubscriptionId
  commentId: P:Microsoft.Azure.Management.EventHub.EventHubManagementClient.SubscriptionId
  id: SubscriptionId
  parent: Microsoft.Azure.Management.EventHub.EventHubManagementClient
  langs:
  - csharp
  - vb
  name: SubscriptionId
  fullName: Microsoft.Azure.Management.EventHub.EventHubManagementClient.SubscriptionId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/EventHubManagementClient.cs
      branch: d475becfaeb21e7414891db78cbe850447cd0253
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SubscriptionId
    path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/EventHubManagementClient.cs
    startLine: 57
  assemblies:
  - Microsoft.Azure.Management.EventHub
  packages:
  - Microsoft.Azure.Management.EventHub(0.0.1-preview)
  namespace: Microsoft.Azure.Management.EventHub
  summary: "\nSubscription credentials which uniquely identify Microsoft Azure\nsubscription. The subscription ID forms part of the URI for every service\ncall.\n"
  example: []
  syntax:
    content: public string SubscriptionId { get; set; }
    content.vb: Public Property SubscriptionId As String
    parameters: []
    return:
      type: System.String
  implements:
  - Microsoft.Azure.Management.EventHub.IEventHubManagementClient.SubscriptionId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.EventHub.EventHubManagementClient.ApiVersion
  commentId: P:Microsoft.Azure.Management.EventHub.EventHubManagementClient.ApiVersion
  id: ApiVersion
  parent: Microsoft.Azure.Management.EventHub.EventHubManagementClient
  langs:
  - csharp
  - vb
  name: ApiVersion
  fullName: Microsoft.Azure.Management.EventHub.EventHubManagementClient.ApiVersion
  type: Property
  source:
    remote:
      path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/EventHubManagementClient.cs
      branch: d475becfaeb21e7414891db78cbe850447cd0253
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ApiVersion
    path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/EventHubManagementClient.cs
    startLine: 62
  assemblies:
  - Microsoft.Azure.Management.EventHub
  packages:
  - Microsoft.Azure.Management.EventHub(0.0.1-preview)
  namespace: Microsoft.Azure.Management.EventHub
  summary: "\nClient Api Version.\n"
  example: []
  syntax:
    content: public string ApiVersion { get; }
    content.vb: Public ReadOnly Property ApiVersion As String
    parameters: []
    return:
      type: System.String
  implements:
  - Microsoft.Azure.Management.EventHub.IEventHubManagementClient.ApiVersion
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.EventHub.EventHubManagementClient.AcceptLanguage
  commentId: P:Microsoft.Azure.Management.EventHub.EventHubManagementClient.AcceptLanguage
  id: AcceptLanguage
  parent: Microsoft.Azure.Management.EventHub.EventHubManagementClient
  langs:
  - csharp
  - vb
  name: AcceptLanguage
  fullName: Microsoft.Azure.Management.EventHub.EventHubManagementClient.AcceptLanguage
  type: Property
  source:
    remote:
      path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/EventHubManagementClient.cs
      branch: d475becfaeb21e7414891db78cbe850447cd0253
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AcceptLanguage
    path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/EventHubManagementClient.cs
    startLine: 67
  assemblies:
  - Microsoft.Azure.Management.EventHub
  packages:
  - Microsoft.Azure.Management.EventHub(0.0.1-preview)
  namespace: Microsoft.Azure.Management.EventHub
  summary: "\nGets or sets the preferred language for the response.\n"
  example: []
  syntax:
    content: public string AcceptLanguage { get; set; }
    content.vb: Public Property AcceptLanguage As String
    parameters: []
    return:
      type: System.String
  implements:
  - Microsoft.Azure.Management.EventHub.IEventHubManagementClient.AcceptLanguage
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.EventHub.EventHubManagementClient.LongRunningOperationRetryTimeout
  commentId: P:Microsoft.Azure.Management.EventHub.EventHubManagementClient.LongRunningOperationRetryTimeout
  id: LongRunningOperationRetryTimeout
  parent: Microsoft.Azure.Management.EventHub.EventHubManagementClient
  langs:
  - csharp
  - vb
  name: LongRunningOperationRetryTimeout
  fullName: Microsoft.Azure.Management.EventHub.EventHubManagementClient.LongRunningOperationRetryTimeout
  type: Property
  source:
    remote:
      path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/EventHubManagementClient.cs
      branch: d475becfaeb21e7414891db78cbe850447cd0253
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LongRunningOperationRetryTimeout
    path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/EventHubManagementClient.cs
    startLine: 73
  assemblies:
  - Microsoft.Azure.Management.EventHub
  packages:
  - Microsoft.Azure.Management.EventHub(0.0.1-preview)
  namespace: Microsoft.Azure.Management.EventHub
  summary: "\nGets or sets the retry timeout in seconds for Long Running Operations.\nDefault value is 30.\n"
  example: []
  syntax:
    content: public int ? LongRunningOperationRetryTimeout { get; set; }
    content.vb: Public Property LongRunningOperationRetryTimeout As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  implements:
  - Microsoft.Azure.Management.EventHub.IEventHubManagementClient.LongRunningOperationRetryTimeout
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.EventHub.EventHubManagementClient.GenerateClientRequestId
  commentId: P:Microsoft.Azure.Management.EventHub.EventHubManagementClient.GenerateClientRequestId
  id: GenerateClientRequestId
  parent: Microsoft.Azure.Management.EventHub.EventHubManagementClient
  langs:
  - csharp
  - vb
  name: GenerateClientRequestId
  fullName: Microsoft.Azure.Management.EventHub.EventHubManagementClient.GenerateClientRequestId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/EventHubManagementClient.cs
      branch: d475becfaeb21e7414891db78cbe850447cd0253
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GenerateClientRequestId
    path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/EventHubManagementClient.cs
    startLine: 79
  assemblies:
  - Microsoft.Azure.Management.EventHub
  packages:
  - Microsoft.Azure.Management.EventHub(0.0.1-preview)
  namespace: Microsoft.Azure.Management.EventHub
  summary: "\nWhen set to true a unique x-ms-client-request-id value is generated and\nincluded in each request. Default is true.\n"
  example: []
  syntax:
    content: public bool ? GenerateClientRequestId { get; set; }
    content.vb: Public Property GenerateClientRequestId As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  implements:
  - Microsoft.Azure.Management.EventHub.IEventHubManagementClient.GenerateClientRequestId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.EventHub.EventHubManagementClient.Namespaces
  commentId: P:Microsoft.Azure.Management.EventHub.EventHubManagementClient.Namespaces
  id: Namespaces
  parent: Microsoft.Azure.Management.EventHub.EventHubManagementClient
  langs:
  - csharp
  - vb
  name: Namespaces
  fullName: Microsoft.Azure.Management.EventHub.EventHubManagementClient.Namespaces
  type: Property
  source:
    remote:
      path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/EventHubManagementClient.cs
      branch: d475becfaeb21e7414891db78cbe850447cd0253
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Namespaces
    path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/EventHubManagementClient.cs
    startLine: 84
  assemblies:
  - Microsoft.Azure.Management.EventHub
  packages:
  - Microsoft.Azure.Management.EventHub(0.0.1-preview)
  namespace: Microsoft.Azure.Management.EventHub
  summary: "\nGets the INamespacesOperations.\n"
  example: []
  syntax:
    content: public virtual INamespacesOperations Namespaces { get; }
    content.vb: Public Overridable ReadOnly Property Namespaces As INamespacesOperations
    parameters: []
    return:
      type: Microsoft.Azure.Management.EventHub.INamespacesOperations
  implements:
  - Microsoft.Azure.Management.EventHub.IEventHubManagementClient.Namespaces
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.Azure.Management.EventHub.EventHubManagementClient.EventHubs
  commentId: P:Microsoft.Azure.Management.EventHub.EventHubManagementClient.EventHubs
  id: EventHubs
  parent: Microsoft.Azure.Management.EventHub.EventHubManagementClient
  langs:
  - csharp
  - vb
  name: EventHubs
  fullName: Microsoft.Azure.Management.EventHub.EventHubManagementClient.EventHubs
  type: Property
  source:
    remote:
      path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/EventHubManagementClient.cs
      branch: d475becfaeb21e7414891db78cbe850447cd0253
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EventHubs
    path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/EventHubManagementClient.cs
    startLine: 89
  assemblies:
  - Microsoft.Azure.Management.EventHub
  packages:
  - Microsoft.Azure.Management.EventHub(0.0.1-preview)
  namespace: Microsoft.Azure.Management.EventHub
  summary: "\nGets the IEventHubsOperations.\n"
  example: []
  syntax:
    content: public virtual IEventHubsOperations EventHubs { get; }
    content.vb: Public Overridable ReadOnly Property EventHubs As IEventHubsOperations
    parameters: []
    return:
      type: Microsoft.Azure.Management.EventHub.IEventHubsOperations
  implements:
  - Microsoft.Azure.Management.EventHub.IEventHubManagementClient.EventHubs
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.Azure.Management.EventHub.EventHubManagementClient.ConsumerGroups
  commentId: P:Microsoft.Azure.Management.EventHub.EventHubManagementClient.ConsumerGroups
  id: ConsumerGroups
  parent: Microsoft.Azure.Management.EventHub.EventHubManagementClient
  langs:
  - csharp
  - vb
  name: ConsumerGroups
  fullName: Microsoft.Azure.Management.EventHub.EventHubManagementClient.ConsumerGroups
  type: Property
  source:
    remote:
      path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/EventHubManagementClient.cs
      branch: d475becfaeb21e7414891db78cbe850447cd0253
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ConsumerGroups
    path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/EventHubManagementClient.cs
    startLine: 94
  assemblies:
  - Microsoft.Azure.Management.EventHub
  packages:
  - Microsoft.Azure.Management.EventHub(0.0.1-preview)
  namespace: Microsoft.Azure.Management.EventHub
  summary: "\nGets the IConsumerGroupsOperations.\n"
  example: []
  syntax:
    content: public virtual IConsumerGroupsOperations ConsumerGroups { get; }
    content.vb: Public Overridable ReadOnly Property ConsumerGroups As IConsumerGroupsOperations
    parameters: []
    return:
      type: Microsoft.Azure.Management.EventHub.IConsumerGroupsOperations
  implements:
  - Microsoft.Azure.Management.EventHub.IEventHubManagementClient.ConsumerGroups
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.Azure.Management.EventHub.EventHubManagementClient.#ctor(DelegatingHandler[])
  commentId: M:Microsoft.Azure.Management.EventHub.EventHubManagementClient.#ctor(DelegatingHandler[])
  id: '#ctor(DelegatingHandler[])'
  parent: Microsoft.Azure.Management.EventHub.EventHubManagementClient
  langs:
  - csharp
  - vb
  name: EventHubManagementClient(DelegatingHandler[])
  fullName: Microsoft.Azure.Management.EventHub.EventHubManagementClient.EventHubManagementClient(DelegatingHandler[])
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/EventHubManagementClient.cs
      branch: d475becfaeb21e7414891db78cbe850447cd0253
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/EventHubManagementClient.cs
    startLine: 102
  assemblies:
  - Microsoft.Azure.Management.EventHub
  packages:
  - Microsoft.Azure.Management.EventHub(0.0.1-preview)
  namespace: Microsoft.Azure.Management.EventHub
  summary: "\nInitializes a new instance of the EventHubManagementClient class.\n"
  example: []
  syntax:
    content: protected EventHubManagementClient(params DelegatingHandler[] handlers)
    content.vb: Protected Sub New(ParamArray handlers As DelegatingHandler())
    parameters:
    - id: handlers
      type: DelegatingHandler[]
      description: "\nOptional. The delegating handlers to add to the http client pipeline.\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.Azure.Management.EventHub.EventHubManagementClient.EventHubManagementClient(DelegatingHandler())
  name.vb: EventHubManagementClient(DelegatingHandler())
- uid: Microsoft.Azure.Management.EventHub.EventHubManagementClient.#ctor(HttpClientHandler,DelegatingHandler[])
  commentId: M:Microsoft.Azure.Management.EventHub.EventHubManagementClient.#ctor(HttpClientHandler,DelegatingHandler[])
  id: '#ctor(HttpClientHandler,DelegatingHandler[])'
  parent: Microsoft.Azure.Management.EventHub.EventHubManagementClient
  langs:
  - csharp
  - vb
  name: EventHubManagementClient(HttpClientHandler, DelegatingHandler[])
  fullName: Microsoft.Azure.Management.EventHub.EventHubManagementClient.EventHubManagementClient(HttpClientHandler, DelegatingHandler[])
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/EventHubManagementClient.cs
      branch: d475becfaeb21e7414891db78cbe850447cd0253
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/EventHubManagementClient.cs
    startLine: 116
  assemblies:
  - Microsoft.Azure.Management.EventHub
  packages:
  - Microsoft.Azure.Management.EventHub(0.0.1-preview)
  namespace: Microsoft.Azure.Management.EventHub
  summary: "\nInitializes a new instance of the EventHubManagementClient class.\n"
  example: []
  syntax:
    content: protected EventHubManagementClient(HttpClientHandler rootHandler, params DelegatingHandler[] handlers)
    content.vb: Protected Sub New(rootHandler As HttpClientHandler, ParamArray handlers As DelegatingHandler())
    parameters:
    - id: rootHandler
      type: HttpClientHandler
      description: "\nOptional. The http client handler used to handle http transport.\n"
    - id: handlers
      type: DelegatingHandler[]
      description: "\nOptional. The delegating handlers to add to the http client pipeline.\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.Azure.Management.EventHub.EventHubManagementClient.EventHubManagementClient(HttpClientHandler, DelegatingHandler())
  name.vb: EventHubManagementClient(HttpClientHandler, DelegatingHandler())
- uid: Microsoft.Azure.Management.EventHub.EventHubManagementClient.#ctor(System.Uri,DelegatingHandler[])
  commentId: M:Microsoft.Azure.Management.EventHub.EventHubManagementClient.#ctor(System.Uri,DelegatingHandler[])
  id: '#ctor(System.Uri,DelegatingHandler[])'
  parent: Microsoft.Azure.Management.EventHub.EventHubManagementClient
  langs:
  - csharp
  - vb
  name: EventHubManagementClient(Uri, DelegatingHandler[])
  fullName: Microsoft.Azure.Management.EventHub.EventHubManagementClient.EventHubManagementClient(System.Uri, DelegatingHandler[])
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/EventHubManagementClient.cs
      branch: d475becfaeb21e7414891db78cbe850447cd0253
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/EventHubManagementClient.cs
    startLine: 130
  assemblies:
  - Microsoft.Azure.Management.EventHub
  packages:
  - Microsoft.Azure.Management.EventHub(0.0.1-preview)
  namespace: Microsoft.Azure.Management.EventHub
  summary: "\nInitializes a new instance of the EventHubManagementClient class.\n"
  example: []
  syntax:
    content: protected EventHubManagementClient(Uri baseUri, params DelegatingHandler[] handlers)
    content.vb: Protected Sub New(baseUri As Uri, ParamArray handlers As DelegatingHandler())
    parameters:
    - id: baseUri
      type: System.Uri
      description: "\nOptional. The base URI of the service.\n"
    - id: handlers
      type: DelegatingHandler[]
      description: "\nOptional. The delegating handlers to add to the http client pipeline.\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.Azure.Management.EventHub.EventHubManagementClient.EventHubManagementClient(System.Uri, DelegatingHandler())
  name.vb: EventHubManagementClient(Uri, DelegatingHandler())
- uid: Microsoft.Azure.Management.EventHub.EventHubManagementClient.#ctor(System.Uri,HttpClientHandler,DelegatingHandler[])
  commentId: M:Microsoft.Azure.Management.EventHub.EventHubManagementClient.#ctor(System.Uri,HttpClientHandler,DelegatingHandler[])
  id: '#ctor(System.Uri,HttpClientHandler,DelegatingHandler[])'
  parent: Microsoft.Azure.Management.EventHub.EventHubManagementClient
  langs:
  - csharp
  - vb
  name: EventHubManagementClient(Uri, HttpClientHandler, DelegatingHandler[])
  fullName: Microsoft.Azure.Management.EventHub.EventHubManagementClient.EventHubManagementClient(System.Uri, HttpClientHandler, DelegatingHandler[])
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/EventHubManagementClient.cs
      branch: d475becfaeb21e7414891db78cbe850447cd0253
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/EventHubManagementClient.cs
    startLine: 151
  assemblies:
  - Microsoft.Azure.Management.EventHub
  packages:
  - Microsoft.Azure.Management.EventHub(0.0.1-preview)
  namespace: Microsoft.Azure.Management.EventHub
  summary: "\nInitializes a new instance of the EventHubManagementClient class.\n"
  example: []
  syntax:
    content: protected EventHubManagementClient(Uri baseUri, HttpClientHandler rootHandler, params DelegatingHandler[] handlers)
    content.vb: Protected Sub New(baseUri As Uri, rootHandler As HttpClientHandler, ParamArray handlers As DelegatingHandler())
    parameters:
    - id: baseUri
      type: System.Uri
      description: "\nOptional. The base URI of the service.\n"
    - id: rootHandler
      type: HttpClientHandler
      description: "\nOptional. The http client handler used to handle http transport.\n"
    - id: handlers
      type: DelegatingHandler[]
      description: "\nOptional. The delegating handlers to add to the http client pipeline.\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.Azure.Management.EventHub.EventHubManagementClient.EventHubManagementClient(System.Uri, HttpClientHandler, DelegatingHandler())
  name.vb: EventHubManagementClient(Uri, HttpClientHandler, DelegatingHandler())
- uid: Microsoft.Azure.Management.EventHub.EventHubManagementClient.#ctor(ServiceClientCredentials,DelegatingHandler[])
  commentId: M:Microsoft.Azure.Management.EventHub.EventHubManagementClient.#ctor(ServiceClientCredentials,DelegatingHandler[])
  id: '#ctor(ServiceClientCredentials,DelegatingHandler[])'
  parent: Microsoft.Azure.Management.EventHub.EventHubManagementClient
  langs:
  - csharp
  - vb
  name: EventHubManagementClient(ServiceClientCredentials, DelegatingHandler[])
  fullName: Microsoft.Azure.Management.EventHub.EventHubManagementClient.EventHubManagementClient(ServiceClientCredentials, DelegatingHandler[])
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/EventHubManagementClient.cs
      branch: d475becfaeb21e7414891db78cbe850447cd0253
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/EventHubManagementClient.cs
    startLine: 169
  assemblies:
  - Microsoft.Azure.Management.EventHub
  packages:
  - Microsoft.Azure.Management.EventHub(0.0.1-preview)
  namespace: Microsoft.Azure.Management.EventHub
  summary: "\nInitializes a new instance of the EventHubManagementClient class.\n"
  example: []
  syntax:
    content: public EventHubManagementClient(ServiceClientCredentials credentials, params DelegatingHandler[] handlers)
    content.vb: Public Sub New(credentials As ServiceClientCredentials, ParamArray handlers As DelegatingHandler())
    parameters:
    - id: credentials
      type: ServiceClientCredentials
      description: "\nRequired. Gets Azure subscription credentials.\n"
    - id: handlers
      type: DelegatingHandler[]
      description: "\nOptional. The delegating handlers to add to the http client pipeline.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.EventHub.EventHubManagementClient.EventHubManagementClient(ServiceClientCredentials, DelegatingHandler())
  name.vb: EventHubManagementClient(ServiceClientCredentials, DelegatingHandler())
- uid: Microsoft.Azure.Management.EventHub.EventHubManagementClient.#ctor(ServiceClientCredentials,HttpClientHandler,DelegatingHandler[])
  commentId: M:Microsoft.Azure.Management.EventHub.EventHubManagementClient.#ctor(ServiceClientCredentials,HttpClientHandler,DelegatingHandler[])
  id: '#ctor(ServiceClientCredentials,HttpClientHandler,DelegatingHandler[])'
  parent: Microsoft.Azure.Management.EventHub.EventHubManagementClient
  langs:
  - csharp
  - vb
  name: EventHubManagementClient(ServiceClientCredentials, HttpClientHandler, DelegatingHandler[])
  fullName: Microsoft.Azure.Management.EventHub.EventHubManagementClient.EventHubManagementClient(ServiceClientCredentials, HttpClientHandler, DelegatingHandler[])
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/EventHubManagementClient.cs
      branch: d475becfaeb21e7414891db78cbe850447cd0253
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/EventHubManagementClient.cs
    startLine: 194
  assemblies:
  - Microsoft.Azure.Management.EventHub
  packages:
  - Microsoft.Azure.Management.EventHub(0.0.1-preview)
  namespace: Microsoft.Azure.Management.EventHub
  summary: "\nInitializes a new instance of the EventHubManagementClient class.\n"
  example: []
  syntax:
    content: public EventHubManagementClient(ServiceClientCredentials credentials, HttpClientHandler rootHandler, params DelegatingHandler[] handlers)
    content.vb: Public Sub New(credentials As ServiceClientCredentials, rootHandler As HttpClientHandler, ParamArray handlers As DelegatingHandler())
    parameters:
    - id: credentials
      type: ServiceClientCredentials
      description: "\nRequired. Gets Azure subscription credentials.\n"
    - id: rootHandler
      type: HttpClientHandler
      description: "\nOptional. The http client handler used to handle http transport.\n"
    - id: handlers
      type: DelegatingHandler[]
      description: "\nOptional. The delegating handlers to add to the http client pipeline.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.EventHub.EventHubManagementClient.EventHubManagementClient(ServiceClientCredentials, HttpClientHandler, DelegatingHandler())
  name.vb: EventHubManagementClient(ServiceClientCredentials, HttpClientHandler, DelegatingHandler())
- uid: Microsoft.Azure.Management.EventHub.EventHubManagementClient.#ctor(System.Uri,ServiceClientCredentials,DelegatingHandler[])
  commentId: M:Microsoft.Azure.Management.EventHub.EventHubManagementClient.#ctor(System.Uri,ServiceClientCredentials,DelegatingHandler[])
  id: '#ctor(System.Uri,ServiceClientCredentials,DelegatingHandler[])'
  parent: Microsoft.Azure.Management.EventHub.EventHubManagementClient
  langs:
  - csharp
  - vb
  name: EventHubManagementClient(Uri, ServiceClientCredentials, DelegatingHandler[])
  fullName: Microsoft.Azure.Management.EventHub.EventHubManagementClient.EventHubManagementClient(System.Uri, ServiceClientCredentials, DelegatingHandler[])
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/EventHubManagementClient.cs
      branch: d475becfaeb21e7414891db78cbe850447cd0253
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/EventHubManagementClient.cs
    startLine: 219
  assemblies:
  - Microsoft.Azure.Management.EventHub
  packages:
  - Microsoft.Azure.Management.EventHub(0.0.1-preview)
  namespace: Microsoft.Azure.Management.EventHub
  summary: "\nInitializes a new instance of the EventHubManagementClient class.\n"
  example: []
  syntax:
    content: public EventHubManagementClient(Uri baseUri, ServiceClientCredentials credentials, params DelegatingHandler[] handlers)
    content.vb: Public Sub New(baseUri As Uri, credentials As ServiceClientCredentials, ParamArray handlers As DelegatingHandler())
    parameters:
    - id: baseUri
      type: System.Uri
      description: "\nOptional. The base URI of the service.\n"
    - id: credentials
      type: ServiceClientCredentials
      description: "\nRequired. Gets Azure subscription credentials.\n"
    - id: handlers
      type: DelegatingHandler[]
      description: "\nOptional. The delegating handlers to add to the http client pipeline.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.EventHub.EventHubManagementClient.EventHubManagementClient(System.Uri, ServiceClientCredentials, DelegatingHandler())
  name.vb: EventHubManagementClient(Uri, ServiceClientCredentials, DelegatingHandler())
- uid: Microsoft.Azure.Management.EventHub.EventHubManagementClient.#ctor(System.Uri,ServiceClientCredentials,HttpClientHandler,DelegatingHandler[])
  commentId: M:Microsoft.Azure.Management.EventHub.EventHubManagementClient.#ctor(System.Uri,ServiceClientCredentials,HttpClientHandler,DelegatingHandler[])
  id: '#ctor(System.Uri,ServiceClientCredentials,HttpClientHandler,DelegatingHandler[])'
  parent: Microsoft.Azure.Management.EventHub.EventHubManagementClient
  langs:
  - csharp
  - vb
  name: EventHubManagementClient(Uri, ServiceClientCredentials, HttpClientHandler, DelegatingHandler[])
  fullName: Microsoft.Azure.Management.EventHub.EventHubManagementClient.EventHubManagementClient(System.Uri, ServiceClientCredentials, HttpClientHandler, DelegatingHandler[])
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/EventHubManagementClient.cs
      branch: d475becfaeb21e7414891db78cbe850447cd0253
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/EventHub/Microsoft.Azure.Management.EventHub/Generated/EventHubManagementClient.cs
    startLine: 252
  assemblies:
  - Microsoft.Azure.Management.EventHub
  packages:
  - Microsoft.Azure.Management.EventHub(0.0.1-preview)
  namespace: Microsoft.Azure.Management.EventHub
  summary: "\nInitializes a new instance of the EventHubManagementClient class.\n"
  example: []
  syntax:
    content: public EventHubManagementClient(Uri baseUri, ServiceClientCredentials credentials, HttpClientHandler rootHandler, params DelegatingHandler[] handlers)
    content.vb: Public Sub New(baseUri As Uri, credentials As ServiceClientCredentials, rootHandler As HttpClientHandler, ParamArray handlers As DelegatingHandler())
    parameters:
    - id: baseUri
      type: System.Uri
      description: "\nOptional. The base URI of the service.\n"
    - id: credentials
      type: ServiceClientCredentials
      description: "\nRequired. Gets Azure subscription credentials.\n"
    - id: rootHandler
      type: HttpClientHandler
      description: "\nOptional. The http client handler used to handle http transport.\n"
    - id: handlers
      type: DelegatingHandler[]
      description: "\nOptional. The delegating handlers to add to the http client pipeline.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.EventHub.EventHubManagementClient.EventHubManagementClient(System.Uri, ServiceClientCredentials, HttpClientHandler, DelegatingHandler())
  name.vb: EventHubManagementClient(Uri, ServiceClientCredentials, HttpClientHandler, DelegatingHandler())
references:
- uid: Microsoft.Azure.Management.EventHub
  isExternal: false
  name: Microsoft.Azure.Management.EventHub
  fullName: Microsoft.Azure.Management.EventHub
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.EventHub.IEventHubManagementClient
  parent: Microsoft.Azure.Management.EventHub
  isExternal: false
  name: IEventHubManagementClient
  fullName: Microsoft.Azure.Management.EventHub.IEventHubManagementClient
- uid: System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  fullName: System.IDisposable
- uid: IAzureClient
  isExternal: true
  name: IAzureClient
  fullName: IAzureClient
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Management.EventHub.IEventHubManagementClient.BaseUri
  parent: Microsoft.Azure.Management.EventHub.IEventHubManagementClient
  isExternal: false
  name: BaseUri
  fullName: Microsoft.Azure.Management.EventHub.IEventHubManagementClient.BaseUri
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  fullName: System.Uri
- uid: Microsoft.Azure.Management.EventHub.IEventHubManagementClient.SerializationSettings
  parent: Microsoft.Azure.Management.EventHub.IEventHubManagementClient
  isExternal: false
  name: SerializationSettings
  fullName: Microsoft.Azure.Management.EventHub.IEventHubManagementClient.SerializationSettings
- uid: JsonSerializerSettings
  isExternal: true
  name: JsonSerializerSettings
  fullName: JsonSerializerSettings
- uid: Microsoft.Azure.Management.EventHub.IEventHubManagementClient.DeserializationSettings
  parent: Microsoft.Azure.Management.EventHub.IEventHubManagementClient
  isExternal: false
  name: DeserializationSettings
  fullName: Microsoft.Azure.Management.EventHub.IEventHubManagementClient.DeserializationSettings
- uid: Microsoft.Azure.Management.EventHub.IEventHubManagementClient.Credentials
  parent: Microsoft.Azure.Management.EventHub.IEventHubManagementClient
  isExternal: false
  name: Credentials
  fullName: Microsoft.Azure.Management.EventHub.IEventHubManagementClient.Credentials
- uid: ServiceClientCredentials
  isExternal: true
  name: ServiceClientCredentials
  fullName: ServiceClientCredentials
- uid: Microsoft.Azure.Management.EventHub.IEventHubManagementClient.SubscriptionId
  parent: Microsoft.Azure.Management.EventHub.IEventHubManagementClient
  isExternal: false
  name: SubscriptionId
  fullName: Microsoft.Azure.Management.EventHub.IEventHubManagementClient.SubscriptionId
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.Azure.Management.EventHub.IEventHubManagementClient.ApiVersion
  parent: Microsoft.Azure.Management.EventHub.IEventHubManagementClient
  isExternal: false
  name: ApiVersion
  fullName: Microsoft.Azure.Management.EventHub.IEventHubManagementClient.ApiVersion
- uid: Microsoft.Azure.Management.EventHub.IEventHubManagementClient.AcceptLanguage
  parent: Microsoft.Azure.Management.EventHub.IEventHubManagementClient
  isExternal: false
  name: AcceptLanguage
  fullName: Microsoft.Azure.Management.EventHub.IEventHubManagementClient.AcceptLanguage
- uid: Microsoft.Azure.Management.EventHub.IEventHubManagementClient.LongRunningOperationRetryTimeout
  parent: Microsoft.Azure.Management.EventHub.IEventHubManagementClient
  isExternal: false
  name: LongRunningOperationRetryTimeout
  fullName: Microsoft.Azure.Management.EventHub.IEventHubManagementClient.LongRunningOperationRetryTimeout
- uid: System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.EventHub.IEventHubManagementClient.GenerateClientRequestId
  parent: Microsoft.Azure.Management.EventHub.IEventHubManagementClient
  isExternal: false
  name: GenerateClientRequestId
  fullName: Microsoft.Azure.Management.EventHub.IEventHubManagementClient.GenerateClientRequestId
- uid: System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.EventHub.IEventHubManagementClient.Namespaces
  parent: Microsoft.Azure.Management.EventHub.IEventHubManagementClient
  isExternal: false
  name: Namespaces
  fullName: Microsoft.Azure.Management.EventHub.IEventHubManagementClient.Namespaces
- uid: Microsoft.Azure.Management.EventHub.INamespacesOperations
  parent: Microsoft.Azure.Management.EventHub
  isExternal: false
  name: INamespacesOperations
  fullName: Microsoft.Azure.Management.EventHub.INamespacesOperations
- uid: Microsoft.Azure.Management.EventHub.IEventHubManagementClient.EventHubs
  parent: Microsoft.Azure.Management.EventHub.IEventHubManagementClient
  isExternal: false
  name: EventHubs
  fullName: Microsoft.Azure.Management.EventHub.IEventHubManagementClient.EventHubs
- uid: Microsoft.Azure.Management.EventHub.IEventHubsOperations
  parent: Microsoft.Azure.Management.EventHub
  isExternal: false
  name: IEventHubsOperations
  fullName: Microsoft.Azure.Management.EventHub.IEventHubsOperations
- uid: Microsoft.Azure.Management.EventHub.IEventHubManagementClient.ConsumerGroups
  parent: Microsoft.Azure.Management.EventHub.IEventHubManagementClient
  isExternal: false
  name: ConsumerGroups
  fullName: Microsoft.Azure.Management.EventHub.IEventHubManagementClient.ConsumerGroups
- uid: Microsoft.Azure.Management.EventHub.IConsumerGroupsOperations
  parent: Microsoft.Azure.Management.EventHub
  isExternal: false
  name: IConsumerGroupsOperations
  fullName: Microsoft.Azure.Management.EventHub.IConsumerGroupsOperations
- uid: DelegatingHandler[]
  isExternal: true
  name: DelegatingHandler[]
  fullName: DelegatingHandler[]
  fullname.vb: DelegatingHandler()
  name.vb: DelegatingHandler()
  spec.csharp:
  - uid: DelegatingHandler
    name: DelegatingHandler
    fullName: DelegatingHandler
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: DelegatingHandler
    name: DelegatingHandler
    fullName: DelegatingHandler
    isExternal: true
  - name: ()
    fullName: ()
- uid: HttpClientHandler
  isExternal: true
  name: HttpClientHandler
  fullName: HttpClientHandler
