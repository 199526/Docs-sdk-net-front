items:
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithLoadBalancer
  commentId: T:Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithLoadBalancer
  id: IWithLoadBalancer
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition
  children:
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithLoadBalancer.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  - Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  langs:
  - csharp
  - vb
  name: IWithLoadBalancer
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithLoadBalancer
  type: Interface
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/NetworkInterface/Definition/IDefinition.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IWithLoadBalancer
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/NetworkInterface/Definition/IDefinition.cs
    startLine: 192
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition
  summary: "\nThe stage of the network interface definition allowing to associate it with a load balancer.\n"
  example: []
  syntax:
    content: public interface IWithLoadBalancer
    content.vb: Public Interface IWithLoadBalancer
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithLoadBalancer.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithLoadBalancer.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  id: WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithLoadBalancer
  langs:
  - csharp
  - vb
  name: WithExistingLoadBalancerBackend(ILoadBalancer, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithLoadBalancer.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/NetworkInterface/Definition/IDefinition.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithExistingLoadBalancerBackend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/NetworkInterface/Definition/IDefinition.cs
    startLine: 200
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition
  summary: "\nAssociates the network interface's primary IP configuration with a backend of an existing load balancer.\n"
  example: []
  syntax:
    content: IWithCreate WithExistingLoadBalancerBackend(ILoadBalancer loadBalancer, string backendName)
    content.vb: Function WithExistingLoadBalancerBackend(loadBalancer As ILoadBalancer, backendName As String) As IWithCreate
    parameters:
    - id: loadBalancer
      type: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
      description: loadBalancer an existing load balancer
    - id: backendName
      type: System.String
      description: backendName the name of an existing backend on that load balancer
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
      description: the next stage of the definition
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  id: WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithLoadBalancer
  langs:
  - csharp
  - vb
  name: WithExistingLoadBalancerInboundNatRule(ILoadBalancer, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/NetworkInterface/Definition/IDefinition.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithExistingLoadBalancerInboundNatRule
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/NetworkInterface/Definition/IDefinition.cs
    startLine: 208
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition
  summary: "\nAssociates the network interface's primary IP configuration with an inbound NAT rule of an existing load balancer.\n"
  example: []
  syntax:
    content: IWithCreate WithExistingLoadBalancerInboundNatRule(ILoadBalancer loadBalancer, string inboundNatRuleName)
    content.vb: Function WithExistingLoadBalancerInboundNatRule(loadBalancer As ILoadBalancer, inboundNatRuleName As String) As IWithCreate
    parameters:
    - id: loadBalancer
      type: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
      description: loadBalancer an existing load balancer
    - id: inboundNatRuleName
      type: System.String
      description: inboundNatRuleName the name of an existing inbound NAT rule on the selected load balancer
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
      description: the next stage of the definition
references:
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition
- uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: ILoadBalancer
  fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
  parent: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition
  isExternal: false
  name: IWithCreate
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
- uid: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network
  fullName: Microsoft.Azure.Management.Fluent.Network
- uid: System
  isExternal: false
  name: System
  fullName: System
