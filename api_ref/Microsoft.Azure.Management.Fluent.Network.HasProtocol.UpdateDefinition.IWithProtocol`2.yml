items:
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol`2
  commentId: T:Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol`2
  id: IWithProtocol`2
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition
  children:
  - Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol`2.WithProtocol(`1)
  langs:
  - csharp
  - vb
  name: IWithProtocol<ReturnT, ProtocolT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol<ReturnT, ProtocolT>
  type: Interface
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/HasProtocol/UpdateDefinition/IUpdateDefinition.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IWithProtocol
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/HasProtocol/UpdateDefinition/IUpdateDefinition.cs
    startLine: 11
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition
  syntax:
    content: public interface IWithProtocol<ReturnT, ProtocolT>
    content.vb: Public Interface IWithProtocol(Of ReturnT, ProtocolT)
    typeParameters:
    - id: ReturnT
    - id: ProtocolT
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol(Of ReturnT, ProtocolT)
  name.vb: IWithProtocol(Of ReturnT, ProtocolT)
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol`2.WithProtocol(`1)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol`2.WithProtocol(`1)
  id: WithProtocol(`1)
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol`2
  langs:
  - csharp
  - vb
  name: WithProtocol(ProtocolT)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol<ReturnT, ProtocolT>.WithProtocol(ProtocolT)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/HasProtocol/UpdateDefinition/IUpdateDefinition.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithProtocol
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/HasProtocol/UpdateDefinition/IUpdateDefinition.cs
    startLine: 18
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition
  summary: "\nSpecifies the transport protocol.\n"
  example: []
  syntax:
    content: ReturnT WithProtocol(ProtocolT protocol)
    content.vb: Function WithProtocol(protocol As ProtocolT) As ReturnT
    parameters:
    - id: protocol
      type: '{ProtocolT}'
      description: protocol a transport protocol
    return:
      type: '{ReturnT}'
      description: the next stage of the definition
  fullName.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol(Of ReturnT, ProtocolT).WithProtocol(ProtocolT)
references:
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition
- uid: '{ProtocolT}'
  isExternal: false
  name: ProtocolT
  fullName: ProtocolT
- uid: '{ReturnT}'
  isExternal: false
  name: ReturnT
  fullName: ReturnT
