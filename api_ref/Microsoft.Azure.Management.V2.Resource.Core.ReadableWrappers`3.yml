items:
- uid: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers`3
  commentId: T:Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers`3
  id: ReadableWrappers`3
  parent: Microsoft.Azure.Management.V2.Resource.Core
  children:
  - Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers`3.WrapList(Microsoft.Azure.Management.V2.Resource.Core.PagedList{`2})
  - Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers`3.WrapModel(`2)
  langs:
  - csharp
  - vb
  name: ReadableWrappers<IFluentResourceT, FluentResourceT, InnerResourceT>
  fullName: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers<IFluentResourceT, FluentResourceT, InnerResourceT>
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ReadableWrappers.cs
      branch: 953e663ab177b9ff6936c94c9fc5835e0bdce93b
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ReadableWrappers
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ReadableWrappers.cs
    startLine: 12
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core
  syntax:
    content: >-
      public abstract class ReadableWrappers<IFluentResourceT, FluentResourceT, InnerResourceT>
          where FluentResourceT : IFluentResourceT
    content.vb: Public MustInherit Class ReadableWrappers(Of IFluentResourceT, FluentResourceT As IFluentResourceT, InnerResourceT)
    typeParameters:
    - id: IFluentResourceT
    - id: FluentResourceT
    - id: InnerResourceT
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers(Of IFluentResourceT, FluentResourceT, InnerResourceT)
  name.vb: ReadableWrappers(Of IFluentResourceT, FluentResourceT, InnerResourceT)
- uid: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers`3.WrapModel(`2)
  commentId: M:Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers`3.WrapModel(`2)
  id: WrapModel(`2)
  parent: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers`3
  langs:
  - csharp
  - vb
  name: WrapModel(InnerResourceT)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers<IFluentResourceT, FluentResourceT, InnerResourceT>.WrapModel(InnerResourceT)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ReadableWrappers.cs
      branch: 953e663ab177b9ff6936c94c9fc5835e0bdce93b
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WrapModel
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ReadableWrappers.cs
    startLine: 15
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core
  syntax:
    content: protected abstract IFluentResourceT WrapModel(InnerResourceT inner)
    content.vb: Protected MustOverride Function WrapModel(inner As InnerResourceT) As IFluentResourceT
    parameters:
    - id: inner
      type: '{InnerResourceT}'
    return:
      type: '{IFluentResourceT}'
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers(Of IFluentResourceT, FluentResourceT, InnerResourceT).WrapModel(InnerResourceT)
- uid: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers`3.WrapList(Microsoft.Azure.Management.V2.Resource.Core.PagedList{`2})
  commentId: M:Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers`3.WrapList(Microsoft.Azure.Management.V2.Resource.Core.PagedList{`2})
  id: WrapList(Microsoft.Azure.Management.V2.Resource.Core.PagedList{`2})
  parent: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers`3
  langs:
  - csharp
  - vb
  name: WrapList(PagedList<InnerResourceT>)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers<IFluentResourceT, FluentResourceT, InnerResourceT>.WrapList(Microsoft.Azure.Management.V2.Resource.Core.PagedList<InnerResourceT>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ReadableWrappers.cs
      branch: 953e663ab177b9ff6936c94c9fc5835e0bdce93b
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WrapList
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ReadableWrappers.cs
    startLine: 17
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core
  syntax:
    content: protected PagedList<IFluentResourceT> WrapList(PagedList<InnerResourceT> innerList)
    content.vb: Protected Function WrapList(innerList As PagedList(Of InnerResourceT)) As PagedList(Of IFluentResourceT)
    parameters:
    - id: innerList
      type: Microsoft.Azure.Management.V2.Resource.Core.PagedList{{InnerResourceT}}
    return:
      type: Microsoft.Azure.Management.V2.Resource.Core.PagedList{{IFluentResourceT}}
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.ReadableWrappers(Of IFluentResourceT, FluentResourceT, InnerResourceT).WrapList(Microsoft.Azure.Management.V2.Resource.Core.PagedList(Of InnerResourceT))
  name.vb: WrapList(PagedList(Of InnerResourceT))
references:
- uid: Microsoft.Azure.Management.V2.Resource.Core
  isExternal: false
  name: Microsoft.Azure.Management.V2.Resource.Core
  fullName: Microsoft.Azure.Management.V2.Resource.Core
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: '{InnerResourceT}'
  isExternal: false
  name: InnerResourceT
  fullName: InnerResourceT
- uid: '{IFluentResourceT}'
  isExternal: false
  name: IFluentResourceT
  fullName: IFluentResourceT
- uid: Microsoft.Azure.Management.V2.Resource.Core.PagedList{{InnerResourceT}}
  parent: Microsoft.Azure.Management.V2.Resource.Core
  definition: Microsoft.Azure.Management.V2.Resource.Core.PagedList`1
  name: PagedList<InnerResourceT>
  fullName: Microsoft.Azure.Management.V2.Resource.Core.PagedList<InnerResourceT>
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.PagedList(Of InnerResourceT)
  name.vb: PagedList(Of InnerResourceT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.PagedList`1
    name: PagedList
    fullName: Microsoft.Azure.Management.V2.Resource.Core.PagedList
  - name: <
    fullName: <
  - name: InnerResourceT
    fullName: InnerResourceT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.PagedList`1
    name: PagedList
    fullName: Microsoft.Azure.Management.V2.Resource.Core.PagedList
  - name: '(Of '
    fullName: '(Of '
  - name: InnerResourceT
    fullName: InnerResourceT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.V2.Resource.Core.PagedList{{IFluentResourceT}}
  parent: Microsoft.Azure.Management.V2.Resource.Core
  definition: Microsoft.Azure.Management.V2.Resource.Core.PagedList`1
  name: PagedList<IFluentResourceT>
  fullName: Microsoft.Azure.Management.V2.Resource.Core.PagedList<IFluentResourceT>
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.PagedList(Of IFluentResourceT)
  name.vb: PagedList(Of IFluentResourceT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.PagedList`1
    name: PagedList
    fullName: Microsoft.Azure.Management.V2.Resource.Core.PagedList
  - name: <
    fullName: <
  - name: IFluentResourceT
    fullName: IFluentResourceT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.PagedList`1
    name: PagedList
    fullName: Microsoft.Azure.Management.V2.Resource.Core.PagedList
  - name: '(Of '
    fullName: '(Of '
  - name: IFluentResourceT
    fullName: IFluentResourceT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.V2.Resource.Core.PagedList`1
  parent: Microsoft.Azure.Management.V2.Resource.Core
  isExternal: false
  name: PagedList<T>
  fullName: Microsoft.Azure.Management.V2.Resource.Core.PagedList<T>
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.PagedList(Of T)
  name.vb: PagedList(Of T)
  spec.csharp:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.PagedList`1
    name: PagedList
    fullName: Microsoft.Azure.Management.V2.Resource.Core.PagedList
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.PagedList`1
    name: PagedList
    fullName: Microsoft.Azure.Management.V2.Resource.Core.PagedList
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
