items:
- uid: Microsoft.Azure.Management.Fluent.Resource.IProvider
  commentId: T:Microsoft.Azure.Management.Fluent.Resource.IProvider
  id: IProvider
  parent: Microsoft.Azure.Management.Fluent.Resource
  children:
  - Microsoft.Azure.Management.Fluent.Resource.IProvider.Namespace
  - Microsoft.Azure.Management.Fluent.Resource.IProvider.RegistrationState
  - Microsoft.Azure.Management.Fluent.Resource.IProvider.ResourceTypes
  langs:
  - csharp
  - vb
  name: IProvider
  fullName: Microsoft.Azure.Management.Fluent.Resource.IProvider
  type: Interface
  source:
    remote:
      path: src/ResourceManagement/ResourceManager/Microsoft.Azure.Management.Fluent.ResourceManager/Domain/IProvider.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IProvider
    path: src/ResourceManagement/ResourceManager/Microsoft.Azure.Management.Fluent.ResourceManager/Domain/IProvider.cs
    startLine: 14
  assemblies:
  - Microsoft.Azure.Management.Fluent.ResourceManager
  packages:
  - Microsoft.Azure.Management.Fluent.ResourceManager(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Resource
  summary: "\nAn immutable client-side representation of an Azure resource provider.\n"
  example: []
  syntax:
    content: 'public interface IProvider : IIndexable, IWrapper<ProviderInner>'
    content.vb: >-
      Public Interface IProvider
          Inherits IIndexable, IWrapper(Of ProviderInner)
  inheritedMembers:
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IIndexable.Key
  - Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper{Microsoft.Azure.Management.ResourceManager.Models.ProviderInner}.Inner
  - Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper{Microsoft.Azure.Management.ResourceManager.Models.ProviderInner}.SetInner(Microsoft.Azure.Management.ResourceManager.Models.ProviderInner)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Azure.Management.Fluent.Resource.IProvider.Namespace
  commentId: P:Microsoft.Azure.Management.Fluent.Resource.IProvider.Namespace
  id: Namespace
  parent: Microsoft.Azure.Management.Fluent.Resource.IProvider
  langs:
  - csharp
  - vb
  name: Namespace
  fullName: Microsoft.Azure.Management.Fluent.Resource.IProvider.Namespace
  type: Property
  source:
    remote:
      path: src/ResourceManagement/ResourceManager/Microsoft.Azure.Management.Fluent.ResourceManager/Domain/IProvider.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Namespace
    path: src/ResourceManagement/ResourceManager/Microsoft.Azure.Management.Fluent.ResourceManager/Domain/IProvider.cs
    startLine: 19
  assemblies:
  - Microsoft.Azure.Management.Fluent.ResourceManager
  packages:
  - Microsoft.Azure.Management.Fluent.ResourceManager(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Resource
  example: []
  syntax:
    content: string Namespace { get; }
    content.vb: ReadOnly Property Namespace As String
    parameters: []
    return:
      type: System.String
      description: the namespace of the provider
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Resource.IProvider.RegistrationState
  commentId: P:Microsoft.Azure.Management.Fluent.Resource.IProvider.RegistrationState
  id: RegistrationState
  parent: Microsoft.Azure.Management.Fluent.Resource.IProvider
  langs:
  - csharp
  - vb
  name: RegistrationState
  fullName: Microsoft.Azure.Management.Fluent.Resource.IProvider.RegistrationState
  type: Property
  source:
    remote:
      path: src/ResourceManagement/ResourceManager/Microsoft.Azure.Management.Fluent.ResourceManager/Domain/IProvider.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RegistrationState
    path: src/ResourceManagement/ResourceManager/Microsoft.Azure.Management.Fluent.ResourceManager/Domain/IProvider.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Management.Fluent.ResourceManager
  packages:
  - Microsoft.Azure.Management.Fluent.ResourceManager(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Resource
  example: []
  syntax:
    content: string RegistrationState { get; }
    content.vb: ReadOnly Property RegistrationState As String
    parameters: []
    return:
      type: System.String
      description: the registration state of the provider, indicating whether this
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Resource.IProvider.ResourceTypes
  commentId: P:Microsoft.Azure.Management.Fluent.Resource.IProvider.ResourceTypes
  id: ResourceTypes
  parent: Microsoft.Azure.Management.Fluent.Resource.IProvider
  langs:
  - csharp
  - vb
  name: ResourceTypes
  fullName: Microsoft.Azure.Management.Fluent.Resource.IProvider.ResourceTypes
  type: Property
  source:
    remote:
      path: src/ResourceManagement/ResourceManager/Microsoft.Azure.Management.Fluent.ResourceManager/Domain/IProvider.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ResourceTypes
    path: src/ResourceManagement/ResourceManager/Microsoft.Azure.Management.Fluent.ResourceManager/Domain/IProvider.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Management.Fluent.ResourceManager
  packages:
  - Microsoft.Azure.Management.Fluent.ResourceManager(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Resource
  example: []
  syntax:
    content: IList<ProviderResourceType> ResourceTypes { get; }
    content.vb: ReadOnly Property ResourceTypes As IList(Of ProviderResourceType)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType}
      description: the list of provider resource types
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Microsoft.Azure.Management.Fluent.Resource
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Resource
  fullName: Microsoft.Azure.Management.Fluent.Resource
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IIndexable.Key
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IIndexable
  isExternal: false
  name: Key
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IIndexable.Key
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper{Microsoft.Azure.Management.ResourceManager.Models.ProviderInner}.Inner
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper{Microsoft.Azure.Management.ResourceManager.Models.ProviderInner}
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper`1.Inner
  name: Inner
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper<Microsoft.Azure.Management.ResourceManager.Models.ProviderInner>.Inner
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper(Of Microsoft.Azure.Management.ResourceManager.Models.ProviderInner).Inner
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper{Microsoft.Azure.Management.ResourceManager.Models.ProviderInner}.SetInner(Microsoft.Azure.Management.ResourceManager.Models.ProviderInner)
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper{Microsoft.Azure.Management.ResourceManager.Models.ProviderInner}
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper`1.SetInner(`0)
  name: SetInner(ProviderInner)
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper<Microsoft.Azure.Management.ResourceManager.Models.ProviderInner>.SetInner(Microsoft.Azure.Management.ResourceManager.Models.ProviderInner)
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper(Of Microsoft.Azure.Management.ResourceManager.Models.ProviderInner).SetInner(Microsoft.Azure.Management.ResourceManager.Models.ProviderInner)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper`1.SetInner(`0)
    name: SetInner
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper<Microsoft.Azure.Management.ResourceManager.Models.ProviderInner>.SetInner
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.ResourceManager.Models.ProviderInner
    name: ProviderInner
    fullName: Microsoft.Azure.Management.ResourceManager.Models.ProviderInner
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper`1.SetInner(`0)
    name: SetInner
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper(Of Microsoft.Azure.Management.ResourceManager.Models.ProviderInner).SetInner
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.ResourceManager.Models.ProviderInner
    name: ProviderInner
    fullName: Microsoft.Azure.Management.ResourceManager.Models.ProviderInner
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IIndexable
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions
  isExternal: false
  name: IIndexable
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IIndexable
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper`1.Inner
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper`1
  isExternal: false
  name: Inner
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper<T>.Inner
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper(Of T).Inner
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper{Microsoft.Azure.Management.ResourceManager.Models.ProviderInner}
  parent: Microsoft.Azure.Management.Fluent.Resource.Core
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper`1
  name: IWrapper<ProviderInner>
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper<Microsoft.Azure.Management.ResourceManager.Models.ProviderInner>
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper(Of Microsoft.Azure.Management.ResourceManager.Models.ProviderInner)
  name.vb: IWrapper(Of ProviderInner)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper`1
    name: IWrapper
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.ResourceManager.Models.ProviderInner
    name: ProviderInner
    fullName: Microsoft.Azure.Management.ResourceManager.Models.ProviderInner
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper`1
    name: IWrapper
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.ResourceManager.Models.ProviderInner
    name: ProviderInner
    fullName: Microsoft.Azure.Management.ResourceManager.Models.ProviderInner
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper`1.SetInner(`0)
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper`1
  isExternal: false
  name: SetInner(T)
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper<T>.SetInner(T)
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper(Of T).SetInner(T)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper`1.SetInner(`0)
    name: SetInner
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper<T>.SetInner
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper`1.SetInner(`0)
    name: SetInner
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper(Of T).SetInner
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper`1
  parent: Microsoft.Azure.Management.Fluent.Resource.Core
  isExternal: false
  name: IWrapper<T>
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper<T>
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper(Of T)
  name.vb: IWrapper(Of T)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper`1
    name: IWrapper
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper`1
    name: IWrapper
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Resource.Core
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ProviderResourceType>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType>
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType)
  name.vb: IList(Of ProviderResourceType)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType
    name: ProviderResourceType
    fullName: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType
    name: ProviderResourceType
    fullName: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: true
  name: IList<T>
  fullName: System.Collections.Generic.IList<T>
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
