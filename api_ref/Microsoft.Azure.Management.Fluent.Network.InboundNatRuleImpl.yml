items:
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  commentId: T:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  id: InboundNatRuleImpl
  parent: Microsoft.Azure.Management.Fluent.Network
  children:
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Attach
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.BackendNetworkInterfaceId
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.BackendNicIpConfigurationName
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.BackendPort
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.FloatingIpEnabled
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Frontend
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.FrontendPort
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.IdleTimeoutInMinutes
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasBackendPort#Definition#IWithBackendPort{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithCreateAndInboundNatRule}}#WithBackendPort(System.Int32)
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasBackendPort#Update#IWithBackendPort{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Update#IUpdate}#WithBackendPort(System.Int32)
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasBackendPort#UpdateDefinition#IWithBackendPort{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithBackendPort(System.Int32)
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#Definition#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithCreateAndInboundNatRule}}#WithFloatingIp(System.Boolean)
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#Definition#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithCreateAndInboundNatRule}}#WithFloatingIpDisabled
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#Definition#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithCreateAndInboundNatRule}}#WithFloatingIpEnabled
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#Update#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Update#IUpdate}#WithFloatingIp(System.Boolean)
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#Update#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Update#IUpdate}#WithFloatingIpDisabled
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#Update#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Update#IUpdate}#WithFloatingIpEnabled
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#UpdateDefinition#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithFloatingIp(System.Boolean)
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#UpdateDefinition#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithFloatingIpDisabled
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#UpdateDefinition#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithFloatingIpEnabled
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFrontend#Definition#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Definition#IWithFrontendPort{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithCreateAndInboundNatRule}}#WithFrontend(System.String)
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFrontend#Update#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Update#IUpdate}#WithFrontend(System.String)
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFrontend#UpdateDefinition#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#UpdateDefinition#IWithFrontendPort{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithFrontend(System.String)
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasProtocol#Definition#IWithProtocol{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Definition#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithCreateAndInboundNatRule},System#String}#WithProtocol(System.String)
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasProtocol#Update#IWithProtocol{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Update#IUpdate,System#String}#WithProtocol(System.String)
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasProtocol#UpdateDefinition#IWithProtocol{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#UpdateDefinition#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate},System#String}#WithProtocol(System.String)
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#IHasBackendPort#BackendPort
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#IHasFloatingIp#FloatingIpEnabled
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#IHasFrontend#Frontend
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#IHasProtocol{System#String}#Protocol
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#IInboundNatRule#BackendNetworkInterfaceId
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#IInboundNatRule#BackendNicIpConfigurationName
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#IInboundNatRule#FrontendPort
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#IInboundNatRule#IdleTimeoutInMinutes
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Definition#IWithFrontendPort{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithCreateAndInboundNatRule}#WithFrontendPort(System.Int32)
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Definition#IWithIdleTimeout{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithCreateAndInboundNatRule}#WithIdleTimeoutInMinutes(System.Int32)
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Update#IWithFrontendPort#WithFrontendPort(System.Int32)
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Update#IWithIdleTimeout#WithIdleTimeoutInMinutes(System.Int32)
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#InboundNatRule#UpdateDefinition#IWithFrontendPort{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}#WithFrontendPort(System.Int32)
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#InboundNatRule#UpdateDefinition#IWithIdleTimeout{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}#WithIdleTimeoutInMinutes(System.Int32)
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Name
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Protocol
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.WithBackendPort(System.Int32)
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.WithFloatingIp(System.Boolean)
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.WithFloatingIpDisabled
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.WithFloatingIpEnabled
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.WithFrontend(System.String)
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.WithFrontendPort(System.Int32)
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.WithIdleTimeoutInMinutes(System.Int32)
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.WithProtocol(System.String)
  langs:
  - csharp
  - vb
  name: InboundNatRuleImpl
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: InboundNatRuleImpl
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nImplementation for IInboundNatRule.\n"
  example: []
  syntax:
    content: 'public class InboundNatRuleImpl : ChildResource<InboundNatRuleInner, LoadBalancerImpl, ILoadBalancer>, IInboundNatRule, IHasFrontend, IHasBackendPort, IHasProtocol<string>, IHasFloatingIp, IWrapper<InboundNatRuleInner>, IChildResource<ILoadBalancer>, IDefinition<IWithCreateAndInboundNatRule>, IBlank<IWithCreateAndInboundNatRule>, IWithProtocol<IWithCreateAndInboundNatRule>, IWithProtocol<IWithFrontend<IWithCreateAndInboundNatRule>, string>, IWithFrontend<IWithCreateAndInboundNatRule>, IWithFrontend<IWithFrontendPort<IWithCreateAndInboundNatRule>>, IWithFrontendPort<IWithCreateAndInboundNatRule>, IWithAttach<IWithCreateAndInboundNatRule>, IInDefinition<IWithCreateAndInboundNatRule>, IWithBackendPort<IWithCreateAndInboundNatRule>, IWithBackendPort<IWithAttach<IWithCreateAndInboundNatRule>>, IWithFloatingIp<IWithCreateAndInboundNatRule>, IWithFloatingIp<IWithAttach<IWithCreateAndInboundNatRule>>, IWithIdleTimeout<IWithCreateAndInboundNatRule>, IUpdateDefinition<IUpdate>, IBlank<IUpdate>, IWithProtocol<IUpdate>, IWithProtocol<IWithFrontend<IUpdate>, string>, IWithFrontend<IUpdate>, IWithFrontend<IWithFrontendPort<IUpdate>>, IWithFrontendPort<IUpdate>, IWithAttach<IUpdate>, IInUpdate<IUpdate>, IWithBackendPort<IUpdate>, IWithBackendPort<IWithAttach<IUpdate>>, IWithFloatingIp<IUpdate>, IWithFloatingIp<IWithAttach<IUpdate>>, IWithIdleTimeout<IUpdate>, IUpdate, ISettable<IUpdate>, IWithBackendPort, IWithBackendPort<IUpdate>, IWithFloatingIp, IWithFloatingIp<IUpdate>, IWithFrontend, IWithFrontend<IUpdate>, IWithFrontendPort, IWithIdleTimeout, IWithProtocol, IWithProtocol<IUpdate, string>'
    content.vb: >-
      Public Class InboundNatRuleImpl
          Inherits ChildResource(Of InboundNatRuleInner, LoadBalancerImpl, ILoadBalancer)
          Implements IInboundNatRule, IHasFrontend, IHasBackendPort, IHasProtocol(Of String), IHasFloatingIp, IWrapper(Of InboundNatRuleInner), IChildResource(Of ILoadBalancer), IDefinition(Of IWithCreateAndInboundNatRule), IBlank(Of IWithCreateAndInboundNatRule), IWithProtocol(Of IWithCreateAndInboundNatRule), IWithProtocol(Of IWithFrontend(Of IWithCreateAndInboundNatRule), String), IWithFrontend(Of IWithCreateAndInboundNatRule), IWithFrontend(Of IWithFrontendPort(Of IWithCreateAndInboundNatRule)), IWithFrontendPort(Of IWithCreateAndInboundNatRule), IWithAttach(Of IWithCreateAndInboundNatRule), IInDefinition(Of IWithCreateAndInboundNatRule), IWithBackendPort(Of IWithCreateAndInboundNatRule), IWithBackendPort(Of IWithAttach(Of IWithCreateAndInboundNatRule)), IWithFloatingIp(Of IWithCreateAndInboundNatRule), IWithFloatingIp(Of IWithAttach(Of IWithCreateAndInboundNatRule)), IWithIdleTimeout(Of IWithCreateAndInboundNatRule), IUpdateDefinition(Of IUpdate), IBlank(Of IUpdate), IWithProtocol(Of IUpdate), IWithProtocol(Of IWithFrontend(Of IUpdate), String), IWithFrontend(Of IUpdate), IWithFrontend(Of IWithFrontendPort(Of IUpdate)), IWithFrontendPort(Of IUpdate), IWithAttach(Of IUpdate), IInUpdate(Of IUpdate), IWithBackendPort(Of IUpdate), IWithBackendPort(Of IWithAttach(Of IUpdate)), IWithFloatingIp(Of IUpdate), IWithFloatingIp(Of IWithAttach(Of IUpdate)), IWithIdleTimeout(Of IUpdate), IUpdate, ISettable(Of IUpdate), IWithBackendPort, IWithBackendPort(Of IUpdate), IWithFloatingIp, IWithFloatingIp(Of IUpdate), IWithFrontend, IWithFrontend(Of IUpdate), IWithFrontendPort, IWithIdleTimeout, IWithProtocol, IWithProtocol(Of IUpdate, String)
  inheritance:
  - System.Object
  implements:
  - Microsoft.Azure.Management.Fluent.Network.IInboundNatRule
  - Microsoft.Azure.Management.Fluent.Network.IHasFrontend
  - Microsoft.Azure.Management.Fluent.Network.IHasBackendPort
  - Microsoft.Azure.Management.Fluent.Network.IHasProtocol{System.String}
  - Microsoft.Azure.Management.Fluent.Network.IHasFloatingIp
  - IWrapper{Microsoft.Azure.Management.Network.Models.InboundNatRuleInner}
  - IChildResource{Microsoft.Azure.Management.Fluent.Network.ILoadBalancer}
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IDefinition{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}
  - Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule},System.String}
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}
  - Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}}
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}
  - IInDefinition{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}
  - Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}}
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}
  - Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}}
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IUpdateDefinition{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate},System.String}
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - IInUpdate{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithIdleTimeout{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate
  - ISettable{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IWithBackendPort
  - Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IWithFloatingIp
  - Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IWithFrontend
  - Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IWithFrontendPort
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IWithIdleTimeout
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IWithProtocol
  - Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate,System.String}
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Name
  commentId: P:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Name
  id: Name
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: Name
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Name
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatRuleImpl.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public override string Name { get; }
    content.vb: Public Overrides ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.BackendNicIpConfigurationName
  commentId: P:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.BackendNicIpConfigurationName
  id: BackendNicIpConfigurationName
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: BackendNicIpConfigurationName
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.BackendNicIpConfigurationName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BackendNicIpConfigurationName
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatRuleImpl.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public string BackendNicIpConfigurationName { get; }
    content.vb: Public ReadOnly Property BackendNicIpConfigurationName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.BackendPort
  commentId: P:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.BackendPort
  id: BackendPort
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: BackendPort
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.BackendPort
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BackendPort
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatRuleImpl.cs
    startLine: 42
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public int BackendPort { get; }
    content.vb: Public ReadOnly Property BackendPort As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.BackendNetworkInterfaceId
  commentId: P:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.BackendNetworkInterfaceId
  id: BackendNetworkInterfaceId
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: BackendNetworkInterfaceId
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.BackendNetworkInterfaceId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BackendNetworkInterfaceId
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatRuleImpl.cs
    startLine: 49
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public string BackendNetworkInterfaceId { get; }
    content.vb: Public ReadOnly Property BackendNetworkInterfaceId As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Protocol
  commentId: P:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Protocol
  id: Protocol
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: Protocol
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Protocol
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Protocol
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatRuleImpl.cs
    startLine: 58
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public string Protocol { get; }
    content.vb: Public ReadOnly Property Protocol As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.FrontendPort
  commentId: P:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.FrontendPort
  id: FrontendPort
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: FrontendPort
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.FrontendPort
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: FrontendPort
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatRuleImpl.cs
    startLine: 66
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public int FrontendPort { get; }
    content.vb: Public ReadOnly Property FrontendPort As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.FloatingIpEnabled
  commentId: P:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.FloatingIpEnabled
  id: FloatingIpEnabled
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: FloatingIpEnabled
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.FloatingIpEnabled
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: FloatingIpEnabled
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatRuleImpl.cs
    startLine: 74
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public bool FloatingIpEnabled { get; }
    content.vb: Public ReadOnly Property FloatingIpEnabled As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Frontend
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Frontend
  id: Frontend
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: Frontend()
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Frontend()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Frontend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatRuleImpl.cs
    startLine: 82
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public IFrontend Frontend()
    content.vb: Public Function Frontend As IFrontend
    return:
      type: Microsoft.Azure.Management.Fluent.Network.IFrontend
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.IdleTimeoutInMinutes
  commentId: P:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.IdleTimeoutInMinutes
  id: IdleTimeoutInMinutes
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: IdleTimeoutInMinutes
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.IdleTimeoutInMinutes
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IdleTimeoutInMinutes
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatRuleImpl.cs
    startLine: 98
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public int IdleTimeoutInMinutes { get; }
    content.vb: Public ReadOnly Property IdleTimeoutInMinutes As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.WithBackendPort(System.Int32)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.WithBackendPort(System.Int32)
  id: WithBackendPort(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: WithBackendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.WithBackendPort(System.Int32)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithBackendPort
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatRuleImpl.cs
    startLine: 106
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public InboundNatRuleImpl WithBackendPort(int port)
    content.vb: Public Function WithBackendPort(port As Integer) As InboundNatRuleImpl
    parameters:
    - id: port
      type: System.Int32
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.WithFloatingIpEnabled
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.WithFloatingIpEnabled
  id: WithFloatingIpEnabled
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: WithFloatingIpEnabled()
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.WithFloatingIpEnabled()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithFloatingIpEnabled
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatRuleImpl.cs
    startLine: 112
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public InboundNatRuleImpl WithFloatingIpEnabled()
    content.vb: Public Function WithFloatingIpEnabled As InboundNatRuleImpl
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.WithFloatingIpDisabled
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.WithFloatingIpDisabled
  id: WithFloatingIpDisabled
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: WithFloatingIpDisabled()
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.WithFloatingIpDisabled()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithFloatingIpDisabled
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatRuleImpl.cs
    startLine: 117
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public InboundNatRuleImpl WithFloatingIpDisabled()
    content.vb: Public Function WithFloatingIpDisabled As InboundNatRuleImpl
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.WithFloatingIp(System.Boolean)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.WithFloatingIp(System.Boolean)
  id: WithFloatingIp(System.Boolean)
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: WithFloatingIp(Boolean)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.WithFloatingIp(System.Boolean)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithFloatingIp
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatRuleImpl.cs
    startLine: 122
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public InboundNatRuleImpl WithFloatingIp(bool enabled)
    content.vb: Public Function WithFloatingIp(enabled As Boolean) As InboundNatRuleImpl
    parameters:
    - id: enabled
      type: System.Boolean
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.WithFrontendPort(System.Int32)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.WithFrontendPort(System.Int32)
  id: WithFrontendPort(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: WithFrontendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.WithFrontendPort(System.Int32)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithFrontendPort
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatRuleImpl.cs
    startLine: 128
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public InboundNatRuleImpl WithFrontendPort(int port)
    content.vb: Public Function WithFrontendPort(port As Integer) As InboundNatRuleImpl
    parameters:
    - id: port
      type: System.Int32
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.WithIdleTimeoutInMinutes(System.Int32)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.WithIdleTimeoutInMinutes(System.Int32)
  id: WithIdleTimeoutInMinutes(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: WithIdleTimeoutInMinutes(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.WithIdleTimeoutInMinutes(System.Int32)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithIdleTimeoutInMinutes
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatRuleImpl.cs
    startLine: 136
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public InboundNatRuleImpl WithIdleTimeoutInMinutes(int minutes)
    content.vb: Public Function WithIdleTimeoutInMinutes(minutes As Integer) As InboundNatRuleImpl
    parameters:
    - id: minutes
      type: System.Int32
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.WithProtocol(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.WithProtocol(System.String)
  id: WithProtocol(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: WithProtocol(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.WithProtocol(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithProtocol
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatRuleImpl.cs
    startLine: 142
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public InboundNatRuleImpl WithProtocol(string protocol)
    content.vb: Public Function WithProtocol(protocol As String) As InboundNatRuleImpl
    parameters:
    - id: protocol
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.WithFrontend(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.WithFrontend(System.String)
  id: WithFrontend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: WithFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.WithFrontend(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithFrontend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatRuleImpl.cs
    startLine: 148
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public InboundNatRuleImpl WithFrontend(string frontendName)
    content.vb: Public Function WithFrontend(frontendName As String) As InboundNatRuleImpl
    parameters:
    - id: frontendName
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Attach
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Attach
  id: Attach
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: Attach()
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Attach()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Attach
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/InboundNatRuleImpl.cs
    startLine: 156
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public LoadBalancerImpl Attach()
    content.vb: Public Function Attach As LoadBalancerImpl
    return:
      type: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#UpdateDefinition#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithFloatingIpEnabled
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#UpdateDefinition#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithFloatingIpEnabled
  id: Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#UpdateDefinition#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithFloatingIpEnabled
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: IWithFloatingIp<IWithAttach<IUpdate>>.WithFloatingIpEnabled()
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFloatingIpEnabled()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFloatingIpEnabled
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nEnables floating IP support.\n"
  example: []
  syntax:
    content: IWithAttach<IUpdate> IWithFloatingIp<IWithAttach<IUpdate>>.WithFloatingIpEnabled()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFloatingIpEnabled As IWithAttach(Of IUpdate) Implements IWithFloatingIp(Of IWithAttach(Of IUpdate)).WithFloatingIpEnabled
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}.WithFloatingIpEnabled
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFloatingIpEnabled()
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#UpdateDefinition#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithFloatingIp(System.Boolean)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#UpdateDefinition#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithFloatingIp(System.Boolean)
  id: Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#UpdateDefinition#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithFloatingIp(System.Boolean)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: IWithFloatingIp<IWithAttach<IUpdate>>.WithFloatingIp(Boolean)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFloatingIp(System.Boolean)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFloatingIp
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
    startLine: 41
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSets the floating IP enablement.\n"
  example: []
  syntax:
    content: IWithAttach<IUpdate> IWithFloatingIp<IWithAttach<IUpdate>>.WithFloatingIp(bool enabled)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFloatingIp(enabled As Boolean) As IWithAttach(Of IUpdate) Implements IWithFloatingIp(Of IWithAttach(Of IUpdate)).WithFloatingIp
    parameters:
    - id: enabled
      type: System.Boolean
      description: enabled true if floating IP should be enabled
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}.WithFloatingIp(System.Boolean)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFloatingIp(Boolean)
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#UpdateDefinition#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithFloatingIpDisabled
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#UpdateDefinition#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithFloatingIpDisabled
  id: Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#UpdateDefinition#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithFloatingIpDisabled
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: IWithFloatingIp<IWithAttach<IUpdate>>.WithFloatingIpDisabled()
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFloatingIpDisabled()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFloatingIpDisabled
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
    startLine: 49
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nDisables floating IP support.\n"
  example: []
  syntax:
    content: IWithAttach<IUpdate> IWithFloatingIp<IWithAttach<IUpdate>>.WithFloatingIpDisabled()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFloatingIpDisabled As IWithAttach(Of IUpdate) Implements IWithFloatingIp(Of IWithAttach(Of IUpdate)).WithFloatingIpDisabled
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}.WithFloatingIpDisabled
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFloatingIpDisabled()
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#Definition#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithCreateAndInboundNatRule}}#WithFloatingIpEnabled
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#Definition#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithCreateAndInboundNatRule}}#WithFloatingIpEnabled
  id: Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#Definition#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithCreateAndInboundNatRule}}#WithFloatingIpEnabled
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: IWithFloatingIp<IWithAttach<IWithCreateAndInboundNatRule>>.WithFloatingIpEnabled()
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>>.WithFloatingIpEnabled()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>>.WithFloatingIpEnabled
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
    startLine: 57
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nEnables floating IP support.\n"
  example: []
  syntax:
    content: IWithAttach<IWithCreateAndInboundNatRule> IWithFloatingIp<IWithAttach<IWithCreateAndInboundNatRule>>.WithFloatingIpEnabled()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>>.WithFloatingIpEnabled As IWithAttach(Of IWithCreateAndInboundNatRule) Implements IWithFloatingIp(Of IWithAttach(Of IWithCreateAndInboundNatRule)).WithFloatingIpEnabled
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}}.WithFloatingIpEnabled
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>>.WithFloatingIpEnabled()
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#Definition#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithCreateAndInboundNatRule}}#WithFloatingIp(System.Boolean)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#Definition#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithCreateAndInboundNatRule}}#WithFloatingIp(System.Boolean)
  id: Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#Definition#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithCreateAndInboundNatRule}}#WithFloatingIp(System.Boolean)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: IWithFloatingIp<IWithAttach<IWithCreateAndInboundNatRule>>.WithFloatingIp(Boolean)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>>.WithFloatingIp(System.Boolean)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>>.WithFloatingIp
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
    startLine: 66
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSets the floating IP enablement.\n"
  example: []
  syntax:
    content: IWithAttach<IWithCreateAndInboundNatRule> IWithFloatingIp<IWithAttach<IWithCreateAndInboundNatRule>>.WithFloatingIp(bool enabled)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>>.WithFloatingIp(enabled As Boolean) As IWithAttach(Of IWithCreateAndInboundNatRule) Implements IWithFloatingIp(Of IWithAttach(Of IWithCreateAndInboundNatRule)).WithFloatingIp
    parameters:
    - id: enabled
      type: System.Boolean
      description: enabled true if floating IP should be enabled
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}}.WithFloatingIp(System.Boolean)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>>.WithFloatingIp(Boolean)
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#Definition#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithCreateAndInboundNatRule}}#WithFloatingIpDisabled
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#Definition#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithCreateAndInboundNatRule}}#WithFloatingIpDisabled
  id: Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#Definition#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithCreateAndInboundNatRule}}#WithFloatingIpDisabled
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: IWithFloatingIp<IWithAttach<IWithCreateAndInboundNatRule>>.WithFloatingIpDisabled()
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>>.WithFloatingIpDisabled()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>>.WithFloatingIpDisabled
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
    startLine: 74
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nDisables floating IP support.\n"
  example: []
  syntax:
    content: IWithAttach<IWithCreateAndInboundNatRule> IWithFloatingIp<IWithAttach<IWithCreateAndInboundNatRule>>.WithFloatingIpDisabled()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>>.WithFloatingIpDisabled As IWithAttach(Of IWithCreateAndInboundNatRule) Implements IWithFloatingIp(Of IWithAttach(Of IWithCreateAndInboundNatRule)).WithFloatingIpDisabled
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}}.WithFloatingIpDisabled
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>>.WithFloatingIpDisabled()
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#Update#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Update#IUpdate}#WithFloatingIpEnabled
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#Update#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Update#IUpdate}#WithFloatingIpEnabled
  id: Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#Update#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Update#IUpdate}#WithFloatingIpEnabled
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: IWithFloatingIp<IUpdate>.WithFloatingIpEnabled()
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate>.WithFloatingIpEnabled()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate>.WithFloatingIpEnabled
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
    startLine: 82
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nEnables floating IP support.\n"
  example: []
  syntax:
    content: IUpdate IWithFloatingIp<IUpdate>.WithFloatingIpEnabled()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate>.WithFloatingIpEnabled As IUpdate Implements IWithFloatingIp(Of IUpdate).WithFloatingIpEnabled
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate}.WithFloatingIpEnabled
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate>.WithFloatingIpEnabled()
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#Update#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Update#IUpdate}#WithFloatingIp(System.Boolean)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#Update#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Update#IUpdate}#WithFloatingIp(System.Boolean)
  id: Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#Update#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Update#IUpdate}#WithFloatingIp(System.Boolean)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: IWithFloatingIp<IUpdate>.WithFloatingIp(Boolean)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate>.WithFloatingIp(System.Boolean)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate>.WithFloatingIp
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
    startLine: 91
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSets the floating IP enablement.\n"
  example: []
  syntax:
    content: IUpdate IWithFloatingIp<IUpdate>.WithFloatingIp(bool enabled)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate>.WithFloatingIp(enabled As Boolean) As IUpdate Implements IWithFloatingIp(Of IUpdate).WithFloatingIp
    parameters:
    - id: enabled
      type: System.Boolean
      description: enabled true if floating IP should be enabled
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate}.WithFloatingIp(System.Boolean)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate>.WithFloatingIp(Boolean)
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#Update#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Update#IUpdate}#WithFloatingIpDisabled
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#Update#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Update#IUpdate}#WithFloatingIpDisabled
  id: Microsoft#Azure#Management#Fluent#Network#HasFloatingIp#Update#IWithFloatingIp{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Update#IUpdate}#WithFloatingIpDisabled
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: IWithFloatingIp<IUpdate>.WithFloatingIpDisabled()
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate>.WithFloatingIpDisabled()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate>.WithFloatingIpDisabled
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
    startLine: 99
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nDisables floating IP support.\n"
  example: []
  syntax:
    content: IUpdate IWithFloatingIp<IUpdate>.WithFloatingIpDisabled()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate>.WithFloatingIpDisabled As IUpdate Implements IWithFloatingIp(Of IUpdate).WithFloatingIpDisabled
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate}.WithFloatingIpDisabled
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate>.WithFloatingIpDisabled()
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Update#IWithIdleTimeout#WithIdleTimeoutInMinutes(System.Int32)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Update#IWithIdleTimeout#WithIdleTimeoutInMinutes(System.Int32)
  id: Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Update#IWithIdleTimeout#WithIdleTimeoutInMinutes(System.Int32)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: IWithIdleTimeout.WithIdleTimeoutInMinutes(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IWithIdleTimeout.WithIdleTimeoutInMinutes(System.Int32)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IWithIdleTimeout.WithIdleTimeoutInMinutes
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
    startLine: 108
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSpecifies the idle connection timeout in minutes.\n"
  example: []
  syntax:
    content: IUpdate IWithIdleTimeout.WithIdleTimeoutInMinutes(int minutes)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IWithIdleTimeout.WithIdleTimeoutInMinutes(minutes As Integer) As IUpdate Implements IWithIdleTimeout.WithIdleTimeoutInMinutes
    parameters:
    - id: minutes
      type: System.Int32
      description: minutes a number of minutes
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate
      description: the next stage of the update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IWithIdleTimeout.WithIdleTimeoutInMinutes(System.Int32)
  name.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IWithIdleTimeout.WithIdleTimeoutInMinutes(Int32)
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#IHasFrontend#Frontend
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#IHasFrontend#Frontend
  id: Microsoft#Azure#Management#Fluent#Network#IHasFrontend#Frontend
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: IHasFrontend.Frontend()
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft.Azure.Management.Fluent.Network.IHasFrontend.Frontend()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.IHasFrontend.Frontend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
    startLine: 113
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: IFrontend IHasFrontend.Frontend()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.IHasFrontend.Frontend As IFrontend Implements IHasFrontend.Frontend
    return:
      type: Microsoft.Azure.Management.Fluent.Network.IFrontend
      description: the associated frontend
  implements:
  - Microsoft.Azure.Management.Fluent.Network.IHasFrontend.Frontend
  name.vb: Microsoft.Azure.Management.Fluent.Network.IHasFrontend.Frontend()
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#IHasProtocol{System#String}#Protocol
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#IHasProtocol{System#String}#Protocol
  id: Microsoft#Azure#Management#Fluent#Network#IHasProtocol{System#String}#Protocol
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: IHasProtocol<String>.Protocol()
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft.Azure.Management.Fluent.Network.IHasProtocol<System.String>.Protocol()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.IHasProtocol<System.String>.Protocol
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
    startLine: 118
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: string IHasProtocol<string>.Protocol()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.IHasProtocol<System.String>.Protocol As String Implements IHasProtocol(Of String).Protocol
    return:
      type: System.String
      description: the protocol
  implements:
  - Microsoft.Azure.Management.Fluent.Network.IHasProtocol{System.String}.Protocol
  name.vb: Microsoft.Azure.Management.Fluent.Network.IHasProtocol<System.String>.Protocol()
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#IHasBackendPort#BackendPort
  commentId: P:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#IHasBackendPort#BackendPort
  id: Microsoft#Azure#Management#Fluent#Network#IHasBackendPort#BackendPort
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: IHasBackendPort.BackendPort
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft.Azure.Management.Fluent.Network.IHasBackendPort.BackendPort
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.IHasBackendPort.BackendPort
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
    startLine: 123
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: int ? IHasBackendPort.BackendPort { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.Azure.Management.Fluent.Network.IHasBackendPort.BackendPort As Integer? Implements IHasBackendPort.BackendPort
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: the backend port number the network traffic is sent to
  implements:
  - Microsoft.Azure.Management.Fluent.Network.IHasBackendPort.BackendPort
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.Azure.Management.Fluent.Network.IHasBackendPort.BackendPort
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#InboundNatRule#UpdateDefinition#IWithFrontendPort{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}#WithFrontendPort(System.Int32)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#InboundNatRule#UpdateDefinition#IWithFrontendPort{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}#WithFrontendPort(System.Int32)
  id: Microsoft#Azure#Management#Fluent#Network#InboundNatRule#UpdateDefinition#IWithFrontendPort{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}#WithFrontendPort(System.Int32)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: IWithFrontendPort<IUpdate>.WithFrontendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithFrontendPort(System.Int32)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithFrontendPort
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
    startLine: 135
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSpecifies the frontend port.\n"
  example: []
  syntax:
    content: IWithAttach<IUpdate> IWithFrontendPort<IUpdate>.WithFrontendPort(int port)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithFrontendPort(port As Integer) As IWithAttach(Of IUpdate) Implements IWithFrontendPort(Of IUpdate).WithFrontendPort
    parameters:
    - id: port
      type: System.Int32
      description: port a port number
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}.WithFrontendPort(System.Int32)
  name.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithFrontendPort(Int32)
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Definition#IWithFrontendPort{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithCreateAndInboundNatRule}#WithFrontendPort(System.Int32)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Definition#IWithFrontendPort{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithCreateAndInboundNatRule}#WithFrontendPort(System.Int32)
  id: Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Definition#IWithFrontendPort{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithCreateAndInboundNatRule}#WithFrontendPort(System.Int32)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: IWithFrontendPort<IWithCreateAndInboundNatRule>.WithFrontendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>.WithFrontendPort(System.Int32)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>.WithFrontendPort
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
    startLine: 144
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSpecifies the frontend port.\n"
  example: []
  syntax:
    content: IWithAttach<IWithCreateAndInboundNatRule> IWithFrontendPort<IWithCreateAndInboundNatRule>.WithFrontendPort(int port)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>.WithFrontendPort(port As Integer) As IWithAttach(Of IWithCreateAndInboundNatRule) Implements IWithFrontendPort(Of IWithCreateAndInboundNatRule).WithFrontendPort
    parameters:
    - id: port
      type: System.Int32
      description: port a port number
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}.WithFrontendPort(System.Int32)
  name.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>.WithFrontendPort(Int32)
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#InboundNatRule#UpdateDefinition#IWithIdleTimeout{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}#WithIdleTimeoutInMinutes(System.Int32)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#InboundNatRule#UpdateDefinition#IWithIdleTimeout{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}#WithIdleTimeoutInMinutes(System.Int32)
  id: Microsoft#Azure#Management#Fluent#Network#InboundNatRule#UpdateDefinition#IWithIdleTimeout{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}#WithIdleTimeoutInMinutes(System.Int32)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: IWithIdleTimeout<IUpdate>.WithIdleTimeoutInMinutes(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithIdleTimeout<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithIdleTimeoutInMinutes(System.Int32)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithIdleTimeout<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithIdleTimeoutInMinutes
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
    startLine: 153
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSpecifies the idle connection timeout in minutes.\n"
  example: []
  syntax:
    content: IWithAttach<IUpdate> IWithIdleTimeout<IUpdate>.WithIdleTimeoutInMinutes(int minutes)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithIdleTimeout<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithIdleTimeoutInMinutes(minutes As Integer) As IWithAttach(Of IUpdate) Implements IWithIdleTimeout(Of IUpdate).WithIdleTimeoutInMinutes
    parameters:
    - id: minutes
      type: System.Int32
      description: minutes a number of minutes
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithIdleTimeout{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}.WithIdleTimeoutInMinutes(System.Int32)
  name.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithIdleTimeout<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithIdleTimeoutInMinutes(Int32)
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Definition#IWithIdleTimeout{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithCreateAndInboundNatRule}#WithIdleTimeoutInMinutes(System.Int32)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Definition#IWithIdleTimeout{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithCreateAndInboundNatRule}#WithIdleTimeoutInMinutes(System.Int32)
  id: Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Definition#IWithIdleTimeout{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithCreateAndInboundNatRule}#WithIdleTimeoutInMinutes(System.Int32)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: IWithIdleTimeout<IWithCreateAndInboundNatRule>.WithIdleTimeoutInMinutes(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>.WithIdleTimeoutInMinutes(System.Int32)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>.WithIdleTimeoutInMinutes
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
    startLine: 162
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSpecifies the idle connection timeout in minutes.\n"
  example: []
  syntax:
    content: IWithAttach<IWithCreateAndInboundNatRule> IWithIdleTimeout<IWithCreateAndInboundNatRule>.WithIdleTimeoutInMinutes(int minutes)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>.WithIdleTimeoutInMinutes(minutes As Integer) As IWithAttach(Of IWithCreateAndInboundNatRule) Implements IWithIdleTimeout(Of IWithCreateAndInboundNatRule).WithIdleTimeoutInMinutes
    parameters:
    - id: minutes
      type: System.Int32
      description: minutes a number of minutes
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}.WithIdleTimeoutInMinutes(System.Int32)
  name.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>.WithIdleTimeoutInMinutes(Int32)
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#IHasFloatingIp#FloatingIpEnabled
  commentId: P:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#IHasFloatingIp#FloatingIpEnabled
  id: Microsoft#Azure#Management#Fluent#Network#IHasFloatingIp#FloatingIpEnabled
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: IHasFloatingIp.FloatingIpEnabled
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft.Azure.Management.Fluent.Network.IHasFloatingIp.FloatingIpEnabled
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.IHasFloatingIp.FloatingIpEnabled
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
    startLine: 175
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: bool ? IHasFloatingIp.FloatingIpEnabled { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.Azure.Management.Fluent.Network.IHasFloatingIp.FloatingIpEnabled As Boolean? Implements IHasFloatingIp.FloatingIpEnabled
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
      description: the state of the floating IP enablement
  implements:
  - Microsoft.Azure.Management.Fluent.Network.IHasFloatingIp.FloatingIpEnabled
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.Azure.Management.Fluent.Network.IHasFloatingIp.FloatingIpEnabled
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasProtocol#UpdateDefinition#IWithProtocol{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#UpdateDefinition#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate},System#String}#WithProtocol(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasProtocol#UpdateDefinition#IWithProtocol{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#UpdateDefinition#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate},System#String}#WithProtocol(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#HasProtocol#UpdateDefinition#IWithProtocol{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#UpdateDefinition#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate},System#String}#WithProtocol(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: IWithProtocol<IWithFrontend<IUpdate>, String>.WithProtocol(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>, System.String>.WithProtocol(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>,System.String>.WithProtocol
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
    startLine: 195
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSpecifies the transport protocol.\n"
  example: []
  syntax:
    content: IWithFrontend<IUpdate> IWithProtocol<IWithFrontend<IUpdate>, string>.WithProtocol(string protocol)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>,System.String>.WithProtocol(protocol As String) As IWithFrontend(Of IUpdate) Implements IWithProtocol(Of IWithFrontend(Of IUpdate), String).WithProtocol
    parameters:
    - id: protocol
      type: System.String
      description: protocol a transport protocol
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate},System.String}.WithProtocol(System.String)
  fullName.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>,System.String>.WithProtocol(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>,System.String>.WithProtocol(String)
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasProtocol#Definition#IWithProtocol{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Definition#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithCreateAndInboundNatRule},System#String}#WithProtocol(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasProtocol#Definition#IWithProtocol{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Definition#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithCreateAndInboundNatRule},System#String}#WithProtocol(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#HasProtocol#Definition#IWithProtocol{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Definition#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithCreateAndInboundNatRule},System#String}#WithProtocol(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: IWithProtocol<IWithFrontend<IWithCreateAndInboundNatRule>, String>.WithProtocol(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>, System.String>.WithProtocol(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>,System.String>.WithProtocol
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
    startLine: 204
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSpecifies the transport protocol.\n"
  example: []
  syntax:
    content: IWithFrontend<IWithCreateAndInboundNatRule> IWithProtocol<IWithFrontend<IWithCreateAndInboundNatRule>, string>.WithProtocol(string protocol)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>,System.String>.WithProtocol(protocol As String) As IWithFrontend(Of IWithCreateAndInboundNatRule) Implements IWithProtocol(Of IWithFrontend(Of IWithCreateAndInboundNatRule), String).WithProtocol
    parameters:
    - id: protocol
      type: System.String
      description: protocol a transport protocol
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule},System.String}.WithProtocol(System.String)
  fullName.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>,System.String>.WithProtocol(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>,System.String>.WithProtocol(String)
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasProtocol#Update#IWithProtocol{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Update#IUpdate,System#String}#WithProtocol(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasProtocol#Update#IWithProtocol{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Update#IUpdate,System#String}#WithProtocol(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#HasProtocol#Update#IWithProtocol{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Update#IUpdate,System#String}#WithProtocol(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: IWithProtocol<IUpdate, String>.WithProtocol(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate, System.String>.WithProtocol(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate,System.String>.WithProtocol
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
    startLine: 213
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSpecifies the transport protocol.\n"
  example: []
  syntax:
    content: IUpdate IWithProtocol<IUpdate, string>.WithProtocol(string protocol)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate,System.String>.WithProtocol(protocol As String) As IUpdate Implements IWithProtocol(Of IUpdate, String).WithProtocol
    parameters:
    - id: protocol
      type: System.String
      description: protocol a transport protocol
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate
      description: the next stage of the update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate,System.String}.WithProtocol(System.String)
  fullName.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate,System.String>.WithProtocol(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate,System.String>.WithProtocol(String)
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFrontend#UpdateDefinition#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#UpdateDefinition#IWithFrontendPort{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithFrontend(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFrontend#UpdateDefinition#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#UpdateDefinition#IWithFrontendPort{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithFrontend(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#HasFrontend#UpdateDefinition#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#UpdateDefinition#IWithFrontendPort{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithFrontend(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: IWithFrontend<IWithFrontendPort<IUpdate>>.WithFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFrontend(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFrontend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
    startLine: 222
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSpecifies the frontend to associate.\n"
  example: []
  syntax:
    content: IWithFrontendPort<IUpdate> IWithFrontend<IWithFrontendPort<IUpdate>>.WithFrontend(string frontendName)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFrontend(frontendName As String) As IWithFrontendPort(Of IUpdate) Implements IWithFrontend(Of IWithFrontendPort(Of IUpdate)).WithFrontend
    parameters:
    - id: frontendName
      type: System.String
      description: frontendName an existing frontend name on this load balancer
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}.WithFrontend(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFrontend(String)
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFrontend#Definition#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Definition#IWithFrontendPort{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithCreateAndInboundNatRule}}#WithFrontend(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFrontend#Definition#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Definition#IWithFrontendPort{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithCreateAndInboundNatRule}}#WithFrontend(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#HasFrontend#Definition#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Definition#IWithFrontendPort{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithCreateAndInboundNatRule}}#WithFrontend(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: IWithFrontend<IWithFrontendPort<IWithCreateAndInboundNatRule>>.WithFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>>.WithFrontend(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>>.WithFrontend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
    startLine: 231
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSpecifies the frontend to associate.\n"
  example: []
  syntax:
    content: IWithFrontendPort<IWithCreateAndInboundNatRule> IWithFrontend<IWithFrontendPort<IWithCreateAndInboundNatRule>>.WithFrontend(string frontendName)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>>.WithFrontend(frontendName As String) As IWithFrontendPort(Of IWithCreateAndInboundNatRule) Implements IWithFrontend(Of IWithFrontendPort(Of IWithCreateAndInboundNatRule)).WithFrontend
    parameters:
    - id: frontendName
      type: System.String
      description: frontendName an existing frontend name on this load balancer
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}}.WithFrontend(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>>.WithFrontend(String)
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFrontend#Update#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Update#IUpdate}#WithFrontend(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasFrontend#Update#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Update#IUpdate}#WithFrontend(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#HasFrontend#Update#IWithFrontend{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Update#IUpdate}#WithFrontend(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: IWithFrontend<IUpdate>.WithFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate>.WithFrontend(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate>.WithFrontend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
    startLine: 240
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSpecifies the frontend.\n"
  example: []
  syntax:
    content: IUpdate IWithFrontend<IUpdate>.WithFrontend(string frontendName)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate>.WithFrontend(frontendName As String) As IUpdate Implements IWithFrontend(Of IUpdate).WithFrontend
    parameters:
    - id: frontendName
      type: System.String
      description: frontendName an existing frontend name from this load balancer
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate
      description: the next stage of the update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate}.WithFrontend(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate>.WithFrontend(String)
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Update#IWithFrontendPort#WithFrontendPort(System.Int32)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Update#IWithFrontendPort#WithFrontendPort(System.Int32)
  id: Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Update#IWithFrontendPort#WithFrontendPort(System.Int32)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: IWithFrontendPort.WithFrontendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IWithFrontendPort.WithFrontendPort(System.Int32)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IWithFrontendPort.WithFrontendPort
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
    startLine: 249
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSpecifies the frontend port.\n"
  example: []
  syntax:
    content: IUpdate IWithFrontendPort.WithFrontendPort(int port)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IWithFrontendPort.WithFrontendPort(port As Integer) As IUpdate Implements IWithFrontendPort.WithFrontendPort
    parameters:
    - id: port
      type: System.Int32
      description: port a port number
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate
      description: the next stage of the update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IWithFrontendPort.WithFrontendPort(System.Int32)
  name.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IWithFrontendPort.WithFrontendPort(Int32)
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasBackendPort#UpdateDefinition#IWithBackendPort{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithBackendPort(System.Int32)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasBackendPort#UpdateDefinition#IWithBackendPort{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithBackendPort(System.Int32)
  id: Microsoft#Azure#Management#Fluent#Network#HasBackendPort#UpdateDefinition#IWithBackendPort{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Update#IUpdate}}#WithBackendPort(System.Int32)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: IWithBackendPort<IWithAttach<IUpdate>>.WithBackendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithBackendPort(System.Int32)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithBackendPort
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
    startLine: 260
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IWithAttach<IUpdate> IWithBackendPort<IWithAttach<IUpdate>>.WithBackendPort(int port)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithBackendPort(port As Integer) As IWithAttach(Of IUpdate) Implements IWithBackendPort(Of IWithAttach(Of IUpdate)).WithBackendPort
    parameters:
    - id: port
      type: System.Int32
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}.WithBackendPort(System.Int32)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithBackendPort(Int32)
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasBackendPort#Definition#IWithBackendPort{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithCreateAndInboundNatRule}}#WithBackendPort(System.Int32)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasBackendPort#Definition#IWithBackendPort{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithCreateAndInboundNatRule}}#WithBackendPort(System.Int32)
  id: Microsoft#Azure#Management#Fluent#Network#HasBackendPort#Definition#IWithBackendPort{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#LoadBalancer#Definition#IWithCreateAndInboundNatRule}}#WithBackendPort(System.Int32)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: IWithBackendPort<IWithAttach<IWithCreateAndInboundNatRule>>.WithBackendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>>.WithBackendPort(System.Int32)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>>.WithBackendPort
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
    startLine: 271
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IWithAttach<IWithCreateAndInboundNatRule> IWithBackendPort<IWithAttach<IWithCreateAndInboundNatRule>>.WithBackendPort(int port)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>>.WithBackendPort(port As Integer) As IWithAttach(Of IWithCreateAndInboundNatRule) Implements IWithBackendPort(Of IWithAttach(Of IWithCreateAndInboundNatRule)).WithBackendPort
    parameters:
    - id: port
      type: System.Int32
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}}.WithBackendPort(System.Int32)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>>.WithBackendPort(Int32)
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasBackendPort#Update#IWithBackendPort{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Update#IUpdate}#WithBackendPort(System.Int32)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#HasBackendPort#Update#IWithBackendPort{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Update#IUpdate}#WithBackendPort(System.Int32)
  id: Microsoft#Azure#Management#Fluent#Network#HasBackendPort#Update#IWithBackendPort{Microsoft#Azure#Management#Fluent#Network#InboundNatRule#Update#IUpdate}#WithBackendPort(System.Int32)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: IWithBackendPort<IUpdate>.WithBackendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate>.WithBackendPort(System.Int32)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate>.WithBackendPort
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
    startLine: 280
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSpecifies the backend port.\n"
  example: []
  syntax:
    content: IUpdate IWithBackendPort<IUpdate>.WithBackendPort(int port)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate>.WithBackendPort(port As Integer) As IUpdate Implements IWithBackendPort(Of IUpdate).WithBackendPort
    parameters:
    - id: port
      type: System.Int32
      description: port a port number
    return:
      type: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate
      description: the next stage of the update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate}.WithBackendPort(System.Int32)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate>.WithBackendPort(Int32)
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#IInboundNatRule#BackendNetworkInterfaceId
  commentId: P:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#IInboundNatRule#BackendNetworkInterfaceId
  id: Microsoft#Azure#Management#Fluent#Network#IInboundNatRule#BackendNetworkInterfaceId
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: IInboundNatRule.BackendNetworkInterfaceId
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft.Azure.Management.Fluent.Network.IInboundNatRule.BackendNetworkInterfaceId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule.BackendNetworkInterfaceId
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
    startLine: 285
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: string IInboundNatRule.BackendNetworkInterfaceId { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.Azure.Management.Fluent.Network.IInboundNatRule.BackendNetworkInterfaceId As String Implements IInboundNatRule.BackendNetworkInterfaceId
    parameters: []
    return:
      type: System.String
      description: the resource ID of the network interface assigned as the backend of this inbound NAT rule
  implements:
  - Microsoft.Azure.Management.Fluent.Network.IInboundNatRule.BackendNetworkInterfaceId
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule.BackendNetworkInterfaceId
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#IInboundNatRule#FrontendPort
  commentId: P:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#IInboundNatRule#FrontendPort
  id: Microsoft#Azure#Management#Fluent#Network#IInboundNatRule#FrontendPort
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: IInboundNatRule.FrontendPort
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft.Azure.Management.Fluent.Network.IInboundNatRule.FrontendPort
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule.FrontendPort
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
    startLine: 293
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: int ? IInboundNatRule.FrontendPort { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.Azure.Management.Fluent.Network.IInboundNatRule.FrontendPort As Integer? Implements IInboundNatRule.FrontendPort
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: the frontend port number associated with this NAT rule
  implements:
  - Microsoft.Azure.Management.Fluent.Network.IInboundNatRule.FrontendPort
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule.FrontendPort
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#IInboundNatRule#IdleTimeoutInMinutes
  commentId: P:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#IInboundNatRule#IdleTimeoutInMinutes
  id: Microsoft#Azure#Management#Fluent#Network#IInboundNatRule#IdleTimeoutInMinutes
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: IInboundNatRule.IdleTimeoutInMinutes
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft.Azure.Management.Fluent.Network.IInboundNatRule.IdleTimeoutInMinutes
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule.IdleTimeoutInMinutes
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
    startLine: 301
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: int ? IInboundNatRule.IdleTimeoutInMinutes { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.Azure.Management.Fluent.Network.IInboundNatRule.IdleTimeoutInMinutes As Integer? Implements IInboundNatRule.IdleTimeoutInMinutes
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: the number of minutes before an idle connection is closed
  implements:
  - Microsoft.Azure.Management.Fluent.Network.IInboundNatRule.IdleTimeoutInMinutes
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule.IdleTimeoutInMinutes
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#IInboundNatRule#BackendNicIpConfigurationName
  commentId: P:Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft#Azure#Management#Fluent#Network#IInboundNatRule#BackendNicIpConfigurationName
  id: Microsoft#Azure#Management#Fluent#Network#IInboundNatRule#BackendNicIpConfigurationName
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  langs:
  - csharp
  - vb
  name: IInboundNatRule.BackendNicIpConfigurationName
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl.Microsoft.Azure.Management.Fluent.Network.IInboundNatRule.BackendNicIpConfigurationName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule.BackendNicIpConfigurationName
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/InboundNatRuleImpl.cs
    startLine: 309
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: string IInboundNatRule.BackendNicIpConfigurationName { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.Azure.Management.Fluent.Network.IInboundNatRule.BackendNicIpConfigurationName As String Implements IInboundNatRule.BackendNicIpConfigurationName
    parameters: []
    return:
      type: System.String
      description: the name of the IP configuration within the network interface associated with this NAT rule
  implements:
  - Microsoft.Azure.Management.Fluent.Network.IInboundNatRule.BackendNicIpConfigurationName
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule.BackendNicIpConfigurationName
references:
- uid: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network
  fullName: Microsoft.Azure.Management.Fluent.Network
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: IInboundNatRule
  fullName: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule
- uid: Microsoft.Azure.Management.Fluent.Network.IHasFrontend
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: IHasFrontend
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasFrontend
- uid: Microsoft.Azure.Management.Fluent.Network.IHasBackendPort
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: IHasBackendPort
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasBackendPort
- uid: Microsoft.Azure.Management.Fluent.Network.IHasProtocol{System.String}
  parent: Microsoft.Azure.Management.Fluent.Network
  definition: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1
  name: IHasProtocol<String>
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasProtocol<System.String>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.IHasProtocol(Of System.String)
  name.vb: IHasProtocol(Of String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1
    name: IHasProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasProtocol
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1
    name: IHasProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasProtocol
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.IHasFloatingIp
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: IHasFloatingIp
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasFloatingIp
- uid: IWrapper{Microsoft.Azure.Management.Network.Models.InboundNatRuleInner}
  definition: IWrapper`1
  name: IWrapper<InboundNatRuleInner>
  fullName: IWrapper<Microsoft.Azure.Management.Network.Models.InboundNatRuleInner>
  fullname.vb: IWrapper(Of Microsoft.Azure.Management.Network.Models.InboundNatRuleInner)
  name.vb: IWrapper(Of InboundNatRuleInner)
  spec.csharp:
  - uid: IWrapper`1
    name: IWrapper
    fullName: IWrapper
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Network.Models.InboundNatRuleInner
    name: InboundNatRuleInner
    fullName: Microsoft.Azure.Management.Network.Models.InboundNatRuleInner
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IWrapper`1
    name: IWrapper
    fullName: IWrapper
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Network.Models.InboundNatRuleInner
    name: InboundNatRuleInner
    fullName: Microsoft.Azure.Management.Network.Models.InboundNatRuleInner
  - name: )
    fullName: )
- uid: IChildResource{Microsoft.Azure.Management.Fluent.Network.ILoadBalancer}
  definition: IChildResource`1
  name: IChildResource<ILoadBalancer>
  fullName: IChildResource<Microsoft.Azure.Management.Fluent.Network.ILoadBalancer>
  fullname.vb: IChildResource(Of Microsoft.Azure.Management.Fluent.Network.ILoadBalancer)
  name.vb: IChildResource(Of ILoadBalancer)
  spec.csharp:
  - uid: IChildResource`1
    name: IChildResource
    fullName: IChildResource
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    name: ILoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IChildResource`1
    name: IChildResource
    fullName: IChildResource
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    name: ILoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IDefinition{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IDefinition`1
  name: IDefinition<IWithCreateAndInboundNatRule>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IDefinition<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IDefinition(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule)
  name.vb: IDefinition(Of IWithCreateAndInboundNatRule)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IDefinition`1
    name: IDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IDefinition
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
    name: IWithCreateAndInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IDefinition`1
    name: IDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IDefinition
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
    name: IWithCreateAndInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IBlank`1
  name: IBlank<IWithCreateAndInboundNatRule>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IBlank<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IBlank(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule)
  name.vb: IBlank(Of IWithCreateAndInboundNatRule)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IBlank
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
    name: IWithCreateAndInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
    name: IWithCreateAndInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithProtocol`1
  name: IWithProtocol<IWithCreateAndInboundNatRule>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithProtocol(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule)
  name.vb: IWithProtocol(Of IWithCreateAndInboundNatRule)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithProtocol`1
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithProtocol
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
    name: IWithCreateAndInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithProtocol`1
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithProtocol
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
    name: IWithCreateAndInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule},System.String}
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2
  name: IWithProtocol<IWithFrontend<IWithCreateAndInboundNatRule>, String>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>, System.String>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule), System.String)
  name.vb: IWithProtocol(Of IWithFrontend(Of IWithCreateAndInboundNatRule), String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
    name: IWithCreateAndInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
    name: IWithCreateAndInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend`1
  name: IWithFrontend<IWithCreateAndInboundNatRule>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule)
  name.vb: IWithFrontend(Of IWithCreateAndInboundNatRule)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
    name: IWithCreateAndInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
    name: IWithCreateAndInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}}
  parent: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1
  name: IWithFrontend<IWithFrontendPort<IWithCreateAndInboundNatRule>>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule))
  name.vb: IWithFrontend(Of IWithFrontendPort(Of IWithCreateAndInboundNatRule))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort`1
    name: IWithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
    name: IWithCreateAndInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort`1
    name: IWithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
    name: IWithCreateAndInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort`1
  name: IWithFrontendPort<IWithCreateAndInboundNatRule>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule)
  name.vb: IWithFrontendPort(Of IWithCreateAndInboundNatRule)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort`1
    name: IWithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
    name: IWithCreateAndInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort`1
    name: IWithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
    name: IWithCreateAndInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach`1
  name: IWithAttach<IWithCreateAndInboundNatRule>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule)
  name.vb: IWithAttach(Of IWithCreateAndInboundNatRule)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
    name: IWithCreateAndInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
    name: IWithCreateAndInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
  - name: )
    fullName: )
- uid: IInDefinition{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}
  definition: IInDefinition`1
  name: IInDefinition<IWithCreateAndInboundNatRule>
  fullName: IInDefinition<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>
  fullname.vb: IInDefinition(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule)
  name.vb: IInDefinition(Of IWithCreateAndInboundNatRule)
  spec.csharp:
  - uid: IInDefinition`1
    name: IInDefinition
    fullName: IInDefinition
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
    name: IWithCreateAndInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IInDefinition`1
    name: IInDefinition
    fullName: IInDefinition
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
    name: IWithCreateAndInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithBackendPort`1
  name: IWithBackendPort<IWithCreateAndInboundNatRule>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithBackendPort(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule)
  name.vb: IWithBackendPort(Of IWithCreateAndInboundNatRule)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithBackendPort
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
    name: IWithCreateAndInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithBackendPort
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
    name: IWithCreateAndInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}}
  parent: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1
  name: IWithBackendPort<IWithAttach<IWithCreateAndInboundNatRule>>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule))
  name.vb: IWithBackendPort(Of IWithAttach(Of IWithCreateAndInboundNatRule))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
    name: IWithCreateAndInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
    name: IWithCreateAndInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFloatingIp`1
  name: IWithFloatingIp<IWithCreateAndInboundNatRule>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule)
  name.vb: IWithFloatingIp(Of IWithCreateAndInboundNatRule)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFloatingIp`1
    name: IWithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFloatingIp
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
    name: IWithCreateAndInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFloatingIp`1
    name: IWithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFloatingIp
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
    name: IWithCreateAndInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}}
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1
  name: IWithFloatingIp<IWithAttach<IWithCreateAndInboundNatRule>>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule))
  name.vb: IWithFloatingIp(Of IWithAttach(Of IWithCreateAndInboundNatRule))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1
    name: IWithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
    name: IWithCreateAndInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1
    name: IWithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
    name: IWithCreateAndInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout`1
  name: IWithIdleTimeout<IWithCreateAndInboundNatRule>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule)
  name.vb: IWithIdleTimeout(Of IWithCreateAndInboundNatRule)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout`1
    name: IWithIdleTimeout
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
    name: IWithCreateAndInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout`1
    name: IWithIdleTimeout
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
    name: IWithCreateAndInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IUpdateDefinition{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IUpdateDefinition`1
  name: IUpdateDefinition<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IUpdateDefinition<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IUpdateDefinition(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IUpdateDefinition(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IUpdateDefinition`1
    name: IUpdateDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IUpdateDefinition
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IUpdateDefinition`1
    name: IUpdateDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IUpdateDefinition
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IBlank{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IBlank`1
  name: IBlank<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IBlank<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IBlank(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IBlank(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IBlank
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithProtocol`1
  name: IWithProtocol<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithProtocol(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IWithProtocol(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithProtocol`1
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithProtocol
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithProtocol`1
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithProtocol
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate},System.String}
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol`2
  name: IWithProtocol<IWithFrontend<IUpdate>, String>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>, System.String>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate), System.String)
  name.vb: IWithProtocol(Of IWithFrontend(Of IUpdate), String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontend
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontend
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontend`1
  name: IWithFrontend<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IWithFrontend(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontend
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontend
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}
  parent: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend`1
  name: IWithFrontend<IWithFrontendPort<IUpdate>>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate))
  name.vb: IWithFrontend(Of IWithFrontendPort(Of IUpdate))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort`1
    name: IWithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort`1
    name: IWithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort`1
  name: IWithFrontendPort<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IWithFrontendPort(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort`1
    name: IWithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort`1
    name: IWithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach`1
  name: IWithAttach<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IWithAttach(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: IInUpdate{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  definition: IInUpdate`1
  name: IInUpdate<IUpdate>
  fullName: IInUpdate<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: IInUpdate(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IInUpdate(Of IUpdate)
  spec.csharp:
  - uid: IInUpdate`1
    name: IInUpdate
    fullName: IInUpdate
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IInUpdate`1
    name: IInUpdate
    fullName: IInUpdate
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithBackendPort`1
  name: IWithBackendPort<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithBackendPort(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IWithBackendPort(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithBackendPort
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithBackendPort
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}
  parent: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort`1
  name: IWithBackendPort<IWithAttach<IUpdate>>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate))
  name.vb: IWithBackendPort(Of IWithAttach(Of IUpdate))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFloatingIp`1
  name: IWithFloatingIp<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IWithFloatingIp(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFloatingIp`1
    name: IWithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFloatingIp
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFloatingIp`1
    name: IWithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFloatingIp
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1
  name: IWithFloatingIp<IWithAttach<IUpdate>>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate))
  name.vb: IWithFloatingIp(Of IWithAttach(Of IUpdate))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1
    name: IWithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1
    name: IWithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithIdleTimeout{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithIdleTimeout`1
  name: IWithIdleTimeout<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithIdleTimeout<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithIdleTimeout(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: IWithIdleTimeout(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithIdleTimeout`1
    name: IWithIdleTimeout
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithIdleTimeout
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithIdleTimeout`1
    name: IWithIdleTimeout
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithIdleTimeout
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update
  isExternal: false
  name: IUpdate
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate
- uid: ISettable{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  definition: ISettable`1
  name: ISettable<IUpdate>
  fullName: ISettable<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>
  fullname.vb: ISettable(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)
  name.vb: ISettable(Of IUpdate)
  spec.csharp:
  - uid: ISettable`1
    name: ISettable
    fullName: ISettable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: ISettable`1
    name: ISettable
    fullName: ISettable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IWithBackendPort
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update
  isExternal: false
  name: IWithBackendPort
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IWithBackendPort
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update
  definition: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1
  name: IWithBackendPort<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate)
  name.vb: IWithBackendPort(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IWithFloatingIp
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update
  isExternal: false
  name: IWithFloatingIp
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IWithFloatingIp
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update
  definition: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1
  name: IWithFloatingIp<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate)
  name.vb: IWithFloatingIp(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1
    name: IWithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1
    name: IWithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IWithFrontend
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update
  isExternal: false
  name: IWithFrontend
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IWithFrontend
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update
  definition: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1
  name: IWithFrontend<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate)
  name.vb: IWithFrontend(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IWithFrontendPort
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update
  isExternal: false
  name: IWithFrontendPort
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IWithFrontendPort
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IWithIdleTimeout
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update
  isExternal: false
  name: IWithIdleTimeout
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IWithIdleTimeout
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IWithProtocol
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update
  isExternal: false
  name: IWithProtocol
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IWithProtocol
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate,System.String}
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update
  definition: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2
  name: IWithProtocol<IUpdate, String>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate, System.String>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate, System.String)
  name.vb: IWithProtocol(Of IUpdate, String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: IHasProtocol<ProtocolT>
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasProtocol<ProtocolT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.IHasProtocol(Of ProtocolT)
  name.vb: IHasProtocol(Of ProtocolT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1
    name: IHasProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasProtocol
  - name: <
    fullName: <
  - name: ProtocolT
    fullName: ProtocolT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1
    name: IHasProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasProtocol
  - name: '(Of '
    fullName: '(Of '
  - name: ProtocolT
    fullName: ProtocolT
  - name: )
    fullName: )
- uid: IWrapper`1
  isExternal: true
  name: IWrapper<>
  fullName: IWrapper<>
  fullname.vb: IWrapper(Of )
  name.vb: IWrapper(Of )
  spec.csharp:
  - uid: IWrapper`1
    name: IWrapper
    fullName: IWrapper
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IWrapper`1
    name: IWrapper
    fullName: IWrapper
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: IChildResource`1
  isExternal: true
  name: IChildResource<>
  fullName: IChildResource<>
  fullname.vb: IChildResource(Of )
  name.vb: IChildResource(Of )
  spec.csharp:
  - uid: IChildResource`1
    name: IChildResource
    fullName: IChildResource
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IChildResource`1
    name: IChildResource
    fullName: IChildResource
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IDefinition`1
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition
  isExternal: false
  name: IDefinition<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IDefinition<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IDefinition(Of ParentT)
  name.vb: IDefinition(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IDefinition`1
    name: IDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IDefinition
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IDefinition`1
    name: IDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IDefinition
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IBlank`1
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition
  isExternal: false
  name: IBlank<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IBlank<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IBlank(Of ParentT)
  name.vb: IBlank(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IBlank
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithProtocol`1
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition
  isExternal: false
  name: IWithProtocol<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithProtocol<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithProtocol(Of ParentT)
  name.vb: IWithProtocol(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithProtocol`1
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithProtocol
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithProtocol`1
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithProtocol
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition
  isExternal: false
  name: IWithProtocol<ReturnT, ProtocolT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<ReturnT, ProtocolT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol(Of ReturnT, ProtocolT)
  name.vb: IWithProtocol(Of ReturnT, ProtocolT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: ', '
    fullName: ', '
  - name: ProtocolT
    fullName: ProtocolT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: ', '
    fullName: ', '
  - name: ProtocolT
    fullName: ProtocolT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend`1
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition
  isExternal: false
  name: IWithFrontend<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend(Of ParentT)
  name.vb: IWithFrontend(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition
  isExternal: false
  name: IWithFrontend<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend(Of ReturnT)
  name.vb: IWithFrontend(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort`1
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition
  isExternal: false
  name: IWithFrontendPort<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort(Of ParentT)
  name.vb: IWithFrontendPort(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort`1
    name: IWithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort`1
    name: IWithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach`1
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition
  isExternal: false
  name: IWithAttach<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach(Of ParentT)
  name.vb: IWithAttach(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: IInDefinition`1
  isExternal: true
  name: IInDefinition<>
  fullName: IInDefinition<>
  fullname.vb: IInDefinition(Of )
  name.vb: IInDefinition(Of )
  spec.csharp:
  - uid: IInDefinition`1
    name: IInDefinition
    fullName: IInDefinition
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IInDefinition`1
    name: IInDefinition
    fullName: IInDefinition
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithBackendPort`1
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition
  isExternal: false
  name: IWithBackendPort<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithBackendPort<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithBackendPort(Of ParentT)
  name.vb: IWithBackendPort(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithBackendPort
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithBackendPort
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition
  isExternal: false
  name: IWithBackendPort<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort(Of ReturnT)
  name.vb: IWithBackendPort(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFloatingIp`1
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition
  isExternal: false
  name: IWithFloatingIp<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFloatingIp<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFloatingIp(Of ParentT)
  name.vb: IWithFloatingIp(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFloatingIp`1
    name: IWithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFloatingIp
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFloatingIp`1
    name: IWithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFloatingIp
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition
  isExternal: false
  name: IWithFloatingIp<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp(Of ReturnT)
  name.vb: IWithFloatingIp(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1
    name: IWithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1
    name: IWithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout`1
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition
  isExternal: false
  name: IWithIdleTimeout<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout(Of ParentT)
  name.vb: IWithIdleTimeout(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout`1
    name: IWithIdleTimeout
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout`1
    name: IWithIdleTimeout
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IUpdateDefinition`1
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition
  isExternal: false
  name: IUpdateDefinition<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IUpdateDefinition<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IUpdateDefinition(Of ParentT)
  name.vb: IUpdateDefinition(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IUpdateDefinition`1
    name: IUpdateDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IUpdateDefinition
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IUpdateDefinition`1
    name: IUpdateDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IUpdateDefinition
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IBlank`1
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition
  isExternal: false
  name: IBlank<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IBlank<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IBlank(Of ParentT)
  name.vb: IBlank(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IBlank
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithProtocol`1
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition
  isExternal: false
  name: IWithProtocol<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithProtocol<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithProtocol(Of ParentT)
  name.vb: IWithProtocol(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithProtocol`1
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithProtocol
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithProtocol`1
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithProtocol
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol`2
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition
  isExternal: false
  name: IWithProtocol<ReturnT, ProtocolT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol<ReturnT, ProtocolT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol(Of ReturnT, ProtocolT)
  name.vb: IWithProtocol(Of ReturnT, ProtocolT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: ', '
    fullName: ', '
  - name: ProtocolT
    fullName: ProtocolT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: ', '
    fullName: ', '
  - name: ProtocolT
    fullName: ProtocolT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontend`1
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition
  isExternal: false
  name: IWithFrontend<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontend<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontend(Of ParentT)
  name.vb: IWithFrontend(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontend
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontend
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition
  isExternal: false
  name: IWithFrontend<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend(Of ReturnT)
  name.vb: IWithFrontend(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort`1
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition
  isExternal: false
  name: IWithFrontendPort<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort(Of ParentT)
  name.vb: IWithFrontendPort(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort`1
    name: IWithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort`1
    name: IWithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach`1
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition
  isExternal: false
  name: IWithAttach<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach(Of ParentT)
  name.vb: IWithAttach(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: IInUpdate`1
  isExternal: true
  name: IInUpdate<>
  fullName: IInUpdate<>
  fullname.vb: IInUpdate(Of )
  name.vb: IInUpdate(Of )
  spec.csharp:
  - uid: IInUpdate`1
    name: IInUpdate
    fullName: IInUpdate
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IInUpdate`1
    name: IInUpdate
    fullName: IInUpdate
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithBackendPort`1
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition
  isExternal: false
  name: IWithBackendPort<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithBackendPort<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithBackendPort(Of ParentT)
  name.vb: IWithBackendPort(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithBackendPort
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithBackendPort
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition
  isExternal: false
  name: IWithBackendPort<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort(Of ReturnT)
  name.vb: IWithBackendPort(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFloatingIp`1
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition
  isExternal: false
  name: IWithFloatingIp<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFloatingIp<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFloatingIp(Of ParentT)
  name.vb: IWithFloatingIp(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFloatingIp`1
    name: IWithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFloatingIp
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFloatingIp`1
    name: IWithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFloatingIp
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition
  isExternal: false
  name: IWithFloatingIp<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp(Of ReturnT)
  name.vb: IWithFloatingIp(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1
    name: IWithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1
    name: IWithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithIdleTimeout`1
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition
  isExternal: false
  name: IWithIdleTimeout<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithIdleTimeout<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithIdleTimeout(Of ParentT)
  name.vb: IWithIdleTimeout(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithIdleTimeout`1
    name: IWithIdleTimeout
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithIdleTimeout
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithIdleTimeout`1
    name: IWithIdleTimeout
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithIdleTimeout
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update
- uid: ISettable`1
  isExternal: true
  name: ISettable<>
  fullName: ISettable<>
  fullname.vb: ISettable(Of )
  name.vb: ISettable(Of )
  spec.csharp:
  - uid: ISettable`1
    name: ISettable
    fullName: ISettable
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: ISettable`1
    name: ISettable
    fullName: ISettable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update
  isExternal: false
  name: IWithBackendPort<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort(Of ReturnT)
  name.vb: IWithBackendPort(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1
    name: IWithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update
  isExternal: false
  name: IWithFloatingIp<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp(Of ReturnT)
  name.vb: IWithFloatingIp(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1
    name: IWithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1
    name: IWithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update
  isExternal: false
  name: IWithFrontend<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend(Of ReturnT)
  name.vb: IWithFrontend(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update
  isExternal: false
  name: IWithProtocol<ReturnT, ProtocolT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol<ReturnT, ProtocolT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol(Of ReturnT, ProtocolT)
  name.vb: IWithProtocol(Of ReturnT, ProtocolT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: ', '
    fullName: ', '
  - name: ProtocolT
    fullName: ProtocolT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: ', '
    fullName: ', '
  - name: ProtocolT
    fullName: ProtocolT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: Microsoft.Azure.Management.Fluent.Network.IFrontend
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: IFrontend
  fullName: Microsoft.Azure.Management.Fluent.Network.IFrontend
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: InboundNatRuleImpl
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRuleImpl
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: LoadBalancerImpl
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancerImpl
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}.WithFloatingIpEnabled
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1.WithFloatingIpEnabled
  name: WithFloatingIpEnabled()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFloatingIpEnabled()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)).WithFloatingIpEnabled()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1.WithFloatingIpEnabled
    name: WithFloatingIpEnabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFloatingIpEnabled
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1.WithFloatingIpEnabled
    name: WithFloatingIpEnabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)).WithFloatingIpEnabled
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1.WithFloatingIpEnabled
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1
  isExternal: false
  name: WithFloatingIpEnabled()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<ReturnT>.WithFloatingIpEnabled()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp(Of ReturnT).WithFloatingIpEnabled()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1.WithFloatingIpEnabled
    name: WithFloatingIpEnabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<ReturnT>.WithFloatingIpEnabled
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1.WithFloatingIpEnabled
    name: WithFloatingIpEnabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp(Of ReturnT).WithFloatingIpEnabled
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}.WithFloatingIp(System.Boolean)
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1.WithFloatingIp(System.Boolean)
  name: WithFloatingIp(Boolean)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFloatingIp(System.Boolean)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)).WithFloatingIp(System.Boolean)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1.WithFloatingIp(System.Boolean)
    name: WithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFloatingIp
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1.WithFloatingIp(System.Boolean)
    name: WithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)).WithFloatingIp
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1.WithFloatingIp(System.Boolean)
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1
  isExternal: true
  name: WithFloatingIp(Boolean)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<ReturnT>.WithFloatingIp(System.Boolean)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp(Of ReturnT).WithFloatingIp(System.Boolean)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1.WithFloatingIp(System.Boolean)
    name: WithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<ReturnT>.WithFloatingIp
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1.WithFloatingIp(System.Boolean)
    name: WithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp(Of ReturnT).WithFloatingIp
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}.WithFloatingIpDisabled
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1.WithFloatingIpDisabled
  name: WithFloatingIpDisabled()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFloatingIpDisabled()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)).WithFloatingIpDisabled()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1.WithFloatingIpDisabled
    name: WithFloatingIpDisabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFloatingIpDisabled
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1.WithFloatingIpDisabled
    name: WithFloatingIpDisabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)).WithFloatingIpDisabled
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1.WithFloatingIpDisabled
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1
  isExternal: false
  name: WithFloatingIpDisabled()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<ReturnT>.WithFloatingIpDisabled()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp(Of ReturnT).WithFloatingIpDisabled()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1.WithFloatingIpDisabled
    name: WithFloatingIpDisabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp<ReturnT>.WithFloatingIpDisabled
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp`1.WithFloatingIpDisabled
    name: WithFloatingIpDisabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.UpdateDefinition.IWithFloatingIp(Of ReturnT).WithFloatingIpDisabled
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}}.WithFloatingIpEnabled
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIpEnabled
  name: WithFloatingIpEnabled()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>>.WithFloatingIpEnabled()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule)).WithFloatingIpEnabled()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIpEnabled
    name: WithFloatingIpEnabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>>.WithFloatingIpEnabled
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIpEnabled
    name: WithFloatingIpEnabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule)).WithFloatingIpEnabled
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIpEnabled
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1
  isExternal: false
  name: WithFloatingIpEnabled()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<ReturnT>.WithFloatingIpEnabled()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp(Of ReturnT).WithFloatingIpEnabled()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIpEnabled
    name: WithFloatingIpEnabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<ReturnT>.WithFloatingIpEnabled
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIpEnabled
    name: WithFloatingIpEnabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp(Of ReturnT).WithFloatingIpEnabled
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}}.WithFloatingIp(System.Boolean)
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIp(System.Boolean)
  name: WithFloatingIp(Boolean)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>>.WithFloatingIp(System.Boolean)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule)).WithFloatingIp(System.Boolean)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIp(System.Boolean)
    name: WithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>>.WithFloatingIp
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIp(System.Boolean)
    name: WithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule)).WithFloatingIp
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIp(System.Boolean)
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1
  isExternal: true
  name: WithFloatingIp(Boolean)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<ReturnT>.WithFloatingIp(System.Boolean)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp(Of ReturnT).WithFloatingIp(System.Boolean)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIp(System.Boolean)
    name: WithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<ReturnT>.WithFloatingIp
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIp(System.Boolean)
    name: WithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp(Of ReturnT).WithFloatingIp
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}}.WithFloatingIpDisabled
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIpDisabled
  name: WithFloatingIpDisabled()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>>.WithFloatingIpDisabled()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule)).WithFloatingIpDisabled()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIpDisabled
    name: WithFloatingIpDisabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>>.WithFloatingIpDisabled
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIpDisabled
    name: WithFloatingIpDisabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule)).WithFloatingIpDisabled
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIpDisabled
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1
  isExternal: false
  name: WithFloatingIpDisabled()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<ReturnT>.WithFloatingIpDisabled()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp(Of ReturnT).WithFloatingIpDisabled()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIpDisabled
    name: WithFloatingIpDisabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp<ReturnT>.WithFloatingIpDisabled
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp`1.WithFloatingIpDisabled
    name: WithFloatingIpDisabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Definition.IWithFloatingIp(Of ReturnT).WithFloatingIpDisabled
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate}.WithFloatingIpEnabled
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate}
  definition: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIpEnabled
  name: WithFloatingIpEnabled()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate>.WithFloatingIpEnabled()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate).WithFloatingIpEnabled()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIpEnabled
    name: WithFloatingIpEnabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate>.WithFloatingIpEnabled
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIpEnabled
    name: WithFloatingIpEnabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate).WithFloatingIpEnabled
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIpEnabled
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1
  isExternal: false
  name: WithFloatingIpEnabled()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<ReturnT>.WithFloatingIpEnabled()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp(Of ReturnT).WithFloatingIpEnabled()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIpEnabled
    name: WithFloatingIpEnabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<ReturnT>.WithFloatingIpEnabled
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIpEnabled
    name: WithFloatingIpEnabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp(Of ReturnT).WithFloatingIpEnabled
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate}.WithFloatingIp(System.Boolean)
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate}
  definition: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIp(System.Boolean)
  name: WithFloatingIp(Boolean)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate>.WithFloatingIp(System.Boolean)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate).WithFloatingIp(System.Boolean)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIp(System.Boolean)
    name: WithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate>.WithFloatingIp
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIp(System.Boolean)
    name: WithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate).WithFloatingIp
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIp(System.Boolean)
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1
  isExternal: true
  name: WithFloatingIp(Boolean)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<ReturnT>.WithFloatingIp(System.Boolean)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp(Of ReturnT).WithFloatingIp(System.Boolean)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIp(System.Boolean)
    name: WithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<ReturnT>.WithFloatingIp
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIp(System.Boolean)
    name: WithFloatingIp
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp(Of ReturnT).WithFloatingIp
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate}.WithFloatingIpDisabled
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate}
  definition: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIpDisabled
  name: WithFloatingIpDisabled()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate>.WithFloatingIpDisabled()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate).WithFloatingIpDisabled()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIpDisabled
    name: WithFloatingIpDisabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate>.WithFloatingIpDisabled
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIpDisabled
    name: WithFloatingIpDisabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate).WithFloatingIpDisabled
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIpDisabled
  parent: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1
  isExternal: false
  name: WithFloatingIpDisabled()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<ReturnT>.WithFloatingIpDisabled()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp(Of ReturnT).WithFloatingIpDisabled()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIpDisabled
    name: WithFloatingIpDisabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp<ReturnT>.WithFloatingIpDisabled
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp`1.WithFloatingIpDisabled
    name: WithFloatingIpDisabled
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFloatingIp.Update.IWithFloatingIp(Of ReturnT).WithFloatingIpDisabled
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IWithIdleTimeout.WithIdleTimeoutInMinutes(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IWithIdleTimeout
  isExternal: true
  name: WithIdleTimeoutInMinutes(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IWithIdleTimeout.WithIdleTimeoutInMinutes(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IWithIdleTimeout.WithIdleTimeoutInMinutes(System.Int32)
    name: WithIdleTimeoutInMinutes
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IWithIdleTimeout.WithIdleTimeoutInMinutes
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IWithIdleTimeout.WithIdleTimeoutInMinutes(System.Int32)
    name: WithIdleTimeoutInMinutes
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IWithIdleTimeout.WithIdleTimeoutInMinutes
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.IHasFrontend.Frontend
  parent: Microsoft.Azure.Management.Fluent.Network.IHasFrontend
  isExternal: false
  name: Frontend()
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasFrontend.Frontend()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasFrontend.Frontend
    name: Frontend
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasFrontend.Frontend
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasFrontend.Frontend
    name: Frontend
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasFrontend.Frontend
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.IHasProtocol{System.String}.Protocol
  parent: Microsoft.Azure.Management.Fluent.Network.IHasProtocol{System.String}
  definition: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1.Protocol
  name: Protocol()
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasProtocol<System.String>.Protocol()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.IHasProtocol(Of System.String).Protocol()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1.Protocol
    name: Protocol
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasProtocol<System.String>.Protocol
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1.Protocol
    name: Protocol
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasProtocol(Of System.String).Protocol
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1.Protocol
  parent: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1
  isExternal: false
  name: Protocol()
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasProtocol<ProtocolT>.Protocol()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.IHasProtocol(Of ProtocolT).Protocol()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1.Protocol
    name: Protocol
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasProtocol<ProtocolT>.Protocol
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasProtocol`1.Protocol
    name: Protocol
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasProtocol(Of ProtocolT).Protocol
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.IHasBackendPort.BackendPort
  parent: Microsoft.Azure.Management.Fluent.Network.IHasBackendPort
  isExternal: false
  name: BackendPort
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasBackendPort.BackendPort
- uid: System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}.WithFrontendPort(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  definition: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort`1.WithFrontendPort(System.Int32)
  name: WithFrontendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithFrontendPort(System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate).WithFrontendPort(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort`1.WithFrontendPort(System.Int32)
    name: WithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithFrontendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort`1.WithFrontendPort(System.Int32)
    name: WithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate).WithFrontendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort`1.WithFrontendPort(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort`1
  isExternal: true
  name: WithFrontendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort<ParentT>.WithFrontendPort(System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort(Of ParentT).WithFrontendPort(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort`1.WithFrontendPort(System.Int32)
    name: WithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort<ParentT>.WithFrontendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort`1.WithFrontendPort(System.Int32)
    name: WithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort(Of ParentT).WithFrontendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}.WithFrontendPort(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}
  definition: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort`1.WithFrontendPort(System.Int32)
  name: WithFrontendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>.WithFrontendPort(System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule).WithFrontendPort(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort`1.WithFrontendPort(System.Int32)
    name: WithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>.WithFrontendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort`1.WithFrontendPort(System.Int32)
    name: WithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule).WithFrontendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort`1.WithFrontendPort(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort`1
  isExternal: true
  name: WithFrontendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort<ParentT>.WithFrontendPort(System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort(Of ParentT).WithFrontendPort(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort`1.WithFrontendPort(System.Int32)
    name: WithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort<ParentT>.WithFrontendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort`1.WithFrontendPort(System.Int32)
    name: WithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort(Of ParentT).WithFrontendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithIdleTimeout{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}.WithIdleTimeoutInMinutes(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithIdleTimeout{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}
  definition: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithIdleTimeout`1.WithIdleTimeoutInMinutes(System.Int32)
  name: WithIdleTimeoutInMinutes(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithIdleTimeout<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithIdleTimeoutInMinutes(System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithIdleTimeout(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate).WithIdleTimeoutInMinutes(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithIdleTimeout`1.WithIdleTimeoutInMinutes(System.Int32)
    name: WithIdleTimeoutInMinutes
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithIdleTimeout<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>.WithIdleTimeoutInMinutes
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithIdleTimeout`1.WithIdleTimeoutInMinutes(System.Int32)
    name: WithIdleTimeoutInMinutes
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithIdleTimeout(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate).WithIdleTimeoutInMinutes
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithIdleTimeout`1.WithIdleTimeoutInMinutes(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithIdleTimeout`1
  isExternal: true
  name: WithIdleTimeoutInMinutes(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithIdleTimeout<ParentT>.WithIdleTimeoutInMinutes(System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithIdleTimeout(Of ParentT).WithIdleTimeoutInMinutes(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithIdleTimeout`1.WithIdleTimeoutInMinutes(System.Int32)
    name: WithIdleTimeoutInMinutes
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithIdleTimeout<ParentT>.WithIdleTimeoutInMinutes
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithIdleTimeout`1.WithIdleTimeoutInMinutes(System.Int32)
    name: WithIdleTimeoutInMinutes
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithIdleTimeout(Of ParentT).WithIdleTimeoutInMinutes
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}.WithIdleTimeoutInMinutes(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}
  definition: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout`1.WithIdleTimeoutInMinutes(System.Int32)
  name: WithIdleTimeoutInMinutes(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>.WithIdleTimeoutInMinutes(System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule).WithIdleTimeoutInMinutes(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout`1.WithIdleTimeoutInMinutes(System.Int32)
    name: WithIdleTimeoutInMinutes
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>.WithIdleTimeoutInMinutes
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout`1.WithIdleTimeoutInMinutes(System.Int32)
    name: WithIdleTimeoutInMinutes
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule).WithIdleTimeoutInMinutes
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout`1.WithIdleTimeoutInMinutes(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout`1
  isExternal: true
  name: WithIdleTimeoutInMinutes(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout<ParentT>.WithIdleTimeoutInMinutes(System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout(Of ParentT).WithIdleTimeoutInMinutes(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout`1.WithIdleTimeoutInMinutes(System.Int32)
    name: WithIdleTimeoutInMinutes
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout<ParentT>.WithIdleTimeoutInMinutes
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout`1.WithIdleTimeoutInMinutes(System.Int32)
    name: WithIdleTimeoutInMinutes
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithIdleTimeout(Of ParentT).WithIdleTimeoutInMinutes
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.IHasFloatingIp.FloatingIpEnabled
  parent: Microsoft.Azure.Management.Fluent.Network.IHasFloatingIp
  isExternal: false
  name: FloatingIpEnabled
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasFloatingIp.FloatingIpEnabled
- uid: System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate},System.String}.WithProtocol(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate},System.String}
  definition: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol`2.WithProtocol(`1)
  name: WithProtocol(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>, System.String>.WithProtocol(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate), System.String).WithProtocol(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>, System.String>.WithProtocol
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate), System.String).WithProtocol
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol`2.WithProtocol(`1)
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol`2
  isExternal: false
  name: WithProtocol(ProtocolT)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol<ReturnT, ProtocolT>.WithProtocol(ProtocolT)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol(Of ReturnT, ProtocolT).WithProtocol(ProtocolT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol<ReturnT, ProtocolT>.WithProtocol
  - name: (
    fullName: (
  - name: ProtocolT
    fullName: ProtocolT
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.UpdateDefinition.IWithProtocol(Of ReturnT, ProtocolT).WithProtocol
  - name: (
    fullName: (
  - name: ProtocolT
    fullName: ProtocolT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule},System.String}.WithProtocol(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule},System.String}
  definition: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2.WithProtocol(`1)
  name: WithProtocol(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>, System.String>.WithProtocol(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule), System.String).WithProtocol(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>, System.String>.WithProtocol
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule), System.String).WithProtocol
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2.WithProtocol(`1)
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2
  isExternal: false
  name: WithProtocol(ProtocolT)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<ReturnT, ProtocolT>.WithProtocol(ProtocolT)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol(Of ReturnT, ProtocolT).WithProtocol(ProtocolT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<ReturnT, ProtocolT>.WithProtocol
  - name: (
    fullName: (
  - name: ProtocolT
    fullName: ProtocolT
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol(Of ReturnT, ProtocolT).WithProtocol
  - name: (
    fullName: (
  - name: ProtocolT
    fullName: ProtocolT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate,System.String}.WithProtocol(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate,System.String}
  definition: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2.WithProtocol(`1)
  name: WithProtocol(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate, System.String>.WithProtocol(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate, System.String).WithProtocol(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate, System.String>.WithProtocol
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate, System.String).WithProtocol
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2.WithProtocol(`1)
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2
  isExternal: false
  name: WithProtocol(ProtocolT)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol<ReturnT, ProtocolT>.WithProtocol(ProtocolT)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol(Of ReturnT, ProtocolT).WithProtocol(ProtocolT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol<ReturnT, ProtocolT>.WithProtocol
  - name: (
    fullName: (
  - name: ProtocolT
    fullName: ProtocolT
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Update.IWithProtocol(Of ReturnT, ProtocolT).WithProtocol
  - name: (
    fullName: (
  - name: ProtocolT
    fullName: ProtocolT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}.WithFrontend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend`1.WithFrontend(System.String)
  name: WithFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFrontend(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)).WithFrontend(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend`1.WithFrontend(System.String)
    name: WithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend`1.WithFrontend(System.String)
    name: WithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithFrontendPort(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)).WithFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend`1.WithFrontend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend`1
  isExternal: true
  name: WithFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend<ReturnT>.WithFrontend(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend(Of ReturnT).WithFrontend(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend`1.WithFrontend(System.String)
    name: WithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend<ReturnT>.WithFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend`1.WithFrontend(System.String)
    name: WithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.UpdateDefinition.IWithFrontend(Of ReturnT).WithFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}}.WithFrontend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1.WithFrontend(System.String)
  name: WithFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>>.WithFrontend(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule)).WithFrontend(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1.WithFrontend(System.String)
    name: WithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>>.WithFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1.WithFrontend(System.String)
    name: WithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontendPort(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule)).WithFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1.WithFrontend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1
  isExternal: true
  name: WithFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend<ReturnT>.WithFrontend(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend(Of ReturnT).WithFrontend(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1.WithFrontend(System.String)
    name: WithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend<ReturnT>.WithFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend`1.WithFrontend(System.String)
    name: WithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Definition.IWithFrontend(Of ReturnT).WithFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate}.WithFrontend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate}
  definition: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1.WithFrontend(System.String)
  name: WithFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate>.WithFrontend(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate).WithFrontend(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1.WithFrontend(System.String)
    name: WithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate>.WithFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1.WithFrontend(System.String)
    name: WithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate).WithFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1.WithFrontend(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1
  isExternal: true
  name: WithFrontend(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend<ReturnT>.WithFrontend(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend(Of ReturnT).WithFrontend(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1.WithFrontend(System.String)
    name: WithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend<ReturnT>.WithFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend`1.WithFrontend(System.String)
    name: WithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.HasFrontend.Update.IWithFrontend(Of ReturnT).WithFrontend
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IWithFrontendPort.WithFrontendPort(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IWithFrontendPort
  isExternal: true
  name: WithFrontendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IWithFrontendPort.WithFrontendPort(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IWithFrontendPort.WithFrontendPort(System.Int32)
    name: WithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IWithFrontendPort.WithFrontendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IWithFrontendPort.WithFrontendPort(System.Int32)
    name: WithFrontendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IWithFrontendPort.WithFrontendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}.WithBackendPort(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort`1.WithBackendPort(System.Int32)
  name: WithBackendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithBackendPort(System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)).WithBackendPort(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort`1.WithBackendPort(System.Int32)
    name: WithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate>>.WithBackendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort`1.WithBackendPort(System.Int32)
    name: WithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Update.IUpdate)).WithBackendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort`1.WithBackendPort(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort`1
  isExternal: true
  name: WithBackendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort<ReturnT>.WithBackendPort(System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort(Of ReturnT).WithBackendPort(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort`1.WithBackendPort(System.Int32)
    name: WithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort<ReturnT>.WithBackendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort`1.WithBackendPort(System.Int32)
    name: WithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.UpdateDefinition.IWithBackendPort(Of ReturnT).WithBackendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}}.WithBackendPort(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1.WithBackendPort(System.Int32)
  name: WithBackendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>>.WithBackendPort(System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule)).WithBackendPort(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1.WithBackendPort(System.Int32)
    name: WithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>>.WithBackendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1.WithBackendPort(System.Int32)
    name: WithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule)).WithBackendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1.WithBackendPort(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1
  isExternal: true
  name: WithBackendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort<ReturnT>.WithBackendPort(System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort(Of ReturnT).WithBackendPort(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1.WithBackendPort(System.Int32)
    name: WithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort<ReturnT>.WithBackendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort`1.WithBackendPort(System.Int32)
    name: WithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Definition.IWithBackendPort(Of ReturnT).WithBackendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate}.WithBackendPort(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate}
  definition: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1.WithBackendPort(System.Int32)
  name: WithBackendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate>.WithBackendPort(System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate).WithBackendPort(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1.WithBackendPort(System.Int32)
    name: WithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate>.WithBackendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1.WithBackendPort(System.Int32)
    name: WithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Update.IUpdate).WithBackendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1.WithBackendPort(System.Int32)
  parent: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1
  isExternal: true
  name: WithBackendPort(Int32)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort<ReturnT>.WithBackendPort(System.Int32)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort(Of ReturnT).WithBackendPort(System.Int32)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1.WithBackendPort(System.Int32)
    name: WithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort<ReturnT>.WithBackendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort`1.WithBackendPort(System.Int32)
    name: WithBackendPort
    fullName: Microsoft.Azure.Management.Fluent.Network.HasBackendPort.Update.IWithBackendPort(Of ReturnT).WithBackendPort
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule.BackendNetworkInterfaceId
  parent: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule
  isExternal: false
  name: BackendNetworkInterfaceId
  fullName: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule.BackendNetworkInterfaceId
- uid: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule.FrontendPort
  parent: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule
  isExternal: false
  name: FrontendPort
  fullName: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule.FrontendPort
- uid: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule.IdleTimeoutInMinutes
  parent: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule
  isExternal: false
  name: IdleTimeoutInMinutes
  fullName: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule.IdleTimeoutInMinutes
- uid: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule.BackendNicIpConfigurationName
  parent: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule
  isExternal: false
  name: BackendNicIpConfigurationName
  fullName: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule.BackendNicIpConfigurationName
