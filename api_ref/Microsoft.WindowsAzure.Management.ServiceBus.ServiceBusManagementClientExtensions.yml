### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.ServiceBus.ServiceBusManagementClientExtensions
  commentId: T:Microsoft.WindowsAzure.Management.ServiceBus.ServiceBusManagementClientExtensions
  id: ServiceBusManagementClientExtensions
  parent: Microsoft.WindowsAzure.Management.ServiceBus
  children:
  - Microsoft.WindowsAzure.Management.ServiceBus.ServiceBusManagementClientExtensions.GetOperationStatus(Microsoft.WindowsAzure.Management.ServiceBus.IServiceBusManagementClient,System.String)
  - Microsoft.WindowsAzure.Management.ServiceBus.ServiceBusManagementClientExtensions.GetOperationStatusAsync(Microsoft.WindowsAzure.Management.ServiceBus.IServiceBusManagementClient,System.String)
  - Microsoft.WindowsAzure.Management.ServiceBus.ServiceBusManagementClientExtensions.GetServiceBusRegions(Microsoft.WindowsAzure.Management.ServiceBus.IServiceBusManagementClient)
  - Microsoft.WindowsAzure.Management.ServiceBus.ServiceBusManagementClientExtensions.GetServiceBusRegionsAsync(Microsoft.WindowsAzure.Management.ServiceBus.IServiceBusManagementClient)
  langs:
  - csharp
  - vb
  name: ServiceBusManagementClientExtensions
  nameWithType: ServiceBusManagementClientExtensions
  fullName: Microsoft.WindowsAzure.Management.ServiceBus.ServiceBusManagementClientExtensions
  type: Class
  source:
    remote:
      path: src/ServiceManagement/ServiceBus/ServiceBusManagement/Generated/ServiceBusManagementClientExtensions.cs
      branch: d500760ed1df3f9ecfc1190f640525feeba47480
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ServiceBusManagementClientExtensions
    path: src/ServiceManagement/ServiceBus/ServiceBusManagement/Generated/ServiceBusManagementClientExtensions.cs
    startLine: 37
  assemblies:
  - Microsoft.WindowsAzure.Management.ServiceBus
  namespace: Microsoft.WindowsAzure.Management.ServiceBus
  summary: "\nThe Service Bus Management API is a REST API for managing Service Bus\nqueues, topics, rules and subscriptions.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/hh780776.aspx for\nmore information)\n"
  example: []
  syntax:
    content: public static class ServiceBusManagementClientExtensions
    content.vb: Public Module ServiceBusManagementClientExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.WindowsAzure.Management.ServiceBus.ServiceBusManagementClientExtensions.GetOperationStatus(Microsoft.WindowsAzure.Management.ServiceBus.IServiceBusManagementClient,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.ServiceBus.ServiceBusManagementClientExtensions.GetOperationStatus(Microsoft.WindowsAzure.Management.ServiceBus.IServiceBusManagementClient,System.String)
  id: GetOperationStatus(Microsoft.WindowsAzure.Management.ServiceBus.IServiceBusManagementClient,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.ServiceBus.ServiceBusManagementClientExtensions
  langs:
  - csharp
  - vb
  name: GetOperationStatus(IServiceBusManagementClient, String)
  nameWithType: ServiceBusManagementClientExtensions.GetOperationStatus(IServiceBusManagementClient, String)
  fullName: Microsoft.WindowsAzure.Management.ServiceBus.ServiceBusManagementClientExtensions.GetOperationStatus(Microsoft.WindowsAzure.Management.ServiceBus.IServiceBusManagementClient, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/ServiceBus/ServiceBusManagement/Generated/ServiceBusManagementClientExtensions.cs
      branch: d500760ed1df3f9ecfc1190f640525feeba47480
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetOperationStatus
    path: src/ServiceManagement/ServiceBus/ServiceBusManagement/Generated/ServiceBusManagementClientExtensions.cs
    startLine: 67
  assemblies:
  - Microsoft.WindowsAzure.Management.ServiceBus
  namespace: Microsoft.WindowsAzure.Management.ServiceBus
  summary: "\nThe Get Operation Status operation returns the status of\nthespecified operation. After calling an asynchronous operation,\nyou can call Get Operation Status to determine whether the\noperation has succeeded, failed, or is still in progress.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/ee460783.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static OperationStatusResponse GetOperationStatus(this IServiceBusManagementClient operations, string requestId)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetOperationStatus(operations As IServiceBusManagementClient, requestId As String) As OperationStatusResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.ServiceBus.IServiceBusManagementClient
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.ServiceBus.IServiceBusManagementClient.\n"
    - id: requestId
      type: System.String
      description: "\nRequired. The request ID for the request you wish to track. The\nrequest ID is returned in the x-ms-request-id response header for\nevery request.\n"
    return:
      type: OperationStatusResponse
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself.  If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request.  If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request, and also includes error\ninformation regarding the failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.ServiceBus.ServiceBusManagementClientExtensions.GetOperationStatusAsync(Microsoft.WindowsAzure.Management.ServiceBus.IServiceBusManagementClient,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.ServiceBus.ServiceBusManagementClientExtensions.GetOperationStatusAsync(Microsoft.WindowsAzure.Management.ServiceBus.IServiceBusManagementClient,System.String)
  id: GetOperationStatusAsync(Microsoft.WindowsAzure.Management.ServiceBus.IServiceBusManagementClient,System.String)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.ServiceBus.ServiceBusManagementClientExtensions
  langs:
  - csharp
  - vb
  name: GetOperationStatusAsync(IServiceBusManagementClient, String)
  nameWithType: ServiceBusManagementClientExtensions.GetOperationStatusAsync(IServiceBusManagementClient, String)
  fullName: Microsoft.WindowsAzure.Management.ServiceBus.ServiceBusManagementClientExtensions.GetOperationStatusAsync(Microsoft.WindowsAzure.Management.ServiceBus.IServiceBusManagementClient, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/ServiceBus/ServiceBusManagement/Generated/ServiceBusManagementClientExtensions.cs
      branch: d500760ed1df3f9ecfc1190f640525feeba47480
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetOperationStatusAsync
    path: src/ServiceManagement/ServiceBus/ServiceBusManagement/Generated/ServiceBusManagementClientExtensions.cs
    startLine: 104
  assemblies:
  - Microsoft.WindowsAzure.Management.ServiceBus
  namespace: Microsoft.WindowsAzure.Management.ServiceBus
  summary: "\nThe Get Operation Status operation returns the status of\nthespecified operation. After calling an asynchronous operation,\nyou can call Get Operation Status to determine whether the\noperation has succeeded, failed, or is still in progress.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/ee460783.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static Task<OperationStatusResponse> GetOperationStatusAsync(this IServiceBusManagementClient operations, string requestId)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetOperationStatusAsync(operations As IServiceBusManagementClient, requestId As String) As Task(Of OperationStatusResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.ServiceBus.IServiceBusManagementClient
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.ServiceBus.IServiceBusManagementClient.\n"
    - id: requestId
      type: System.String
      description: "\nRequired. The request ID for the request you wish to track. The\nrequest ID is returned in the x-ms-request-id response header for\nevery request.\n"
    return:
      type: System.Threading.Tasks.Task{OperationStatusResponse}
      description: "\nThe response body contains the status of the specified asynchronous\noperation, indicating whether it has succeeded, is inprogress, or\nhas failed. Note that this status is distinct from the HTTP status\ncode returned for the Get Operation Status operation itself.  If\nthe asynchronous operation succeeded, the response body includes\nthe HTTP status code for the successful request.  If the\nasynchronous operation failed, the response body includes the HTTP\nstatus code for the failed request, and also includes error\ninformation regarding the failure.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.ServiceBus.ServiceBusManagementClientExtensions.GetServiceBusRegions(Microsoft.WindowsAzure.Management.ServiceBus.IServiceBusManagementClient)
  commentId: M:Microsoft.WindowsAzure.Management.ServiceBus.ServiceBusManagementClientExtensions.GetServiceBusRegions(Microsoft.WindowsAzure.Management.ServiceBus.IServiceBusManagementClient)
  id: GetServiceBusRegions(Microsoft.WindowsAzure.Management.ServiceBus.IServiceBusManagementClient)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.ServiceBus.ServiceBusManagementClientExtensions
  langs:
  - csharp
  - vb
  name: GetServiceBusRegions(IServiceBusManagementClient)
  nameWithType: ServiceBusManagementClientExtensions.GetServiceBusRegions(IServiceBusManagementClient)
  fullName: Microsoft.WindowsAzure.Management.ServiceBus.ServiceBusManagementClientExtensions.GetServiceBusRegions(Microsoft.WindowsAzure.Management.ServiceBus.IServiceBusManagementClient)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/ServiceBus/ServiceBusManagement/Generated/ServiceBusManagementClientExtensions.cs
      branch: d500760ed1df3f9ecfc1190f640525feeba47480
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetServiceBusRegions
    path: src/ServiceManagement/ServiceBus/ServiceBusManagement/Generated/ServiceBusManagementClientExtensions.cs
    startLine: 122
  assemblies:
  - Microsoft.WindowsAzure.Management.ServiceBus
  namespace: Microsoft.WindowsAzure.Management.ServiceBus
  summary: "\nRetrieves the list of regions that support the creation and\nmanagement of Service Bus service namespaces.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/jj860465.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static ServiceBusRegionsResponse GetServiceBusRegions(this IServiceBusManagementClient operations)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetServiceBusRegions(operations As IServiceBusManagementClient) As ServiceBusRegionsResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.ServiceBus.IServiceBusManagementClient
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.ServiceBus.IServiceBusManagementClient.\n"
    return:
      type: Microsoft.WindowsAzure.Management.ServiceBus.Models.ServiceBusRegionsResponse
      description: "\nA response to a request for a list of regions.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.ServiceBus.ServiceBusManagementClientExtensions.GetServiceBusRegionsAsync(Microsoft.WindowsAzure.Management.ServiceBus.IServiceBusManagementClient)
  commentId: M:Microsoft.WindowsAzure.Management.ServiceBus.ServiceBusManagementClientExtensions.GetServiceBusRegionsAsync(Microsoft.WindowsAzure.Management.ServiceBus.IServiceBusManagementClient)
  id: GetServiceBusRegionsAsync(Microsoft.WindowsAzure.Management.ServiceBus.IServiceBusManagementClient)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Management.ServiceBus.ServiceBusManagementClientExtensions
  langs:
  - csharp
  - vb
  name: GetServiceBusRegionsAsync(IServiceBusManagementClient)
  nameWithType: ServiceBusManagementClientExtensions.GetServiceBusRegionsAsync(IServiceBusManagementClient)
  fullName: Microsoft.WindowsAzure.Management.ServiceBus.ServiceBusManagementClientExtensions.GetServiceBusRegionsAsync(Microsoft.WindowsAzure.Management.ServiceBus.IServiceBusManagementClient)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/ServiceBus/ServiceBusManagement/Generated/ServiceBusManagementClientExtensions.cs
      branch: d500760ed1df3f9ecfc1190f640525feeba47480
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GetServiceBusRegionsAsync
    path: src/ServiceManagement/ServiceBus/ServiceBusManagement/Generated/ServiceBusManagementClientExtensions.cs
    startLine: 144
  assemblies:
  - Microsoft.WindowsAzure.Management.ServiceBus
  namespace: Microsoft.WindowsAzure.Management.ServiceBus
  summary: "\nRetrieves the list of regions that support the creation and\nmanagement of Service Bus service namespaces.  (see\nhttp://msdn.microsoft.com/en-us/library/windowsazure/jj860465.aspx\nfor more information)\n"
  example: []
  syntax:
    content: public static Task<ServiceBusRegionsResponse> GetServiceBusRegionsAsync(this IServiceBusManagementClient operations)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetServiceBusRegionsAsync(operations As IServiceBusManagementClient) As Task(Of ServiceBusRegionsResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.ServiceBus.IServiceBusManagementClient
      description: "\nReference to the\nMicrosoft.WindowsAzure.Management.ServiceBus.IServiceBusManagementClient.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.ServiceBus.Models.ServiceBusRegionsResponse}
      description: "\nA response to a request for a list of regions.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.WindowsAzure.Management.ServiceBus
  commentId: N:Microsoft.WindowsAzure.Management.ServiceBus
  isExternal: false
  name: Microsoft.WindowsAzure.Management.ServiceBus
  nameWithType: Microsoft.WindowsAzure.Management.ServiceBus
  fullName: Microsoft.WindowsAzure.Management.ServiceBus
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.Management.ServiceBus.IServiceBusManagementClient
  commentId: T:Microsoft.WindowsAzure.Management.ServiceBus.IServiceBusManagementClient
  parent: Microsoft.WindowsAzure.Management.ServiceBus
  isExternal: false
  name: IServiceBusManagementClient
  nameWithType: IServiceBusManagementClient
  fullName: Microsoft.WindowsAzure.Management.ServiceBus.IServiceBusManagementClient
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OperationStatusResponse
  isExternal: true
  name: OperationStatusResponse
  nameWithType: OperationStatusResponse
  fullName: OperationStatusResponse
- uid: System.Threading.Tasks.Task{OperationStatusResponse}
  commentId: T:System.Threading.Tasks.Task{OperationStatusResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<OperationStatusResponse>
  nameWithType: Task<OperationStatusResponse>
  fullName: System.Threading.Tasks.Task<OperationStatusResponse>
  nameWithType.vb: Task(Of OperationStatusResponse)
  fullname.vb: System.Threading.Tasks.Task(Of OperationStatusResponse)
  name.vb: Task(Of OperationStatusResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OperationStatusResponse
    name: OperationStatusResponse
    nameWithType: OperationStatusResponse
    fullName: OperationStatusResponse
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OperationStatusResponse
    name: OperationStatusResponse
    nameWithType: OperationStatusResponse
    fullName: OperationStatusResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.WindowsAzure.Management.ServiceBus.Models.ServiceBusRegionsResponse
  commentId: T:Microsoft.WindowsAzure.Management.ServiceBus.Models.ServiceBusRegionsResponse
  parent: Microsoft.WindowsAzure.Management.ServiceBus.Models
  isExternal: false
  name: ServiceBusRegionsResponse
  nameWithType: ServiceBusRegionsResponse
  fullName: Microsoft.WindowsAzure.Management.ServiceBus.Models.ServiceBusRegionsResponse
- uid: Microsoft.WindowsAzure.Management.ServiceBus.Models
  commentId: N:Microsoft.WindowsAzure.Management.ServiceBus.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.ServiceBus.Models
  nameWithType: Microsoft.WindowsAzure.Management.ServiceBus.Models
  fullName: Microsoft.WindowsAzure.Management.ServiceBus.Models
- uid: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.ServiceBus.Models.ServiceBusRegionsResponse}
  commentId: T:System.Threading.Tasks.Task{Microsoft.WindowsAzure.Management.ServiceBus.Models.ServiceBusRegionsResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ServiceBusRegionsResponse>
  nameWithType: Task<ServiceBusRegionsResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.WindowsAzure.Management.ServiceBus.Models.ServiceBusRegionsResponse>
  nameWithType.vb: Task(Of ServiceBusRegionsResponse)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.WindowsAzure.Management.ServiceBus.Models.ServiceBusRegionsResponse)
  name.vb: Task(Of ServiceBusRegionsResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Management.ServiceBus.Models.ServiceBusRegionsResponse
    name: ServiceBusRegionsResponse
    nameWithType: ServiceBusRegionsResponse
    fullName: Microsoft.WindowsAzure.Management.ServiceBus.Models.ServiceBusRegionsResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Management.ServiceBus.Models.ServiceBusRegionsResponse
    name: ServiceBusRegionsResponse
    nameWithType: ServiceBusRegionsResponse
    fullName: Microsoft.WindowsAzure.Management.ServiceBus.Models.ServiceBusRegionsResponse
  - name: )
    nameWithType: )
    fullName: )
