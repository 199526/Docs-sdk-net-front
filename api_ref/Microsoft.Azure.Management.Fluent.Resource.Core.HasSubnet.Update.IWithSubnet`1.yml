items:
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.HasSubnet.Update.IWithSubnet`1
  commentId: T:Microsoft.Azure.Management.Fluent.Resource.Core.HasSubnet.Update.IWithSubnet`1
  id: IWithSubnet`1
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.HasSubnet.Update
  children:
  - Microsoft.Azure.Management.Fluent.Resource.Core.HasSubnet.Update.IWithSubnet`1.WithExistingSubnet(System.String,System.String)
  langs:
  - csharp
  - vb
  name: IWithSubnet<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.HasSubnet.Update.IWithSubnet<ReturnT>
  type: Interface
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Domain/Core/HasSubnet/Update/IUpdate.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IWithSubnet
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Domain/Core/HasSubnet/Update/IUpdate.cs
    startLine: 14
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Resource.Core.HasSubnet.Update
  syntax:
    content: public interface IWithSubnet<ReturnT>
    content.vb: Public Interface IWithSubnet(Of ReturnT)
    typeParameters:
    - id: ReturnT
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Microsoft.Azure.Management.Fluent.Resource.Core.HasSubnet.Update.IWithSubnet(Of ReturnT)
  name.vb: IWithSubnet(Of ReturnT)
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.HasSubnet.Update.IWithSubnet`1.WithExistingSubnet(System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Resource.Core.HasSubnet.Update.IWithSubnet`1.WithExistingSubnet(System.String,System.String)
  id: WithExistingSubnet(System.String,System.String)
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.HasSubnet.Update.IWithSubnet`1
  langs:
  - csharp
  - vb
  name: WithExistingSubnet(String, String)
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.HasSubnet.Update.IWithSubnet<ReturnT>.WithExistingSubnet(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Domain/Core/HasSubnet/Update/IUpdate.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithExistingSubnet
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Domain/Core/HasSubnet/Update/IUpdate.cs
    startLine: 22
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Resource.Core.HasSubnet.Update
  summary: "\nAssigns the specified subnet to this resource.\n"
  example: []
  syntax:
    content: ReturnT WithExistingSubnet(string parentNetworkResourceId, string subnetName)
    content.vb: Function WithExistingSubnet(parentNetworkResourceId As String, subnetName As String) As ReturnT
    parameters:
    - id: parentNetworkResourceId
      type: System.String
      description: parentNetworkResourceId the resource ID of the virtual network the subnet is part of
    - id: subnetName
      type: System.String
      description: subnetName the name of the subnet
    return:
      type: '{ReturnT}'
      description: the next stage of the definition
  fullName.vb: Microsoft.Azure.Management.Fluent.Resource.Core.HasSubnet.Update.IWithSubnet(Of ReturnT).WithExistingSubnet(System.String, System.String)
references:
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.HasSubnet.Update
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Resource.Core.HasSubnet.Update
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.HasSubnet.Update
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: '{ReturnT}'
  isExternal: false
  name: ReturnT
  fullName: ReturnT
- uid: System
  isExternal: false
  name: System
  fullName: System
