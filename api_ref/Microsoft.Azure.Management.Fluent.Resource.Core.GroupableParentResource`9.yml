items:
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableParentResource`9
  commentId: T:Microsoft.Azure.Management.Fluent.Resource.Core.GroupableParentResource`9
  id: GroupableParentResource`9
  parent: Microsoft.Azure.Management.Fluent.Resource.Core
  children:
  - Microsoft.Azure.Management.Fluent.Resource.Core.GroupableParentResource`9.#ctor(System.String,`1,`4)
  - Microsoft.Azure.Management.Fluent.Resource.Core.GroupableParentResource`9.AfterCreating
  - Microsoft.Azure.Management.Fluent.Resource.Core.GroupableParentResource`9.BeforeCreating
  - Microsoft.Azure.Management.Fluent.Resource.Core.GroupableParentResource`9.CreateInner
  - Microsoft.Azure.Management.Fluent.Resource.Core.GroupableParentResource`9.CreateResourceAsync(System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Fluent.Resource.Core.GroupableParentResource`9.InitializeChildrenFromInner
  langs:
  - csharp
  - vb
  name: GroupableParentResource<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags>
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableParentResource<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags>
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/GroupableParentResource.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GroupableParentResource
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/GroupableParentResource.cs
    startLine: 18
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Resource.Core
  syntax:
    content: 'public abstract class GroupableParentResource<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags> : GroupableResource<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags>, IRefreshable<IFluentResourceT>, IWrapper<InnerResourceT>, IResourceCreator<IResource>, ICreatable<IFluentResourceT>, IUpdatable<UTypeWithTags>, IDefinitionWithTags<DefTypeWithTags>, IUpdateWithTags<UTypeWithTags>, IGroupableResource, IResource, IIndexable where IFluentResourceT : class, IResource where InnerResourceT : class, InnerResourceBaseT where InnerResourceBaseT : class where FluentResourceT : GroupableParentResource<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags>, IFluentResourceT where ManagerT : IManagerBase where IDefinitionAfterRegion : class where IDefinitionAfterResourceGroup : class where DefTypeWithTags : class where UTypeWithTags : class'
    content.vb: >-
      Public MustInherit Class GroupableParentResource(Of IFluentResourceT As {Class, IResource}, InnerResourceT As {Class, InnerResourceBaseT}, InnerResourceBaseT As Class, FluentResourceT As {GroupableParentResource(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags), IFluentResourceT}, ManagerT As IManagerBase, IDefinitionAfterRegion As Class, IDefinitionAfterResourceGroup As Class, DefTypeWithTags As Class, UTypeWithTags As Class)
          Inherits GroupableResource(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags)
          Implements IRefreshable(Of IFluentResourceT), IWrapper(Of InnerResourceT), IResourceCreator(Of IResource), ICreatable(Of IFluentResourceT), IUpdatable(Of UTypeWithTags), IDefinitionWithTags(Of DefTypeWithTags), IUpdateWithTags(Of UTypeWithTags), IGroupableResource, IResource, IIndexable
    typeParameters:
    - id: IFluentResourceT
    - id: InnerResourceT
    - id: InnerResourceBaseT
    - id: FluentResourceT
    - id: ManagerT
    - id: IDefinitionAfterRegion
    - id: IDefinitionAfterResourceGroup
    - id: DefTypeWithTags
    - id: UTypeWithTags
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.Fluent.Resource.Core.Indexable
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshable{{IFluentResourceT}}
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshableWrapper{{IFluentResourceT},{InnerResourceT}}
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable{{IFluentResourceT},{InnerResourceT},{FluentResourceT},Microsoft.Azure.Management.Fluent.Resource.Core.IResource}
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable{{IFluentResourceT},{InnerResourceT},{FluentResourceT},Microsoft.Azure.Management.Fluent.Resource.Core.IResource,{UTypeWithTags}}
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}
  - Microsoft.Azure.Management.Fluent.Resource.GroupableResource{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{ManagerT},{IDefinitionAfterRegion},{IDefinitionAfterResourceGroup},{DefTypeWithTags},{UTypeWithTags}}
  implements:
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IRefreshable{{IFluentResourceT}}
  - Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper{{InnerResourceT}}
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator{Microsoft.Azure.Management.Fluent.Resource.Core.IResource}
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.ICreatable{{IFluentResourceT}}
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IUpdatable{{UTypeWithTags}}
  - Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Definition.IDefinitionWithTags{{DefTypeWithTags}}
  - Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags{{UTypeWithTags}}
  - Microsoft.Azure.Management.Fluent.Resource.Core.IGroupableResource
  - Microsoft.Azure.Management.Fluent.Resource.Core.IResource
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IIndexable
  inheritedMembers:
  - Microsoft.Azure.Management.Fluent.Resource.GroupableResource{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{ManagerT},{IDefinitionAfterRegion},{IDefinitionAfterResourceGroup},{DefTypeWithTags},{UTypeWithTags}}.newGroup
  - Microsoft.Azure.Management.Fluent.Resource.GroupableResource{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{ManagerT},{IDefinitionAfterRegion},{IDefinitionAfterResourceGroup},{DefTypeWithTags},{UTypeWithTags}}.Manager
  - Microsoft.Azure.Management.Fluent.Resource.GroupableResource{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{ManagerT},{IDefinitionAfterRegion},{IDefinitionAfterResourceGroup},{DefTypeWithTags},{UTypeWithTags}}.ResourceIdBase
  - Microsoft.Azure.Management.Fluent.Resource.GroupableResource{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{ManagerT},{IDefinitionAfterRegion},{IDefinitionAfterResourceGroup},{DefTypeWithTags},{UTypeWithTags}}.ResourceGroupName
  - Microsoft.Azure.Management.Fluent.Resource.GroupableResource{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{ManagerT},{IDefinitionAfterRegion},{IDefinitionAfterResourceGroup},{DefTypeWithTags},{UTypeWithTags}}.WithNewResourceGroup
  - Microsoft.Azure.Management.Fluent.Resource.GroupableResource{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{ManagerT},{IDefinitionAfterRegion},{IDefinitionAfterResourceGroup},{DefTypeWithTags},{UTypeWithTags}}.WithNewResourceGroup(System.String)
  - Microsoft.Azure.Management.Fluent.Resource.GroupableResource{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{ManagerT},{IDefinitionAfterRegion},{IDefinitionAfterResourceGroup},{DefTypeWithTags},{UTypeWithTags}}.WithNewResourceGroup(Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.ICreatable{Microsoft.Azure.Management.Fluent.Resource.IResourceGroup})
  - Microsoft.Azure.Management.Fluent.Resource.GroupableResource{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{ManagerT},{IDefinitionAfterRegion},{IDefinitionAfterResourceGroup},{DefTypeWithTags},{UTypeWithTags}}.WithExistingResourceGroup(System.String)
  - Microsoft.Azure.Management.Fluent.Resource.GroupableResource{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{ManagerT},{IDefinitionAfterRegion},{IDefinitionAfterResourceGroup},{DefTypeWithTags},{UTypeWithTags}}.WithExistingResourceGroup(Microsoft.Azure.Management.Fluent.Resource.IResourceGroup)
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}.Id
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}.Name
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}.RegionName
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}.Type
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}.Tags
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}.InnersFromWrappers``2(System.Collections.Generic.ICollection{{IWrapperT}},System.Collections.Generic.IList{{InnerT}})
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}.InnersFromWrappers``2(System.Collections.Generic.ICollection{{IWrapperT}})
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}.IsInCreateMode
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}.Region
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}.Microsoft#Azure#Management#Fluent#Resource#Core#IResource#Tags
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}.WithRegion(System.String)
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}.WithRegion(Microsoft.Azure.Management.Fluent.Resource.Core.Region)
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}.WithTags(System.Collections.Generic.IDictionary{System.String,System.String})
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}.WithTag(System.String,System.String)
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}.WithoutTag(System.String)
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}.Microsoft#Azure#Management#Fluent#Resource#Core#Resource#Definition#IDefinitionWithTags{DefTypeWithTags}#WithTag(System.String,System.String)
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}.Microsoft#Azure#Management#Fluent#Resource#Core#Resource#Definition#IDefinitionWithTags{DefTypeWithTags}#WithTags(System.Collections.Generic.IDictionary{System.String,System.String})
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}.Microsoft#Azure#Management#Fluent#Resource#Core#Resource#Update#IUpdateWithTags{UTypeWithTags}#WithTag(System.String,System.String)
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}.Microsoft#Azure#Management#Fluent#Resource#Core#Resource#Update#IUpdateWithTags{UTypeWithTags}#WithTags(System.Collections.Generic.IDictionary{System.String,System.String})
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}.Microsoft#Azure#Management#Fluent#Resource#Core#Resource#Update#IUpdateWithTags{UTypeWithTags}#WithoutTag(System.String)
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable{{IFluentResourceT},{InnerResourceT},{FluentResourceT},Microsoft.Azure.Management.Fluent.Resource.Core.IResource,{UTypeWithTags}}.Update
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable{{IFluentResourceT},{InnerResourceT},{FluentResourceT},Microsoft.Azure.Management.Fluent.Resource.Core.IResource,{UTypeWithTags}}.Apply
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable{{IFluentResourceT},{InnerResourceT},{FluentResourceT},Microsoft.Azure.Management.Fluent.Resource.Core.IResource,{UTypeWithTags}}.ApplyAsync(System.Threading.CancellationToken,System.Boolean)
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable{{IFluentResourceT},{InnerResourceT},{FluentResourceT},Microsoft.Azure.Management.Fluent.Resource.Core.IResource}.Name
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable{{IFluentResourceT},{InnerResourceT},{FluentResourceT},Microsoft.Azure.Management.Fluent.Resource.Core.IResource}.AddCreatableDependency(Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator{Microsoft.Azure.Management.Fluent.Resource.Core.IResource})
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable{{IFluentResourceT},{InnerResourceT},{FluentResourceT},Microsoft.Azure.Management.Fluent.Resource.Core.IResource}.Create
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable{{IFluentResourceT},{InnerResourceT},{FluentResourceT},Microsoft.Azure.Management.Fluent.Resource.Core.IResource}.CreateAsync(System.Threading.CancellationToken,System.Boolean)
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable{{IFluentResourceT},{InnerResourceT},{FluentResourceT},Microsoft.Azure.Management.Fluent.Resource.Core.IResource}.CreatedResource(System.String)
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable{{IFluentResourceT},{InnerResourceT},{FluentResourceT},Microsoft.Azure.Management.Fluent.Resource.Core.IResource}.CreatorTaskGroup
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable{{IFluentResourceT},{InnerResourceT},{FluentResourceT},Microsoft.Azure.Management.Fluent.Resource.Core.IResource}.CreateResourceAsync(System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable{{IFluentResourceT},{InnerResourceT},{FluentResourceT},Microsoft.Azure.Management.Fluent.Resource.Core.IResource}.CreateResource
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable{{IFluentResourceT},{InnerResourceT},{FluentResourceT},Microsoft.Azure.Management.Fluent.Resource.Core.IResource}.Microsoft#Azure#Management#Fluent#Resource#Core#ResourceActions#IResourceCreator{IResourceT}#CreateResourceAsync(System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable{{IFluentResourceT},{InnerResourceT},{FluentResourceT},Microsoft.Azure.Management.Fluent.Resource.Core.IResource}.Microsoft#Azure#Management#Fluent#Resource#Core#ResourceActions#IResourceCreator{IResourceT}#CreateResource
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshableWrapper{{IFluentResourceT},{InnerResourceT}}.Inner
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshableWrapper{{IFluentResourceT},{InnerResourceT}}.SetInner({InnerResourceT})
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshable{{IFluentResourceT}}.Refresh
  - Microsoft.Azure.Management.Fluent.Resource.Core.Indexable.Key
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableParentResource(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags)
  name.vb: GroupableParentResource(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags)
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableParentResource`9.#ctor(System.String,`1,`4)
  commentId: M:Microsoft.Azure.Management.Fluent.Resource.Core.GroupableParentResource`9.#ctor(System.String,`1,`4)
  id: '#ctor(System.String,`1,`4)'
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableParentResource`9
  langs:
  - csharp
  - vb
  name: GroupableParentResource(String, InnerResourceT, ManagerT)
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableParentResource<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags>.GroupableParentResource(System.String, InnerResourceT, ManagerT)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/GroupableParentResource.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/GroupableParentResource.cs
    startLine: 55
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Resource.Core
  syntax:
    content: protected GroupableParentResource(string name, InnerResourceT innerObject, ManagerT manager)
    content.vb: Protected Sub New(name As String, innerObject As InnerResourceT, manager As ManagerT)
    parameters:
    - id: name
      type: System.String
    - id: innerObject
      type: '{InnerResourceT}'
    - id: manager
      type: '{ManagerT}'
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableParentResource(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags).GroupableParentResource(System.String, InnerResourceT, ManagerT)
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableParentResource`9.CreateInner
  commentId: M:Microsoft.Azure.Management.Fluent.Resource.Core.GroupableParentResource`9.CreateInner
  id: CreateInner
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableParentResource`9
  langs:
  - csharp
  - vb
  name: CreateInner()
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableParentResource<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags>.CreateInner()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/GroupableParentResource.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateInner
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/GroupableParentResource.cs
    startLine: 60
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Resource.Core
  syntax:
    content: protected abstract Task<InnerResourceT> CreateInner()
    content.vb: Protected MustOverride Function CreateInner As Task(Of InnerResourceT)
    return:
      type: System.Threading.Tasks.Task{{InnerResourceT}}
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableParentResource(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags).CreateInner()
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableParentResource`9.InitializeChildrenFromInner
  commentId: M:Microsoft.Azure.Management.Fluent.Resource.Core.GroupableParentResource`9.InitializeChildrenFromInner
  id: InitializeChildrenFromInner
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableParentResource`9
  langs:
  - csharp
  - vb
  name: InitializeChildrenFromInner()
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableParentResource<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags>.InitializeChildrenFromInner()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/GroupableParentResource.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: InitializeChildrenFromInner
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/GroupableParentResource.cs
    startLine: 62
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Resource.Core
  syntax:
    content: protected abstract void InitializeChildrenFromInner()
    content.vb: Protected MustOverride Sub InitializeChildrenFromInner
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableParentResource(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags).InitializeChildrenFromInner()
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableParentResource`9.BeforeCreating
  commentId: M:Microsoft.Azure.Management.Fluent.Resource.Core.GroupableParentResource`9.BeforeCreating
  id: BeforeCreating
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableParentResource`9
  langs:
  - csharp
  - vb
  name: BeforeCreating()
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableParentResource<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags>.BeforeCreating()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/GroupableParentResource.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BeforeCreating
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/GroupableParentResource.cs
    startLine: 64
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Resource.Core
  syntax:
    content: protected abstract void BeforeCreating()
    content.vb: Protected MustOverride Sub BeforeCreating
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableParentResource(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags).BeforeCreating()
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableParentResource`9.AfterCreating
  commentId: M:Microsoft.Azure.Management.Fluent.Resource.Core.GroupableParentResource`9.AfterCreating
  id: AfterCreating
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableParentResource`9
  langs:
  - csharp
  - vb
  name: AfterCreating()
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableParentResource<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags>.AfterCreating()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/GroupableParentResource.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AfterCreating
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/GroupableParentResource.cs
    startLine: 66
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Resource.Core
  syntax:
    content: protected abstract void AfterCreating()
    content.vb: Protected MustOverride Sub AfterCreating
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableParentResource(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags).AfterCreating()
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableParentResource`9.CreateResourceAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Fluent.Resource.Core.GroupableParentResource`9.CreateResourceAsync(System.Threading.CancellationToken)
  id: CreateResourceAsync(System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableParentResource`9
  langs:
  - csharp
  - vb
  name: CreateResourceAsync(CancellationToken)
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableParentResource<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags>.CreateResourceAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/GroupableParentResource.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateResourceAsync
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/GroupableParentResource.cs
    startLine: 68
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Resource.Core
  syntax:
    content: public override Task<IFluentResourceT> CreateResourceAsync(CancellationToken cancellationToken)
    content.vb: Public Overrides Function CreateResourceAsync(cancellationToken As CancellationToken) As Task(Of IFluentResourceT)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{{IFluentResourceT}}
  overridden: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable{{IFluentResourceT},{InnerResourceT},{FluentResourceT},Microsoft.Azure.Management.Fluent.Resource.Core.IResource}.CreateResourceAsync(System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.Azure.Management.Fluent.Resource.Core.GroupableParentResource(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags).CreateResourceAsync(System.Threading.CancellationToken)
references:
- uid: Microsoft.Azure.Management.Fluent.Resource.Core
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Resource.Core
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.Indexable
  parent: Microsoft.Azure.Management.Fluent.Resource.Core
  isExternal: false
  name: Indexable
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.Indexable
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshable{{IFluentResourceT}}
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshable`1
  name: IndexableRefreshable<IFluentResourceT>
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshable<IFluentResourceT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshable(Of IFluentResourceT)
  name.vb: IndexableRefreshable(Of IFluentResourceT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshable`1
    name: IndexableRefreshable
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshable
  - name: <
    fullName: <
  - name: IFluentResourceT
    fullName: IFluentResourceT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshable`1
    name: IndexableRefreshable
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshable
  - name: '(Of '
    fullName: '(Of '
  - name: IFluentResourceT
    fullName: IFluentResourceT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshableWrapper{{IFluentResourceT},{InnerResourceT}}
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshableWrapper`2
  name: IndexableRefreshableWrapper<IFluentResourceT, InnerResourceT>
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshableWrapper<IFluentResourceT, InnerResourceT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshableWrapper(Of IFluentResourceT, InnerResourceT)
  name.vb: IndexableRefreshableWrapper(Of IFluentResourceT, InnerResourceT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshableWrapper`2
    name: IndexableRefreshableWrapper
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshableWrapper
  - name: <
    fullName: <
  - name: IFluentResourceT
    fullName: IFluentResourceT
  - name: ', '
    fullName: ', '
  - name: InnerResourceT
    fullName: InnerResourceT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshableWrapper`2
    name: IndexableRefreshableWrapper
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshableWrapper
  - name: '(Of '
    fullName: '(Of '
  - name: IFluentResourceT
    fullName: IFluentResourceT
  - name: ', '
    fullName: ', '
  - name: InnerResourceT
    fullName: InnerResourceT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable{{IFluentResourceT},{InnerResourceT},{FluentResourceT},Microsoft.Azure.Management.Fluent.Resource.Core.IResource}
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4
  name: Creatable<IFluentResourceT, InnerResourceT, FluentResourceT, IResource>
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable<IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource>
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource)
  name.vb: Creatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, IResource)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4
    name: Creatable
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable
  - name: <
    fullName: <
  - name: IFluentResourceT
    fullName: IFluentResourceT
  - name: ', '
    fullName: ', '
  - name: InnerResourceT
    fullName: InnerResourceT
  - name: ', '
    fullName: ', '
  - name: FluentResourceT
    fullName: FluentResourceT
  - name: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.IResource
    name: IResource
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.IResource
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4
    name: Creatable
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable
  - name: '(Of '
    fullName: '(Of '
  - name: IFluentResourceT
    fullName: IFluentResourceT
  - name: ', '
    fullName: ', '
  - name: InnerResourceT
    fullName: InnerResourceT
  - name: ', '
    fullName: ', '
  - name: FluentResourceT
    fullName: FluentResourceT
  - name: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.IResource
    name: IResource
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.IResource
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable{{IFluentResourceT},{InnerResourceT},{FluentResourceT},Microsoft.Azure.Management.Fluent.Resource.Core.IResource,{UTypeWithTags}}
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable`5
  name: CreatableUpdatable<IFluentResourceT, InnerResourceT, FluentResourceT, IResource, UTypeWithTags>
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable<IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource, UTypeWithTags>
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource, UTypeWithTags)
  name.vb: CreatableUpdatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, IResource, UTypeWithTags)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable`5
    name: CreatableUpdatable
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable
  - name: <
    fullName: <
  - name: IFluentResourceT
    fullName: IFluentResourceT
  - name: ', '
    fullName: ', '
  - name: InnerResourceT
    fullName: InnerResourceT
  - name: ', '
    fullName: ', '
  - name: FluentResourceT
    fullName: FluentResourceT
  - name: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.IResource
    name: IResource
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.IResource
  - name: ', '
    fullName: ', '
  - name: UTypeWithTags
    fullName: UTypeWithTags
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable`5
    name: CreatableUpdatable
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable
  - name: '(Of '
    fullName: '(Of '
  - name: IFluentResourceT
    fullName: IFluentResourceT
  - name: ', '
    fullName: ', '
  - name: InnerResourceT
    fullName: InnerResourceT
  - name: ', '
    fullName: ', '
  - name: FluentResourceT
    fullName: FluentResourceT
  - name: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.IResource
    name: IResource
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.IResource
  - name: ', '
    fullName: ', '
  - name: UTypeWithTags
    fullName: UTypeWithTags
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}
  parent: Microsoft.Azure.Management.Fluent.Resource.Core
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7
  name: ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags>
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags>
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags)
  name.vb: ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7
    name: ResourceBase
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase
  - name: <
    fullName: <
  - name: IFluentResourceT
    fullName: IFluentResourceT
  - name: ', '
    fullName: ', '
  - name: InnerResourceT
    fullName: InnerResourceT
  - name: ', '
    fullName: ', '
  - name: InnerResourceBaseT
    fullName: InnerResourceBaseT
  - name: ', '
    fullName: ', '
  - name: FluentResourceT
    fullName: FluentResourceT
  - name: ', '
    fullName: ', '
  - name: IDefinitionAfterRegion
    fullName: IDefinitionAfterRegion
  - name: ', '
    fullName: ', '
  - name: DefTypeWithTags
    fullName: DefTypeWithTags
  - name: ', '
    fullName: ', '
  - name: UTypeWithTags
    fullName: UTypeWithTags
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7
    name: ResourceBase
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase
  - name: '(Of '
    fullName: '(Of '
  - name: IFluentResourceT
    fullName: IFluentResourceT
  - name: ', '
    fullName: ', '
  - name: InnerResourceT
    fullName: InnerResourceT
  - name: ', '
    fullName: ', '
  - name: InnerResourceBaseT
    fullName: InnerResourceBaseT
  - name: ', '
    fullName: ', '
  - name: FluentResourceT
    fullName: FluentResourceT
  - name: ', '
    fullName: ', '
  - name: IDefinitionAfterRegion
    fullName: IDefinitionAfterRegion
  - name: ', '
    fullName: ', '
  - name: DefTypeWithTags
    fullName: DefTypeWithTags
  - name: ', '
    fullName: ', '
  - name: UTypeWithTags
    fullName: UTypeWithTags
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.GroupableResource{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{ManagerT},{IDefinitionAfterRegion},{IDefinitionAfterResourceGroup},{DefTypeWithTags},{UTypeWithTags}}
  parent: Microsoft.Azure.Management.Fluent.Resource
  definition: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9
  name: GroupableResource<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags>
  fullName: Microsoft.Azure.Management.Fluent.Resource.GroupableResource<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags>
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.GroupableResource(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags)
  name.vb: GroupableResource(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9
    name: GroupableResource
    fullName: Microsoft.Azure.Management.Fluent.Resource.GroupableResource
  - name: <
    fullName: <
  - name: IFluentResourceT
    fullName: IFluentResourceT
  - name: ', '
    fullName: ', '
  - name: InnerResourceT
    fullName: InnerResourceT
  - name: ', '
    fullName: ', '
  - name: InnerResourceBaseT
    fullName: InnerResourceBaseT
  - name: ', '
    fullName: ', '
  - name: FluentResourceT
    fullName: FluentResourceT
  - name: ', '
    fullName: ', '
  - name: ManagerT
    fullName: ManagerT
  - name: ', '
    fullName: ', '
  - name: IDefinitionAfterRegion
    fullName: IDefinitionAfterRegion
  - name: ', '
    fullName: ', '
  - name: IDefinitionAfterResourceGroup
    fullName: IDefinitionAfterResourceGroup
  - name: ', '
    fullName: ', '
  - name: DefTypeWithTags
    fullName: DefTypeWithTags
  - name: ', '
    fullName: ', '
  - name: UTypeWithTags
    fullName: UTypeWithTags
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9
    name: GroupableResource
    fullName: Microsoft.Azure.Management.Fluent.Resource.GroupableResource
  - name: '(Of '
    fullName: '(Of '
  - name: IFluentResourceT
    fullName: IFluentResourceT
  - name: ', '
    fullName: ', '
  - name: InnerResourceT
    fullName: InnerResourceT
  - name: ', '
    fullName: ', '
  - name: InnerResourceBaseT
    fullName: InnerResourceBaseT
  - name: ', '
    fullName: ', '
  - name: FluentResourceT
    fullName: FluentResourceT
  - name: ', '
    fullName: ', '
  - name: ManagerT
    fullName: ManagerT
  - name: ', '
    fullName: ', '
  - name: IDefinitionAfterRegion
    fullName: IDefinitionAfterRegion
  - name: ', '
    fullName: ', '
  - name: IDefinitionAfterResourceGroup
    fullName: IDefinitionAfterResourceGroup
  - name: ', '
    fullName: ', '
  - name: DefTypeWithTags
    fullName: DefTypeWithTags
  - name: ', '
    fullName: ', '
  - name: UTypeWithTags
    fullName: UTypeWithTags
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IRefreshable{{IFluentResourceT}}
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IRefreshable`1
  name: IRefreshable<IFluentResourceT>
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IRefreshable<IFluentResourceT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IRefreshable(Of IFluentResourceT)
  name.vb: IRefreshable(Of IFluentResourceT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IRefreshable`1
    name: IRefreshable
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IRefreshable
  - name: <
    fullName: <
  - name: IFluentResourceT
    fullName: IFluentResourceT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IRefreshable`1
    name: IRefreshable
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IRefreshable
  - name: '(Of '
    fullName: '(Of '
  - name: IFluentResourceT
    fullName: IFluentResourceT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper{{InnerResourceT}}
  parent: Microsoft.Azure.Management.Fluent.Resource.Core
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper`1
  name: IWrapper<InnerResourceT>
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper<InnerResourceT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper(Of InnerResourceT)
  name.vb: IWrapper(Of InnerResourceT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper`1
    name: IWrapper
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper
  - name: <
    fullName: <
  - name: InnerResourceT
    fullName: InnerResourceT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper`1
    name: IWrapper
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper
  - name: '(Of '
    fullName: '(Of '
  - name: InnerResourceT
    fullName: InnerResourceT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator{Microsoft.Azure.Management.Fluent.Resource.Core.IResource}
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator`1
  name: IResourceCreator<IResource>
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator<Microsoft.Azure.Management.Fluent.Resource.Core.IResource>
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator(Of Microsoft.Azure.Management.Fluent.Resource.Core.IResource)
  name.vb: IResourceCreator(Of IResource)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator`1
    name: IResourceCreator
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.IResource
    name: IResource
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.IResource
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator`1
    name: IResourceCreator
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.IResource
    name: IResource
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.IResource
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.ICreatable{{IFluentResourceT}}
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.ICreatable`1
  name: ICreatable<IFluentResourceT>
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.ICreatable<IFluentResourceT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.ICreatable(Of IFluentResourceT)
  name.vb: ICreatable(Of IFluentResourceT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.ICreatable`1
    name: ICreatable
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.ICreatable
  - name: <
    fullName: <
  - name: IFluentResourceT
    fullName: IFluentResourceT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.ICreatable`1
    name: ICreatable
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.ICreatable
  - name: '(Of '
    fullName: '(Of '
  - name: IFluentResourceT
    fullName: IFluentResourceT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IUpdatable{{UTypeWithTags}}
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IUpdatable`1
  name: IUpdatable<UTypeWithTags>
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IUpdatable<UTypeWithTags>
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IUpdatable(Of UTypeWithTags)
  name.vb: IUpdatable(Of UTypeWithTags)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IUpdatable`1
    name: IUpdatable
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IUpdatable
  - name: <
    fullName: <
  - name: UTypeWithTags
    fullName: UTypeWithTags
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IUpdatable`1
    name: IUpdatable
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IUpdatable
  - name: '(Of '
    fullName: '(Of '
  - name: UTypeWithTags
    fullName: UTypeWithTags
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Definition.IDefinitionWithTags{{DefTypeWithTags}}
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Definition
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Definition.IDefinitionWithTags`1
  name: IDefinitionWithTags<DefTypeWithTags>
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Definition.IDefinitionWithTags<DefTypeWithTags>
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Definition.IDefinitionWithTags(Of DefTypeWithTags)
  name.vb: IDefinitionWithTags(Of DefTypeWithTags)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Definition.IDefinitionWithTags`1
    name: IDefinitionWithTags
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Definition.IDefinitionWithTags
  - name: <
    fullName: <
  - name: DefTypeWithTags
    fullName: DefTypeWithTags
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Definition.IDefinitionWithTags`1
    name: IDefinitionWithTags
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Definition.IDefinitionWithTags
  - name: '(Of '
    fullName: '(Of '
  - name: DefTypeWithTags
    fullName: DefTypeWithTags
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags{{UTypeWithTags}}
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags`1
  name: IUpdateWithTags<UTypeWithTags>
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags<UTypeWithTags>
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags(Of UTypeWithTags)
  name.vb: IUpdateWithTags(Of UTypeWithTags)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags`1
    name: IUpdateWithTags
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags
  - name: <
    fullName: <
  - name: UTypeWithTags
    fullName: UTypeWithTags
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags`1
    name: IUpdateWithTags
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags
  - name: '(Of '
    fullName: '(Of '
  - name: UTypeWithTags
    fullName: UTypeWithTags
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.IGroupableResource
  parent: Microsoft.Azure.Management.Fluent.Resource.Core
  isExternal: false
  name: IGroupableResource
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.IGroupableResource
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.IResource
  parent: Microsoft.Azure.Management.Fluent.Resource.Core
  isExternal: false
  name: IResource
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.IResource
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IIndexable
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions
  isExternal: false
  name: IIndexable
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IIndexable
- uid: Microsoft.Azure.Management.Fluent.Resource.GroupableResource{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{ManagerT},{IDefinitionAfterRegion},{IDefinitionAfterResourceGroup},{DefTypeWithTags},{UTypeWithTags}}.newGroup
  parent: Microsoft.Azure.Management.Fluent.Resource.GroupableResource{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{ManagerT},{IDefinitionAfterRegion},{IDefinitionAfterResourceGroup},{DefTypeWithTags},{UTypeWithTags}}
  definition: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9.newGroup
  name: newGroup
  fullName: Microsoft.Azure.Management.Fluent.Resource.GroupableResource<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags>.newGroup
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.GroupableResource(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags).newGroup
- uid: Microsoft.Azure.Management.Fluent.Resource.GroupableResource{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{ManagerT},{IDefinitionAfterRegion},{IDefinitionAfterResourceGroup},{DefTypeWithTags},{UTypeWithTags}}.Manager
  parent: Microsoft.Azure.Management.Fluent.Resource.GroupableResource{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{ManagerT},{IDefinitionAfterRegion},{IDefinitionAfterResourceGroup},{DefTypeWithTags},{UTypeWithTags}}
  definition: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9.Manager
  name: Manager
  fullName: Microsoft.Azure.Management.Fluent.Resource.GroupableResource<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags>.Manager
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.GroupableResource(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags).Manager
- uid: Microsoft.Azure.Management.Fluent.Resource.GroupableResource{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{ManagerT},{IDefinitionAfterRegion},{IDefinitionAfterResourceGroup},{DefTypeWithTags},{UTypeWithTags}}.ResourceIdBase
  parent: Microsoft.Azure.Management.Fluent.Resource.GroupableResource{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{ManagerT},{IDefinitionAfterRegion},{IDefinitionAfterResourceGroup},{DefTypeWithTags},{UTypeWithTags}}
  definition: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9.ResourceIdBase
  name: ResourceIdBase
  fullName: Microsoft.Azure.Management.Fluent.Resource.GroupableResource<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags>.ResourceIdBase
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.GroupableResource(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags).ResourceIdBase
- uid: Microsoft.Azure.Management.Fluent.Resource.GroupableResource{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{ManagerT},{IDefinitionAfterRegion},{IDefinitionAfterResourceGroup},{DefTypeWithTags},{UTypeWithTags}}.ResourceGroupName
  parent: Microsoft.Azure.Management.Fluent.Resource.GroupableResource{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{ManagerT},{IDefinitionAfterRegion},{IDefinitionAfterResourceGroup},{DefTypeWithTags},{UTypeWithTags}}
  definition: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9.ResourceGroupName
  name: ResourceGroupName
  fullName: Microsoft.Azure.Management.Fluent.Resource.GroupableResource<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags>.ResourceGroupName
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.GroupableResource(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags).ResourceGroupName
- uid: Microsoft.Azure.Management.Fluent.Resource.GroupableResource{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{ManagerT},{IDefinitionAfterRegion},{IDefinitionAfterResourceGroup},{DefTypeWithTags},{UTypeWithTags}}.WithNewResourceGroup
  parent: Microsoft.Azure.Management.Fluent.Resource.GroupableResource{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{ManagerT},{IDefinitionAfterRegion},{IDefinitionAfterResourceGroup},{DefTypeWithTags},{UTypeWithTags}}
  definition: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9.WithNewResourceGroup
  name: WithNewResourceGroup()
  fullName: Microsoft.Azure.Management.Fluent.Resource.GroupableResource<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags>.WithNewResourceGroup()
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.GroupableResource(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags).WithNewResourceGroup()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9.WithNewResourceGroup
    name: WithNewResourceGroup
    fullName: Microsoft.Azure.Management.Fluent.Resource.GroupableResource<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags>.WithNewResourceGroup
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9.WithNewResourceGroup
    name: WithNewResourceGroup
    fullName: Microsoft.Azure.Management.Fluent.Resource.GroupableResource(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags).WithNewResourceGroup
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.GroupableResource{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{ManagerT},{IDefinitionAfterRegion},{IDefinitionAfterResourceGroup},{DefTypeWithTags},{UTypeWithTags}}.WithNewResourceGroup(System.String)
  parent: Microsoft.Azure.Management.Fluent.Resource.GroupableResource{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{ManagerT},{IDefinitionAfterRegion},{IDefinitionAfterResourceGroup},{DefTypeWithTags},{UTypeWithTags}}
  definition: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9.WithNewResourceGroup(System.String)
  name: WithNewResourceGroup(String)
  fullName: Microsoft.Azure.Management.Fluent.Resource.GroupableResource<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags>.WithNewResourceGroup(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.GroupableResource(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags).WithNewResourceGroup(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9.WithNewResourceGroup(System.String)
    name: WithNewResourceGroup
    fullName: Microsoft.Azure.Management.Fluent.Resource.GroupableResource<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags>.WithNewResourceGroup
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9.WithNewResourceGroup(System.String)
    name: WithNewResourceGroup
    fullName: Microsoft.Azure.Management.Fluent.Resource.GroupableResource(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags).WithNewResourceGroup
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.GroupableResource{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{ManagerT},{IDefinitionAfterRegion},{IDefinitionAfterResourceGroup},{DefTypeWithTags},{UTypeWithTags}}.WithNewResourceGroup(Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.ICreatable{Microsoft.Azure.Management.Fluent.Resource.IResourceGroup})
  parent: Microsoft.Azure.Management.Fluent.Resource.GroupableResource{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{ManagerT},{IDefinitionAfterRegion},{IDefinitionAfterResourceGroup},{DefTypeWithTags},{UTypeWithTags}}
  definition: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9.WithNewResourceGroup(Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.ICreatable{Microsoft.Azure.Management.Fluent.Resource.IResourceGroup})
  name: WithNewResourceGroup(ICreatable<IResourceGroup>)
  fullName: Microsoft.Azure.Management.Fluent.Resource.GroupableResource<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags>.WithNewResourceGroup(Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.ICreatable<Microsoft.Azure.Management.Fluent.Resource.IResourceGroup>)
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.GroupableResource(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags).WithNewResourceGroup(Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.ICreatable(Of Microsoft.Azure.Management.Fluent.Resource.IResourceGroup))
  name.vb: WithNewResourceGroup(ICreatable(Of IResourceGroup))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9.WithNewResourceGroup(Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.ICreatable{Microsoft.Azure.Management.Fluent.Resource.IResourceGroup})
    name: WithNewResourceGroup
    fullName: Microsoft.Azure.Management.Fluent.Resource.GroupableResource<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags>.WithNewResourceGroup
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.ICreatable`1
    name: ICreatable
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.ICreatable
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Resource.IResourceGroup
    name: IResourceGroup
    fullName: Microsoft.Azure.Management.Fluent.Resource.IResourceGroup
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9.WithNewResourceGroup(Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.ICreatable{Microsoft.Azure.Management.Fluent.Resource.IResourceGroup})
    name: WithNewResourceGroup
    fullName: Microsoft.Azure.Management.Fluent.Resource.GroupableResource(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags).WithNewResourceGroup
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.ICreatable`1
    name: ICreatable
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.ICreatable
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Resource.IResourceGroup
    name: IResourceGroup
    fullName: Microsoft.Azure.Management.Fluent.Resource.IResourceGroup
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.GroupableResource{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{ManagerT},{IDefinitionAfterRegion},{IDefinitionAfterResourceGroup},{DefTypeWithTags},{UTypeWithTags}}.WithExistingResourceGroup(System.String)
  parent: Microsoft.Azure.Management.Fluent.Resource.GroupableResource{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{ManagerT},{IDefinitionAfterRegion},{IDefinitionAfterResourceGroup},{DefTypeWithTags},{UTypeWithTags}}
  definition: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9.WithExistingResourceGroup(System.String)
  name: WithExistingResourceGroup(String)
  fullName: Microsoft.Azure.Management.Fluent.Resource.GroupableResource<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags>.WithExistingResourceGroup(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.GroupableResource(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags).WithExistingResourceGroup(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9.WithExistingResourceGroup(System.String)
    name: WithExistingResourceGroup
    fullName: Microsoft.Azure.Management.Fluent.Resource.GroupableResource<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags>.WithExistingResourceGroup
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9.WithExistingResourceGroup(System.String)
    name: WithExistingResourceGroup
    fullName: Microsoft.Azure.Management.Fluent.Resource.GroupableResource(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags).WithExistingResourceGroup
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.GroupableResource{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{ManagerT},{IDefinitionAfterRegion},{IDefinitionAfterResourceGroup},{DefTypeWithTags},{UTypeWithTags}}.WithExistingResourceGroup(Microsoft.Azure.Management.Fluent.Resource.IResourceGroup)
  parent: Microsoft.Azure.Management.Fluent.Resource.GroupableResource{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{ManagerT},{IDefinitionAfterRegion},{IDefinitionAfterResourceGroup},{DefTypeWithTags},{UTypeWithTags}}
  definition: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9.WithExistingResourceGroup(Microsoft.Azure.Management.Fluent.Resource.IResourceGroup)
  name: WithExistingResourceGroup(IResourceGroup)
  fullName: Microsoft.Azure.Management.Fluent.Resource.GroupableResource<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags>.WithExistingResourceGroup(Microsoft.Azure.Management.Fluent.Resource.IResourceGroup)
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.GroupableResource(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags).WithExistingResourceGroup(Microsoft.Azure.Management.Fluent.Resource.IResourceGroup)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9.WithExistingResourceGroup(Microsoft.Azure.Management.Fluent.Resource.IResourceGroup)
    name: WithExistingResourceGroup
    fullName: Microsoft.Azure.Management.Fluent.Resource.GroupableResource<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags>.WithExistingResourceGroup
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Resource.IResourceGroup
    name: IResourceGroup
    fullName: Microsoft.Azure.Management.Fluent.Resource.IResourceGroup
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9.WithExistingResourceGroup(Microsoft.Azure.Management.Fluent.Resource.IResourceGroup)
    name: WithExistingResourceGroup
    fullName: Microsoft.Azure.Management.Fluent.Resource.GroupableResource(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags).WithExistingResourceGroup
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Resource.IResourceGroup
    name: IResourceGroup
    fullName: Microsoft.Azure.Management.Fluent.Resource.IResourceGroup
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}.Id
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.Id
  name: Id
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags>.Id
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags).Id
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}.Name
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.Name
  name: Name
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags>.Name
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags).Name
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}.RegionName
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.RegionName
  name: RegionName
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags>.RegionName
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags).RegionName
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}.Type
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.Type
  name: Type
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags>.Type
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags).Type
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}.Tags
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.Tags
  name: Tags
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags>.Tags
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags).Tags
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}.InnersFromWrappers``2(System.Collections.Generic.ICollection{{IWrapperT}},System.Collections.Generic.IList{{InnerT}})
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.InnersFromWrappers``2(System.Collections.Generic.ICollection{``1},System.Collections.Generic.IList{``0})
  name: InnersFromWrappers<InnerT, IWrapperT>(ICollection<IWrapperT>, IList<InnerT>)
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags>.InnersFromWrappers<InnerT, IWrapperT>(System.Collections.Generic.ICollection<IWrapperT>, System.Collections.Generic.IList<InnerT>)
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags).InnersFromWrappers(Of InnerT, IWrapperT)(System.Collections.Generic.ICollection(Of IWrapperT), System.Collections.Generic.IList(Of InnerT))
  name.vb: InnersFromWrappers(Of InnerT, IWrapperT)(ICollection(Of IWrapperT), IList(Of InnerT))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.InnersFromWrappers``2(System.Collections.Generic.ICollection{``1},System.Collections.Generic.IList{``0})
    name: InnersFromWrappers<InnerT, IWrapperT>
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags>.InnersFromWrappers<InnerT, IWrapperT>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    fullName: <
  - name: IWrapperT
    fullName: IWrapperT
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: InnerT
    fullName: InnerT
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.InnersFromWrappers``2(System.Collections.Generic.ICollection{``1},System.Collections.Generic.IList{``0})
    name: InnersFromWrappers(Of InnerT, IWrapperT)
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags).InnersFromWrappers(Of InnerT, IWrapperT)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: IWrapperT
    fullName: IWrapperT
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: InnerT
    fullName: InnerT
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}.InnersFromWrappers``2(System.Collections.Generic.ICollection{{IWrapperT}})
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.InnersFromWrappers``2(System.Collections.Generic.ICollection{``1})
  name: InnersFromWrappers<InnerT, IWrapperT>(ICollection<IWrapperT>)
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags>.InnersFromWrappers<InnerT, IWrapperT>(System.Collections.Generic.ICollection<IWrapperT>)
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags).InnersFromWrappers(Of InnerT, IWrapperT)(System.Collections.Generic.ICollection(Of IWrapperT))
  name.vb: InnersFromWrappers(Of InnerT, IWrapperT)(ICollection(Of IWrapperT))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.InnersFromWrappers``2(System.Collections.Generic.ICollection{``1})
    name: InnersFromWrappers<InnerT, IWrapperT>
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags>.InnersFromWrappers<InnerT, IWrapperT>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    fullName: <
  - name: IWrapperT
    fullName: IWrapperT
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.InnersFromWrappers``2(System.Collections.Generic.ICollection{``1})
    name: InnersFromWrappers(Of InnerT, IWrapperT)
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags).InnersFromWrappers(Of InnerT, IWrapperT)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: IWrapperT
    fullName: IWrapperT
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}.IsInCreateMode
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.IsInCreateMode
  name: IsInCreateMode
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags>.IsInCreateMode
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags).IsInCreateMode
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}.Region
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.Region
  name: Region
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags>.Region
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags).Region
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}.Microsoft#Azure#Management#Fluent#Resource#Core#IResource#Tags
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.Microsoft#Azure#Management#Fluent#Resource#Core#IResource#Tags
  name: IResource.Tags
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags>.Microsoft.Azure.Management.Fluent.Resource.Core.IResource.Tags
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags).Microsoft.Azure.Management.Fluent.Resource.Core.IResource.Tags
  name.vb: Microsoft.Azure.Management.Fluent.Resource.Core.IResource.Tags
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}.WithRegion(System.String)
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.WithRegion(System.String)
  name: WithRegion(String)
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags>.WithRegion(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags).WithRegion(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.WithRegion(System.String)
    name: WithRegion
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags>.WithRegion
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.WithRegion(System.String)
    name: WithRegion
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags).WithRegion
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}.WithRegion(Microsoft.Azure.Management.Fluent.Resource.Core.Region)
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.WithRegion(Microsoft.Azure.Management.Fluent.Resource.Core.Region)
  name: WithRegion(Region)
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags>.WithRegion(Microsoft.Azure.Management.Fluent.Resource.Core.Region)
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags).WithRegion(Microsoft.Azure.Management.Fluent.Resource.Core.Region)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.WithRegion(Microsoft.Azure.Management.Fluent.Resource.Core.Region)
    name: WithRegion
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags>.WithRegion
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.Region
    name: Region
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.Region
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.WithRegion(Microsoft.Azure.Management.Fluent.Resource.Core.Region)
    name: WithRegion
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags).WithRegion
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.Region
    name: Region
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.Region
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}.WithTags(System.Collections.Generic.IDictionary{System.String,System.String})
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.WithTags(System.Collections.Generic.IDictionary{System.String,System.String})
  name: WithTags(IDictionary<String, String>)
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags>.WithTags(System.Collections.Generic.IDictionary<System.String, System.String>)
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags).WithTags(System.Collections.Generic.IDictionary(Of System.String, System.String))
  name.vb: WithTags(IDictionary(Of String, String))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.WithTags(System.Collections.Generic.IDictionary{System.String,System.String})
    name: WithTags
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags>.WithTags
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.WithTags(System.Collections.Generic.IDictionary{System.String,System.String})
    name: WithTags
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags).WithTags
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}.WithTag(System.String,System.String)
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.WithTag(System.String,System.String)
  name: WithTag(String, String)
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags>.WithTag(System.String, System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags).WithTag(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.WithTag(System.String,System.String)
    name: WithTag
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags>.WithTag
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.WithTag(System.String,System.String)
    name: WithTag
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags).WithTag
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}.WithoutTag(System.String)
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.WithoutTag(System.String)
  name: WithoutTag(String)
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags>.WithoutTag(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags).WithoutTag(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.WithoutTag(System.String)
    name: WithoutTag
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags>.WithoutTag
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.WithoutTag(System.String)
    name: WithoutTag
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags).WithoutTag
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}.Microsoft#Azure#Management#Fluent#Resource#Core#Resource#Definition#IDefinitionWithTags{DefTypeWithTags}#WithTag(System.String,System.String)
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.Microsoft#Azure#Management#Fluent#Resource#Core#Resource#Definition#IDefinitionWithTags{DefTypeWithTags}#WithTag(System.String,System.String)
  name: IDefinitionWithTags<DefTypeWithTags>.WithTag(String, String)
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags>.Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Definition.IDefinitionWithTags<DefTypeWithTags>.WithTag(System.String, System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags).Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Definition.IDefinitionWithTags<DefTypeWithTags>.WithTag(System.String, System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Definition.IDefinitionWithTags<DefTypeWithTags>.WithTag(String, String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.Microsoft#Azure#Management#Fluent#Resource#Core#Resource#Definition#IDefinitionWithTags{DefTypeWithTags}#WithTag(System.String,System.String)
    name: IDefinitionWithTags<DefTypeWithTags>.WithTag
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags>.Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Definition.IDefinitionWithTags<DefTypeWithTags>.WithTag
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.Microsoft#Azure#Management#Fluent#Resource#Core#Resource#Definition#IDefinitionWithTags{DefTypeWithTags}#WithTag(System.String,System.String)
    name: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Definition.IDefinitionWithTags<DefTypeWithTags>.WithTag
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags).Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Definition.IDefinitionWithTags<DefTypeWithTags>.WithTag
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}.Microsoft#Azure#Management#Fluent#Resource#Core#Resource#Definition#IDefinitionWithTags{DefTypeWithTags}#WithTags(System.Collections.Generic.IDictionary{System.String,System.String})
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.Microsoft#Azure#Management#Fluent#Resource#Core#Resource#Definition#IDefinitionWithTags{DefTypeWithTags}#WithTags(System.Collections.Generic.IDictionary{System.String,System.String})
  name: IDefinitionWithTags<DefTypeWithTags>.WithTags(IDictionary<String, String>)
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags>.Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Definition.IDefinitionWithTags<DefTypeWithTags>.WithTags(System.Collections.Generic.IDictionary<System.String, System.String>)
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags).Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Definition.IDefinitionWithTags<DefTypeWithTags>.WithTags(System.Collections.Generic.IDictionary(Of System.String, System.String))
  name.vb: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Definition.IDefinitionWithTags<DefTypeWithTags>.WithTags(IDictionary(Of String, String))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.Microsoft#Azure#Management#Fluent#Resource#Core#Resource#Definition#IDefinitionWithTags{DefTypeWithTags}#WithTags(System.Collections.Generic.IDictionary{System.String,System.String})
    name: IDefinitionWithTags<DefTypeWithTags>.WithTags
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags>.Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Definition.IDefinitionWithTags<DefTypeWithTags>.WithTags
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.Microsoft#Azure#Management#Fluent#Resource#Core#Resource#Definition#IDefinitionWithTags{DefTypeWithTags}#WithTags(System.Collections.Generic.IDictionary{System.String,System.String})
    name: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Definition.IDefinitionWithTags<DefTypeWithTags>.WithTags
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags).Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Definition.IDefinitionWithTags<DefTypeWithTags>.WithTags
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}.Microsoft#Azure#Management#Fluent#Resource#Core#Resource#Update#IUpdateWithTags{UTypeWithTags}#WithTag(System.String,System.String)
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.Microsoft#Azure#Management#Fluent#Resource#Core#Resource#Update#IUpdateWithTags{UTypeWithTags}#WithTag(System.String,System.String)
  name: IUpdateWithTags<UTypeWithTags>.WithTag(String, String)
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags>.Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags<UTypeWithTags>.WithTag(System.String, System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags).Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags<UTypeWithTags>.WithTag(System.String, System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags<UTypeWithTags>.WithTag(String, String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.Microsoft#Azure#Management#Fluent#Resource#Core#Resource#Update#IUpdateWithTags{UTypeWithTags}#WithTag(System.String,System.String)
    name: IUpdateWithTags<UTypeWithTags>.WithTag
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags>.Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags<UTypeWithTags>.WithTag
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.Microsoft#Azure#Management#Fluent#Resource#Core#Resource#Update#IUpdateWithTags{UTypeWithTags}#WithTag(System.String,System.String)
    name: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags<UTypeWithTags>.WithTag
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags).Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags<UTypeWithTags>.WithTag
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}.Microsoft#Azure#Management#Fluent#Resource#Core#Resource#Update#IUpdateWithTags{UTypeWithTags}#WithTags(System.Collections.Generic.IDictionary{System.String,System.String})
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.Microsoft#Azure#Management#Fluent#Resource#Core#Resource#Update#IUpdateWithTags{UTypeWithTags}#WithTags(System.Collections.Generic.IDictionary{System.String,System.String})
  name: IUpdateWithTags<UTypeWithTags>.WithTags(IDictionary<String, String>)
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags>.Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags<UTypeWithTags>.WithTags(System.Collections.Generic.IDictionary<System.String, System.String>)
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags).Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags<UTypeWithTags>.WithTags(System.Collections.Generic.IDictionary(Of System.String, System.String))
  name.vb: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags<UTypeWithTags>.WithTags(IDictionary(Of String, String))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.Microsoft#Azure#Management#Fluent#Resource#Core#Resource#Update#IUpdateWithTags{UTypeWithTags}#WithTags(System.Collections.Generic.IDictionary{System.String,System.String})
    name: IUpdateWithTags<UTypeWithTags>.WithTags
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags>.Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags<UTypeWithTags>.WithTags
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.Microsoft#Azure#Management#Fluent#Resource#Core#Resource#Update#IUpdateWithTags{UTypeWithTags}#WithTags(System.Collections.Generic.IDictionary{System.String,System.String})
    name: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags<UTypeWithTags>.WithTags
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags).Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags<UTypeWithTags>.WithTags
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}.Microsoft#Azure#Management#Fluent#Resource#Core#Resource#Update#IUpdateWithTags{UTypeWithTags}#WithoutTag(System.String)
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase{{IFluentResourceT},{InnerResourceT},{InnerResourceBaseT},{FluentResourceT},{IDefinitionAfterRegion},{DefTypeWithTags},{UTypeWithTags}}
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.Microsoft#Azure#Management#Fluent#Resource#Core#Resource#Update#IUpdateWithTags{UTypeWithTags}#WithoutTag(System.String)
  name: IUpdateWithTags<UTypeWithTags>.WithoutTag(String)
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags>.Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags<UTypeWithTags>.WithoutTag(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags).Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags<UTypeWithTags>.WithoutTag(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags<UTypeWithTags>.WithoutTag(String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.Microsoft#Azure#Management#Fluent#Resource#Core#Resource#Update#IUpdateWithTags{UTypeWithTags}#WithoutTag(System.String)
    name: IUpdateWithTags<UTypeWithTags>.WithoutTag
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags>.Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags<UTypeWithTags>.WithoutTag
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.Microsoft#Azure#Management#Fluent#Resource#Core#Resource#Update#IUpdateWithTags{UTypeWithTags}#WithoutTag(System.String)
    name: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags<UTypeWithTags>.WithoutTag
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefinitionAfterRegion, DefTypeWithTags, UTypeWithTags).Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags<UTypeWithTags>.WithoutTag
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable{{IFluentResourceT},{InnerResourceT},{FluentResourceT},Microsoft.Azure.Management.Fluent.Resource.Core.IResource,{UTypeWithTags}}.Update
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable{{IFluentResourceT},{InnerResourceT},{FluentResourceT},Microsoft.Azure.Management.Fluent.Resource.Core.IResource,{UTypeWithTags}}
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable`5.Update
  name: Update()
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable<IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource, UTypeWithTags>.Update()
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource, UTypeWithTags).Update()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable`5.Update
    name: Update
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable<IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource, UTypeWithTags>.Update
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable`5.Update
    name: Update
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource, UTypeWithTags).Update
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable{{IFluentResourceT},{InnerResourceT},{FluentResourceT},Microsoft.Azure.Management.Fluent.Resource.Core.IResource,{UTypeWithTags}}.Apply
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable{{IFluentResourceT},{InnerResourceT},{FluentResourceT},Microsoft.Azure.Management.Fluent.Resource.Core.IResource,{UTypeWithTags}}
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable`5.Apply
  name: Apply()
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable<IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource, UTypeWithTags>.Apply()
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource, UTypeWithTags).Apply()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable`5.Apply
    name: Apply
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable<IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource, UTypeWithTags>.Apply
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable`5.Apply
    name: Apply
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource, UTypeWithTags).Apply
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable{{IFluentResourceT},{InnerResourceT},{FluentResourceT},Microsoft.Azure.Management.Fluent.Resource.Core.IResource,{UTypeWithTags}}.ApplyAsync(System.Threading.CancellationToken,System.Boolean)
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable{{IFluentResourceT},{InnerResourceT},{FluentResourceT},Microsoft.Azure.Management.Fluent.Resource.Core.IResource,{UTypeWithTags}}
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable`5.ApplyAsync(System.Threading.CancellationToken,System.Boolean)
  name: ApplyAsync(CancellationToken, Boolean)
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable<IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource, UTypeWithTags>.ApplyAsync(System.Threading.CancellationToken, System.Boolean)
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource, UTypeWithTags).ApplyAsync(System.Threading.CancellationToken, System.Boolean)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable`5.ApplyAsync(System.Threading.CancellationToken,System.Boolean)
    name: ApplyAsync
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable<IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource, UTypeWithTags>.ApplyAsync
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable`5.ApplyAsync(System.Threading.CancellationToken,System.Boolean)
    name: ApplyAsync
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource, UTypeWithTags).ApplyAsync
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable{{IFluentResourceT},{InnerResourceT},{FluentResourceT},Microsoft.Azure.Management.Fluent.Resource.Core.IResource}.Name
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable{{IFluentResourceT},{InnerResourceT},{FluentResourceT},Microsoft.Azure.Management.Fluent.Resource.Core.IResource}
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.Name
  name: Name
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable<IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource>.Name
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource).Name
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable{{IFluentResourceT},{InnerResourceT},{FluentResourceT},Microsoft.Azure.Management.Fluent.Resource.Core.IResource}.AddCreatableDependency(Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator{Microsoft.Azure.Management.Fluent.Resource.Core.IResource})
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable{{IFluentResourceT},{InnerResourceT},{FluentResourceT},Microsoft.Azure.Management.Fluent.Resource.Core.IResource}
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.AddCreatableDependency(Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator{`3})
  name: AddCreatableDependency(IResourceCreator<IResource>)
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable<IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource>.AddCreatableDependency(Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator<Microsoft.Azure.Management.Fluent.Resource.Core.IResource>)
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource).AddCreatableDependency(Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator(Of Microsoft.Azure.Management.Fluent.Resource.Core.IResource))
  name.vb: AddCreatableDependency(IResourceCreator(Of IResource))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.AddCreatableDependency(Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator{`3})
    name: AddCreatableDependency
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable<IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource>.AddCreatableDependency
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator`1
    name: IResourceCreator
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.IResource
    name: IResource
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.IResource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.AddCreatableDependency(Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator{`3})
    name: AddCreatableDependency
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource).AddCreatableDependency
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator`1
    name: IResourceCreator
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.IResource
    name: IResource
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.IResource
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable{{IFluentResourceT},{InnerResourceT},{FluentResourceT},Microsoft.Azure.Management.Fluent.Resource.Core.IResource}.Create
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable{{IFluentResourceT},{InnerResourceT},{FluentResourceT},Microsoft.Azure.Management.Fluent.Resource.Core.IResource}
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.Create
  name: Create()
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable<IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource>.Create()
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource).Create()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.Create
    name: Create
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable<IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource>.Create
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.Create
    name: Create
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource).Create
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable{{IFluentResourceT},{InnerResourceT},{FluentResourceT},Microsoft.Azure.Management.Fluent.Resource.Core.IResource}.CreateAsync(System.Threading.CancellationToken,System.Boolean)
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable{{IFluentResourceT},{InnerResourceT},{FluentResourceT},Microsoft.Azure.Management.Fluent.Resource.Core.IResource}
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.CreateAsync(System.Threading.CancellationToken,System.Boolean)
  name: CreateAsync(CancellationToken, Boolean)
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable<IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource>.CreateAsync(System.Threading.CancellationToken, System.Boolean)
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource).CreateAsync(System.Threading.CancellationToken, System.Boolean)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.CreateAsync(System.Threading.CancellationToken,System.Boolean)
    name: CreateAsync
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable<IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource>.CreateAsync
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.CreateAsync(System.Threading.CancellationToken,System.Boolean)
    name: CreateAsync
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource).CreateAsync
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable{{IFluentResourceT},{InnerResourceT},{FluentResourceT},Microsoft.Azure.Management.Fluent.Resource.Core.IResource}.CreatedResource(System.String)
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable{{IFluentResourceT},{InnerResourceT},{FluentResourceT},Microsoft.Azure.Management.Fluent.Resource.Core.IResource}
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.CreatedResource(System.String)
  name: CreatedResource(String)
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable<IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource>.CreatedResource(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource).CreatedResource(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.CreatedResource(System.String)
    name: CreatedResource
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable<IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource>.CreatedResource
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.CreatedResource(System.String)
    name: CreatedResource
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource).CreatedResource
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable{{IFluentResourceT},{InnerResourceT},{FluentResourceT},Microsoft.Azure.Management.Fluent.Resource.Core.IResource}.CreatorTaskGroup
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable{{IFluentResourceT},{InnerResourceT},{FluentResourceT},Microsoft.Azure.Management.Fluent.Resource.Core.IResource}
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.CreatorTaskGroup
  name: CreatorTaskGroup
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable<IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource>.CreatorTaskGroup
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource).CreatorTaskGroup
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable{{IFluentResourceT},{InnerResourceT},{FluentResourceT},Microsoft.Azure.Management.Fluent.Resource.Core.IResource}.CreateResourceAsync(System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable{{IFluentResourceT},{InnerResourceT},{FluentResourceT},Microsoft.Azure.Management.Fluent.Resource.Core.IResource}
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.CreateResourceAsync(System.Threading.CancellationToken)
  name: CreateResourceAsync(CancellationToken)
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable<IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource>.CreateResourceAsync(System.Threading.CancellationToken)
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource).CreateResourceAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.CreateResourceAsync(System.Threading.CancellationToken)
    name: CreateResourceAsync
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable<IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource>.CreateResourceAsync
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.CreateResourceAsync(System.Threading.CancellationToken)
    name: CreateResourceAsync
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource).CreateResourceAsync
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable{{IFluentResourceT},{InnerResourceT},{FluentResourceT},Microsoft.Azure.Management.Fluent.Resource.Core.IResource}.CreateResource
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable{{IFluentResourceT},{InnerResourceT},{FluentResourceT},Microsoft.Azure.Management.Fluent.Resource.Core.IResource}
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.CreateResource
  name: CreateResource()
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable<IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource>.CreateResource()
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource).CreateResource()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.CreateResource
    name: CreateResource
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable<IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource>.CreateResource
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.CreateResource
    name: CreateResource
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource).CreateResource
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable{{IFluentResourceT},{InnerResourceT},{FluentResourceT},Microsoft.Azure.Management.Fluent.Resource.Core.IResource}.Microsoft#Azure#Management#Fluent#Resource#Core#ResourceActions#IResourceCreator{IResourceT}#CreateResourceAsync(System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable{{IFluentResourceT},{InnerResourceT},{FluentResourceT},Microsoft.Azure.Management.Fluent.Resource.Core.IResource}
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.Microsoft#Azure#Management#Fluent#Resource#Core#ResourceActions#IResourceCreator{IResourceT}#CreateResourceAsync(System.Threading.CancellationToken)
  name: IResourceCreator<IResource>.CreateResourceAsync(CancellationToken)
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable<IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource>.Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator<Microsoft.Azure.Management.Fluent.Resource.Core.IResource>.CreateResourceAsync(System.Threading.CancellationToken)
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource).Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator<IResourceT>.CreateResourceAsync(System.Threading.CancellationToken)
  name.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator<IResourceT>.CreateResourceAsync(CancellationToken)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.Microsoft#Azure#Management#Fluent#Resource#Core#ResourceActions#IResourceCreator{IResourceT}#CreateResourceAsync(System.Threading.CancellationToken)
    name: IResourceCreator<IResource>.CreateResourceAsync
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable<IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource>.Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator<Microsoft.Azure.Management.Fluent.Resource.Core.IResource>.CreateResourceAsync
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.Microsoft#Azure#Management#Fluent#Resource#Core#ResourceActions#IResourceCreator{IResourceT}#CreateResourceAsync(System.Threading.CancellationToken)
    name: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator<IResourceT>.CreateResourceAsync
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource).Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator<IResourceT>.CreateResourceAsync
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable{{IFluentResourceT},{InnerResourceT},{FluentResourceT},Microsoft.Azure.Management.Fluent.Resource.Core.IResource}.Microsoft#Azure#Management#Fluent#Resource#Core#ResourceActions#IResourceCreator{IResourceT}#CreateResource
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable{{IFluentResourceT},{InnerResourceT},{FluentResourceT},Microsoft.Azure.Management.Fluent.Resource.Core.IResource}
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.Microsoft#Azure#Management#Fluent#Resource#Core#ResourceActions#IResourceCreator{IResourceT}#CreateResource
  name: IResourceCreator<IResource>.CreateResource()
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable<IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource>.Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator<Microsoft.Azure.Management.Fluent.Resource.Core.IResource>.CreateResource()
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource).Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator<IResourceT>.CreateResource()
  name.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator<IResourceT>.CreateResource()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.Microsoft#Azure#Management#Fluent#Resource#Core#ResourceActions#IResourceCreator{IResourceT}#CreateResource
    name: IResourceCreator<IResource>.CreateResource
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable<IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource>.Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator<Microsoft.Azure.Management.Fluent.Resource.Core.IResource>.CreateResource
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.Microsoft#Azure#Management#Fluent#Resource#Core#ResourceActions#IResourceCreator{IResourceT}#CreateResource
    name: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator<IResourceT>.CreateResource
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, Microsoft.Azure.Management.Fluent.Resource.Core.IResource).Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator<IResourceT>.CreateResource
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshableWrapper{{IFluentResourceT},{InnerResourceT}}.Inner
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshableWrapper{{IFluentResourceT},{InnerResourceT}}
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshableWrapper`2.Inner
  name: Inner
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshableWrapper<IFluentResourceT, InnerResourceT>.Inner
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshableWrapper(Of IFluentResourceT, InnerResourceT).Inner
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshableWrapper{{IFluentResourceT},{InnerResourceT}}.SetInner({InnerResourceT})
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshableWrapper{{IFluentResourceT},{InnerResourceT}}
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshableWrapper`2.SetInner(`1)
  name: SetInner(InnerResourceT)
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshableWrapper<IFluentResourceT, InnerResourceT>.SetInner(InnerResourceT)
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshableWrapper(Of IFluentResourceT, InnerResourceT).SetInner(InnerResourceT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshableWrapper`2.SetInner(`1)
    name: SetInner
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshableWrapper<IFluentResourceT, InnerResourceT>.SetInner
  - name: (
    fullName: (
  - name: InnerResourceT
    fullName: InnerResourceT
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshableWrapper`2.SetInner(`1)
    name: SetInner
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshableWrapper(Of IFluentResourceT, InnerResourceT).SetInner
  - name: (
    fullName: (
  - name: InnerResourceT
    fullName: InnerResourceT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshable{{IFluentResourceT}}.Refresh
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshable{{IFluentResourceT}}
  definition: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshable`1.Refresh
  name: Refresh()
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshable<IFluentResourceT>.Refresh()
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshable(Of IFluentResourceT).Refresh()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshable`1.Refresh
    name: Refresh
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshable<IFluentResourceT>.Refresh
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshable`1.Refresh
    name: Refresh
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshable(Of IFluentResourceT).Refresh
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.Indexable.Key
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.Indexable
  isExternal: false
  name: Key
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.Indexable.Key
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshable`1
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions
  isExternal: false
  name: IndexableRefreshable<IFluentResourceT>
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshable<IFluentResourceT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshable(Of IFluentResourceT)
  name.vb: IndexableRefreshable(Of IFluentResourceT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshable`1
    name: IndexableRefreshable
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshable
  - name: <
    fullName: <
  - name: IFluentResourceT
    fullName: IFluentResourceT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshable`1
    name: IndexableRefreshable
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshable
  - name: '(Of '
    fullName: '(Of '
  - name: IFluentResourceT
    fullName: IFluentResourceT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshableWrapper`2
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions
  isExternal: false
  name: IndexableRefreshableWrapper<IFluentResourceT, InnerResourceT>
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshableWrapper<IFluentResourceT, InnerResourceT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshableWrapper(Of IFluentResourceT, InnerResourceT)
  name.vb: IndexableRefreshableWrapper(Of IFluentResourceT, InnerResourceT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshableWrapper`2
    name: IndexableRefreshableWrapper
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshableWrapper
  - name: <
    fullName: <
  - name: IFluentResourceT
    fullName: IFluentResourceT
  - name: ', '
    fullName: ', '
  - name: InnerResourceT
    fullName: InnerResourceT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshableWrapper`2
    name: IndexableRefreshableWrapper
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshableWrapper
  - name: '(Of '
    fullName: '(Of '
  - name: IFluentResourceT
    fullName: IFluentResourceT
  - name: ', '
    fullName: ', '
  - name: InnerResourceT
    fullName: InnerResourceT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions
  isExternal: false
  name: Creatable<IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT>
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable<IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT)
  name.vb: Creatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4
    name: Creatable
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable
  - name: <
    fullName: <
  - name: IFluentResourceT
    fullName: IFluentResourceT
  - name: ', '
    fullName: ', '
  - name: InnerResourceT
    fullName: InnerResourceT
  - name: ', '
    fullName: ', '
  - name: FluentResourceT
    fullName: FluentResourceT
  - name: ', '
    fullName: ', '
  - name: IResourceT
    fullName: IResourceT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4
    name: Creatable
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable
  - name: '(Of '
    fullName: '(Of '
  - name: IFluentResourceT
    fullName: IFluentResourceT
  - name: ', '
    fullName: ', '
  - name: InnerResourceT
    fullName: InnerResourceT
  - name: ', '
    fullName: ', '
  - name: FluentResourceT
    fullName: FluentResourceT
  - name: ', '
    fullName: ', '
  - name: IResourceT
    fullName: IResourceT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable`5
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions
  isExternal: false
  name: CreatableUpdatable<IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT, IUpdatableT>
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable<IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT, IUpdatableT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT, IUpdatableT)
  name.vb: CreatableUpdatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT, IUpdatableT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable`5
    name: CreatableUpdatable
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable
  - name: <
    fullName: <
  - name: IFluentResourceT
    fullName: IFluentResourceT
  - name: ', '
    fullName: ', '
  - name: InnerResourceT
    fullName: InnerResourceT
  - name: ', '
    fullName: ', '
  - name: FluentResourceT
    fullName: FluentResourceT
  - name: ', '
    fullName: ', '
  - name: IResourceT
    fullName: IResourceT
  - name: ', '
    fullName: ', '
  - name: IUpdatableT
    fullName: IUpdatableT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable`5
    name: CreatableUpdatable
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable
  - name: '(Of '
    fullName: '(Of '
  - name: IFluentResourceT
    fullName: IFluentResourceT
  - name: ', '
    fullName: ', '
  - name: InnerResourceT
    fullName: InnerResourceT
  - name: ', '
    fullName: ', '
  - name: FluentResourceT
    fullName: FluentResourceT
  - name: ', '
    fullName: ', '
  - name: IResourceT
    fullName: IResourceT
  - name: ', '
    fullName: ', '
  - name: IUpdatableT
    fullName: IUpdatableT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7
  parent: Microsoft.Azure.Management.Fluent.Resource.Core
  isExternal: false
  name: ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags>
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags>
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags)
  name.vb: ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7
    name: ResourceBase
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase
  - name: <
    fullName: <
  - name: IFluentResourceT
    fullName: IFluentResourceT
  - name: ', '
    fullName: ', '
  - name: InnerResourceT
    fullName: InnerResourceT
  - name: ', '
    fullName: ', '
  - name: InnerResourceBaseT
    fullName: InnerResourceBaseT
  - name: ', '
    fullName: ', '
  - name: FluentResourceT
    fullName: FluentResourceT
  - name: ', '
    fullName: ', '
  - name: IDefintionAfterRegion
    fullName: IDefintionAfterRegion
  - name: ', '
    fullName: ', '
  - name: DefTypeWithTags
    fullName: DefTypeWithTags
  - name: ', '
    fullName: ', '
  - name: UTypeWithTags
    fullName: UTypeWithTags
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7
    name: ResourceBase
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase
  - name: '(Of '
    fullName: '(Of '
  - name: IFluentResourceT
    fullName: IFluentResourceT
  - name: ', '
    fullName: ', '
  - name: InnerResourceT
    fullName: InnerResourceT
  - name: ', '
    fullName: ', '
  - name: InnerResourceBaseT
    fullName: InnerResourceBaseT
  - name: ', '
    fullName: ', '
  - name: FluentResourceT
    fullName: FluentResourceT
  - name: ', '
    fullName: ', '
  - name: IDefintionAfterRegion
    fullName: IDefintionAfterRegion
  - name: ', '
    fullName: ', '
  - name: DefTypeWithTags
    fullName: DefTypeWithTags
  - name: ', '
    fullName: ', '
  - name: UTypeWithTags
    fullName: UTypeWithTags
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9
  parent: Microsoft.Azure.Management.Fluent.Resource
  isExternal: false
  name: GroupableResource<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags>
  fullName: Microsoft.Azure.Management.Fluent.Resource.GroupableResource<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags>
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.GroupableResource(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags)
  name.vb: GroupableResource(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9
    name: GroupableResource
    fullName: Microsoft.Azure.Management.Fluent.Resource.GroupableResource
  - name: <
    fullName: <
  - name: IFluentResourceT
    fullName: IFluentResourceT
  - name: ', '
    fullName: ', '
  - name: InnerResourceT
    fullName: InnerResourceT
  - name: ', '
    fullName: ', '
  - name: InnerResourceBaseT
    fullName: InnerResourceBaseT
  - name: ', '
    fullName: ', '
  - name: FluentResourceT
    fullName: FluentResourceT
  - name: ', '
    fullName: ', '
  - name: ManagerT
    fullName: ManagerT
  - name: ', '
    fullName: ', '
  - name: IDefinitionAfterRegion
    fullName: IDefinitionAfterRegion
  - name: ', '
    fullName: ', '
  - name: IDefinitionAfterResourceGroup
    fullName: IDefinitionAfterResourceGroup
  - name: ', '
    fullName: ', '
  - name: DefTypeWithTags
    fullName: DefTypeWithTags
  - name: ', '
    fullName: ', '
  - name: UTypeWithTags
    fullName: UTypeWithTags
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9
    name: GroupableResource
    fullName: Microsoft.Azure.Management.Fluent.Resource.GroupableResource
  - name: '(Of '
    fullName: '(Of '
  - name: IFluentResourceT
    fullName: IFluentResourceT
  - name: ', '
    fullName: ', '
  - name: InnerResourceT
    fullName: InnerResourceT
  - name: ', '
    fullName: ', '
  - name: InnerResourceBaseT
    fullName: InnerResourceBaseT
  - name: ', '
    fullName: ', '
  - name: FluentResourceT
    fullName: FluentResourceT
  - name: ', '
    fullName: ', '
  - name: ManagerT
    fullName: ManagerT
  - name: ', '
    fullName: ', '
  - name: IDefinitionAfterRegion
    fullName: IDefinitionAfterRegion
  - name: ', '
    fullName: ', '
  - name: IDefinitionAfterResourceGroup
    fullName: IDefinitionAfterResourceGroup
  - name: ', '
    fullName: ', '
  - name: DefTypeWithTags
    fullName: DefTypeWithTags
  - name: ', '
    fullName: ', '
  - name: UTypeWithTags
    fullName: UTypeWithTags
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Resource
  fullName: Microsoft.Azure.Management.Fluent.Resource
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IRefreshable`1
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions
  isExternal: false
  name: IRefreshable<T>
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IRefreshable<T>
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IRefreshable(Of T)
  name.vb: IRefreshable(Of T)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IRefreshable`1
    name: IRefreshable
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IRefreshable
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IRefreshable`1
    name: IRefreshable
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IRefreshable
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper`1
  parent: Microsoft.Azure.Management.Fluent.Resource.Core
  isExternal: false
  name: IWrapper<T>
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper<T>
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper(Of T)
  name.vb: IWrapper(Of T)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper`1
    name: IWrapper
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper`1
    name: IWrapper
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.IWrapper
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator`1
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions
  isExternal: false
  name: IResourceCreator<IResourceT>
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator<IResourceT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator(Of IResourceT)
  name.vb: IResourceCreator(Of IResourceT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator`1
    name: IResourceCreator
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator
  - name: <
    fullName: <
  - name: IResourceT
    fullName: IResourceT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator`1
    name: IResourceCreator
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator
  - name: '(Of '
    fullName: '(Of '
  - name: IResourceT
    fullName: IResourceT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.ICreatable`1
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions
  isExternal: false
  name: ICreatable<T>
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.ICreatable<T>
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.ICreatable(Of T)
  name.vb: ICreatable(Of T)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.ICreatable`1
    name: ICreatable
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.ICreatable
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.ICreatable`1
    name: ICreatable
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.ICreatable
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IUpdatable`1
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions
  isExternal: false
  name: IUpdatable<T>
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IUpdatable<T>
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IUpdatable(Of T)
  name.vb: IUpdatable(Of T)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IUpdatable`1
    name: IUpdatable
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IUpdatable
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IUpdatable`1
    name: IUpdatable
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IUpdatable
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Definition.IDefinitionWithTags`1
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Definition
  isExternal: false
  name: IDefinitionWithTags<T>
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Definition.IDefinitionWithTags<T>
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Definition.IDefinitionWithTags(Of T)
  name.vb: IDefinitionWithTags(Of T)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Definition.IDefinitionWithTags`1
    name: IDefinitionWithTags
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Definition.IDefinitionWithTags
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Definition.IDefinitionWithTags`1
    name: IDefinitionWithTags
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Definition.IDefinitionWithTags
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Definition
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Definition
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags`1
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update
  isExternal: false
  name: IUpdateWithTags<T>
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags<T>
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags(Of T)
  name.vb: IUpdateWithTags(Of T)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags`1
    name: IUpdateWithTags
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags`1
    name: IUpdateWithTags
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update
- uid: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9.newGroup
  parent: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9
  isExternal: false
  name: newGroup
  fullName: Microsoft.Azure.Management.Fluent.Resource.GroupableResource<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags>.newGroup
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.GroupableResource(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags).newGroup
- uid: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9.Manager
  parent: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9
  isExternal: false
  name: Manager
  fullName: Microsoft.Azure.Management.Fluent.Resource.GroupableResource<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags>.Manager
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.GroupableResource(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags).Manager
- uid: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9.ResourceIdBase
  parent: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9
  isExternal: false
  name: ResourceIdBase
  fullName: Microsoft.Azure.Management.Fluent.Resource.GroupableResource<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags>.ResourceIdBase
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.GroupableResource(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags).ResourceIdBase
- uid: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9.ResourceGroupName
  parent: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9
  isExternal: false
  name: ResourceGroupName
  fullName: Microsoft.Azure.Management.Fluent.Resource.GroupableResource<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags>.ResourceGroupName
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.GroupableResource(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags).ResourceGroupName
- uid: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9.WithNewResourceGroup
  parent: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9
  isExternal: false
  name: WithNewResourceGroup()
  fullName: Microsoft.Azure.Management.Fluent.Resource.GroupableResource<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags>.WithNewResourceGroup()
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.GroupableResource(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags).WithNewResourceGroup()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9.WithNewResourceGroup
    name: WithNewResourceGroup
    fullName: Microsoft.Azure.Management.Fluent.Resource.GroupableResource<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags>.WithNewResourceGroup
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9.WithNewResourceGroup
    name: WithNewResourceGroup
    fullName: Microsoft.Azure.Management.Fluent.Resource.GroupableResource(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags).WithNewResourceGroup
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9.WithNewResourceGroup(System.String)
  parent: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9
  isExternal: true
  name: WithNewResourceGroup(String)
  fullName: Microsoft.Azure.Management.Fluent.Resource.GroupableResource<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags>.WithNewResourceGroup(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.GroupableResource(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags).WithNewResourceGroup(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9.WithNewResourceGroup(System.String)
    name: WithNewResourceGroup
    fullName: Microsoft.Azure.Management.Fluent.Resource.GroupableResource<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags>.WithNewResourceGroup
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9.WithNewResourceGroup(System.String)
    name: WithNewResourceGroup
    fullName: Microsoft.Azure.Management.Fluent.Resource.GroupableResource(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags).WithNewResourceGroup
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9.WithNewResourceGroup(Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.ICreatable{Microsoft.Azure.Management.Fluent.Resource.IResourceGroup})
  parent: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9
  isExternal: false
  name: WithNewResourceGroup(ICreatable<IResourceGroup>)
  fullName: Microsoft.Azure.Management.Fluent.Resource.GroupableResource<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags>.WithNewResourceGroup(Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.ICreatable<Microsoft.Azure.Management.Fluent.Resource.IResourceGroup>)
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.GroupableResource(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags).WithNewResourceGroup(Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.ICreatable(Of Microsoft.Azure.Management.Fluent.Resource.IResourceGroup))
  name.vb: WithNewResourceGroup(ICreatable(Of IResourceGroup))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9.WithNewResourceGroup(Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.ICreatable{Microsoft.Azure.Management.Fluent.Resource.IResourceGroup})
    name: WithNewResourceGroup
    fullName: Microsoft.Azure.Management.Fluent.Resource.GroupableResource<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags>.WithNewResourceGroup
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.ICreatable`1
    name: ICreatable
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.ICreatable
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Resource.IResourceGroup
    name: IResourceGroup
    fullName: Microsoft.Azure.Management.Fluent.Resource.IResourceGroup
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9.WithNewResourceGroup(Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.ICreatable{Microsoft.Azure.Management.Fluent.Resource.IResourceGroup})
    name: WithNewResourceGroup
    fullName: Microsoft.Azure.Management.Fluent.Resource.GroupableResource(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags).WithNewResourceGroup
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.ICreatable`1
    name: ICreatable
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.ICreatable
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Resource.IResourceGroup
    name: IResourceGroup
    fullName: Microsoft.Azure.Management.Fluent.Resource.IResourceGroup
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9.WithExistingResourceGroup(System.String)
  parent: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9
  isExternal: true
  name: WithExistingResourceGroup(String)
  fullName: Microsoft.Azure.Management.Fluent.Resource.GroupableResource<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags>.WithExistingResourceGroup(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.GroupableResource(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags).WithExistingResourceGroup(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9.WithExistingResourceGroup(System.String)
    name: WithExistingResourceGroup
    fullName: Microsoft.Azure.Management.Fluent.Resource.GroupableResource<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags>.WithExistingResourceGroup
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9.WithExistingResourceGroup(System.String)
    name: WithExistingResourceGroup
    fullName: Microsoft.Azure.Management.Fluent.Resource.GroupableResource(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags).WithExistingResourceGroup
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9.WithExistingResourceGroup(Microsoft.Azure.Management.Fluent.Resource.IResourceGroup)
  parent: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9
  isExternal: false
  name: WithExistingResourceGroup(IResourceGroup)
  fullName: Microsoft.Azure.Management.Fluent.Resource.GroupableResource<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags>.WithExistingResourceGroup(Microsoft.Azure.Management.Fluent.Resource.IResourceGroup)
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.GroupableResource(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags).WithExistingResourceGroup(Microsoft.Azure.Management.Fluent.Resource.IResourceGroup)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9.WithExistingResourceGroup(Microsoft.Azure.Management.Fluent.Resource.IResourceGroup)
    name: WithExistingResourceGroup
    fullName: Microsoft.Azure.Management.Fluent.Resource.GroupableResource<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags>.WithExistingResourceGroup
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Resource.IResourceGroup
    name: IResourceGroup
    fullName: Microsoft.Azure.Management.Fluent.Resource.IResourceGroup
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.GroupableResource`9.WithExistingResourceGroup(Microsoft.Azure.Management.Fluent.Resource.IResourceGroup)
    name: WithExistingResourceGroup
    fullName: Microsoft.Azure.Management.Fluent.Resource.GroupableResource(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags).WithExistingResourceGroup
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Resource.IResourceGroup
    name: IResourceGroup
    fullName: Microsoft.Azure.Management.Fluent.Resource.IResourceGroup
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.Id
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7
  isExternal: false
  name: Id
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags>.Id
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags).Id
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.Name
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7
  isExternal: false
  name: Name
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags>.Name
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags).Name
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.RegionName
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7
  isExternal: false
  name: RegionName
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags>.RegionName
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags).RegionName
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.Type
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7
  isExternal: false
  name: Type
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags>.Type
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags).Type
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.Tags
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7
  isExternal: false
  name: Tags
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags>.Tags
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags).Tags
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.InnersFromWrappers``2(System.Collections.Generic.ICollection{``1},System.Collections.Generic.IList{``0})
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7
  isExternal: true
  name: InnersFromWrappers<InnerT, IWrapperT>(ICollection<IWrapperT>, IList<InnerT>)
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags>.InnersFromWrappers<InnerT, IWrapperT>(System.Collections.Generic.ICollection<IWrapperT>, System.Collections.Generic.IList<InnerT>)
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags).InnersFromWrappers(Of InnerT, IWrapperT)(System.Collections.Generic.ICollection(Of IWrapperT), System.Collections.Generic.IList(Of InnerT))
  name.vb: InnersFromWrappers(Of InnerT, IWrapperT)(ICollection(Of IWrapperT), IList(Of InnerT))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.InnersFromWrappers``2(System.Collections.Generic.ICollection{``1},System.Collections.Generic.IList{``0})
    name: InnersFromWrappers<InnerT, IWrapperT>
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags>.InnersFromWrappers<InnerT, IWrapperT>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    fullName: <
  - name: IWrapperT
    fullName: IWrapperT
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: InnerT
    fullName: InnerT
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.InnersFromWrappers``2(System.Collections.Generic.ICollection{``1},System.Collections.Generic.IList{``0})
    name: InnersFromWrappers(Of InnerT, IWrapperT)
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags).InnersFromWrappers(Of InnerT, IWrapperT)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: IWrapperT
    fullName: IWrapperT
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: InnerT
    fullName: InnerT
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.InnersFromWrappers``2(System.Collections.Generic.ICollection{``1})
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7
  isExternal: true
  name: InnersFromWrappers<InnerT, IWrapperT>(ICollection<IWrapperT>)
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags>.InnersFromWrappers<InnerT, IWrapperT>(System.Collections.Generic.ICollection<IWrapperT>)
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags).InnersFromWrappers(Of InnerT, IWrapperT)(System.Collections.Generic.ICollection(Of IWrapperT))
  name.vb: InnersFromWrappers(Of InnerT, IWrapperT)(ICollection(Of IWrapperT))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.InnersFromWrappers``2(System.Collections.Generic.ICollection{``1})
    name: InnersFromWrappers<InnerT, IWrapperT>
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags>.InnersFromWrappers<InnerT, IWrapperT>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    fullName: <
  - name: IWrapperT
    fullName: IWrapperT
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.InnersFromWrappers``2(System.Collections.Generic.ICollection{``1})
    name: InnersFromWrappers(Of InnerT, IWrapperT)
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags).InnersFromWrappers(Of InnerT, IWrapperT)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: IWrapperT
    fullName: IWrapperT
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.IsInCreateMode
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7
  isExternal: false
  name: IsInCreateMode
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags>.IsInCreateMode
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags).IsInCreateMode
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.Region
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7
  isExternal: false
  name: Region
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags>.Region
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags).Region
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.Microsoft#Azure#Management#Fluent#Resource#Core#IResource#Tags
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7
  isExternal: false
  name: IResource.Tags
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags>.Microsoft.Azure.Management.Fluent.Resource.Core.IResource.Tags
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags).Microsoft.Azure.Management.Fluent.Resource.Core.IResource.Tags
  name.vb: Microsoft.Azure.Management.Fluent.Resource.Core.IResource.Tags
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.WithRegion(System.String)
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7
  isExternal: true
  name: WithRegion(String)
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags>.WithRegion(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags).WithRegion(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.WithRegion(System.String)
    name: WithRegion
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags>.WithRegion
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.WithRegion(System.String)
    name: WithRegion
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags).WithRegion
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.WithRegion(Microsoft.Azure.Management.Fluent.Resource.Core.Region)
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7
  isExternal: false
  name: WithRegion(Region)
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags>.WithRegion(Microsoft.Azure.Management.Fluent.Resource.Core.Region)
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags).WithRegion(Microsoft.Azure.Management.Fluent.Resource.Core.Region)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.WithRegion(Microsoft.Azure.Management.Fluent.Resource.Core.Region)
    name: WithRegion
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags>.WithRegion
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.Region
    name: Region
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.Region
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.WithRegion(Microsoft.Azure.Management.Fluent.Resource.Core.Region)
    name: WithRegion
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags).WithRegion
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.Region
    name: Region
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.Region
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.WithTags(System.Collections.Generic.IDictionary{System.String,System.String})
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7
  isExternal: true
  name: WithTags(IDictionary<String, String>)
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags>.WithTags(System.Collections.Generic.IDictionary<System.String, System.String>)
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags).WithTags(System.Collections.Generic.IDictionary(Of System.String, System.String))
  name.vb: WithTags(IDictionary(Of String, String))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.WithTags(System.Collections.Generic.IDictionary{System.String,System.String})
    name: WithTags
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags>.WithTags
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.WithTags(System.Collections.Generic.IDictionary{System.String,System.String})
    name: WithTags
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags).WithTags
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.WithTag(System.String,System.String)
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7
  isExternal: true
  name: WithTag(String, String)
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags>.WithTag(System.String, System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags).WithTag(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.WithTag(System.String,System.String)
    name: WithTag
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags>.WithTag
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.WithTag(System.String,System.String)
    name: WithTag
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags).WithTag
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.WithoutTag(System.String)
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7
  isExternal: true
  name: WithoutTag(String)
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags>.WithoutTag(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags).WithoutTag(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.WithoutTag(System.String)
    name: WithoutTag
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags>.WithoutTag
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.WithoutTag(System.String)
    name: WithoutTag
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags).WithoutTag
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.Microsoft#Azure#Management#Fluent#Resource#Core#Resource#Definition#IDefinitionWithTags{DefTypeWithTags}#WithTag(System.String,System.String)
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7
  isExternal: true
  name: IDefinitionWithTags<DefTypeWithTags>.WithTag(String, String)
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags>.Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Definition.IDefinitionWithTags<DefTypeWithTags>.WithTag(System.String, System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags).Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Definition.IDefinitionWithTags<DefTypeWithTags>.WithTag(System.String, System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Definition.IDefinitionWithTags<DefTypeWithTags>.WithTag(String, String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.Microsoft#Azure#Management#Fluent#Resource#Core#Resource#Definition#IDefinitionWithTags{DefTypeWithTags}#WithTag(System.String,System.String)
    name: IDefinitionWithTags<DefTypeWithTags>.WithTag
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags>.Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Definition.IDefinitionWithTags<DefTypeWithTags>.WithTag
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.Microsoft#Azure#Management#Fluent#Resource#Core#Resource#Definition#IDefinitionWithTags{DefTypeWithTags}#WithTag(System.String,System.String)
    name: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Definition.IDefinitionWithTags<DefTypeWithTags>.WithTag
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags).Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Definition.IDefinitionWithTags<DefTypeWithTags>.WithTag
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.Microsoft#Azure#Management#Fluent#Resource#Core#Resource#Definition#IDefinitionWithTags{DefTypeWithTags}#WithTags(System.Collections.Generic.IDictionary{System.String,System.String})
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7
  isExternal: true
  name: IDefinitionWithTags<DefTypeWithTags>.WithTags(IDictionary<String, String>)
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags>.Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Definition.IDefinitionWithTags<DefTypeWithTags>.WithTags(System.Collections.Generic.IDictionary<System.String, System.String>)
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags).Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Definition.IDefinitionWithTags<DefTypeWithTags>.WithTags(System.Collections.Generic.IDictionary(Of System.String, System.String))
  name.vb: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Definition.IDefinitionWithTags<DefTypeWithTags>.WithTags(IDictionary(Of String, String))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.Microsoft#Azure#Management#Fluent#Resource#Core#Resource#Definition#IDefinitionWithTags{DefTypeWithTags}#WithTags(System.Collections.Generic.IDictionary{System.String,System.String})
    name: IDefinitionWithTags<DefTypeWithTags>.WithTags
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags>.Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Definition.IDefinitionWithTags<DefTypeWithTags>.WithTags
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.Microsoft#Azure#Management#Fluent#Resource#Core#Resource#Definition#IDefinitionWithTags{DefTypeWithTags}#WithTags(System.Collections.Generic.IDictionary{System.String,System.String})
    name: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Definition.IDefinitionWithTags<DefTypeWithTags>.WithTags
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags).Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Definition.IDefinitionWithTags<DefTypeWithTags>.WithTags
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.Microsoft#Azure#Management#Fluent#Resource#Core#Resource#Update#IUpdateWithTags{UTypeWithTags}#WithTag(System.String,System.String)
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7
  isExternal: true
  name: IUpdateWithTags<UTypeWithTags>.WithTag(String, String)
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags>.Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags<UTypeWithTags>.WithTag(System.String, System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags).Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags<UTypeWithTags>.WithTag(System.String, System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags<UTypeWithTags>.WithTag(String, String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.Microsoft#Azure#Management#Fluent#Resource#Core#Resource#Update#IUpdateWithTags{UTypeWithTags}#WithTag(System.String,System.String)
    name: IUpdateWithTags<UTypeWithTags>.WithTag
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags>.Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags<UTypeWithTags>.WithTag
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.Microsoft#Azure#Management#Fluent#Resource#Core#Resource#Update#IUpdateWithTags{UTypeWithTags}#WithTag(System.String,System.String)
    name: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags<UTypeWithTags>.WithTag
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags).Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags<UTypeWithTags>.WithTag
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.Microsoft#Azure#Management#Fluent#Resource#Core#Resource#Update#IUpdateWithTags{UTypeWithTags}#WithTags(System.Collections.Generic.IDictionary{System.String,System.String})
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7
  isExternal: true
  name: IUpdateWithTags<UTypeWithTags>.WithTags(IDictionary<String, String>)
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags>.Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags<UTypeWithTags>.WithTags(System.Collections.Generic.IDictionary<System.String, System.String>)
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags).Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags<UTypeWithTags>.WithTags(System.Collections.Generic.IDictionary(Of System.String, System.String))
  name.vb: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags<UTypeWithTags>.WithTags(IDictionary(Of String, String))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.Microsoft#Azure#Management#Fluent#Resource#Core#Resource#Update#IUpdateWithTags{UTypeWithTags}#WithTags(System.Collections.Generic.IDictionary{System.String,System.String})
    name: IUpdateWithTags<UTypeWithTags>.WithTags
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags>.Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags<UTypeWithTags>.WithTags
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.Microsoft#Azure#Management#Fluent#Resource#Core#Resource#Update#IUpdateWithTags{UTypeWithTags}#WithTags(System.Collections.Generic.IDictionary{System.String,System.String})
    name: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags<UTypeWithTags>.WithTags
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags).Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags<UTypeWithTags>.WithTags
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.Microsoft#Azure#Management#Fluent#Resource#Core#Resource#Update#IUpdateWithTags{UTypeWithTags}#WithoutTag(System.String)
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7
  isExternal: true
  name: IUpdateWithTags<UTypeWithTags>.WithoutTag(String)
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags>.Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags<UTypeWithTags>.WithoutTag(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags).Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags<UTypeWithTags>.WithoutTag(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags<UTypeWithTags>.WithoutTag(String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.Microsoft#Azure#Management#Fluent#Resource#Core#Resource#Update#IUpdateWithTags{UTypeWithTags}#WithoutTag(System.String)
    name: IUpdateWithTags<UTypeWithTags>.WithoutTag
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase<IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags>.Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags<UTypeWithTags>.WithoutTag
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase`7.Microsoft#Azure#Management#Fluent#Resource#Core#Resource#Update#IUpdateWithTags{UTypeWithTags}#WithoutTag(System.String)
    name: Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags<UTypeWithTags>.WithoutTag
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceBase(Of IFluentResourceT, InnerResourceT, InnerResourceBaseT, FluentResourceT, IDefintionAfterRegion, DefTypeWithTags, UTypeWithTags).Microsoft.Azure.Management.Fluent.Resource.Core.Resource.Update.IUpdateWithTags<UTypeWithTags>.WithoutTag
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable`5.Update
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable`5
  isExternal: false
  name: Update()
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable<IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT, IUpdatableT>.Update()
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT, IUpdatableT).Update()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable`5.Update
    name: Update
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable<IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT, IUpdatableT>.Update
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable`5.Update
    name: Update
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT, IUpdatableT).Update
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable`5.Apply
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable`5
  isExternal: false
  name: Apply()
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable<IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT, IUpdatableT>.Apply()
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT, IUpdatableT).Apply()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable`5.Apply
    name: Apply
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable<IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT, IUpdatableT>.Apply
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable`5.Apply
    name: Apply
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT, IUpdatableT).Apply
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable`5.ApplyAsync(System.Threading.CancellationToken,System.Boolean)
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable`5
  isExternal: true
  name: ApplyAsync(CancellationToken, Boolean)
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable<IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT, IUpdatableT>.ApplyAsync(System.Threading.CancellationToken, System.Boolean)
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT, IUpdatableT).ApplyAsync(System.Threading.CancellationToken, System.Boolean)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable`5.ApplyAsync(System.Threading.CancellationToken,System.Boolean)
    name: ApplyAsync
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable<IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT, IUpdatableT>.ApplyAsync
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable`5.ApplyAsync(System.Threading.CancellationToken,System.Boolean)
    name: ApplyAsync
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.CreatableUpdatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT, IUpdatableT).ApplyAsync
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.Name
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4
  isExternal: false
  name: Name
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable<IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT>.Name
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT).Name
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.AddCreatableDependency(Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator{`3})
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4
  isExternal: false
  name: AddCreatableDependency(IResourceCreator<IResourceT>)
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable<IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT>.AddCreatableDependency(Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator<IResourceT>)
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT).AddCreatableDependency(Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator(Of IResourceT))
  name.vb: AddCreatableDependency(IResourceCreator(Of IResourceT))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.AddCreatableDependency(Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator{`3})
    name: AddCreatableDependency
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable<IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT>.AddCreatableDependency
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator`1
    name: IResourceCreator
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator
  - name: <
    fullName: <
  - name: IResourceT
    fullName: IResourceT
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.AddCreatableDependency(Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator{`3})
    name: AddCreatableDependency
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT).AddCreatableDependency
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator`1
    name: IResourceCreator
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator
  - name: '(Of '
    fullName: '(Of '
  - name: IResourceT
    fullName: IResourceT
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.Create
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4
  isExternal: false
  name: Create()
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable<IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT>.Create()
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT).Create()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.Create
    name: Create
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable<IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT>.Create
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.Create
    name: Create
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT).Create
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.CreateAsync(System.Threading.CancellationToken,System.Boolean)
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4
  isExternal: true
  name: CreateAsync(CancellationToken, Boolean)
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable<IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT>.CreateAsync(System.Threading.CancellationToken, System.Boolean)
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT).CreateAsync(System.Threading.CancellationToken, System.Boolean)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.CreateAsync(System.Threading.CancellationToken,System.Boolean)
    name: CreateAsync
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable<IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT>.CreateAsync
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.CreateAsync(System.Threading.CancellationToken,System.Boolean)
    name: CreateAsync
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT).CreateAsync
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.CreatedResource(System.String)
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4
  isExternal: true
  name: CreatedResource(String)
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable<IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT>.CreatedResource(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT).CreatedResource(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.CreatedResource(System.String)
    name: CreatedResource
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable<IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT>.CreatedResource
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.CreatedResource(System.String)
    name: CreatedResource
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT).CreatedResource
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.CreatorTaskGroup
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4
  isExternal: false
  name: CreatorTaskGroup
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable<IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT>.CreatorTaskGroup
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT).CreatorTaskGroup
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.CreateResourceAsync(System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4
  isExternal: true
  name: CreateResourceAsync(CancellationToken)
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable<IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT>.CreateResourceAsync(System.Threading.CancellationToken)
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT).CreateResourceAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.CreateResourceAsync(System.Threading.CancellationToken)
    name: CreateResourceAsync
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable<IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT>.CreateResourceAsync
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.CreateResourceAsync(System.Threading.CancellationToken)
    name: CreateResourceAsync
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT).CreateResourceAsync
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.CreateResource
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4
  isExternal: false
  name: CreateResource()
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable<IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT>.CreateResource()
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT).CreateResource()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.CreateResource
    name: CreateResource
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable<IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT>.CreateResource
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.CreateResource
    name: CreateResource
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT).CreateResource
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.Microsoft#Azure#Management#Fluent#Resource#Core#ResourceActions#IResourceCreator{IResourceT}#CreateResourceAsync(System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4
  isExternal: true
  name: IResourceCreator<IResourceT>.CreateResourceAsync(CancellationToken)
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable<IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT>.Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator<IResourceT>.CreateResourceAsync(System.Threading.CancellationToken)
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT).Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator<IResourceT>.CreateResourceAsync(System.Threading.CancellationToken)
  name.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator<IResourceT>.CreateResourceAsync(CancellationToken)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.Microsoft#Azure#Management#Fluent#Resource#Core#ResourceActions#IResourceCreator{IResourceT}#CreateResourceAsync(System.Threading.CancellationToken)
    name: IResourceCreator<IResourceT>.CreateResourceAsync
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable<IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT>.Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator<IResourceT>.CreateResourceAsync
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.Microsoft#Azure#Management#Fluent#Resource#Core#ResourceActions#IResourceCreator{IResourceT}#CreateResourceAsync(System.Threading.CancellationToken)
    name: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator<IResourceT>.CreateResourceAsync
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT).Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator<IResourceT>.CreateResourceAsync
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.Microsoft#Azure#Management#Fluent#Resource#Core#ResourceActions#IResourceCreator{IResourceT}#CreateResource
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4
  isExternal: false
  name: IResourceCreator<IResourceT>.CreateResource()
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable<IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT>.Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator<IResourceT>.CreateResource()
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT).Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator<IResourceT>.CreateResource()
  name.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator<IResourceT>.CreateResource()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.Microsoft#Azure#Management#Fluent#Resource#Core#ResourceActions#IResourceCreator{IResourceT}#CreateResource
    name: IResourceCreator<IResourceT>.CreateResource
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable<IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT>.Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator<IResourceT>.CreateResource
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable`4.Microsoft#Azure#Management#Fluent#Resource#Core#ResourceActions#IResourceCreator{IResourceT}#CreateResource
    name: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator<IResourceT>.CreateResource
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.Creatable(Of IFluentResourceT, InnerResourceT, FluentResourceT, IResourceT).Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IResourceCreator<IResourceT>.CreateResource
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshableWrapper`2.Inner
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshableWrapper`2
  isExternal: false
  name: Inner
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshableWrapper<IFluentResourceT, InnerResourceT>.Inner
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshableWrapper(Of IFluentResourceT, InnerResourceT).Inner
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshableWrapper`2.SetInner(`1)
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshableWrapper`2
  isExternal: false
  name: SetInner(InnerResourceT)
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshableWrapper<IFluentResourceT, InnerResourceT>.SetInner(InnerResourceT)
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshableWrapper(Of IFluentResourceT, InnerResourceT).SetInner(InnerResourceT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshableWrapper`2.SetInner(`1)
    name: SetInner
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshableWrapper<IFluentResourceT, InnerResourceT>.SetInner
  - name: (
    fullName: (
  - name: InnerResourceT
    fullName: InnerResourceT
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshableWrapper`2.SetInner(`1)
    name: SetInner
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshableWrapper(Of IFluentResourceT, InnerResourceT).SetInner
  - name: (
    fullName: (
  - name: InnerResourceT
    fullName: InnerResourceT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshable`1.Refresh
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshable`1
  isExternal: false
  name: Refresh()
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshable<IFluentResourceT>.Refresh()
  fullname.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshable(Of IFluentResourceT).Refresh()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshable`1.Refresh
    name: Refresh
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshable<IFluentResourceT>.Refresh
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshable`1.Refresh
    name: Refresh
    fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IndexableRefreshable(Of IFluentResourceT).Refresh
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: '{InnerResourceT}'
  isExternal: false
  name: InnerResourceT
  fullName: InnerResourceT
- uid: '{ManagerT}'
  isExternal: false
  name: ManagerT
  fullName: ManagerT
- uid: System.Threading.Tasks.Task{{InnerResourceT}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<InnerResourceT>
  fullName: System.Threading.Tasks.Task<InnerResourceT>
  fullname.vb: System.Threading.Tasks.Task(Of InnerResourceT)
  name.vb: Task(Of InnerResourceT)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: InnerResourceT
    fullName: InnerResourceT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: InnerResourceT
    fullName: InnerResourceT
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{{IFluentResourceT}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IFluentResourceT>
  fullName: System.Threading.Tasks.Task<IFluentResourceT>
  fullname.vb: System.Threading.Tasks.Task(Of IFluentResourceT)
  name.vb: Task(Of IFluentResourceT)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: IFluentResourceT
    fullName: IFluentResourceT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: IFluentResourceT
    fullName: IFluentResourceT
  - name: )
    fullName: )
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
