items:
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  commentId: T:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  id: NicIpConfigurationImpl
  parent: Microsoft.Azure.Management.Fluent.Network
  children:
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Attach
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.GetNetwork
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.GetPublicIpAddress
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.ListAssociatedLoadBalancerBackends
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.ListAssociatedLoadBalancerInboundNatRules
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPrivateIpAddress#Definition#IWithPrivateIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}}#WithPrivateIpAddressDynamic
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPrivateIpAddress#Definition#IWithPrivateIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}}#WithPrivateIpAddressStatic(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPrivateIpAddress#Update#IWithPrivateIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IUpdate}#WithPrivateIpAddressDynamic
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPrivateIpAddress#Update#IWithPrivateIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IUpdate}#WithPrivateIpAddressStatic(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPrivateIpAddress#UpdateDefinition#IWithPrivateIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}}#WithPrivateIpAddressDynamic
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPrivateIpAddress#UpdateDefinition#IWithPrivateIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}}#WithPrivateIpAddressStatic(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Definition#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}}#WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Definition#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}}#WithExistingPublicIpAddress(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Definition#IWithNewPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}}#WithNewPublicIpAddress
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Definition#IWithNewPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}}#WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Definition#IWithNewPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}}#WithNewPublicIpAddress(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Update#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IUpdate}#WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Update#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IUpdate}#WithExistingPublicIpAddress(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Update#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IUpdate}#WithoutPublicIpAddress
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Update#IWithNewPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IUpdate}#WithNewPublicIpAddress
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Update#IWithNewPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IUpdate}#WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Update#IWithNewPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IUpdate}#WithNewPublicIpAddress(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#UpdateDefinition#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}}#WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#UpdateDefinition#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}}#WithExistingPublicIpAddress(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#UpdateDefinition#IWithNewPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}}#WithNewPublicIpAddress
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#UpdateDefinition#IWithNewPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}}#WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#UpdateDefinition#IWithNewPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}}#WithNewPublicIpAddress(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#IHasPrivateIpAddress#PrivateIpAddress
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#IHasPrivateIpAddress#PrivateIpAllocationMethod
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#IHasPublicIpAddress#GetPublicIpAddress
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#IHasPublicIpAddress#PublicIpAddressId
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#INicIpConfiguration#GetNetwork
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#INicIpConfiguration#ListAssociatedLoadBalancerBackends
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#INicIpConfiguration#ListAssociatedLoadBalancerInboundNatRules
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#INicIpConfiguration#PrivateIpAddressVersion
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithLoadBalancer{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}#WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithLoadBalancer{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}#WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithNetwork{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}#WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithNetwork{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}#WithNewNetwork(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork})
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithNetwork{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}#WithNewNetwork(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithNetwork{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}#WithNewNetwork(System.String,System.String)
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithPrivateIp{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}#WithPrivateIpVersion(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithSubnet{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}#WithSubnet(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IWithLoadBalancer#WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IWithLoadBalancer#WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IWithLoadBalancer#WithoutLoadBalancerBackends
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IWithLoadBalancer#WithoutLoadBalancerInboundNatRules
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IWithPrivateIp#WithPrivateIpVersion(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IWithSubnet#WithSubnet(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithNetwork{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}#WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithNetwork{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}#WithNewNetwork(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork})
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithNetwork{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}#WithNewNetwork(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithNetwork{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}#WithNewNetwork(System.String,System.String)
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithPrivateIp{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}#WithPrivateIpVersion(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithSubnet{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}#WithSubnet(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Name
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.NetworkId
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.PrivateIpAddress
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.PrivateIpAddressVersion
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.PrivateIpAllocationMethod
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.PublicIpAddressId
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.SubnetName
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithExistingPublicIpAddress(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithNewNetwork(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork})
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithNewNetwork(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithNewNetwork(System.String,System.String)
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithNewPublicIpAddress
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithNewPublicIpAddress(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithoutLoadBalancerBackends
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithoutLoadBalancerInboundNatRules
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithoutPublicIpAddress
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithPrivateIpAddressDynamic
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithPrivateIpAddressStatic(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithPrivateIpVersion(System.String)
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithSubnet(System.String)
  langs:
  - csharp
  - vb
  name: NicIpConfigurationImpl
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: NicIpConfigurationImpl
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nImplementation for NicIpConfiguration and its create and update interfaces.\n"
  example: []
  syntax:
    content: 'public class NicIpConfigurationImpl : ChildResource<NetworkInterfaceIPConfigurationInner, NetworkInterfaceImpl, INetworkInterface>, INicIpConfiguration, IWrapper<NetworkInterfaceIPConfigurationInner>, IChildResource<INetworkInterface>, IHasPrivateIpAddress, IHasPublicIpAddress, IHasSubnet, IDefinition<IWithCreate>, IBlank<IWithCreate>, IWithAttach<IWithCreate>, IInDefinition<IWithCreate>, IWithPublicIpAddress<IWithCreate>, IWithPublicIpAddress<IWithAttach<IWithCreate>>, IWithExistingPublicIpAddress<IWithAttach<IWithCreate>>, IWithNewPublicIpAddress<IWithAttach<IWithCreate>>, IWithLoadBalancer<IWithCreate>, IWithNetwork<IWithCreate>, IWithSubnet<IWithCreate>, IWithPrivateIp<IWithCreate>, IWithPrivateIpAddress<IWithAttach<IWithCreate>>, IUpdateDefinition<IUpdate>, IBlank<IUpdate>, IWithAttach<IUpdate>, IInUpdate<IUpdate>, IWithNetwork<IUpdate>, IWithPrivateIp<IUpdate>, IWithPrivateIpAddress<IWithAttach<IUpdate>>, IWithSubnet<IUpdate>, IWithPublicIpAddress<IUpdate>, IWithPublicIpAddress<IWithAttach<IUpdate>>, IWithExistingPublicIpAddress<IWithAttach<IUpdate>>, IWithNewPublicIpAddress<IWithAttach<IUpdate>>, IUpdate, ISettable<IUpdate>, IWithSubnet, IWithPrivateIp, IWithPrivateIpAddress<IUpdate>, IWithPublicIpAddress, IWithPublicIpAddress<IUpdate>, IWithExistingPublicIpAddress<IUpdate>, IWithNewPublicIpAddress<IUpdate>, IWithLoadBalancer'
    content.vb: >-
      Public Class NicIpConfigurationImpl
          Inherits ChildResource(Of NetworkInterfaceIPConfigurationInner, NetworkInterfaceImpl, INetworkInterface)
          Implements INicIpConfiguration, IWrapper(Of NetworkInterfaceIPConfigurationInner), IChildResource(Of INetworkInterface), IHasPrivateIpAddress, IHasPublicIpAddress, IHasSubnet, IDefinition(Of IWithCreate), IBlank(Of IWithCreate), IWithAttach(Of IWithCreate), IInDefinition(Of IWithCreate), IWithPublicIpAddress(Of IWithCreate), IWithPublicIpAddress(Of IWithAttach(Of IWithCreate)), IWithExistingPublicIpAddress(Of IWithAttach(Of IWithCreate)), IWithNewPublicIpAddress(Of IWithAttach(Of IWithCreate)), IWithLoadBalancer(Of IWithCreate), IWithNetwork(Of IWithCreate), IWithSubnet(Of IWithCreate), IWithPrivateIp(Of IWithCreate), IWithPrivateIpAddress(Of IWithAttach(Of IWithCreate)), IUpdateDefinition(Of IUpdate), IBlank(Of IUpdate), IWithAttach(Of IUpdate), IInUpdate(Of IUpdate), IWithNetwork(Of IUpdate), IWithPrivateIp(Of IUpdate), IWithPrivateIpAddress(Of IWithAttach(Of IUpdate)), IWithSubnet(Of IUpdate), IWithPublicIpAddress(Of IUpdate), IWithPublicIpAddress(Of IWithAttach(Of IUpdate)), IWithExistingPublicIpAddress(Of IWithAttach(Of IUpdate)), IWithNewPublicIpAddress(Of IWithAttach(Of IUpdate)), IUpdate, ISettable(Of IUpdate), IWithSubnet, IWithPrivateIp, IWithPrivateIpAddress(Of IUpdate), IWithPublicIpAddress, IWithPublicIpAddress(Of IUpdate), IWithExistingPublicIpAddress(Of IUpdate), IWithNewPublicIpAddress(Of IUpdate), IWithLoadBalancer
  inheritance:
  - System.Object
  implements:
  - Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration
  - IWrapper{Microsoft.Azure.Management.Network.Models.NetworkInterfaceIPConfigurationInner}
  - IChildResource{Microsoft.Azure.Management.Fluent.Network.INetworkInterface}
  - Microsoft.Azure.Management.Fluent.Network.IHasPrivateIpAddress
  - Microsoft.Azure.Management.Fluent.Network.IHasPublicIpAddress
  - IHasSubnet
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IDefinition{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IBlank{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}
  - IInDefinition{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}
  - Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}}
  - Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}}
  - Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}}
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}
  - Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}}
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IUpdateDefinition{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IBlank{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}
  - IInUpdate{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPrivateIp{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}}
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithSubnet{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}}
  - Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}}
  - Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}}
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate
  - ISettable{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithSubnet
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithPrivateIp
  - Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithPublicIpAddress
  - Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate}
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Name
  commentId: P:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Name
  id: Name
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: Name
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Name
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
    startLine: 52
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public override string Name { get; }
    content.vb: Public Overrides ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.PrivateIpAddressVersion
  commentId: P:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.PrivateIpAddressVersion
  id: PrivateIpAddressVersion
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: PrivateIpAddressVersion
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.PrivateIpAddressVersion
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PrivateIpAddressVersion
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
    startLine: 60
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public string PrivateIpAddressVersion { get; }
    content.vb: Public ReadOnly Property PrivateIpAddressVersion As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.PublicIpAddressId
  commentId: P:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.PublicIpAddressId
  id: PublicIpAddressId
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: PublicIpAddressId
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.PublicIpAddressId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PublicIpAddressId
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
    startLine: 68
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public string PublicIpAddressId { get; }
    content.vb: Public ReadOnly Property PublicIpAddressId As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.GetPublicIpAddress
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.GetPublicIpAddress
  id: GetPublicIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: GetPublicIpAddress()
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.GetPublicIpAddress()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
    startLine: 76
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public IPublicIpAddress GetPublicIpAddress()
    content.vb: Public Function GetPublicIpAddress As IPublicIpAddress
    return:
      type: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.SubnetName
  commentId: P:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.SubnetName
  id: SubnetName
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: SubnetName
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.SubnetName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SubnetName
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
    startLine: 82
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public string SubnetName { get; }
    content.vb: Public ReadOnly Property SubnetName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.NetworkId
  commentId: P:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.NetworkId
  id: NetworkId
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: NetworkId
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.NetworkId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: NetworkId
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
    startLine: 91
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public string NetworkId { get; }
    content.vb: Public ReadOnly Property NetworkId As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.GetNetwork
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.GetNetwork
  id: GetNetwork
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: GetNetwork()
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.GetNetwork()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetNetwork
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
    startLine: 100
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public INetwork GetNetwork()
    content.vb: Public Function GetNetwork As INetwork
    return:
      type: Microsoft.Azure.Management.Fluent.Network.INetwork
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.PrivateIpAddress
  commentId: P:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.PrivateIpAddress
  id: PrivateIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: PrivateIpAddress
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.PrivateIpAddress
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PrivateIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
    startLine: 105
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public string PrivateIpAddress { get; }
    content.vb: Public ReadOnly Property PrivateIpAddress As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.PrivateIpAllocationMethod
  commentId: P:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.PrivateIpAllocationMethod
  id: PrivateIpAllocationMethod
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: PrivateIpAllocationMethod
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.PrivateIpAllocationMethod
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PrivateIpAllocationMethod
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
    startLine: 113
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public string PrivateIpAllocationMethod { get; }
    content.vb: Public ReadOnly Property PrivateIpAllocationMethod As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Attach
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Attach
  id: Attach
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: Attach()
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Attach()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Attach
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
    startLine: 121
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public NetworkInterfaceImpl Attach()
    content.vb: Public Function Attach As NetworkInterfaceImpl
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithNewNetwork(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork})
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithNewNetwork(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork})
  id: WithNewNetwork(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork})
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: WithNewNetwork(ICreatable<INetwork>)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithNewNetwork(ICreatable<Microsoft.Azure.Management.Fluent.Network.INetwork>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithNewNetwork
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
    startLine: 126
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public NicIpConfigurationImpl WithNewNetwork(ICreatable<INetwork> creatable)
    content.vb: Public Function WithNewNetwork(creatable As ICreatable(Of INetwork)) As NicIpConfigurationImpl
    parameters:
    - id: creatable
      type: ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork}
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithNewNetwork(ICreatable(Of Microsoft.Azure.Management.Fluent.Network.INetwork))
  name.vb: WithNewNetwork(ICreatable(Of INetwork))
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithNewNetwork(System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithNewNetwork(System.String,System.String)
  id: WithNewNetwork(System.String,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: WithNewNetwork(String, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithNewNetwork(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithNewNetwork
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
    startLine: 133
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public NicIpConfigurationImpl WithNewNetwork(string name, string addressSpaceCidr)
    content.vb: Public Function WithNewNetwork(name As String, addressSpaceCidr As String) As NicIpConfigurationImpl
    parameters:
    - id: name
      type: System.String
    - id: addressSpaceCidr
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithNewNetwork(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithNewNetwork(System.String)
  id: WithNewNetwork(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: WithNewNetwork(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithNewNetwork(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithNewNetwork
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
    startLine: 152
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public NicIpConfigurationImpl WithNewNetwork(string addressSpaceCidr)
    content.vb: Public Function WithNewNetwork(addressSpaceCidr As String) As NicIpConfigurationImpl
    parameters:
    - id: addressSpaceCidr
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  id: WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: WithExistingNetwork(INetwork)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithExistingNetwork
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
    startLine: 157
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public NicIpConfigurationImpl WithExistingNetwork(INetwork network)
    content.vb: Public Function WithExistingNetwork(network As INetwork) As NicIpConfigurationImpl
    parameters:
    - id: network
      type: Microsoft.Azure.Management.Fluent.Network.INetwork
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithPrivateIpAddressDynamic
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithPrivateIpAddressDynamic
  id: WithPrivateIpAddressDynamic
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: WithPrivateIpAddressDynamic()
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithPrivateIpAddressDynamic()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithPrivateIpAddressDynamic
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
    startLine: 163
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public NicIpConfigurationImpl WithPrivateIpAddressDynamic()
    content.vb: Public Function WithPrivateIpAddressDynamic As NicIpConfigurationImpl
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithPrivateIpAddressStatic(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithPrivateIpAddressStatic(System.String)
  id: WithPrivateIpAddressStatic(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: WithPrivateIpAddressStatic(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithPrivateIpAddressStatic(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithPrivateIpAddressStatic
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
    startLine: 170
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public NicIpConfigurationImpl WithPrivateIpAddressStatic(string staticPrivateIpAddress)
    content.vb: Public Function WithPrivateIpAddressStatic(staticPrivateIpAddress As String) As NicIpConfigurationImpl
    parameters:
    - id: staticPrivateIpAddress
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  id: WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: WithNewPublicIpAddress(ICreatable<IPublicIpAddress>)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithNewPublicIpAddress(ICreatable<Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithNewPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
    startLine: 177
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public NicIpConfigurationImpl WithNewPublicIpAddress(ICreatable<IPublicIpAddress> creatable)
    content.vb: Public Function WithNewPublicIpAddress(creatable As ICreatable(Of IPublicIpAddress)) As NicIpConfigurationImpl
    parameters:
    - id: creatable
      type: ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress}
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithNewPublicIpAddress(ICreatable(Of Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress))
  name.vb: WithNewPublicIpAddress(ICreatable(Of IPublicIpAddress))
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithNewPublicIpAddress
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithNewPublicIpAddress
  id: WithNewPublicIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: WithNewPublicIpAddress()
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithNewPublicIpAddress()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithNewPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
    startLine: 188
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public NicIpConfigurationImpl WithNewPublicIpAddress()
    content.vb: Public Function WithNewPublicIpAddress As NicIpConfigurationImpl
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithNewPublicIpAddress(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithNewPublicIpAddress(System.String)
  id: WithNewPublicIpAddress(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: WithNewPublicIpAddress(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithNewPublicIpAddress(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithNewPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
    startLine: 194
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public NicIpConfigurationImpl WithNewPublicIpAddress(string leafDnsLabel)
    content.vb: Public Function WithNewPublicIpAddress(leafDnsLabel As String) As NicIpConfigurationImpl
    parameters:
    - id: leafDnsLabel
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  id: WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: WithExistingPublicIpAddress(IPublicIpAddress)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithExistingPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
    startLine: 200
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public NicIpConfigurationImpl WithExistingPublicIpAddress(IPublicIpAddress publicIpAddress)
    content.vb: Public Function WithExistingPublicIpAddress(publicIpAddress As IPublicIpAddress) As NicIpConfigurationImpl
    parameters:
    - id: publicIpAddress
      type: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithExistingPublicIpAddress(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithExistingPublicIpAddress(System.String)
  id: WithExistingPublicIpAddress(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: WithExistingPublicIpAddress(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithExistingPublicIpAddress(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithExistingPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
    startLine: 206
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public NicIpConfigurationImpl WithExistingPublicIpAddress(string resourceId)
    content.vb: Public Function WithExistingPublicIpAddress(resourceId As String) As NicIpConfigurationImpl
    parameters:
    - id: resourceId
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithoutPublicIpAddress
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithoutPublicIpAddress
  id: WithoutPublicIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: WithoutPublicIpAddress()
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithoutPublicIpAddress()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithoutPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
    startLine: 212
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public NicIpConfigurationImpl WithoutPublicIpAddress()
    content.vb: Public Function WithoutPublicIpAddress As NicIpConfigurationImpl
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithSubnet(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithSubnet(System.String)
  id: WithSubnet(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: WithSubnet(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithSubnet(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithSubnet
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
    startLine: 218
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public NicIpConfigurationImpl WithSubnet(string name)
    content.vb: Public Function WithSubnet(name As String) As NicIpConfigurationImpl
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  id: WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: WithExistingLoadBalancerBackend(ILoadBalancer, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithExistingLoadBalancerBackend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
    startLine: 224
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public NicIpConfigurationImpl WithExistingLoadBalancerBackend(ILoadBalancer loadBalancer, string backendName)
    content.vb: Public Function WithExistingLoadBalancerBackend(loadBalancer As ILoadBalancer, backendName As String) As NicIpConfigurationImpl
    parameters:
    - id: loadBalancer
      type: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    - id: backendName
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  id: WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: WithExistingLoadBalancerInboundNatRule(ILoadBalancer, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithExistingLoadBalancerInboundNatRule
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
    startLine: 238
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public NicIpConfigurationImpl WithExistingLoadBalancerInboundNatRule(ILoadBalancer loadBalancer, string inboundNatRuleName)
    content.vb: Public Function WithExistingLoadBalancerInboundNatRule(loadBalancer As ILoadBalancer, inboundNatRuleName As String) As NicIpConfigurationImpl
    parameters:
    - id: loadBalancer
      type: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    - id: inboundNatRuleName
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithPrivateIpVersion(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithPrivateIpVersion(System.String)
  id: WithPrivateIpVersion(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: WithPrivateIpVersion(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithPrivateIpVersion(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithPrivateIpVersion
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
    startLine: 396
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public NicIpConfigurationImpl WithPrivateIpVersion(string ipVersion)
    content.vb: Public Function WithPrivateIpVersion(ipVersion As String) As NicIpConfigurationImpl
    parameters:
    - id: ipVersion
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithoutLoadBalancerBackends
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithoutLoadBalancerBackends
  id: WithoutLoadBalancerBackends
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: WithoutLoadBalancerBackends()
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithoutLoadBalancerBackends()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithoutLoadBalancerBackends
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
    startLine: 402
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public NicIpConfigurationImpl WithoutLoadBalancerBackends()
    content.vb: Public Function WithoutLoadBalancerBackends As NicIpConfigurationImpl
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithoutLoadBalancerInboundNatRules
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithoutLoadBalancerInboundNatRules
  id: WithoutLoadBalancerInboundNatRules
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: WithoutLoadBalancerInboundNatRules()
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.WithoutLoadBalancerInboundNatRules()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithoutLoadBalancerInboundNatRules
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
    startLine: 408
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public NicIpConfigurationImpl WithoutLoadBalancerInboundNatRules()
    content.vb: Public Function WithoutLoadBalancerInboundNatRules As NicIpConfigurationImpl
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.ListAssociatedLoadBalancerInboundNatRules
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.ListAssociatedLoadBalancerInboundNatRules
  id: ListAssociatedLoadBalancerInboundNatRules
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: ListAssociatedLoadBalancerInboundNatRules()
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.ListAssociatedLoadBalancerInboundNatRules()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListAssociatedLoadBalancerInboundNatRules
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
    startLine: 414
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public IList<IInboundNatRule> ListAssociatedLoadBalancerInboundNatRules()
    content.vb: Public Function ListAssociatedLoadBalancerInboundNatRules As IList(Of IInboundNatRule)
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Fluent.Network.IInboundNatRule}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.ListAssociatedLoadBalancerBackends
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.ListAssociatedLoadBalancerBackends
  id: ListAssociatedLoadBalancerBackends
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: ListAssociatedLoadBalancerBackends()
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.ListAssociatedLoadBalancerBackends()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListAssociatedLoadBalancerBackends
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/NicIpConfigurationImpl.cs
    startLine: 440
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: public IList<IBackend> ListAssociatedLoadBalancerBackends()
    content.vb: Public Function ListAssociatedLoadBalancerBackends As IList(Of IBackend)
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Fluent.Network.IBackend}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Update#IWithNewPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IUpdate}#WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Update#IWithNewPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IUpdate}#WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  id: Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Update#IWithNewPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IUpdate}#WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: IWithNewPublicIpAddress<IUpdate>.WithNewPublicIpAddress(ICreatable<IPublicIpAddress>)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>.WithNewPublicIpAddress(ICreatable<Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>.WithNewPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nCreates a new public IP address to associate with the resource, based on the provided definition.\n"
  example: []
  syntax:
    content: IUpdate IWithNewPublicIpAddress<IUpdate>.WithNewPublicIpAddress(ICreatable<IPublicIpAddress> creatable)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>.WithNewPublicIpAddress(creatable As ICreatable(Of IPublicIpAddress)) As IUpdate Implements IWithNewPublicIpAddress(Of IUpdate).WithNewPublicIpAddress
    parameters:
    - id: creatable
      type: ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress}
      description: creatable a creatable definition for a new public IP address
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate
      description: the next stage of the update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate}.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  fullName.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>.WithNewPublicIpAddress(ICreatable(Of Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress))
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>.WithNewPublicIpAddress(ICreatable(Of IPublicIpAddress))
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Update#IWithNewPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IUpdate}#WithNewPublicIpAddress
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Update#IWithNewPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IUpdate}#WithNewPublicIpAddress
  id: Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Update#IWithNewPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IUpdate}#WithNewPublicIpAddress
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: IWithNewPublicIpAddress<IUpdate>.WithNewPublicIpAddress()
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>.WithNewPublicIpAddress()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>.WithNewPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 40
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IUpdate IWithNewPublicIpAddress<IUpdate>.WithNewPublicIpAddress()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>.WithNewPublicIpAddress As IUpdate Implements IWithNewPublicIpAddress(Of IUpdate).WithNewPublicIpAddress
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate}.WithNewPublicIpAddress
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>.WithNewPublicIpAddress()
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Update#IWithNewPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IUpdate}#WithNewPublicIpAddress(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Update#IWithNewPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IUpdate}#WithNewPublicIpAddress(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Update#IWithNewPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IUpdate}#WithNewPublicIpAddress(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: IWithNewPublicIpAddress<IUpdate>.WithNewPublicIpAddress(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>.WithNewPublicIpAddress(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>.WithNewPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 52
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IUpdate IWithNewPublicIpAddress<IUpdate>.WithNewPublicIpAddress(string leafDnsLabel)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>.WithNewPublicIpAddress(leafDnsLabel As String) As IUpdate Implements IWithNewPublicIpAddress(Of IUpdate).WithNewPublicIpAddress
    parameters:
    - id: leafDnsLabel
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate}.WithNewPublicIpAddress(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>.WithNewPublicIpAddress(String)
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#UpdateDefinition#IWithNewPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}}#WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#UpdateDefinition#IWithNewPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}}#WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  id: Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#UpdateDefinition#IWithNewPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}}#WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: IWithNewPublicIpAddress<IWithAttach<IUpdate>>.WithNewPublicIpAddress(ICreatable<IPublicIpAddress>)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>>.WithNewPublicIpAddress(ICreatable<Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>>.WithNewPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 61
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nCreates a new public IP address to associate with the resource, based on the provided definition.\n"
  example: []
  syntax:
    content: IWithAttach<IUpdate> IWithNewPublicIpAddress<IWithAttach<IUpdate>>.WithNewPublicIpAddress(ICreatable<IPublicIpAddress> creatable)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>>.WithNewPublicIpAddress(creatable As ICreatable(Of IPublicIpAddress)) As IWithAttach(Of IUpdate) Implements IWithNewPublicIpAddress(Of IWithAttach(Of IUpdate)).WithNewPublicIpAddress
    parameters:
    - id: creatable
      type: ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress}
      description: creatable a creatable definition for a new public IP address
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}}.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  fullName.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>>.WithNewPublicIpAddress(ICreatable(Of Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress))
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>>.WithNewPublicIpAddress(ICreatable(Of IPublicIpAddress))
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#UpdateDefinition#IWithNewPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}}#WithNewPublicIpAddress
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#UpdateDefinition#IWithNewPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}}#WithNewPublicIpAddress
  id: Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#UpdateDefinition#IWithNewPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}}#WithNewPublicIpAddress
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: IWithNewPublicIpAddress<IWithAttach<IUpdate>>.WithNewPublicIpAddress()
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>>.WithNewPublicIpAddress()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>>.WithNewPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 71
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IWithAttach<IUpdate> IWithNewPublicIpAddress<IWithAttach<IUpdate>>.WithNewPublicIpAddress()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>>.WithNewPublicIpAddress As IWithAttach(Of IUpdate) Implements IWithNewPublicIpAddress(Of IWithAttach(Of IUpdate)).WithNewPublicIpAddress
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}}.WithNewPublicIpAddress
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>>.WithNewPublicIpAddress()
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#UpdateDefinition#IWithNewPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}}#WithNewPublicIpAddress(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#UpdateDefinition#IWithNewPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}}#WithNewPublicIpAddress(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#UpdateDefinition#IWithNewPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}}#WithNewPublicIpAddress(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: IWithNewPublicIpAddress<IWithAttach<IUpdate>>.WithNewPublicIpAddress(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>>.WithNewPublicIpAddress(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>>.WithNewPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 83
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IWithAttach<IUpdate> IWithNewPublicIpAddress<IWithAttach<IUpdate>>.WithNewPublicIpAddress(string leafDnsLabel)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>>.WithNewPublicIpAddress(leafDnsLabel As String) As IWithAttach(Of IUpdate) Implements IWithNewPublicIpAddress(Of IWithAttach(Of IUpdate)).WithNewPublicIpAddress
    parameters:
    - id: leafDnsLabel
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}}.WithNewPublicIpAddress(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>>.WithNewPublicIpAddress(String)
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Definition#IWithNewPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}}#WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Definition#IWithNewPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}}#WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  id: Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Definition#IWithNewPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}}#WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: IWithNewPublicIpAddress<IWithAttach<IWithCreate>>.WithNewPublicIpAddress(ICreatable<IPublicIpAddress>)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>>.WithNewPublicIpAddress(ICreatable<Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>>.WithNewPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 92
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nCreates a new public IP address to associate with the resource.\n"
  example: []
  syntax:
    content: IWithAttach<IWithCreate> IWithNewPublicIpAddress<IWithAttach<IWithCreate>>.WithNewPublicIpAddress(ICreatable<IPublicIpAddress> creatable)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>>.WithNewPublicIpAddress(creatable As ICreatable(Of IPublicIpAddress)) As IWithAttach(Of IWithCreate) Implements IWithNewPublicIpAddress(Of IWithAttach(Of IWithCreate)).WithNewPublicIpAddress
    parameters:
    - id: creatable
      type: ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress}
      description: creatable a creatable definition for a new public IP
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}}.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  fullName.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>>.WithNewPublicIpAddress(ICreatable(Of Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress))
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>>.WithNewPublicIpAddress(ICreatable(Of IPublicIpAddress))
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Definition#IWithNewPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}}#WithNewPublicIpAddress
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Definition#IWithNewPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}}#WithNewPublicIpAddress
  id: Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Definition#IWithNewPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}}#WithNewPublicIpAddress
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: IWithNewPublicIpAddress<IWithAttach<IWithCreate>>.WithNewPublicIpAddress()
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>>.WithNewPublicIpAddress()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>>.WithNewPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 102
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IWithAttach<IWithCreate> IWithNewPublicIpAddress<IWithAttach<IWithCreate>>.WithNewPublicIpAddress()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>>.WithNewPublicIpAddress As IWithAttach(Of IWithCreate) Implements IWithNewPublicIpAddress(Of IWithAttach(Of IWithCreate)).WithNewPublicIpAddress
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}}.WithNewPublicIpAddress
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>>.WithNewPublicIpAddress()
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Definition#IWithNewPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}}#WithNewPublicIpAddress(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Definition#IWithNewPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}}#WithNewPublicIpAddress(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Definition#IWithNewPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}}#WithNewPublicIpAddress(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: IWithNewPublicIpAddress<IWithAttach<IWithCreate>>.WithNewPublicIpAddress(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>>.WithNewPublicIpAddress(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>>.WithNewPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 114
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IWithAttach<IWithCreate> IWithNewPublicIpAddress<IWithAttach<IWithCreate>>.WithNewPublicIpAddress(string leafDnsLabel)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>>.WithNewPublicIpAddress(leafDnsLabel As String) As IWithAttach(Of IWithCreate) Implements IWithNewPublicIpAddress(Of IWithAttach(Of IWithCreate)).WithNewPublicIpAddress
    parameters:
    - id: leafDnsLabel
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}}.WithNewPublicIpAddress(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>>.WithNewPublicIpAddress(String)
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithPrivateIp{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}#WithPrivateIpVersion(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithPrivateIp{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}#WithPrivateIpVersion(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithPrivateIp{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}#WithPrivateIpVersion(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: IWithPrivateIp<IUpdate>.WithPrivateIpVersion(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPrivateIp<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>.WithPrivateIpVersion(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPrivateIp<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>.WithPrivateIpVersion
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 123
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSpecifies the IP version for the private IP address.\n"
  example: []
  syntax:
    content: IWithAttach<IUpdate> IWithPrivateIp<IUpdate>.WithPrivateIpVersion(string ipVersion)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPrivateIp<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>.WithPrivateIpVersion(ipVersion As String) As IWithAttach(Of IUpdate) Implements IWithPrivateIp(Of IUpdate).WithPrivateIpVersion
    parameters:
    - id: ipVersion
      type: System.String
      description: ipVersion an IP version
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPrivateIp{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}.WithPrivateIpVersion(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPrivateIp<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>.WithPrivateIpVersion(String)
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithPrivateIp{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}#WithPrivateIpVersion(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithPrivateIp{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}#WithPrivateIpVersion(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithPrivateIp{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}#WithPrivateIpVersion(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: IWithPrivateIp<IWithCreate>.WithPrivateIpVersion(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>.WithPrivateIpVersion(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>.WithPrivateIpVersion
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 132
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSpecifies the IP version for the private IP address.\n"
  example: []
  syntax:
    content: IWithAttach<IWithCreate> IWithPrivateIp<IWithCreate>.WithPrivateIpVersion(string ipVersion)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>.WithPrivateIpVersion(ipVersion As String) As IWithAttach(Of IWithCreate) Implements IWithPrivateIp(Of IWithCreate).WithPrivateIpVersion
    parameters:
    - id: ipVersion
      type: System.String
      description: ipVersion an IP version
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}.WithPrivateIpVersion(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>.WithPrivateIpVersion(String)
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithNetwork{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}#WithNewNetwork(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork})
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithNetwork{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}#WithNewNetwork(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork})
  id: Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithNetwork{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}#WithNewNetwork(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork})
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: IWithNetwork<IUpdate>.WithNewNetwork(ICreatable<INetwork>)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>.WithNewNetwork(ICreatable<Microsoft.Azure.Management.Fluent.Network.INetwork>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>.WithNewNetwork
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 142
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nCreate a new virtual network to associate with the  network interface IP configuration,\nbased on the provided definition.\n"
  example: []
  syntax:
    content: IWithPrivateIp<IUpdate> IWithNetwork<IUpdate>.WithNewNetwork(ICreatable<INetwork> creatable)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>.WithNewNetwork(creatable As ICreatable(Of INetwork)) As IWithPrivateIp(Of IUpdate) Implements IWithNetwork(Of IUpdate).WithNewNetwork
    parameters:
    - id: creatable
      type: ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork}
      description: creatable a creatable definition for a new virtual network
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPrivateIp{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}
      description: the next stage of the network interface IP configuration definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}.WithNewNetwork(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork})
  fullName.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>.WithNewNetwork(ICreatable(Of Microsoft.Azure.Management.Fluent.Network.INetwork))
  name.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>.WithNewNetwork(ICreatable(Of INetwork))
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithNetwork{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}#WithNewNetwork(System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithNetwork{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}#WithNewNetwork(System.String,System.String)
  id: Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithNetwork{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}#WithNewNetwork(System.String,System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: IWithNetwork<IUpdate>.WithNewNetwork(String, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>.WithNewNetwork(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>.WithNewNetwork
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 156
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IWithPrivateIp<IUpdate> IWithNetwork<IUpdate>.WithNewNetwork(string name, string addressSpace)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>.WithNewNetwork(name As String, addressSpace As String) As IWithPrivateIp(Of IUpdate) Implements IWithNetwork(Of IUpdate).WithNewNetwork
    parameters:
    - id: name
      type: System.String
    - id: addressSpace
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPrivateIp{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}.WithNewNetwork(System.String,System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>.WithNewNetwork(String, String)
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithNetwork{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}#WithNewNetwork(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithNetwork{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}#WithNewNetwork(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithNetwork{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}#WithNewNetwork(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: IWithNetwork<IUpdate>.WithNewNetwork(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>.WithNewNetwork(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>.WithNewNetwork
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 169
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IWithPrivateIp<IUpdate> IWithNetwork<IUpdate>.WithNewNetwork(string addressSpace)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>.WithNewNetwork(addressSpace As String) As IWithPrivateIp(Of IUpdate) Implements IWithNetwork(Of IUpdate).WithNewNetwork
    parameters:
    - id: addressSpace
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPrivateIp{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}.WithNewNetwork(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>.WithNewNetwork(String)
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithNetwork{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}#WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithNetwork{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}#WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  id: Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithNetwork{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}#WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: IWithNetwork<IUpdate>.WithExistingNetwork(INetwork)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>.WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>.WithExistingNetwork
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 178
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nAssociate an existing virtual network with the network interface IP configuration.\n"
  example: []
  syntax:
    content: IWithSubnet<IUpdate> IWithNetwork<IUpdate>.WithExistingNetwork(INetwork network)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>.WithExistingNetwork(network As INetwork) As IWithSubnet(Of IUpdate) Implements IWithNetwork(Of IUpdate).WithExistingNetwork
    parameters:
    - id: network
      type: Microsoft.Azure.Management.Fluent.Network.INetwork
      description: network an existing virtual network
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithSubnet{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}
      description: the next stage of the network interface IP configuration definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}.WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  name.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>.WithExistingNetwork(INetwork)
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithNetwork{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}#WithNewNetwork(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork})
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithNetwork{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}#WithNewNetwork(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork})
  id: Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithNetwork{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}#WithNewNetwork(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork})
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: IWithNetwork<IWithCreate>.WithNewNetwork(ICreatable<INetwork>)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>.WithNewNetwork(ICreatable<Microsoft.Azure.Management.Fluent.Network.INetwork>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>.WithNewNetwork
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 188
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nCreate a new virtual network to associate with the  network interface IP configuration,\nbased on the provided definition.\n"
  example: []
  syntax:
    content: IWithPrivateIp<IWithCreate> IWithNetwork<IWithCreate>.WithNewNetwork(ICreatable<INetwork> creatable)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>.WithNewNetwork(creatable As ICreatable(Of INetwork)) As IWithPrivateIp(Of IWithCreate) Implements IWithNetwork(Of IWithCreate).WithNewNetwork
    parameters:
    - id: creatable
      type: ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork}
      description: creatable a creatable definition for a new virtual network
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}
      description: the next stage of the network interface IP configuration definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}.WithNewNetwork(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork})
  fullName.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>.WithNewNetwork(ICreatable(Of Microsoft.Azure.Management.Fluent.Network.INetwork))
  name.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>.WithNewNetwork(ICreatable(Of INetwork))
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithNetwork{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}#WithNewNetwork(System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithNetwork{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}#WithNewNetwork(System.String,System.String)
  id: Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithNetwork{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}#WithNewNetwork(System.String,System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: IWithNetwork<IWithCreate>.WithNewNetwork(String, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>.WithNewNetwork(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>.WithNewNetwork
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 202
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IWithPrivateIp<IWithCreate> IWithNetwork<IWithCreate>.WithNewNetwork(string name, string addressSpace)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>.WithNewNetwork(name As String, addressSpace As String) As IWithPrivateIp(Of IWithCreate) Implements IWithNetwork(Of IWithCreate).WithNewNetwork
    parameters:
    - id: name
      type: System.String
    - id: addressSpace
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}.WithNewNetwork(System.String,System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>.WithNewNetwork(String, String)
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithNetwork{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}#WithNewNetwork(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithNetwork{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}#WithNewNetwork(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithNetwork{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}#WithNewNetwork(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: IWithNetwork<IWithCreate>.WithNewNetwork(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>.WithNewNetwork(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>.WithNewNetwork
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 215
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  syntax:
    content: IWithPrivateIp<IWithCreate> IWithNetwork<IWithCreate>.WithNewNetwork(string addressSpace)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>.WithNewNetwork(addressSpace As String) As IWithPrivateIp(Of IWithCreate) Implements IWithNetwork(Of IWithCreate).WithNewNetwork
    parameters:
    - id: addressSpace
      type: System.String
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}.WithNewNetwork(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>.WithNewNetwork(String)
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithNetwork{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}#WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithNetwork{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}#WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  id: Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithNetwork{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}#WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: IWithNetwork<IWithCreate>.WithExistingNetwork(INetwork)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>.WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>.WithExistingNetwork
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 224
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nAssociate an existing virtual network with the network interface IP configuration.\n"
  example: []
  syntax:
    content: IWithSubnet<IWithCreate> IWithNetwork<IWithCreate>.WithExistingNetwork(INetwork network)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>.WithExistingNetwork(network As INetwork) As IWithSubnet(Of IWithCreate) Implements IWithNetwork(Of IWithCreate).WithExistingNetwork
    parameters:
    - id: network
      type: Microsoft.Azure.Management.Fluent.Network.INetwork
      description: network an existing virtual network
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}
      description: the next stage of the network interface IP configuration definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}.WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  name.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>.WithExistingNetwork(INetwork)
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#IHasPublicIpAddress#PublicIpAddressId
  commentId: P:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#IHasPublicIpAddress#PublicIpAddressId
  id: Microsoft#Azure#Management#Fluent#Network#IHasPublicIpAddress#PublicIpAddressId
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: IHasPublicIpAddress.PublicIpAddressId
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.IHasPublicIpAddress.PublicIpAddressId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.IHasPublicIpAddress.PublicIpAddressId
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 229
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: string IHasPublicIpAddress.PublicIpAddressId { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.Azure.Management.Fluent.Network.IHasPublicIpAddress.PublicIpAddressId As String Implements IHasPublicIpAddress.PublicIpAddressId
    parameters: []
    return:
      type: System.String
      description: the resource ID of the associated public IP address
  implements:
  - Microsoft.Azure.Management.Fluent.Network.IHasPublicIpAddress.PublicIpAddressId
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.Azure.Management.Fluent.Network.IHasPublicIpAddress.PublicIpAddressId
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#IHasPublicIpAddress#GetPublicIpAddress
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#IHasPublicIpAddress#GetPublicIpAddress
  id: Microsoft#Azure#Management#Fluent#Network#IHasPublicIpAddress#GetPublicIpAddress
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: IHasPublicIpAddress.GetPublicIpAddress()
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.IHasPublicIpAddress.GetPublicIpAddress()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.IHasPublicIpAddress.GetPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 237
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: IPublicIpAddress IHasPublicIpAddress.GetPublicIpAddress()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.IHasPublicIpAddress.GetPublicIpAddress As IPublicIpAddress Implements IHasPublicIpAddress.GetPublicIpAddress
    return:
      type: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
      description: the associated public IP address
  implements:
  - Microsoft.Azure.Management.Fluent.Network.IHasPublicIpAddress.GetPublicIpAddress
  name.vb: Microsoft.Azure.Management.Fluent.Network.IHasPublicIpAddress.GetPublicIpAddress()
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#INicIpConfiguration#ListAssociatedLoadBalancerInboundNatRules
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#INicIpConfiguration#ListAssociatedLoadBalancerInboundNatRules
  id: Microsoft#Azure#Management#Fluent#Network#INicIpConfiguration#ListAssociatedLoadBalancerInboundNatRules
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: INicIpConfiguration.ListAssociatedLoadBalancerInboundNatRules()
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration.ListAssociatedLoadBalancerInboundNatRules()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration.ListAssociatedLoadBalancerInboundNatRules
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 242
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: List<IInboundNatRule> INicIpConfiguration.ListAssociatedLoadBalancerInboundNatRules()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration.ListAssociatedLoadBalancerInboundNatRules As List(Of IInboundNatRule) Implements INicIpConfiguration.ListAssociatedLoadBalancerInboundNatRules
    return:
      type: System.Collections.Generic.List{Microsoft.Azure.Management.Fluent.Network.IInboundNatRule}
      description: the load balancer inbound NAT rules associated with this network interface IP configuration
  implements:
  - Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration.ListAssociatedLoadBalancerInboundNatRules
  name.vb: Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration.ListAssociatedLoadBalancerInboundNatRules()
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#INicIpConfiguration#ListAssociatedLoadBalancerBackends
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#INicIpConfiguration#ListAssociatedLoadBalancerBackends
  id: Microsoft#Azure#Management#Fluent#Network#INicIpConfiguration#ListAssociatedLoadBalancerBackends
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: INicIpConfiguration.ListAssociatedLoadBalancerBackends()
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration.ListAssociatedLoadBalancerBackends()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration.ListAssociatedLoadBalancerBackends
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 247
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: List<IBackend> INicIpConfiguration.ListAssociatedLoadBalancerBackends()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration.ListAssociatedLoadBalancerBackends As List(Of IBackend) Implements INicIpConfiguration.ListAssociatedLoadBalancerBackends
    return:
      type: System.Collections.Generic.List{Microsoft.Azure.Management.Fluent.Network.IBackend}
      description: the load balancer backends associated with this network interface IP configuration
  implements:
  - Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration.ListAssociatedLoadBalancerBackends
  name.vb: Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration.ListAssociatedLoadBalancerBackends()
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#INicIpConfiguration#GetNetwork
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#INicIpConfiguration#GetNetwork
  id: Microsoft#Azure#Management#Fluent#Network#INicIpConfiguration#GetNetwork
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: INicIpConfiguration.GetNetwork()
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration.GetNetwork()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration.GetNetwork
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 252
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: INetwork INicIpConfiguration.GetNetwork()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration.GetNetwork As INetwork Implements INicIpConfiguration.GetNetwork
    return:
      type: Microsoft.Azure.Management.Fluent.Network.INetwork
      description: the virtual network associated with this IP configuration
  implements:
  - Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration.GetNetwork
  name.vb: Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration.GetNetwork()
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#INicIpConfiguration#PrivateIpAddressVersion
  commentId: P:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#INicIpConfiguration#PrivateIpAddressVersion
  id: Microsoft#Azure#Management#Fluent#Network#INicIpConfiguration#PrivateIpAddressVersion
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: INicIpConfiguration.PrivateIpAddressVersion
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration.PrivateIpAddressVersion
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration.PrivateIpAddressVersion
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 257
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: string INicIpConfiguration.PrivateIpAddressVersion { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration.PrivateIpAddressVersion As String Implements INicIpConfiguration.PrivateIpAddressVersion
    parameters: []
    return:
      type: System.String
      description: private IP address version
  implements:
  - Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration.PrivateIpAddressVersion
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration.PrivateIpAddressVersion
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IWithLoadBalancer#WithoutLoadBalancerBackends
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IWithLoadBalancer#WithoutLoadBalancerBackends
  id: Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IWithLoadBalancer#WithoutLoadBalancerBackends
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: IWithLoadBalancer.WithoutLoadBalancerBackends()
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer.WithoutLoadBalancerBackends()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer.WithoutLoadBalancerBackends
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 284
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nRemoves all the existing associations with load balancer backends.\n"
  example: []
  syntax:
    content: IUpdate IWithLoadBalancer.WithoutLoadBalancerBackends()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer.WithoutLoadBalancerBackends As IUpdate Implements IWithLoadBalancer.WithoutLoadBalancerBackends
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate
      description: the next stage of the update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer.WithoutLoadBalancerBackends
  name.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer.WithoutLoadBalancerBackends()
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IWithLoadBalancer#WithoutLoadBalancerInboundNatRules
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IWithLoadBalancer#WithoutLoadBalancerInboundNatRules
  id: Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IWithLoadBalancer#WithoutLoadBalancerInboundNatRules
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: IWithLoadBalancer.WithoutLoadBalancerInboundNatRules()
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer.WithoutLoadBalancerInboundNatRules()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer.WithoutLoadBalancerInboundNatRules
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 292
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nRemoves all the existing associations with load balancer inbound NAT rules.\n"
  example: []
  syntax:
    content: IUpdate IWithLoadBalancer.WithoutLoadBalancerInboundNatRules()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer.WithoutLoadBalancerInboundNatRules As IUpdate Implements IWithLoadBalancer.WithoutLoadBalancerInboundNatRules
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate
      description: the next stage of the update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer.WithoutLoadBalancerInboundNatRules
  name.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer.WithoutLoadBalancerInboundNatRules()
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IWithLoadBalancer#WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IWithLoadBalancer#WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  id: Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IWithLoadBalancer#WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule(ILoadBalancer, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 302
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSpecifies the load balancer inbound NAT rule to associate this IP configuration with.\n"
  example: []
  syntax:
    content: IUpdate IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule(ILoadBalancer loadBalancer, string inboundNatRuleName)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule(loadBalancer As ILoadBalancer, inboundNatRuleName As String) As IUpdate Implements IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule
    parameters:
    - id: loadBalancer
      type: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
      description: loadBalancer an existing load balancer
    - id: inboundNatRuleName
      type: System.String
      description: inboundNatRuleName the name of an existing inbound NAT rule on the selected load balancer
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate
      description: the next stage of the update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule(ILoadBalancer, String)
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IWithLoadBalancer#WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IWithLoadBalancer#WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  id: Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IWithLoadBalancer#WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: IWithLoadBalancer.WithExistingLoadBalancerBackend(ILoadBalancer, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer.WithExistingLoadBalancerBackend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 312
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSpecifies the load balancer to associate this IP configuration with.\n"
  example: []
  syntax:
    content: IUpdate IWithLoadBalancer.WithExistingLoadBalancerBackend(ILoadBalancer loadBalancer, string backendName)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer.WithExistingLoadBalancerBackend(loadBalancer As ILoadBalancer, backendName As String) As IUpdate Implements IWithLoadBalancer.WithExistingLoadBalancerBackend
    parameters:
    - id: loadBalancer
      type: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
      description: loadBalancer an existing load balancer
    - id: backendName
      type: System.String
      description: backendName the name of an existing backend on that load balancer
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate
      description: the next stage of the update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer.WithExistingLoadBalancerBackend(ILoadBalancer, String)
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPrivateIpAddress#Update#IWithPrivateIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IUpdate}#WithPrivateIpAddressStatic(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPrivateIpAddress#Update#IWithPrivateIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IUpdate}#WithPrivateIpAddressStatic(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#HasPrivateIpAddress#Update#IWithPrivateIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IUpdate}#WithPrivateIpAddressStatic(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: IWithPrivateIpAddress<IUpdate>.WithPrivateIpAddressStatic(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>.WithPrivateIpAddressStatic(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>.WithPrivateIpAddressStatic
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 321
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nAssigns the specified static private IP address within the associated subnet.\n"
  example: []
  syntax:
    content: IUpdate IWithPrivateIpAddress<IUpdate>.WithPrivateIpAddressStatic(string ipAddress)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>.WithPrivateIpAddressStatic(ipAddress As String) As IUpdate Implements IWithPrivateIpAddress(Of IUpdate).WithPrivateIpAddressStatic
    parameters:
    - id: ipAddress
      type: System.String
      description: ipAddress a static IP address within the associated private IP range
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate
      description: the next stage of the update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate}.WithPrivateIpAddressStatic(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>.WithPrivateIpAddressStatic(String)
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPrivateIpAddress#Update#IWithPrivateIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IUpdate}#WithPrivateIpAddressDynamic
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPrivateIpAddress#Update#IWithPrivateIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IUpdate}#WithPrivateIpAddressDynamic
  id: Microsoft#Azure#Management#Fluent#Network#HasPrivateIpAddress#Update#IWithPrivateIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IUpdate}#WithPrivateIpAddressDynamic
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: IWithPrivateIpAddress<IUpdate>.WithPrivateIpAddressDynamic()
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>.WithPrivateIpAddressDynamic()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>.WithPrivateIpAddressDynamic
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 329
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nEnables dynamic private IP address allocation within the associated subnet.\n"
  example: []
  syntax:
    content: IUpdate IWithPrivateIpAddress<IUpdate>.WithPrivateIpAddressDynamic()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>.WithPrivateIpAddressDynamic As IUpdate Implements IWithPrivateIpAddress(Of IUpdate).WithPrivateIpAddressDynamic
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate
      description: the next stage of the update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate}.WithPrivateIpAddressDynamic
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>.WithPrivateIpAddressDynamic()
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPrivateIpAddress#UpdateDefinition#IWithPrivateIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}}#WithPrivateIpAddressStatic(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPrivateIpAddress#UpdateDefinition#IWithPrivateIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}}#WithPrivateIpAddressStatic(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#HasPrivateIpAddress#UpdateDefinition#IWithPrivateIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}}#WithPrivateIpAddressStatic(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: IWithPrivateIpAddress<IWithAttach<IUpdate>>.WithPrivateIpAddressStatic(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>>.WithPrivateIpAddressStatic(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>>.WithPrivateIpAddressStatic
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 338
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nAssigns the specified static private IP address within the associated subnet.\n"
  example: []
  syntax:
    content: IWithAttach<IUpdate> IWithPrivateIpAddress<IWithAttach<IUpdate>>.WithPrivateIpAddressStatic(string ipAddress)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>>.WithPrivateIpAddressStatic(ipAddress As String) As IWithAttach(Of IUpdate) Implements IWithPrivateIpAddress(Of IWithAttach(Of IUpdate)).WithPrivateIpAddressStatic
    parameters:
    - id: ipAddress
      type: System.String
      description: ipAddress a static IP address within the associated private IP range
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}}.WithPrivateIpAddressStatic(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>>.WithPrivateIpAddressStatic(String)
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPrivateIpAddress#UpdateDefinition#IWithPrivateIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}}#WithPrivateIpAddressDynamic
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPrivateIpAddress#UpdateDefinition#IWithPrivateIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}}#WithPrivateIpAddressDynamic
  id: Microsoft#Azure#Management#Fluent#Network#HasPrivateIpAddress#UpdateDefinition#IWithPrivateIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}}#WithPrivateIpAddressDynamic
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: IWithPrivateIpAddress<IWithAttach<IUpdate>>.WithPrivateIpAddressDynamic()
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>>.WithPrivateIpAddressDynamic()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>>.WithPrivateIpAddressDynamic
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 346
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nEnables dynamic private IP address allocation within the associated subnet.\n"
  example: []
  syntax:
    content: IWithAttach<IUpdate> IWithPrivateIpAddress<IWithAttach<IUpdate>>.WithPrivateIpAddressDynamic()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>>.WithPrivateIpAddressDynamic As IWithAttach(Of IUpdate) Implements IWithPrivateIpAddress(Of IWithAttach(Of IUpdate)).WithPrivateIpAddressDynamic
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}}.WithPrivateIpAddressDynamic
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>>.WithPrivateIpAddressDynamic()
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPrivateIpAddress#Definition#IWithPrivateIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}}#WithPrivateIpAddressStatic(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPrivateIpAddress#Definition#IWithPrivateIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}}#WithPrivateIpAddressStatic(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#HasPrivateIpAddress#Definition#IWithPrivateIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}}#WithPrivateIpAddressStatic(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: IWithPrivateIpAddress<IWithAttach<IWithCreate>>.WithPrivateIpAddressStatic(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>>.WithPrivateIpAddressStatic(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>>.WithPrivateIpAddressStatic
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 355
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nAssigns the specified static private IP address within the associated subnet.\n"
  example: []
  syntax:
    content: IWithAttach<IWithCreate> IWithPrivateIpAddress<IWithAttach<IWithCreate>>.WithPrivateIpAddressStatic(string ipAddress)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>>.WithPrivateIpAddressStatic(ipAddress As String) As IWithAttach(Of IWithCreate) Implements IWithPrivateIpAddress(Of IWithAttach(Of IWithCreate)).WithPrivateIpAddressStatic
    parameters:
    - id: ipAddress
      type: System.String
      description: ipAddress a static IP address within the associated private IP range
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}}.WithPrivateIpAddressStatic(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>>.WithPrivateIpAddressStatic(String)
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPrivateIpAddress#Definition#IWithPrivateIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}}#WithPrivateIpAddressDynamic
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPrivateIpAddress#Definition#IWithPrivateIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}}#WithPrivateIpAddressDynamic
  id: Microsoft#Azure#Management#Fluent#Network#HasPrivateIpAddress#Definition#IWithPrivateIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}}#WithPrivateIpAddressDynamic
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: IWithPrivateIpAddress<IWithAttach<IWithCreate>>.WithPrivateIpAddressDynamic()
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>>.WithPrivateIpAddressDynamic()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>>.WithPrivateIpAddressDynamic
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 363
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nEnables dynamic private IP address allocation within the associated subnet.\n"
  example: []
  syntax:
    content: IWithAttach<IWithCreate> IWithPrivateIpAddress<IWithAttach<IWithCreate>>.WithPrivateIpAddressDynamic()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>>.WithPrivateIpAddressDynamic As IWithAttach(Of IWithCreate) Implements IWithPrivateIpAddress(Of IWithAttach(Of IWithCreate)).WithPrivateIpAddressDynamic
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}}.WithPrivateIpAddressDynamic
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>>.WithPrivateIpAddressDynamic()
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithLoadBalancer{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}#WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithLoadBalancer{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}#WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  id: Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithLoadBalancer{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}#WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: IWithLoadBalancer<IWithCreate>.WithExistingLoadBalancerInboundNatRule(ILoadBalancer, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>.WithExistingLoadBalancerInboundNatRule
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 373
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSpecifies the load balancer inbound NAT rule to associate this IP configuration with.\n"
  example: []
  syntax:
    content: IWithAttach<IWithCreate> IWithLoadBalancer<IWithCreate>.WithExistingLoadBalancerInboundNatRule(ILoadBalancer loadBalancer, string inboundNatRuleName)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>.WithExistingLoadBalancerInboundNatRule(loadBalancer As ILoadBalancer, inboundNatRuleName As String) As IWithAttach(Of IWithCreate) Implements IWithLoadBalancer(Of IWithCreate).WithExistingLoadBalancerInboundNatRule
    parameters:
    - id: loadBalancer
      type: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
      description: loadBalancer an existing load balancer
    - id: inboundNatRuleName
      type: System.String
      description: inboundNatRuleName the name of an existing inbound NAT rule on the selected load balancer
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}
      description: the next stage of the update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>.WithExistingLoadBalancerInboundNatRule(ILoadBalancer, String)
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithLoadBalancer{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}#WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithLoadBalancer{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}#WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  id: Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithLoadBalancer{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}#WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: IWithLoadBalancer<IWithCreate>.WithExistingLoadBalancerBackend(ILoadBalancer, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>.WithExistingLoadBalancerBackend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 383
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSpecifies the load balancer backend to associate this IP configuration with.\n"
  example: []
  syntax:
    content: IWithAttach<IWithCreate> IWithLoadBalancer<IWithCreate>.WithExistingLoadBalancerBackend(ILoadBalancer loadBalancer, string backendName)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>.WithExistingLoadBalancerBackend(loadBalancer As ILoadBalancer, backendName As String) As IWithAttach(Of IWithCreate) Implements IWithLoadBalancer(Of IWithCreate).WithExistingLoadBalancerBackend
    parameters:
    - id: loadBalancer
      type: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
      description: loadBalancer an existing load balancer
    - id: backendName
      type: System.String
      description: backendName the name of an existing backend on that load balancer
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}
      description: the next stage of the update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>.WithExistingLoadBalancerBackend(ILoadBalancer, String)
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#IHasPrivateIpAddress#PrivateIpAddress
  commentId: P:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#IHasPrivateIpAddress#PrivateIpAddress
  id: Microsoft#Azure#Management#Fluent#Network#IHasPrivateIpAddress#PrivateIpAddress
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: IHasPrivateIpAddress.PrivateIpAddress
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.IHasPrivateIpAddress.PrivateIpAddress
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.IHasPrivateIpAddress.PrivateIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 404
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: string IHasPrivateIpAddress.PrivateIpAddress { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.Azure.Management.Fluent.Network.IHasPrivateIpAddress.PrivateIpAddress As String Implements IHasPrivateIpAddress.PrivateIpAddress
    parameters: []
    return:
      type: System.String
      description: the private IP address associated with this resource
  implements:
  - Microsoft.Azure.Management.Fluent.Network.IHasPrivateIpAddress.PrivateIpAddress
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.Azure.Management.Fluent.Network.IHasPrivateIpAddress.PrivateIpAddress
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#IHasPrivateIpAddress#PrivateIpAllocationMethod
  commentId: P:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#IHasPrivateIpAddress#PrivateIpAllocationMethod
  id: Microsoft#Azure#Management#Fluent#Network#IHasPrivateIpAddress#PrivateIpAllocationMethod
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: IHasPrivateIpAddress.PrivateIpAllocationMethod
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.IHasPrivateIpAddress.PrivateIpAllocationMethod
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.IHasPrivateIpAddress.PrivateIpAllocationMethod
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 412
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: string IHasPrivateIpAddress.PrivateIpAllocationMethod { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.Azure.Management.Fluent.Network.IHasPrivateIpAddress.PrivateIpAllocationMethod As String Implements IHasPrivateIpAddress.PrivateIpAllocationMethod
    parameters: []
    return:
      type: System.String
      description: the private IP address allocation method within the associated subnet
  implements:
  - Microsoft.Azure.Management.Fluent.Network.IHasPrivateIpAddress.PrivateIpAllocationMethod
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.Azure.Management.Fluent.Network.IHasPrivateIpAddress.PrivateIpAllocationMethod
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IWithPrivateIp#WithPrivateIpVersion(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IWithPrivateIp#WithPrivateIpVersion(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IWithPrivateIp#WithPrivateIpVersion(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: IWithPrivateIp.WithPrivateIpVersion(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithPrivateIp.WithPrivateIpVersion(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithPrivateIp.WithPrivateIpVersion
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 424
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nSpecifies the IP version for the private IP address.\n"
  example: []
  syntax:
    content: IUpdate IWithPrivateIp.WithPrivateIpVersion(string ipVersion)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithPrivateIp.WithPrivateIpVersion(ipVersion As String) As IUpdate Implements IWithPrivateIp.WithPrivateIpVersion
    parameters:
    - id: ipVersion
      type: System.String
      description: ipVersion an IP version
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate
      description: the next stage of the update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithPrivateIp.WithPrivateIpVersion(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithPrivateIp.WithPrivateIpVersion(String)
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Update#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IUpdate}#WithoutPublicIpAddress
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Update#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IUpdate}#WithoutPublicIpAddress
  id: Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Update#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IUpdate}#WithoutPublicIpAddress
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: IWithExistingPublicIpAddress<IUpdate>.WithoutPublicIpAddress()
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>.WithoutPublicIpAddress()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>.WithoutPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 432
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nRemoves the existing reference to a public IP address.\n"
  example: []
  syntax:
    content: IUpdate IWithExistingPublicIpAddress<IUpdate>.WithoutPublicIpAddress()
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>.WithoutPublicIpAddress As IUpdate Implements IWithExistingPublicIpAddress(Of IUpdate).WithoutPublicIpAddress
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate
      description: the next stage of the update.
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate}.WithoutPublicIpAddress
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>.WithoutPublicIpAddress()
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Update#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IUpdate}#WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Update#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IUpdate}#WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  id: Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Update#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IUpdate}#WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: IWithExistingPublicIpAddress<IUpdate>.WithExistingPublicIpAddress(IPublicIpAddress)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>.WithExistingPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 441
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nAssociates an existing public IP address with the resource.\n"
  example: []
  syntax:
    content: IUpdate IWithExistingPublicIpAddress<IUpdate>.WithExistingPublicIpAddress(IPublicIpAddress publicIpAddress)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>.WithExistingPublicIpAddress(publicIpAddress As IPublicIpAddress) As IUpdate Implements IWithExistingPublicIpAddress(Of IUpdate).WithExistingPublicIpAddress
    parameters:
    - id: publicIpAddress
      type: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
      description: publicIpAddress an existing public IP address
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate
      description: the next stage of the update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate}.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>.WithExistingPublicIpAddress(IPublicIpAddress)
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Update#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IUpdate}#WithExistingPublicIpAddress(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Update#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IUpdate}#WithExistingPublicIpAddress(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Update#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IUpdate}#WithExistingPublicIpAddress(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: IWithExistingPublicIpAddress<IUpdate>.WithExistingPublicIpAddress(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>.WithExistingPublicIpAddress(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>.WithExistingPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 450
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nAssociates an existing public IP address with the resource.\n"
  example: []
  syntax:
    content: IUpdate IWithExistingPublicIpAddress<IUpdate>.WithExistingPublicIpAddress(string resourceId)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>.WithExistingPublicIpAddress(resourceId As String) As IUpdate Implements IWithExistingPublicIpAddress(Of IUpdate).WithExistingPublicIpAddress
    parameters:
    - id: resourceId
      type: System.String
      description: resourceId the resource ID of an existing public IP address
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate}.WithExistingPublicIpAddress(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>.WithExistingPublicIpAddress(String)
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#UpdateDefinition#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}}#WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#UpdateDefinition#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}}#WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  id: Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#UpdateDefinition#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}}#WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: IWithExistingPublicIpAddress<IWithAttach<IUpdate>>.WithExistingPublicIpAddress(IPublicIpAddress)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>>.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>>.WithExistingPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 459
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nAssociates an existing public IP address with the resource.\n"
  example: []
  syntax:
    content: IWithAttach<IUpdate> IWithExistingPublicIpAddress<IWithAttach<IUpdate>>.WithExistingPublicIpAddress(IPublicIpAddress publicIpAddress)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>>.WithExistingPublicIpAddress(publicIpAddress As IPublicIpAddress) As IWithAttach(Of IUpdate) Implements IWithExistingPublicIpAddress(Of IWithAttach(Of IUpdate)).WithExistingPublicIpAddress
    parameters:
    - id: publicIpAddress
      type: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
      description: publicIpAddress an existing public IP address
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}}.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>>.WithExistingPublicIpAddress(IPublicIpAddress)
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#UpdateDefinition#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}}#WithExistingPublicIpAddress(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#UpdateDefinition#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}}#WithExistingPublicIpAddress(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#UpdateDefinition#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}}#WithExistingPublicIpAddress(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: IWithExistingPublicIpAddress<IWithAttach<IUpdate>>.WithExistingPublicIpAddress(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>>.WithExistingPublicIpAddress(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>>.WithExistingPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 468
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nAssociates an existing public IP address with the resource.\n"
  example: []
  syntax:
    content: IWithAttach<IUpdate> IWithExistingPublicIpAddress<IWithAttach<IUpdate>>.WithExistingPublicIpAddress(string resourceId)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>>.WithExistingPublicIpAddress(resourceId As String) As IWithAttach(Of IUpdate) Implements IWithExistingPublicIpAddress(Of IWithAttach(Of IUpdate)).WithExistingPublicIpAddress
    parameters:
    - id: resourceId
      type: System.String
      description: resourceId the resource ID of an existing public IP address
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}}.WithExistingPublicIpAddress(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>>.WithExistingPublicIpAddress(String)
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Definition#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}}#WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Definition#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}}#WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  id: Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Definition#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}}#WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: IWithExistingPublicIpAddress<IWithAttach<IWithCreate>>.WithExistingPublicIpAddress(IPublicIpAddress)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>>.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>>.WithExistingPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 477
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nAssociates an existing public IP address with the resource.\n"
  example: []
  syntax:
    content: IWithAttach<IWithCreate> IWithExistingPublicIpAddress<IWithAttach<IWithCreate>>.WithExistingPublicIpAddress(IPublicIpAddress publicIpAddress)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>>.WithExistingPublicIpAddress(publicIpAddress As IPublicIpAddress) As IWithAttach(Of IWithCreate) Implements IWithExistingPublicIpAddress(Of IWithAttach(Of IWithCreate)).WithExistingPublicIpAddress
    parameters:
    - id: publicIpAddress
      type: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
      description: publicIpAddress an existing public IP address
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}}.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>>.WithExistingPublicIpAddress(IPublicIpAddress)
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Definition#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}}#WithExistingPublicIpAddress(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Definition#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}}#WithExistingPublicIpAddress(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#HasPublicIpAddress#Definition#IWithExistingPublicIpAddress{Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithAttach{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}}#WithExistingPublicIpAddress(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: IWithExistingPublicIpAddress<IWithAttach<IWithCreate>>.WithExistingPublicIpAddress(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>>.WithExistingPublicIpAddress(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>>.WithExistingPublicIpAddress
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 486
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nAssociates an existing public IP address with the resource.\n"
  example: []
  syntax:
    content: IWithAttach<IWithCreate> IWithExistingPublicIpAddress<IWithAttach<IWithCreate>>.WithExistingPublicIpAddress(string resourceId)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>>.WithExistingPublicIpAddress(resourceId As String) As IWithAttach(Of IWithCreate) Implements IWithExistingPublicIpAddress(Of IWithAttach(Of IWithCreate)).WithExistingPublicIpAddress
    parameters:
    - id: resourceId
      type: System.String
      description: resourceId the resource ID of an existing public IP address
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}
      description: the next stage of the definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}}.WithExistingPublicIpAddress(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>>.WithExistingPublicIpAddress(String)
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithSubnet{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}#WithSubnet(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithSubnet{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}#WithSubnet(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#UpdateDefinition#IWithSubnet{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Update#IUpdate}#WithSubnet(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: IWithSubnet<IUpdate>.WithSubnet(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithSubnet<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>.WithSubnet(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithSubnet<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>.WithSubnet
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 495
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nAssociate a subnet with the network interface IP configuration.\n"
  example: []
  syntax:
    content: IWithPrivateIp<IUpdate> IWithSubnet<IUpdate>.WithSubnet(string name)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithSubnet<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>.WithSubnet(name As String) As IWithPrivateIp(Of IUpdate) Implements IWithSubnet(Of IUpdate).WithSubnet
    parameters:
    - id: name
      type: System.String
      description: name the subnet name
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPrivateIp{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}
      description: the next stage of the network interface IP configuration definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithSubnet{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}.WithSubnet(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithSubnet<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>.WithSubnet(String)
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithSubnet{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}#WithSubnet(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithSubnet{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}#WithSubnet(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Definition#IWithSubnet{Microsoft#Azure#Management#Fluent#Network#NetworkInterface#Definition#IWithCreate}#WithSubnet(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: IWithSubnet<IWithCreate>.WithSubnet(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>.WithSubnet(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>.WithSubnet
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 504
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nAssociate a subnet with the network interface IP configuration.\n"
  example: []
  syntax:
    content: IWithPrivateIp<IWithCreate> IWithSubnet<IWithCreate>.WithSubnet(string name)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>.WithSubnet(name As String) As IWithPrivateIp(Of IWithCreate) Implements IWithSubnet(Of IWithCreate).WithSubnet
    parameters:
    - id: name
      type: System.String
      description: name the subnet name
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}
      description: the next stage of the network interface IP configuration definition
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}.WithSubnet(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>.WithSubnet(String)
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IWithSubnet#WithSubnet(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IWithSubnet#WithSubnet(System.String)
  id: Microsoft#Azure#Management#Fluent#Network#NicIpConfiguration#Update#IWithSubnet#WithSubnet(System.String)
  isEii: true
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  langs:
  - csharp
  - vb
  name: IWithSubnet.WithSubnet(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl.Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithSubnet.WithSubnet(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithSubnet.WithSubnet
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/InterfaceImpl/NicIpConfigurationImpl.cs
    startLine: 521
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nAssociate a subnet with the network interface IP configuration.\n"
  example: []
  syntax:
    content: IUpdate IWithSubnet.WithSubnet(string name)
    content.vb: Function Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithSubnet.WithSubnet(name As String) As IUpdate Implements IWithSubnet.WithSubnet
    parameters:
    - id: name
      type: System.String
      description: name the subnet name
    return:
      type: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate
      description: the next stage of the network interface IP configuration update
  implements:
  - Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithSubnet.WithSubnet(System.String)
  name.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithSubnet.WithSubnet(String)
references:
- uid: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network
  fullName: Microsoft.Azure.Management.Fluent.Network
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: INicIpConfiguration
  fullName: Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration
- uid: IWrapper{Microsoft.Azure.Management.Network.Models.NetworkInterfaceIPConfigurationInner}
  definition: IWrapper`1
  name: IWrapper<NetworkInterfaceIPConfigurationInner>
  fullName: IWrapper<Microsoft.Azure.Management.Network.Models.NetworkInterfaceIPConfigurationInner>
  fullname.vb: IWrapper(Of Microsoft.Azure.Management.Network.Models.NetworkInterfaceIPConfigurationInner)
  name.vb: IWrapper(Of NetworkInterfaceIPConfigurationInner)
  spec.csharp:
  - uid: IWrapper`1
    name: IWrapper
    fullName: IWrapper
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Network.Models.NetworkInterfaceIPConfigurationInner
    name: NetworkInterfaceIPConfigurationInner
    fullName: Microsoft.Azure.Management.Network.Models.NetworkInterfaceIPConfigurationInner
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IWrapper`1
    name: IWrapper
    fullName: IWrapper
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Network.Models.NetworkInterfaceIPConfigurationInner
    name: NetworkInterfaceIPConfigurationInner
    fullName: Microsoft.Azure.Management.Network.Models.NetworkInterfaceIPConfigurationInner
  - name: )
    fullName: )
- uid: IChildResource{Microsoft.Azure.Management.Fluent.Network.INetworkInterface}
  definition: IChildResource`1
  name: IChildResource<INetworkInterface>
  fullName: IChildResource<Microsoft.Azure.Management.Fluent.Network.INetworkInterface>
  fullname.vb: IChildResource(Of Microsoft.Azure.Management.Fluent.Network.INetworkInterface)
  name.vb: IChildResource(Of INetworkInterface)
  spec.csharp:
  - uid: IChildResource`1
    name: IChildResource
    fullName: IChildResource
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.INetworkInterface
    name: INetworkInterface
    fullName: Microsoft.Azure.Management.Fluent.Network.INetworkInterface
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IChildResource`1
    name: IChildResource
    fullName: IChildResource
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.INetworkInterface
    name: INetworkInterface
    fullName: Microsoft.Azure.Management.Fluent.Network.INetworkInterface
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.IHasPrivateIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: IHasPrivateIpAddress
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasPrivateIpAddress
- uid: Microsoft.Azure.Management.Fluent.Network.IHasPublicIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: IHasPublicIpAddress
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasPublicIpAddress
- uid: IHasSubnet
  isExternal: true
  name: IHasSubnet
  fullName: IHasSubnet
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IDefinition{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IDefinition`1
  name: IDefinition<IWithCreate>
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IDefinition<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IDefinition(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate)
  name.vb: IDefinition(Of IWithCreate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IDefinition`1
    name: IDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IDefinition
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
    name: IWithCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IDefinition`1
    name: IDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IDefinition
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
    name: IWithCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IBlank{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IBlank`1
  name: IBlank<IWithCreate>
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IBlank<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IBlank(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate)
  name.vb: IBlank(Of IWithCreate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IBlank
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
    name: IWithCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
    name: IWithCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach`1
  name: IWithAttach<IWithCreate>
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate)
  name.vb: IWithAttach(Of IWithCreate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
    name: IWithCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
    name: IWithCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
  - name: )
    fullName: )
- uid: IInDefinition{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}
  definition: IInDefinition`1
  name: IInDefinition<IWithCreate>
  fullName: IInDefinition<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>
  fullname.vb: IInDefinition(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate)
  name.vb: IInDefinition(Of IWithCreate)
  spec.csharp:
  - uid: IInDefinition`1
    name: IInDefinition
    fullName: IInDefinition
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
    name: IWithCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IInDefinition`1
    name: IInDefinition
    fullName: IInDefinition
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
    name: IWithCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPublicIpAddress`1
  name: IWithPublicIpAddress<IWithCreate>
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate)
  name.vb: IWithPublicIpAddress(Of IWithCreate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPublicIpAddress`1
    name: IWithPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPublicIpAddress
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
    name: IWithCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPublicIpAddress`1
    name: IWithPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPublicIpAddress
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
    name: IWithCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}}
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithPublicIpAddress`1
  name: IWithPublicIpAddress<IWithAttach<IWithCreate>>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate))
  name.vb: IWithPublicIpAddress(Of IWithAttach(Of IWithCreate))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithPublicIpAddress`1
    name: IWithPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithPublicIpAddress
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
    name: IWithCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithPublicIpAddress`1
    name: IWithPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithPublicIpAddress
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
    name: IWithCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}}
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1
  name: IWithExistingPublicIpAddress<IWithAttach<IWithCreate>>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate))
  name.vb: IWithExistingPublicIpAddress(Of IWithAttach(Of IWithCreate))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1
    name: IWithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
    name: IWithCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1
    name: IWithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
    name: IWithCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}}
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1
  name: IWithNewPublicIpAddress<IWithAttach<IWithCreate>>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate))
  name.vb: IWithNewPublicIpAddress(Of IWithAttach(Of IWithCreate))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1
    name: IWithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
    name: IWithCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1
    name: IWithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
    name: IWithCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer`1
  name: IWithLoadBalancer<IWithCreate>
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate)
  name.vb: IWithLoadBalancer(Of IWithCreate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer`1
    name: IWithLoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
    name: IWithCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer`1
    name: IWithLoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
    name: IWithCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1
  name: IWithNetwork<IWithCreate>
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate)
  name.vb: IWithNetwork(Of IWithCreate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1
    name: IWithNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
    name: IWithCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1
    name: IWithNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
    name: IWithCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet`1
  name: IWithSubnet<IWithCreate>
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate)
  name.vb: IWithSubnet(Of IWithCreate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet`1
    name: IWithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
    name: IWithCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet`1
    name: IWithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
    name: IWithCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp`1
  name: IWithPrivateIp<IWithCreate>
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate)
  name.vb: IWithPrivateIp(Of IWithCreate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp`1
    name: IWithPrivateIp
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
    name: IWithCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp`1
    name: IWithPrivateIp
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
    name: IWithCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}}
  parent: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1
  name: IWithPrivateIpAddress<IWithAttach<IWithCreate>>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate))
  name.vb: IWithPrivateIpAddress(Of IWithAttach(Of IWithCreate))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1
    name: IWithPrivateIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
    name: IWithCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1
    name: IWithPrivateIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
    name: IWithCreate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IUpdateDefinition{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IUpdateDefinition`1
  name: IUpdateDefinition<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IUpdateDefinition<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IUpdateDefinition(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate)
  name.vb: IUpdateDefinition(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IUpdateDefinition`1
    name: IUpdateDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IUpdateDefinition
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IUpdateDefinition`1
    name: IUpdateDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IUpdateDefinition
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IBlank{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IBlank`1
  name: IBlank<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IBlank<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IBlank(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate)
  name.vb: IBlank(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IBlank
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach`1
  name: IWithAttach<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate)
  name.vb: IWithAttach(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
  - name: )
    fullName: )
- uid: IInUpdate{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}
  definition: IInUpdate`1
  name: IInUpdate<IUpdate>
  fullName: IInUpdate<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>
  fullname.vb: IInUpdate(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate)
  name.vb: IInUpdate(Of IUpdate)
  spec.csharp:
  - uid: IInUpdate`1
    name: IInUpdate
    fullName: IInUpdate
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IInUpdate`1
    name: IInUpdate
    fullName: IInUpdate
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork`1
  name: IWithNetwork<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate)
  name.vb: IWithNetwork(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork`1
    name: IWithNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork`1
    name: IWithNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPrivateIp{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPrivateIp`1
  name: IWithPrivateIp<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPrivateIp<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPrivateIp(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate)
  name.vb: IWithPrivateIp(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPrivateIp`1
    name: IWithPrivateIp
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPrivateIp
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPrivateIp`1
    name: IWithPrivateIp
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPrivateIp
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}}
  parent: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress`1
  name: IWithPrivateIpAddress<IWithAttach<IUpdate>>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate))
  name.vb: IWithPrivateIpAddress(Of IWithAttach(Of IUpdate))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress`1
    name: IWithPrivateIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress`1
    name: IWithPrivateIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithSubnet{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithSubnet`1
  name: IWithSubnet<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithSubnet<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithSubnet(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate)
  name.vb: IWithSubnet(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithSubnet`1
    name: IWithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithSubnet
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithSubnet`1
    name: IWithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithSubnet
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPublicIpAddress`1
  name: IWithPublicIpAddress<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate)
  name.vb: IWithPublicIpAddress(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPublicIpAddress`1
    name: IWithPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPublicIpAddress
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPublicIpAddress`1
    name: IWithPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPublicIpAddress
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}}
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithPublicIpAddress`1
  name: IWithPublicIpAddress<IWithAttach<IUpdate>>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate))
  name.vb: IWithPublicIpAddress(Of IWithAttach(Of IUpdate))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithPublicIpAddress`1
    name: IWithPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithPublicIpAddress
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithPublicIpAddress`1
    name: IWithPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithPublicIpAddress
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}}
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress`1
  name: IWithExistingPublicIpAddress<IWithAttach<IUpdate>>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate))
  name.vb: IWithExistingPublicIpAddress(Of IWithAttach(Of IUpdate))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress`1
    name: IWithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress`1
    name: IWithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}}
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition
  definition: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress`1
  name: IWithNewPublicIpAddress<IWithAttach<IUpdate>>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate))
  name.vb: IWithNewPublicIpAddress(Of IWithAttach(Of IUpdate))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress`1
    name: IWithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress`1
    name: IWithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update
  isExternal: false
  name: IUpdate
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate
- uid: ISettable{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}
  definition: ISettable`1
  name: ISettable<IUpdate>
  fullName: ISettable<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>
  fullname.vb: ISettable(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate)
  name.vb: ISettable(Of IUpdate)
  spec.csharp:
  - uid: ISettable`1
    name: ISettable
    fullName: ISettable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: ISettable`1
    name: ISettable
    fullName: ISettable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithSubnet
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update
  isExternal: false
  name: IWithSubnet
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithSubnet
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithPrivateIp
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update
  isExternal: false
  name: IWithPrivateIp
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithPrivateIp
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update
  definition: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress`1
  name: IWithPrivateIpAddress<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate)
  name.vb: IWithPrivateIpAddress(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress`1
    name: IWithPrivateIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress`1
    name: IWithPrivateIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithPublicIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update
  isExternal: false
  name: IWithPublicIpAddress
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithPublicIpAddress
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update
  definition: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithPublicIpAddress`1
  name: IWithPublicIpAddress<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate)
  name.vb: IWithPublicIpAddress(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithPublicIpAddress`1
    name: IWithPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithPublicIpAddress
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithPublicIpAddress`1
    name: IWithPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithPublicIpAddress
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update
  definition: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1
  name: IWithExistingPublicIpAddress<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate)
  name.vb: IWithExistingPublicIpAddress(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1
    name: IWithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1
    name: IWithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate}
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update
  definition: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress`1
  name: IWithNewPublicIpAddress<IUpdate>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate)
  name.vb: IWithNewPublicIpAddress(Of IUpdate)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress`1
    name: IWithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress`1
    name: IWithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate
    name: IUpdate
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update
  isExternal: false
  name: IWithLoadBalancer
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: IWrapper`1
  isExternal: true
  name: IWrapper<>
  fullName: IWrapper<>
  fullname.vb: IWrapper(Of )
  name.vb: IWrapper(Of )
  spec.csharp:
  - uid: IWrapper`1
    name: IWrapper
    fullName: IWrapper
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IWrapper`1
    name: IWrapper
    fullName: IWrapper
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: IChildResource`1
  isExternal: true
  name: IChildResource<>
  fullName: IChildResource<>
  fullname.vb: IChildResource(Of )
  name.vb: IChildResource(Of )
  spec.csharp:
  - uid: IChildResource`1
    name: IChildResource
    fullName: IChildResource
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IChildResource`1
    name: IChildResource
    fullName: IChildResource
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IDefinition`1
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition
  isExternal: false
  name: IDefinition<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IDefinition<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IDefinition(Of ParentT)
  name.vb: IDefinition(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IDefinition`1
    name: IDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IDefinition
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IDefinition`1
    name: IDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IDefinition
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IBlank`1
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition
  isExternal: false
  name: IBlank<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IBlank<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IBlank(Of ParentT)
  name.vb: IBlank(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IBlank
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach`1
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition
  isExternal: false
  name: IWithAttach<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach(Of ParentT)
  name.vb: IWithAttach(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: IInDefinition`1
  isExternal: true
  name: IInDefinition<>
  fullName: IInDefinition<>
  fullname.vb: IInDefinition(Of )
  name.vb: IInDefinition(Of )
  spec.csharp:
  - uid: IInDefinition`1
    name: IInDefinition
    fullName: IInDefinition
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IInDefinition`1
    name: IInDefinition
    fullName: IInDefinition
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPublicIpAddress`1
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition
  isExternal: false
  name: IWithPublicIpAddress<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPublicIpAddress<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPublicIpAddress(Of ParentT)
  name.vb: IWithPublicIpAddress(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPublicIpAddress`1
    name: IWithPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPublicIpAddress
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPublicIpAddress`1
    name: IWithPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPublicIpAddress
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithPublicIpAddress`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition
  isExternal: false
  name: IWithPublicIpAddress<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithPublicIpAddress<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithPublicIpAddress(Of ReturnT)
  name.vb: IWithPublicIpAddress(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithPublicIpAddress`1
    name: IWithPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithPublicIpAddress
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithPublicIpAddress`1
    name: IWithPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithPublicIpAddress
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition
  isExternal: false
  name: IWithExistingPublicIpAddress<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress(Of ReturnT)
  name.vb: IWithExistingPublicIpAddress(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1
    name: IWithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1
    name: IWithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition
  isExternal: false
  name: IWithNewPublicIpAddress<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress(Of ReturnT)
  name.vb: IWithNewPublicIpAddress(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1
    name: IWithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1
    name: IWithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer`1
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition
  isExternal: false
  name: IWithLoadBalancer<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer(Of ParentT)
  name.vb: IWithLoadBalancer(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer`1
    name: IWithLoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer`1
    name: IWithLoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition
  isExternal: false
  name: IWithNetwork<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork(Of ParentT)
  name.vb: IWithNetwork(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1
    name: IWithNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1
    name: IWithNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet`1
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition
  isExternal: false
  name: IWithSubnet<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet(Of ParentT)
  name.vb: IWithSubnet(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet`1
    name: IWithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet`1
    name: IWithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp`1
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition
  isExternal: false
  name: IWithPrivateIp<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp(Of ParentT)
  name.vb: IWithPrivateIp(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp`1
    name: IWithPrivateIp
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp`1
    name: IWithPrivateIp
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition
  isExternal: false
  name: IWithPrivateIpAddress<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress(Of ReturnT)
  name.vb: IWithPrivateIpAddress(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1
    name: IWithPrivateIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1
    name: IWithPrivateIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IUpdateDefinition`1
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition
  isExternal: false
  name: IUpdateDefinition<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IUpdateDefinition<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IUpdateDefinition(Of ParentT)
  name.vb: IUpdateDefinition(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IUpdateDefinition`1
    name: IUpdateDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IUpdateDefinition
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IUpdateDefinition`1
    name: IUpdateDefinition
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IUpdateDefinition
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IBlank`1
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition
  isExternal: false
  name: IBlank<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IBlank<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IBlank(Of ParentT)
  name.vb: IBlank(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IBlank
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IBlank`1
    name: IBlank
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IBlank
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach`1
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition
  isExternal: false
  name: IWithAttach<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach(Of ParentT)
  name.vb: IWithAttach(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach`1
    name: IWithAttach
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: IInUpdate`1
  isExternal: true
  name: IInUpdate<>
  fullName: IInUpdate<>
  fullname.vb: IInUpdate(Of )
  name.vb: IInUpdate(Of )
  spec.csharp:
  - uid: IInUpdate`1
    name: IInUpdate
    fullName: IInUpdate
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IInUpdate`1
    name: IInUpdate
    fullName: IInUpdate
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork`1
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition
  isExternal: false
  name: IWithNetwork<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork(Of ParentT)
  name.vb: IWithNetwork(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork`1
    name: IWithNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork`1
    name: IWithNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPrivateIp`1
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition
  isExternal: false
  name: IWithPrivateIp<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPrivateIp<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPrivateIp(Of ParentT)
  name.vb: IWithPrivateIp(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPrivateIp`1
    name: IWithPrivateIp
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPrivateIp
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPrivateIp`1
    name: IWithPrivateIp
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPrivateIp
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition
  isExternal: false
  name: IWithPrivateIpAddress<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress(Of ReturnT)
  name.vb: IWithPrivateIpAddress(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress`1
    name: IWithPrivateIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress`1
    name: IWithPrivateIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithSubnet`1
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition
  isExternal: false
  name: IWithSubnet<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithSubnet<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithSubnet(Of ParentT)
  name.vb: IWithSubnet(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithSubnet`1
    name: IWithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithSubnet
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithSubnet`1
    name: IWithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithSubnet
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPublicIpAddress`1
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition
  isExternal: false
  name: IWithPublicIpAddress<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPublicIpAddress<ParentT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPublicIpAddress(Of ParentT)
  name.vb: IWithPublicIpAddress(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPublicIpAddress`1
    name: IWithPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPublicIpAddress
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPublicIpAddress`1
    name: IWithPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPublicIpAddress
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithPublicIpAddress`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition
  isExternal: false
  name: IWithPublicIpAddress<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithPublicIpAddress<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithPublicIpAddress(Of ReturnT)
  name.vb: IWithPublicIpAddress(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithPublicIpAddress`1
    name: IWithPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithPublicIpAddress
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithPublicIpAddress`1
    name: IWithPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithPublicIpAddress
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition
  isExternal: false
  name: IWithExistingPublicIpAddress<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress(Of ReturnT)
  name.vb: IWithExistingPublicIpAddress(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress`1
    name: IWithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress`1
    name: IWithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition
  isExternal: false
  name: IWithNewPublicIpAddress<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress(Of ReturnT)
  name.vb: IWithNewPublicIpAddress(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress`1
    name: IWithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress`1
    name: IWithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update
- uid: ISettable`1
  isExternal: true
  name: ISettable<>
  fullName: ISettable<>
  fullname.vb: ISettable(Of )
  name.vb: ISettable(Of )
  spec.csharp:
  - uid: ISettable`1
    name: ISettable
    fullName: ISettable
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: ISettable`1
    name: ISettable
    fullName: ISettable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update
  isExternal: false
  name: IWithPrivateIpAddress<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress(Of ReturnT)
  name.vb: IWithPrivateIpAddress(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress`1
    name: IWithPrivateIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress`1
    name: IWithPrivateIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithPublicIpAddress`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update
  isExternal: false
  name: IWithPublicIpAddress<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithPublicIpAddress<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithPublicIpAddress(Of ReturnT)
  name.vb: IWithPublicIpAddress(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithPublicIpAddress`1
    name: IWithPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithPublicIpAddress
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithPublicIpAddress`1
    name: IWithPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithPublicIpAddress
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update
  isExternal: false
  name: IWithExistingPublicIpAddress<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress(Of ReturnT)
  name.vb: IWithExistingPublicIpAddress(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1
    name: IWithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1
    name: IWithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress`1
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update
  isExternal: false
  name: IWithNewPublicIpAddress<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress<ReturnT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress(Of ReturnT)
  name.vb: IWithNewPublicIpAddress(Of ReturnT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress`1
    name: IWithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress`1
    name: IWithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: IPublicIpAddress
  fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
- uid: Microsoft.Azure.Management.Fluent.Network.INetwork
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: INetwork
  fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
- uid: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: NetworkInterfaceImpl
  fullName: Microsoft.Azure.Management.Fluent.Network.NetworkInterfaceImpl
- uid: ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork}
  definition: ICreatable`1
  name: ICreatable<INetwork>
  fullName: ICreatable<Microsoft.Azure.Management.Fluent.Network.INetwork>
  fullname.vb: ICreatable(Of Microsoft.Azure.Management.Fluent.Network.INetwork)
  name.vb: ICreatable(Of INetwork)
  spec.csharp:
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: NicIpConfigurationImpl
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfigurationImpl
- uid: ICreatable`1
  isExternal: true
  name: ICreatable<>
  fullName: ICreatable<>
  fullname.vb: ICreatable(Of )
  name.vb: ICreatable(Of )
  spec.csharp:
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress}
  definition: ICreatable`1
  name: ICreatable<IPublicIpAddress>
  fullName: ICreatable<Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress>
  fullname.vb: ICreatable(Of Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  name.vb: ICreatable(Of IPublicIpAddress)
  spec.csharp:
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: ILoadBalancer
  fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Fluent.Network.IInboundNatRule}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IInboundNatRule>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Fluent.Network.IInboundNatRule>
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Fluent.Network.IInboundNatRule)
  name.vb: IList(Of IInboundNatRule)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule
    name: IInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule
    name: IInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: true
  name: IList<T>
  fullName: System.Collections.Generic.IList<T>
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Fluent.Network.IBackend}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IBackend>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Fluent.Network.IBackend>
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Fluent.Network.IBackend)
  name.vb: IList(Of IBackend)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.IBackend
    name: IBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.IBackend
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.IBackend
    name: IBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.IBackend
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate}.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate}
  definition: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress`1.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  name: WithNewPublicIpAddress(ICreatable<IPublicIpAddress>)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>.WithNewPublicIpAddress(ICreatable<Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress>)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate).WithNewPublicIpAddress(ICreatable(Of Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress))
  name.vb: WithNewPublicIpAddress(ICreatable(Of IPublicIpAddress))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress`1.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>.WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress`1.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate).WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress`1.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress`1
  isExternal: true
  name: WithNewPublicIpAddress(ICreatable<IPublicIpAddress>)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress<ReturnT>.WithNewPublicIpAddress(ICreatable<Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress>)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress(Of ReturnT).WithNewPublicIpAddress(ICreatable(Of Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress))
  name.vb: WithNewPublicIpAddress(ICreatable(Of IPublicIpAddress))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress`1.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress<ReturnT>.WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress`1.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress(Of ReturnT).WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate}.WithNewPublicIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate}
  definition: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress`1.WithNewPublicIpAddress
  name: WithNewPublicIpAddress()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>.WithNewPublicIpAddress()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate).WithNewPublicIpAddress()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress`1.WithNewPublicIpAddress
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>.WithNewPublicIpAddress
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress`1.WithNewPublicIpAddress
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate).WithNewPublicIpAddress
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress`1.WithNewPublicIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress`1
  isExternal: false
  name: WithNewPublicIpAddress()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress<ReturnT>.WithNewPublicIpAddress()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress(Of ReturnT).WithNewPublicIpAddress()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress`1.WithNewPublicIpAddress
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress<ReturnT>.WithNewPublicIpAddress
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress`1.WithNewPublicIpAddress
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress(Of ReturnT).WithNewPublicIpAddress
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate}.WithNewPublicIpAddress(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate}
  definition: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress`1.WithNewPublicIpAddress(System.String)
  name: WithNewPublicIpAddress(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>.WithNewPublicIpAddress(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate).WithNewPublicIpAddress(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress`1.WithNewPublicIpAddress(System.String)
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>.WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress`1.WithNewPublicIpAddress(System.String)
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate).WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress`1.WithNewPublicIpAddress(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress`1
  isExternal: true
  name: WithNewPublicIpAddress(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress<ReturnT>.WithNewPublicIpAddress(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress(Of ReturnT).WithNewPublicIpAddress(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress`1.WithNewPublicIpAddress(System.String)
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress<ReturnT>.WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress`1.WithNewPublicIpAddress(System.String)
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithNewPublicIpAddress(Of ReturnT).WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}}.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  name: WithNewPublicIpAddress(ICreatable<IPublicIpAddress>)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>>.WithNewPublicIpAddress(ICreatable<Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress>)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate)).WithNewPublicIpAddress(ICreatable(Of Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress))
  name.vb: WithNewPublicIpAddress(ICreatable(Of IPublicIpAddress))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>>.WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate)).WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress`1
  isExternal: true
  name: WithNewPublicIpAddress(ICreatable<IPublicIpAddress>)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress<ReturnT>.WithNewPublicIpAddress(ICreatable<Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress>)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress(Of ReturnT).WithNewPublicIpAddress(ICreatable(Of Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress))
  name.vb: WithNewPublicIpAddress(ICreatable(Of IPublicIpAddress))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress<ReturnT>.WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress(Of ReturnT).WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}}.WithNewPublicIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress
  name: WithNewPublicIpAddress()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>>.WithNewPublicIpAddress()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate)).WithNewPublicIpAddress()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>>.WithNewPublicIpAddress
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate)).WithNewPublicIpAddress
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress`1
  isExternal: false
  name: WithNewPublicIpAddress()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress<ReturnT>.WithNewPublicIpAddress()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress(Of ReturnT).WithNewPublicIpAddress()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress<ReturnT>.WithNewPublicIpAddress
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress(Of ReturnT).WithNewPublicIpAddress
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}}.WithNewPublicIpAddress(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress(System.String)
  name: WithNewPublicIpAddress(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>>.WithNewPublicIpAddress(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate)).WithNewPublicIpAddress(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress(System.String)
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>>.WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress(System.String)
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate)).WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress`1
  isExternal: true
  name: WithNewPublicIpAddress(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress<ReturnT>.WithNewPublicIpAddress(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress(Of ReturnT).WithNewPublicIpAddress(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress(System.String)
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress<ReturnT>.WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress(System.String)
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithNewPublicIpAddress(Of ReturnT).WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}}.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  name: WithNewPublicIpAddress(ICreatable<IPublicIpAddress>)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>>.WithNewPublicIpAddress(ICreatable<Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress>)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate)).WithNewPublicIpAddress(ICreatable(Of Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress))
  name.vb: WithNewPublicIpAddress(ICreatable(Of IPublicIpAddress))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>>.WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate)).WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1
  isExternal: true
  name: WithNewPublicIpAddress(ICreatable<IPublicIpAddress>)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress<ReturnT>.WithNewPublicIpAddress(ICreatable<Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress>)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress(Of ReturnT).WithNewPublicIpAddress(ICreatable(Of Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress))
  name.vb: WithNewPublicIpAddress(ICreatable(Of IPublicIpAddress))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress<ReturnT>.WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress(ICreatable{Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress})
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress(Of ReturnT).WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}}.WithNewPublicIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress
  name: WithNewPublicIpAddress()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>>.WithNewPublicIpAddress()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate)).WithNewPublicIpAddress()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>>.WithNewPublicIpAddress
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate)).WithNewPublicIpAddress
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1
  isExternal: false
  name: WithNewPublicIpAddress()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress<ReturnT>.WithNewPublicIpAddress()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress(Of ReturnT).WithNewPublicIpAddress()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress<ReturnT>.WithNewPublicIpAddress
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress(Of ReturnT).WithNewPublicIpAddress
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}}.WithNewPublicIpAddress(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress(System.String)
  name: WithNewPublicIpAddress(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>>.WithNewPublicIpAddress(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate)).WithNewPublicIpAddress(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress(System.String)
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>>.WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress(System.String)
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate)).WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1
  isExternal: true
  name: WithNewPublicIpAddress(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress<ReturnT>.WithNewPublicIpAddress(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress(Of ReturnT).WithNewPublicIpAddress(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress(System.String)
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress<ReturnT>.WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress`1.WithNewPublicIpAddress(System.String)
    name: WithNewPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithNewPublicIpAddress(Of ReturnT).WithNewPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPrivateIp{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}.WithPrivateIpVersion(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPrivateIp{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}
  definition: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPrivateIp`1.WithPrivateIpVersion(System.String)
  name: WithPrivateIpVersion(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPrivateIp<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>.WithPrivateIpVersion(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPrivateIp(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate).WithPrivateIpVersion(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPrivateIp`1.WithPrivateIpVersion(System.String)
    name: WithPrivateIpVersion
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPrivateIp<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>.WithPrivateIpVersion
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPrivateIp`1.WithPrivateIpVersion(System.String)
    name: WithPrivateIpVersion
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPrivateIp(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate).WithPrivateIpVersion
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPrivateIp`1.WithPrivateIpVersion(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPrivateIp`1
  isExternal: true
  name: WithPrivateIpVersion(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPrivateIp<ParentT>.WithPrivateIpVersion(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPrivateIp(Of ParentT).WithPrivateIpVersion(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPrivateIp`1.WithPrivateIpVersion(System.String)
    name: WithPrivateIpVersion
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPrivateIp<ParentT>.WithPrivateIpVersion
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPrivateIp`1.WithPrivateIpVersion(System.String)
    name: WithPrivateIpVersion
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithPrivateIp(Of ParentT).WithPrivateIpVersion
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}.WithPrivateIpVersion(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}
  definition: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp`1.WithPrivateIpVersion(System.String)
  name: WithPrivateIpVersion(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>.WithPrivateIpVersion(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate).WithPrivateIpVersion(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp`1.WithPrivateIpVersion(System.String)
    name: WithPrivateIpVersion
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>.WithPrivateIpVersion
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp`1.WithPrivateIpVersion(System.String)
    name: WithPrivateIpVersion
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate).WithPrivateIpVersion
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp`1.WithPrivateIpVersion(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp`1
  isExternal: true
  name: WithPrivateIpVersion(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp<ParentT>.WithPrivateIpVersion(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp(Of ParentT).WithPrivateIpVersion(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp`1.WithPrivateIpVersion(System.String)
    name: WithPrivateIpVersion
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp<ParentT>.WithPrivateIpVersion
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp`1.WithPrivateIpVersion(System.String)
    name: WithPrivateIpVersion
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithPrivateIp(Of ParentT).WithPrivateIpVersion
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}.WithNewNetwork(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork})
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}
  definition: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork`1.WithNewNetwork(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork})
  name: WithNewNetwork(ICreatable<INetwork>)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>.WithNewNetwork(ICreatable<Microsoft.Azure.Management.Fluent.Network.INetwork>)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate).WithNewNetwork(ICreatable(Of Microsoft.Azure.Management.Fluent.Network.INetwork))
  name.vb: WithNewNetwork(ICreatable(Of INetwork))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork`1.WithNewNetwork(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork})
    name: WithNewNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>.WithNewNetwork
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork`1.WithNewNetwork(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork})
    name: WithNewNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate).WithNewNetwork
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork`1.WithNewNetwork(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork})
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork`1
  isExternal: true
  name: WithNewNetwork(ICreatable<INetwork>)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork<ParentT>.WithNewNetwork(ICreatable<Microsoft.Azure.Management.Fluent.Network.INetwork>)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork(Of ParentT).WithNewNetwork(ICreatable(Of Microsoft.Azure.Management.Fluent.Network.INetwork))
  name.vb: WithNewNetwork(ICreatable(Of INetwork))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork`1.WithNewNetwork(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork})
    name: WithNewNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork<ParentT>.WithNewNetwork
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork`1.WithNewNetwork(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork})
    name: WithNewNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork(Of ParentT).WithNewNetwork
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}.WithNewNetwork(System.String,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}
  definition: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork`1.WithNewNetwork(System.String,System.String)
  name: WithNewNetwork(String, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>.WithNewNetwork(System.String, System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate).WithNewNetwork(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork`1.WithNewNetwork(System.String,System.String)
    name: WithNewNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>.WithNewNetwork
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork`1.WithNewNetwork(System.String,System.String)
    name: WithNewNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate).WithNewNetwork
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork`1.WithNewNetwork(System.String,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork`1
  isExternal: true
  name: WithNewNetwork(String, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork<ParentT>.WithNewNetwork(System.String, System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork(Of ParentT).WithNewNetwork(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork`1.WithNewNetwork(System.String,System.String)
    name: WithNewNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork<ParentT>.WithNewNetwork
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork`1.WithNewNetwork(System.String,System.String)
    name: WithNewNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork(Of ParentT).WithNewNetwork
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}.WithNewNetwork(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}
  definition: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork`1.WithNewNetwork(System.String)
  name: WithNewNetwork(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>.WithNewNetwork(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate).WithNewNetwork(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork`1.WithNewNetwork(System.String)
    name: WithNewNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>.WithNewNetwork
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork`1.WithNewNetwork(System.String)
    name: WithNewNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate).WithNewNetwork
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork`1.WithNewNetwork(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork`1
  isExternal: true
  name: WithNewNetwork(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork<ParentT>.WithNewNetwork(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork(Of ParentT).WithNewNetwork(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork`1.WithNewNetwork(System.String)
    name: WithNewNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork<ParentT>.WithNewNetwork
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork`1.WithNewNetwork(System.String)
    name: WithNewNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork(Of ParentT).WithNewNetwork
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}.WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}
  definition: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork`1.WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  name: WithExistingNetwork(INetwork)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>.WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate).WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork`1.WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
    name: WithExistingNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>.WithExistingNetwork
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork`1.WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
    name: WithExistingNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate).WithExistingNetwork
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork`1.WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork`1
  isExternal: false
  name: WithExistingNetwork(INetwork)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork<ParentT>.WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork(Of ParentT).WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork`1.WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
    name: WithExistingNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork<ParentT>.WithExistingNetwork
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork`1.WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
    name: WithExistingNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithNetwork(Of ParentT).WithExistingNetwork
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}.WithNewNetwork(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork})
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}
  definition: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1.WithNewNetwork(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork})
  name: WithNewNetwork(ICreatable<INetwork>)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>.WithNewNetwork(ICreatable<Microsoft.Azure.Management.Fluent.Network.INetwork>)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate).WithNewNetwork(ICreatable(Of Microsoft.Azure.Management.Fluent.Network.INetwork))
  name.vb: WithNewNetwork(ICreatable(Of INetwork))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1.WithNewNetwork(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork})
    name: WithNewNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>.WithNewNetwork
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1.WithNewNetwork(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork})
    name: WithNewNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate).WithNewNetwork
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1.WithNewNetwork(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork})
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1
  isExternal: true
  name: WithNewNetwork(ICreatable<INetwork>)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<ParentT>.WithNewNetwork(ICreatable<Microsoft.Azure.Management.Fluent.Network.INetwork>)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork(Of ParentT).WithNewNetwork(ICreatable(Of Microsoft.Azure.Management.Fluent.Network.INetwork))
  name.vb: WithNewNetwork(ICreatable(Of INetwork))
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1.WithNewNetwork(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork})
    name: WithNewNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<ParentT>.WithNewNetwork
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1.WithNewNetwork(ICreatable{Microsoft.Azure.Management.Fluent.Network.INetwork})
    name: WithNewNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork(Of ParentT).WithNewNetwork
  - name: (
    fullName: (
  - uid: ICreatable`1
    name: ICreatable
    fullName: ICreatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}.WithNewNetwork(System.String,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}
  definition: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1.WithNewNetwork(System.String,System.String)
  name: WithNewNetwork(String, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>.WithNewNetwork(System.String, System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate).WithNewNetwork(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1.WithNewNetwork(System.String,System.String)
    name: WithNewNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>.WithNewNetwork
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1.WithNewNetwork(System.String,System.String)
    name: WithNewNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate).WithNewNetwork
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1.WithNewNetwork(System.String,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1
  isExternal: true
  name: WithNewNetwork(String, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<ParentT>.WithNewNetwork(System.String, System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork(Of ParentT).WithNewNetwork(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1.WithNewNetwork(System.String,System.String)
    name: WithNewNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<ParentT>.WithNewNetwork
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1.WithNewNetwork(System.String,System.String)
    name: WithNewNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork(Of ParentT).WithNewNetwork
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}.WithNewNetwork(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}
  definition: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1.WithNewNetwork(System.String)
  name: WithNewNetwork(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>.WithNewNetwork(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate).WithNewNetwork(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1.WithNewNetwork(System.String)
    name: WithNewNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>.WithNewNetwork
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1.WithNewNetwork(System.String)
    name: WithNewNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate).WithNewNetwork
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1.WithNewNetwork(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1
  isExternal: true
  name: WithNewNetwork(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<ParentT>.WithNewNetwork(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork(Of ParentT).WithNewNetwork(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1.WithNewNetwork(System.String)
    name: WithNewNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<ParentT>.WithNewNetwork
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1.WithNewNetwork(System.String)
    name: WithNewNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork(Of ParentT).WithNewNetwork
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}.WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}
  definition: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1.WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  name: WithExistingNetwork(INetwork)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>.WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate).WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1.WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
    name: WithExistingNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>.WithExistingNetwork
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1.WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
    name: WithExistingNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate).WithExistingNetwork
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1.WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1
  isExternal: false
  name: WithExistingNetwork(INetwork)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<ParentT>.WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork(Of ParentT).WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1.WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
    name: WithExistingNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork<ParentT>.WithExistingNetwork
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork`1.WithExistingNetwork(Microsoft.Azure.Management.Fluent.Network.INetwork)
    name: WithExistingNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithNetwork(Of ParentT).WithExistingNetwork
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.INetwork
    name: INetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INetwork
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.IHasPublicIpAddress.PublicIpAddressId
  parent: Microsoft.Azure.Management.Fluent.Network.IHasPublicIpAddress
  isExternal: false
  name: PublicIpAddressId
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasPublicIpAddress.PublicIpAddressId
- uid: Microsoft.Azure.Management.Fluent.Network.IHasPublicIpAddress.GetPublicIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network.IHasPublicIpAddress
  isExternal: false
  name: GetPublicIpAddress()
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasPublicIpAddress.GetPublicIpAddress()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasPublicIpAddress.GetPublicIpAddress
    name: GetPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasPublicIpAddress.GetPublicIpAddress
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasPublicIpAddress.GetPublicIpAddress
    name: GetPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasPublicIpAddress.GetPublicIpAddress
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration.ListAssociatedLoadBalancerInboundNatRules
  parent: Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration
  isExternal: false
  name: ListAssociatedLoadBalancerInboundNatRules()
  fullName: Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration.ListAssociatedLoadBalancerInboundNatRules()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration.ListAssociatedLoadBalancerInboundNatRules
    name: ListAssociatedLoadBalancerInboundNatRules
    fullName: Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration.ListAssociatedLoadBalancerInboundNatRules
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration.ListAssociatedLoadBalancerInboundNatRules
    name: ListAssociatedLoadBalancerInboundNatRules
    fullName: Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration.ListAssociatedLoadBalancerInboundNatRules
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.Generic.List{Microsoft.Azure.Management.Fluent.Network.IInboundNatRule}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IInboundNatRule>
  fullName: System.Collections.Generic.List<Microsoft.Azure.Management.Fluent.Network.IInboundNatRule>
  fullname.vb: System.Collections.Generic.List(Of Microsoft.Azure.Management.Fluent.Network.IInboundNatRule)
  name.vb: List(Of IInboundNatRule)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule
    name: IInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule
    name: IInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.IInboundNatRule
  - name: )
    fullName: )
- uid: System.Collections.Generic.List`1
  parent: System.Collections.Generic
  isExternal: true
  name: List<T>
  fullName: System.Collections.Generic.List<T>
  fullname.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration.ListAssociatedLoadBalancerBackends
  parent: Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration
  isExternal: false
  name: ListAssociatedLoadBalancerBackends()
  fullName: Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration.ListAssociatedLoadBalancerBackends()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration.ListAssociatedLoadBalancerBackends
    name: ListAssociatedLoadBalancerBackends
    fullName: Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration.ListAssociatedLoadBalancerBackends
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration.ListAssociatedLoadBalancerBackends
    name: ListAssociatedLoadBalancerBackends
    fullName: Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration.ListAssociatedLoadBalancerBackends
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.Generic.List{Microsoft.Azure.Management.Fluent.Network.IBackend}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IBackend>
  fullName: System.Collections.Generic.List<Microsoft.Azure.Management.Fluent.Network.IBackend>
  fullname.vb: System.Collections.Generic.List(Of Microsoft.Azure.Management.Fluent.Network.IBackend)
  name.vb: List(Of IBackend)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.IBackend
    name: IBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.IBackend
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.IBackend
    name: IBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.IBackend
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration.GetNetwork
  parent: Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration
  isExternal: false
  name: GetNetwork()
  fullName: Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration.GetNetwork()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration.GetNetwork
    name: GetNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration.GetNetwork
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration.GetNetwork
    name: GetNetwork
    fullName: Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration.GetNetwork
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration.PrivateIpAddressVersion
  parent: Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration
  isExternal: false
  name: PrivateIpAddressVersion
  fullName: Microsoft.Azure.Management.Fluent.Network.INicIpConfiguration.PrivateIpAddressVersion
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer.WithoutLoadBalancerBackends
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer
  isExternal: false
  name: WithoutLoadBalancerBackends()
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer.WithoutLoadBalancerBackends()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer.WithoutLoadBalancerBackends
    name: WithoutLoadBalancerBackends
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer.WithoutLoadBalancerBackends
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer.WithoutLoadBalancerBackends
    name: WithoutLoadBalancerBackends
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer.WithoutLoadBalancerBackends
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer.WithoutLoadBalancerInboundNatRules
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer
  isExternal: false
  name: WithoutLoadBalancerInboundNatRules()
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer.WithoutLoadBalancerInboundNatRules()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer.WithoutLoadBalancerInboundNatRules
    name: WithoutLoadBalancerInboundNatRules
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer.WithoutLoadBalancerInboundNatRules
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer.WithoutLoadBalancerInboundNatRules
    name: WithoutLoadBalancerInboundNatRules
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer.WithoutLoadBalancerInboundNatRules
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer
  isExternal: true
  name: WithExistingLoadBalancerInboundNatRule(ILoadBalancer, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
    name: WithExistingLoadBalancerInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    name: ILoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
    name: WithExistingLoadBalancerInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer.WithExistingLoadBalancerInboundNatRule
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    name: ILoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer
  isExternal: true
  name: WithExistingLoadBalancerBackend(ILoadBalancer, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
    name: WithExistingLoadBalancerBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer.WithExistingLoadBalancerBackend
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    name: ILoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
    name: WithExistingLoadBalancerBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithLoadBalancer.WithExistingLoadBalancerBackend
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    name: ILoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate}.WithPrivateIpAddressStatic(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate}
  definition: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress`1.WithPrivateIpAddressStatic(System.String)
  name: WithPrivateIpAddressStatic(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>.WithPrivateIpAddressStatic(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate).WithPrivateIpAddressStatic(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress`1.WithPrivateIpAddressStatic(System.String)
    name: WithPrivateIpAddressStatic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>.WithPrivateIpAddressStatic
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress`1.WithPrivateIpAddressStatic(System.String)
    name: WithPrivateIpAddressStatic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate).WithPrivateIpAddressStatic
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress`1.WithPrivateIpAddressStatic(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress`1
  isExternal: true
  name: WithPrivateIpAddressStatic(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress<ReturnT>.WithPrivateIpAddressStatic(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress(Of ReturnT).WithPrivateIpAddressStatic(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress`1.WithPrivateIpAddressStatic(System.String)
    name: WithPrivateIpAddressStatic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress<ReturnT>.WithPrivateIpAddressStatic
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress`1.WithPrivateIpAddressStatic(System.String)
    name: WithPrivateIpAddressStatic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress(Of ReturnT).WithPrivateIpAddressStatic
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate}.WithPrivateIpAddressDynamic
  parent: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate}
  definition: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress`1.WithPrivateIpAddressDynamic
  name: WithPrivateIpAddressDynamic()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>.WithPrivateIpAddressDynamic()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate).WithPrivateIpAddressDynamic()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress`1.WithPrivateIpAddressDynamic
    name: WithPrivateIpAddressDynamic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>.WithPrivateIpAddressDynamic
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress`1.WithPrivateIpAddressDynamic
    name: WithPrivateIpAddressDynamic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate).WithPrivateIpAddressDynamic
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress`1.WithPrivateIpAddressDynamic
  parent: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress`1
  isExternal: false
  name: WithPrivateIpAddressDynamic()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress<ReturnT>.WithPrivateIpAddressDynamic()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress(Of ReturnT).WithPrivateIpAddressDynamic()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress`1.WithPrivateIpAddressDynamic
    name: WithPrivateIpAddressDynamic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress<ReturnT>.WithPrivateIpAddressDynamic
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress`1.WithPrivateIpAddressDynamic
    name: WithPrivateIpAddressDynamic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Update.IWithPrivateIpAddress(Of ReturnT).WithPrivateIpAddressDynamic
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}}.WithPrivateIpAddressStatic(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress`1.WithPrivateIpAddressStatic(System.String)
  name: WithPrivateIpAddressStatic(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>>.WithPrivateIpAddressStatic(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate)).WithPrivateIpAddressStatic(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress`1.WithPrivateIpAddressStatic(System.String)
    name: WithPrivateIpAddressStatic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>>.WithPrivateIpAddressStatic
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress`1.WithPrivateIpAddressStatic(System.String)
    name: WithPrivateIpAddressStatic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate)).WithPrivateIpAddressStatic
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress`1.WithPrivateIpAddressStatic(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress`1
  isExternal: true
  name: WithPrivateIpAddressStatic(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress<ReturnT>.WithPrivateIpAddressStatic(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress(Of ReturnT).WithPrivateIpAddressStatic(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress`1.WithPrivateIpAddressStatic(System.String)
    name: WithPrivateIpAddressStatic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress<ReturnT>.WithPrivateIpAddressStatic
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress`1.WithPrivateIpAddressStatic(System.String)
    name: WithPrivateIpAddressStatic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress(Of ReturnT).WithPrivateIpAddressStatic
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}}.WithPrivateIpAddressDynamic
  parent: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress`1.WithPrivateIpAddressDynamic
  name: WithPrivateIpAddressDynamic()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>>.WithPrivateIpAddressDynamic()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate)).WithPrivateIpAddressDynamic()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress`1.WithPrivateIpAddressDynamic
    name: WithPrivateIpAddressDynamic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>>.WithPrivateIpAddressDynamic
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress`1.WithPrivateIpAddressDynamic
    name: WithPrivateIpAddressDynamic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate)).WithPrivateIpAddressDynamic
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress`1.WithPrivateIpAddressDynamic
  parent: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress`1
  isExternal: false
  name: WithPrivateIpAddressDynamic()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress<ReturnT>.WithPrivateIpAddressDynamic()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress(Of ReturnT).WithPrivateIpAddressDynamic()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress`1.WithPrivateIpAddressDynamic
    name: WithPrivateIpAddressDynamic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress<ReturnT>.WithPrivateIpAddressDynamic
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress`1.WithPrivateIpAddressDynamic
    name: WithPrivateIpAddressDynamic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.UpdateDefinition.IWithPrivateIpAddress(Of ReturnT).WithPrivateIpAddressDynamic
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}}.WithPrivateIpAddressStatic(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1.WithPrivateIpAddressStatic(System.String)
  name: WithPrivateIpAddressStatic(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>>.WithPrivateIpAddressStatic(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate)).WithPrivateIpAddressStatic(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1.WithPrivateIpAddressStatic(System.String)
    name: WithPrivateIpAddressStatic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>>.WithPrivateIpAddressStatic
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1.WithPrivateIpAddressStatic(System.String)
    name: WithPrivateIpAddressStatic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate)).WithPrivateIpAddressStatic
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1.WithPrivateIpAddressStatic(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1
  isExternal: true
  name: WithPrivateIpAddressStatic(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<ReturnT>.WithPrivateIpAddressStatic(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress(Of ReturnT).WithPrivateIpAddressStatic(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1.WithPrivateIpAddressStatic(System.String)
    name: WithPrivateIpAddressStatic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<ReturnT>.WithPrivateIpAddressStatic
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1.WithPrivateIpAddressStatic(System.String)
    name: WithPrivateIpAddressStatic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress(Of ReturnT).WithPrivateIpAddressStatic
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}}.WithPrivateIpAddressDynamic
  parent: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1.WithPrivateIpAddressDynamic
  name: WithPrivateIpAddressDynamic()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>>.WithPrivateIpAddressDynamic()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate)).WithPrivateIpAddressDynamic()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1.WithPrivateIpAddressDynamic
    name: WithPrivateIpAddressDynamic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>>.WithPrivateIpAddressDynamic
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1.WithPrivateIpAddressDynamic
    name: WithPrivateIpAddressDynamic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate)).WithPrivateIpAddressDynamic
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1.WithPrivateIpAddressDynamic
  parent: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1
  isExternal: false
  name: WithPrivateIpAddressDynamic()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<ReturnT>.WithPrivateIpAddressDynamic()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress(Of ReturnT).WithPrivateIpAddressDynamic()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1.WithPrivateIpAddressDynamic
    name: WithPrivateIpAddressDynamic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress<ReturnT>.WithPrivateIpAddressDynamic
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress`1.WithPrivateIpAddressDynamic
    name: WithPrivateIpAddressDynamic
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPrivateIpAddress.Definition.IWithPrivateIpAddress(Of ReturnT).WithPrivateIpAddressDynamic
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}
  definition: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer`1.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  name: WithExistingLoadBalancerInboundNatRule(ILoadBalancer, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer, System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate).WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer`1.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
    name: WithExistingLoadBalancerInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>.WithExistingLoadBalancerInboundNatRule
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    name: ILoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer`1.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
    name: WithExistingLoadBalancerInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate).WithExistingLoadBalancerInboundNatRule
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    name: ILoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer`1.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer`1
  isExternal: true
  name: WithExistingLoadBalancerInboundNatRule(ILoadBalancer, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer<ParentT>.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer, System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer(Of ParentT).WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer`1.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
    name: WithExistingLoadBalancerInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer<ParentT>.WithExistingLoadBalancerInboundNatRule
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    name: ILoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer`1.WithExistingLoadBalancerInboundNatRule(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
    name: WithExistingLoadBalancerInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer(Of ParentT).WithExistingLoadBalancerInboundNatRule
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    name: ILoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}
  definition: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer`1.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  name: WithExistingLoadBalancerBackend(ILoadBalancer, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer, System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate).WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer`1.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
    name: WithExistingLoadBalancerBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>.WithExistingLoadBalancerBackend
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    name: ILoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer`1.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
    name: WithExistingLoadBalancerBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate).WithExistingLoadBalancerBackend
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    name: ILoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer`1.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer`1
  isExternal: true
  name: WithExistingLoadBalancerBackend(ILoadBalancer, String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer<ParentT>.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer, System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer(Of ParentT).WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer, System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer`1.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
    name: WithExistingLoadBalancerBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer<ParentT>.WithExistingLoadBalancerBackend
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    name: ILoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer`1.WithExistingLoadBalancerBackend(Microsoft.Azure.Management.Fluent.Network.ILoadBalancer,System.String)
    name: WithExistingLoadBalancerBackend
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithLoadBalancer(Of ParentT).WithExistingLoadBalancerBackend
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
    name: ILoadBalancer
    fullName: Microsoft.Azure.Management.Fluent.Network.ILoadBalancer
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.IHasPrivateIpAddress.PrivateIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network.IHasPrivateIpAddress
  isExternal: false
  name: PrivateIpAddress
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasPrivateIpAddress.PrivateIpAddress
- uid: Microsoft.Azure.Management.Fluent.Network.IHasPrivateIpAddress.PrivateIpAllocationMethod
  parent: Microsoft.Azure.Management.Fluent.Network.IHasPrivateIpAddress
  isExternal: false
  name: PrivateIpAllocationMethod
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasPrivateIpAddress.PrivateIpAllocationMethod
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithPrivateIp.WithPrivateIpVersion(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithPrivateIp
  isExternal: true
  name: WithPrivateIpVersion(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithPrivateIp.WithPrivateIpVersion(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithPrivateIp.WithPrivateIpVersion(System.String)
    name: WithPrivateIpVersion
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithPrivateIp.WithPrivateIpVersion
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithPrivateIp.WithPrivateIpVersion(System.String)
    name: WithPrivateIpVersion
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithPrivateIp.WithPrivateIpVersion
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate}.WithoutPublicIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate}
  definition: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1.WithoutPublicIpAddress
  name: WithoutPublicIpAddress()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>.WithoutPublicIpAddress()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate).WithoutPublicIpAddress()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1.WithoutPublicIpAddress
    name: WithoutPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>.WithoutPublicIpAddress
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1.WithoutPublicIpAddress
    name: WithoutPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate).WithoutPublicIpAddress
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1.WithoutPublicIpAddress
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1
  isExternal: false
  name: WithoutPublicIpAddress()
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<ReturnT>.WithoutPublicIpAddress()
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress(Of ReturnT).WithoutPublicIpAddress()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1.WithoutPublicIpAddress
    name: WithoutPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<ReturnT>.WithoutPublicIpAddress
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1.WithoutPublicIpAddress
    name: WithoutPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress(Of ReturnT).WithoutPublicIpAddress
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate}.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate}
  definition: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  name: WithExistingPublicIpAddress(IPublicIpAddress)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate).WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>.WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate).WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1
  isExternal: false
  name: WithExistingPublicIpAddress(IPublicIpAddress)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<ReturnT>.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress(Of ReturnT).WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<ReturnT>.WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress(Of ReturnT).WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate}.WithExistingPublicIpAddress(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate}
  definition: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(System.String)
  name: WithExistingPublicIpAddress(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>.WithExistingPublicIpAddress(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate).WithExistingPublicIpAddress(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(System.String)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate>.WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(System.String)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IUpdate).WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1
  isExternal: true
  name: WithExistingPublicIpAddress(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<ReturnT>.WithExistingPublicIpAddress(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress(Of ReturnT).WithExistingPublicIpAddress(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(System.String)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress<ReturnT>.WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(System.String)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Update.IWithExistingPublicIpAddress(Of ReturnT).WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}}.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  name: WithExistingPublicIpAddress(IPublicIpAddress)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>>.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate)).WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>>.WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate)).WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress`1
  isExternal: false
  name: WithExistingPublicIpAddress(IPublicIpAddress)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress<ReturnT>.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress(Of ReturnT).WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress<ReturnT>.WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress(Of ReturnT).WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}}.WithExistingPublicIpAddress(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(System.String)
  name: WithExistingPublicIpAddress(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>>.WithExistingPublicIpAddress(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate)).WithExistingPublicIpAddress(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(System.String)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>>.WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(System.String)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate)).WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress`1
  isExternal: true
  name: WithExistingPublicIpAddress(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress<ReturnT>.WithExistingPublicIpAddress(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress(Of ReturnT).WithExistingPublicIpAddress(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(System.String)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress<ReturnT>.WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(System.String)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.UpdateDefinition.IWithExistingPublicIpAddress(Of ReturnT).WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}}.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  name: WithExistingPublicIpAddress(IPublicIpAddress)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>>.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate)).WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>>.WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate)).WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1
  isExternal: false
  name: WithExistingPublicIpAddress(IPublicIpAddress)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress<ReturnT>.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress(Of ReturnT).WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress<ReturnT>.WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress(Of ReturnT).WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
    name: IPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.IPublicIpAddress
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}}.WithExistingPublicIpAddress(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress{Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}}
  definition: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(System.String)
  name: WithExistingPublicIpAddress(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>>.WithExistingPublicIpAddress(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate)).WithExistingPublicIpAddress(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(System.String)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress<Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>>.WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(System.String)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress(Of Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithAttach(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate)).WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1
  isExternal: true
  name: WithExistingPublicIpAddress(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress<ReturnT>.WithExistingPublicIpAddress(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress(Of ReturnT).WithExistingPublicIpAddress(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(System.String)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress<ReturnT>.WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress`1.WithExistingPublicIpAddress(System.String)
    name: WithExistingPublicIpAddress
    fullName: Microsoft.Azure.Management.Fluent.Network.HasPublicIpAddress.Definition.IWithExistingPublicIpAddress(Of ReturnT).WithExistingPublicIpAddress
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithSubnet{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}.WithSubnet(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithSubnet{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate}
  definition: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithSubnet`1.WithSubnet(System.String)
  name: WithSubnet(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithSubnet<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>.WithSubnet(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithSubnet(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate).WithSubnet(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithSubnet`1.WithSubnet(System.String)
    name: WithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithSubnet<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate>.WithSubnet
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithSubnet`1.WithSubnet(System.String)
    name: WithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithSubnet(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Update.IUpdate).WithSubnet
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithSubnet`1.WithSubnet(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithSubnet`1
  isExternal: true
  name: WithSubnet(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithSubnet<ParentT>.WithSubnet(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithSubnet(Of ParentT).WithSubnet(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithSubnet`1.WithSubnet(System.String)
    name: WithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithSubnet<ParentT>.WithSubnet
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithSubnet`1.WithSubnet(System.String)
    name: WithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.UpdateDefinition.IWithSubnet(Of ParentT).WithSubnet
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}.WithSubnet(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet{Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate}
  definition: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet`1.WithSubnet(System.String)
  name: WithSubnet(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>.WithSubnet(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate).WithSubnet(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet`1.WithSubnet(System.String)
    name: WithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet<Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate>.WithSubnet
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet`1.WithSubnet(System.String)
    name: WithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet(Of Microsoft.Azure.Management.Fluent.Network.NetworkInterface.Definition.IWithCreate).WithSubnet
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet`1.WithSubnet(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet`1
  isExternal: true
  name: WithSubnet(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet<ParentT>.WithSubnet(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet(Of ParentT).WithSubnet(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet`1.WithSubnet(System.String)
    name: WithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet<ParentT>.WithSubnet
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet`1.WithSubnet(System.String)
    name: WithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Definition.IWithSubnet(Of ParentT).WithSubnet
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithSubnet.WithSubnet(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithSubnet
  isExternal: true
  name: WithSubnet(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithSubnet.WithSubnet(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithSubnet.WithSubnet(System.String)
    name: WithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithSubnet.WithSubnet
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithSubnet.WithSubnet(System.String)
    name: WithSubnet
    fullName: Microsoft.Azure.Management.Fluent.Network.NicIpConfiguration.Update.IWithSubnet.WithSubnet
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
