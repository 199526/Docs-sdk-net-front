items:
- uid: Microsoft.Azure.Management.V2.Resource.Core.PagedList`1.Enumerator
  commentId: T:Microsoft.Azure.Management.V2.Resource.Core.PagedList`1.Enumerator
  id: PagedList`1.Enumerator
  parent: Microsoft.Azure.Management.V2.Resource.Core
  children:
  - Microsoft.Azure.Management.V2.Resource.Core.PagedList`1.Enumerator.Current
  - Microsoft.Azure.Management.V2.Resource.Core.PagedList`1.Enumerator.Dispose
  - Microsoft.Azure.Management.V2.Resource.Core.PagedList`1.Enumerator.System#Collections#IEnumerator#Current
  - Microsoft.Azure.Management.V2.Resource.Core.PagedList`1.Enumerator.System#Collections#IEnumerator#MoveNext
  - Microsoft.Azure.Management.V2.Resource.Core.PagedList`1.Enumerator.System#Collections#IEnumerator#Reset
  langs:
  - csharp
  - vb
  name: PagedList<T>.Enumerator
  fullName: Microsoft.Azure.Management.V2.Resource.Core.PagedList<T>.Enumerator
  type: Struct
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/PagedList.cs
      branch: 6741b9cfb99de698ca40cefe7507c88bd740f361
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Enumerator
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/PagedList.cs
    startLine: 97
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core
  syntax:
    content: 'public struct Enumerator : IEnumerator<T>, IDisposable, IEnumerator'
    content.vb: >-
      Public Structure Enumerator
          Implements IEnumerator(Of T), IDisposable, IEnumerator
  implements:
  - System.Collections.Generic.IEnumerator{{T}}
  - System.IDisposable
  - System.Collections.IEnumerator
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.PagedList(Of T).Enumerator
  name.vb: PagedList(Of T).Enumerator
- uid: Microsoft.Azure.Management.V2.Resource.Core.PagedList`1.Enumerator.Current
  commentId: P:Microsoft.Azure.Management.V2.Resource.Core.PagedList`1.Enumerator.Current
  id: Current
  parent: Microsoft.Azure.Management.V2.Resource.Core.PagedList`1.Enumerator
  langs:
  - csharp
  - vb
  name: Current
  fullName: Microsoft.Azure.Management.V2.Resource.Core.PagedList<T>.Enumerator.Current
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/PagedList.cs
      branch: 6741b9cfb99de698ca40cefe7507c88bd740f361
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Current
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/PagedList.cs
    startLine: 102
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core
  syntax:
    content: public T Current { get; }
    content.vb: Public ReadOnly Property Current As T
    parameters: []
    return:
      type: '{T}'
  implements:
  - System.Collections.Generic.IEnumerator{{T}}.Current
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.PagedList(Of T).Enumerator.Current
- uid: Microsoft.Azure.Management.V2.Resource.Core.PagedList`1.Enumerator.System#Collections#IEnumerator#Current
  commentId: P:Microsoft.Azure.Management.V2.Resource.Core.PagedList`1.Enumerator.System#Collections#IEnumerator#Current
  id: System#Collections#IEnumerator#Current
  isEii: true
  parent: Microsoft.Azure.Management.V2.Resource.Core.PagedList`1.Enumerator
  langs:
  - csharp
  - vb
  name: IEnumerator.Current
  fullName: Microsoft.Azure.Management.V2.Resource.Core.PagedList<T>.Enumerator.System.Collections.IEnumerator.Current
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/PagedList.cs
      branch: 6741b9cfb99de698ca40cefe7507c88bd740f361
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: System.Collections.IEnumerator.Current
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/PagedList.cs
    startLine: 110
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core
  syntax:
    content: object IEnumerator.Current { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.IEnumerator.Current As Object Implements IEnumerator.Current
    parameters: []
    return:
      type: System.Object
  implements:
  - System.Collections.IEnumerator.Current
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.PagedList(Of T).Enumerator.System.Collections.IEnumerator.Current
  name.vb: System.Collections.IEnumerator.Current
- uid: Microsoft.Azure.Management.V2.Resource.Core.PagedList`1.Enumerator.Dispose
  commentId: M:Microsoft.Azure.Management.V2.Resource.Core.PagedList`1.Enumerator.Dispose
  id: Dispose
  parent: Microsoft.Azure.Management.V2.Resource.Core.PagedList`1.Enumerator
  langs:
  - csharp
  - vb
  name: Dispose()
  fullName: Microsoft.Azure.Management.V2.Resource.Core.PagedList<T>.Enumerator.Dispose()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/PagedList.cs
      branch: 6741b9cfb99de698ca40cefe7507c88bd740f361
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Dispose
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/PagedList.cs
    startLine: 124
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.PagedList(Of T).Enumerator.Dispose()
- uid: Microsoft.Azure.Management.V2.Resource.Core.PagedList`1.Enumerator.System#Collections#IEnumerator#MoveNext
  commentId: M:Microsoft.Azure.Management.V2.Resource.Core.PagedList`1.Enumerator.System#Collections#IEnumerator#MoveNext
  id: System#Collections#IEnumerator#MoveNext
  isEii: true
  parent: Microsoft.Azure.Management.V2.Resource.Core.PagedList`1.Enumerator
  langs:
  - csharp
  - vb
  name: IEnumerator.MoveNext()
  fullName: Microsoft.Azure.Management.V2.Resource.Core.PagedList<T>.Enumerator.System.Collections.IEnumerator.MoveNext()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/PagedList.cs
      branch: 6741b9cfb99de698ca40cefe7507c88bd740f361
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: System.Collections.IEnumerator.MoveNext
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/PagedList.cs
    startLine: 127
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core
  syntax:
    content: bool IEnumerator.MoveNext()
    content.vb: Function System.Collections.IEnumerator.MoveNext As Boolean Implements IEnumerator.MoveNext
    return:
      type: System.Boolean
  implements:
  - System.Collections.IEnumerator.MoveNext
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.PagedList(Of T).Enumerator.System.Collections.IEnumerator.MoveNext()
  name.vb: System.Collections.IEnumerator.MoveNext()
- uid: Microsoft.Azure.Management.V2.Resource.Core.PagedList`1.Enumerator.System#Collections#IEnumerator#Reset
  commentId: M:Microsoft.Azure.Management.V2.Resource.Core.PagedList`1.Enumerator.System#Collections#IEnumerator#Reset
  id: System#Collections#IEnumerator#Reset
  isEii: true
  parent: Microsoft.Azure.Management.V2.Resource.Core.PagedList`1.Enumerator
  langs:
  - csharp
  - vb
  name: IEnumerator.Reset()
  fullName: Microsoft.Azure.Management.V2.Resource.Core.PagedList<T>.Enumerator.System.Collections.IEnumerator.Reset()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/PagedList.cs
      branch: 6741b9cfb99de698ca40cefe7507c88bd740f361
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: System.Collections.IEnumerator.Reset
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/PagedList.cs
    startLine: 151
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core
  syntax:
    content: void IEnumerator.Reset()
    content.vb: Sub System.Collections.IEnumerator.Reset Implements IEnumerator.Reset
  implements:
  - System.Collections.IEnumerator.Reset
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.PagedList(Of T).Enumerator.System.Collections.IEnumerator.Reset()
  name.vb: System.Collections.IEnumerator.Reset()
references:
- uid: Microsoft.Azure.Management.V2.Resource.Core
  isExternal: false
  name: Microsoft.Azure.Management.V2.Resource.Core
  fullName: Microsoft.Azure.Management.V2.Resource.Core
- uid: System.Collections.Generic.IEnumerator{{T}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  fullname.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  fullName: System.IDisposable
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  fullname.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  fullName: System.ValueType
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Collections.Generic.IEnumerator{{T}}.Current
  parent: System.Collections.Generic.IEnumerator{{T}}
  definition: System.Collections.Generic.IEnumerator`1.Current
  name: Current
  fullName: System.Collections.Generic.IEnumerator<T>.Current
  fullname.vb: System.Collections.Generic.IEnumerator(Of T).Current
- uid: '{T}'
  isExternal: false
  name: T
  fullName: T
- uid: System.Collections.Generic.IEnumerator`1.Current
  parent: System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: Current
  fullName: System.Collections.Generic.IEnumerator<T>.Current
  fullname.vb: System.Collections.Generic.IEnumerator(Of T).Current
- uid: System.Collections.IEnumerator.Current
  parent: System.Collections.IEnumerator
  isExternal: true
  name: Current
  fullName: System.Collections.IEnumerator.Current
- uid: System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.IEnumerator.MoveNext
  parent: System.Collections.IEnumerator
  isExternal: true
  name: MoveNext()
  fullName: System.Collections.IEnumerator.MoveNext()
  spec.csharp:
  - uid: System.Collections.IEnumerator.MoveNext
    name: MoveNext
    fullName: System.Collections.IEnumerator.MoveNext
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerator.MoveNext
    name: MoveNext
    fullName: System.Collections.IEnumerator.MoveNext
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.Collections.IEnumerator.Reset
  parent: System.Collections.IEnumerator
  isExternal: true
  name: Reset()
  fullName: System.Collections.IEnumerator.Reset()
  spec.csharp:
  - uid: System.Collections.IEnumerator.Reset
    name: Reset
    fullName: System.Collections.IEnumerator.Reset
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerator.Reset
    name: Reset
    fullName: System.Collections.IEnumerator.Reset
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
