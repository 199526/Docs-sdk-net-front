### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionReference
  commentId: T:Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionReference
  id: ResourceExtensionReference
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  children:
  - Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionReference.#ctor
  - Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionReference.ForceUpdate
  - Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionReference.Name
  - Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionReference.Publisher
  - Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionReference.ReferenceName
  - Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionReference.ResourceExtensionParameterValues
  - Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionReference.State
  - Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionReference.Version
  langs:
  - csharp
  - vb
  name: ResourceExtensionReference
  nameWithType: ResourceExtensionReference
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionReference
  type: Class
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ResourceExtensionReference.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ResourceExtensionReference
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ResourceExtensionReference.cs
    startLine: 33
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\nSpecifies the properties of a resource extension that should be\ninstalled on the Virtual Machine.\n"
  example: []
  syntax:
    content: public class ResourceExtensionReference
    content.vb: Public Class ResourceExtensionReference
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionReference.ForceUpdate
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionReference.ForceUpdate
  id: ForceUpdate
  parent: Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionReference
  langs:
  - csharp
  - vb
  name: ForceUpdate
  nameWithType: ResourceExtensionReference.ForceUpdate
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionReference.ForceUpdate
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ResourceExtensionReference.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ForceUpdate
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ResourceExtensionReference.cs
    startLine: 42
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\nOptional. Optional.  Set to “true” if you want to reapply a\nconfiguration toan extension when the configuration has not been\nupdated.Possible values are: true | false\n"
  example: []
  syntax:
    content: public bool ? ForceUpdate { get; set; }
    content.vb: Public Property ForceUpdate As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionReference.Name
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionReference.Name
  id: Name
  parent: Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionReference
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ResourceExtensionReference.Name
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionReference.Name
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ResourceExtensionReference.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ResourceExtensionReference.cs
    startLine: 55
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\nOptional. Specifies the name of the resource extension. You can use\nList Resource Extensions to find the names of available resource\nextensions.\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionReference.Publisher
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionReference.Publisher
  id: Publisher
  parent: Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionReference
  langs:
  - csharp
  - vb
  name: Publisher
  nameWithType: ResourceExtensionReference.Publisher
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionReference.Publisher
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ResourceExtensionReference.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Publisher
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ResourceExtensionReference.cs
    startLine: 68
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\nOptional. Specifies the name of the publisher who created the\nresource extension. You can use List Resource Extensions to find\nthe publisher name of a resource extension.\n"
  example: []
  syntax:
    content: public string Publisher { get; set; }
    content.vb: Public Property Publisher As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionReference.ReferenceName
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionReference.ReferenceName
  id: ReferenceName
  parent: Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionReference
  langs:
  - csharp
  - vb
  name: ReferenceName
  nameWithType: ResourceExtensionReference.ReferenceName
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionReference.ReferenceName
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ResourceExtensionReference.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ReferenceName
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ResourceExtensionReference.cs
    startLine: 79
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\nOptional. Specifies the reference name of the resource extension.\n"
  example: []
  syntax:
    content: public string ReferenceName { get; set; }
    content.vb: Public Property ReferenceName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionReference.ResourceExtensionParameterValues
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionReference.ResourceExtensionParameterValues
  id: ResourceExtensionParameterValues
  parent: Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionReference
  langs:
  - csharp
  - vb
  name: ResourceExtensionParameterValues
  nameWithType: ResourceExtensionReference.ResourceExtensionParameterValues
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionReference.ResourceExtensionParameterValues
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ResourceExtensionReference.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ResourceExtensionParameterValues
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ResourceExtensionReference.cs
    startLine: 91
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\nOptional. Contains a collection of parameters that are passed to\nthe resource extension when it is installed.\n"
  example: []
  syntax:
    content: public IList<ResourceExtensionParameterValue> ResourceExtensionParameterValues { get; set; }
    content.vb: Public Property ResourceExtensionParameterValues As IList(Of ResourceExtensionParameterValue)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionParameterValue}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionReference.State
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionReference.State
  id: State
  parent: Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionReference
  langs:
  - csharp
  - vb
  name: State
  nameWithType: ResourceExtensionReference.State
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionReference.State
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ResourceExtensionReference.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: State
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ResourceExtensionReference.cs
    startLine: 103
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\nOptional. Specifies the state of the resource extension.Possible\nvalues are: Enable | Disable. The default value is Enable.\n"
  example: []
  syntax:
    content: public string State { get; set; }
    content.vb: Public Property State As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionReference.Version
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionReference.Version
  id: Version
  parent: Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionReference
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: ResourceExtensionReference.Version
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionReference.Version
  type: Property
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ResourceExtensionReference.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Version
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ResourceExtensionReference.cs
    startLine: 116
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\nOptional. Specifies the version of the resource extension. You can\nuse List Resource Extension Versions to find the version of the\nresource extension.\n"
  example: []
  syntax:
    content: public string Version { get; set; }
    content.vb: Public Property Version As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionReference.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionReference.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionReference
  langs:
  - csharp
  - vb
  name: ResourceExtensionReference()
  nameWithType: ResourceExtensionReference.ResourceExtensionReference()
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionReference.ResourceExtensionReference()
  type: Constructor
  source:
    remote:
      path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ResourceExtensionReference.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ResourceExtensionReference.cs
    startLine: 125
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\nInitializes a new instance of the ResourceExtensionReference class.\n"
  example: []
  syntax:
    content: public ResourceExtensionReference()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.Compute.Models
  commentId: N:Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Compute.Models
  nameWithType: Microsoft.WindowsAzure.Management.Compute.Models
  fullName: Microsoft.WindowsAzure.Management.Compute.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IList{Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionParameterValue}
  commentId: T:System.Collections.Generic.IList{Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionParameterValue}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ResourceExtensionParameterValue>
  nameWithType: IList<ResourceExtensionParameterValue>
  fullName: System.Collections.Generic.IList<Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionParameterValue>
  nameWithType.vb: IList(Of ResourceExtensionParameterValue)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionParameterValue)
  name.vb: IList(Of ResourceExtensionParameterValue)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionParameterValue
    name: ResourceExtensionParameterValue
    nameWithType: ResourceExtensionParameterValue
    fullName: Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionParameterValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionParameterValue
    name: ResourceExtensionParameterValue
    nameWithType: ResourceExtensionParameterValue
    fullName: Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionParameterValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
