### YamlMime:ManagedReference
items:
- uid: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient
  commentId: T:Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient
  id: IHadoopStorageAsyncClient
  parent: Microsoft.Hadoop.Client.HadoopStorageClientLayer
  children:
  - Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.AppendAsync(System.IO.Stream,System.String)
  - Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.CreateDirectoryAsync(System.String)
  - Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.DeleteAsync(System.String)
  - Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.DeleteAsync(System.String,System.Nullable{System.Boolean})
  - Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.ExistsAsync(System.String)
  - Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.GetDirectoryStatusAsync(System.String)
  - Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.GetFileStatusAsync(System.String)
  - Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.ReadAsync(System.String)
  - Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.ReadAsync(System.String,System.Nullable{System.Int32})
  - Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.ReadAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})
  - Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.ReadAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})
  - Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.RenameAsync(System.String,System.String)
  - Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.WriteAsync(System.IO.Stream,System.String)
  - Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.WriteAsync(System.IO.Stream,System.String,System.Nullable{System.Boolean})
  langs:
  - csharp
  - vb
  name: IHadoopStorageAsyncClient
  nameWithType: IHadoopStorageAsyncClient
  fullName: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient
  type: Interface
  source:
    remote:
      path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Client/HadoopStorageClientLayer/IHadoopStorageAsyncClient.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IHadoopStorageAsyncClient
    path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Client/HadoopStorageClientLayer/IHadoopStorageAsyncClient.cs
    startLine: 23
  assemblies:
  - Microsoft.Hadoop.Client
  namespace: Microsoft.Hadoop.Client.HadoopStorageClientLayer
  summary: "\n    Represents a Hadoop storage client with asynchronous operations.\n"
  example: []
  syntax:
    content: 'public interface IHadoopStorageAsyncClient : IHadoopStorageClientBase'
    content.vb: >-
      Public Interface IHadoopStorageAsyncClient

          Inherits IHadoopStorageClientBase
  inheritedMembers:
  - Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageClientBase.IgnoreSslErrors
  - Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageClientBase.Timeout
  extensionMethods:
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1
  - System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.AppendAsync(System.IO.Stream,System.String)
  commentId: M:Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.AppendAsync(System.IO.Stream,System.String)
  id: AppendAsync(System.IO.Stream,System.String)
  parent: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient
  langs:
  - csharp
  - vb
  name: AppendAsync(Stream, String)
  nameWithType: IHadoopStorageAsyncClient.AppendAsync(Stream, String)
  fullName: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.AppendAsync(System.IO.Stream, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Client/HadoopStorageClientLayer/IHadoopStorageAsyncClient.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AppendAsync
    path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Client/HadoopStorageClientLayer/IHadoopStorageAsyncClient.cs
    startLine: 31
  assemblies:
  - Microsoft.Hadoop.Client
  namespace: Microsoft.Hadoop.Client.HadoopStorageClientLayer
  summary: "\n    Appends the content of the input stream to the file.\n"
  example: []
  syntax:
    content: Task<bool> AppendAsync(Stream content, string path)
    content.vb: Function AppendAsync(content As Stream, path As String) As Task(Of Boolean)
    parameters:
    - id: content
      type: System.IO.Stream
      description: Stream containing data to be appended.
    - id: path
      type: System.String
      description: Path of the file.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: Returns true if operation completed successfully.
- uid: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.CreateDirectoryAsync(System.String)
  commentId: M:Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.CreateDirectoryAsync(System.String)
  id: CreateDirectoryAsync(System.String)
  parent: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient
  langs:
  - csharp
  - vb
  name: CreateDirectoryAsync(String)
  nameWithType: IHadoopStorageAsyncClient.CreateDirectoryAsync(String)
  fullName: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.CreateDirectoryAsync(System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Client/HadoopStorageClientLayer/IHadoopStorageAsyncClient.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateDirectoryAsync
    path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Client/HadoopStorageClientLayer/IHadoopStorageAsyncClient.cs
    startLine: 38
  assemblies:
  - Microsoft.Hadoop.Client
  namespace: Microsoft.Hadoop.Client.HadoopStorageClientLayer
  summary: "\n    Creates directory for the given path.\n"
  example: []
  syntax:
    content: Task<bool> CreateDirectoryAsync(string path)
    content.vb: Function CreateDirectoryAsync(path As String) As Task(Of Boolean)
    parameters:
    - id: path
      type: System.String
      description: Path to directory.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if directory was successfully created, otherwise fasle.
- uid: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.DeleteAsync(System.String,System.Nullable{System.Boolean})
  commentId: M:Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.DeleteAsync(System.String,System.Nullable{System.Boolean})
  id: DeleteAsync(System.String,System.Nullable{System.Boolean})
  parent: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient
  langs:
  - csharp
  - vb
  name: DeleteAsync(String, Nullable<Boolean>)
  nameWithType: IHadoopStorageAsyncClient.DeleteAsync(String, Nullable<Boolean>)
  fullName: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.DeleteAsync(System.String, System.Nullable<System.Boolean>)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Client/HadoopStorageClientLayer/IHadoopStorageAsyncClient.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeleteAsync
    path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Client/HadoopStorageClientLayer/IHadoopStorageAsyncClient.cs
    startLine: 49
  assemblies:
  - Microsoft.Hadoop.Client
  namespace: Microsoft.Hadoop.Client.HadoopStorageClientLayer
  summary: "\n    Deletes a file or directory at the given path.\n"
  example: []
  syntax:
    content: Task<bool> DeleteAsync(string path, bool ? recursive)
    content.vb: Function DeleteAsync(path As String, recursive As Boolean?) As Task(Of Boolean)
    parameters:
    - id: path
      type: System.String
      description: The path to delete.
    - id: recursive
      type: System.Nullable{System.Boolean}
      description: "\n    If path is a directory and set to true, the directory is deleted else throws an exception.\n    In case of a file the recursive can be set to either true or false.\n"
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if delete is successful, otherwise false.
  nameWithType.vb: IHadoopStorageAsyncClient.DeleteAsync(String, Nullable(Of Boolean))
  fullName.vb: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.DeleteAsync(System.String, System.Nullable(Of System.Boolean))
  name.vb: DeleteAsync(String, Nullable(Of Boolean))
- uid: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.DeleteAsync(System.String)
  commentId: M:Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.DeleteAsync(System.String)
  id: DeleteAsync(System.String)
  parent: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient
  langs:
  - csharp
  - vb
  name: DeleteAsync(String)
  nameWithType: IHadoopStorageAsyncClient.DeleteAsync(String)
  fullName: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.DeleteAsync(System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Client/HadoopStorageClientLayer/IHadoopStorageAsyncClient.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeleteAsync
    path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Client/HadoopStorageClientLayer/IHadoopStorageAsyncClient.cs
    startLine: 56
  assemblies:
  - Microsoft.Hadoop.Client
  namespace: Microsoft.Hadoop.Client.HadoopStorageClientLayer
  summary: "\n    Deletes a file or directory at the given path. If directory is not empty exception will be thrown.\n"
  example: []
  syntax:
    content: Task<bool> DeleteAsync(string path)
    content.vb: Function DeleteAsync(path As String) As Task(Of Boolean)
    parameters:
    - id: path
      type: System.String
      description: The path to delete.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if delete is successful, otherwise false.
- uid: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.ExistsAsync(System.String)
  commentId: M:Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.ExistsAsync(System.String)
  id: ExistsAsync(System.String)
  parent: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient
  langs:
  - csharp
  - vb
  name: ExistsAsync(String)
  nameWithType: IHadoopStorageAsyncClient.ExistsAsync(String)
  fullName: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.ExistsAsync(System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Client/HadoopStorageClientLayer/IHadoopStorageAsyncClient.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ExistsAsync
    path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Client/HadoopStorageClientLayer/IHadoopStorageAsyncClient.cs
    startLine: 63
  assemblies:
  - Microsoft.Hadoop.Client
  namespace: Microsoft.Hadoop.Client.HadoopStorageClientLayer
  summary: "\n    Checks whether given path exists in the file system.\n"
  example: []
  syntax:
    content: Task<bool> ExistsAsync(string path)
    content.vb: Function ExistsAsync(path As String) As Task(Of Boolean)
    parameters:
    - id: path
      type: System.String
      description: Path to check.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the given path exists in the file system, otherwise false.
- uid: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.GetDirectoryStatusAsync(System.String)
  commentId: M:Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.GetDirectoryStatusAsync(System.String)
  id: GetDirectoryStatusAsync(System.String)
  parent: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient
  langs:
  - csharp
  - vb
  name: GetDirectoryStatusAsync(String)
  nameWithType: IHadoopStorageAsyncClient.GetDirectoryStatusAsync(String)
  fullName: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.GetDirectoryStatusAsync(System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Client/HadoopStorageClientLayer/IHadoopStorageAsyncClient.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetDirectoryStatusAsync
    path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Client/HadoopStorageClientLayer/IHadoopStorageAsyncClient.cs
    startLine: 72
  assemblies:
  - Microsoft.Hadoop.Client
  namespace: Microsoft.Hadoop.Client.HadoopStorageClientLayer
  summary: "\n    List the statuses of the files/directories in the given path if the path is a directory.\n"
  example: []
  syntax:
    content: Task<DirectoryListing> GetDirectoryStatusAsync(string path)
    content.vb: Function GetDirectoryStatusAsync(path As String) As Task(Of DirectoryListing)
    parameters:
    - id: path
      type: System.String
      description: Path to directory.
    return:
      type: System.Threading.Tasks.Task{Microsoft.Hadoop.Client.DirectoryListing}
      description: "\n    The statuses of the files/directories in the given path returns null if path does not exist in the file system.\n"
- uid: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.GetFileStatusAsync(System.String)
  commentId: M:Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.GetFileStatusAsync(System.String)
  id: GetFileStatusAsync(System.String)
  parent: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient
  langs:
  - csharp
  - vb
  name: GetFileStatusAsync(String)
  nameWithType: IHadoopStorageAsyncClient.GetFileStatusAsync(String)
  fullName: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.GetFileStatusAsync(System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Client/HadoopStorageClientLayer/IHadoopStorageAsyncClient.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetFileStatusAsync
    path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Client/HadoopStorageClientLayer/IHadoopStorageAsyncClient.cs
    startLine: 79
  assemblies:
  - Microsoft.Hadoop.Client
  namespace: Microsoft.Hadoop.Client.HadoopStorageClientLayer
  summary: "\n    Return a file status data for the given path.\n"
  example: []
  syntax:
    content: Task<DirectoryEntry> GetFileStatusAsync(string path)
    content.vb: Function GetFileStatusAsync(path As String) As Task(Of DirectoryEntry)
    parameters:
    - id: path
      type: System.String
      description: The path we want information for.
    return:
      type: System.Threading.Tasks.Task{Microsoft.Hadoop.Client.DirectoryEntry}
      description: File status for the given path.
- uid: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.ReadAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})
  commentId: M:Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.ReadAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})
  id: ReadAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})
  parent: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient
  langs:
  - csharp
  - vb
  name: ReadAsync(String, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>)
  nameWithType: IHadoopStorageAsyncClient.ReadAsync(String, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>)
  fullName: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.ReadAsync(System.String, System.Nullable<System.Int32>, System.Nullable<System.Int32>, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Client/HadoopStorageClientLayer/IHadoopStorageAsyncClient.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ReadAsync
    path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Client/HadoopStorageClientLayer/IHadoopStorageAsyncClient.cs
    startLine: 89
  assemblies:
  - Microsoft.Hadoop.Client
  namespace: Microsoft.Hadoop.Client.HadoopStorageClientLayer
  summary: "\n    Opens data stream at indicated path.\n"
  example: []
  syntax:
    content: Task<Stream> ReadAsync(string path, int ? offset, int ? length, int ? bufferSize)
    content.vb: Function ReadAsync(path As String, offset As Integer?, length As Integer?, bufferSize As Integer?) As Task(Of Stream)
    parameters:
    - id: path
      type: System.String
      description: File name to open.
    - id: offset
      type: System.Nullable{System.Int32}
      description: The starting byte position.
    - id: length
      type: System.Nullable{System.Int32}
      description: The number of bytes to be processed. Null means entire file.
    - id: bufferSize
      type: System.Nullable{System.Int32}
      description: The size of the buffer to be used.
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
      description: Stream of data.
  nameWithType.vb: IHadoopStorageAsyncClient.ReadAsync(String, Nullable(Of Int32), Nullable(Of Int32), Nullable(Of Int32))
  fullName.vb: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.ReadAsync(System.String, System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), System.Nullable(Of System.Int32))
  name.vb: ReadAsync(String, Nullable(Of Int32), Nullable(Of Int32), Nullable(Of Int32))
- uid: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.ReadAsync(System.String)
  commentId: M:Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.ReadAsync(System.String)
  id: ReadAsync(System.String)
  parent: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient
  langs:
  - csharp
  - vb
  name: ReadAsync(String)
  nameWithType: IHadoopStorageAsyncClient.ReadAsync(String)
  fullName: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.ReadAsync(System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Client/HadoopStorageClientLayer/IHadoopStorageAsyncClient.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ReadAsync
    path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Client/HadoopStorageClientLayer/IHadoopStorageAsyncClient.cs
    startLine: 96
  assemblies:
  - Microsoft.Hadoop.Client
  namespace: Microsoft.Hadoop.Client.HadoopStorageClientLayer
  summary: "\n    Opens data stream at indicated path. Whole file will be read.\n"
  example: []
  syntax:
    content: Task<Stream> ReadAsync(string path)
    content.vb: Function ReadAsync(path As String) As Task(Of Stream)
    parameters:
    - id: path
      type: System.String
      description: File name to open.
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
      description: Stream of data.
- uid: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.ReadAsync(System.String,System.Nullable{System.Int32})
  commentId: M:Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.ReadAsync(System.String,System.Nullable{System.Int32})
  id: ReadAsync(System.String,System.Nullable{System.Int32})
  parent: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient
  langs:
  - csharp
  - vb
  name: ReadAsync(String, Nullable<Int32>)
  nameWithType: IHadoopStorageAsyncClient.ReadAsync(String, Nullable<Int32>)
  fullName: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.ReadAsync(System.String, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Client/HadoopStorageClientLayer/IHadoopStorageAsyncClient.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ReadAsync
    path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Client/HadoopStorageClientLayer/IHadoopStorageAsyncClient.cs
    startLine: 104
  assemblies:
  - Microsoft.Hadoop.Client
  namespace: Microsoft.Hadoop.Client.HadoopStorageClientLayer
  summary: "\n    Opens data stream at indicated path. Starting offset can be set.\n"
  example: []
  syntax:
    content: Task<Stream> ReadAsync(string path, int ? offset)
    content.vb: Function ReadAsync(path As String, offset As Integer?) As Task(Of Stream)
    parameters:
    - id: path
      type: System.String
      description: File name to open.
    - id: offset
      type: System.Nullable{System.Int32}
      description: The starting byte position.
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
      description: Stream of data.
  nameWithType.vb: IHadoopStorageAsyncClient.ReadAsync(String, Nullable(Of Int32))
  fullName.vb: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.ReadAsync(System.String, System.Nullable(Of System.Int32))
  name.vb: ReadAsync(String, Nullable(Of Int32))
- uid: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.ReadAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})
  commentId: M:Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.ReadAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})
  id: ReadAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})
  parent: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient
  langs:
  - csharp
  - vb
  name: ReadAsync(String, Nullable<Int32>, Nullable<Int32>)
  nameWithType: IHadoopStorageAsyncClient.ReadAsync(String, Nullable<Int32>, Nullable<Int32>)
  fullName: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.ReadAsync(System.String, System.Nullable<System.Int32>, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Client/HadoopStorageClientLayer/IHadoopStorageAsyncClient.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ReadAsync
    path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Client/HadoopStorageClientLayer/IHadoopStorageAsyncClient.cs
    startLine: 113
  assemblies:
  - Microsoft.Hadoop.Client
  namespace: Microsoft.Hadoop.Client.HadoopStorageClientLayer
  summary: "\n    Opens data stream at indicated path. Starting offset and length of stream can be set.\n"
  example: []
  syntax:
    content: Task<Stream> ReadAsync(string path, int ? offset, int ? length)
    content.vb: Function ReadAsync(path As String, offset As Integer?, length As Integer?) As Task(Of Stream)
    parameters:
    - id: path
      type: System.String
      description: File name to open.
    - id: offset
      type: System.Nullable{System.Int32}
      description: The starting byte position.
    - id: length
      type: System.Nullable{System.Int32}
      description: The number of bytes to be processed. Null means entire file.
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
      description: Stream of data.
  nameWithType.vb: IHadoopStorageAsyncClient.ReadAsync(String, Nullable(Of Int32), Nullable(Of Int32))
  fullName.vb: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.ReadAsync(System.String, System.Nullable(Of System.Int32), System.Nullable(Of System.Int32))
  name.vb: ReadAsync(String, Nullable(Of Int32), Nullable(Of Int32))
- uid: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.RenameAsync(System.String,System.String)
  commentId: M:Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.RenameAsync(System.String,System.String)
  id: RenameAsync(System.String,System.String)
  parent: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient
  langs:
  - csharp
  - vb
  name: RenameAsync(String, String)
  nameWithType: IHadoopStorageAsyncClient.RenameAsync(String, String)
  fullName: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.RenameAsync(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Client/HadoopStorageClientLayer/IHadoopStorageAsyncClient.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RenameAsync
    path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Client/HadoopStorageClientLayer/IHadoopStorageAsyncClient.cs
    startLine: 121
  assemblies:
  - Microsoft.Hadoop.Client
  namespace: Microsoft.Hadoop.Client.HadoopStorageClientLayer
  summary: "\n    Renames file or directory at the given path.\n"
  example: []
  syntax:
    content: Task<bool> RenameAsync(string path, string newPath)
    content.vb: Function RenameAsync(path As String, newPath As String) As Task(Of Boolean)
    parameters:
    - id: path
      type: System.String
      description: Source path.
    - id: newPath
      type: System.String
      description: Destination path.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if rename is successful, otherwise false.
- uid: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.WriteAsync(System.IO.Stream,System.String,System.Nullable{System.Boolean})
  commentId: M:Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.WriteAsync(System.IO.Stream,System.String,System.Nullable{System.Boolean})
  id: WriteAsync(System.IO.Stream,System.String,System.Nullable{System.Boolean})
  parent: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient
  langs:
  - csharp
  - vb
  name: WriteAsync(Stream, String, Nullable<Boolean>)
  nameWithType: IHadoopStorageAsyncClient.WriteAsync(Stream, String, Nullable<Boolean>)
  fullName: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.WriteAsync(System.IO.Stream, System.String, System.Nullable<System.Boolean>)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Client/HadoopStorageClientLayer/IHadoopStorageAsyncClient.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WriteAsync
    path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Client/HadoopStorageClientLayer/IHadoopStorageAsyncClient.cs
    startLine: 133
  assemblies:
  - Microsoft.Hadoop.Client
  namespace: Microsoft.Hadoop.Client.HadoopStorageClientLayer
  summary: "\n    Writes the content of the input stream to a file on a file system.\n"
  example: []
  syntax:
    content: Task<string> WriteAsync(Stream content, string path, bool ? overwrite)
    content.vb: Function WriteAsync(content As Stream, path As String, overwrite As Boolean?) As Task(Of String)
    parameters:
    - id: content
      type: System.IO.Stream
      description: Stream containing data to be writen.
    - id: path
      type: System.String
      description: Path of the file.
    - id: overwrite
      type: System.Nullable{System.Boolean}
      description: "\n    If overwrite is set to true, the existing file will be overwritten.\n    If the file exists and overwrite is not set or it's set to false, an error will be thrown.\n"
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Path of the file created.
  nameWithType.vb: IHadoopStorageAsyncClient.WriteAsync(Stream, String, Nullable(Of Boolean))
  fullName.vb: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.WriteAsync(System.IO.Stream, System.String, System.Nullable(Of System.Boolean))
  name.vb: WriteAsync(Stream, String, Nullable(Of Boolean))
- uid: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.WriteAsync(System.IO.Stream,System.String)
  commentId: M:Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.WriteAsync(System.IO.Stream,System.String)
  id: WriteAsync(System.IO.Stream,System.String)
  parent: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient
  langs:
  - csharp
  - vb
  name: WriteAsync(Stream, String)
  nameWithType: IHadoopStorageAsyncClient.WriteAsync(Stream, String)
  fullName: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.WriteAsync(System.IO.Stream, System.String)
  type: Method
  source:
    remote:
      path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Client/HadoopStorageClientLayer/IHadoopStorageAsyncClient.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WriteAsync
    path: src/ServiceManagement/HDInsight/Microsoft.Hadoop.Client/HadoopStorageClientLayer/IHadoopStorageAsyncClient.cs
    startLine: 141
  assemblies:
  - Microsoft.Hadoop.Client
  namespace: Microsoft.Hadoop.Client.HadoopStorageClientLayer
  summary: "\n    Writes the content of the input stream to a file on a file system. If file does not exists, exception will be thrown.\n"
  example: []
  syntax:
    content: Task<string> WriteAsync(Stream content, string path)
    content.vb: Function WriteAsync(content As Stream, path As String) As Task(Of String)
    parameters:
    - id: content
      type: System.IO.Stream
      description: Stream containing data to be writen.
    - id: path
      type: System.String
      description: Path of the file.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Path of the file created.
references:
- uid: Microsoft.Hadoop.Client.HadoopStorageClientLayer
  commentId: N:Microsoft.Hadoop.Client.HadoopStorageClientLayer
  isExternal: false
  name: Microsoft.Hadoop.Client.HadoopStorageClientLayer
  nameWithType: Microsoft.Hadoop.Client.HadoopStorageClientLayer
  fullName: Microsoft.Hadoop.Client.HadoopStorageClientLayer
- uid: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageClientBase.IgnoreSslErrors
  commentId: P:Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageClientBase.IgnoreSslErrors
  parent: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageClientBase
  isExternal: false
  name: IgnoreSslErrors
  nameWithType: IHadoopStorageClientBase.IgnoreSslErrors
  fullName: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageClientBase.IgnoreSslErrors
- uid: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageClientBase.Timeout
  commentId: P:Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageClientBase.Timeout
  parent: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageClientBase
  isExternal: false
  name: Timeout
  nameWithType: IHadoopStorageClientBase.Timeout
  fullName: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageClientBase.Timeout
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  name: CastTo<T>()
  nameWithType: ObjectExtensions.CastTo<T>()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>()
  nameWithType.vb: ObjectExtensions.CastTo(Of T)()
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)()
  name.vb: CastTo(Of T)()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  name: Is<T>()
  nameWithType: ObjectExtensions.Is<T>()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>()
  nameWithType.vb: ObjectExtensions.Is(Of T)()
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)()
  name.vb: Is(Of T)()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
    name: Is<T>
    nameWithType: ObjectExtensions.Is<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1
    name: Is(Of T)
    nameWithType: ObjectExtensions.Is(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  name: As<T>()
  nameWithType: ObjectExtensions.As<T>()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>()
  nameWithType.vb: ObjectExtensions.As(Of T)()
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)()
  name.vb: As(Of T)()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
    name: As<T>
    nameWithType: ObjectExtensions.As<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1
    name: As(Of T)
    nameWithType: ObjectExtensions.As(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  name: IsNull()
  nameWithType: ObjectExtensions.IsNull()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  name: IsNotNull()
  nameWithType: ObjectExtensions.IsNotNull()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1(``0)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1(``0)
  name: MakeEnumeration<IHadoopStorageAsyncClient>()
  nameWithType: ObjectExtensions.MakeEnumeration<IHadoopStorageAsyncClient>()
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration<Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient>()
  nameWithType.vb: ObjectExtensions.MakeEnumeration(Of IHadoopStorageAsyncClient)()
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration(Of Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient)()
  name.vb: MakeEnumeration(Of IHadoopStorageAsyncClient)()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1
    name: MakeEnumeration<IHadoopStorageAsyncClient>
    nameWithType: ObjectExtensions.MakeEnumeration<IHadoopStorageAsyncClient>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration<Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1
    name: MakeEnumeration(Of IHadoopStorageAsyncClient)
    nameWithType: ObjectExtensions.MakeEnumeration(Of IHadoopStorageAsyncClient)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration(Of Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageAsyncClient)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  definition: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  name: ArgumentNotNull(String)
  nameWithType: ObjectExtensions.ArgumentNotNull(String)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageClientBase
  commentId: T:Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageClientBase
  parent: Microsoft.Hadoop.Client.HadoopStorageClientLayer
  isExternal: false
  name: IHadoopStorageClientBase
  nameWithType: IHadoopStorageClientBase
  fullName: Microsoft.Hadoop.Client.HadoopStorageClientLayer.IHadoopStorageClientBase
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
  isExternal: true
  name: CastTo<T>(Object)
  nameWithType: ObjectExtensions.CastTo<T>(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>(System.Object)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(Object)
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)(System.Object)
  name.vb: CastTo(Of T)(Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  commentId: T:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  isExternal: false
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
  isExternal: true
  name: Is<T>(Object)
  nameWithType: ObjectExtensions.Is<T>(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>(System.Object)
  nameWithType.vb: ObjectExtensions.Is(Of T)(Object)
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)(System.Object)
  name.vb: Is(Of T)(Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
    name: Is<T>
    nameWithType: ObjectExtensions.Is<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is``1(System.Object)
    name: Is(Of T)
    nameWithType: ObjectExtensions.Is(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.Is(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
  isExternal: true
  name: As<T>(Object)
  nameWithType: ObjectExtensions.As<T>(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>(System.Object)
  nameWithType.vb: ObjectExtensions.As(Of T)(Object)
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)(System.Object)
  name.vb: As(Of T)(Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
    name: As<T>
    nameWithType: ObjectExtensions.As<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As``1(System.Object)
    name: As(Of T)
    nameWithType: ObjectExtensions.As(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.As(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  isExternal: true
  name: IsNull(Object)
  nameWithType: ObjectExtensions.IsNull(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull(System.Object)
    name: IsNull
    nameWithType: ObjectExtensions.IsNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  isExternal: true
  name: IsNotNull(Object)
  nameWithType: ObjectExtensions.IsNotNull(Object)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull(System.Object)
    name: IsNotNull
    nameWithType: ObjectExtensions.IsNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.IsNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1(``0)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1(``0)
  isExternal: false
  name: MakeEnumeration<T>(T)
  nameWithType: ObjectExtensions.MakeEnumeration<T>(T)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration<T>(T)
  nameWithType.vb: ObjectExtensions.MakeEnumeration(Of T)(T)
  fullname.vb: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration(Of T)(T)
  name.vb: MakeEnumeration(Of T)(T)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1(``0)
    name: MakeEnumeration<T>
    nameWithType: ObjectExtensions.MakeEnumeration<T>
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration``1(``0)
    name: MakeEnumeration(Of T)
    nameWithType: ObjectExtensions.MakeEnumeration(Of T)
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.MakeEnumeration(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
  isExternal: true
  name: ArgumentNotNull(Object, String)
  nameWithType: ObjectExtensions.ArgumentNotNull(Object, String)
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object, System.String)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull(System.Object,System.String)
    name: ArgumentNotNull
    nameWithType: ObjectExtensions.ArgumentNotNull
    fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library.ObjectExtensions.ArgumentNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  commentId: N:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  isExternal: false
  name: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  nameWithType: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Library
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullname.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Microsoft.Hadoop.Client.DirectoryListing}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Hadoop.Client.DirectoryListing}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<DirectoryListing>
  nameWithType: Task<DirectoryListing>
  fullName: System.Threading.Tasks.Task<Microsoft.Hadoop.Client.DirectoryListing>
  nameWithType.vb: Task(Of DirectoryListing)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Hadoop.Client.DirectoryListing)
  name.vb: Task(Of DirectoryListing)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Hadoop.Client.DirectoryListing
    name: DirectoryListing
    nameWithType: DirectoryListing
    fullName: Microsoft.Hadoop.Client.DirectoryListing
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Hadoop.Client.DirectoryListing
    name: DirectoryListing
    nameWithType: DirectoryListing
    fullName: Microsoft.Hadoop.Client.DirectoryListing
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Microsoft.Hadoop.Client.DirectoryEntry}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Hadoop.Client.DirectoryEntry}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<DirectoryEntry>
  nameWithType: Task<DirectoryEntry>
  fullName: System.Threading.Tasks.Task<Microsoft.Hadoop.Client.DirectoryEntry>
  nameWithType.vb: Task(Of DirectoryEntry)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Hadoop.Client.DirectoryEntry)
  name.vb: Task(Of DirectoryEntry)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Hadoop.Client.DirectoryEntry
    name: DirectoryEntry
    nameWithType: DirectoryEntry
    fullName: Microsoft.Hadoop.Client.DirectoryEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Hadoop.Client.DirectoryEntry
    name: DirectoryEntry
    nameWithType: DirectoryEntry
    fullName: Microsoft.Hadoop.Client.DirectoryEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.IO.Stream}
  commentId: T:System.Threading.Tasks.Task{System.IO.Stream}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Stream>
  nameWithType: Task<Stream>
  fullName: System.Threading.Tasks.Task<System.IO.Stream>
  nameWithType.vb: Task(Of Stream)
  fullname.vb: System.Threading.Tasks.Task(Of System.IO.Stream)
  name.vb: Task(Of Stream)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullname.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
