items:
- uid: Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner
  commentId: T:Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner
  id: ApplicationPackageInner
  parent: Microsoft.Azure.Management.Batch.Models
  children:
  - Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner.#ctor
  - Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner.#ctor(System.String,System.String,System.Nullable{Microsoft.Azure.Management.Batch.Models.PackageState},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  - Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner.Format
  - Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner.Id
  - Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner.LastActivationTime
  - Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner.State
  - Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner.StorageUrl
  - Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner.StorageUrlExpiry
  - Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner.Version
  langs:
  - csharp
  - vb
  name: ApplicationPackageInner
  fullName: Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Generated/Models/ApplicationPackageInner.cs
      branch: 91c366fb88e1246de62d778537a6b9d27538844a
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ApplicationPackageInner
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Generated/Models/ApplicationPackageInner.cs
    startLine: 16
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Batch.Models
  summary: "\nAn application package which represents a particular version of an\napplication.\n"
  example: []
  syntax:
    content: public class ApplicationPackageInner
    content.vb: Public Class ApplicationPackageInner
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner.#ctor
  commentId: M:Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner
  langs:
  - csharp
  - vb
  name: ApplicationPackageInner()
  fullName: Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner.ApplicationPackageInner()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Generated/Models/ApplicationPackageInner.cs
      branch: 91c366fb88e1246de62d778537a6b9d27538844a
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Generated/Models/ApplicationPackageInner.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Batch.Models
  summary: "\nInitializes a new instance of the ApplicationPackageInner class.\n"
  example: []
  syntax:
    content: public ApplicationPackageInner()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner.#ctor(System.String,System.String,System.Nullable{Microsoft.Azure.Management.Batch.Models.PackageState},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  commentId: M:Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner.#ctor(System.String,System.String,System.Nullable{Microsoft.Azure.Management.Batch.Models.PackageState},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  id: '#ctor(System.String,System.String,System.Nullable{Microsoft.Azure.Management.Batch.Models.PackageState},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})'
  parent: Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner
  langs:
  - csharp
  - vb
  name: ApplicationPackageInner(String, String, Nullable<PackageState>, String, String, Nullable<DateTime>, Nullable<DateTime>)
  fullName: Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner.ApplicationPackageInner(System.String, System.String, System.Nullable<Microsoft.Azure.Management.Batch.Models.PackageState>, System.String, System.String, System.Nullable<System.DateTime>, System.Nullable<System.DateTime>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Generated/Models/ApplicationPackageInner.cs
      branch: 91c366fb88e1246de62d778537a6b9d27538844a
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Generated/Models/ApplicationPackageInner.cs
    startLine: 39
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Batch.Models
  summary: "\nInitializes a new instance of the ApplicationPackageInner class.\n"
  example: []
  syntax:
    content: public ApplicationPackageInner(string id = null, string version = null, PackageState? state = null, string format = null, string storageUrl = null, DateTime? storageUrlExpiry = null, DateTime? lastActivationTime = null)
    content.vb: Public Sub New(id As String = Nothing, version As String = Nothing, state As PackageState? = Nothing, format As String = Nothing, storageUrl As String = Nothing, storageUrlExpiry As Date? = Nothing, lastActivationTime As Date? = Nothing)
    parameters:
    - id: id
      type: System.String
      description: The id of the application.
    - id: version
      type: System.String
      description: >
        The version of the application package.
    - id: state
      type: System.Nullable{Microsoft.Azure.Management.Batch.Models.PackageState}
      description: >-
        The current state of the application package.

        Possible values include: 'pending', 'active', 'unmapped'
    - id: format
      type: System.String
      description: >-
        The format of the application package, if the

        package is active.
    - id: storageUrl
      type: System.String
      description: >-
        The storage URL at which the application

        package is stored.
    - id: storageUrlExpiry
      type: System.Nullable{System.DateTime}
      description: >-
        The UTC time at which the storage

        URL will expire.
    - id: lastActivationTime
      type: System.Nullable{System.DateTime}
      description: >-
        The time at which the package was

        last activated, if the package is active.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner.ApplicationPackageInner(System.String, System.String, System.Nullable(Of Microsoft.Azure.Management.Batch.Models.PackageState), System.String, System.String, System.Nullable(Of System.DateTime), System.Nullable(Of System.DateTime))
  name.vb: ApplicationPackageInner(String, String, Nullable(Of PackageState), String, String, Nullable(Of DateTime), Nullable(Of DateTime))
- uid: Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner.Id
  commentId: P:Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner.Id
  id: Id
  parent: Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner
  langs:
  - csharp
  - vb
  name: Id
  fullName: Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner.Id
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Generated/Models/ApplicationPackageInner.cs
      branch: 91c366fb88e1246de62d778537a6b9d27538844a
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Id
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Generated/Models/ApplicationPackageInner.cs
    startLine: 53
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Batch.Models
  summary: "\nGets or sets the id of the application.\n"
  example: []
  syntax:
    content: public string Id { get; set; }
    content.vb: Public Property Id As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner.Version
  commentId: P:Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner.Version
  id: Version
  parent: Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner
  langs:
  - csharp
  - vb
  name: Version
  fullName: Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner.Version
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Generated/Models/ApplicationPackageInner.cs
      branch: 91c366fb88e1246de62d778537a6b9d27538844a
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Version
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Generated/Models/ApplicationPackageInner.cs
    startLine: 59
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Batch.Models
  summary: "\nGets or sets the version of the application package.\n"
  example: []
  syntax:
    content: public string Version { get; set; }
    content.vb: Public Property Version As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner.State
  commentId: P:Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner.State
  id: State
  parent: Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner
  langs:
  - csharp
  - vb
  name: State
  fullName: Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner.State
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Generated/Models/ApplicationPackageInner.cs
      branch: 91c366fb88e1246de62d778537a6b9d27538844a
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: State
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Generated/Models/ApplicationPackageInner.cs
    startLine: 66
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Batch.Models
  summary: "\nGets or sets the current state of the application package.\nPossible values include: 'pending', 'active', 'unmapped'\n"
  example: []
  syntax:
    content: public PackageState? State { get; set; }
    content.vb: Public Property State As PackageState?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.Batch.Models.PackageState}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner.Format
  commentId: P:Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner.Format
  id: Format
  parent: Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner
  langs:
  - csharp
  - vb
  name: Format
  fullName: Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner.Format
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Generated/Models/ApplicationPackageInner.cs
      branch: 91c366fb88e1246de62d778537a6b9d27538844a
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Format
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Generated/Models/ApplicationPackageInner.cs
    startLine: 73
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Batch.Models
  summary: "\nGets or sets the format of the application package, if the package\nis active.\n"
  example: []
  syntax:
    content: public string Format { get; set; }
    content.vb: Public Property Format As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner.StorageUrl
  commentId: P:Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner.StorageUrl
  id: StorageUrl
  parent: Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner
  langs:
  - csharp
  - vb
  name: StorageUrl
  fullName: Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner.StorageUrl
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Generated/Models/ApplicationPackageInner.cs
      branch: 91c366fb88e1246de62d778537a6b9d27538844a
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StorageUrl
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Generated/Models/ApplicationPackageInner.cs
    startLine: 80
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Batch.Models
  summary: "\nGets or sets the storage URL at which the application package is\nstored.\n"
  example: []
  syntax:
    content: public string StorageUrl { get; set; }
    content.vb: Public Property StorageUrl As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner.StorageUrlExpiry
  commentId: P:Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner.StorageUrlExpiry
  id: StorageUrlExpiry
  parent: Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner
  langs:
  - csharp
  - vb
  name: StorageUrlExpiry
  fullName: Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner.StorageUrlExpiry
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Generated/Models/ApplicationPackageInner.cs
      branch: 91c366fb88e1246de62d778537a6b9d27538844a
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StorageUrlExpiry
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Generated/Models/ApplicationPackageInner.cs
    startLine: 86
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Batch.Models
  summary: "\nGets or sets the UTC time at which the storage URL will expire.\n"
  example: []
  syntax:
    content: public DateTime? StorageUrlExpiry { get; set; }
    content.vb: Public Property StorageUrlExpiry As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner.LastActivationTime
  commentId: P:Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner.LastActivationTime
  id: LastActivationTime
  parent: Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner
  langs:
  - csharp
  - vb
  name: LastActivationTime
  fullName: Microsoft.Azure.Management.Batch.Models.ApplicationPackageInner.LastActivationTime
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Generated/Models/ApplicationPackageInner.cs
      branch: 91c366fb88e1246de62d778537a6b9d27538844a
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LastActivationTime
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Generated/Models/ApplicationPackageInner.cs
    startLine: 93
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Batch.Models
  summary: "\nGets or sets the time at which the package was last activated, if\nthe package is active.\n"
  example: []
  syntax:
    content: public DateTime? LastActivationTime { get; set; }
    content.vb: Public Property LastActivationTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Batch.Models
  isExternal: false
  name: Microsoft.Azure.Management.Batch.Models
  fullName: Microsoft.Azure.Management.Batch.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Nullable{Microsoft.Azure.Management.Batch.Models.PackageState}
  parent: System
  definition: System.Nullable`1
  name: Nullable<PackageState>
  fullName: System.Nullable<Microsoft.Azure.Management.Batch.Models.PackageState>
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.Batch.Models.PackageState)
  name.vb: Nullable(Of PackageState)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Batch.Models.PackageState
    name: PackageState
    fullName: Microsoft.Azure.Management.Batch.Models.PackageState
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Batch.Models.PackageState
    name: PackageState
    fullName: Microsoft.Azure.Management.Batch.Models.PackageState
  - name: )
    fullName: )
- uid: System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
