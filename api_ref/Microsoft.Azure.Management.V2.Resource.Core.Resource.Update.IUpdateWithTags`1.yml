items:
- uid: Microsoft.Azure.Management.V2.Resource.Core.Resource.Update.IUpdateWithTags`1
  commentId: T:Microsoft.Azure.Management.V2.Resource.Core.Resource.Update.IUpdateWithTags`1
  id: IUpdateWithTags`1
  parent: Microsoft.Azure.Management.V2.Resource.Core.Resource.Update
  children:
  - Microsoft.Azure.Management.V2.Resource.Core.Resource.Update.IUpdateWithTags`1.WithoutTag(System.String)
  - Microsoft.Azure.Management.V2.Resource.Core.Resource.Update.IUpdateWithTags`1.WithTag(System.String,System.String)
  - Microsoft.Azure.Management.V2.Resource.Core.Resource.Update.IUpdateWithTags`1.WithTags(System.Collections.Generic.IDictionary{System.String,System.String})
  langs:
  - csharp
  - vb
  name: IUpdateWithTags<T>
  fullName: Microsoft.Azure.Management.V2.Resource.Core.Resource.Update.IUpdateWithTags<T>
  type: Interface
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Domain/Core/Resource/Update/IUpdate.cs
      branch: 5a8eaf14f2d96c6f4818218d22fcacdccb1235de
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IUpdateWithTags
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Domain/Core/Resource/Update/IUpdate.cs
    startLine: 16
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core.Resource.Update
  syntax:
    content: public interface IUpdateWithTags<T>
    content.vb: Public Interface IUpdateWithTags(Of T)
    typeParameters:
    - id: T
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.Resource.Update.IUpdateWithTags(Of T)
  name.vb: IUpdateWithTags(Of T)
- uid: Microsoft.Azure.Management.V2.Resource.Core.Resource.Update.IUpdateWithTags`1.WithTags(System.Collections.Generic.IDictionary{System.String,System.String})
  commentId: M:Microsoft.Azure.Management.V2.Resource.Core.Resource.Update.IUpdateWithTags`1.WithTags(System.Collections.Generic.IDictionary{System.String,System.String})
  id: WithTags(System.Collections.Generic.IDictionary{System.String,System.String})
  parent: Microsoft.Azure.Management.V2.Resource.Core.Resource.Update.IUpdateWithTags`1
  langs:
  - csharp
  - vb
  name: WithTags(IDictionary<String, String>)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.Resource.Update.IUpdateWithTags<T>.WithTags(System.Collections.Generic.IDictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Domain/Core/Resource/Update/IUpdate.cs
      branch: 5a8eaf14f2d96c6f4818218d22fcacdccb1235de
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithTags
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Domain/Core/Resource/Update/IUpdate.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core.Resource.Update
  summary: "\nSpecifies tags for the resource as a {@link Map}.\n"
  example: []
  syntax:
    content: T WithTags(IDictionary<string, string> tags)
    content.vb: Function WithTags(tags As IDictionary(Of String, String)) As T
    parameters:
    - id: tags
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: tags a {@link Map} of tags
    return:
      type: '{T}'
      description: the next stage of the resource update
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.Resource.Update.IUpdateWithTags(Of T).WithTags(System.Collections.Generic.IDictionary(Of System.String, System.String))
  name.vb: WithTags(IDictionary(Of String, String))
- uid: Microsoft.Azure.Management.V2.Resource.Core.Resource.Update.IUpdateWithTags`1.WithTag(System.String,System.String)
  commentId: M:Microsoft.Azure.Management.V2.Resource.Core.Resource.Update.IUpdateWithTags`1.WithTag(System.String,System.String)
  id: WithTag(System.String,System.String)
  parent: Microsoft.Azure.Management.V2.Resource.Core.Resource.Update.IUpdateWithTags`1
  langs:
  - csharp
  - vb
  name: WithTag(String, String)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.Resource.Update.IUpdateWithTags<T>.WithTag(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Domain/Core/Resource/Update/IUpdate.cs
      branch: 5a8eaf14f2d96c6f4818218d22fcacdccb1235de
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithTag
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Domain/Core/Resource/Update/IUpdate.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core.Resource.Update
  summary: "\nAdds a tag to the resource.\n"
  example: []
  syntax:
    content: T WithTag(string key, string value)
    content.vb: Function WithTag(key As String, value As String) As T
    parameters:
    - id: key
      type: System.String
      description: key the key for the tag
    - id: value
      type: System.String
      description: value the value for the tag
    return:
      type: '{T}'
      description: the next stage of the resource update
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.Resource.Update.IUpdateWithTags(Of T).WithTag(System.String, System.String)
- uid: Microsoft.Azure.Management.V2.Resource.Core.Resource.Update.IUpdateWithTags`1.WithoutTag(System.String)
  commentId: M:Microsoft.Azure.Management.V2.Resource.Core.Resource.Update.IUpdateWithTags`1.WithoutTag(System.String)
  id: WithoutTag(System.String)
  parent: Microsoft.Azure.Management.V2.Resource.Core.Resource.Update.IUpdateWithTags`1
  langs:
  - csharp
  - vb
  name: WithoutTag(String)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.Resource.Update.IUpdateWithTags<T>.WithoutTag(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Domain/Core/Resource/Update/IUpdate.cs
      branch: 5a8eaf14f2d96c6f4818218d22fcacdccb1235de
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithoutTag
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Domain/Core/Resource/Update/IUpdate.cs
    startLine: 38
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core.Resource.Update
  summary: "\nRemoves a tag from the resource.\n"
  example: []
  syntax:
    content: T WithoutTag(string key)
    content.vb: Function WithoutTag(key As String) As T
    parameters:
    - id: key
      type: System.String
      description: key the key of the tag to remove
    return:
      type: '{T}'
      description: the next stage of the resource update
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.Resource.Update.IUpdateWithTags(Of T).WithoutTag(System.String)
references:
- uid: Microsoft.Azure.Management.V2.Resource.Core.Resource.Update
  isExternal: false
  name: Microsoft.Azure.Management.V2.Resource.Core.Resource.Update
  fullName: Microsoft.Azure.Management.V2.Resource.Core.Resource.Update
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: '{T}'
  isExternal: false
  name: T
  fullName: T
- uid: System.Collections.Generic.IDictionary`2
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System
  isExternal: false
  name: System
  fullName: System
