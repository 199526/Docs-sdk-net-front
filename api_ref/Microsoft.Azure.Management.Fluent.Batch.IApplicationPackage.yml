items:
- uid: Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage
  commentId: T:Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage
  id: IApplicationPackage
  parent: Microsoft.Azure.Management.Fluent.Batch
  children:
  - Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage.Activate(System.String)
  - Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage.Delete
  - Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage.Format
  - Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage.LastActivationTime
  - Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage.Name
  - Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage.State
  - Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage.StorageUrl
  - Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage.StorageUrlExpiry
  langs:
  - csharp
  - vb
  name: IApplicationPackage
  fullName: Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage
  type: Interface
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IApplicationPackage.cs
      branch: cd270513306c57dd9b30d6848211d164d0a1fb5b
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IApplicationPackage
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IApplicationPackage.cs
    startLine: 12
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Batch
  summary: "\nAn immutable client-side representation of an Azure batch account application.\n"
  example: []
  syntax:
    content: 'public interface IApplicationPackage : IExternalChildResource<IApplicationPackage, IApplication>, IWrapper<ApplicationPackageInner>'
    content.vb: >-
      Public Interface IApplicationPackage
          Inherits IExternalChildResource(Of IApplicationPackage, IApplication), IWrapper(Of ApplicationPackageInner)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage.Name
  commentId: P:Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage.Name
  id: Name
  parent: Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage
  langs:
  - csharp
  - vb
  name: Name
  fullName: Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage.Name
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IApplicationPackage.cs
      branch: cd270513306c57dd9b30d6848211d164d0a1fb5b
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IApplicationPackage.cs
    startLine: 17
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Batch
  example: []
  syntax:
    content: string Name { get; }
    content.vb: ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: the name of application package.
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage.State
  commentId: P:Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage.State
  id: State
  parent: Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage
  langs:
  - csharp
  - vb
  name: State
  fullName: Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage.State
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IApplicationPackage.cs
      branch: cd270513306c57dd9b30d6848211d164d0a1fb5b
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: State
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IApplicationPackage.cs
    startLine: 20
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Batch
  example: []
  syntax:
    content: PackageState? State { get; }
    content.vb: ReadOnly Property State As PackageState?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.Batch.Models.PackageState}
      description: the sate of the application package
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage.Format
  commentId: P:Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage.Format
  id: Format
  parent: Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage
  langs:
  - csharp
  - vb
  name: Format
  fullName: Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage.Format
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IApplicationPackage.cs
      branch: cd270513306c57dd9b30d6848211d164d0a1fb5b
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Format
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IApplicationPackage.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Batch
  example: []
  syntax:
    content: string Format { get; }
    content.vb: ReadOnly Property Format As String
    parameters: []
    return:
      type: System.String
      description: the format of application package
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage.StorageUrl
  commentId: P:Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage.StorageUrl
  id: StorageUrl
  parent: Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage
  langs:
  - csharp
  - vb
  name: StorageUrl
  fullName: Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage.StorageUrl
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IApplicationPackage.cs
      branch: cd270513306c57dd9b30d6848211d164d0a1fb5b
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StorageUrl
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IApplicationPackage.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Batch
  example: []
  syntax:
    content: string StorageUrl { get; }
    content.vb: ReadOnly Property StorageUrl As String
    parameters: []
    return:
      type: System.String
      description: the storage Url of application package where application should be uploaded
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage.StorageUrlExpiry
  commentId: P:Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage.StorageUrlExpiry
  id: StorageUrlExpiry
  parent: Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage
  langs:
  - csharp
  - vb
  name: StorageUrlExpiry
  fullName: Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage.StorageUrlExpiry
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IApplicationPackage.cs
      branch: cd270513306c57dd9b30d6848211d164d0a1fb5b
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StorageUrlExpiry
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IApplicationPackage.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Batch
  example: []
  syntax:
    content: DateTime? StorageUrlExpiry { get; }
    content.vb: ReadOnly Property StorageUrlExpiry As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
      description: the expiry of the storage url for application package
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage.LastActivationTime
  commentId: P:Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage.LastActivationTime
  id: LastActivationTime
  parent: Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage
  langs:
  - csharp
  - vb
  name: LastActivationTime
  fullName: Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage.LastActivationTime
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IApplicationPackage.cs
      branch: cd270513306c57dd9b30d6848211d164d0a1fb5b
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LastActivationTime
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IApplicationPackage.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Batch
  example: []
  syntax:
    content: DateTime? LastActivationTime { get; }
    content.vb: ReadOnly Property LastActivationTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
      description: the date when last time this application package was activate.
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage.Activate(System.String)
  commentId: M:Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage.Activate(System.String)
  id: Activate(System.String)
  parent: Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage
  langs:
  - csharp
  - vb
  name: Activate(String)
  fullName: Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage.Activate(System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IApplicationPackage.cs
      branch: cd270513306c57dd9b30d6848211d164d0a1fb5b
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Activate
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IApplicationPackage.cs
    startLine: 38
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Batch
  summary: "\nActivates the application package.\n"
  example: []
  syntax:
    content: void Activate(string format)
    content.vb: Sub Activate(format As String)
    parameters:
    - id: format
      type: System.String
      description: format format of the uploaded package supported values zip, tar
- uid: Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage.Delete
  commentId: M:Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage.Delete
  id: Delete
  parent: Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage
  langs:
  - csharp
  - vb
  name: Delete()
  fullName: Microsoft.Azure.Management.Fluent.Batch.IApplicationPackage.Delete()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IApplicationPackage.cs
      branch: cd270513306c57dd9b30d6848211d164d0a1fb5b
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Delete
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.Fluent.Batch/Domain/IApplicationPackage.cs
    startLine: 43
  assemblies:
  - Microsoft.Azure.Management.Fluent.Batch
  packages:
  - Microsoft.Azure.Management.Fluent.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Batch
  summary: "\nDeletes the application package.\n"
  example: []
  syntax:
    content: void Delete()
    content.vb: Sub Delete
references:
- uid: Microsoft.Azure.Management.Fluent.Batch
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Batch
  fullName: Microsoft.Azure.Management.Fluent.Batch
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Nullable{Microsoft.Azure.Management.Batch.Models.PackageState}
  parent: System
  definition: System.Nullable`1
  name: Nullable<PackageState>
  fullName: System.Nullable<Microsoft.Azure.Management.Batch.Models.PackageState>
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.Batch.Models.PackageState)
  name.vb: Nullable(Of PackageState)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Batch.Models.PackageState
    name: PackageState
    fullName: Microsoft.Azure.Management.Batch.Models.PackageState
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Batch.Models.PackageState
    name: PackageState
    fullName: Microsoft.Azure.Management.Batch.Models.PackageState
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    fullName: )
