items:
- uid: Microsoft.Azure.Management.V2.Batch.BatchAccountKeys
  commentId: T:Microsoft.Azure.Management.V2.Batch.BatchAccountKeys
  id: BatchAccountKeys
  parent: Microsoft.Azure.Management.V2.Batch
  children:
  - Microsoft.Azure.Management.V2.Batch.BatchAccountKeys.#ctor(System.String,System.String)
  - Microsoft.Azure.Management.V2.Batch.BatchAccountKeys.Primary
  - Microsoft.Azure.Management.V2.Batch.BatchAccountKeys.Secondary
  langs:
  - csharp
  - vb
  name: BatchAccountKeys
  fullName: Microsoft.Azure.Management.V2.Batch.BatchAccountKeys
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.V2.Batch/Domain/InterfaceImpl/BatchAccountKeys.cs
      branch: a22251cda68f724317d3ae2d0ae390f6642eb358
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BatchAccountKeys
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.V2.Batch/Domain/InterfaceImpl/BatchAccountKeys.cs
    startLine: 7
  assemblies:
  - Microsoft.Azure.Management.V2.Batch
  packages:
  - Microsoft.Azure.Management.V2.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Batch
  summary: "\nThis class represents the access keys for the batch account.\n"
  example: []
  syntax:
    content: public class BatchAccountKeys
    content.vb: Public Class BatchAccountKeys
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.V2.Batch.BatchAccountKeys.#ctor(System.String,System.String)
  commentId: M:Microsoft.Azure.Management.V2.Batch.BatchAccountKeys.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Microsoft.Azure.Management.V2.Batch.BatchAccountKeys
  langs:
  - csharp
  - vb
  name: BatchAccountKeys(String, String)
  fullName: Microsoft.Azure.Management.V2.Batch.BatchAccountKeys.BatchAccountKeys(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.V2.Batch/BatchAccountKeys.cs
      branch: a22251cda68f724317d3ae2d0ae390f6642eb358
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.V2.Batch/BatchAccountKeys.cs
    startLine: 20
  assemblies:
  - Microsoft.Azure.Management.V2.Batch
  packages:
  - Microsoft.Azure.Management.V2.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Batch
  summary: "\nConstructor for the class.\n"
  example: []
  syntax:
    content: public BatchAccountKeys(string primaryKey, string secondaryKey)
    content.vb: Public Sub New(primaryKey As String, secondaryKey As String)
    parameters:
    - id: primaryKey
      type: System.String
      description: primaryKey primary key value for the batch account
    - id: secondaryKey
      type: System.String
      description: secondaryKey secondary key value for the batch account
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.V2.Batch.BatchAccountKeys.Primary
  commentId: P:Microsoft.Azure.Management.V2.Batch.BatchAccountKeys.Primary
  id: Primary
  parent: Microsoft.Azure.Management.V2.Batch.BatchAccountKeys
  langs:
  - csharp
  - vb
  name: Primary
  fullName: Microsoft.Azure.Management.V2.Batch.BatchAccountKeys.Primary
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.V2.Batch/BatchAccountKeys.cs
      branch: a22251cda68f724317d3ae2d0ae390f6642eb358
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Primary
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.V2.Batch/BatchAccountKeys.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Management.V2.Batch
  packages:
  - Microsoft.Azure.Management.V2.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Batch
  summary: "\nGet the primary value.\n"
  example: []
  syntax:
    content: public string Primary { get; }
    content.vb: Public ReadOnly Property Primary As String
    parameters: []
    return:
      type: System.String
      description: the primary value
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.V2.Batch.BatchAccountKeys.Secondary
  commentId: P:Microsoft.Azure.Management.V2.Batch.BatchAccountKeys.Secondary
  id: Secondary
  parent: Microsoft.Azure.Management.V2.Batch.BatchAccountKeys
  langs:
  - csharp
  - vb
  name: Secondary
  fullName: Microsoft.Azure.Management.V2.Batch.BatchAccountKeys.Secondary
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Batch/Microsoft.Azure.Management.V2.Batch/BatchAccountKeys.cs
      branch: a22251cda68f724317d3ae2d0ae390f6642eb358
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Secondary
    path: src/ResourceManagement/Batch/Microsoft.Azure.Management.V2.Batch/BatchAccountKeys.cs
    startLine: 41
  assemblies:
  - Microsoft.Azure.Management.V2.Batch
  packages:
  - Microsoft.Azure.Management.V2.Batch(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Batch
  summary: "\nGet the secondary value.\n"
  example: []
  syntax:
    content: public string Secondary { get; }
    content.vb: Public ReadOnly Property Secondary As String
    parameters: []
    return:
      type: System.String
      description: the secondary value
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Azure.Management.V2.Batch
  isExternal: false
  name: Microsoft.Azure.Management.V2.Batch
  fullName: Microsoft.Azure.Management.V2.Batch
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
