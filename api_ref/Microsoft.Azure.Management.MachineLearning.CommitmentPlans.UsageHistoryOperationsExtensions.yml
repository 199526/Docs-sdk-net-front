items:
- uid: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.UsageHistoryOperationsExtensions
  commentId: T:Microsoft.Azure.Management.MachineLearning.CommitmentPlans.UsageHistoryOperationsExtensions
  id: UsageHistoryOperationsExtensions
  parent: Microsoft.Azure.Management.MachineLearning.CommitmentPlans
  children:
  - Microsoft.Azure.Management.MachineLearning.CommitmentPlans.UsageHistoryOperationsExtensions.List(Microsoft.Azure.Management.MachineLearning.CommitmentPlans.IUsageHistoryOperations,System.String,System.String,System.String)
  - Microsoft.Azure.Management.MachineLearning.CommitmentPlans.UsageHistoryOperationsExtensions.ListAsync(Microsoft.Azure.Management.MachineLearning.CommitmentPlans.IUsageHistoryOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.MachineLearning.CommitmentPlans.UsageHistoryOperationsExtensions.ListNext(Microsoft.Azure.Management.MachineLearning.CommitmentPlans.IUsageHistoryOperations,System.String)
  - Microsoft.Azure.Management.MachineLearning.CommitmentPlans.UsageHistoryOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.MachineLearning.CommitmentPlans.IUsageHistoryOperations,System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: UsageHistoryOperationsExtensions
  fullName: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.UsageHistoryOperationsExtensions
  type: Class
  source:
    remote:
      path: src/ResourceManagement/MachineLearning/Microsoft.Azure.Management.MachineLearning/Generated/CommitmentPlans/UsageHistoryOperationsExtensions.cs
      branch: 1e01bafcd8b025065a7c4afb930c63ba2e078288
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UsageHistoryOperationsExtensions
    path: src/ResourceManagement/MachineLearning/Microsoft.Azure.Management.MachineLearning/Generated/CommitmentPlans/UsageHistoryOperationsExtensions.cs
    startLine: 17
  assemblies:
  - Microsoft.Azure.Management.MachineLearning
  packages:
  - Microsoft.Azure.Management.MachineLearning(0.9.5-preview)
  namespace: Microsoft.Azure.Management.MachineLearning.CommitmentPlans
  summary: "\nExtension methods for UsageHistoryOperations.\n"
  example: []
  syntax:
    content: public class UsageHistoryOperationsExtensions
    content.vb: Public Class UsageHistoryOperationsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.UsageHistoryOperationsExtensions.List(Microsoft.Azure.Management.MachineLearning.CommitmentPlans.IUsageHistoryOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.MachineLearning.CommitmentPlans.UsageHistoryOperationsExtensions.List(Microsoft.Azure.Management.MachineLearning.CommitmentPlans.IUsageHistoryOperations,System.String,System.String,System.String)
  id: List(Microsoft.Azure.Management.MachineLearning.CommitmentPlans.IUsageHistoryOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.UsageHistoryOperationsExtensions
  langs:
  - csharp
  - vb
  name: List(IUsageHistoryOperations, String, String, String)
  fullName: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.UsageHistoryOperationsExtensions.List(Microsoft.Azure.Management.MachineLearning.CommitmentPlans.IUsageHistoryOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/MachineLearning/Microsoft.Azure.Management.MachineLearning/Generated/CommitmentPlans/UsageHistoryOperationsExtensions.cs
      branch: 1e01bafcd8b025065a7c4afb930c63ba2e078288
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: List
    path: src/ResourceManagement/MachineLearning/Microsoft.Azure.Management.MachineLearning/Generated/CommitmentPlans/UsageHistoryOperationsExtensions.cs
    startLine: 34
  assemblies:
  - Microsoft.Azure.Management.MachineLearning
  packages:
  - Microsoft.Azure.Management.MachineLearning(0.9.5-preview)
  namespace: Microsoft.Azure.Management.MachineLearning.CommitmentPlans
  summary: "\nRetrieves the usage history for an Azure ML commitment plan.\n"
  example: []
  syntax:
    content: public static Rest.Azure.IPage<PlanUsageHistory> List(this IUsageHistoryOperations operations, string resourceGroupName, string commitmentPlanName, string skipToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function List(operations As IUsageHistoryOperations, resourceGroupName As String, commitmentPlanName As String, skipToken As String = Nothing) As Rest.Azure.IPage(Of PlanUsageHistory)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.IUsageHistoryOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe resource group name.\n"
    - id: commitmentPlanName
      type: System.String
      description: "\nThe Azure ML commitment plan name.\n"
    - id: skipToken
      type: System.String
      description: "\nContinuation token for pagination.\n"
    return:
      type: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanUsageHistory}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.UsageHistoryOperationsExtensions.ListAsync(Microsoft.Azure.Management.MachineLearning.CommitmentPlans.IUsageHistoryOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.MachineLearning.CommitmentPlans.UsageHistoryOperationsExtensions.ListAsync(Microsoft.Azure.Management.MachineLearning.CommitmentPlans.IUsageHistoryOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: ListAsync(Microsoft.Azure.Management.MachineLearning.CommitmentPlans.IUsageHistoryOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.UsageHistoryOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListAsync(IUsageHistoryOperations, String, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.UsageHistoryOperationsExtensions.ListAsync(Microsoft.Azure.Management.MachineLearning.CommitmentPlans.IUsageHistoryOperations, System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/MachineLearning/Microsoft.Azure.Management.MachineLearning/Generated/CommitmentPlans/UsageHistoryOperationsExtensions.cs
      branch: 1e01bafcd8b025065a7c4afb930c63ba2e078288
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListAsync
    path: src/ResourceManagement/MachineLearning/Microsoft.Azure.Management.MachineLearning/Generated/CommitmentPlans/UsageHistoryOperationsExtensions.cs
    startLine: 57
  assemblies:
  - Microsoft.Azure.Management.MachineLearning
  packages:
  - Microsoft.Azure.Management.MachineLearning(0.9.5-preview)
  namespace: Microsoft.Azure.Management.MachineLearning.CommitmentPlans
  summary: "\nRetrieves the usage history for an Azure ML commitment plan.\n"
  example: []
  syntax:
    content: public static Task<Rest.Azure.IPage<PlanUsageHistory>> ListAsync(this IUsageHistoryOperations operations, string resourceGroupName, string commitmentPlanName, string skipToken = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListAsync(operations As IUsageHistoryOperations, resourceGroupName As String, commitmentPlanName As String, skipToken As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Rest.Azure.IPage(Of PlanUsageHistory))
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.IUsageHistoryOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe resource group name.\n"
    - id: commitmentPlanName
      type: System.String
      description: "\nThe Azure ML commitment plan name.\n"
    - id: skipToken
      type: System.String
      description: "\nContinuation token for pagination.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanUsageHistory}}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.UsageHistoryOperationsExtensions.ListNext(Microsoft.Azure.Management.MachineLearning.CommitmentPlans.IUsageHistoryOperations,System.String)
  commentId: M:Microsoft.Azure.Management.MachineLearning.CommitmentPlans.UsageHistoryOperationsExtensions.ListNext(Microsoft.Azure.Management.MachineLearning.CommitmentPlans.IUsageHistoryOperations,System.String)
  id: ListNext(Microsoft.Azure.Management.MachineLearning.CommitmentPlans.IUsageHistoryOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.UsageHistoryOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListNext(IUsageHistoryOperations, String)
  fullName: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.UsageHistoryOperationsExtensions.ListNext(Microsoft.Azure.Management.MachineLearning.CommitmentPlans.IUsageHistoryOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/MachineLearning/Microsoft.Azure.Management.MachineLearning/Generated/CommitmentPlans/UsageHistoryOperationsExtensions.cs
      branch: 1e01bafcd8b025065a7c4afb930c63ba2e078288
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListNext
    path: src/ResourceManagement/MachineLearning/Microsoft.Azure.Management.MachineLearning/Generated/CommitmentPlans/UsageHistoryOperationsExtensions.cs
    startLine: 74
  assemblies:
  - Microsoft.Azure.Management.MachineLearning
  packages:
  - Microsoft.Azure.Management.MachineLearning(0.9.5-preview)
  namespace: Microsoft.Azure.Management.MachineLearning.CommitmentPlans
  summary: "\nRetrieves the usage history for an Azure ML commitment plan.\n"
  example: []
  syntax:
    content: public static Rest.Azure.IPage<PlanUsageHistory> ListNext(this IUsageHistoryOperations operations, string nextPageLink)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListNext(operations As IUsageHistoryOperations, nextPageLink As String) As Rest.Azure.IPage(Of PlanUsageHistory)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.IUsageHistoryOperations
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    return:
      type: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanUsageHistory}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.UsageHistoryOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.MachineLearning.CommitmentPlans.IUsageHistoryOperations,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.MachineLearning.CommitmentPlans.UsageHistoryOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.MachineLearning.CommitmentPlans.IUsageHistoryOperations,System.String,System.Threading.CancellationToken)
  id: ListNextAsync(Microsoft.Azure.Management.MachineLearning.CommitmentPlans.IUsageHistoryOperations,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.UsageHistoryOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListNextAsync(IUsageHistoryOperations, String, CancellationToken)
  fullName: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.UsageHistoryOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.MachineLearning.CommitmentPlans.IUsageHistoryOperations, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/MachineLearning/Microsoft.Azure.Management.MachineLearning/Generated/CommitmentPlans/UsageHistoryOperationsExtensions.cs
      branch: 1e01bafcd8b025065a7c4afb930c63ba2e078288
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListNextAsync
    path: src/ResourceManagement/MachineLearning/Microsoft.Azure.Management.MachineLearning/Generated/CommitmentPlans/UsageHistoryOperationsExtensions.cs
    startLine: 91
  assemblies:
  - Microsoft.Azure.Management.MachineLearning
  packages:
  - Microsoft.Azure.Management.MachineLearning(0.9.5-preview)
  namespace: Microsoft.Azure.Management.MachineLearning.CommitmentPlans
  summary: "\nRetrieves the usage history for an Azure ML commitment plan.\n"
  example: []
  syntax:
    content: public static Task<Rest.Azure.IPage<PlanUsageHistory>> ListNextAsync(this IUsageHistoryOperations operations, string nextPageLink, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListNextAsync(operations As IUsageHistoryOperations, nextPageLink As String, cancellationToken As CancellationToken = Nothing) As Task(Of Rest.Azure.IPage(Of PlanUsageHistory))
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.IUsageHistoryOperations
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanUsageHistory}}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.Management.MachineLearning.CommitmentPlans
  isExternal: false
  name: Microsoft.Azure.Management.MachineLearning.CommitmentPlans
  fullName: Microsoft.Azure.Management.MachineLearning.CommitmentPlans
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.IUsageHistoryOperations
  parent: Microsoft.Azure.Management.MachineLearning.CommitmentPlans
  isExternal: false
  name: IUsageHistoryOperations
  fullName: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.IUsageHistoryOperations
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanUsageHistory}
  definition: Microsoft.Rest.Azure.IPage`1
  name: Rest.Azure.IPage<PlanUsageHistory>
  fullName: Microsoft.Rest.Azure.IPage<Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanUsageHistory>
  fullname.vb: Microsoft.Rest.Azure.IPage(Of Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanUsageHistory)
  name.vb: Rest.Azure.IPage(Of PlanUsageHistory)
  spec.csharp:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: Rest.Azure.IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanUsageHistory
    name: PlanUsageHistory
    fullName: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanUsageHistory
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: Rest.Azure.IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanUsageHistory
    name: PlanUsageHistory
    fullName: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanUsageHistory
  - name: )
    fullName: )
- uid: Microsoft.Rest.Azure.IPage`1
  isExternal: true
  name: Rest.Azure.IPage<>
  fullName: Microsoft.Rest.Azure.IPage<>
  fullname.vb: Microsoft.Rest.Azure.IPage(Of )
  name.vb: Rest.Azure.IPage(Of )
  spec.csharp:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: Rest.Azure.IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: Rest.Azure.IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanUsageHistory}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Rest.Azure.IPage<PlanUsageHistory>>
  fullName: System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanUsageHistory>>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Rest.Azure.IPage(Of Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanUsageHistory))
  name.vb: Task(Of Rest.Azure.IPage(Of PlanUsageHistory))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Rest.Azure.IPage`1
    name: Rest.Azure.IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanUsageHistory
    name: PlanUsageHistory
    fullName: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanUsageHistory
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Rest.Azure.IPage`1
    name: Rest.Azure.IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanUsageHistory
    name: PlanUsageHistory
    fullName: Microsoft.Azure.Management.MachineLearning.CommitmentPlans.Models.PlanUsageHistory
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
