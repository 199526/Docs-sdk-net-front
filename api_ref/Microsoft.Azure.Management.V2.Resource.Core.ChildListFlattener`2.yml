items:
- uid: Microsoft.Azure.Management.V2.Resource.Core.ChildListFlattener`2
  commentId: T:Microsoft.Azure.Management.V2.Resource.Core.ChildListFlattener`2
  id: ChildListFlattener`2
  parent: Microsoft.Azure.Management.V2.Resource.Core
  children:
  - Microsoft.Azure.Management.V2.Resource.Core.ChildListFlattener`2.#ctor(Microsoft.Azure.Management.V2.Resource.Core.PagedList{`0},System.Func{`0,Microsoft.Azure.Management.V2.Resource.Core.PagedList{`1}})
  - Microsoft.Azure.Management.V2.Resource.Core.ChildListFlattener`2.Flatten
  langs:
  - csharp
  - vb
  name: ChildListFlattener<ParentT, ChildT>
  fullName: Microsoft.Azure.Management.V2.Resource.Core.ChildListFlattener<ParentT, ChildT>
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ChildListFlattener.cs
      branch: 5314ea29e61dbf96da9eec18d63cf62f07475e8a
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ChildListFlattener
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ChildListFlattener.cs
    startLine: 10
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core
  syntax:
    content: public class ChildListFlattener<ParentT, ChildT>
    content.vb: Public Class ChildListFlattener(Of ParentT, ChildT)
    typeParameters:
    - id: ParentT
    - id: ChildT
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.ChildListFlattener(Of ParentT, ChildT)
  name.vb: ChildListFlattener(Of ParentT, ChildT)
- uid: Microsoft.Azure.Management.V2.Resource.Core.ChildListFlattener`2.#ctor(Microsoft.Azure.Management.V2.Resource.Core.PagedList{`0},System.Func{`0,Microsoft.Azure.Management.V2.Resource.Core.PagedList{`1}})
  commentId: M:Microsoft.Azure.Management.V2.Resource.Core.ChildListFlattener`2.#ctor(Microsoft.Azure.Management.V2.Resource.Core.PagedList{`0},System.Func{`0,Microsoft.Azure.Management.V2.Resource.Core.PagedList{`1}})
  id: '#ctor(Microsoft.Azure.Management.V2.Resource.Core.PagedList{`0},System.Func{`0,Microsoft.Azure.Management.V2.Resource.Core.PagedList{`1}})'
  parent: Microsoft.Azure.Management.V2.Resource.Core.ChildListFlattener`2
  langs:
  - csharp
  - vb
  name: ChildListFlattener(PagedList<ParentT>, Func<ParentT, PagedList<ChildT>>)
  fullName: Microsoft.Azure.Management.V2.Resource.Core.ChildListFlattener<ParentT, ChildT>.ChildListFlattener(Microsoft.Azure.Management.V2.Resource.Core.PagedList<ParentT>, System.Func<ParentT, Microsoft.Azure.Management.V2.Resource.Core.PagedList<ChildT>>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ChildListFlattener.cs
      branch: 5314ea29e61dbf96da9eec18d63cf62f07475e8a
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ChildListFlattener.cs
    startLine: 18
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core
  syntax:
    content: public ChildListFlattener(PagedList<ParentT> parentList, Func<ParentT, PagedList<ChildT>> loadChildList)
    content.vb: Public Sub New(parentList As PagedList(Of ParentT), loadChildList As Func(Of ParentT, PagedList(Of ChildT)))
    parameters:
    - id: parentList
      type: Microsoft.Azure.Management.V2.Resource.Core.PagedList{{ParentT}}
    - id: loadChildList
      type: System.Func{{ParentT},Microsoft.Azure.Management.V2.Resource.Core.PagedList{{ChildT}}}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.ChildListFlattener(Of ParentT, ChildT).ChildListFlattener(Microsoft.Azure.Management.V2.Resource.Core.PagedList(Of ParentT), System.Func(Of ParentT, Microsoft.Azure.Management.V2.Resource.Core.PagedList(Of ChildT)))
  name.vb: ChildListFlattener(PagedList(Of ParentT), Func(Of ParentT, PagedList(Of ChildT)))
- uid: Microsoft.Azure.Management.V2.Resource.Core.ChildListFlattener`2.Flatten
  commentId: M:Microsoft.Azure.Management.V2.Resource.Core.ChildListFlattener`2.Flatten
  id: Flatten
  parent: Microsoft.Azure.Management.V2.Resource.Core.ChildListFlattener`2
  langs:
  - csharp
  - vb
  name: Flatten()
  fullName: Microsoft.Azure.Management.V2.Resource.Core.ChildListFlattener<ParentT, ChildT>.Flatten()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ChildListFlattener.cs
      branch: 5314ea29e61dbf96da9eec18d63cf62f07475e8a
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Flatten
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Core/ChildListFlattener.cs
    startLine: 24
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.V2.Resource.Core
  syntax:
    content: public PagedList<ChildT> Flatten()
    content.vb: Public Function Flatten As PagedList(Of ChildT)
    return:
      type: Microsoft.Azure.Management.V2.Resource.Core.PagedList{{ChildT}}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.V2.Resource.Core.ChildListFlattener(Of ParentT, ChildT).Flatten()
references:
- uid: Microsoft.Azure.Management.V2.Resource.Core
  isExternal: false
  name: Microsoft.Azure.Management.V2.Resource.Core
  fullName: Microsoft.Azure.Management.V2.Resource.Core
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Management.V2.Resource.Core.PagedList{{ParentT}}
  parent: Microsoft.Azure.Management.V2.Resource.Core
  definition: Microsoft.Azure.Management.V2.Resource.Core.PagedList`1
  name: PagedList<ParentT>
  fullName: Microsoft.Azure.Management.V2.Resource.Core.PagedList<ParentT>
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.PagedList(Of ParentT)
  name.vb: PagedList(Of ParentT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.PagedList`1
    name: PagedList
    fullName: Microsoft.Azure.Management.V2.Resource.Core.PagedList
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.PagedList`1
    name: PagedList
    fullName: Microsoft.Azure.Management.V2.Resource.Core.PagedList
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: )
    fullName: )
- uid: System.Func{{ParentT},Microsoft.Azure.Management.V2.Resource.Core.PagedList{{ChildT}}}
  parent: System
  definition: System.Func`2
  name: Func<ParentT, PagedList<ChildT>>
  fullName: System.Func<ParentT, Microsoft.Azure.Management.V2.Resource.Core.PagedList<ChildT>>
  fullname.vb: System.Func(Of ParentT, Microsoft.Azure.Management.V2.Resource.Core.PagedList(Of ChildT))
  name.vb: Func(Of ParentT, PagedList(Of ChildT))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: ParentT
    fullName: ParentT
  - name: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.V2.Resource.Core.PagedList`1
    name: PagedList
    fullName: Microsoft.Azure.Management.V2.Resource.Core.PagedList
  - name: <
    fullName: <
  - name: ChildT
    fullName: ChildT
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: ParentT
    fullName: ParentT
  - name: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Management.V2.Resource.Core.PagedList`1
    name: PagedList
    fullName: Microsoft.Azure.Management.V2.Resource.Core.PagedList
  - name: '(Of '
    fullName: '(Of '
  - name: ChildT
    fullName: ChildT
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.V2.Resource.Core.PagedList`1
  parent: Microsoft.Azure.Management.V2.Resource.Core
  isExternal: false
  name: PagedList<T>
  fullName: Microsoft.Azure.Management.V2.Resource.Core.PagedList<T>
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.PagedList(Of T)
  name.vb: PagedList(Of T)
  spec.csharp:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.PagedList`1
    name: PagedList
    fullName: Microsoft.Azure.Management.V2.Resource.Core.PagedList
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.PagedList`1
    name: PagedList
    fullName: Microsoft.Azure.Management.V2.Resource.Core.PagedList
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Func`2
  parent: System
  isExternal: true
  name: Func<T, TResult>
  fullName: System.Func<T, TResult>
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.V2.Resource.Core.PagedList{{ChildT}}
  parent: Microsoft.Azure.Management.V2.Resource.Core
  definition: Microsoft.Azure.Management.V2.Resource.Core.PagedList`1
  name: PagedList<ChildT>
  fullName: Microsoft.Azure.Management.V2.Resource.Core.PagedList<ChildT>
  fullname.vb: Microsoft.Azure.Management.V2.Resource.Core.PagedList(Of ChildT)
  name.vb: PagedList(Of ChildT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.PagedList`1
    name: PagedList
    fullName: Microsoft.Azure.Management.V2.Resource.Core.PagedList
  - name: <
    fullName: <
  - name: ChildT
    fullName: ChildT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.V2.Resource.Core.PagedList`1
    name: PagedList
    fullName: Microsoft.Azure.Management.V2.Resource.Core.PagedList
  - name: '(Of '
    fullName: '(Of '
  - name: ChildT
    fullName: ChildT
  - name: )
    fullName: )
