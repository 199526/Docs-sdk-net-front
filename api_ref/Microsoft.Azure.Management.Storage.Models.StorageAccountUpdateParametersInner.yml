items:
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParametersInner
  commentId: T:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParametersInner
  id: StorageAccountUpdateParametersInner
  parent: Microsoft.Azure.Management.Storage.Models
  children:
  - Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParametersInner.#ctor
  - Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParametersInner.#ctor(Microsoft.Azure.Management.Storage.Models.Sku,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.Storage.Models.CustomDomain,Microsoft.Azure.Management.Storage.Models.Encryption,System.Nullable{Microsoft.Azure.Management.Storage.Models.AccessTier})
  - Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParametersInner.AccessTier
  - Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParametersInner.CustomDomain
  - Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParametersInner.Encryption
  - Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParametersInner.Sku
  - Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParametersInner.Tags
  - Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParametersInner.Validate
  langs:
  - csharp
  - vb
  name: StorageAccountUpdateParametersInner
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParametersInner
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.V2.Storage/Generated/Models/StorageAccountUpdateParametersInner.cs
      branch: 622625bad63c765bc9dae6a4780b25341c1997f0
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StorageAccountUpdateParametersInner
    path: src/ResourceManagement/Storage/Microsoft.Azure.Management.V2.Storage/Generated/Models/StorageAccountUpdateParametersInner.cs
    startLine: 15
  assemblies:
  - Microsoft.Azure.Management.V2.Storage
  packages:
  - Microsoft.Azure.Management.V2.Storage(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nThe parameters to provide for the account.\n"
  example: []
  syntax:
    content: public class StorageAccountUpdateParametersInner
    content.vb: Public Class StorageAccountUpdateParametersInner
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParametersInner.#ctor
  commentId: M:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParametersInner.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParametersInner
  langs:
  - csharp
  - vb
  name: StorageAccountUpdateParametersInner()
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParametersInner.StorageAccountUpdateParametersInner()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.V2.Storage/Generated/Models/StorageAccountUpdateParametersInner.cs
      branch: 622625bad63c765bc9dae6a4780b25341c1997f0
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Storage/Microsoft.Azure.Management.V2.Storage/Generated/Models/StorageAccountUpdateParametersInner.cs
    startLine: 22
  assemblies:
  - Microsoft.Azure.Management.V2.Storage
  packages:
  - Microsoft.Azure.Management.V2.Storage(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nInitializes a new instance of the\nStorageAccountUpdateParametersInner class.\n"
  example: []
  syntax:
    content: public StorageAccountUpdateParametersInner()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParametersInner.#ctor(Microsoft.Azure.Management.Storage.Models.Sku,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.Storage.Models.CustomDomain,Microsoft.Azure.Management.Storage.Models.Encryption,System.Nullable{Microsoft.Azure.Management.Storage.Models.AccessTier})
  commentId: M:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParametersInner.#ctor(Microsoft.Azure.Management.Storage.Models.Sku,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.Storage.Models.CustomDomain,Microsoft.Azure.Management.Storage.Models.Encryption,System.Nullable{Microsoft.Azure.Management.Storage.Models.AccessTier})
  id: '#ctor(Microsoft.Azure.Management.Storage.Models.Sku,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.Storage.Models.CustomDomain,Microsoft.Azure.Management.Storage.Models.Encryption,System.Nullable{Microsoft.Azure.Management.Storage.Models.AccessTier})'
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParametersInner
  langs:
  - csharp
  - vb
  name: StorageAccountUpdateParametersInner(Sku, IDictionary<String, String>, CustomDomain, Encryption, Nullable<AccessTier>)
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParametersInner.StorageAccountUpdateParametersInner(Microsoft.Azure.Management.Storage.Models.Sku, System.Collections.Generic.IDictionary<System.String, System.String>, Microsoft.Azure.Management.Storage.Models.CustomDomain, Microsoft.Azure.Management.Storage.Models.Encryption, System.Nullable<Microsoft.Azure.Management.Storage.Models.AccessTier>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.V2.Storage/Generated/Models/StorageAccountUpdateParametersInner.cs
      branch: 622625bad63c765bc9dae6a4780b25341c1997f0
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Storage/Microsoft.Azure.Management.V2.Storage/Generated/Models/StorageAccountUpdateParametersInner.cs
    startLine: 51
  assemblies:
  - Microsoft.Azure.Management.V2.Storage
  packages:
  - Microsoft.Azure.Management.V2.Storage(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nInitializes a new instance of the\nStorageAccountUpdateParametersInner class.\n"
  example: []
  syntax:
    content: public StorageAccountUpdateParametersInner(Sku sku = null, IDictionary<string, string> tags = null, CustomDomain customDomain = null, Encryption encryption = null, AccessTier? accessTier = null)
    content.vb: Public Sub New(sku As Sku = Nothing, tags As IDictionary(Of String, String) = Nothing, customDomain As CustomDomain = Nothing, encryption As Encryption = Nothing, accessTier As AccessTier? = Nothing)
    parameters:
    - id: sku
      type: Microsoft.Azure.Management.Storage.Models.Sku
      description: >-
        Gets or sets the sku type. Note that sku cannot

        be updated to StandardZRS or ProvisionedLRS, nor can accounts of

        that sku type be updated to any other value.
    - id: tags
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: >-
        Gets or sets a list of key value pairs that

        describe the resource. These tags can be used in viewing and

        grouping this resource (across resource groups). A maximum of 15

        tags can be provided for a resource. Each tag must have a key no

        greater than 128 characters and value no greater than 256

        characters.
    - id: customDomain
      type: Microsoft.Azure.Management.Storage.Models.CustomDomain
      description: >-
        User domain assigned to the storage

        account. Name is the CNAME source. Only one custom domain is

        supported per storage account at this time. To clear the existing

        custom domain, use an empty string for the custom domain name

        property.
    - id: encryption
      type: Microsoft.Azure.Management.Storage.Models.Encryption
      description: >-
        Provides the encryption settings on the

        account. The default setting is unencrypted.
    - id: accessTier
      type: System.Nullable{Microsoft.Azure.Management.Storage.Models.AccessTier}
      description: >-
        The access tier used for billing. Access

        tier cannot be changed more than once every 7 days (168 hours).

        Access tier cannot be set for StandardLRS, StandardGRS,

        StandardRAGRS, or PremiumLRS account types. Possible values

        include: 'Hot', 'Cool'
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParametersInner.StorageAccountUpdateParametersInner(Microsoft.Azure.Management.Storage.Models.Sku, System.Collections.Generic.IDictionary(Of System.String, System.String), Microsoft.Azure.Management.Storage.Models.CustomDomain, Microsoft.Azure.Management.Storage.Models.Encryption, System.Nullable(Of Microsoft.Azure.Management.Storage.Models.AccessTier))
  name.vb: StorageAccountUpdateParametersInner(Sku, IDictionary(Of String, String), CustomDomain, Encryption, Nullable(Of AccessTier))
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParametersInner.Sku
  commentId: P:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParametersInner.Sku
  id: Sku
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParametersInner
  langs:
  - csharp
  - vb
  name: Sku
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParametersInner.Sku
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.V2.Storage/Generated/Models/StorageAccountUpdateParametersInner.cs
      branch: 622625bad63c765bc9dae6a4780b25341c1997f0
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Sku
    path: src/ResourceManagement/Storage/Microsoft.Azure.Management.V2.Storage/Generated/Models/StorageAccountUpdateParametersInner.cs
    startLine: 65
  assemblies:
  - Microsoft.Azure.Management.V2.Storage
  packages:
  - Microsoft.Azure.Management.V2.Storage(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nGets or sets the sku type. Note that sku cannot be updated to\nStandardZRS or ProvisionedLRS, nor can accounts of that sku type\nbe updated to any other value.\n"
  example: []
  syntax:
    content: public Sku Sku { get; set; }
    content.vb: Public Property Sku As Sku
    parameters: []
    return:
      type: Microsoft.Azure.Management.Storage.Models.Sku
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParametersInner.Tags
  commentId: P:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParametersInner.Tags
  id: Tags
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParametersInner
  langs:
  - csharp
  - vb
  name: Tags
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParametersInner.Tags
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.V2.Storage/Generated/Models/StorageAccountUpdateParametersInner.cs
      branch: 622625bad63c765bc9dae6a4780b25341c1997f0
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Tags
    path: src/ResourceManagement/Storage/Microsoft.Azure.Management.V2.Storage/Generated/Models/StorageAccountUpdateParametersInner.cs
    startLine: 75
  assemblies:
  - Microsoft.Azure.Management.V2.Storage
  packages:
  - Microsoft.Azure.Management.V2.Storage(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nGets or sets a list of key value pairs that describe the resource.\nThese tags can be used in viewing and grouping this resource\n(across resource groups). A maximum of 15 tags can be provided\nfor a resource. Each tag must have a key no greater than 128\ncharacters and value no greater than 256 characters.\n"
  example: []
  syntax:
    content: public IDictionary<string, string> Tags { get; set; }
    content.vb: Public Property Tags As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParametersInner.CustomDomain
  commentId: P:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParametersInner.CustomDomain
  id: CustomDomain
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParametersInner
  langs:
  - csharp
  - vb
  name: CustomDomain
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParametersInner.CustomDomain
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.V2.Storage/Generated/Models/StorageAccountUpdateParametersInner.cs
      branch: 622625bad63c765bc9dae6a4780b25341c1997f0
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CustomDomain
    path: src/ResourceManagement/Storage/Microsoft.Azure.Management.V2.Storage/Generated/Models/StorageAccountUpdateParametersInner.cs
    startLine: 84
  assemblies:
  - Microsoft.Azure.Management.V2.Storage
  packages:
  - Microsoft.Azure.Management.V2.Storage(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nGets or sets user domain assigned to the storage account. Name is\nthe CNAME source. Only one custom domain is supported per storage\naccount at this time. To clear the existing custom domain, use an\nempty string for the custom domain name property.\n"
  example: []
  syntax:
    content: public CustomDomain CustomDomain { get; set; }
    content.vb: Public Property CustomDomain As CustomDomain
    parameters: []
    return:
      type: Microsoft.Azure.Management.Storage.Models.CustomDomain
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParametersInner.Encryption
  commentId: P:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParametersInner.Encryption
  id: Encryption
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParametersInner
  langs:
  - csharp
  - vb
  name: Encryption
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParametersInner.Encryption
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.V2.Storage/Generated/Models/StorageAccountUpdateParametersInner.cs
      branch: 622625bad63c765bc9dae6a4780b25341c1997f0
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Encryption
    path: src/ResourceManagement/Storage/Microsoft.Azure.Management.V2.Storage/Generated/Models/StorageAccountUpdateParametersInner.cs
    startLine: 91
  assemblies:
  - Microsoft.Azure.Management.V2.Storage
  packages:
  - Microsoft.Azure.Management.V2.Storage(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nGets or sets provides the encryption settings on the account. The\ndefault setting is unencrypted.\n"
  example: []
  syntax:
    content: public Encryption Encryption { get; set; }
    content.vb: Public Property Encryption As Encryption
    parameters: []
    return:
      type: Microsoft.Azure.Management.Storage.Models.Encryption
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParametersInner.AccessTier
  commentId: P:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParametersInner.AccessTier
  id: AccessTier
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParametersInner
  langs:
  - csharp
  - vb
  name: AccessTier
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParametersInner.AccessTier
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.V2.Storage/Generated/Models/StorageAccountUpdateParametersInner.cs
      branch: 622625bad63c765bc9dae6a4780b25341c1997f0
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AccessTier
    path: src/ResourceManagement/Storage/Microsoft.Azure.Management.V2.Storage/Generated/Models/StorageAccountUpdateParametersInner.cs
    startLine: 100
  assemblies:
  - Microsoft.Azure.Management.V2.Storage
  packages:
  - Microsoft.Azure.Management.V2.Storage(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nGets or sets the access tier used for billing. Access tier cannot\nbe changed more than once every 7 days (168 hours). Access tier\ncannot be set for StandardLRS, StandardGRS, StandardRAGRS, or\nPremiumLRS account types. Possible values include: 'Hot', 'Cool'\n"
  example: []
  syntax:
    content: public AccessTier? AccessTier { get; set; }
    content.vb: Public Property AccessTier As AccessTier?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.Storage.Models.AccessTier}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParametersInner.Validate
  commentId: M:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParametersInner.Validate
  id: Validate
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParametersInner
  langs:
  - csharp
  - vb
  name: Validate()
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParametersInner.Validate()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Storage/Microsoft.Azure.Management.V2.Storage/Generated/Models/StorageAccountUpdateParametersInner.cs
      branch: 622625bad63c765bc9dae6a4780b25341c1997f0
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/ResourceManagement/Storage/Microsoft.Azure.Management.V2.Storage/Generated/Models/StorageAccountUpdateParametersInner.cs
    startLine: 109
  assemblies:
  - Microsoft.Azure.Management.V2.Storage
  packages:
  - Microsoft.Azure.Management.V2.Storage(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Management.Storage.Models
  isExternal: false
  name: Microsoft.Azure.Management.Storage.Models
  fullName: Microsoft.Azure.Management.Storage.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Management.Storage.Models.Sku
  parent: Microsoft.Azure.Management.Storage.Models
  isExternal: false
  name: Sku
  fullName: Microsoft.Azure.Management.Storage.Models.Sku
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Storage.Models.CustomDomain
  parent: Microsoft.Azure.Management.Storage.Models
  isExternal: false
  name: CustomDomain
  fullName: Microsoft.Azure.Management.Storage.Models.CustomDomain
- uid: Microsoft.Azure.Management.Storage.Models.Encryption
  parent: Microsoft.Azure.Management.Storage.Models
  isExternal: false
  name: Encryption
  fullName: Microsoft.Azure.Management.Storage.Models.Encryption
- uid: System.Nullable{Microsoft.Azure.Management.Storage.Models.AccessTier}
  parent: System
  definition: System.Nullable`1
  name: Nullable<AccessTier>
  fullName: System.Nullable<Microsoft.Azure.Management.Storage.Models.AccessTier>
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.Storage.Models.AccessTier)
  name.vb: Nullable(Of AccessTier)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Storage.Models.AccessTier
    name: AccessTier
    fullName: Microsoft.Azure.Management.Storage.Models.AccessTier
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Storage.Models.AccessTier
    name: AccessTier
    fullName: Microsoft.Azure.Management.Storage.Models.AccessTier
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
