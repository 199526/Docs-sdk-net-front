items:
- uid: Microsoft.Azure.Management.Logic.Models.IntegrationAccountContentLink
  commentId: T:Microsoft.Azure.Management.Logic.Models.IntegrationAccountContentLink
  id: IntegrationAccountContentLink
  parent: Microsoft.Azure.Management.Logic.Models
  children:
  - Microsoft.Azure.Management.Logic.Models.IntegrationAccountContentLink.#ctor
  - Microsoft.Azure.Management.Logic.Models.IntegrationAccountContentLink.#ctor(System.String,System.String,System.Nullable{System.Int64},Microsoft.Azure.Management.Logic.Models.IntegrationAccountContentHash,System.Object)
  - Microsoft.Azure.Management.Logic.Models.IntegrationAccountContentLink.ContentHash
  - Microsoft.Azure.Management.Logic.Models.IntegrationAccountContentLink.ContentSize
  - Microsoft.Azure.Management.Logic.Models.IntegrationAccountContentLink.ContentVersion
  - Microsoft.Azure.Management.Logic.Models.IntegrationAccountContentLink.Metadata
  - Microsoft.Azure.Management.Logic.Models.IntegrationAccountContentLink.Uri
  langs:
  - csharp
  - vb
  name: IntegrationAccountContentLink
  fullName: Microsoft.Azure.Management.Logic.Models.IntegrationAccountContentLink
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/IntegrationAccountContentLink.cs
      branch: 70979be0a08bbd73d0189634e9b24ade291baee4
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IntegrationAccountContentLink
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/IntegrationAccountContentLink.cs
    startLine: 18
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic.Models
  syntax:
    content: public class IntegrationAccountContentLink
    content.vb: Public Class IntegrationAccountContentLink
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Logic.Models.IntegrationAccountContentLink.#ctor
  commentId: M:Microsoft.Azure.Management.Logic.Models.IntegrationAccountContentLink.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Logic.Models.IntegrationAccountContentLink
  langs:
  - csharp
  - vb
  name: IntegrationAccountContentLink()
  fullName: Microsoft.Azure.Management.Logic.Models.IntegrationAccountContentLink.IntegrationAccountContentLink()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/IntegrationAccountContentLink.cs
      branch: 70979be0a08bbd73d0189634e9b24ade291baee4
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/IntegrationAccountContentLink.cs
    startLine: 24
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic.Models
  summary: "\nInitializes a new instance of the IntegrationAccountContentLink\nclass.\n"
  example: []
  syntax:
    content: public IntegrationAccountContentLink()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Logic.Models.IntegrationAccountContentLink.#ctor(System.String,System.String,System.Nullable{System.Int64},Microsoft.Azure.Management.Logic.Models.IntegrationAccountContentHash,System.Object)
  commentId: M:Microsoft.Azure.Management.Logic.Models.IntegrationAccountContentLink.#ctor(System.String,System.String,System.Nullable{System.Int64},Microsoft.Azure.Management.Logic.Models.IntegrationAccountContentHash,System.Object)
  id: '#ctor(System.String,System.String,System.Nullable{System.Int64},Microsoft.Azure.Management.Logic.Models.IntegrationAccountContentHash,System.Object)'
  parent: Microsoft.Azure.Management.Logic.Models.IntegrationAccountContentLink
  langs:
  - csharp
  - vb
  name: IntegrationAccountContentLink(String, String, Nullable<Int64>, IntegrationAccountContentHash, Object)
  fullName: Microsoft.Azure.Management.Logic.Models.IntegrationAccountContentLink.IntegrationAccountContentLink(System.String, System.String, System.Nullable<System.Int64>, Microsoft.Azure.Management.Logic.Models.IntegrationAccountContentHash, System.Object)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/IntegrationAccountContentLink.cs
      branch: 70979be0a08bbd73d0189634e9b24ade291baee4
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/IntegrationAccountContentLink.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic.Models
  summary: "\nInitializes a new instance of the IntegrationAccountContentLink\nclass.\n"
  example: []
  syntax:
    content: public IntegrationAccountContentLink(string uri = null, string contentVersion = null, long ? contentSize = null, IntegrationAccountContentHash contentHash = null, object metadata = null)
    content.vb: Public Sub New(uri As String = Nothing, contentVersion As String = Nothing, contentSize As Long? = Nothing, contentHash As IntegrationAccountContentHash = Nothing, metadata As Object = Nothing)
    parameters:
    - id: uri
      type: System.String
    - id: contentVersion
      type: System.String
    - id: contentSize
      type: System.Nullable{System.Int64}
    - id: contentHash
      type: Microsoft.Azure.Management.Logic.Models.IntegrationAccountContentHash
    - id: metadata
      type: System.Object
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Logic.Models.IntegrationAccountContentLink.IntegrationAccountContentLink(System.String, System.String, System.Nullable(Of System.Int64), Microsoft.Azure.Management.Logic.Models.IntegrationAccountContentHash, System.Object)
  name.vb: IntegrationAccountContentLink(String, String, Nullable(Of Int64), IntegrationAccountContentHash, Object)
- uid: Microsoft.Azure.Management.Logic.Models.IntegrationAccountContentLink.Uri
  commentId: P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountContentLink.Uri
  id: Uri
  parent: Microsoft.Azure.Management.Logic.Models.IntegrationAccountContentLink
  langs:
  - csharp
  - vb
  name: Uri
  fullName: Microsoft.Azure.Management.Logic.Models.IntegrationAccountContentLink.Uri
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/IntegrationAccountContentLink.cs
      branch: 70979be0a08bbd73d0189634e9b24ade291baee4
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Uri
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/IntegrationAccountContentLink.cs
    startLine: 42
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic.Models
  summary: "\nGets or sets the content link URI.\n"
  example: []
  syntax:
    content: public string Uri { get; set; }
    content.vb: Public Property Uri As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Logic.Models.IntegrationAccountContentLink.ContentVersion
  commentId: P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountContentLink.ContentVersion
  id: ContentVersion
  parent: Microsoft.Azure.Management.Logic.Models.IntegrationAccountContentLink
  langs:
  - csharp
  - vb
  name: ContentVersion
  fullName: Microsoft.Azure.Management.Logic.Models.IntegrationAccountContentLink.ContentVersion
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/IntegrationAccountContentLink.cs
      branch: 70979be0a08bbd73d0189634e9b24ade291baee4
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ContentVersion
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/IntegrationAccountContentLink.cs
    startLine: 48
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic.Models
  summary: "\nGets or sets the content version.\n"
  example: []
  syntax:
    content: public string ContentVersion { get; set; }
    content.vb: Public Property ContentVersion As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Logic.Models.IntegrationAccountContentLink.ContentSize
  commentId: P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountContentLink.ContentSize
  id: ContentSize
  parent: Microsoft.Azure.Management.Logic.Models.IntegrationAccountContentLink
  langs:
  - csharp
  - vb
  name: ContentSize
  fullName: Microsoft.Azure.Management.Logic.Models.IntegrationAccountContentLink.ContentSize
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/IntegrationAccountContentLink.cs
      branch: 70979be0a08bbd73d0189634e9b24ade291baee4
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ContentSize
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/IntegrationAccountContentLink.cs
    startLine: 54
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic.Models
  summary: "\nGets or sets the content size.\n"
  example: []
  syntax:
    content: public long ? ContentSize { get; set; }
    content.vb: Public Property ContentSize As Long?
    parameters: []
    return:
      type: System.Nullable{System.Int64}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Logic.Models.IntegrationAccountContentLink.ContentHash
  commentId: P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountContentLink.ContentHash
  id: ContentHash
  parent: Microsoft.Azure.Management.Logic.Models.IntegrationAccountContentLink
  langs:
  - csharp
  - vb
  name: ContentHash
  fullName: Microsoft.Azure.Management.Logic.Models.IntegrationAccountContentLink.ContentHash
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/IntegrationAccountContentLink.cs
      branch: 70979be0a08bbd73d0189634e9b24ade291baee4
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ContentHash
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/IntegrationAccountContentLink.cs
    startLine: 60
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic.Models
  summary: "\nGets or sets the content hash.\n"
  example: []
  syntax:
    content: public IntegrationAccountContentHash ContentHash { get; set; }
    content.vb: Public Property ContentHash As IntegrationAccountContentHash
    parameters: []
    return:
      type: Microsoft.Azure.Management.Logic.Models.IntegrationAccountContentHash
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Logic.Models.IntegrationAccountContentLink.Metadata
  commentId: P:Microsoft.Azure.Management.Logic.Models.IntegrationAccountContentLink.Metadata
  id: Metadata
  parent: Microsoft.Azure.Management.Logic.Models.IntegrationAccountContentLink
  langs:
  - csharp
  - vb
  name: Metadata
  fullName: Microsoft.Azure.Management.Logic.Models.IntegrationAccountContentLink.Metadata
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/IntegrationAccountContentLink.cs
      branch: 70979be0a08bbd73d0189634e9b24ade291baee4
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Metadata
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/Models/IntegrationAccountContentLink.cs
    startLine: 66
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic.Models
  summary: "\nGets or sets the metadata.\n"
  example: []
  syntax:
    content: public object Metadata { get; set; }
    content.vb: Public Property Metadata As Object
    parameters: []
    return:
      type: System.Object
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Logic.Models
  isExternal: false
  name: Microsoft.Azure.Management.Logic.Models
  fullName: Microsoft.Azure.Management.Logic.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  fullname.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Logic.Models.IntegrationAccountContentHash
  parent: Microsoft.Azure.Management.Logic.Models
  isExternal: false
  name: IntegrationAccountContentHash
  fullName: Microsoft.Azure.Management.Logic.Models.IntegrationAccountContentHash
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
