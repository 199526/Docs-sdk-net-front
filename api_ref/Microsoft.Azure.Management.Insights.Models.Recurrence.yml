items:
- uid: Microsoft.Azure.Management.Insights.Models.Recurrence
  commentId: T:Microsoft.Azure.Management.Insights.Models.Recurrence
  id: Recurrence
  parent: Microsoft.Azure.Management.Insights.Models
  children:
  - Microsoft.Azure.Management.Insights.Models.Recurrence.#ctor
  - Microsoft.Azure.Management.Insights.Models.Recurrence.#ctor(System.Nullable{Microsoft.Azure.Management.Insights.Models.RecurrenceFrequency},Microsoft.Azure.Management.Insights.Models.RecurrentSchedule)
  - Microsoft.Azure.Management.Insights.Models.Recurrence.Frequency
  - Microsoft.Azure.Management.Insights.Models.Recurrence.Schedule
  langs:
  - csharp
  - vb
  name: Recurrence
  fullName: Microsoft.Azure.Management.Insights.Models.Recurrence
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Insights/Microsoft.Azure.Insights/Generated/Management/Insights/Models/Recurrence.cs
      branch: 1e01bafcd8b025065a7c4afb930c63ba2e078288
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Recurrence
    path: src/ResourceManagement/Insights/Microsoft.Azure.Insights/Generated/Management/Insights/Models/Recurrence.cs
    startLine: 16
  assemblies:
  - Microsoft.Azure.Insights
  packages:
  - Microsoft.Azure.Insights(0.14.0-preview)
  namespace: Microsoft.Azure.Management.Insights.Models
  summary: "\nThe repeating times at which this profile begins. This element is not\nused if the FixedDate element is used.\n"
  example: []
  syntax:
    content: public class Recurrence
    content.vb: Public Class Recurrence
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Insights.Models.Recurrence.#ctor
  commentId: M:Microsoft.Azure.Management.Insights.Models.Recurrence.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Insights.Models.Recurrence
  langs:
  - csharp
  - vb
  name: Recurrence()
  fullName: Microsoft.Azure.Management.Insights.Models.Recurrence.Recurrence()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Insights/Microsoft.Azure.Insights/Generated/Management/Insights/Models/Recurrence.cs
      branch: 1e01bafcd8b025065a7c4afb930c63ba2e078288
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Insights/Microsoft.Azure.Insights/Generated/Management/Insights/Models/Recurrence.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Insights
  packages:
  - Microsoft.Azure.Insights(0.14.0-preview)
  namespace: Microsoft.Azure.Management.Insights.Models
  summary: "\nInitializes a new instance of the Recurrence class.\n"
  example: []
  syntax:
    content: public Recurrence()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Insights.Models.Recurrence.#ctor(System.Nullable{Microsoft.Azure.Management.Insights.Models.RecurrenceFrequency},Microsoft.Azure.Management.Insights.Models.RecurrentSchedule)
  commentId: M:Microsoft.Azure.Management.Insights.Models.Recurrence.#ctor(System.Nullable{Microsoft.Azure.Management.Insights.Models.RecurrenceFrequency},Microsoft.Azure.Management.Insights.Models.RecurrentSchedule)
  id: '#ctor(System.Nullable{Microsoft.Azure.Management.Insights.Models.RecurrenceFrequency},Microsoft.Azure.Management.Insights.Models.RecurrentSchedule)'
  parent: Microsoft.Azure.Management.Insights.Models.Recurrence
  langs:
  - csharp
  - vb
  name: Recurrence(Nullable<RecurrenceFrequency>, RecurrentSchedule)
  fullName: Microsoft.Azure.Management.Insights.Models.Recurrence.Recurrence(System.Nullable<Microsoft.Azure.Management.Insights.Models.RecurrenceFrequency>, Microsoft.Azure.Management.Insights.Models.RecurrentSchedule)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Insights/Microsoft.Azure.Insights/Generated/Management/Insights/Models/Recurrence.cs
      branch: 1e01bafcd8b025065a7c4afb930c63ba2e078288
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Insights/Microsoft.Azure.Insights/Generated/Management/Insights/Models/Recurrence.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Insights
  packages:
  - Microsoft.Azure.Insights(0.14.0-preview)
  namespace: Microsoft.Azure.Management.Insights.Models
  summary: "\nInitializes a new instance of the Recurrence class.\n"
  example: []
  syntax:
    content: public Recurrence(RecurrenceFrequency? frequency = null, RecurrentSchedule schedule = null)
    content.vb: Public Sub New(frequency As RecurrenceFrequency? = Nothing, schedule As RecurrentSchedule = Nothing)
    parameters:
    - id: frequency
      type: System.Nullable{Microsoft.Azure.Management.Insights.Models.RecurrenceFrequency}
      description: >-
        the recurrence frequency. How often the

        schedule profile should take effect. This value must be Week,

        meaning each week will have the same set of profiles. Possible

        values include: 'None', 'Second', 'Minute', 'Hour', 'Day',

        'Week', 'Month', 'Year'
    - id: schedule
      type: Microsoft.Azure.Management.Insights.Models.RecurrentSchedule
      description: >-
        the scheduling constraints for when the

        profile begins.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Insights.Models.Recurrence.Recurrence(System.Nullable(Of Microsoft.Azure.Management.Insights.Models.RecurrenceFrequency), Microsoft.Azure.Management.Insights.Models.RecurrentSchedule)
  name.vb: Recurrence(Nullable(Of RecurrenceFrequency), RecurrentSchedule)
- uid: Microsoft.Azure.Management.Insights.Models.Recurrence.Frequency
  commentId: P:Microsoft.Azure.Management.Insights.Models.Recurrence.Frequency
  id: Frequency
  parent: Microsoft.Azure.Management.Insights.Models.Recurrence
  langs:
  - csharp
  - vb
  name: Frequency
  fullName: Microsoft.Azure.Management.Insights.Models.Recurrence.Frequency
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Insights/Microsoft.Azure.Insights/Generated/Management/Insights/Models/Recurrence.cs
      branch: 1e01bafcd8b025065a7c4afb930c63ba2e078288
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Frequency
    path: src/ResourceManagement/Insights/Microsoft.Azure.Insights/Generated/Management/Insights/Models/Recurrence.cs
    startLine: 45
  assemblies:
  - Microsoft.Azure.Insights
  packages:
  - Microsoft.Azure.Insights(0.14.0-preview)
  namespace: Microsoft.Azure.Management.Insights.Models
  summary: "\nGets or sets the recurrence frequency. How often the schedule\nprofile should take effect. This value must be Week, meaning each\nweek will have the same set of profiles. Possible values include:\n'None', 'Second', 'Minute', 'Hour', 'Day', 'Week', 'Month', 'Year'\n"
  example: []
  syntax:
    content: public RecurrenceFrequency? Frequency { get; set; }
    content.vb: Public Property Frequency As RecurrenceFrequency?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.Insights.Models.RecurrenceFrequency}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Insights.Models.Recurrence.Schedule
  commentId: P:Microsoft.Azure.Management.Insights.Models.Recurrence.Schedule
  id: Schedule
  parent: Microsoft.Azure.Management.Insights.Models.Recurrence
  langs:
  - csharp
  - vb
  name: Schedule
  fullName: Microsoft.Azure.Management.Insights.Models.Recurrence.Schedule
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Insights/Microsoft.Azure.Insights/Generated/Management/Insights/Models/Recurrence.cs
      branch: 1e01bafcd8b025065a7c4afb930c63ba2e078288
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Schedule
    path: src/ResourceManagement/Insights/Microsoft.Azure.Insights/Generated/Management/Insights/Models/Recurrence.cs
    startLine: 52
  assemblies:
  - Microsoft.Azure.Insights
  packages:
  - Microsoft.Azure.Insights(0.14.0-preview)
  namespace: Microsoft.Azure.Management.Insights.Models
  summary: "\nGets or sets the scheduling constraints for when the profile\nbegins.\n"
  example: []
  syntax:
    content: public RecurrentSchedule Schedule { get; set; }
    content.vb: Public Property Schedule As RecurrentSchedule
    parameters: []
    return:
      type: Microsoft.Azure.Management.Insights.Models.RecurrentSchedule
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Insights.Models
  isExternal: false
  name: Microsoft.Azure.Management.Insights.Models
  fullName: Microsoft.Azure.Management.Insights.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Nullable{Microsoft.Azure.Management.Insights.Models.RecurrenceFrequency}
  parent: System
  definition: System.Nullable`1
  name: Nullable<RecurrenceFrequency>
  fullName: System.Nullable<Microsoft.Azure.Management.Insights.Models.RecurrenceFrequency>
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.Insights.Models.RecurrenceFrequency)
  name.vb: Nullable(Of RecurrenceFrequency)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Insights.Models.RecurrenceFrequency
    name: RecurrenceFrequency
    fullName: Microsoft.Azure.Management.Insights.Models.RecurrenceFrequency
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Insights.Models.RecurrenceFrequency
    name: RecurrenceFrequency
    fullName: Microsoft.Azure.Management.Insights.Models.RecurrenceFrequency
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Insights.Models.RecurrentSchedule
  parent: Microsoft.Azure.Management.Insights.Models
  isExternal: false
  name: RecurrentSchedule
  fullName: Microsoft.Azure.Management.Insights.Models.RecurrentSchedule
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
