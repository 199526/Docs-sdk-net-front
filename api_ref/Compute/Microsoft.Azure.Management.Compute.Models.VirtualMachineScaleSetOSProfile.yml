items:
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetOSProfile
  commentId: T:Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetOSProfile
  id: VirtualMachineScaleSetOSProfile
  parent: Microsoft.Azure.Management.Compute.Models
  children:
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetOSProfile.#ctor
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetOSProfile.#ctor(System.String,System.String,System.String,System.String,Microsoft.Azure.Management.Compute.Models.WindowsConfiguration,Microsoft.Azure.Management.Compute.Models.LinuxConfiguration,System.Collections.Generic.IList{Microsoft.Azure.Management.Compute.Models.VaultSecretGroup})
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetOSProfile.AdminPassword
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetOSProfile.AdminUsername
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetOSProfile.ComputerNamePrefix
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetOSProfile.CustomData
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetOSProfile.LinuxConfiguration
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetOSProfile.Secrets
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetOSProfile.WindowsConfiguration
  langs:
  - csharp
  - vb
  name: VirtualMachineScaleSetOSProfile
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetOSProfile
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineScaleSetOSProfile.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: VirtualMachineScaleSetOSProfile
    path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineScaleSetOSProfile.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.Compute
  packages:
  - Microsoft.Azure.Management.Compute(13.0.4-prerelease)
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nDescribes a virtual machine scale set OS profile.\n"
  example: []
  syntax:
    content: public class VirtualMachineScaleSetOSProfile
    content.vb: Public Class VirtualMachineScaleSetOSProfile
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetOSProfile.#ctor
  commentId: M:Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetOSProfile.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetOSProfile
  langs:
  - csharp
  - vb
  name: VirtualMachineScaleSetOSProfile()
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetOSProfile.VirtualMachineScaleSetOSProfile()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineScaleSetOSProfile.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineScaleSetOSProfile.cs
    startLine: 27
  assemblies:
  - Microsoft.Azure.Management.Compute
  packages:
  - Microsoft.Azure.Management.Compute(13.0.4-prerelease)
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nInitializes a new instance of the VirtualMachineScaleSetOSProfile\nclass.\n"
  example: []
  syntax:
    content: public VirtualMachineScaleSetOSProfile()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetOSProfile.#ctor(System.String,System.String,System.String,System.String,Microsoft.Azure.Management.Compute.Models.WindowsConfiguration,Microsoft.Azure.Management.Compute.Models.LinuxConfiguration,System.Collections.Generic.IList{Microsoft.Azure.Management.Compute.Models.VaultSecretGroup})
  commentId: M:Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetOSProfile.#ctor(System.String,System.String,System.String,System.String,Microsoft.Azure.Management.Compute.Models.WindowsConfiguration,Microsoft.Azure.Management.Compute.Models.LinuxConfiguration,System.Collections.Generic.IList{Microsoft.Azure.Management.Compute.Models.VaultSecretGroup})
  id: '#ctor(System.String,System.String,System.String,System.String,Microsoft.Azure.Management.Compute.Models.WindowsConfiguration,Microsoft.Azure.Management.Compute.Models.LinuxConfiguration,System.Collections.Generic.IList{Microsoft.Azure.Management.Compute.Models.VaultSecretGroup})'
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetOSProfile
  langs:
  - csharp
  - vb
  name: VirtualMachineScaleSetOSProfile(String, String, String, String, WindowsConfiguration, LinuxConfiguration, IList<VaultSecretGroup>)
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetOSProfile.VirtualMachineScaleSetOSProfile(System.String, System.String, System.String, System.String, Microsoft.Azure.Management.Compute.Models.WindowsConfiguration, Microsoft.Azure.Management.Compute.Models.LinuxConfiguration, System.Collections.Generic.IList<Microsoft.Azure.Management.Compute.Models.VaultSecretGroup>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineScaleSetOSProfile.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineScaleSetOSProfile.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Management.Compute
  packages:
  - Microsoft.Azure.Management.Compute(13.0.4-prerelease)
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nInitializes a new instance of the VirtualMachineScaleSetOSProfile\nclass.\n"
  example: []
  syntax:
    content: public VirtualMachineScaleSetOSProfile(string computerNamePrefix = null, string adminUsername = null, string adminPassword = null, string customData = null, WindowsConfiguration windowsConfiguration = null, LinuxConfiguration linuxConfiguration = null, IList<VaultSecretGroup> secrets = null)
    content.vb: Public Sub New(computerNamePrefix As String = Nothing, adminUsername As String = Nothing, adminPassword As String = Nothing, customData As String = Nothing, windowsConfiguration As WindowsConfiguration = Nothing, linuxConfiguration As LinuxConfiguration = Nothing, secrets As IList(Of VaultSecretGroup) = Nothing)
    parameters:
    - id: computerNamePrefix
      type: System.String
    - id: adminUsername
      type: System.String
    - id: adminPassword
      type: System.String
    - id: customData
      type: System.String
    - id: windowsConfiguration
      type: Microsoft.Azure.Management.Compute.Models.WindowsConfiguration
    - id: linuxConfiguration
      type: Microsoft.Azure.Management.Compute.Models.LinuxConfiguration
    - id: secrets
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Compute.Models.VaultSecretGroup}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetOSProfile.VirtualMachineScaleSetOSProfile(System.String, System.String, System.String, System.String, Microsoft.Azure.Management.Compute.Models.WindowsConfiguration, Microsoft.Azure.Management.Compute.Models.LinuxConfiguration, System.Collections.Generic.IList(Of Microsoft.Azure.Management.Compute.Models.VaultSecretGroup))
  name.vb: VirtualMachineScaleSetOSProfile(String, String, String, String, WindowsConfiguration, LinuxConfiguration, IList(Of VaultSecretGroup))
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetOSProfile.ComputerNamePrefix
  commentId: P:Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetOSProfile.ComputerNamePrefix
  id: ComputerNamePrefix
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetOSProfile
  langs:
  - csharp
  - vb
  name: ComputerNamePrefix
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetOSProfile.ComputerNamePrefix
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineScaleSetOSProfile.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ComputerNamePrefix
    path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineScaleSetOSProfile.cs
    startLine: 47
  assemblies:
  - Microsoft.Azure.Management.Compute
  packages:
  - Microsoft.Azure.Management.Compute(13.0.4-prerelease)
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nthe computer name prefix.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "computerNamePrefix")]

      public string ComputerNamePrefix { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="computerNamePrefix")>

      Public Property ComputerNamePrefix As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: computerNamePrefix
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetOSProfile.AdminUsername
  commentId: P:Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetOSProfile.AdminUsername
  id: AdminUsername
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetOSProfile
  langs:
  - csharp
  - vb
  name: AdminUsername
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetOSProfile.AdminUsername
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineScaleSetOSProfile.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: AdminUsername
    path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineScaleSetOSProfile.cs
    startLine: 53
  assemblies:
  - Microsoft.Azure.Management.Compute
  packages:
  - Microsoft.Azure.Management.Compute(13.0.4-prerelease)
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nthe admin user name.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "adminUsername")]

      public string AdminUsername { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="adminUsername")>

      Public Property AdminUsername As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: adminUsername
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetOSProfile.AdminPassword
  commentId: P:Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetOSProfile.AdminPassword
  id: AdminPassword
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetOSProfile
  langs:
  - csharp
  - vb
  name: AdminPassword
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetOSProfile.AdminPassword
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineScaleSetOSProfile.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: AdminPassword
    path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineScaleSetOSProfile.cs
    startLine: 59
  assemblies:
  - Microsoft.Azure.Management.Compute
  packages:
  - Microsoft.Azure.Management.Compute(13.0.4-prerelease)
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nthe admin user password.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "adminPassword")]

      public string AdminPassword { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="adminPassword")>

      Public Property AdminPassword As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: adminPassword
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetOSProfile.CustomData
  commentId: P:Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetOSProfile.CustomData
  id: CustomData
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetOSProfile
  langs:
  - csharp
  - vb
  name: CustomData
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetOSProfile.CustomData
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineScaleSetOSProfile.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: CustomData
    path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineScaleSetOSProfile.cs
    startLine: 65
  assemblies:
  - Microsoft.Azure.Management.Compute
  packages:
  - Microsoft.Azure.Management.Compute(13.0.4-prerelease)
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\na base-64 encoded string of custom data.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "customData")]

      public string CustomData { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="customData")>

      Public Property CustomData As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: customData
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetOSProfile.WindowsConfiguration
  commentId: P:Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetOSProfile.WindowsConfiguration
  id: WindowsConfiguration
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetOSProfile
  langs:
  - csharp
  - vb
  name: WindowsConfiguration
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetOSProfile.WindowsConfiguration
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineScaleSetOSProfile.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: WindowsConfiguration
    path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineScaleSetOSProfile.cs
    startLine: 71
  assemblies:
  - Microsoft.Azure.Management.Compute
  packages:
  - Microsoft.Azure.Management.Compute(13.0.4-prerelease)
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nthe Windows Configuration of the OS profile.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "windowsConfiguration")]

      public WindowsConfiguration WindowsConfiguration { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="windowsConfiguration")>

      Public Property WindowsConfiguration As WindowsConfiguration
    parameters: []
    return:
      type: Microsoft.Azure.Management.Compute.Models.WindowsConfiguration
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: windowsConfiguration
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetOSProfile.LinuxConfiguration
  commentId: P:Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetOSProfile.LinuxConfiguration
  id: LinuxConfiguration
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetOSProfile
  langs:
  - csharp
  - vb
  name: LinuxConfiguration
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetOSProfile.LinuxConfiguration
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineScaleSetOSProfile.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: LinuxConfiguration
    path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineScaleSetOSProfile.cs
    startLine: 77
  assemblies:
  - Microsoft.Azure.Management.Compute
  packages:
  - Microsoft.Azure.Management.Compute(13.0.4-prerelease)
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nthe Linux Configuration of the OS profile.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "linuxConfiguration")]

      public LinuxConfiguration LinuxConfiguration { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="linuxConfiguration")>

      Public Property LinuxConfiguration As LinuxConfiguration
    parameters: []
    return:
      type: Microsoft.Azure.Management.Compute.Models.LinuxConfiguration
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: linuxConfiguration
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetOSProfile.Secrets
  commentId: P:Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetOSProfile.Secrets
  id: Secrets
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetOSProfile
  langs:
  - csharp
  - vb
  name: Secrets
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineScaleSetOSProfile.Secrets
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineScaleSetOSProfile.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Secrets
    path: src/ResourceManagement/Compute/Microsoft.Azure.Management.Compute/Generated/Models/VirtualMachineScaleSetOSProfile.cs
    startLine: 83
  assemblies:
  - Microsoft.Azure.Management.Compute
  packages:
  - Microsoft.Azure.Management.Compute(13.0.4-prerelease)
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\nthe List of certificates for addition to the VM.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "secrets")]

      public IList<VaultSecretGroup> Secrets { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="secrets")>

      Public Property Secrets As IList(Of VaultSecretGroup)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Compute.Models.VaultSecretGroup}
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: secrets
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: Microsoft.Azure.Management.Compute.Models
  fullName: Microsoft.Azure.Management.Compute.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.Azure.Management.Compute.Models.WindowsConfiguration
  parent: Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: WindowsConfiguration
  fullName: Microsoft.Azure.Management.Compute.Models.WindowsConfiguration
- uid: Microsoft.Azure.Management.Compute.Models.LinuxConfiguration
  parent: Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: LinuxConfiguration
  fullName: Microsoft.Azure.Management.Compute.Models.LinuxConfiguration
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Compute.Models.VaultSecretGroup}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<VaultSecretGroup>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Compute.Models.VaultSecretGroup>
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Compute.Models.VaultSecretGroup)
  name.vb: IList(Of VaultSecretGroup)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Compute.Models.VaultSecretGroup
    name: VaultSecretGroup
    fullName: Microsoft.Azure.Management.Compute.Models.VaultSecretGroup
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Compute.Models.VaultSecretGroup
    name: VaultSecretGroup
    fullName: Microsoft.Azure.Management.Compute.Models.VaultSecretGroup
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: true
  name: IList<T>
  fullName: System.Collections.Generic.IList<T>
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
