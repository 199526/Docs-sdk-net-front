items:
- uid: Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions
  commentId: T:Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions
  id: IntegrationAccountCertificatesOperationsExtensions
  parent: Microsoft.Azure.Management.Logic
  children:
  - Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate)
  - Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.Delete(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String,System.String,System.String)
  - Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.Get(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String,System.String,System.String)
  - Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.GetAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.List(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String,System.String,System.Nullable{System.Int32})
  - Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.ListAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.ListNext(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String)
  - Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IntegrationAccountCertificatesOperationsExtensions
  fullName: Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountCertificatesOperationsExtensions.cs
      branch: dbdfdd2b281cd5337e1672d46674f4565e116b65
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IntegrationAccountCertificatesOperationsExtensions
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountCertificatesOperationsExtensions.cs
    startLine: 22
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nExtension methods for IntegrationAccountCertificatesOperations.\n"
  example: []
  syntax:
    content: public class IntegrationAccountCertificatesOperationsExtensions
    content.vb: Public Class IntegrationAccountCertificatesOperationsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.List(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String,System.String,System.Nullable{System.Int32})
  commentId: M:Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.List(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String,System.String,System.Nullable{System.Int32})
  id: List(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String,System.String,System.Nullable{System.Int32})
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions
  langs:
  - csharp
  - vb
  name: List(IIntegrationAccountCertificatesOperations, String, String, Nullable<Int32>)
  fullName: Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.List(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations, System.String, System.String, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountCertificatesOperationsExtensions.cs
      branch: dbdfdd2b281cd5337e1672d46674f4565e116b65
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: List
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountCertificatesOperationsExtensions.cs
    startLine: 39
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nGets a list of integration account certificates.\n"
  example: []
  syntax:
    content: public static IPage<IntegrationAccountCertificate> List(this IIntegrationAccountCertificatesOperations operations, string resourceGroupName, string integrationAccountName, int ? top = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function List(operations As IIntegrationAccountCertificatesOperations, resourceGroupName As String, integrationAccountName As String, top As Integer? = Nothing) As IPage(Of IntegrationAccountCertificate)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe resource group name.\n"
    - id: integrationAccountName
      type: System.String
      description: "\nThe integration account name.\n"
    - id: top
      type: System.Nullable{System.Int32}
      description: "\nThe number of items to be included in the result.\n"
    return:
      type: IPage{Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.List(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations, System.String, System.String, System.Nullable(Of System.Int32))
  name.vb: List(IIntegrationAccountCertificatesOperations, String, String, Nullable(Of Int32))
- uid: Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.ListAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.ListAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)
  id: ListAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListAsync(IIntegrationAccountCertificatesOperations, String, String, Nullable<Int32>, CancellationToken)
  fullName: Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.ListAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations, System.String, System.String, System.Nullable<System.Int32>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountCertificatesOperationsExtensions.cs
      branch: dbdfdd2b281cd5337e1672d46674f4565e116b65
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListAsync
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountCertificatesOperationsExtensions.cs
    startLine: 62
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nGets a list of integration account certificates.\n"
  example: []
  syntax:
    content: public static Task<IPage<IntegrationAccountCertificate>> ListAsync(this IIntegrationAccountCertificatesOperations operations, string resourceGroupName, string integrationAccountName, int ? top = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListAsync(operations As IIntegrationAccountCertificatesOperations, resourceGroupName As String, integrationAccountName As String, top As Integer? = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IPage(Of IntegrationAccountCertificate))
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe resource group name.\n"
    - id: integrationAccountName
      type: System.String
      description: "\nThe integration account name.\n"
    - id: top
      type: System.Nullable{System.Int32}
      description: "\nThe number of items to be included in the result.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{IPage{Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate}}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.ListAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations, System.String, System.String, System.Nullable(Of System.Int32), System.Threading.CancellationToken)
  name.vb: ListAsync(IIntegrationAccountCertificatesOperations, String, String, Nullable(Of Int32), CancellationToken)
- uid: Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.Get(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.Get(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String,System.String,System.String)
  id: Get(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions
  langs:
  - csharp
  - vb
  name: Get(IIntegrationAccountCertificatesOperations, String, String, String)
  fullName: Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.Get(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountCertificatesOperationsExtensions.cs
      branch: dbdfdd2b281cd5337e1672d46674f4565e116b65
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Get
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountCertificatesOperationsExtensions.cs
    startLine: 85
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nGets an integration account certificate.\n"
  example: []
  syntax:
    content: public static IntegrationAccountCertificate Get(this IIntegrationAccountCertificatesOperations operations, string resourceGroupName, string integrationAccountName, string certificateName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Get(operations As IIntegrationAccountCertificatesOperations, resourceGroupName As String, integrationAccountName As String, certificateName As String) As IntegrationAccountCertificate
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe resource group name.\n"
    - id: integrationAccountName
      type: System.String
      description: "\nThe integration account name.\n"
    - id: certificateName
      type: System.String
      description: "\nThe integration account certificate name.\n"
    return:
      type: Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.GetAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.GetAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: GetAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetAsync(IIntegrationAccountCertificatesOperations, String, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.GetAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations, System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountCertificatesOperationsExtensions.cs
      branch: dbdfdd2b281cd5337e1672d46674f4565e116b65
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetAsync
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountCertificatesOperationsExtensions.cs
    startLine: 108
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nGets an integration account certificate.\n"
  example: []
  syntax:
    content: public static Task<IntegrationAccountCertificate> GetAsync(this IIntegrationAccountCertificatesOperations operations, string resourceGroupName, string integrationAccountName, string certificateName, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAsync(operations As IIntegrationAccountCertificatesOperations, resourceGroupName As String, integrationAccountName As String, certificateName As String, cancellationToken As CancellationToken = Nothing) As Task(Of IntegrationAccountCertificate)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe resource group name.\n"
    - id: integrationAccountName
      type: System.String
      description: "\nThe integration account name.\n"
    - id: certificateName
      type: System.String
      description: "\nThe integration account certificate name.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate)
  commentId: M:Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate)
  id: CreateOrUpdate(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateOrUpdate(IIntegrationAccountCertificatesOperations, String, String, String, IntegrationAccountCertificate)
  fullName: Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations, System.String, System.String, System.String, Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountCertificatesOperationsExtensions.cs
      branch: dbdfdd2b281cd5337e1672d46674f4565e116b65
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateOrUpdate
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountCertificatesOperationsExtensions.cs
    startLine: 134
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nCreates or updates an integration account certificate.\n"
  example: []
  syntax:
    content: public static IntegrationAccountCertificate CreateOrUpdate(this IIntegrationAccountCertificatesOperations operations, string resourceGroupName, string integrationAccountName, string certificateName, IntegrationAccountCertificate certificate)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateOrUpdate(operations As IIntegrationAccountCertificatesOperations, resourceGroupName As String, integrationAccountName As String, certificateName As String, certificate As IntegrationAccountCertificate) As IntegrationAccountCertificate
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe resource group name.\n"
    - id: integrationAccountName
      type: System.String
      description: "\nThe integration account name.\n"
    - id: certificateName
      type: System.String
      description: "\nThe integration account certificate name.\n"
    - id: certificate
      type: Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate
      description: "\nThe integration account certificate.\n"
    return:
      type: Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate,System.Threading.CancellationToken)
  id: CreateOrUpdateAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateOrUpdateAsync(IIntegrationAccountCertificatesOperations, String, String, String, IntegrationAccountCertificate, CancellationToken)
  fullName: Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations, System.String, System.String, System.String, Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountCertificatesOperationsExtensions.cs
      branch: dbdfdd2b281cd5337e1672d46674f4565e116b65
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateOrUpdateAsync
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountCertificatesOperationsExtensions.cs
    startLine: 160
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nCreates or updates an integration account certificate.\n"
  example: []
  syntax:
    content: public static Task<IntegrationAccountCertificate> CreateOrUpdateAsync(this IIntegrationAccountCertificatesOperations operations, string resourceGroupName, string integrationAccountName, string certificateName, IntegrationAccountCertificate certificate, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateOrUpdateAsync(operations As IIntegrationAccountCertificatesOperations, resourceGroupName As String, integrationAccountName As String, certificateName As String, certificate As IntegrationAccountCertificate, cancellationToken As CancellationToken = Nothing) As Task(Of IntegrationAccountCertificate)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe resource group name.\n"
    - id: integrationAccountName
      type: System.String
      description: "\nThe integration account name.\n"
    - id: certificateName
      type: System.String
      description: "\nThe integration account certificate name.\n"
    - id: certificate
      type: Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate
      description: "\nThe integration account certificate.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.Delete(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.Delete(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String,System.String,System.String)
  id: Delete(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions
  langs:
  - csharp
  - vb
  name: Delete(IIntegrationAccountCertificatesOperations, String, String, String)
  fullName: Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.Delete(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountCertificatesOperationsExtensions.cs
      branch: dbdfdd2b281cd5337e1672d46674f4565e116b65
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Delete
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountCertificatesOperationsExtensions.cs
    startLine: 183
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nDeletes an integration account certificate.\n"
  example: []
  syntax:
    content: public static void Delete(this IIntegrationAccountCertificatesOperations operations, string resourceGroupName, string integrationAccountName, string certificateName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Delete(operations As IIntegrationAccountCertificatesOperations, resourceGroupName As String, integrationAccountName As String, certificateName As String)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe resource group name.\n"
    - id: integrationAccountName
      type: System.String
      description: "\nThe integration account name.\n"
    - id: certificateName
      type: System.String
      description: "\nThe integration account certificate name.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: DeleteAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions
  langs:
  - csharp
  - vb
  name: DeleteAsync(IIntegrationAccountCertificatesOperations, String, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations, System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountCertificatesOperationsExtensions.cs
      branch: dbdfdd2b281cd5337e1672d46674f4565e116b65
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeleteAsync
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountCertificatesOperationsExtensions.cs
    startLine: 206
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nDeletes an integration account certificate.\n"
  example: []
  syntax:
    content: public static Task DeleteAsync(this IIntegrationAccountCertificatesOperations operations, string resourceGroupName, string integrationAccountName, string certificateName, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteAsync(operations As IIntegrationAccountCertificatesOperations, resourceGroupName As String, integrationAccountName As String, certificateName As String, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe resource group name.\n"
    - id: integrationAccountName
      type: System.String
      description: "\nThe integration account name.\n"
    - id: certificateName
      type: System.String
      description: "\nThe integration account certificate name.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.ListNext(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String)
  commentId: M:Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.ListNext(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String)
  id: ListNext(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListNext(IIntegrationAccountCertificatesOperations, String)
  fullName: Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.ListNext(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountCertificatesOperationsExtensions.cs
      branch: dbdfdd2b281cd5337e1672d46674f4565e116b65
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListNext
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountCertificatesOperationsExtensions.cs
    startLine: 220
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nGets a list of integration account certificates.\n"
  example: []
  syntax:
    content: public static IPage<IntegrationAccountCertificate> ListNext(this IIntegrationAccountCertificatesOperations operations, string nextPageLink)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListNext(operations As IIntegrationAccountCertificatesOperations, nextPageLink As String) As IPage(Of IntegrationAccountCertificate)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    return:
      type: IPage{Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String,System.Threading.CancellationToken)
  id: ListNextAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListNextAsync(IIntegrationAccountCertificatesOperations, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Logic.IntegrationAccountCertificatesOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountCertificatesOperationsExtensions.cs
      branch: dbdfdd2b281cd5337e1672d46674f4565e116b65
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListNextAsync
    path: src/ResourceManagement/Logic/Microsoft.Azure.Management.Logic/Generated/IntegrationAccountCertificatesOperationsExtensions.cs
    startLine: 237
  assemblies:
  - Microsoft.Azure.Management.Logic
  packages:
  - Microsoft.Azure.Management.Logic(1.0.0)
  namespace: Microsoft.Azure.Management.Logic
  summary: "\nGets a list of integration account certificates.\n"
  example: []
  syntax:
    content: public static Task<IPage<IntegrationAccountCertificate>> ListNextAsync(this IIntegrationAccountCertificatesOperations operations, string nextPageLink, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListNextAsync(operations As IIntegrationAccountCertificatesOperations, nextPageLink As String, cancellationToken As CancellationToken = Nothing) As Task(Of IPage(Of IntegrationAccountCertificate))
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{IPage{Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate}}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.Management.Logic
  isExternal: false
  name: Microsoft.Azure.Management.Logic
  fullName: Microsoft.Azure.Management.Logic
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations
  parent: Microsoft.Azure.Management.Logic
  isExternal: false
  name: IIntegrationAccountCertificatesOperations
  fullName: Microsoft.Azure.Management.Logic.IIntegrationAccountCertificatesOperations
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: IPage{Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate}
  definition: IPage`1
  name: IPage<IntegrationAccountCertificate>
  fullName: IPage<Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate>
  fullname.vb: IPage(Of Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate)
  name.vb: IPage(Of IntegrationAccountCertificate)
  spec.csharp:
  - uid: IPage`1
    name: IPage
    fullName: IPage
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate
    name: IntegrationAccountCertificate
    fullName: Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IPage`1
    name: IPage
    fullName: IPage
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate
    name: IntegrationAccountCertificate
    fullName: Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: IPage`1
  isExternal: true
  name: IPage<>
  fullName: IPage<>
  fullname.vb: IPage(Of )
  name.vb: IPage(Of )
  spec.csharp:
  - uid: IPage`1
    name: IPage
    fullName: IPage
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IPage`1
    name: IPage
    fullName: IPage
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{IPage{Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IPage<IntegrationAccountCertificate>>
  fullName: System.Threading.Tasks.Task<IPage<Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate>>
  fullname.vb: System.Threading.Tasks.Task(Of IPage(Of Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate))
  name.vb: Task(Of IPage(Of IntegrationAccountCertificate))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: IPage`1
    name: IPage
    fullName: IPage
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate
    name: IntegrationAccountCertificate
    fullName: Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: IPage`1
    name: IPage
    fullName: IPage
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate
    name: IntegrationAccountCertificate
    fullName: Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate
  parent: Microsoft.Azure.Management.Logic.Models
  isExternal: false
  name: IntegrationAccountCertificate
  fullName: Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate
- uid: Microsoft.Azure.Management.Logic.Models
  isExternal: false
  name: Microsoft.Azure.Management.Logic.Models
  fullName: Microsoft.Azure.Management.Logic.Models
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IntegrationAccountCertificate>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate)
  name.vb: Task(Of IntegrationAccountCertificate)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate
    name: IntegrationAccountCertificate
    fullName: Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate
    name: IntegrationAccountCertificate
    fullName: Microsoft.Azure.Management.Logic.Models.IntegrationAccountCertificate
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  fullName: System.Threading.Tasks.Task
