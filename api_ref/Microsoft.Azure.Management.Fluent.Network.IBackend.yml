items:
- uid: Microsoft.Azure.Management.Fluent.Network.IBackend
  commentId: T:Microsoft.Azure.Management.Fluent.Network.IBackend
  id: IBackend
  parent: Microsoft.Azure.Management.Fluent.Network
  children:
  - Microsoft.Azure.Management.Fluent.Network.IBackend.BackendNicIpConfigurationNames
  - Microsoft.Azure.Management.Fluent.Network.IBackend.GetVirtualMachineIds
  langs:
  - csharp
  - vb
  name: IBackend
  fullName: Microsoft.Azure.Management.Fluent.Network.IBackend
  type: Interface
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/IBackend.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IBackend
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/IBackend.cs
    startLine: 11
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  summary: "\nAn immutable client-side representation of an load balancer's backend address pool.\n"
  example: []
  syntax:
    content: 'public interface IBackend : IWrapper<BackendAddressPoolInner>, IChildResource<ILoadBalancer>, IHasLoadBalancingRules'
    content.vb: >-
      Public Interface IBackend
          Inherits IWrapper(Of BackendAddressPoolInner), IChildResource(Of ILoadBalancer), IHasLoadBalancingRules
  inheritedMembers:
  - Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules.LoadBalancingRules
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Azure.Management.Fluent.Network.IBackend.BackendNicIpConfigurationNames
  commentId: P:Microsoft.Azure.Management.Fluent.Network.IBackend.BackendNicIpConfigurationNames
  id: BackendNicIpConfigurationNames
  parent: Microsoft.Azure.Management.Fluent.Network.IBackend
  langs:
  - csharp
  - vb
  name: BackendNicIpConfigurationNames
  fullName: Microsoft.Azure.Management.Fluent.Network.IBackend.BackendNicIpConfigurationNames
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/IBackend.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BackendNicIpConfigurationNames
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/IBackend.cs
    startLine: 18
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: IDictionary<string, string> BackendNicIpConfigurationNames { get; }
    content.vb: ReadOnly Property BackendNicIpConfigurationNames As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: a map of names of the IP configurations of network interfaces assigned to this backend,
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Fluent.Network.IBackend.GetVirtualMachineIds
  commentId: M:Microsoft.Azure.Management.Fluent.Network.IBackend.GetVirtualMachineIds
  id: GetVirtualMachineIds
  parent: Microsoft.Azure.Management.Fluent.Network.IBackend
  langs:
  - csharp
  - vb
  name: GetVirtualMachineIds()
  fullName: Microsoft.Azure.Management.Fluent.Network.IBackend.GetVirtualMachineIds()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/IBackend.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetVirtualMachineIds
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/IBackend.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network
  example: []
  syntax:
    content: ISet<string> GetVirtualMachineIds()
    content.vb: Function GetVirtualMachineIds As ISet(Of String)
    return:
      type: System.Collections.Generic.ISet{System.String}
      description: a list of the resource IDs of the virtual machines associated with this backend
references:
- uid: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network
  fullName: Microsoft.Azure.Management.Fluent.Network
- uid: Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules.LoadBalancingRules
  parent: Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules
  isExternal: false
  name: LoadBalancingRules()
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules.LoadBalancingRules()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules.LoadBalancingRules
    name: LoadBalancingRules
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules.LoadBalancingRules
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules.LoadBalancingRules
    name: LoadBalancingRules
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules.LoadBalancingRules
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules
  parent: Microsoft.Azure.Management.Fluent.Network
  isExternal: false
  name: IHasLoadBalancingRules
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasLoadBalancingRules
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.ISet{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ISet`1
  name: ISet<String>
  fullName: System.Collections.Generic.ISet<System.String>
  fullname.vb: System.Collections.Generic.ISet(Of System.String)
  name.vb: ISet(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.ISet`1
  parent: System.Collections.Generic
  isExternal: true
  name: ISet<T>
  fullName: System.Collections.Generic.ISet<T>
  fullname.vb: System.Collections.Generic.ISet(Of T)
  name.vb: ISet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
