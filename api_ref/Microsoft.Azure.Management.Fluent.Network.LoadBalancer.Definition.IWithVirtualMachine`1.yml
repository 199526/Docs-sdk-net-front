items:
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine`1
  commentId: T:Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine`1
  id: IWithVirtualMachine`1
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
  children:
  - Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine`1.WithExistingVirtualMachines(Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces[])
  langs:
  - csharp
  - vb
  name: IWithVirtualMachine<ReturnT>
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine<ReturnT>
  type: Interface
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/LoadBalancer/Definition/IDefinition.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IWithVirtualMachine
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/LoadBalancer/Definition/IDefinition.cs
    startLine: 122
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
  syntax:
    content: public interface IWithVirtualMachine<ReturnT>
    content.vb: Public Interface IWithVirtualMachine(Of ReturnT)
    typeParameters:
    - id: ReturnT
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine(Of ReturnT)
  name.vb: IWithVirtualMachine(Of ReturnT)
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine`1.WithExistingVirtualMachines(Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces[])
  commentId: M:Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine`1.WithExistingVirtualMachines(Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces[])
  id: WithExistingVirtualMachines(Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces[])
  parent: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine`1
  langs:
  - csharp
  - vb
  name: WithExistingVirtualMachines(IHasNetworkInterfaces[])
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine<ReturnT>.WithExistingVirtualMachines(Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces[])
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/LoadBalancer/Definition/IDefinition.cs
      branch: 915751bb98dc36580083db8233fb617f4c6dfd74
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WithExistingVirtualMachines
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.Fluent.Network/Domain/LoadBalancer/Definition/IDefinition.cs
    startLine: 140
  assemblies:
  - Microsoft.Azure.Management.Fluent.Network
  packages:
  - Microsoft.Azure.Management.Fluent.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
  syntax:
    content: ReturnT WithExistingVirtualMachines(params IHasNetworkInterfaces[] vms)
    content.vb: Function WithExistingVirtualMachines(ParamArray vms As IHasNetworkInterfaces()) As ReturnT
    parameters:
    - id: vms
      type: Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces[]
    return:
      type: '{ReturnT}'
  fullName.vb: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithVirtualMachine(Of ReturnT).WithExistingVirtualMachines(Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces())
  name.vb: WithExistingVirtualMachines(IHasNetworkInterfaces())
references:
- uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition
- uid: Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces[]
  isExternal: false
  name: IHasNetworkInterfaces[]
  fullName: Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces[]
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces()
  name.vb: IHasNetworkInterfaces()
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces
    name: IHasNetworkInterfaces
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces
    name: IHasNetworkInterfaces
    fullName: Microsoft.Azure.Management.Fluent.Network.IHasNetworkInterfaces
  - name: ()
    fullName: ()
- uid: '{ReturnT}'
  isExternal: false
  name: ReturnT
  fullName: ReturnT
