items:
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IBlank`1
  commentId: T:Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IBlank`1
  id: IBlank`1
  parent: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition
  children: []
  langs:
  - csharp
  - vb
  name: IBlank<ParentT>
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IBlank<ParentT>
  type: Interface
  source:
    remote:
      path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InboundNatRule/Definition/IDefinition.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IBlank
    path: src/ResourceManagement/Network/Microsoft.Azure.Management.V2.Network/Domain/InboundNatRule/Definition/IDefinition.cs
    startLine: 92
  assemblies:
  - Microsoft.Azure.Management.V2.Network
  packages:
  - Microsoft.Azure.Management.V2.Network(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition
  syntax:
    content: 'public interface IBlank<ParentT> : IWithProtocol<ParentT>, IWithProtocol<IWithFrontend<IWithCreateAndInboundNatRule>, string>'
    content.vb: >-
      Public Interface IBlank(Of ParentT)
          Inherits IWithProtocol(Of ParentT)
    typeParameters:
    - id: ParentT
  inheritedMembers:
  - Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule},System.String}.WithProtocol(System.String)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IBlank(Of ParentT)
  name.vb: IBlank(Of ParentT)
references:
- uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule},System.String}.WithProtocol(System.String)
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule},System.String}
  definition: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2.WithProtocol(`1)
  name: WithProtocol(String)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>, System.String>.WithProtocol(System.String)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule), System.String).WithProtocol(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>, System.String>.WithProtocol
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule), System.String).WithProtocol
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2.WithProtocol(`1)
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2
  isExternal: false
  name: WithProtocol(ProtocolT)
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<ReturnT, ProtocolT>.WithProtocol(ProtocolT)
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol(Of ReturnT, ProtocolT).WithProtocol(ProtocolT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<ReturnT, ProtocolT>.WithProtocol
  - name: (
    fullName: (
  - name: ProtocolT
    fullName: ProtocolT
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2.WithProtocol(`1)
    name: WithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol(Of ReturnT, ProtocolT).WithProtocol
  - name: (
    fullName: (
  - name: ProtocolT
    fullName: ProtocolT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol{Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend{Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule},System.String}
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition
  definition: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2
  name: IWithProtocol<IWithFrontend<IWithCreateAndInboundNatRule>, String>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend<Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule>, System.String>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol(Of Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend(Of Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule), System.String)
  name.vb: IWithProtocol(Of IWithFrontend(Of IWithCreateAndInboundNatRule), String)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
    name: IWithCreateAndInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend`1
    name: IWithFrontend
    fullName: Microsoft.Azure.Management.Fluent.Network.InboundNatRule.Definition.IWithFrontend
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
    name: IWithCreateAndInboundNatRule
    fullName: Microsoft.Azure.Management.Fluent.Network.LoadBalancer.Definition.IWithCreateAndInboundNatRule
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2
  parent: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition
  isExternal: false
  name: IWithProtocol<ReturnT, ProtocolT>
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol<ReturnT, ProtocolT>
  fullname.vb: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol(Of ReturnT, ProtocolT)
  name.vb: IWithProtocol(Of ReturnT, ProtocolT)
  spec.csharp:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol
  - name: <
    fullName: <
  - name: ReturnT
    fullName: ReturnT
  - name: ', '
    fullName: ', '
  - name: ProtocolT
    fullName: ProtocolT
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol`2
    name: IWithProtocol
    fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition.IWithProtocol
  - name: '(Of '
    fullName: '(Of '
  - name: ReturnT
    fullName: ReturnT
  - name: ', '
    fullName: ', '
  - name: ProtocolT
    fullName: ProtocolT
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition
  fullName: Microsoft.Azure.Management.Fluent.Network.HasProtocol.Definition
