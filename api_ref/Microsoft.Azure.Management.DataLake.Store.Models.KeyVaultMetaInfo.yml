items:
- uid: Microsoft.Azure.Management.DataLake.Store.Models.KeyVaultMetaInfo
  commentId: T:Microsoft.Azure.Management.DataLake.Store.Models.KeyVaultMetaInfo
  id: KeyVaultMetaInfo
  parent: Microsoft.Azure.Management.DataLake.Store.Models
  children:
  - Microsoft.Azure.Management.DataLake.Store.Models.KeyVaultMetaInfo.#ctor
  - Microsoft.Azure.Management.DataLake.Store.Models.KeyVaultMetaInfo.#ctor(System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.Store.Models.KeyVaultMetaInfo.EncryptionKeyName
  - Microsoft.Azure.Management.DataLake.Store.Models.KeyVaultMetaInfo.EncryptionKeyVersion
  - Microsoft.Azure.Management.DataLake.Store.Models.KeyVaultMetaInfo.KeyVaultResourceId
  langs:
  - csharp
  - vb
  name: KeyVaultMetaInfo
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.KeyVaultMetaInfo
  type: Class
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/KeyVaultMetaInfo.cs
      branch: 87a0301322eb08b0b02e4a0e0109c56cd71ca03e
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KeyVaultMetaInfo
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/KeyVaultMetaInfo.cs
    startLine: 18
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store.Models
  syntax:
    content: public class KeyVaultMetaInfo
    content.vb: Public Class KeyVaultMetaInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.DataLake.Store.Models.KeyVaultMetaInfo.#ctor
  commentId: M:Microsoft.Azure.Management.DataLake.Store.Models.KeyVaultMetaInfo.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.DataLake.Store.Models.KeyVaultMetaInfo
  langs:
  - csharp
  - vb
  name: KeyVaultMetaInfo()
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.KeyVaultMetaInfo.KeyVaultMetaInfo()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/KeyVaultMetaInfo.cs
      branch: 87a0301322eb08b0b02e4a0e0109c56cd71ca03e
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/KeyVaultMetaInfo.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store.Models
  summary: "\nInitializes a new instance of the KeyVaultMetaInfo class.\n"
  example: []
  syntax:
    content: public KeyVaultMetaInfo()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.Store.Models.KeyVaultMetaInfo.#ctor(System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.Store.Models.KeyVaultMetaInfo.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: Microsoft.Azure.Management.DataLake.Store.Models.KeyVaultMetaInfo
  langs:
  - csharp
  - vb
  name: KeyVaultMetaInfo(String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.KeyVaultMetaInfo.KeyVaultMetaInfo(System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/KeyVaultMetaInfo.cs
      branch: 87a0301322eb08b0b02e4a0e0109c56cd71ca03e
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/KeyVaultMetaInfo.cs
    startLine: 34
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store.Models
  summary: "\nInitializes a new instance of the KeyVaultMetaInfo class.\n"
  example: []
  syntax:
    content: public KeyVaultMetaInfo(string keyVaultResourceId = null, string encryptionKeyName = null, string encryptionKeyVersion = null)
    content.vb: Public Sub New(keyVaultResourceId As String = Nothing, encryptionKeyName As String = Nothing, encryptionKeyVersion As String = Nothing)
    parameters:
    - id: keyVaultResourceId
      type: System.String
      description: >-
        The resource identifier for the

        user managed Key Vault being used to encrypt.
    - id: encryptionKeyName
      type: System.String
      description: >-
        The name of the user managed

        encryption key.
    - id: encryptionKeyVersion
      type: System.String
      description: >-
        The version of the user managed

        encryption key.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.Store.Models.KeyVaultMetaInfo.KeyVaultResourceId
  commentId: P:Microsoft.Azure.Management.DataLake.Store.Models.KeyVaultMetaInfo.KeyVaultResourceId
  id: KeyVaultResourceId
  parent: Microsoft.Azure.Management.DataLake.Store.Models.KeyVaultMetaInfo
  langs:
  - csharp
  - vb
  name: KeyVaultResourceId
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.KeyVaultMetaInfo.KeyVaultResourceId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/KeyVaultMetaInfo.cs
      branch: 87a0301322eb08b0b02e4a0e0109c56cd71ca03e
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KeyVaultResourceId
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/KeyVaultMetaInfo.cs
    startLine: 45
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store.Models
  summary: "\nGets or sets the resource identifier for the user managed Key\nVault being used to encrypt.\n"
  example: []
  syntax:
    content: public string KeyVaultResourceId { get; set; }
    content.vb: Public Property KeyVaultResourceId As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.Store.Models.KeyVaultMetaInfo.EncryptionKeyName
  commentId: P:Microsoft.Azure.Management.DataLake.Store.Models.KeyVaultMetaInfo.EncryptionKeyName
  id: EncryptionKeyName
  parent: Microsoft.Azure.Management.DataLake.Store.Models.KeyVaultMetaInfo
  langs:
  - csharp
  - vb
  name: EncryptionKeyName
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.KeyVaultMetaInfo.EncryptionKeyName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/KeyVaultMetaInfo.cs
      branch: 87a0301322eb08b0b02e4a0e0109c56cd71ca03e
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EncryptionKeyName
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/KeyVaultMetaInfo.cs
    startLine: 51
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store.Models
  summary: "\nGets or sets the name of the user managed encryption key.\n"
  example: []
  syntax:
    content: public string EncryptionKeyName { get; set; }
    content.vb: Public Property EncryptionKeyName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.Store.Models.KeyVaultMetaInfo.EncryptionKeyVersion
  commentId: P:Microsoft.Azure.Management.DataLake.Store.Models.KeyVaultMetaInfo.EncryptionKeyVersion
  id: EncryptionKeyVersion
  parent: Microsoft.Azure.Management.DataLake.Store.Models.KeyVaultMetaInfo
  langs:
  - csharp
  - vb
  name: EncryptionKeyVersion
  fullName: Microsoft.Azure.Management.DataLake.Store.Models.KeyVaultMetaInfo.EncryptionKeyVersion
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/KeyVaultMetaInfo.cs
      branch: 87a0301322eb08b0b02e4a0e0109c56cd71ca03e
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EncryptionKeyVersion
    path: src/ResourceManagement/DataLake.Store/Microsoft.Azure.Management.DataLake.Store/Generated/Models/KeyVaultMetaInfo.cs
    startLine: 57
  assemblies:
  - Microsoft.Azure.Management.DataLake.Store
  packages:
  - Microsoft.Azure.Management.DataLake.Store(0.12.6-preview)
  namespace: Microsoft.Azure.Management.DataLake.Store.Models
  summary: "\nGets or sets the version of the user managed encryption key.\n"
  example: []
  syntax:
    content: public string EncryptionKeyVersion { get; set; }
    content.vb: Public Property EncryptionKeyVersion As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.DataLake.Store.Models
  isExternal: false
  name: Microsoft.Azure.Management.DataLake.Store.Models
  fullName: Microsoft.Azure.Management.DataLake.Store.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
