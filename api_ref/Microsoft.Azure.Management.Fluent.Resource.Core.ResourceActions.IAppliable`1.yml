items:
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IAppliable`1
  commentId: T:Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IAppliable`1
  id: IAppliable`1
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions
  children:
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IAppliable`1.Apply
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IAppliable`1.ApplyAsync(System.Threading.CancellationToken,System.Boolean)
  langs:
  - csharp
  - vb
  name: IAppliable<T>
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IAppliable<T>
  type: Interface
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Domain/Core/ResourceActions/IAppliable.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IAppliable
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Domain/Core/ResourceActions/IAppliable.cs
    startLine: 15
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions
  syntax:
    content: 'public interface IAppliable<T> : IIndexable'
    content.vb: >-
      Public Interface IAppliable(Of T)
          Inherits IIndexable
    typeParameters:
    - id: T
  inheritedMembers:
  - Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IIndexable.Key
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IAppliable(Of T)
  name.vb: IAppliable(Of T)
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IAppliable`1.Apply
  commentId: M:Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IAppliable`1.Apply
  id: Apply
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IAppliable`1
  langs:
  - csharp
  - vb
  name: Apply()
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IAppliable<T>.Apply()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Domain/Core/ResourceActions/IAppliable.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Apply
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Domain/Core/ResourceActions/IAppliable.cs
    startLine: 22
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions
  summary: "\nExecute the update request.\n"
  example: []
  syntax:
    content: T Apply()
    content.vb: Function Apply As T
    return:
      type: '{T}'
      description: the updated resource
  fullName.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IAppliable(Of T).Apply()
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IAppliable`1.ApplyAsync(System.Threading.CancellationToken,System.Boolean)
  commentId: M:Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IAppliable`1.ApplyAsync(System.Threading.CancellationToken,System.Boolean)
  id: ApplyAsync(System.Threading.CancellationToken,System.Boolean)
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IAppliable`1
  langs:
  - csharp
  - vb
  name: ApplyAsync(CancellationToken, Boolean)
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IAppliable<T>.ApplyAsync(System.Threading.CancellationToken, System.Boolean)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Domain/Core/ResourceActions/IAppliable.cs
      branch: cb21ee0d08ee5a39fa8567afda7ff75bd7973cda
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ApplyAsync
    path: src/ResourceManagement/Resource/Microsoft.Azure.Management.V2.Resource/Domain/Core/ResourceActions/IAppliable.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Management.V2.Resource
  packages:
  - Microsoft.Azure.Management.V2.Resource(0.0.1-prerelease)
  namespace: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions
  summary: "\nExecute the update request asynchronously.\n"
  example: []
  syntax:
    content: Task<T> ApplyAsync(CancellationToken cancellationToken = null, bool multiThreaded = true)
    content.vb: Function ApplyAsync(cancellationToken As CancellationToken = Nothing, multiThreaded As Boolean = True) As Task(Of T)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: cancellationToken the cancellation token
    - id: multiThreaded
      type: System.Boolean
      description: multiThreaded use mutli-threading
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: the handle to the REST call
  fullName.vb: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IAppliable(Of T).ApplyAsync(System.Threading.CancellationToken, System.Boolean)
references:
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions
  isExternal: false
  name: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IIndexable.Key
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IIndexable
  isExternal: false
  name: Key
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IIndexable.Key
- uid: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IIndexable
  parent: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions
  isExternal: false
  name: IIndexable
  fullName: Microsoft.Azure.Management.Fluent.Resource.Core.ResourceActions.IIndexable
- uid: '{T}'
  isExternal: false
  name: T
  fullName: T
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.Threading.Tasks.Task{{T}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  fullname.vb: System.Threading.Tasks.Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
