### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.RetryDefaultConstants
  commentId: T:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.RetryDefaultConstants
  id: RetryDefaultConstants
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries
  children:
  - Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.RetryDefaultConstants.DefaultBackOff
  - Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.RetryDefaultConstants.DefaultMaxBackOff
  - Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.RetryDefaultConstants.DefaultMinBackOff
  - Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.RetryDefaultConstants.DefaultOperationTimeout
  - Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.RetryDefaultConstants.DefaultRandomizationQuotient
  - Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.RetryDefaultConstants.DefaultRetryCount
  langs:
  - csharp
  - vb
  name: RetryDefaultConstants
  nameWithType: RetryDefaultConstants
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.RetryDefaultConstants
  type: Class
  source:
    remote:
      path: src/ServiceManagement/HDInsight/Microsoft.WindowsAzure.Management.HDInsight.Framework.Core/Retries/RetryDefaultConstants.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RetryDefaultConstants
    path: src/ServiceManagement/HDInsight/Microsoft.WindowsAzure.Management.HDInsight.Framework.Core/Retries/RetryDefaultConstants.cs
    startLine: 10
  assemblies:
  - Microsoft.WindowsAzure.Management.HDInsight.Framework.Core
  namespace: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries
  summary: "\nDefines constants for retries.\n"
  example: []
  syntax:
    content: public static class RetryDefaultConstants
    content.vb: Public Module RetryDefaultConstants
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.RetryDefaultConstants.DefaultMinBackOff
  commentId: F:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.RetryDefaultConstants.DefaultMinBackOff
  id: DefaultMinBackOff
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.RetryDefaultConstants
  langs:
  - csharp
  - vb
  name: DefaultMinBackOff
  nameWithType: RetryDefaultConstants.DefaultMinBackOff
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.RetryDefaultConstants.DefaultMinBackOff
  type: Field
  source:
    remote:
      path: src/ServiceManagement/HDInsight/Microsoft.WindowsAzure.Management.HDInsight.Framework.Core/Retries/RetryDefaultConstants.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DefaultMinBackOff
    path: src/ServiceManagement/HDInsight/Microsoft.WindowsAzure.Management.HDInsight.Framework.Core/Retries/RetryDefaultConstants.cs
    startLine: 15
  assemblies:
  - Microsoft.WindowsAzure.Management.HDInsight.Framework.Core
  namespace: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries
  summary: "\nDefault minimum permissible value for exponential backoff.\n"
  example: []
  syntax:
    content: public static readonly TimeSpan DefaultMinBackOff
    content.vb: Public Shared ReadOnly DefaultMinBackOff As TimeSpan
    return:
      type: System.TimeSpan
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.RetryDefaultConstants.DefaultMaxBackOff
  commentId: F:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.RetryDefaultConstants.DefaultMaxBackOff
  id: DefaultMaxBackOff
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.RetryDefaultConstants
  langs:
  - csharp
  - vb
  name: DefaultMaxBackOff
  nameWithType: RetryDefaultConstants.DefaultMaxBackOff
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.RetryDefaultConstants.DefaultMaxBackOff
  type: Field
  source:
    remote:
      path: src/ServiceManagement/HDInsight/Microsoft.WindowsAzure.Management.HDInsight.Framework.Core/Retries/RetryDefaultConstants.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DefaultMaxBackOff
    path: src/ServiceManagement/HDInsight/Microsoft.WindowsAzure.Management.HDInsight.Framework.Core/Retries/RetryDefaultConstants.cs
    startLine: 20
  assemblies:
  - Microsoft.WindowsAzure.Management.HDInsight.Framework.Core
  namespace: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries
  summary: "\nDefault maximum permissible value for exponential backoff. \n"
  example: []
  syntax:
    content: public static readonly TimeSpan DefaultMaxBackOff
    content.vb: Public Shared ReadOnly DefaultMaxBackOff As TimeSpan
    return:
      type: System.TimeSpan
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.RetryDefaultConstants.DefaultRetryCount
  commentId: F:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.RetryDefaultConstants.DefaultRetryCount
  id: DefaultRetryCount
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.RetryDefaultConstants
  langs:
  - csharp
  - vb
  name: DefaultRetryCount
  nameWithType: RetryDefaultConstants.DefaultRetryCount
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.RetryDefaultConstants.DefaultRetryCount
  type: Field
  source:
    remote:
      path: src/ServiceManagement/HDInsight/Microsoft.WindowsAzure.Management.HDInsight.Framework.Core/Retries/RetryDefaultConstants.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DefaultRetryCount
    path: src/ServiceManagement/HDInsight/Microsoft.WindowsAzure.Management.HDInsight.Framework.Core/Retries/RetryDefaultConstants.cs
    startLine: 25
  assemblies:
  - Microsoft.WindowsAzure.Management.HDInsight.Framework.Core
  namespace: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries
  summary: "\nDefault Retry count. Currently set to 5.\n"
  example: []
  syntax:
    content: public const int DefaultRetryCount = 5
    content.vb: Public Const DefaultRetryCount As Integer = 5
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.RetryDefaultConstants.DefaultBackOff
  commentId: F:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.RetryDefaultConstants.DefaultBackOff
  id: DefaultBackOff
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.RetryDefaultConstants
  langs:
  - csharp
  - vb
  name: DefaultBackOff
  nameWithType: RetryDefaultConstants.DefaultBackOff
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.RetryDefaultConstants.DefaultBackOff
  type: Field
  source:
    remote:
      path: src/ServiceManagement/HDInsight/Microsoft.WindowsAzure.Management.HDInsight.Framework.Core/Retries/RetryDefaultConstants.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DefaultBackOff
    path: src/ServiceManagement/HDInsight/Microsoft.WindowsAzure.Management.HDInsight.Framework.Core/Retries/RetryDefaultConstants.cs
    startLine: 30
  assemblies:
  - Microsoft.WindowsAzure.Management.HDInsight.Framework.Core
  namespace: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries
  summary: "\nDefault backoff value 30 seconds.\n"
  example: []
  syntax:
    content: public static readonly TimeSpan DefaultBackOff
    content.vb: Public Shared ReadOnly DefaultBackOff As TimeSpan
    return:
      type: System.TimeSpan
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.RetryDefaultConstants.DefaultRandomizationQuotient
  commentId: F:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.RetryDefaultConstants.DefaultRandomizationQuotient
  id: DefaultRandomizationQuotient
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.RetryDefaultConstants
  langs:
  - csharp
  - vb
  name: DefaultRandomizationQuotient
  nameWithType: RetryDefaultConstants.DefaultRandomizationQuotient
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.RetryDefaultConstants.DefaultRandomizationQuotient
  type: Field
  source:
    remote:
      path: src/ServiceManagement/HDInsight/Microsoft.WindowsAzure.Management.HDInsight.Framework.Core/Retries/RetryDefaultConstants.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DefaultRandomizationQuotient
    path: src/ServiceManagement/HDInsight/Microsoft.WindowsAzure.Management.HDInsight.Framework.Core/Retries/RetryDefaultConstants.cs
    startLine: 35
  assemblies:
  - Microsoft.WindowsAzure.Management.HDInsight.Framework.Core
  namespace: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries
  summary: "\nDefault percentage error to introduce in the randomized exponential backoff scheme.\n"
  example: []
  syntax:
    content: public const double DefaultRandomizationQuotient = 0.2
    content.vb: Public Const DefaultRandomizationQuotient As Double = 0.2
    return:
      type: System.Double
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.RetryDefaultConstants.DefaultOperationTimeout
  commentId: F:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.RetryDefaultConstants.DefaultOperationTimeout
  id: DefaultOperationTimeout
  parent: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.RetryDefaultConstants
  langs:
  - csharp
  - vb
  name: DefaultOperationTimeout
  nameWithType: RetryDefaultConstants.DefaultOperationTimeout
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries.RetryDefaultConstants.DefaultOperationTimeout
  type: Field
  source:
    remote:
      path: src/ServiceManagement/HDInsight/Microsoft.WindowsAzure.Management.HDInsight.Framework.Core/Retries/RetryDefaultConstants.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DefaultOperationTimeout
    path: src/ServiceManagement/HDInsight/Microsoft.WindowsAzure.Management.HDInsight.Framework.Core/Retries/RetryDefaultConstants.cs
    startLine: 40
  assemblies:
  - Microsoft.WindowsAzure.Management.HDInsight.Framework.Core
  namespace: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries
  summary: "\nThe HTTP operation timeout.\n"
  example: []
  syntax:
    content: public static readonly TimeSpan DefaultOperationTimeout
    content.vb: Public Shared ReadOnly DefaultOperationTimeout As TimeSpan
    return:
      type: System.TimeSpan
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries
  commentId: N:Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries
  isExternal: false
  name: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries
  nameWithType: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries
  fullName: Microsoft.WindowsAzure.Management.HDInsight.Framework.Core.Retries
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
