items:
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenClaim
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenClaim
  id: TokenClaim
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  children:
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenClaim.#ctor(System.String,System.String)
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenClaim.ClaimType
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenClaim.ClaimValue
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenClaim.ContentKeyIdentifierClaim
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenClaim.ContentKeyIdentifierClaimType
  langs:
  - csharp
  - vb
  name: TokenClaim
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenClaim
  type: Class
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/TokenClaim.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: TokenClaim
    path: src/net/Client/ContentKeyAuthorization/Templates/TokenClaim.cs
    startLine: 22
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  syntax:
    content: >-
      [DataContract(Namespace = "http://schemas.microsoft.com/Azure/MediaServices/KeyDelivery/TokenRestrictionTemplate/v1")]

      public class TokenClaim
    content.vb: >-
      <DataContract(Namespace:="http://schemas.microsoft.com/Azure/MediaServices/KeyDelivery/TokenRestrictionTemplate/v1")>

      Public Class TokenClaim
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Namespace
      type: System.String
      value: http://schemas.microsoft.com/Azure/MediaServices/KeyDelivery/TokenRestrictionTemplate/v1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenClaim.ContentKeyIdentifierClaimType
  commentId: F:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenClaim.ContentKeyIdentifierClaimType
  id: ContentKeyIdentifierClaimType
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenClaim
  langs:
  - csharp
  - vb
  name: ContentKeyIdentifierClaimType
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenClaim.ContentKeyIdentifierClaimType
  type: Field
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/TokenClaim.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ContentKeyIdentifierClaimType
    path: src/net/Client/ContentKeyAuthorization/Templates/TokenClaim.cs
    startLine: 28
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  summary: "\nThe claim type for the ContentKeyIdentifierClaim.\n"
  example: []
  syntax:
    content: public static readonly string ContentKeyIdentifierClaimType
    content.vb: Public Shared ReadOnly ContentKeyIdentifierClaimType As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenClaim.ContentKeyIdentifierClaim
  commentId: F:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenClaim.ContentKeyIdentifierClaim
  id: ContentKeyIdentifierClaim
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenClaim
  langs:
  - csharp
  - vb
  name: ContentKeyIdentifierClaim
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenClaim.ContentKeyIdentifierClaim
  type: Field
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/TokenClaim.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ContentKeyIdentifierClaim
    path: src/net/Client/ContentKeyAuthorization/Templates/TokenClaim.cs
    startLine: 34
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  summary: "\nThis claim requires that the value of the claim in the token must match the key identifier of the key being requested by the client.\nAdding this claim means that the token issued to the client authorizes access to the content key identifier listed in the token.\n"
  example: []
  syntax:
    content: public static readonly TokenClaim ContentKeyIdentifierClaim
    content.vb: Public Shared ReadOnly ContentKeyIdentifierClaim As TokenClaim
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenClaim
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenClaim.#ctor(System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenClaim.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenClaim
  langs:
  - csharp
  - vb
  name: TokenClaim(String, String)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenClaim.TokenClaim(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/TokenClaim.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: .ctor
    path: src/net/Client/ContentKeyAuthorization/Templates/TokenClaim.cs
    startLine: 36
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  syntax:
    content: public TokenClaim(string claimType, string claimValue)
    content.vb: Public Sub New(claimType As String, claimValue As String)
    parameters:
    - id: claimType
      type: System.String
    - id: claimValue
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenClaim.ClaimType
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenClaim.ClaimType
  id: ClaimType
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenClaim
  langs:
  - csharp
  - vb
  name: ClaimType
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenClaim.ClaimType
  type: Property
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/TokenClaim.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ClaimType
    path: src/net/Client/ContentKeyAuthorization/Templates/TokenClaim.cs
    startLine: 50
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  summary: "\nType of the Claim in the Token\n"
  example: []
  syntax:
    content: >-
      [DataMember(IsRequired = true)]

      public string ClaimType { get; }
    content.vb: >-
      <DataMember(IsRequired:=True)>

      Public ReadOnly Property ClaimType As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: IsRequired
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenClaim.ClaimValue
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenClaim.ClaimValue
  id: ClaimValue
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenClaim
  langs:
  - csharp
  - vb
  name: ClaimValue
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenClaim.ClaimValue
  type: Property
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/TokenClaim.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ClaimValue
    path: src/net/Client/ContentKeyAuthorization/Templates/TokenClaim.cs
    startLine: 56
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  summary: "\nValue of the Claim in Token\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public string ClaimValue { get; }
    content.vb: >-
      <DataMember>

      Public ReadOnly Property ClaimValue As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  isExternal: false
  name: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenClaim
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  isExternal: false
  name: TokenClaim
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenClaim
