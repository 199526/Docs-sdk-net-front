items:
- uid: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest
  id: IIngestManifest
  parent: Microsoft.WindowsAzure.MediaServices.Client
  children:
  - Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.BlobStorageUriForUpload
  - Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.Created
  - Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.Delete
  - Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.DeleteAsync
  - Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.EncryptFiles(System.String)
  - Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.EncryptFiles(System.String,System.Boolean)
  - Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.EncryptFilesAsync(System.String,System.Boolean,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.EncryptFilesAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.Id
  - Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.IngestManifestAssets
  - Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.LastModified
  - Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.Name
  - Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.State
  - Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.Statistics
  - Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.StorageAccount
  - Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.StorageAccountName
  - Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.Update
  - Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.UpdateAsync
  langs:
  - csharp
  - vb
  name: IIngestManifest
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest
  type: Interface
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: IIngestManifest
    path: src/net/Client/Entities/ApiClasses.cs
    startLine: 590
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nRepresents bulk ingest manifest\n"
  example: []
  syntax:
    content: public interface IIngestManifest
    content.vb: Public Interface IIngestManifest
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.IngestManifestAssets
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.IngestManifestAssets
  id: IngestManifestAssets
  parent: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest
  langs:
  - csharp
  - vb
  name: IngestManifestAssets
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.IngestManifestAssets
  type: Property
  source:
    remote:
      path: src/net/Client/BulkIngest/IIngestManifest.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: IngestManifestAssets
    path: src/net/Client/BulkIngest/IIngestManifest.cs
    startLine: 29
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets the manifest assets.\n"
  example: []
  syntax:
    content: IngestManifestAssetCollection IngestManifestAssets { get; }
    content.vb: ReadOnly Property IngestManifestAssets As IngestManifestAssetCollection
    parameters: []
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.IngestManifestAssetCollection
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.Delete
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.Delete
  id: Delete
  parent: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest
  langs:
  - csharp
  - vb
  name: Delete()
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.Delete()
  type: Method
  source:
    remote:
      path: src/net/Client/BulkIngest/IIngestManifest.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Delete
    path: src/net/Client/BulkIngest/IIngestManifest.cs
    startLine: 34
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nDeletes manifest\n"
  example: []
  syntax:
    content: void Delete()
    content.vb: Sub Delete
- uid: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.DeleteAsync
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.DeleteAsync
  id: DeleteAsync
  parent: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest
  langs:
  - csharp
  - vb
  name: DeleteAsync()
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.DeleteAsync()
  type: Method
  source:
    remote:
      path: src/net/Client/BulkIngest/IIngestManifest.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: DeleteAsync
    path: src/net/Client/BulkIngest/IIngestManifest.cs
    startLine: 40
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nDeletes manifest asyncroniously.\n"
  example: []
  syntax:
    content: Task DeleteAsync()
    content.vb: Function DeleteAsync As Task
    return:
      type: System.Threading.Tasks.Task
      description: <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref>
- uid: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.EncryptFilesAsync(System.String,System.Boolean,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.EncryptFilesAsync(System.String,System.Boolean,System.Threading.CancellationToken)
  id: EncryptFilesAsync(System.String,System.Boolean,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest
  langs:
  - csharp
  - vb
  name: EncryptFilesAsync(String, Boolean, CancellationToken)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.EncryptFilesAsync(System.String, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/net/Client/BulkIngest/IIngestManifest.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: EncryptFilesAsync
    path: src/net/Client/BulkIngest/IIngestManifest.cs
    startLine: 49
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nEncrypts manifest files asyncroniously.\n"
  example: []
  syntax:
    content: Task EncryptFilesAsync(string outputPath, bool overwriteExistingEncryptedFiles, CancellationToken cancellationToken)
    content.vb: Function EncryptFilesAsync(outputPath As String, overwriteExistingEncryptedFiles As Boolean, cancellationToken As CancellationToken) As Task
    parameters:
    - id: outputPath
      type: System.String
      description: The output path where all encrypted files will be located.
    - id: overwriteExistingEncryptedFiles
      type: System.Boolean
      description: if set to <code>true</code> method will override files in ouput folder.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref>
    return:
      type: System.Threading.Tasks.Task
      description: <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref>
- uid: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.EncryptFilesAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.EncryptFilesAsync(System.String,System.Threading.CancellationToken)
  id: EncryptFilesAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest
  langs:
  - csharp
  - vb
  name: EncryptFilesAsync(String, CancellationToken)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.EncryptFilesAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/net/Client/BulkIngest/IIngestManifest.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: EncryptFilesAsync
    path: src/net/Client/BulkIngest/IIngestManifest.cs
    startLine: 57
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nEncrypts all newly added manifest files asyncroniously. All files will be overriden if output folder has files with same names \n"
  example: []
  syntax:
    content: Task EncryptFilesAsync(string outputPath, CancellationToken token)
    content.vb: Function EncryptFilesAsync(outputPath As String, token As CancellationToken) As Task
    parameters:
    - id: outputPath
      type: System.String
      description: The output path.
    - id: token
      type: System.Threading.CancellationToken
      description: <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref>
    return:
      type: System.Threading.Tasks.Task
      description: <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref>
- uid: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.EncryptFiles(System.String,System.Boolean)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.EncryptFiles(System.String,System.Boolean)
  id: EncryptFiles(System.String,System.Boolean)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest
  langs:
  - csharp
  - vb
  name: EncryptFiles(String, Boolean)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.EncryptFiles(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/net/Client/BulkIngest/IIngestManifest.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: EncryptFiles
    path: src/net/Client/BulkIngest/IIngestManifest.cs
    startLine: 64
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nEncrypts manifest files.\n"
  example: []
  syntax:
    content: void EncryptFiles(string outputPath, bool overrideExistingEncryptedFiles)
    content.vb: Sub EncryptFiles(outputPath As String, overrideExistingEncryptedFiles As Boolean)
    parameters:
    - id: outputPath
      type: System.String
      description: The output path where all encrypted files will be located.
    - id: overrideExistingEncryptedFiles
      type: System.Boolean
      description: if set to <code>true</code> method will override files in ouput folder.
- uid: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.EncryptFiles(System.String)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.EncryptFiles(System.String)
  id: EncryptFiles(System.String)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest
  langs:
  - csharp
  - vb
  name: EncryptFiles(String)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.EncryptFiles(System.String)
  type: Method
  source:
    remote:
      path: src/net/Client/BulkIngest/IIngestManifest.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: EncryptFiles
    path: src/net/Client/BulkIngest/IIngestManifest.cs
    startLine: 70
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nEncrypts all newly added manifest files. All files will be overriden if output folder has files with same names \n"
  example: []
  syntax:
    content: void EncryptFiles(string outputPath)
    content.vb: Sub EncryptFiles(outputPath As String)
    parameters:
    - id: outputPath
      type: System.String
      description: The output path.
- uid: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.Update
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.Update
  id: Update
  parent: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest
  langs:
  - csharp
  - vb
  name: Update()
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.Update()
  type: Method
  source:
    remote:
      path: src/net/Client/BulkIngest/IIngestManifest.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Update
    path: src/net/Client/BulkIngest/IIngestManifest.cs
    startLine: 76
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nUpdates manifest.\n"
  example: []
  syntax:
    content: void Update()
    content.vb: Sub Update
- uid: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.UpdateAsync
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.UpdateAsync
  id: UpdateAsync
  parent: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest
  langs:
  - csharp
  - vb
  name: UpdateAsync()
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.UpdateAsync()
  type: Method
  source:
    remote:
      path: src/net/Client/BulkIngest/IIngestManifest.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: UpdateAsync
    path: src/net/Client/BulkIngest/IIngestManifest.cs
    startLine: 82
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nUpdates manifest asyncroniously.\n"
  example: []
  syntax:
    content: Task UpdateAsync()
    content.vb: Function UpdateAsync As Task
    return:
      type: System.Threading.Tasks.Task
      description: <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref>
- uid: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.Statistics
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.Statistics
  id: Statistics
  parent: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest
  langs:
  - csharp
  - vb
  name: Statistics
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.Statistics
  type: Property
  source:
    remote:
      path: src/net/Client/BulkIngest/IIngestManifest.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Statistics
    path: src/net/Client/BulkIngest/IIngestManifest.cs
    startLine: 87
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets the manifest statistics.\n"
  example: []
  syntax:
    content: IIngestManifestStatistics Statistics { get; }
    content.vb: ReadOnly Property Statistics As IIngestManifestStatistics
    parameters: []
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifestStatistics
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.StorageAccount
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.StorageAccount
  id: StorageAccount
  parent: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest
  langs:
  - csharp
  - vb
  name: StorageAccount
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.StorageAccount
  type: Property
  source:
    remote:
      path: src/net/Client/BulkIngest/IIngestManifest.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: StorageAccount
    path: src/net/Client/BulkIngest/IIngestManifest.cs
    startLine: 92
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets <xref href=\"Microsoft.WindowsAzure.MediaServices.Client.IStorageAccount\" data-throw-if-not-resolved=\"false\"></xref> associated with the <xref href=\"Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest\" data-throw-if-not-resolved=\"false\"></xref> \n"
  example: []
  syntax:
    content: IStorageAccount StorageAccount { get; }
    content.vb: ReadOnly Property StorageAccount As IStorageAccount
    parameters: []
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.IStorageAccount
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.Created
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.Created
  id: Created
  parent: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest
  langs:
  - csharp
  - vb
  name: Created
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.Created
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Created
    path: src/net/Client/Entities/ApiClasses.cs
    startLine: 593
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: DateTime Created { get; }
    content.vb: ReadOnly Property Created As Date
    parameters: []
    return:
      type: System.DateTime
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.LastModified
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.LastModified
  id: LastModified
  parent: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest
  langs:
  - csharp
  - vb
  name: LastModified
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.LastModified
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: LastModified
    path: src/net/Client/Entities/ApiClasses.cs
    startLine: 598
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: DateTime LastModified { get; }
    content.vb: ReadOnly Property LastModified As Date
    parameters: []
    return:
      type: System.DateTime
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.Id
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.Id
  id: Id
  parent: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest
  langs:
  - csharp
  - vb
  name: Id
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.Id
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Id
    path: src/net/Client/Entities/ApiClasses.cs
    startLine: 603
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: string Id { get; }
    content.vb: ReadOnly Property Id As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.Name
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.Name
  id: Name
  parent: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest
  langs:
  - csharp
  - vb
  name: Name
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.Name
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Name
    path: src/net/Client/Entities/ApiClasses.cs
    startLine: 608
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: string Name { get; set; }
    content.vb: Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.State
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.State
  id: State
  parent: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest
  langs:
  - csharp
  - vb
  name: State
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.State
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: State
    path: src/net/Client/Entities/ApiClasses.cs
    startLine: 614
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: IngestManifestState State { get; }
    content.vb: ReadOnly Property State As IngestManifestState
    parameters: []
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.IngestManifestState
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.BlobStorageUriForUpload
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.BlobStorageUriForUpload
  id: BlobStorageUriForUpload
  parent: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest
  langs:
  - csharp
  - vb
  name: BlobStorageUriForUpload
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.BlobStorageUriForUpload
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: BlobStorageUriForUpload
    path: src/net/Client/Entities/ApiClasses.cs
    startLine: 619
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: string BlobStorageUriForUpload { get; }
    content.vb: ReadOnly Property BlobStorageUriForUpload As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.StorageAccountName
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.StorageAccountName
  id: StorageAccountName
  parent: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest
  langs:
  - csharp
  - vb
  name: StorageAccountName
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest.StorageAccountName
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: StorageAccountName
    path: src/net/Client/Entities/ApiClasses.cs
    startLine: 627
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets storage account name associated with the the <xref href=\"Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest\" data-throw-if-not-resolved=\"false\"></xref> \n"
  example: []
  syntax:
    content: string StorageAccountName { get; set; }
    content.vb: Property StorageAccountName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - get
  - set
references:
- uid: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: Microsoft.WindowsAzure.MediaServices.Client
  fullName: Microsoft.WindowsAzure.MediaServices.Client
- uid: Microsoft.WindowsAzure.MediaServices.Client.IngestManifestAssetCollection
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: IngestManifestAssetCollection
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IngestManifestAssetCollection
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifestStatistics
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: IIngestManifestStatistics
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifestStatistics
- uid: Microsoft.WindowsAzure.MediaServices.Client.IStorageAccount
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: IStorageAccount
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IStorageAccount
- uid: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: IIngestManifest
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IIngestManifest
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  fullName: System.DateTime
- uid: Microsoft.WindowsAzure.MediaServices.Client.IngestManifestState
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: IngestManifestState
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IngestManifestState
