items:
- uid: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy
  id: MediaRetryPolicy
  parent: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling
  children:
  - Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy.#ctor(ITransientErrorDetectionStrategy,RetryStrategy)
  - Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy.#ctor(ITransientErrorDetectionStrategy,System.Int32)
  - Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy.#ctor(ITransientErrorDetectionStrategy,System.Int32,System.TimeSpan)
  - Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy.#ctor(ITransientErrorDetectionStrategy,System.Int32,System.TimeSpan,System.TimeSpan)
  - Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy.#ctor(ITransientErrorDetectionStrategy,System.Int32,System.TimeSpan,System.TimeSpan,System.TimeSpan,Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter)
  - Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy.ExecuteAction``1(System.Func{``0})
  - Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy.ExecuteAsync(System.Func{System.Threading.Tasks.Task})
  - Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy.ExecuteAsync(System.Func{System.Threading.Tasks.Task},System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy.ExecuteAsync``1(System.Func{System.Threading.Tasks.Task{``0}})
  - Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy.ExecuteAsync``1(System.Func{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy.RetryPolicyAdapter
  langs:
  - csharp
  - vb
  name: MediaRetryPolicy
  fullName: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy
  type: Class
  source:
    remote:
      path: src/net/Client/TransientFaultHandling/MediaRetryPolicy.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: MediaRetryPolicy
    path: src/net/Client/TransientFaultHandling/MediaRetryPolicy.cs
    startLine: 23
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling
  syntax:
    content: 'public class MediaRetryPolicy : RetryPolicy'
    content.vb: >-
      Public Class MediaRetryPolicy
          Inherits RetryPolicy
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy.RetryPolicyAdapter
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy.RetryPolicyAdapter
  id: RetryPolicyAdapter
  parent: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy
  langs:
  - csharp
  - vb
  name: RetryPolicyAdapter
  fullName: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy.RetryPolicyAdapter
  type: Property
  source:
    remote:
      path: src/net/Client/TransientFaultHandling/MediaRetryPolicy.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: RetryPolicyAdapter
    path: src/net/Client/TransientFaultHandling/MediaRetryPolicy.cs
    startLine: 25
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling
  syntax:
    content: public IRetryPolicyAdapter RetryPolicyAdapter { get; set; }
    content.vb: Public Property RetryPolicyAdapter As IRetryPolicyAdapter
    parameters: []
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy.#ctor(ITransientErrorDetectionStrategy,RetryStrategy)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy.#ctor(ITransientErrorDetectionStrategy,RetryStrategy)
  id: '#ctor(ITransientErrorDetectionStrategy,RetryStrategy)'
  parent: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy
  langs:
  - csharp
  - vb
  name: MediaRetryPolicy(ITransientErrorDetectionStrategy, RetryStrategy)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy.MediaRetryPolicy(ITransientErrorDetectionStrategy, RetryStrategy)
  type: Constructor
  source:
    remote:
      path: src/net/Client/TransientFaultHandling/MediaRetryPolicy.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: .ctor
    path: src/net/Client/TransientFaultHandling/MediaRetryPolicy.cs
    startLine: 27
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling
  syntax:
    content: public MediaRetryPolicy(ITransientErrorDetectionStrategy errorDetectionStrategy, RetryStrategy retryStrategy)
    content.vb: Public Sub New(errorDetectionStrategy As ITransientErrorDetectionStrategy, retryStrategy As RetryStrategy)
    parameters:
    - id: errorDetectionStrategy
      type: ITransientErrorDetectionStrategy
    - id: retryStrategy
      type: RetryStrategy
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy.#ctor(ITransientErrorDetectionStrategy,System.Int32)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy.#ctor(ITransientErrorDetectionStrategy,System.Int32)
  id: '#ctor(ITransientErrorDetectionStrategy,System.Int32)'
  parent: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy
  langs:
  - csharp
  - vb
  name: MediaRetryPolicy(ITransientErrorDetectionStrategy, Int32)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy.MediaRetryPolicy(ITransientErrorDetectionStrategy, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/net/Client/TransientFaultHandling/MediaRetryPolicy.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: .ctor
    path: src/net/Client/TransientFaultHandling/MediaRetryPolicy.cs
    startLine: 33
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling
  syntax:
    content: public MediaRetryPolicy(ITransientErrorDetectionStrategy errorDetectionStrategy, int retryCount)
    content.vb: Public Sub New(errorDetectionStrategy As ITransientErrorDetectionStrategy, retryCount As Integer)
    parameters:
    - id: errorDetectionStrategy
      type: ITransientErrorDetectionStrategy
    - id: retryCount
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy.#ctor(ITransientErrorDetectionStrategy,System.Int32,System.TimeSpan)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy.#ctor(ITransientErrorDetectionStrategy,System.Int32,System.TimeSpan)
  id: '#ctor(ITransientErrorDetectionStrategy,System.Int32,System.TimeSpan)'
  parent: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy
  langs:
  - csharp
  - vb
  name: MediaRetryPolicy(ITransientErrorDetectionStrategy, Int32, TimeSpan)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy.MediaRetryPolicy(ITransientErrorDetectionStrategy, System.Int32, System.TimeSpan)
  type: Constructor
  source:
    remote:
      path: src/net/Client/TransientFaultHandling/MediaRetryPolicy.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: .ctor
    path: src/net/Client/TransientFaultHandling/MediaRetryPolicy.cs
    startLine: 38
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling
  syntax:
    content: public MediaRetryPolicy(ITransientErrorDetectionStrategy errorDetectionStrategy, int retryCount, TimeSpan retryInterval)
    content.vb: Public Sub New(errorDetectionStrategy As ITransientErrorDetectionStrategy, retryCount As Integer, retryInterval As TimeSpan)
    parameters:
    - id: errorDetectionStrategy
      type: ITransientErrorDetectionStrategy
    - id: retryCount
      type: System.Int32
    - id: retryInterval
      type: System.TimeSpan
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy.#ctor(ITransientErrorDetectionStrategy,System.Int32,System.TimeSpan,System.TimeSpan,System.TimeSpan,Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy.#ctor(ITransientErrorDetectionStrategy,System.Int32,System.TimeSpan,System.TimeSpan,System.TimeSpan,Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter)
  id: '#ctor(ITransientErrorDetectionStrategy,System.Int32,System.TimeSpan,System.TimeSpan,System.TimeSpan,Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter)'
  parent: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy
  langs:
  - csharp
  - vb
  name: MediaRetryPolicy(ITransientErrorDetectionStrategy, Int32, TimeSpan, TimeSpan, TimeSpan, IRetryPolicyAdapter)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy.MediaRetryPolicy(ITransientErrorDetectionStrategy, System.Int32, System.TimeSpan, System.TimeSpan, System.TimeSpan, Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter)
  type: Constructor
  source:
    remote:
      path: src/net/Client/TransientFaultHandling/MediaRetryPolicy.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: .ctor
    path: src/net/Client/TransientFaultHandling/MediaRetryPolicy.cs
    startLine: 43
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling
  syntax:
    content: public MediaRetryPolicy(ITransientErrorDetectionStrategy errorDetectionStrategy, int retryCount, TimeSpan minBackoff, TimeSpan maxBackoff, TimeSpan deltaBackoff, IRetryPolicyAdapter adapter = null)
    content.vb: Public Sub New(errorDetectionStrategy As ITransientErrorDetectionStrategy, retryCount As Integer, minBackoff As TimeSpan, maxBackoff As TimeSpan, deltaBackoff As TimeSpan, adapter As IRetryPolicyAdapter = Nothing)
    parameters:
    - id: errorDetectionStrategy
      type: ITransientErrorDetectionStrategy
    - id: retryCount
      type: System.Int32
    - id: minBackoff
      type: System.TimeSpan
    - id: maxBackoff
      type: System.TimeSpan
    - id: deltaBackoff
      type: System.TimeSpan
    - id: adapter
      type: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy.#ctor(ITransientErrorDetectionStrategy,System.Int32,System.TimeSpan,System.TimeSpan)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy.#ctor(ITransientErrorDetectionStrategy,System.Int32,System.TimeSpan,System.TimeSpan)
  id: '#ctor(ITransientErrorDetectionStrategy,System.Int32,System.TimeSpan,System.TimeSpan)'
  parent: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy
  langs:
  - csharp
  - vb
  name: MediaRetryPolicy(ITransientErrorDetectionStrategy, Int32, TimeSpan, TimeSpan)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy.MediaRetryPolicy(ITransientErrorDetectionStrategy, System.Int32, System.TimeSpan, System.TimeSpan)
  type: Constructor
  source:
    remote:
      path: src/net/Client/TransientFaultHandling/MediaRetryPolicy.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: .ctor
    path: src/net/Client/TransientFaultHandling/MediaRetryPolicy.cs
    startLine: 49
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling
  syntax:
    content: public MediaRetryPolicy(ITransientErrorDetectionStrategy errorDetectionStrategy, int retryCount, TimeSpan initialInterval, TimeSpan increment)
    content.vb: Public Sub New(errorDetectionStrategy As ITransientErrorDetectionStrategy, retryCount As Integer, initialInterval As TimeSpan, increment As TimeSpan)
    parameters:
    - id: errorDetectionStrategy
      type: ITransientErrorDetectionStrategy
    - id: retryCount
      type: System.Int32
    - id: initialInterval
      type: System.TimeSpan
    - id: increment
      type: System.TimeSpan
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy.ExecuteAction``1(System.Func{``0})
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy.ExecuteAction``1(System.Func{``0})
  id: ExecuteAction``1(System.Func{``0})
  parent: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy
  langs:
  - csharp
  - vb
  name: ExecuteAction<TResult>(Func<TResult>)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy.ExecuteAction<TResult>(System.Func<TResult>)
  type: Method
  source:
    remote:
      path: src/net/Client/TransientFaultHandling/MediaRetryPolicy.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ExecuteAction
    path: src/net/Client/TransientFaultHandling/MediaRetryPolicy.cs
    startLine: 61
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling
  summary: "\nExecutes the action.\n"
  example: []
  syntax:
    content: public override TResult ExecuteAction<TResult>(Func<TResult> func)
    content.vb: Public Overrides Function ExecuteAction(Of TResult)(func As Func(Of TResult)) As TResult
    parameters:
    - id: func
      type: System.Func{{TResult}}
      description: The function.
    typeParameters:
    - id: TResult
      description: The type of the t result.
    return:
      type: '{TResult}'
      description: TResult.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: func
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy.ExecuteAction(Of TResult)(System.Func(Of TResult))
  name.vb: ExecuteAction(Of TResult)(Func(Of TResult))
- uid: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy.ExecuteAsync``1(System.Func{System.Threading.Tasks.Task{``0}})
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy.ExecuteAsync``1(System.Func{System.Threading.Tasks.Task{``0}})
  id: ExecuteAsync``1(System.Func{System.Threading.Tasks.Task{``0}})
  parent: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy
  langs:
  - csharp
  - vb
  name: ExecuteAsync<TResult>(Func<Task<TResult>>)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy.ExecuteAsync<TResult>(System.Func<System.Threading.Tasks.Task<TResult>>)
  type: Method
  source:
    remote:
      path: src/net/Client/TransientFaultHandling/MediaRetryPolicy.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ExecuteAsync
    path: src/net/Client/TransientFaultHandling/MediaRetryPolicy.cs
    startLine: 123
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling
  syntax:
    content: public Task<TResult> ExecuteAsync<TResult>(Func<Task<TResult>> taskFunc)
    content.vb: Public Function ExecuteAsync(Of TResult)(taskFunc As Func(Of Task(Of TResult))) As Task(Of TResult)
    parameters:
    - id: taskFunc
      type: System.Func{System.Threading.Tasks.Task{{TResult}}}
    typeParameters:
    - id: TResult
    return:
      type: System.Threading.Tasks.Task{{TResult}}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy.ExecuteAsync(Of TResult)(System.Func(Of System.Threading.Tasks.Task(Of TResult)))
  name.vb: ExecuteAsync(Of TResult)(Func(Of Task(Of TResult)))
- uid: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy.ExecuteAsync(System.Func{System.Threading.Tasks.Task})
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy.ExecuteAsync(System.Func{System.Threading.Tasks.Task})
  id: ExecuteAsync(System.Func{System.Threading.Tasks.Task})
  parent: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy
  langs:
  - csharp
  - vb
  name: ExecuteAsync(Func<Task>)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy.ExecuteAsync(System.Func<System.Threading.Tasks.Task>)
  type: Method
  source:
    remote:
      path: src/net/Client/TransientFaultHandling/MediaRetryPolicy.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ExecuteAsync
    path: src/net/Client/TransientFaultHandling/MediaRetryPolicy.cs
    startLine: 136
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling
  summary: "\nRepetitively executes the specified asynchronous task while it satisfies the current retry policy.\n"
  example: []
  syntax:
    content: public Task ExecuteAsync(Func<Task> taskAction)
    content.vb: Public Function ExecuteAsync(taskAction As Func(Of Task)) As Task
    parameters:
    - id: taskAction
      type: System.Func{System.Threading.Tasks.Task}
      description: A function that returns a started task (also refered as "hot" task).
    return:
      type: System.Threading.Tasks.Task
      description: >-
        Returns a task that will run to completion if the original task completes successfully (either the

        first time or after retrying transient failures). If the task fails with a non-transient error or

        the retry limit is reached, the returned task will become faulted and the exception must be observed.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy.ExecuteAsync(System.Func(Of System.Threading.Tasks.Task))
  name.vb: ExecuteAsync(Func(Of Task))
- uid: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy.ExecuteAsync``1(System.Func{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy.ExecuteAsync``1(System.Func{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)
  id: ExecuteAsync``1(System.Func{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy
  langs:
  - csharp
  - vb
  name: ExecuteAsync<TResult>(Func<Task<TResult>>, CancellationToken)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy.ExecuteAsync<TResult>(System.Func<System.Threading.Tasks.Task<TResult>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/net/Client/TransientFaultHandling/MediaRetryPolicy.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ExecuteAsync
    path: src/net/Client/TransientFaultHandling/MediaRetryPolicy.cs
    startLine: 152
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling
  summary: "\n Repeatedly executes the specified asynchronous task while it satisfies the current retry policy.\n"
  example: []
  syntax:
    content: public Task<TResult> ExecuteAsync<TResult>(Func<Task<TResult>> taskFunc, CancellationToken cancellationToken)
    content.vb: Public Function ExecuteAsync(Of TResult)(taskFunc As Func(Of Task(Of TResult)), cancellationToken As CancellationToken) As Task(Of TResult)
    parameters:
    - id: taskFunc
      type: System.Func{System.Threading.Tasks.Task{{TResult}}}
      description: A function that returns a started task (also refered as "hot" task).
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    typeParameters:
    - id: TResult
      description: The type of the t result.
    return:
      type: System.Threading.Tasks.Task{{TResult}}
      description: >-
        Returns a task that will run to completion if the original task completes
            successfully (either the first time or after retrying transient failures).
            If the task fails with a non-transient error or the retry limit is reached,
            the returned task will become faulted and the exception must be observed.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy.ExecuteAsync(Of TResult)(System.Func(Of System.Threading.Tasks.Task(Of TResult)), System.Threading.CancellationToken)
  name.vb: ExecuteAsync(Of TResult)(Func(Of Task(Of TResult)), CancellationToken)
- uid: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy.ExecuteAsync(System.Func{System.Threading.Tasks.Task},System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy.ExecuteAsync(System.Func{System.Threading.Tasks.Task},System.Threading.CancellationToken)
  id: ExecuteAsync(System.Func{System.Threading.Tasks.Task},System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy
  langs:
  - csharp
  - vb
  name: ExecuteAsync(Func<Task>, CancellationToken)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy.ExecuteAsync(System.Func<System.Threading.Tasks.Task>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/net/Client/TransientFaultHandling/MediaRetryPolicy.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ExecuteAsync
    path: src/net/Client/TransientFaultHandling/MediaRetryPolicy.cs
    startLine: 165
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling
  summary: "\nRepetitively executes the specified asynchronous task while it satisfies the current retry policy.\n"
  example: []
  syntax:
    content: public Task ExecuteAsync(Func<Task> taskAction, CancellationToken cancellationToken)
    content.vb: Public Function ExecuteAsync(taskAction As Func(Of Task), cancellationToken As CancellationToken) As Task
    parameters:
    - id: taskAction
      type: System.Func{System.Threading.Tasks.Task}
      description: A function that returns a started task (also refered as "hot" task).
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: To cancel the retry operation, but not operations that are already in flight or that already completed successfully.
    return:
      type: System.Threading.Tasks.Task
      description: >-
        Returns a task that will run to completion if the original task completes successfully (either the

        first time or after retrying transient failures). If the task fails with a non-transient error or

        the retry limit is reached, the returned task will become faulted and the exception must be observed.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy.ExecuteAsync(System.Func(Of System.Threading.Tasks.Task), System.Threading.CancellationToken)
  name.vb: ExecuteAsync(Func(Of Task), CancellationToken)
references:
- uid: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling
  isExternal: false
  name: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling
  fullName: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter
  parent: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling
  isExternal: false
  name: IRetryPolicyAdapter
  fullName: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter
- uid: ITransientErrorDetectionStrategy
  isExternal: true
  name: ITransientErrorDetectionStrategy
  fullName: ITransientErrorDetectionStrategy
- uid: RetryStrategy
  isExternal: true
  name: RetryStrategy
  fullName: RetryStrategy
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  fullName: System.TimeSpan
- uid: System.ArgumentNullException
- uid: System.Func{{TResult}}
  parent: System
  definition: System.Func`1
  name: Func<TResult>
  fullName: System.Func<TResult>
  fullname.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: '{TResult}'
  isExternal: false
  name: TResult
  fullName: TResult
- uid: System.Func`1
  parent: System
  isExternal: true
  name: Func<TResult>
  fullName: System.Func<TResult>
  fullname.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Func{System.Threading.Tasks.Task{{TResult}}}
  parent: System
  definition: System.Func`1
  name: Func<Task<TResult>>
  fullName: System.Func<System.Threading.Tasks.Task<TResult>>
  fullname.vb: System.Func(Of System.Threading.Tasks.Task(Of TResult))
  name.vb: Func(Of Task(Of TResult))
  spec.csharp:
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{{TResult}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Func{System.Threading.Tasks.Task}
  parent: System
  definition: System.Func`1
  name: Func<Task>
  fullName: System.Func<System.Threading.Tasks.Task>
  fullname.vb: System.Func(Of System.Threading.Tasks.Task)
  name.vb: Func(Of Task)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
