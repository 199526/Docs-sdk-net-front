items:
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials
  id: MediaServicesCredentials
  parent: Microsoft.WindowsAzure.MediaServices.Client
  children:
  - Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.#ctor(System.String,System.String)
  - Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{System.String})
  - Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.#ctor(System.String,System.String,System.String,System.String)
  - Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.AccessToken
  - Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.AcsBaseAddress
  - Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.AcsBaseAddressList
  - Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.ClientId
  - Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.ClientSecret
  - Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.ParseTokenExpiration(System.String)
  - Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.RefreshToken
  - Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.RefreshTokenRetryPolicy
  - Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.Scope
  - Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.SetAcsToken(System.Byte[])
  - Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.TokenExpiration
  langs:
  - csharp
  - vb
  name: MediaServicesCredentials
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials
  type: Class
  source:
    remote:
      path: src/net/Client/MediaServicesCredentials.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: MediaServicesCredentials
    path: src/net/Client/MediaServicesCredentials.cs
    startLine: 30
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  syntax:
    content: public class MediaServicesCredentials
    content.vb: Public Class MediaServicesCredentials
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.AcsBaseAddressList
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.AcsBaseAddressList
  id: AcsBaseAddressList
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials
  langs:
  - csharp
  - vb
  name: AcsBaseAddressList
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.AcsBaseAddressList
  type: Property
  source:
    remote:
      path: src/net/Client/MediaServicesCredentials.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: AcsBaseAddressList
    path: src/net/Client/MediaServicesCredentials.cs
    startLine: 52
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nThe access control endpoints to authenticate against.\n"
  example: []
  syntax:
    content: public IList<string> AcsBaseAddressList { get; }
    content.vb: Public ReadOnly Property AcsBaseAddressList As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.AcsBaseAddress
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.AcsBaseAddress
  id: AcsBaseAddress
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials
  langs:
  - csharp
  - vb
  name: AcsBaseAddress
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.AcsBaseAddress
  type: Property
  source:
    remote:
      path: src/net/Client/MediaServicesCredentials.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: AcsBaseAddress
    path: src/net/Client/MediaServicesCredentials.cs
    startLine: 60
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nThe access control endpoint to authenticate against.\n"
  example: []
  syntax:
    content: public string AcsBaseAddress { get; set; }
    content.vb: Public Property AcsBaseAddress As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.ClientSecret
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.ClientSecret
  id: ClientSecret
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials
  langs:
  - csharp
  - vb
  name: ClientSecret
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.ClientSecret
  type: Property
  source:
    remote:
      path: src/net/Client/MediaServicesCredentials.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ClientSecret
    path: src/net/Client/MediaServicesCredentials.cs
    startLine: 69
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nThe Microsoft WindowsAzure Media Services account key to authenticate with.\n"
  example: []
  syntax:
    content: public string ClientSecret { get; set; }
    content.vb: Public Property ClientSecret As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.ClientId
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.ClientId
  id: ClientId
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials
  langs:
  - csharp
  - vb
  name: ClientId
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.ClientId
  type: Property
  source:
    remote:
      path: src/net/Client/MediaServicesCredentials.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ClientId
    path: src/net/Client/MediaServicesCredentials.cs
    startLine: 74
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nThe Microsoft WindowsAzure Media Services account name to authenticate with.\n"
  example: []
  syntax:
    content: public string ClientId { get; set; }
    content.vb: Public Property ClientId As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.Scope
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.Scope
  id: Scope
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials
  langs:
  - csharp
  - vb
  name: Scope
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.Scope
  type: Property
  source:
    remote:
      path: src/net/Client/MediaServicesCredentials.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Scope
    path: src/net/Client/MediaServicesCredentials.cs
    startLine: 79
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nThe scope of authorization.\n"
  example: []
  syntax:
    content: public string Scope { get; set; }
    content.vb: Public Property Scope As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.AccessToken
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.AccessToken
  id: AccessToken
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials
  langs:
  - csharp
  - vb
  name: AccessToken
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.AccessToken
  type: Property
  source:
    remote:
      path: src/net/Client/MediaServicesCredentials.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: AccessToken
    path: src/net/Client/MediaServicesCredentials.cs
    startLine: 84
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets OAuth Access Token to be used for web requests.\n"
  example: []
  syntax:
    content: public string AccessToken { get; set; }
    content.vb: Public Property AccessToken As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.TokenExpiration
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.TokenExpiration
  id: TokenExpiration
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials
  langs:
  - csharp
  - vb
  name: TokenExpiration
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.TokenExpiration
  type: Property
  source:
    remote:
      path: src/net/Client/MediaServicesCredentials.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: TokenExpiration
    path: src/net/Client/MediaServicesCredentials.cs
    startLine: 89
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets Expiration time in UTC of OAuth Access Token used in web requests.\n"
  example: []
  syntax:
    content: public DateTime TokenExpiration { get; set; }
    content.vb: Public Property TokenExpiration As Date
    parameters: []
    return:
      type: System.DateTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.RefreshTokenRetryPolicy
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.RefreshTokenRetryPolicy
  id: RefreshTokenRetryPolicy
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials
  langs:
  - csharp
  - vb
  name: RefreshTokenRetryPolicy
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.RefreshTokenRetryPolicy
  type: Property
  source:
    remote:
      path: src/net/Client/MediaServicesCredentials.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: RefreshTokenRetryPolicy
    path: src/net/Client/MediaServicesCredentials.cs
    startLine: 94
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nRetryPolicy used for acquiring a token\n"
  example: []
  syntax:
    content: public RetryPolicy RefreshTokenRetryPolicy { get; set; }
    content.vb: Public Property RefreshTokenRetryPolicy As RetryPolicy
    parameters: []
    return:
      type: RetryPolicy
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.#ctor(System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials
  langs:
  - csharp
  - vb
  name: MediaServicesCredentials(String, String)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.MediaServicesCredentials(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/net/Client/MediaServicesCredentials.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: .ctor
    path: src/net/Client/MediaServicesCredentials.cs
    startLine: 101
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.MediaServices.Client.OAuth.OAuthDataServiceAdapter\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public MediaServicesCredentials(string clientId, string clientSecret)
    content.vb: Public Sub New(clientId As String, clientSecret As String)
    parameters:
    - id: clientId
      type: System.String
      description: The client id.
    - id: clientSecret
      type: System.String
      description: The client secret.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.#ctor(System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.#ctor(System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String)'
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials
  langs:
  - csharp
  - vb
  name: MediaServicesCredentials(String, String, String, String)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.MediaServicesCredentials(System.String, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/net/Client/MediaServicesCredentials.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: .ctor
    path: src/net/Client/MediaServicesCredentials.cs
    startLine: 122
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.MediaServices.Client.OAuth.OAuthDataServiceAdapter\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public MediaServicesCredentials(string clientId, string clientSecret, string scope, string acsBaseAddress)
    content.vb: Public Sub New(clientId As String, clientSecret As String, scope As String, acsBaseAddress As String)
    parameters:
    - id: clientId
      type: System.String
      description: The client id.
    - id: clientSecret
      type: System.String
      description: The client secret.
    - id: scope
      type: System.String
      description: The scope.
    - id: acsBaseAddress
      type: System.String
      description: The acs base address.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{System.String})
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{System.String})
  id: '#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{System.String})'
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials
  langs:
  - csharp
  - vb
  name: MediaServicesCredentials(String, String, String, IList<String>)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.MediaServicesCredentials(System.String, System.String, System.String, System.Collections.Generic.IList<System.String>)
  type: Constructor
  source:
    remote:
      path: src/net/Client/MediaServicesCredentials.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: .ctor
    path: src/net/Client/MediaServicesCredentials.cs
    startLine: 144
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.MediaServices.Client.OAuth.OAuthDataServiceAdapter\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public MediaServicesCredentials(string clientId, string clientSecret, string scope, IList<string> acsBaseAddressList)
    content.vb: Public Sub New(clientId As String, clientSecret As String, scope As String, acsBaseAddressList As IList(Of String))
    parameters:
    - id: clientId
      type: System.String
      description: The client id.
    - id: clientSecret
      type: System.String
      description: The client secret.
    - id: scope
      type: System.String
      description: The scope.
    - id: acsBaseAddressList
      type: System.Collections.Generic.IList{System.String}
      description: List of acs base address.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.MediaServicesCredentials(System.String, System.String, System.String, System.Collections.Generic.IList(Of System.String))
  name.vb: MediaServicesCredentials(String, String, String, IList(Of String))
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.RefreshToken
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.RefreshToken
  id: RefreshToken
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials
  langs:
  - csharp
  - vb
  name: RefreshToken()
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.RefreshToken()
  type: Method
  source:
    remote:
      path: src/net/Client/MediaServicesCredentials.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: RefreshToken
    path: src/net/Client/MediaServicesCredentials.cs
    startLine: 160
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nRequests ACS token from the server and stores it for future use.\n"
  example: []
  syntax:
    content: public void RefreshToken()
    content.vb: Public Sub RefreshToken
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.SetAcsToken(System.Byte[])
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.SetAcsToken(System.Byte[])
  id: SetAcsToken(System.Byte[])
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials
  langs:
  - csharp
  - vb
  name: SetAcsToken(Byte[])
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.SetAcsToken(System.Byte[])
  type: Method
  source:
    remote:
      path: src/net/Client/MediaServicesCredentials.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: SetAcsToken
    path: src/net/Client/MediaServicesCredentials.cs
    startLine: 188
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nStores ACS token info for future use.\n"
  example: []
  syntax:
    content: public void SetAcsToken(byte[] acsResponse)
    content.vb: Public Sub SetAcsToken(acsResponse As Byte())
    parameters:
    - id: acsResponse
      type: System.Byte[]
      description: Response received from ACS server.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.SetAcsToken(System.Byte())
  name.vb: SetAcsToken(Byte())
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.ParseTokenExpiration(System.String)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.ParseTokenExpiration(System.String)
  id: ParseTokenExpiration(System.String)
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials
  langs:
  - csharp
  - vb
  name: ParseTokenExpiration(String)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials.ParseTokenExpiration(System.String)
  type: Method
  source:
    remote:
      path: src/net/Client/MediaServicesCredentials.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ParseTokenExpiration
    path: src/net/Client/MediaServicesCredentials.cs
    startLine: 228
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  syntax:
    content: public static DateTime ParseTokenExpiration(string token)
    content.vb: Public Shared Function ParseTokenExpiration(token As String) As Date
    parameters:
    - id: token
      type: System.String
    return:
      type: System.DateTime
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: Microsoft.WindowsAzure.MediaServices.Client
  fullName: Microsoft.WindowsAzure.MediaServices.Client
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: true
  name: IList<T>
  fullName: System.Collections.Generic.IList<T>
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  fullName: System.DateTime
- uid: RetryPolicy
  isExternal: true
  name: RetryPolicy
  fullName: RetryPolicy
- uid: Microsoft.WindowsAzure.MediaServices.Client.OAuth.OAuthDataServiceAdapter
  parent: Microsoft.WindowsAzure.MediaServices.Client.OAuth
  isExternal: false
  name: OAuthDataServiceAdapter
  fullName: Microsoft.WindowsAzure.MediaServices.Client.OAuth.OAuthDataServiceAdapter
- uid: Microsoft.WindowsAzure.MediaServices.Client.OAuth
  isExternal: false
  name: Microsoft.WindowsAzure.MediaServices.Client.OAuth
  fullName: Microsoft.WindowsAzure.MediaServices.Client.OAuth
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
