items:
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAsset
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.IAsset
  id: IAsset
  parent: Microsoft.WindowsAzure.MediaServices.Client
  children:
  - Microsoft.WindowsAzure.MediaServices.Client.IAsset.AlternateId
  - Microsoft.WindowsAzure.MediaServices.Client.IAsset.AssetFiles
  - Microsoft.WindowsAzure.MediaServices.Client.IAsset.AssetFilters
  - Microsoft.WindowsAzure.MediaServices.Client.IAsset.AssetType
  - Microsoft.WindowsAzure.MediaServices.Client.IAsset.ContentKeys
  - Microsoft.WindowsAzure.MediaServices.Client.IAsset.Created
  - Microsoft.WindowsAzure.MediaServices.Client.IAsset.Delete
  - Microsoft.WindowsAzure.MediaServices.Client.IAsset.Delete(System.Boolean)
  - Microsoft.WindowsAzure.MediaServices.Client.IAsset.DeleteAsync
  - Microsoft.WindowsAzure.MediaServices.Client.IAsset.DeleteAsync(System.Boolean)
  - Microsoft.WindowsAzure.MediaServices.Client.IAsset.DeliveryPolicies
  - Microsoft.WindowsAzure.MediaServices.Client.IAsset.GetEncryptionState(Microsoft.WindowsAzure.MediaServices.Client.DynamicEncryption.AssetDeliveryProtocol)
  - Microsoft.WindowsAzure.MediaServices.Client.IAsset.Id
  - Microsoft.WindowsAzure.MediaServices.Client.IAsset.IsStreamable
  - Microsoft.WindowsAzure.MediaServices.Client.IAsset.LastModified
  - Microsoft.WindowsAzure.MediaServices.Client.IAsset.Locators
  - Microsoft.WindowsAzure.MediaServices.Client.IAsset.Name
  - Microsoft.WindowsAzure.MediaServices.Client.IAsset.Options
  - Microsoft.WindowsAzure.MediaServices.Client.IAsset.ParentAssets
  - Microsoft.WindowsAzure.MediaServices.Client.IAsset.State
  - Microsoft.WindowsAzure.MediaServices.Client.IAsset.StorageAccount
  - Microsoft.WindowsAzure.MediaServices.Client.IAsset.StorageAccountName
  - Microsoft.WindowsAzure.MediaServices.Client.IAsset.SupportsDynamicEncryption
  - Microsoft.WindowsAzure.MediaServices.Client.IAsset.Update
  - Microsoft.WindowsAzure.MediaServices.Client.IAsset.UpdateAsync
  - Microsoft.WindowsAzure.MediaServices.Client.IAsset.Uri
  langs:
  - csharp
  - vb
  name: IAsset
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAsset
  type: Interface
  source:
    remote:
      path: src/net/Client/Entities/IAsset.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: IAsset
    path: src/net/Client/Entities/IAsset.cs
    startLine: 26
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nRepresents an asset that can be an input to jobs or tasks.\n"
  example: []
  syntax:
    content: public interface IAsset
    content.vb: Public Interface IAsset
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAsset.DeliveryPolicies
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.IAsset.DeliveryPolicies
  id: DeliveryPolicies
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAsset
  langs:
  - csharp
  - vb
  name: DeliveryPolicies
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAsset.DeliveryPolicies
  type: Property
  source:
    remote:
      path: src/net/Client/DynamicEncryption/IAsset.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: DeliveryPolicies
    path: src/net/Client/DynamicEncryption/IAsset.cs
    startLine: 32
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets the delivery policies associated with the asset.\n"
  example: []
  syntax:
    content: IList<IAssetDeliveryPolicy> DeliveryPolicies { get; }
    content.vb: ReadOnly Property DeliveryPolicies As IList(Of IAssetDeliveryPolicy)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.WindowsAzure.MediaServices.Client.DynamicEncryption.IAssetDeliveryPolicy}
      description: A collection of <xref href="Microsoft.WindowsAzure.MediaServices.Client.DynamicEncryption.IAssetDeliveryPolicy" data-throw-if-not-resolved="false"></xref> associated with the Asset.
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAsset.GetEncryptionState(Microsoft.WindowsAzure.MediaServices.Client.DynamicEncryption.AssetDeliveryProtocol)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IAsset.GetEncryptionState(Microsoft.WindowsAzure.MediaServices.Client.DynamicEncryption.AssetDeliveryProtocol)
  id: GetEncryptionState(Microsoft.WindowsAzure.MediaServices.Client.DynamicEncryption.AssetDeliveryProtocol)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAsset
  langs:
  - csharp
  - vb
  name: GetEncryptionState(AssetDeliveryProtocol)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAsset.GetEncryptionState(Microsoft.WindowsAzure.MediaServices.Client.DynamicEncryption.AssetDeliveryProtocol)
  type: Method
  source:
    remote:
      path: src/net/Client/DynamicEncryption/IAsset.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: GetEncryptionState
    path: src/net/Client/DynamicEncryption/IAsset.cs
    startLine: 34
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  syntax:
    content: AssetEncryptionState GetEncryptionState(AssetDeliveryProtocol protocolsToCheck)
    content.vb: Function GetEncryptionState(protocolsToCheck As AssetDeliveryProtocol) As AssetEncryptionState
    parameters:
    - id: protocolsToCheck
      type: Microsoft.WindowsAzure.MediaServices.Client.DynamicEncryption.AssetDeliveryProtocol
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.DynamicEncryption.AssetEncryptionState
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAsset.AssetType
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.IAsset.AssetType
  id: AssetType
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAsset
  langs:
  - csharp
  - vb
  name: AssetType
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAsset.AssetType
  type: Property
  source:
    remote:
      path: src/net/Client/DynamicEncryption/IAsset.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: AssetType
    path: src/net/Client/DynamicEncryption/IAsset.cs
    startLine: 36
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  syntax:
    content: AssetType AssetType { get; }
    content.vb: ReadOnly Property AssetType As AssetType
    parameters: []
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.AssetType
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAsset.IsStreamable
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.IAsset.IsStreamable
  id: IsStreamable
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAsset
  langs:
  - csharp
  - vb
  name: IsStreamable
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAsset.IsStreamable
  type: Property
  source:
    remote:
      path: src/net/Client/DynamicEncryption/IAsset.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: IsStreamable
    path: src/net/Client/DynamicEncryption/IAsset.cs
    startLine: 38
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  syntax:
    content: bool IsStreamable { get; }
    content.vb: ReadOnly Property IsStreamable As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAsset.SupportsDynamicEncryption
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.IAsset.SupportsDynamicEncryption
  id: SupportsDynamicEncryption
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAsset
  langs:
  - csharp
  - vb
  name: SupportsDynamicEncryption
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAsset.SupportsDynamicEncryption
  type: Property
  source:
    remote:
      path: src/net/Client/DynamicEncryption/IAsset.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: SupportsDynamicEncryption
    path: src/net/Client/DynamicEncryption/IAsset.cs
    startLine: 40
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  syntax:
    content: bool SupportsDynamicEncryption { get; }
    content.vb: ReadOnly Property SupportsDynamicEncryption As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAsset.Id
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.IAsset.Id
  id: Id
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAsset
  langs:
  - csharp
  - vb
  name: Id
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAsset.Id
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Id
    path: src/net/Client/Entities/ApiClasses.cs
    startLine: 29
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: string Id { get; }
    content.vb: ReadOnly Property Id As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAsset.State
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.IAsset.State
  id: State
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAsset
  langs:
  - csharp
  - vb
  name: State
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAsset.State
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: State
    path: src/net/Client/Entities/ApiClasses.cs
    startLine: 34
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: AssetState State { get; }
    content.vb: ReadOnly Property State As AssetState
    parameters: []
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.AssetState
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAsset.Created
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.IAsset.Created
  id: Created
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAsset
  langs:
  - csharp
  - vb
  name: Created
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAsset.Created
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Created
    path: src/net/Client/Entities/ApiClasses.cs
    startLine: 39
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: DateTime Created { get; }
    content.vb: ReadOnly Property Created As Date
    parameters: []
    return:
      type: System.DateTime
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAsset.LastModified
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.IAsset.LastModified
  id: LastModified
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAsset
  langs:
  - csharp
  - vb
  name: LastModified
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAsset.LastModified
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: LastModified
    path: src/net/Client/Entities/ApiClasses.cs
    startLine: 44
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: DateTime LastModified { get; }
    content.vb: ReadOnly Property LastModified As Date
    parameters: []
    return:
      type: System.DateTime
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAsset.Name
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.IAsset.Name
  id: Name
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAsset
  langs:
  - csharp
  - vb
  name: Name
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAsset.Name
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Name
    path: src/net/Client/Entities/ApiClasses.cs
    startLine: 49
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: string Name { get; set; }
    content.vb: Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAsset.AlternateId
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.IAsset.AlternateId
  id: AlternateId
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAsset
  langs:
  - csharp
  - vb
  name: AlternateId
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAsset.AlternateId
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: AlternateId
    path: src/net/Client/Entities/ApiClasses.cs
    startLine: 55
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: string AlternateId { get; set; }
    content.vb: Property AlternateId As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAsset.Options
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.IAsset.Options
  id: Options
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAsset
  langs:
  - csharp
  - vb
  name: Options
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAsset.Options
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Options
    path: src/net/Client/Entities/ApiClasses.cs
    startLine: 61
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: AssetCreationOptions Options { get; }
    content.vb: ReadOnly Property Options As AssetCreationOptions
    parameters: []
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.AssetCreationOptions
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAsset.Uri
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.IAsset.Uri
  id: Uri
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAsset
  langs:
  - csharp
  - vb
  name: Uri
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAsset.Uri
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Uri
    path: src/net/Client/Entities/ApiClasses.cs
    startLine: 67
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: Uri Uri { get; }
    content.vb: ReadOnly Property Uri As Uri
    parameters: []
    return:
      type: System.Uri
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAsset.AssetFiles
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.IAsset.AssetFiles
  id: AssetFiles
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAsset
  langs:
  - csharp
  - vb
  name: AssetFiles
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAsset.AssetFiles
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/IAsset.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: AssetFiles
    path: src/net/Client/Entities/IAsset.cs
    startLine: 32
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets a collection of files contained by the asset.\n"
  example: []
  syntax:
    content: AssetFileBaseCollection AssetFiles { get; }
    content.vb: ReadOnly Property AssetFiles As AssetFileBaseCollection
    parameters: []
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.AssetFileBaseCollection
      description: A collection of files contained by the Asset.
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAsset.AssetFilters
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.IAsset.AssetFilters
  id: AssetFilters
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAsset
  langs:
  - csharp
  - vb
  name: AssetFilters
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAsset.AssetFilters
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/IAsset.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: AssetFilters
    path: src/net/Client/Entities/IAsset.cs
    startLine: 37
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGet a collection of filters for this asset\n"
  example: []
  syntax:
    content: AssetFilterBaseCollection AssetFilters { get; }
    content.vb: ReadOnly Property AssetFilters As AssetFilterBaseCollection
    parameters: []
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.AssetFilterBaseCollection
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAsset.Locators
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.IAsset.Locators
  id: Locators
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAsset
  langs:
  - csharp
  - vb
  name: Locators
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAsset.Locators
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/IAsset.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Locators
    path: src/net/Client/Entities/IAsset.cs
    startLine: 44
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets the Locators associated with this asset.\n"
  remarks: This collection is not modifiable. Instead a SAS locator is created from calling <xref href="Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateSasLocator(Microsoft.WindowsAzure.MediaServices.Client.IAsset,Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: ReadOnlyCollection<ILocator> Locators { get; }
    content.vb: ReadOnly Property Locators As ReadOnlyCollection(Of ILocator)
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.WindowsAzure.MediaServices.Client.ILocator}
      description: A Collection of <xref href="Microsoft.WindowsAzure.MediaServices.Client.ILocator" data-throw-if-not-resolved="false"></xref> that are associated with the Asset.
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAsset.ContentKeys
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.IAsset.ContentKeys
  id: ContentKeys
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAsset
  langs:
  - csharp
  - vb
  name: ContentKeys
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAsset.ContentKeys
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/IAsset.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ContentKeys
    path: src/net/Client/Entities/IAsset.cs
    startLine: 50
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets the Content Keys associated with the asset.\n"
  example: []
  syntax:
    content: IList<IContentKey> ContentKeys { get; }
    content.vb: ReadOnly Property ContentKeys As IList(Of IContentKey)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.WindowsAzure.MediaServices.Client.IContentKey}
      description: A collection of <xref href="Microsoft.WindowsAzure.MediaServices.Client.IContentKey" data-throw-if-not-resolved="false"></xref> associated with the Asset.
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAsset.ParentAssets
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.IAsset.ParentAssets
  id: ParentAssets
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAsset
  langs:
  - csharp
  - vb
  name: ParentAssets
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAsset.ParentAssets
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/IAsset.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ParentAssets
    path: src/net/Client/Entities/IAsset.cs
    startLine: 56
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets the parent assets that were used to create the asset.\n"
  example: []
  syntax:
    content: ReadOnlyCollection<IAsset> ParentAssets { get; }
    content.vb: ReadOnly Property ParentAssets As ReadOnlyCollection(Of IAsset)
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.WindowsAzure.MediaServices.Client.IAsset}
      description: A collection of <xref href="Microsoft.WindowsAzure.MediaServices.Client.IAsset" data-throw-if-not-resolved="false"></xref> associated with the Asset.
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAsset.StorageAccountName
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.IAsset.StorageAccountName
  id: StorageAccountName
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAsset
  langs:
  - csharp
  - vb
  name: StorageAccountName
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAsset.StorageAccountName
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/IAsset.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: StorageAccountName
    path: src/net/Client/Entities/IAsset.cs
    startLine: 61
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets storage account name associated with the Asset\n"
  example: []
  syntax:
    content: string StorageAccountName { get; }
    content.vb: ReadOnly Property StorageAccountName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAsset.StorageAccount
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.IAsset.StorageAccount
  id: StorageAccount
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAsset
  langs:
  - csharp
  - vb
  name: StorageAccount
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAsset.StorageAccount
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/IAsset.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: StorageAccount
    path: src/net/Client/Entities/IAsset.cs
    startLine: 66
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets <xref href=\"Microsoft.WindowsAzure.MediaServices.Client.IStorageAccount\" data-throw-if-not-resolved=\"false\"></xref> associated with the Asset\n"
  example: []
  syntax:
    content: IStorageAccount StorageAccount { get; }
    content.vb: ReadOnly Property StorageAccount As IStorageAccount
    parameters: []
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.IStorageAccount
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAsset.UpdateAsync
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IAsset.UpdateAsync
  id: UpdateAsync
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAsset
  langs:
  - csharp
  - vb
  name: UpdateAsync()
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAsset.UpdateAsync()
  type: Method
  source:
    remote:
      path: src/net/Client/Entities/IAsset.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: UpdateAsync
    path: src/net/Client/Entities/IAsset.cs
    startLine: 72
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nAsynchronously updates this asset instance.\n"
  example: []
  syntax:
    content: Task UpdateAsync()
    content.vb: Function UpdateAsync As Task
    return:
      type: System.Threading.Tasks.Task
      description: A function delegate that returns the future result to be available through the Task.
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAsset.Update
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IAsset.Update
  id: Update
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAsset
  langs:
  - csharp
  - vb
  name: Update()
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAsset.Update()
  type: Method
  source:
    remote:
      path: src/net/Client/Entities/IAsset.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Update
    path: src/net/Client/Entities/IAsset.cs
    startLine: 77
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nUpdates this asset instance.\n"
  example: []
  syntax:
    content: void Update()
    content.vb: Sub Update
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAsset.DeleteAsync
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IAsset.DeleteAsync
  id: DeleteAsync
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAsset
  langs:
  - csharp
  - vb
  name: DeleteAsync()
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAsset.DeleteAsync()
  type: Method
  source:
    remote:
      path: src/net/Client/Entities/IAsset.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: DeleteAsync
    path: src/net/Client/Entities/IAsset.cs
    startLine: 83
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nAsynchronously deletes this asset instance including underlying azure storage container\n"
  example: []
  syntax:
    content: Task DeleteAsync()
    content.vb: Function DeleteAsync As Task
    return:
      type: System.Threading.Tasks.Task
      description: A function delegate that returns the future result to be available through the Task.
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAsset.DeleteAsync(System.Boolean)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IAsset.DeleteAsync(System.Boolean)
  id: DeleteAsync(System.Boolean)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAsset
  langs:
  - csharp
  - vb
  name: DeleteAsync(Boolean)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAsset.DeleteAsync(System.Boolean)
  type: Method
  source:
    remote:
      path: src/net/Client/Entities/IAsset.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: DeleteAsync
    path: src/net/Client/Entities/IAsset.cs
    startLine: 90
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nAsynchronously deletes this asset instance.\n"
  example: []
  syntax:
    content: Task<IMediaDataServiceResponse> DeleteAsync(bool keepAzureStorageContainer)
    content.vb: Function DeleteAsync(keepAzureStorageContainer As Boolean) As Task(Of IMediaDataServiceResponse)
    parameters:
    - id: keepAzureStorageContainer
      type: System.Boolean
      description: if set to <code>true</code> underlying storage asset container is preserved during the delete operation.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceResponse}
      description: Task of type <xref href="Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceResponse" data-throw-if-not-resolved="false"></xref>
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAsset.Delete
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IAsset.Delete
  id: Delete
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAsset
  langs:
  - csharp
  - vb
  name: Delete()
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAsset.Delete()
  type: Method
  source:
    remote:
      path: src/net/Client/Entities/IAsset.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Delete
    path: src/net/Client/Entities/IAsset.cs
    startLine: 95
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nDeletes this asset instance including underlying azure storage container\n"
  example: []
  syntax:
    content: void Delete()
    content.vb: Sub Delete
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAsset.Delete(System.Boolean)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IAsset.Delete(System.Boolean)
  id: Delete(System.Boolean)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAsset
  langs:
  - csharp
  - vb
  name: Delete(Boolean)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAsset.Delete(System.Boolean)
  type: Method
  source:
    remote:
      path: src/net/Client/Entities/IAsset.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Delete
    path: src/net/Client/Entities/IAsset.cs
    startLine: 102
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nDeletes this asset instance\n"
  example: []
  syntax:
    content: IMediaDataServiceResponse Delete(bool keepAzureStorageContainer)
    content.vb: Function Delete(keepAzureStorageContainer As Boolean) As IMediaDataServiceResponse
    parameters:
    - id: keepAzureStorageContainer
      type: System.Boolean
      description: if set to <code>true</code> underlying storage asset container is preserved during the delete operation.
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceResponse
      description: IMediaDataServiceResponse.
references:
- uid: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: Microsoft.WindowsAzure.MediaServices.Client
  fullName: Microsoft.WindowsAzure.MediaServices.Client
- uid: Microsoft.WindowsAzure.MediaServices.Client.DynamicEncryption.IAssetDeliveryPolicy
  parent: Microsoft.WindowsAzure.MediaServices.Client.DynamicEncryption
  isExternal: false
  name: IAssetDeliveryPolicy
  fullName: Microsoft.WindowsAzure.MediaServices.Client.DynamicEncryption.IAssetDeliveryPolicy
- uid: System.Collections.Generic.IList{Microsoft.WindowsAzure.MediaServices.Client.DynamicEncryption.IAssetDeliveryPolicy}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IAssetDeliveryPolicy>
  fullName: System.Collections.Generic.IList<Microsoft.WindowsAzure.MediaServices.Client.DynamicEncryption.IAssetDeliveryPolicy>
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.WindowsAzure.MediaServices.Client.DynamicEncryption.IAssetDeliveryPolicy)
  name.vb: IList(Of IAssetDeliveryPolicy)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.WindowsAzure.MediaServices.Client.DynamicEncryption.IAssetDeliveryPolicy
    name: IAssetDeliveryPolicy
    fullName: Microsoft.WindowsAzure.MediaServices.Client.DynamicEncryption.IAssetDeliveryPolicy
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.MediaServices.Client.DynamicEncryption.IAssetDeliveryPolicy
    name: IAssetDeliveryPolicy
    fullName: Microsoft.WindowsAzure.MediaServices.Client.DynamicEncryption.IAssetDeliveryPolicy
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.DynamicEncryption
  isExternal: false
  name: Microsoft.WindowsAzure.MediaServices.Client.DynamicEncryption
  fullName: Microsoft.WindowsAzure.MediaServices.Client.DynamicEncryption
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: true
  name: IList<T>
  fullName: System.Collections.Generic.IList<T>
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.WindowsAzure.MediaServices.Client.DynamicEncryption.AssetDeliveryProtocol
  parent: Microsoft.WindowsAzure.MediaServices.Client.DynamicEncryption
  isExternal: false
  name: AssetDeliveryProtocol
  fullName: Microsoft.WindowsAzure.MediaServices.Client.DynamicEncryption.AssetDeliveryProtocol
- uid: Microsoft.WindowsAzure.MediaServices.Client.DynamicEncryption.AssetEncryptionState
  parent: Microsoft.WindowsAzure.MediaServices.Client.DynamicEncryption
  isExternal: false
  name: AssetEncryptionState
  fullName: Microsoft.WindowsAzure.MediaServices.Client.DynamicEncryption.AssetEncryptionState
- uid: Microsoft.WindowsAzure.MediaServices.Client.AssetType
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: AssetType
  fullName: Microsoft.WindowsAzure.MediaServices.Client.AssetType
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.MediaServices.Client.AssetState
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: AssetState
  fullName: Microsoft.WindowsAzure.MediaServices.Client.AssetState
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  fullName: System.DateTime
- uid: Microsoft.WindowsAzure.MediaServices.Client.AssetCreationOptions
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: AssetCreationOptions
  fullName: Microsoft.WindowsAzure.MediaServices.Client.AssetCreationOptions
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  fullName: System.Uri
- uid: Microsoft.WindowsAzure.MediaServices.Client.AssetFileBaseCollection
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: AssetFileBaseCollection
  fullName: Microsoft.WindowsAzure.MediaServices.Client.AssetFileBaseCollection
- uid: Microsoft.WindowsAzure.MediaServices.Client.AssetFilterBaseCollection
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: AssetFilterBaseCollection
  fullName: Microsoft.WindowsAzure.MediaServices.Client.AssetFilterBaseCollection
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: ILocator
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator
- uid: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateSasLocator(Microsoft.WindowsAzure.MediaServices.Client.IAsset,Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.WindowsAzure.MediaServices.Client.ILocator}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<ILocator>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.WindowsAzure.MediaServices.Client.ILocator>
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.WindowsAzure.MediaServices.Client.ILocator)
  name.vb: ReadOnlyCollection(Of ILocator)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator
    name: ILocator
    fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator
    name: ILocator
    fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)
  name.vb: ReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: Microsoft.WindowsAzure.MediaServices.Client.IContentKey
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: IContentKey
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IContentKey
- uid: System.Collections.Generic.IList{Microsoft.WindowsAzure.MediaServices.Client.IContentKey}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IContentKey>
  fullName: System.Collections.Generic.IList<Microsoft.WindowsAzure.MediaServices.Client.IContentKey>
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.WindowsAzure.MediaServices.Client.IContentKey)
  name.vb: IList(Of IContentKey)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IContentKey
    name: IContentKey
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IContentKey
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IContentKey
    name: IContentKey
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IContentKey
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAsset
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: IAsset
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAsset
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.WindowsAzure.MediaServices.Client.IAsset}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<IAsset>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.WindowsAzure.MediaServices.Client.IAsset>
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.WindowsAzure.MediaServices.Client.IAsset)
  name.vb: ReadOnlyCollection(Of IAsset)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IAsset
    name: IAsset
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IAsset
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IAsset
    name: IAsset
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IAsset
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.IStorageAccount
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: IStorageAccount
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IStorageAccount
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceResponse
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: IMediaDataServiceResponse
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceResponse
- uid: System.Threading.Tasks.Task{Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IMediaDataServiceResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceResponse>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceResponse)
  name.vb: Task(Of IMediaDataServiceResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceResponse
    name: IMediaDataServiceResponse
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceResponse
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceResponse
    name: IMediaDataServiceResponse
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceResponse
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
