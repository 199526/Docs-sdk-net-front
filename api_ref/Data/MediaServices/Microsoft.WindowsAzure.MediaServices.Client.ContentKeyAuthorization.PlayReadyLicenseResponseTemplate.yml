items:
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.PlayReadyLicenseResponseTemplate
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.PlayReadyLicenseResponseTemplate
  id: PlayReadyLicenseResponseTemplate
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  children:
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.PlayReadyLicenseResponseTemplate.#ctor
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.PlayReadyLicenseResponseTemplate.ExtensionData
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.PlayReadyLicenseResponseTemplate.LicenseTemplates
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.PlayReadyLicenseResponseTemplate.ResponseCustomData
  langs:
  - csharp
  - vb
  name: PlayReadyLicenseResponseTemplate
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.PlayReadyLicenseResponseTemplate
  type: Class
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/PlayReadyLicenseResponseTemplate.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: PlayReadyLicenseResponseTemplate
    path: src/net/Client/ContentKeyAuthorization/Templates/PlayReadyLicenseResponseTemplate.cs
    startLine: 25
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  summary: "\nConfigures the PlayReady License Response Template.  \n"
  example: []
  syntax:
    content: >-
      [DataContract(Namespace = "http://schemas.microsoft.com/Azure/MediaServices/KeyDelivery/PlayReadyTemplate/v1")]

      public class PlayReadyLicenseResponseTemplate : IExtensibleDataObject
    content.vb: >-
      <DataContract(Namespace:="http://schemas.microsoft.com/Azure/MediaServices/KeyDelivery/PlayReadyTemplate/v1")>

      Public Class PlayReadyLicenseResponseTemplate
          Implements IExtensibleDataObject
  inheritance:
  - System.Object
  implements:
  - System.Runtime.Serialization.IExtensibleDataObject
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Namespace
      type: System.String
      value: http://schemas.microsoft.com/Azure/MediaServices/KeyDelivery/PlayReadyTemplate/v1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.PlayReadyLicenseResponseTemplate.ExtensionData
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.PlayReadyLicenseResponseTemplate.ExtensionData
  id: ExtensionData
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.PlayReadyLicenseResponseTemplate
  langs:
  - csharp
  - vb
  name: ExtensionData
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.PlayReadyLicenseResponseTemplate.ExtensionData
  type: Property
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/PlayReadyLicenseResponseTemplate.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ExtensionData
    path: src/net/Client/ContentKeyAuthorization/Templates/PlayReadyLicenseResponseTemplate.cs
    startLine: 32
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  syntax:
    content: public virtual ExtensionDataObject ExtensionData { get; set; }
    content.vb: Public Overridable Property ExtensionData As ExtensionDataObject
    parameters: []
    return:
      type: System.Runtime.Serialization.ExtensionDataObject
  implements:
  - System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.PlayReadyLicenseResponseTemplate.#ctor
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.PlayReadyLicenseResponseTemplate.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.PlayReadyLicenseResponseTemplate
  langs:
  - csharp
  - vb
  name: PlayReadyLicenseResponseTemplate()
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.PlayReadyLicenseResponseTemplate.PlayReadyLicenseResponseTemplate()
  type: Constructor
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/PlayReadyLicenseResponseTemplate.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: .ctor
    path: src/net/Client/ContentKeyAuthorization/Templates/PlayReadyLicenseResponseTemplate.cs
    startLine: 39
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  syntax:
    content: public PlayReadyLicenseResponseTemplate()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.PlayReadyLicenseResponseTemplate.LicenseTemplates
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.PlayReadyLicenseResponseTemplate.LicenseTemplates
  id: LicenseTemplates
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.PlayReadyLicenseResponseTemplate
  langs:
  - csharp
  - vb
  name: LicenseTemplates
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.PlayReadyLicenseResponseTemplate.LicenseTemplates
  type: Property
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/PlayReadyLicenseResponseTemplate.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: LicenseTemplates
    path: src/net/Client/ContentKeyAuthorization/Templates/PlayReadyLicenseResponseTemplate.cs
    startLine: 63
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  summary: "\nList of licenses to be returned to the client upon a license request.  Typcially this just\nhas one license template configured.\n"
  example: []
  syntax:
    content: >-
      [DataMember(IsRequired = true)]

      public IList<PlayReadyLicenseTemplate> LicenseTemplates { get; }
    content.vb: >-
      <DataMember(IsRequired:=True)>

      Public ReadOnly Property LicenseTemplates As IList(Of PlayReadyLicenseTemplate)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.PlayReadyLicenseTemplate}
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: IsRequired
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.PlayReadyLicenseResponseTemplate.ResponseCustomData
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.PlayReadyLicenseResponseTemplate.ResponseCustomData
  id: ResponseCustomData
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.PlayReadyLicenseResponseTemplate
  langs:
  - csharp
  - vb
  name: ResponseCustomData
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.PlayReadyLicenseResponseTemplate.ResponseCustomData
  type: Property
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/PlayReadyLicenseResponseTemplate.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ResponseCustomData
    path: src/net/Client/ContentKeyAuthorization/Templates/PlayReadyLicenseResponseTemplate.cs
    startLine: 71
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  summary: "\nA string returned to the client in the license response.  The client may or may not examine\nthis data but it can be used for sending data to custom client implementations or adding\ndata for diagnostic purposes.\n"
  example: []
  syntax:
    content: >-
      [DataMember(EmitDefaultValue = false)]

      public string ResponseCustomData { get; set; }
    content.vb: >-
      <DataMember(EmitDefaultValue:=False)>

      Public Property ResponseCustomData As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: EmitDefaultValue
      type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  isExternal: false
  name: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Runtime.Serialization.IExtensibleDataObject
  parent: System.Runtime.Serialization
  isExternal: true
  name: IExtensibleDataObject
  fullName: System.Runtime.Serialization.IExtensibleDataObject
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Runtime.Serialization
  isExternal: false
  name: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
  parent: System.Runtime.Serialization.IExtensibleDataObject
  isExternal: true
  name: ExtensionData
  fullName: System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
- uid: System.Runtime.Serialization.ExtensionDataObject
  parent: System.Runtime.Serialization
  isExternal: true
  name: ExtensionDataObject
  fullName: System.Runtime.Serialization.ExtensionDataObject
- uid: System.Collections.Generic.IList{Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.PlayReadyLicenseTemplate}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<PlayReadyLicenseTemplate>
  fullName: System.Collections.Generic.IList<Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.PlayReadyLicenseTemplate>
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.PlayReadyLicenseTemplate)
  name.vb: IList(Of PlayReadyLicenseTemplate)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.PlayReadyLicenseTemplate
    name: PlayReadyLicenseTemplate
    fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.PlayReadyLicenseTemplate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.PlayReadyLicenseTemplate
    name: PlayReadyLicenseTemplate
    fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.PlayReadyLicenseTemplate
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: true
  name: IList<T>
  fullName: System.Collections.Generic.IList<T>
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
