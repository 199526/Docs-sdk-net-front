items:
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext
  id: MediaDataServiceContext
  parent: Microsoft.WindowsAzure.MediaServices.Client
  children:
  - Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.#ctor(System.Data.Services.Client.DataServiceContext,Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy,Microsoft.WindowsAzure.MediaServices.Client.RequestAdapters.ClientRequestIdAdapter)
  - Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.AdaptExecuteAsync(System.Func{System.Threading.Tasks.Task})
  - Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.AddLink(System.Object,System.String,System.Object)
  - Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.AddObject(System.String,System.Object)
  - Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.AddRelatedObject(System.Object,System.String,System.Object)
  - Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.AttachTo(System.String,System.Object)
  - Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.AttachTo(System.String,System.Object,System.String)
  - Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.CreateQuery``2(System.String)
  - Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.DeleteLink(System.Object,System.String,System.Object)
  - Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.DeleteObject(System.Object)
  - Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.Execute(System.Uri,System.String,System.Data.Services.Client.OperationParameter[])
  - Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.Execute``1(System.Uri)
  - Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.ExecuteAsync(System.Uri,System.Object,System.String)
  - Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.ExecuteAsync(System.Uri,System.String,System.Boolean,System.Data.Services.Client.OperationParameter[])
  - Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.ExecuteAsync``1(System.Data.Services.Client.DataServiceQueryContinuation{``0},System.Object)
  - Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.ExecuteAsync``1(System.Uri,System.Object)
  - Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.ExecuteBatchAsync(System.Object,System.Data.Services.Client.DataServiceRequest[])
  - Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.GetReadStreamAsync(System.Object,System.Data.Services.Client.DataServiceRequestArgs,System.Object)
  - Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.IgnoreResourceNotFoundException
  - Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.LoadProperty(System.Object,System.String)
  - Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.LoadPropertyAsync(System.Object,System.String,System.Data.Services.Client.DataServiceQueryContinuation,System.Object)
  - Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.LoadPropertyAsync(System.Object,System.String,System.Object)
  - Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.LoadPropertyAsync(System.Object,System.String,System.Uri,System.Object)
  - Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.Microsoft#WindowsAzure#MediaServices#Client#TransientFaultHandling#IRetryPolicyAdapter#AdaptExecuteAction``1(System.Func{``0})
  - Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.Microsoft#WindowsAzure#MediaServices#Client#TransientFaultHandling#IRetryPolicyAdapter#AdaptExecuteAsync``1(System.Func{System.Threading.Tasks.Task{``0}})
  - Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.SaveChanges
  - Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.SaveChangesAsync(System.Data.Services.Client.SaveChangesOptions,System.Object)
  - Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.SaveChangesAsync(System.Data.Services.Client.SaveChangesOptions,System.Object,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.SaveChangesAsync(System.Object)
  - Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.SetLink(System.Object,System.String,System.Object)
  - Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.UpdateObject(System.Object)
  langs:
  - csharp
  - vb
  name: MediaDataServiceContext
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext
  type: Class
  source:
    remote:
      path: src/net/Client/MediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: MediaDataServiceContext
    path: src/net/Client/MediaDataServiceContext.cs
    startLine: 31
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nWraps System.Data.Services.Client.DataServiceContext.\n"
  example: []
  syntax:
    content: 'public class MediaDataServiceContext : IMediaDataServiceContext, IRetryPolicyAdapter'
    content.vb: >-
      Public Class MediaDataServiceContext
          Implements IMediaDataServiceContext, IRetryPolicyAdapter
  inheritance:
  - System.Object
  implements:
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  - Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.#ctor(System.Data.Services.Client.DataServiceContext,Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy,Microsoft.WindowsAzure.MediaServices.Client.RequestAdapters.ClientRequestIdAdapter)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.#ctor(System.Data.Services.Client.DataServiceContext,Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy,Microsoft.WindowsAzure.MediaServices.Client.RequestAdapters.ClientRequestIdAdapter)
  id: '#ctor(System.Data.Services.Client.DataServiceContext,Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy,Microsoft.WindowsAzure.MediaServices.Client.RequestAdapters.ClientRequestIdAdapter)'
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext
  langs:
  - csharp
  - vb
  name: MediaDataServiceContext(DataServiceContext, MediaRetryPolicy, ClientRequestIdAdapter)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.MediaDataServiceContext(System.Data.Services.Client.DataServiceContext, Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy, Microsoft.WindowsAzure.MediaServices.Client.RequestAdapters.ClientRequestIdAdapter)
  type: Constructor
  source:
    remote:
      path: src/net/Client/MediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: .ctor
    path: src/net/Client/MediaDataServiceContext.cs
    startLine: 39
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  syntax:
    content: public MediaDataServiceContext(DataServiceContext dataContext, MediaRetryPolicy queryRetryPolicy, ClientRequestIdAdapter clientRequestAdapter)
    content.vb: Public Sub New(dataContext As DataServiceContext, queryRetryPolicy As MediaRetryPolicy, clientRequestAdapter As ClientRequestIdAdapter)
    parameters:
    - id: dataContext
      type: System.Data.Services.Client.DataServiceContext
    - id: queryRetryPolicy
      type: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy
    - id: clientRequestAdapter
      type: Microsoft.WindowsAzure.MediaServices.Client.RequestAdapters.ClientRequestIdAdapter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.IgnoreResourceNotFoundException
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.IgnoreResourceNotFoundException
  id: IgnoreResourceNotFoundException
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext
  langs:
  - csharp
  - vb
  name: IgnoreResourceNotFoundException
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.IgnoreResourceNotFoundException
  type: Property
  source:
    remote:
      path: src/net/Client/MediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: IgnoreResourceNotFoundException
    path: src/net/Client/MediaDataServiceContext.cs
    startLine: 50
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets or sets whether an exception is raised when a 404 error (resource not found) is returned by the data service.\n"
  example: []
  syntax:
    content: public bool IgnoreResourceNotFoundException { get; set; }
    content.vb: Public Property IgnoreResourceNotFoundException As Boolean
    parameters: []
    return:
      type: System.Boolean
  implements:
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.IgnoreResourceNotFoundException
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.CreateQuery``2(System.String)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.CreateQuery``2(System.String)
  id: CreateQuery``2(System.String)
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext
  langs:
  - csharp
  - vb
  name: CreateQuery<TIinterface, TData>(String)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.CreateQuery<TIinterface, TData>(System.String)
  type: Method
  source:
    remote:
      path: src/net/Client/MediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: CreateQuery
    path: src/net/Client/MediaDataServiceContext.cs
    startLine: 70
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  syntax:
    content: public IQueryable<TIinterface> CreateQuery<TIinterface, TData>(string entitySetName)
    content.vb: Public Function CreateQuery(Of TIinterface, TData)(entitySetName As String) As IQueryable(Of TIinterface)
    parameters:
    - id: entitySetName
      type: System.String
    typeParameters:
    - id: TIinterface
    - id: TData
    return:
      type: System.Linq.IQueryable{{TIinterface}}
  implements:
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.CreateQuery``2(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.CreateQuery(Of TIinterface, TData)(System.String)
  name.vb: CreateQuery(Of TIinterface, TData)(String)
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.AttachTo(System.String,System.Object)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.AttachTo(System.String,System.Object)
  id: AttachTo(System.String,System.Object)
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext
  langs:
  - csharp
  - vb
  name: AttachTo(String, Object)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.AttachTo(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/net/Client/MediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: AttachTo
    path: src/net/Client/MediaDataServiceContext.cs
    startLine: 87
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  syntax:
    content: public void AttachTo(string entitySetName, object entity)
    content.vb: Public Sub AttachTo(entitySetName As String, entity As Object)
    parameters:
    - id: entitySetName
      type: System.String
    - id: entity
      type: System.Object
  implements:
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AttachTo(System.String,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.AttachTo(System.String,System.Object,System.String)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.AttachTo(System.String,System.Object,System.String)
  id: AttachTo(System.String,System.Object,System.String)
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext
  langs:
  - csharp
  - vb
  name: AttachTo(String, Object, String)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.AttachTo(System.String, System.Object, System.String)
  type: Method
  source:
    remote:
      path: src/net/Client/MediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: AttachTo
    path: src/net/Client/MediaDataServiceContext.cs
    startLine: 104
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  syntax:
    content: public void AttachTo(string entitySetName, object entity, string etag)
    content.vb: Public Sub AttachTo(entitySetName As String, entity As Object, etag As String)
    parameters:
    - id: entitySetName
      type: System.String
    - id: entity
      type: System.Object
    - id: etag
      type: System.String
  implements:
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AttachTo(System.String,System.Object,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.DeleteObject(System.Object)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.DeleteObject(System.Object)
  id: DeleteObject(System.Object)
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext
  langs:
  - csharp
  - vb
  name: DeleteObject(Object)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.DeleteObject(System.Object)
  type: Method
  source:
    remote:
      path: src/net/Client/MediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: DeleteObject
    path: src/net/Client/MediaDataServiceContext.cs
    startLine: 115
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nChanges the state of the specified object to be deleted in the System.Data.Services.Client.DataServiceContext.\nRemarks:\n    Existing objects in the Added state become detached.\n"
  example: []
  syntax:
    content: public void DeleteObject(object entity)
    content.vb: Public Sub DeleteObject(entity As Object)
    parameters:
    - id: entity
      type: System.Object
      description: The tracked entity to be changed to the deleted state.
  implements:
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.DeleteObject(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.Execute``1(System.Uri)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.Execute``1(System.Uri)
  id: Execute``1(System.Uri)
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext
  langs:
  - csharp
  - vb
  name: Execute<TElement>(Uri)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.Execute<TElement>(System.Uri)
  type: Method
  source:
    remote:
      path: src/net/Client/MediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Execute
    path: src/net/Client/MediaDataServiceContext.cs
    startLine: 127
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nSends a request to the data service to execute a specific URI.Not supported\nby the WCF Data Services 5.0 client for Silverlight.\n"
  example: []
  syntax:
    content: public IEnumerable<TElement> Execute<TElement>(Uri requestUri)
    content.vb: Public Function Execute(Of TElement)(requestUri As Uri) As IEnumerable(Of TElement)
    parameters:
    - id: requestUri
      type: System.Uri
      description: The URI to which the query request will be sent. The URI may be any valid data service URI. Can contain $ query parameters.
    typeParameters:
    - id: TElement
      description: The type that the query returns.
    return:
      type: System.Collections.Generic.IEnumerable{{TElement}}
      description: The results of the query operation.
  implements:
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.Execute``1(System.Uri)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.Execute(Of TElement)(System.Uri)
  name.vb: Execute(Of TElement)(Uri)
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.Execute(System.Uri,System.String,System.Data.Services.Client.OperationParameter[])
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.Execute(System.Uri,System.String,System.Data.Services.Client.OperationParameter[])
  id: Execute(System.Uri,System.String,System.Data.Services.Client.OperationParameter[])
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext
  langs:
  - csharp
  - vb
  name: Execute(Uri, String, OperationParameter[])
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.Execute(System.Uri, System.String, System.Data.Services.Client.OperationParameter[])
  type: Method
  source:
    remote:
      path: src/net/Client/MediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Execute
    path: src/net/Client/MediaDataServiceContext.cs
    startLine: 142
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nSends a request to the data service to execute a specific URI by using a\nspecific HTTP method.Not supported by the WCF Data Services 5.0 client for\nSilverlight.\nThis overload expects the requestUri to end with a ServiceOperation or ServiceAction that returns void.\n"
  example: []
  syntax:
    content: public OperationResponse Execute(Uri requestUri, string httpMethod, params OperationParameter[] operationParameters)
    content.vb: Public Function Execute(requestUri As Uri, httpMethod As String, ParamArray operationParameters As OperationParameter()) As OperationResponse
    parameters:
    - id: requestUri
      type: System.Uri
      description: The URI to which the query request will be sent. The URI may be any valid data service URI. Can contain $ query parameters.
    - id: httpMethod
      type: System.String
      description: The HTTP data transfer method used by the client.
    - id: operationParameters
      type: System.Data.Services.Client.OperationParameter[]
      description: The operation parameters used.
    return:
      type: System.Data.Services.Client.OperationResponse
      description: The response of the operation.
  implements:
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.Execute(System.Uri,System.String,System.Data.Services.Client.OperationParameter[])
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.Execute(System.Uri, System.String, System.Data.Services.Client.OperationParameter())
  name.vb: Execute(Uri, String, OperationParameter())
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.AddObject(System.String,System.Object)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.AddObject(System.String,System.Object)
  id: AddObject(System.String,System.Object)
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext
  langs:
  - csharp
  - vb
  name: AddObject(String, Object)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.AddObject(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/net/Client/MediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: AddObject
    path: src/net/Client/MediaDataServiceContext.cs
    startLine: 155
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  syntax:
    content: public void AddObject(string entitySetName, object entity)
    content.vb: Public Sub AddObject(entitySetName As String, entity As Object)
    parameters:
    - id: entitySetName
      type: System.String
    - id: entity
      type: System.Object
  implements:
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AddObject(System.String,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.LoadProperty(System.Object,System.String)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.LoadProperty(System.Object,System.String)
  id: LoadProperty(System.Object,System.String)
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext
  langs:
  - csharp
  - vb
  name: LoadProperty(Object, String)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.LoadProperty(System.Object, System.String)
  type: Method
  source:
    remote:
      path: src/net/Client/MediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: LoadProperty
    path: src/net/Client/MediaDataServiceContext.cs
    startLine: 174
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nLoads deferred content for a specified property from the data service.Not\n supported by the WCF Data Services 5.0 client for Silverlight.\nRemarks:\n    If entity is in in detached or added state, this method will throw an InvalidOperationException\n    since there is nothing it can load from the server.  If entity is in unchanged\n    or modified state, this method will load its collection or reference elements\n    as unchanged with unchanged bindings.  If entity is in deleted state, this\n    method will load the entities linked to by its collection or reference property\n    in the unchanged state with bindings in the deleted state.\n"
  example: []
  syntax:
    content: public QueryOperationResponse LoadProperty(object entity, string propertyName)
    content.vb: Public Function LoadProperty(entity As Object, propertyName As String) As QueryOperationResponse
    parameters:
    - id: entity
      type: System.Object
      description: The entity that contains the property to load.
    - id: propertyName
      type: System.String
      description: The name of the property of the specified entity to load.
    return:
      type: System.Data.Services.Client.QueryOperationResponse
      description: The response to the load operation.
  implements:
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadProperty(System.Object,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.UpdateObject(System.Object)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.UpdateObject(System.Object)
  id: UpdateObject(System.Object)
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext
  langs:
  - csharp
  - vb
  name: UpdateObject(Object)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.UpdateObject(System.Object)
  type: Method
  source:
    remote:
      path: src/net/Client/MediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: UpdateObject
    path: src/net/Client/MediaDataServiceContext.cs
    startLine: 183
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nChanges the state of the specified object in the System.Data.Services.Client.DataServiceContext to System.Data.Services.Client.EntityStates.Modified.\n"
  example: []
  syntax:
    content: public void UpdateObject(object entity)
    content.vb: Public Sub UpdateObject(entity As Object)
    parameters:
    - id: entity
      type: System.Object
      description: The tracked entity to be assigned to the System.Data.Services.Client.EntityStates.Modified state.
  implements:
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.UpdateObject(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.SetLink(System.Object,System.String,System.Object)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.SetLink(System.Object,System.String,System.Object)
  id: SetLink(System.Object,System.String,System.Object)
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext
  langs:
  - csharp
  - vb
  name: SetLink(Object, String, Object)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.SetLink(System.Object, System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/net/Client/MediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: SetLink
    path: src/net/Client/MediaDataServiceContext.cs
    startLine: 208
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nNotifies the System.Data.Services.Client.DataServiceContext that a new link\nexists between the objects specified and that the link is represented by\nthe property specified by the sourceProperty parameter.\nRemarks:\n    Notifies the context that a modified link exists between the source and target\n    objects and that the link is represented via the source.sourceProperty which\n    is a reference.  The context adds this link to the set of modified created\n    links to be sent to the data service on the next call to SaveChanges(). \n    Links are one way relationships. If a back pointer exists (ie. two way association),\n    this method should be called a second time to notify the context object of\n    the second link. \n"
  example: []
  syntax:
    content: public void SetLink(object source, string sourceProperty, object target)
    content.vb: Public Sub SetLink(source As Object, sourceProperty As String, target As Object)
    parameters:
    - id: source
      type: System.Object
      description: The source object for the new link.
    - id: sourceProperty
      type: System.String
      description: The property on the source object that identifies the target object of the new link.
    - id: target
      type: System.Object
      description: >
        The child object involved in the new link that is to be initialized by calling

        this method. The target object must be a subtype of the type identified by

        the sourceProperty parameter. If target is set to null, the call represents

        a delete link operation.
  implements:
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SetLink(System.Object,System.String,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.AddLink(System.Object,System.String,System.Object)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.AddLink(System.Object,System.String,System.Object)
  id: AddLink(System.Object,System.String,System.Object)
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext
  langs:
  - csharp
  - vb
  name: AddLink(Object, String, Object)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.AddLink(System.Object, System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/net/Client/MediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: AddLink
    path: src/net/Client/MediaDataServiceContext.cs
    startLine: 228
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  syntax:
    content: public void AddLink(object source, string sourceProperty, object target)
    content.vb: Public Sub AddLink(source As Object, sourceProperty As String, target As Object)
    parameters:
    - id: source
      type: System.Object
    - id: sourceProperty
      type: System.String
    - id: target
      type: System.Object
  implements:
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AddLink(System.Object,System.String,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.SaveChanges
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.SaveChanges
  id: SaveChanges
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext
  langs:
  - csharp
  - vb
  name: SaveChanges()
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.SaveChanges()
  type: Method
  source:
    remote:
      path: src/net/Client/MediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: SaveChanges
    path: src/net/Client/MediaDataServiceContext.cs
    startLine: 240
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nSaves the changes that the System.Data.Services.Client.DataServiceContext\nis tracking to storage.Not supported by the WCF Data Services 5.0 client\nfor Silverlight. \n"
  example: []
  syntax:
    content: public IMediaDataServiceResponse SaveChanges()
    content.vb: Public Function SaveChanges As IMediaDataServiceResponse
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceResponse
      description: >-
        A System.Data.Services.Client.DataServiceResponse that contains status, headers,

        and errors that result from the call to System.Data.Services.Client.DataServiceContext.SaveChanges.Remarks.
  implements:
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChanges
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.DeleteLink(System.Object,System.String,System.Object)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.DeleteLink(System.Object,System.String,System.Object)
  id: DeleteLink(System.Object,System.String,System.Object)
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext
  langs:
  - csharp
  - vb
  name: DeleteLink(Object, String, Object)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.DeleteLink(System.Object, System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/net/Client/MediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: DeleteLink
    path: src/net/Client/MediaDataServiceContext.cs
    startLine: 261
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nChanges the state of the link to deleted in the list of links being tracked\nby the System.Data.Services.Client.DataServiceContext.\nRemarks:\n    Notifies the context that a link exists between the source and target object\n    and that the link is represented via the source.sourceProperty which is a\n    collection.  The context adds this link to the set of deleted links to be\n    sent to the data service on the next call to SaveChanges().  If the specified\n    link exists in the \"Added\" state, then the link is detached (see DetachLink\n    method) instead. \n"
  example: []
  syntax:
    content: public void DeleteLink(object source, string sourceProperty, object target)
    content.vb: Public Sub DeleteLink(source As Object, sourceProperty As String, target As Object)
    parameters:
    - id: source
      type: System.Object
      description: The source object in the link to be marked for deletion.
    - id: sourceProperty
      type: System.String
      description: The name of the navigation property on the source object that is used to access the target object.
    - id: target
      type: System.Object
      description: >-
        The target object involved in the link that is bound to the source object.

        The target object must be of the type identified by the source property or

        a subtype.
  implements:
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.DeleteLink(System.Object,System.String,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.AddRelatedObject(System.Object,System.String,System.Object)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.AddRelatedObject(System.Object,System.String,System.Object)
  id: AddRelatedObject(System.Object,System.String,System.Object)
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext
  langs:
  - csharp
  - vb
  name: AddRelatedObject(Object, String, Object)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.AddRelatedObject(System.Object, System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/net/Client/MediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: AddRelatedObject
    path: src/net/Client/MediaDataServiceContext.cs
    startLine: 272
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nAdds a related object to the context and creates the link that defines the relationship between the two objects in a single request.\n"
  example: []
  syntax:
    content: public void AddRelatedObject(object source, string sourceProperty, object target)
    content.vb: Public Sub AddRelatedObject(source As Object, sourceProperty As String, target As Object)
    parameters:
    - id: source
      type: System.Object
      description: The parent object that is being tracked by the context.
    - id: sourceProperty
      type: System.String
      description: The name of the navigation property that returns the related object based on an association between the two entities.
    - id: target
      type: System.Object
      description: The related object that is being added.
  implements:
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AddRelatedObject(System.Object,System.String,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.ExecuteAsync``1(System.Data.Services.Client.DataServiceQueryContinuation{``0},System.Object)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.ExecuteAsync``1(System.Data.Services.Client.DataServiceQueryContinuation{``0},System.Object)
  id: ExecuteAsync``1(System.Data.Services.Client.DataServiceQueryContinuation{``0},System.Object)
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext
  langs:
  - csharp
  - vb
  name: ExecuteAsync<T>(DataServiceQueryContinuation<T>, Object)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.ExecuteAsync<T>(System.Data.Services.Client.DataServiceQueryContinuation<T>, System.Object)
  type: Method
  source:
    remote:
      path: src/net/Client/MediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ExecuteAsync
    path: src/net/Client/MediaDataServiceContext.cs
    startLine: 284
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nExecutes the operation asynchronously.\n"
  example: []
  syntax:
    content: public Task<IEnumerable<T>> ExecuteAsync<T>(DataServiceQueryContinuation<T> continuation, object state)
    content.vb: Public Function ExecuteAsync(Of T)(continuation As DataServiceQueryContinuation(Of T), state As Object) As Task(Of IEnumerable(Of T))
    parameters:
    - id: continuation
      type: System.Data.Services.Client.DataServiceQueryContinuation{{T}}
      description: The continuation.
    - id: state
      type: System.Object
      description: The state.
    typeParameters:
    - id: T
      description: The type of the element.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{T}}}
      description: A function delegate that returns the future result to be available through the Task.
  implements:
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync``1(System.Data.Services.Client.DataServiceQueryContinuation{{T}},System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.ExecuteAsync(Of T)(System.Data.Services.Client.DataServiceQueryContinuation(Of T), System.Object)
  name.vb: ExecuteAsync(Of T)(DataServiceQueryContinuation(Of T), Object)
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.ExecuteAsync``1(System.Uri,System.Object)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.ExecuteAsync``1(System.Uri,System.Object)
  id: ExecuteAsync``1(System.Uri,System.Object)
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext
  langs:
  - csharp
  - vb
  name: ExecuteAsync<T>(Uri, Object)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.ExecuteAsync<T>(System.Uri, System.Object)
  type: Method
  source:
    remote:
      path: src/net/Client/MediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ExecuteAsync
    path: src/net/Client/MediaDataServiceContext.cs
    startLine: 296
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nExecutes the operation asynchronously.\n"
  example: []
  syntax:
    content: public Task<IEnumerable<T>> ExecuteAsync<T>(Uri requestUri, object state)
    content.vb: Public Function ExecuteAsync(Of T)(requestUri As Uri, state As Object) As Task(Of IEnumerable(Of T))
    parameters:
    - id: requestUri
      type: System.Uri
      description: The request URI.
    - id: state
      type: System.Object
      description: The state.
    typeParameters:
    - id: T
      description: The type of the element.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{T}}}
      description: A function delegate that returns the future result to be available through the Task.
  implements:
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync``1(System.Uri,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.ExecuteAsync(Of T)(System.Uri, System.Object)
  name.vb: ExecuteAsync(Of T)(Uri, Object)
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.ExecuteAsync(System.Uri,System.Object,System.String)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.ExecuteAsync(System.Uri,System.Object,System.String)
  id: ExecuteAsync(System.Uri,System.Object,System.String)
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext
  langs:
  - csharp
  - vb
  name: ExecuteAsync(Uri, Object, String)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.ExecuteAsync(System.Uri, System.Object, System.String)
  type: Method
  source:
    remote:
      path: src/net/Client/MediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ExecuteAsync
    path: src/net/Client/MediaDataServiceContext.cs
    startLine: 308
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nExecutes the asynchronously.\n"
  example: []
  syntax:
    content: public Task<OperationResponse> ExecuteAsync(Uri requestUri, object state, string httpMethod)
    content.vb: Public Function ExecuteAsync(requestUri As Uri, state As Object, httpMethod As String) As Task(Of OperationResponse)
    parameters:
    - id: requestUri
      type: System.Uri
      description: The request URI.
    - id: state
      type: System.Object
      description: The state.
    - id: httpMethod
      type: System.String
      description: The HTTP method.
    return:
      type: System.Threading.Tasks.Task{System.Data.Services.Client.OperationResponse}
      description: A function delegate that returns the future result to be available through the Task.
  implements:
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync(System.Uri,System.Object,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.ExecuteAsync(System.Uri,System.String,System.Boolean,System.Data.Services.Client.OperationParameter[])
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.ExecuteAsync(System.Uri,System.String,System.Boolean,System.Data.Services.Client.OperationParameter[])
  id: ExecuteAsync(System.Uri,System.String,System.Boolean,System.Data.Services.Client.OperationParameter[])
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext
  langs:
  - csharp
  - vb
  name: ExecuteAsync(Uri, String, Boolean, OperationParameter[])
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.ExecuteAsync(System.Uri, System.String, System.Boolean, System.Data.Services.Client.OperationParameter[])
  type: Method
  source:
    remote:
      path: src/net/Client/MediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ExecuteAsync
    path: src/net/Client/MediaDataServiceContext.cs
    startLine: 325
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nExecutes the url method asynchronously.\n"
  example: []
  syntax:
    content: public Task<IEnumerable<string>> ExecuteAsync(Uri requestUri, string httpMethod, bool singleResult, params OperationParameter[] parameters)
    content.vb: Public Function ExecuteAsync(requestUri As Uri, httpMethod As String, singleResult As Boolean, ParamArray parameters As OperationParameter()) As Task(Of IEnumerable(Of String))
    parameters:
    - id: requestUri
      type: System.Uri
      description: The request URI.
    - id: httpMethod
      type: System.String
      description: The HTTP method.
    - id: singleResult
      type: System.Boolean
      description: Whether a single result is expected or not.
    - id: parameters
      type: System.Data.Services.Client.OperationParameter[]
      description: OperationParameters to be sent with the Execute request.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{System.String}}
      description: A function delegate that returns the future result to be available through the Task.
  implements:
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync(System.Uri,System.String,System.Boolean,System.Data.Services.Client.OperationParameter[])
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.ExecuteAsync(System.Uri, System.String, System.Boolean, System.Data.Services.Client.OperationParameter())
  name.vb: ExecuteAsync(Uri, String, Boolean, OperationParameter())
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.ExecuteBatchAsync(System.Object,System.Data.Services.Client.DataServiceRequest[])
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.ExecuteBatchAsync(System.Object,System.Data.Services.Client.DataServiceRequest[])
  id: ExecuteBatchAsync(System.Object,System.Data.Services.Client.DataServiceRequest[])
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext
  langs:
  - csharp
  - vb
  name: ExecuteBatchAsync(Object, DataServiceRequest[])
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.ExecuteBatchAsync(System.Object, System.Data.Services.Client.DataServiceRequest[])
  type: Method
  source:
    remote:
      path: src/net/Client/MediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ExecuteBatchAsync
    path: src/net/Client/MediaDataServiceContext.cs
    startLine: 342
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nExecutes the batch operation asynchronously.\n"
  example: []
  syntax:
    content: public Task<DataServiceResponse> ExecuteBatchAsync(object state, params DataServiceRequest[] queries)
    content.vb: Public Function ExecuteBatchAsync(state As Object, ParamArray queries As DataServiceRequest()) As Task(Of DataServiceResponse)
    parameters:
    - id: state
      type: System.Object
      description: The state.
    - id: queries
      type: System.Data.Services.Client.DataServiceRequest[]
      description: The queries.
    return:
      type: System.Threading.Tasks.Task{System.Data.Services.Client.DataServiceResponse}
      description: A function delegate that returns the future result to be available through the Task.
  implements:
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteBatchAsync(System.Object,System.Data.Services.Client.DataServiceRequest[])
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.ExecuteBatchAsync(System.Object, System.Data.Services.Client.DataServiceRequest())
  name.vb: ExecuteBatchAsync(Object, DataServiceRequest())
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.GetReadStreamAsync(System.Object,System.Data.Services.Client.DataServiceRequestArgs,System.Object)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.GetReadStreamAsync(System.Object,System.Data.Services.Client.DataServiceRequestArgs,System.Object)
  id: GetReadStreamAsync(System.Object,System.Data.Services.Client.DataServiceRequestArgs,System.Object)
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext
  langs:
  - csharp
  - vb
  name: GetReadStreamAsync(Object, DataServiceRequestArgs, Object)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.GetReadStreamAsync(System.Object, System.Data.Services.Client.DataServiceRequestArgs, System.Object)
  type: Method
  source:
    remote:
      path: src/net/Client/MediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: GetReadStreamAsync
    path: src/net/Client/MediaDataServiceContext.cs
    startLine: 354
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets the read stream asynchronously.\n"
  example: []
  syntax:
    content: public Task<DataServiceStreamResponse> GetReadStreamAsync(object entity, DataServiceRequestArgs args, object state)
    content.vb: Public Function GetReadStreamAsync(entity As Object, args As DataServiceRequestArgs, state As Object) As Task(Of DataServiceStreamResponse)
    parameters:
    - id: entity
      type: System.Object
      description: The entity.
    - id: args
      type: System.Data.Services.Client.DataServiceRequestArgs
      description: The args.
    - id: state
      type: System.Object
      description: The state.
    return:
      type: System.Threading.Tasks.Task{System.Data.Services.Client.DataServiceStreamResponse}
      description: A function delegate that returns the future result to be available through the Task.
  implements:
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.GetReadStreamAsync(System.Object,System.Data.Services.Client.DataServiceRequestArgs,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.LoadPropertyAsync(System.Object,System.String,System.Object)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.LoadPropertyAsync(System.Object,System.String,System.Object)
  id: LoadPropertyAsync(System.Object,System.String,System.Object)
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext
  langs:
  - csharp
  - vb
  name: LoadPropertyAsync(Object, String, Object)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.LoadPropertyAsync(System.Object, System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/net/Client/MediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: LoadPropertyAsync
    path: src/net/Client/MediaDataServiceContext.cs
    startLine: 367
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nLoads the property asynchronously.\n"
  example: []
  syntax:
    content: public Task<QueryOperationResponse> LoadPropertyAsync(object entity, string propertyName, object state)
    content.vb: Public Function LoadPropertyAsync(entity As Object, propertyName As String, state As Object) As Task(Of QueryOperationResponse)
    parameters:
    - id: entity
      type: System.Object
      description: The entity.
    - id: propertyName
      type: System.String
      description: Name of the property.
    - id: state
      type: System.Object
      description: The state.
    return:
      type: System.Threading.Tasks.Task{System.Data.Services.Client.QueryOperationResponse}
      description: A function delegate that returns the future result to be available through the Task.
  implements:
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadPropertyAsync(System.Object,System.String,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.LoadPropertyAsync(System.Object,System.String,System.Data.Services.Client.DataServiceQueryContinuation,System.Object)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.LoadPropertyAsync(System.Object,System.String,System.Data.Services.Client.DataServiceQueryContinuation,System.Object)
  id: LoadPropertyAsync(System.Object,System.String,System.Data.Services.Client.DataServiceQueryContinuation,System.Object)
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext
  langs:
  - csharp
  - vb
  name: LoadPropertyAsync(Object, String, DataServiceQueryContinuation, Object)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.LoadPropertyAsync(System.Object, System.String, System.Data.Services.Client.DataServiceQueryContinuation, System.Object)
  type: Method
  source:
    remote:
      path: src/net/Client/MediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: LoadPropertyAsync
    path: src/net/Client/MediaDataServiceContext.cs
    startLine: 381
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nLoads the property asynchronously.\n"
  example: []
  syntax:
    content: public Task<QueryOperationResponse> LoadPropertyAsync(object entity, string propertyName, DataServiceQueryContinuation continuation, object state)
    content.vb: Public Function LoadPropertyAsync(entity As Object, propertyName As String, continuation As DataServiceQueryContinuation, state As Object) As Task(Of QueryOperationResponse)
    parameters:
    - id: entity
      type: System.Object
      description: The entity.
    - id: propertyName
      type: System.String
      description: Name of the property.
    - id: continuation
      type: System.Data.Services.Client.DataServiceQueryContinuation
      description: The continuation.
    - id: state
      type: System.Object
      description: The state.
    return:
      type: System.Threading.Tasks.Task{System.Data.Services.Client.QueryOperationResponse}
      description: A function delegate that returns the future result to be available through the Task.
  implements:
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadPropertyAsync(System.Object,System.String,System.Data.Services.Client.DataServiceQueryContinuation,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.LoadPropertyAsync(System.Object,System.String,System.Uri,System.Object)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.LoadPropertyAsync(System.Object,System.String,System.Uri,System.Object)
  id: LoadPropertyAsync(System.Object,System.String,System.Uri,System.Object)
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext
  langs:
  - csharp
  - vb
  name: LoadPropertyAsync(Object, String, Uri, Object)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.LoadPropertyAsync(System.Object, System.String, System.Uri, System.Object)
  type: Method
  source:
    remote:
      path: src/net/Client/MediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: LoadPropertyAsync
    path: src/net/Client/MediaDataServiceContext.cs
    startLine: 395
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nLoads the property asynchronously.\n"
  example: []
  syntax:
    content: public Task<QueryOperationResponse> LoadPropertyAsync(object entity, string propertyName, Uri nextLinkUri, object state)
    content.vb: Public Function LoadPropertyAsync(entity As Object, propertyName As String, nextLinkUri As Uri, state As Object) As Task(Of QueryOperationResponse)
    parameters:
    - id: entity
      type: System.Object
      description: The entity.
    - id: propertyName
      type: System.String
      description: Name of the property.
    - id: nextLinkUri
      type: System.Uri
      description: The next link URI.
    - id: state
      type: System.Object
      description: The state.
    return:
      type: System.Threading.Tasks.Task{System.Data.Services.Client.QueryOperationResponse}
      description: A function delegate that returns the future result to be available through the Task.
  implements:
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadPropertyAsync(System.Object,System.String,System.Uri,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.SaveChangesAsync(System.Object)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.SaveChangesAsync(System.Object)
  id: SaveChangesAsync(System.Object)
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext
  langs:
  - csharp
  - vb
  name: SaveChangesAsync(Object)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.SaveChangesAsync(System.Object)
  type: Method
  source:
    remote:
      path: src/net/Client/MediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: SaveChangesAsync
    path: src/net/Client/MediaDataServiceContext.cs
    startLine: 406
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nSaves the changes asynchronously.\n"
  example: []
  syntax:
    content: public Task<IMediaDataServiceResponse> SaveChangesAsync(object state)
    content.vb: Public Function SaveChangesAsync(state As Object) As Task(Of IMediaDataServiceResponse)
    parameters:
    - id: state
      type: System.Object
      description: The state.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceResponse}
      description: A function delegate that returns the future result to be available through the Task.
  implements:
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChangesAsync(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.SaveChangesAsync(System.Data.Services.Client.SaveChangesOptions,System.Object)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.SaveChangesAsync(System.Data.Services.Client.SaveChangesOptions,System.Object)
  id: SaveChangesAsync(System.Data.Services.Client.SaveChangesOptions,System.Object)
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext
  langs:
  - csharp
  - vb
  name: SaveChangesAsync(SaveChangesOptions, Object)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.SaveChangesAsync(System.Data.Services.Client.SaveChangesOptions, System.Object)
  type: Method
  source:
    remote:
      path: src/net/Client/MediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: SaveChangesAsync
    path: src/net/Client/MediaDataServiceContext.cs
    startLine: 418
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nSaves the changes asynchronously.\n"
  example: []
  syntax:
    content: public Task<IMediaDataServiceResponse> SaveChangesAsync(SaveChangesOptions options, object state)
    content.vb: Public Function SaveChangesAsync(options As SaveChangesOptions, state As Object) As Task(Of IMediaDataServiceResponse)
    parameters:
    - id: options
      type: System.Data.Services.Client.SaveChangesOptions
      description: The options.
    - id: state
      type: System.Object
      description: The state.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceResponse}
      description: A function delegate that returns the future result to be available through the Task.
  implements:
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChangesAsync(System.Data.Services.Client.SaveChangesOptions,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.SaveChangesAsync(System.Data.Services.Client.SaveChangesOptions,System.Object,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.SaveChangesAsync(System.Data.Services.Client.SaveChangesOptions,System.Object,System.Threading.CancellationToken)
  id: SaveChangesAsync(System.Data.Services.Client.SaveChangesOptions,System.Object,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext
  langs:
  - csharp
  - vb
  name: SaveChangesAsync(SaveChangesOptions, Object, CancellationToken)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.SaveChangesAsync(System.Data.Services.Client.SaveChangesOptions, System.Object, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/net/Client/MediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: SaveChangesAsync
    path: src/net/Client/MediaDataServiceContext.cs
    startLine: 428
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  syntax:
    content: public Task<IMediaDataServiceResponse> SaveChangesAsync(SaveChangesOptions options, object state, CancellationToken token)
    content.vb: Public Function SaveChangesAsync(options As SaveChangesOptions, state As Object, token As CancellationToken) As Task(Of IMediaDataServiceResponse)
    parameters:
    - id: options
      type: System.Data.Services.Client.SaveChangesOptions
    - id: state
      type: System.Object
    - id: token
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceResponse}
  implements:
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChangesAsync(System.Data.Services.Client.SaveChangesOptions,System.Object,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.AdaptExecuteAsync(System.Func{System.Threading.Tasks.Task})
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.AdaptExecuteAsync(System.Func{System.Threading.Tasks.Task})
  id: AdaptExecuteAsync(System.Func{System.Threading.Tasks.Task})
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext
  langs:
  - csharp
  - vb
  name: AdaptExecuteAsync(Func<Task>)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.AdaptExecuteAsync(System.Func<System.Threading.Tasks.Task>)
  type: Method
  source:
    remote:
      path: src/net/Client/MediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: AdaptExecuteAsync
    path: src/net/Client/MediaDataServiceContext.cs
    startLine: 448
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  syntax:
    content: public Func<Task> AdaptExecuteAsync(Func<Task> taskFunc)
    content.vb: Public Function AdaptExecuteAsync(taskFunc As Func(Of Task)) As Func(Of Task)
    parameters:
    - id: taskFunc
      type: System.Func{System.Threading.Tasks.Task}
    return:
      type: System.Func{System.Threading.Tasks.Task}
  implements:
  - Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAsync(System.Func{System.Threading.Tasks.Task})
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.AdaptExecuteAsync(System.Func(Of System.Threading.Tasks.Task))
  name.vb: AdaptExecuteAsync(Func(Of Task))
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.Microsoft#WindowsAzure#MediaServices#Client#TransientFaultHandling#IRetryPolicyAdapter#AdaptExecuteAction``1(System.Func{``0})
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.Microsoft#WindowsAzure#MediaServices#Client#TransientFaultHandling#IRetryPolicyAdapter#AdaptExecuteAction``1(System.Func{``0})
  id: Microsoft#WindowsAzure#MediaServices#Client#TransientFaultHandling#IRetryPolicyAdapter#AdaptExecuteAction``1(System.Func{``0})
  isEii: true
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext
  langs:
  - csharp
  - vb
  name: IRetryPolicyAdapter.AdaptExecuteAction<TResult>(Func<TResult>)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAction<TResult>(System.Func<TResult>)
  type: Method
  source:
    remote:
      path: src/net/Client/MediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAction
    path: src/net/Client/MediaDataServiceContext.cs
    startLine: 454
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  syntax:
    content: Func<TResult> IRetryPolicyAdapter.AdaptExecuteAction<TResult>(Func<TResult> func)
    content.vb: Function Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAction(Of TResult)(func As Func(Of TResult)) As Func(Of TResult) Implements IRetryPolicyAdapter.AdaptExecuteAction
    parameters:
    - id: func
      type: System.Func{{TResult}}
    typeParameters:
    - id: TResult
    return:
      type: System.Func{{TResult}}
  implements:
  - Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAction``1(System.Func{{TResult}})
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAction(Of TResult)(System.Func(Of TResult))
  name.vb: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAction(Of TResult)(Func(Of TResult))
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.Microsoft#WindowsAzure#MediaServices#Client#TransientFaultHandling#IRetryPolicyAdapter#AdaptExecuteAsync``1(System.Func{System.Threading.Tasks.Task{``0}})
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.Microsoft#WindowsAzure#MediaServices#Client#TransientFaultHandling#IRetryPolicyAdapter#AdaptExecuteAsync``1(System.Func{System.Threading.Tasks.Task{``0}})
  id: Microsoft#WindowsAzure#MediaServices#Client#TransientFaultHandling#IRetryPolicyAdapter#AdaptExecuteAsync``1(System.Func{System.Threading.Tasks.Task{``0}})
  isEii: true
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext
  langs:
  - csharp
  - vb
  name: IRetryPolicyAdapter.AdaptExecuteAsync<TResult>(Func<Task<TResult>>)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAsync<TResult>(System.Func<System.Threading.Tasks.Task<TResult>>)
  type: Method
  source:
    remote:
      path: src/net/Client/MediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAsync
    path: src/net/Client/MediaDataServiceContext.cs
    startLine: 460
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  syntax:
    content: Func<Task<TResult>> IRetryPolicyAdapter.AdaptExecuteAsync<TResult>(Func<Task<TResult>> taskFunc)
    content.vb: Function Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAsync(Of TResult)(taskFunc As Func(Of Task(Of TResult))) As Func(Of Task(Of TResult)) Implements IRetryPolicyAdapter.AdaptExecuteAsync
    parameters:
    - id: taskFunc
      type: System.Func{System.Threading.Tasks.Task{{TResult}}}
    typeParameters:
    - id: TResult
    return:
      type: System.Func{System.Threading.Tasks.Task{{TResult}}}
  implements:
  - Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAsync``1(System.Func{System.Threading.Tasks.Task{{TResult}}})
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.MediaDataServiceContext.Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAsync(Of TResult)(System.Func(Of System.Threading.Tasks.Task(Of TResult)))
  name.vb: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAsync(Of TResult)(Func(Of Task(Of TResult)))
references:
- uid: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: Microsoft.WindowsAzure.MediaServices.Client
  fullName: Microsoft.WindowsAzure.MediaServices.Client
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: IMediaDataServiceContext
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
- uid: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter
  parent: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling
  isExternal: false
  name: IRetryPolicyAdapter
  fullName: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling
  isExternal: false
  name: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling
  fullName: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling
- uid: System.Data.Services.Client.DataServiceContext
  parent: System.Data.Services.Client
  isExternal: true
  name: DataServiceContext
  fullName: System.Data.Services.Client.DataServiceContext
- uid: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy
  parent: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling
  isExternal: false
  name: MediaRetryPolicy
  fullName: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.MediaRetryPolicy
- uid: Microsoft.WindowsAzure.MediaServices.Client.RequestAdapters.ClientRequestIdAdapter
  parent: Microsoft.WindowsAzure.MediaServices.Client.RequestAdapters
  isExternal: false
  name: ClientRequestIdAdapter
  fullName: Microsoft.WindowsAzure.MediaServices.Client.RequestAdapters.ClientRequestIdAdapter
- uid: System.Data.Services.Client
  isExternal: false
  name: System.Data.Services.Client
  fullName: System.Data.Services.Client
- uid: Microsoft.WindowsAzure.MediaServices.Client.RequestAdapters
  isExternal: false
  name: Microsoft.WindowsAzure.MediaServices.Client.RequestAdapters
  fullName: Microsoft.WindowsAzure.MediaServices.Client.RequestAdapters
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.IgnoreResourceNotFoundException
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  isExternal: false
  name: IgnoreResourceNotFoundException
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.IgnoreResourceNotFoundException
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.CreateQuery``2(System.String)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  definition: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.CreateQuery``2(System.String)
  name: CreateQuery<TIinterface, TData>(String)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.CreateQuery<TIinterface, TData>(System.String)
  fullname.vb: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.CreateQuery(Of TIinterface, TData)(System.String)
  name.vb: CreateQuery(Of TIinterface, TData)(String)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.CreateQuery``2(System.String)
    name: CreateQuery<TIinterface, TData>
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.CreateQuery<TIinterface, TData>
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.CreateQuery``2(System.String)
    name: CreateQuery(Of TIinterface, TData)
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.CreateQuery(Of TIinterface, TData)
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Linq.IQueryable{{TIinterface}}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<TIinterface>
  fullName: System.Linq.IQueryable<TIinterface>
  fullname.vb: System.Linq.IQueryable(Of TIinterface)
  name.vb: IQueryable(Of TIinterface)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    fullName: <
  - name: TIinterface
    fullName: TIinterface
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TIinterface
    fullName: TIinterface
  - name: )
    fullName: )
- uid: System.Linq.IQueryable`1
  parent: System.Linq
  isExternal: true
  name: IQueryable<T>
  fullName: System.Linq.IQueryable<T>
  fullname.vb: System.Linq.IQueryable(Of T)
  name.vb: IQueryable(Of T)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Linq
  isExternal: false
  name: System.Linq
  fullName: System.Linq
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AttachTo(System.String,System.Object)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  isExternal: true
  name: AttachTo(String, Object)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AttachTo(System.String, System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AttachTo(System.String,System.Object)
    name: AttachTo
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AttachTo
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AttachTo(System.String,System.Object)
    name: AttachTo
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AttachTo
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AttachTo(System.String,System.Object,System.String)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  isExternal: true
  name: AttachTo(String, Object, String)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AttachTo(System.String, System.Object, System.String)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AttachTo(System.String,System.Object,System.String)
    name: AttachTo
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AttachTo
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AttachTo(System.String,System.Object,System.String)
    name: AttachTo
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AttachTo
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.DeleteObject(System.Object)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  isExternal: true
  name: DeleteObject(Object)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.DeleteObject(System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.DeleteObject(System.Object)
    name: DeleteObject
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.DeleteObject
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.DeleteObject(System.Object)
    name: DeleteObject
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.DeleteObject
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.Execute``1(System.Uri)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  definition: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.Execute``1(System.Uri)
  name: Execute<TElement>(Uri)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.Execute<TElement>(System.Uri)
  fullname.vb: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.Execute(Of TElement)(System.Uri)
  name.vb: Execute(Of TElement)(Uri)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.Execute``1(System.Uri)
    name: Execute<TElement>
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.Execute<TElement>
  - name: (
    fullName: (
  - uid: System.Uri
    name: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.Execute``1(System.Uri)
    name: Execute(Of TElement)
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.Execute(Of TElement)
  - name: (
    fullName: (
  - uid: System.Uri
    name: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    fullName: )
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  fullName: System.Uri
- uid: System.Collections.Generic.IEnumerable{{TElement}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TElement>
  fullName: System.Collections.Generic.IEnumerable<TElement>
  fullname.vb: System.Collections.Generic.IEnumerable(Of TElement)
  name.vb: IEnumerable(Of TElement)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.Execute(System.Uri,System.String,System.Data.Services.Client.OperationParameter[])
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  isExternal: true
  name: Execute(Uri, String, OperationParameter[])
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.Execute(System.Uri, System.String, System.Data.Services.Client.OperationParameter[])
  fullname.vb: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.Execute(System.Uri, System.String, System.Data.Services.Client.OperationParameter())
  name.vb: Execute(Uri, String, OperationParameter())
  spec.csharp:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.Execute(System.Uri,System.String,System.Data.Services.Client.OperationParameter[])
    name: Execute
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.Execute
  - name: (
    fullName: (
  - uid: System.Uri
    name: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Data.Services.Client.OperationParameter
    name: OperationParameter
    fullName: System.Data.Services.Client.OperationParameter
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.Execute(System.Uri,System.String,System.Data.Services.Client.OperationParameter[])
    name: Execute
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.Execute
  - name: (
    fullName: (
  - uid: System.Uri
    name: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Data.Services.Client.OperationParameter
    name: OperationParameter
    fullName: System.Data.Services.Client.OperationParameter
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Data.Services.Client.OperationParameter[]
  isExternal: true
  name: OperationParameter[]
  fullName: System.Data.Services.Client.OperationParameter[]
  fullname.vb: System.Data.Services.Client.OperationParameter()
  name.vb: OperationParameter()
  spec.csharp:
  - uid: System.Data.Services.Client.OperationParameter
    name: OperationParameter
    fullName: System.Data.Services.Client.OperationParameter
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Data.Services.Client.OperationParameter
    name: OperationParameter
    fullName: System.Data.Services.Client.OperationParameter
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Data.Services.Client.OperationResponse
  parent: System.Data.Services.Client
  isExternal: true
  name: OperationResponse
  fullName: System.Data.Services.Client.OperationResponse
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AddObject(System.String,System.Object)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  isExternal: true
  name: AddObject(String, Object)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AddObject(System.String, System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AddObject(System.String,System.Object)
    name: AddObject
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AddObject
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AddObject(System.String,System.Object)
    name: AddObject
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AddObject
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadProperty(System.Object,System.String)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  isExternal: true
  name: LoadProperty(Object, String)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadProperty(System.Object, System.String)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadProperty(System.Object,System.String)
    name: LoadProperty
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadProperty
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadProperty(System.Object,System.String)
    name: LoadProperty
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadProperty
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Data.Services.Client.QueryOperationResponse
  parent: System.Data.Services.Client
  isExternal: true
  name: QueryOperationResponse
  fullName: System.Data.Services.Client.QueryOperationResponse
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.UpdateObject(System.Object)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  isExternal: true
  name: UpdateObject(Object)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.UpdateObject(System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.UpdateObject(System.Object)
    name: UpdateObject
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.UpdateObject
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.UpdateObject(System.Object)
    name: UpdateObject
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.UpdateObject
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SetLink(System.Object,System.String,System.Object)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  isExternal: true
  name: SetLink(Object, String, Object)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SetLink(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SetLink(System.Object,System.String,System.Object)
    name: SetLink
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SetLink
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SetLink(System.Object,System.String,System.Object)
    name: SetLink
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SetLink
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AddLink(System.Object,System.String,System.Object)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  isExternal: true
  name: AddLink(Object, String, Object)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AddLink(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AddLink(System.Object,System.String,System.Object)
    name: AddLink
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AddLink
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AddLink(System.Object,System.String,System.Object)
    name: AddLink
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AddLink
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChanges
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  isExternal: false
  name: SaveChanges()
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChanges()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChanges
    name: SaveChanges
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChanges
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChanges
    name: SaveChanges
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChanges
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceResponse
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: IMediaDataServiceResponse
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceResponse
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.DeleteLink(System.Object,System.String,System.Object)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  isExternal: true
  name: DeleteLink(Object, String, Object)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.DeleteLink(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.DeleteLink(System.Object,System.String,System.Object)
    name: DeleteLink
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.DeleteLink
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.DeleteLink(System.Object,System.String,System.Object)
    name: DeleteLink
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.DeleteLink
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AddRelatedObject(System.Object,System.String,System.Object)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  isExternal: true
  name: AddRelatedObject(Object, String, Object)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AddRelatedObject(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AddRelatedObject(System.Object,System.String,System.Object)
    name: AddRelatedObject
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AddRelatedObject
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AddRelatedObject(System.Object,System.String,System.Object)
    name: AddRelatedObject
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AddRelatedObject
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync``1(System.Data.Services.Client.DataServiceQueryContinuation{{T}},System.Object)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  definition: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync``1(System.Data.Services.Client.DataServiceQueryContinuation{``0},System.Object)
  name: ExecuteAsync<T>(DataServiceQueryContinuation<T>, Object)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync<T>(System.Data.Services.Client.DataServiceQueryContinuation<T>, System.Object)
  fullname.vb: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync(Of T)(System.Data.Services.Client.DataServiceQueryContinuation(Of T), System.Object)
  name.vb: ExecuteAsync(Of T)(DataServiceQueryContinuation(Of T), Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync``1(System.Data.Services.Client.DataServiceQueryContinuation{``0},System.Object)
    name: ExecuteAsync<T>
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync<T>
  - name: (
    fullName: (
  - uid: System.Data.Services.Client.DataServiceQueryContinuation`1
    name: DataServiceQueryContinuation
    fullName: System.Data.Services.Client.DataServiceQueryContinuation
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync``1(System.Data.Services.Client.DataServiceQueryContinuation{``0},System.Object)
    name: ExecuteAsync(Of T)
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync(Of T)
  - name: (
    fullName: (
  - uid: System.Data.Services.Client.DataServiceQueryContinuation`1
    name: DataServiceQueryContinuation
    fullName: System.Data.Services.Client.DataServiceQueryContinuation
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Data.Services.Client.DataServiceQueryContinuation{{T}}
  parent: System.Data.Services.Client
  definition: System.Data.Services.Client.DataServiceQueryContinuation`1
  name: DataServiceQueryContinuation<T>
  fullName: System.Data.Services.Client.DataServiceQueryContinuation<T>
  fullname.vb: System.Data.Services.Client.DataServiceQueryContinuation(Of T)
  name.vb: DataServiceQueryContinuation(Of T)
  spec.csharp:
  - uid: System.Data.Services.Client.DataServiceQueryContinuation`1
    name: DataServiceQueryContinuation
    fullName: System.Data.Services.Client.DataServiceQueryContinuation
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Data.Services.Client.DataServiceQueryContinuation`1
    name: DataServiceQueryContinuation
    fullName: System.Data.Services.Client.DataServiceQueryContinuation
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{T}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IEnumerable<T>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<T>>
  fullname.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of T))
  name.vb: Task(Of IEnumerable(Of T))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync``1(System.Data.Services.Client.DataServiceQueryContinuation{``0},System.Object)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  isExternal: true
  name: ExecuteAsync<T>(DataServiceQueryContinuation<T>, Object)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync<T>(System.Data.Services.Client.DataServiceQueryContinuation<T>, System.Object)
  fullname.vb: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync(Of T)(System.Data.Services.Client.DataServiceQueryContinuation(Of T), System.Object)
  name.vb: ExecuteAsync(Of T)(DataServiceQueryContinuation(Of T), Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync``1(System.Data.Services.Client.DataServiceQueryContinuation{``0},System.Object)
    name: ExecuteAsync<T>
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync<T>
  - name: (
    fullName: (
  - uid: System.Data.Services.Client.DataServiceQueryContinuation`1
    name: DataServiceQueryContinuation
    fullName: System.Data.Services.Client.DataServiceQueryContinuation
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync``1(System.Data.Services.Client.DataServiceQueryContinuation{``0},System.Object)
    name: ExecuteAsync(Of T)
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync(Of T)
  - name: (
    fullName: (
  - uid: System.Data.Services.Client.DataServiceQueryContinuation`1
    name: DataServiceQueryContinuation
    fullName: System.Data.Services.Client.DataServiceQueryContinuation
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Data.Services.Client.DataServiceQueryContinuation`1
  parent: System.Data.Services.Client
  isExternal: true
  name: DataServiceQueryContinuation<T>
  fullName: System.Data.Services.Client.DataServiceQueryContinuation<T>
  fullname.vb: System.Data.Services.Client.DataServiceQueryContinuation(Of T)
  name.vb: DataServiceQueryContinuation(Of T)
  spec.csharp:
  - uid: System.Data.Services.Client.DataServiceQueryContinuation`1
    name: DataServiceQueryContinuation
    fullName: System.Data.Services.Client.DataServiceQueryContinuation
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Data.Services.Client.DataServiceQueryContinuation`1
    name: DataServiceQueryContinuation
    fullName: System.Data.Services.Client.DataServiceQueryContinuation
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync``1(System.Uri,System.Object)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  definition: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync``1(System.Uri,System.Object)
  name: ExecuteAsync<T>(Uri, Object)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync<T>(System.Uri, System.Object)
  fullname.vb: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync(Of T)(System.Uri, System.Object)
  name.vb: ExecuteAsync(Of T)(Uri, Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync``1(System.Uri,System.Object)
    name: ExecuteAsync<T>
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync<T>
  - name: (
    fullName: (
  - uid: System.Uri
    name: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync``1(System.Uri,System.Object)
    name: ExecuteAsync(Of T)
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync(Of T)
  - name: (
    fullName: (
  - uid: System.Uri
    name: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync(System.Uri,System.Object,System.String)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  isExternal: true
  name: ExecuteAsync(Uri, Object, String)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync(System.Uri, System.Object, System.String)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync(System.Uri,System.Object,System.String)
    name: ExecuteAsync
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync
  - name: (
    fullName: (
  - uid: System.Uri
    name: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync(System.Uri,System.Object,System.String)
    name: ExecuteAsync
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync
  - name: (
    fullName: (
  - uid: System.Uri
    name: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Data.Services.Client.OperationResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<OperationResponse>
  fullName: System.Threading.Tasks.Task<System.Data.Services.Client.OperationResponse>
  fullname.vb: System.Threading.Tasks.Task(Of System.Data.Services.Client.OperationResponse)
  name.vb: Task(Of OperationResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Data.Services.Client.OperationResponse
    name: OperationResponse
    fullName: System.Data.Services.Client.OperationResponse
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Data.Services.Client.OperationResponse
    name: OperationResponse
    fullName: System.Data.Services.Client.OperationResponse
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync(System.Uri,System.String,System.Boolean,System.Data.Services.Client.OperationParameter[])
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  isExternal: true
  name: ExecuteAsync(Uri, String, Boolean, OperationParameter[])
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync(System.Uri, System.String, System.Boolean, System.Data.Services.Client.OperationParameter[])
  fullname.vb: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync(System.Uri, System.String, System.Boolean, System.Data.Services.Client.OperationParameter())
  name.vb: ExecuteAsync(Uri, String, Boolean, OperationParameter())
  spec.csharp:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync(System.Uri,System.String,System.Boolean,System.Data.Services.Client.OperationParameter[])
    name: ExecuteAsync
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync
  - name: (
    fullName: (
  - uid: System.Uri
    name: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Data.Services.Client.OperationParameter
    name: OperationParameter
    fullName: System.Data.Services.Client.OperationParameter
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync(System.Uri,System.String,System.Boolean,System.Data.Services.Client.OperationParameter[])
    name: ExecuteAsync
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync
  - name: (
    fullName: (
  - uid: System.Uri
    name: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Data.Services.Client.OperationParameter
    name: OperationParameter
    fullName: System.Data.Services.Client.OperationParameter
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{System.String}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IEnumerable<String>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<System.String>>
  fullname.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: Task(Of IEnumerable(Of String))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteBatchAsync(System.Object,System.Data.Services.Client.DataServiceRequest[])
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  isExternal: true
  name: ExecuteBatchAsync(Object, DataServiceRequest[])
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteBatchAsync(System.Object, System.Data.Services.Client.DataServiceRequest[])
  fullname.vb: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteBatchAsync(System.Object, System.Data.Services.Client.DataServiceRequest())
  name.vb: ExecuteBatchAsync(Object, DataServiceRequest())
  spec.csharp:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteBatchAsync(System.Object,System.Data.Services.Client.DataServiceRequest[])
    name: ExecuteBatchAsync
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteBatchAsync
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Data.Services.Client.DataServiceRequest
    name: DataServiceRequest
    fullName: System.Data.Services.Client.DataServiceRequest
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteBatchAsync(System.Object,System.Data.Services.Client.DataServiceRequest[])
    name: ExecuteBatchAsync
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteBatchAsync
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Data.Services.Client.DataServiceRequest
    name: DataServiceRequest
    fullName: System.Data.Services.Client.DataServiceRequest
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Data.Services.Client.DataServiceRequest[]
  isExternal: true
  name: DataServiceRequest[]
  fullName: System.Data.Services.Client.DataServiceRequest[]
  fullname.vb: System.Data.Services.Client.DataServiceRequest()
  name.vb: DataServiceRequest()
  spec.csharp:
  - uid: System.Data.Services.Client.DataServiceRequest
    name: DataServiceRequest
    fullName: System.Data.Services.Client.DataServiceRequest
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Data.Services.Client.DataServiceRequest
    name: DataServiceRequest
    fullName: System.Data.Services.Client.DataServiceRequest
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Threading.Tasks.Task{System.Data.Services.Client.DataServiceResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<DataServiceResponse>
  fullName: System.Threading.Tasks.Task<System.Data.Services.Client.DataServiceResponse>
  fullname.vb: System.Threading.Tasks.Task(Of System.Data.Services.Client.DataServiceResponse)
  name.vb: Task(Of DataServiceResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Data.Services.Client.DataServiceResponse
    name: DataServiceResponse
    fullName: System.Data.Services.Client.DataServiceResponse
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Data.Services.Client.DataServiceResponse
    name: DataServiceResponse
    fullName: System.Data.Services.Client.DataServiceResponse
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.GetReadStreamAsync(System.Object,System.Data.Services.Client.DataServiceRequestArgs,System.Object)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  isExternal: true
  name: GetReadStreamAsync(Object, DataServiceRequestArgs, Object)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.GetReadStreamAsync(System.Object, System.Data.Services.Client.DataServiceRequestArgs, System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.GetReadStreamAsync(System.Object,System.Data.Services.Client.DataServiceRequestArgs,System.Object)
    name: GetReadStreamAsync
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.GetReadStreamAsync
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Data.Services.Client.DataServiceRequestArgs
    name: DataServiceRequestArgs
    fullName: System.Data.Services.Client.DataServiceRequestArgs
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.GetReadStreamAsync(System.Object,System.Data.Services.Client.DataServiceRequestArgs,System.Object)
    name: GetReadStreamAsync
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.GetReadStreamAsync
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Data.Services.Client.DataServiceRequestArgs
    name: DataServiceRequestArgs
    fullName: System.Data.Services.Client.DataServiceRequestArgs
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Data.Services.Client.DataServiceRequestArgs
  parent: System.Data.Services.Client
  isExternal: true
  name: DataServiceRequestArgs
  fullName: System.Data.Services.Client.DataServiceRequestArgs
- uid: System.Threading.Tasks.Task{System.Data.Services.Client.DataServiceStreamResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<DataServiceStreamResponse>
  fullName: System.Threading.Tasks.Task<System.Data.Services.Client.DataServiceStreamResponse>
  fullname.vb: System.Threading.Tasks.Task(Of System.Data.Services.Client.DataServiceStreamResponse)
  name.vb: Task(Of DataServiceStreamResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Data.Services.Client.DataServiceStreamResponse
    name: DataServiceStreamResponse
    fullName: System.Data.Services.Client.DataServiceStreamResponse
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Data.Services.Client.DataServiceStreamResponse
    name: DataServiceStreamResponse
    fullName: System.Data.Services.Client.DataServiceStreamResponse
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadPropertyAsync(System.Object,System.String,System.Object)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  isExternal: true
  name: LoadPropertyAsync(Object, String, Object)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadPropertyAsync(System.Object, System.String, System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadPropertyAsync(System.Object,System.String,System.Object)
    name: LoadPropertyAsync
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadPropertyAsync
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadPropertyAsync(System.Object,System.String,System.Object)
    name: LoadPropertyAsync
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadPropertyAsync
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Data.Services.Client.QueryOperationResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<QueryOperationResponse>
  fullName: System.Threading.Tasks.Task<System.Data.Services.Client.QueryOperationResponse>
  fullname.vb: System.Threading.Tasks.Task(Of System.Data.Services.Client.QueryOperationResponse)
  name.vb: Task(Of QueryOperationResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Data.Services.Client.QueryOperationResponse
    name: QueryOperationResponse
    fullName: System.Data.Services.Client.QueryOperationResponse
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Data.Services.Client.QueryOperationResponse
    name: QueryOperationResponse
    fullName: System.Data.Services.Client.QueryOperationResponse
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadPropertyAsync(System.Object,System.String,System.Data.Services.Client.DataServiceQueryContinuation,System.Object)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  isExternal: true
  name: LoadPropertyAsync(Object, String, DataServiceQueryContinuation, Object)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadPropertyAsync(System.Object, System.String, System.Data.Services.Client.DataServiceQueryContinuation, System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadPropertyAsync(System.Object,System.String,System.Data.Services.Client.DataServiceQueryContinuation,System.Object)
    name: LoadPropertyAsync
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadPropertyAsync
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Data.Services.Client.DataServiceQueryContinuation
    name: DataServiceQueryContinuation
    fullName: System.Data.Services.Client.DataServiceQueryContinuation
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadPropertyAsync(System.Object,System.String,System.Data.Services.Client.DataServiceQueryContinuation,System.Object)
    name: LoadPropertyAsync
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadPropertyAsync
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Data.Services.Client.DataServiceQueryContinuation
    name: DataServiceQueryContinuation
    fullName: System.Data.Services.Client.DataServiceQueryContinuation
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Data.Services.Client.DataServiceQueryContinuation
  parent: System.Data.Services.Client
  isExternal: true
  name: DataServiceQueryContinuation
  fullName: System.Data.Services.Client.DataServiceQueryContinuation
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadPropertyAsync(System.Object,System.String,System.Uri,System.Object)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  isExternal: true
  name: LoadPropertyAsync(Object, String, Uri, Object)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadPropertyAsync(System.Object, System.String, System.Uri, System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadPropertyAsync(System.Object,System.String,System.Uri,System.Object)
    name: LoadPropertyAsync
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadPropertyAsync
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadPropertyAsync(System.Object,System.String,System.Uri,System.Object)
    name: LoadPropertyAsync
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadPropertyAsync
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChangesAsync(System.Object)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  isExternal: true
  name: SaveChangesAsync(Object)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChangesAsync(System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChangesAsync(System.Object)
    name: SaveChangesAsync
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChangesAsync
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChangesAsync(System.Object)
    name: SaveChangesAsync
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChangesAsync
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IMediaDataServiceResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceResponse>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceResponse)
  name.vb: Task(Of IMediaDataServiceResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceResponse
    name: IMediaDataServiceResponse
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceResponse
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceResponse
    name: IMediaDataServiceResponse
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceResponse
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChangesAsync(System.Data.Services.Client.SaveChangesOptions,System.Object)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  isExternal: true
  name: SaveChangesAsync(SaveChangesOptions, Object)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChangesAsync(System.Data.Services.Client.SaveChangesOptions, System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChangesAsync(System.Data.Services.Client.SaveChangesOptions,System.Object)
    name: SaveChangesAsync
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChangesAsync
  - name: (
    fullName: (
  - uid: System.Data.Services.Client.SaveChangesOptions
    name: SaveChangesOptions
    fullName: System.Data.Services.Client.SaveChangesOptions
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChangesAsync(System.Data.Services.Client.SaveChangesOptions,System.Object)
    name: SaveChangesAsync
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChangesAsync
  - name: (
    fullName: (
  - uid: System.Data.Services.Client.SaveChangesOptions
    name: SaveChangesOptions
    fullName: System.Data.Services.Client.SaveChangesOptions
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Data.Services.Client.SaveChangesOptions
  parent: System.Data.Services.Client
  isExternal: true
  name: SaveChangesOptions
  fullName: System.Data.Services.Client.SaveChangesOptions
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChangesAsync(System.Data.Services.Client.SaveChangesOptions,System.Object,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  isExternal: true
  name: SaveChangesAsync(SaveChangesOptions, Object, CancellationToken)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChangesAsync(System.Data.Services.Client.SaveChangesOptions, System.Object, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChangesAsync(System.Data.Services.Client.SaveChangesOptions,System.Object,System.Threading.CancellationToken)
    name: SaveChangesAsync
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChangesAsync
  - name: (
    fullName: (
  - uid: System.Data.Services.Client.SaveChangesOptions
    name: SaveChangesOptions
    fullName: System.Data.Services.Client.SaveChangesOptions
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChangesAsync(System.Data.Services.Client.SaveChangesOptions,System.Object,System.Threading.CancellationToken)
    name: SaveChangesAsync
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChangesAsync
  - name: (
    fullName: (
  - uid: System.Data.Services.Client.SaveChangesOptions
    name: SaveChangesOptions
    fullName: System.Data.Services.Client.SaveChangesOptions
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAsync(System.Func{System.Threading.Tasks.Task})
  parent: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter
  isExternal: true
  name: AdaptExecuteAsync(Func<Task>)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAsync(System.Func<System.Threading.Tasks.Task>)
  fullname.vb: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAsync(System.Func(Of System.Threading.Tasks.Task))
  name.vb: AdaptExecuteAsync(Func(Of Task))
  spec.csharp:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAsync(System.Func{System.Threading.Tasks.Task})
    name: AdaptExecuteAsync
    fullName: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAsync
  - name: (
    fullName: (
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAsync(System.Func{System.Threading.Tasks.Task})
    name: AdaptExecuteAsync
    fullName: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAsync
  - name: (
    fullName: (
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Func{System.Threading.Tasks.Task}
  parent: System
  definition: System.Func`1
  name: Func<Task>
  fullName: System.Func<System.Threading.Tasks.Task>
  fullname.vb: System.Func(Of System.Threading.Tasks.Task)
  name.vb: Func(Of Task)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    fullName: )
- uid: System.Func`1
  parent: System
  isExternal: true
  name: Func<TResult>
  fullName: System.Func<TResult>
  fullname.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAction``1(System.Func{{TResult}})
  parent: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter
  definition: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAction``1(System.Func{``0})
  name: AdaptExecuteAction<TResult>(Func<TResult>)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAction<TResult>(System.Func<TResult>)
  fullname.vb: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAction(Of TResult)(System.Func(Of TResult))
  name.vb: AdaptExecuteAction(Of TResult)(Func(Of TResult))
  spec.csharp:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAction``1(System.Func{``0})
    name: AdaptExecuteAction<TResult>
    fullName: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAction<TResult>
  - name: (
    fullName: (
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAction``1(System.Func{``0})
    name: AdaptExecuteAction(Of TResult)
    fullName: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAction(Of TResult)
  - name: (
    fullName: (
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Func{{TResult}}
  parent: System
  definition: System.Func`1
  name: Func<TResult>
  fullName: System.Func<TResult>
  fullname.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAction``1(System.Func{``0})
  parent: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter
  isExternal: true
  name: AdaptExecuteAction<TResult>(Func<TResult>)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAction<TResult>(System.Func<TResult>)
  fullname.vb: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAction(Of TResult)(System.Func(Of TResult))
  name.vb: AdaptExecuteAction(Of TResult)(Func(Of TResult))
  spec.csharp:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAction``1(System.Func{``0})
    name: AdaptExecuteAction<TResult>
    fullName: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAction<TResult>
  - name: (
    fullName: (
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAction``1(System.Func{``0})
    name: AdaptExecuteAction(Of TResult)
    fullName: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAction(Of TResult)
  - name: (
    fullName: (
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAsync``1(System.Func{System.Threading.Tasks.Task{{TResult}}})
  parent: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter
  definition: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAsync``1(System.Func{System.Threading.Tasks.Task{``0}})
  name: AdaptExecuteAsync<TResult>(Func<Task<TResult>>)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAsync<TResult>(System.Func<System.Threading.Tasks.Task<TResult>>)
  fullname.vb: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAsync(Of TResult)(System.Func(Of System.Threading.Tasks.Task(Of TResult)))
  name.vb: AdaptExecuteAsync(Of TResult)(Func(Of Task(Of TResult)))
  spec.csharp:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAsync``1(System.Func{System.Threading.Tasks.Task{``0}})
    name: AdaptExecuteAsync<TResult>
    fullName: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAsync<TResult>
  - name: (
    fullName: (
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAsync``1(System.Func{System.Threading.Tasks.Task{``0}})
    name: AdaptExecuteAsync(Of TResult)
    fullName: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAsync(Of TResult)
  - name: (
    fullName: (
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Func{System.Threading.Tasks.Task{{TResult}}}
  parent: System
  definition: System.Func`1
  name: Func<Task<TResult>>
  fullName: System.Func<System.Threading.Tasks.Task<TResult>>
  fullname.vb: System.Func(Of System.Threading.Tasks.Task(Of TResult))
  name.vb: Func(Of Task(Of TResult))
  spec.csharp:
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAsync``1(System.Func{System.Threading.Tasks.Task{``0}})
  parent: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter
  isExternal: true
  name: AdaptExecuteAsync<TResult>(Func<Task<TResult>>)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAsync<TResult>(System.Func<System.Threading.Tasks.Task<TResult>>)
  fullname.vb: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAsync(Of TResult)(System.Func(Of System.Threading.Tasks.Task(Of TResult)))
  name.vb: AdaptExecuteAsync(Of TResult)(Func(Of Task(Of TResult)))
  spec.csharp:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAsync``1(System.Func{System.Threading.Tasks.Task{``0}})
    name: AdaptExecuteAsync<TResult>
    fullName: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAsync<TResult>
  - name: (
    fullName: (
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAsync``1(System.Func{System.Threading.Tasks.Task{``0}})
    name: AdaptExecuteAsync(Of TResult)
    fullName: Microsoft.WindowsAzure.MediaServices.Client.TransientFaultHandling.IRetryPolicyAdapter.AdaptExecuteAsync(Of TResult)
  - name: (
    fullName: (
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
