items:
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.ITask
  id: ITask
  parent: Microsoft.WindowsAzure.MediaServices.Client
  children:
  - Microsoft.WindowsAzure.MediaServices.Client.ITask.Configuration
  - Microsoft.WindowsAzure.MediaServices.Client.ITask.EncryptionKeyId
  - Microsoft.WindowsAzure.MediaServices.Client.ITask.EncryptionScheme
  - Microsoft.WindowsAzure.MediaServices.Client.ITask.EncryptionVersion
  - Microsoft.WindowsAzure.MediaServices.Client.ITask.EndTime
  - Microsoft.WindowsAzure.MediaServices.Client.ITask.ErrorDetails
  - Microsoft.WindowsAzure.MediaServices.Client.ITask.GetClearConfiguration
  - Microsoft.WindowsAzure.MediaServices.Client.ITask.HistoricalEvents
  - Microsoft.WindowsAzure.MediaServices.Client.ITask.Id
  - Microsoft.WindowsAzure.MediaServices.Client.ITask.InitializationVector
  - Microsoft.WindowsAzure.MediaServices.Client.ITask.InputAssets
  - Microsoft.WindowsAzure.MediaServices.Client.ITask.MediaProcessorId
  - Microsoft.WindowsAzure.MediaServices.Client.ITask.Name
  - Microsoft.WindowsAzure.MediaServices.Client.ITask.Options
  - Microsoft.WindowsAzure.MediaServices.Client.ITask.OutputAssets
  - Microsoft.WindowsAzure.MediaServices.Client.ITask.PerfMessage
  - Microsoft.WindowsAzure.MediaServices.Client.ITask.Priority
  - Microsoft.WindowsAzure.MediaServices.Client.ITask.Progress
  - Microsoft.WindowsAzure.MediaServices.Client.ITask.RunningDuration
  - Microsoft.WindowsAzure.MediaServices.Client.ITask.StartTime
  - Microsoft.WindowsAzure.MediaServices.Client.ITask.State
  - Microsoft.WindowsAzure.MediaServices.Client.ITask.TaskBody
  langs:
  - csharp
  - vb
  name: ITask
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask
  type: Interface
  source:
    remote:
      path: src/net/Client/Entities/ITask.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ITask
    path: src/net/Client/Entities/ITask.cs
    startLine: 24
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nDescribes a task within a job in the system.\n"
  example: []
  syntax:
    content: public interface ITask
    content.vb: Public Interface ITask
  seealso:
  - type: Microsoft.WindowsAzure.MediaServices.Client.IJob
    commentId: T:Microsoft.WindowsAzure.MediaServices.Client.IJob
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.Id
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ITask.Id
  id: Id
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITask
  langs:
  - csharp
  - vb
  name: Id
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.Id
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Id
    path: src/net/Client/Entities/ApiClasses.cs
    startLine: 415
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: string Id { get; }
    content.vb: ReadOnly Property Id As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.Name
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ITask.Name
  id: Name
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITask
  langs:
  - csharp
  - vb
  name: Name
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.Name
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Name
    path: src/net/Client/Entities/ApiClasses.cs
    startLine: 420
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: string Name { get; set; }
    content.vb: Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.MediaProcessorId
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ITask.MediaProcessorId
  id: MediaProcessorId
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITask
  langs:
  - csharp
  - vb
  name: MediaProcessorId
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.MediaProcessorId
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: MediaProcessorId
    path: src/net/Client/Entities/ApiClasses.cs
    startLine: 426
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: string MediaProcessorId { get; set; }
    content.vb: Property MediaProcessorId As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.State
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ITask.State
  id: State
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITask
  langs:
  - csharp
  - vb
  name: State
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.State
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: State
    path: src/net/Client/Entities/ApiClasses.cs
    startLine: 432
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: JobState State { get; }
    content.vb: ReadOnly Property State As JobState
    parameters: []
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.JobState
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.PerfMessage
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ITask.PerfMessage
  id: PerfMessage
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITask
  langs:
  - csharp
  - vb
  name: PerfMessage
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.PerfMessage
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: PerfMessage
    path: src/net/Client/Entities/ApiClasses.cs
    startLine: 437
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: string PerfMessage { get; }
    content.vb: ReadOnly Property PerfMessage As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.Priority
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ITask.Priority
  id: Priority
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITask
  langs:
  - csharp
  - vb
  name: Priority
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.Priority
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Priority
    path: src/net/Client/Entities/ApiClasses.cs
    startLine: 442
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: int Priority { get; set; }
    content.vb: Property Priority As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.StartTime
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ITask.StartTime
  id: StartTime
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITask
  langs:
  - csharp
  - vb
  name: StartTime
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.StartTime
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: StartTime
    path: src/net/Client/Entities/ApiClasses.cs
    startLine: 448
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: DateTime? StartTime { get; }
    content.vb: ReadOnly Property StartTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.EndTime
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ITask.EndTime
  id: EndTime
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITask
  langs:
  - csharp
  - vb
  name: EndTime
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.EndTime
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: EndTime
    path: src/net/Client/Entities/ApiClasses.cs
    startLine: 453
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: DateTime? EndTime { get; }
    content.vb: ReadOnly Property EndTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.RunningDuration
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ITask.RunningDuration
  id: RunningDuration
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITask
  langs:
  - csharp
  - vb
  name: RunningDuration
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.RunningDuration
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: RunningDuration
    path: src/net/Client/Entities/ApiClasses.cs
    startLine: 458
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: TimeSpan RunningDuration { get; }
    content.vb: ReadOnly Property RunningDuration As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.TaskBody
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ITask.TaskBody
  id: TaskBody
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITask
  langs:
  - csharp
  - vb
  name: TaskBody
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.TaskBody
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: TaskBody
    path: src/net/Client/Entities/ApiClasses.cs
    startLine: 463
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: string TaskBody { get; set; }
    content.vb: Property TaskBody As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.Configuration
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ITask.Configuration
  id: Configuration
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITask
  langs:
  - csharp
  - vb
  name: Configuration
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.Configuration
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Configuration
    path: src/net/Client/Entities/ApiClasses.cs
    startLine: 469
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: string Configuration { get; set; }
    content.vb: Property Configuration As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.Options
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ITask.Options
  id: Options
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITask
  langs:
  - csharp
  - vb
  name: Options
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.Options
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Options
    path: src/net/Client/Entities/ApiClasses.cs
    startLine: 475
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: TaskOptions Options { get; }
    content.vb: ReadOnly Property Options As TaskOptions
    parameters: []
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.TaskOptions
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.InitializationVector
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ITask.InitializationVector
  id: InitializationVector
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITask
  langs:
  - csharp
  - vb
  name: InitializationVector
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.InitializationVector
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: InitializationVector
    path: src/net/Client/Entities/ApiClasses.cs
    startLine: 480
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: string InitializationVector { get; }
    content.vb: ReadOnly Property InitializationVector As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.EncryptionVersion
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ITask.EncryptionVersion
  id: EncryptionVersion
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITask
  langs:
  - csharp
  - vb
  name: EncryptionVersion
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.EncryptionVersion
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: EncryptionVersion
    path: src/net/Client/Entities/ApiClasses.cs
    startLine: 485
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: string EncryptionVersion { get; }
    content.vb: ReadOnly Property EncryptionVersion As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.EncryptionScheme
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ITask.EncryptionScheme
  id: EncryptionScheme
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITask
  langs:
  - csharp
  - vb
  name: EncryptionScheme
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.EncryptionScheme
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: EncryptionScheme
    path: src/net/Client/Entities/ApiClasses.cs
    startLine: 490
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: string EncryptionScheme { get; }
    content.vb: ReadOnly Property EncryptionScheme As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.EncryptionKeyId
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ITask.EncryptionKeyId
  id: EncryptionKeyId
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITask
  langs:
  - csharp
  - vb
  name: EncryptionKeyId
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.EncryptionKeyId
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: EncryptionKeyId
    path: src/net/Client/Entities/ApiClasses.cs
    startLine: 495
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: string EncryptionKeyId { get; }
    content.vb: ReadOnly Property EncryptionKeyId As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.InputAssets
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ITask.InputAssets
  id: InputAssets
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITask
  langs:
  - csharp
  - vb
  name: InputAssets
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.InputAssets
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ITask.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: InputAssets
    path: src/net/Client/Entities/ITask.cs
    startLine: 29
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets the collection of input assets for the task.\n"
  example: []
  syntax:
    content: InputAssetCollection<IAsset> InputAssets { get; }
    content.vb: ReadOnly Property InputAssets As InputAssetCollection(Of IAsset)
    parameters: []
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection{Microsoft.WindowsAzure.MediaServices.Client.IAsset}
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.OutputAssets
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ITask.OutputAssets
  id: OutputAssets
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITask
  langs:
  - csharp
  - vb
  name: OutputAssets
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.OutputAssets
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ITask.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: OutputAssets
    path: src/net/Client/Entities/ITask.cs
    startLine: 34
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets the collection of output assets for the task.\n"
  example: []
  syntax:
    content: OutputAssetCollection OutputAssets { get; }
    content.vb: ReadOnly Property OutputAssets As OutputAssetCollection
    parameters: []
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.OutputAssetCollection
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.Progress
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ITask.Progress
  id: Progress
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITask
  langs:
  - csharp
  - vb
  name: Progress
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.Progress
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ITask.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Progress
    path: src/net/Client/Entities/ITask.cs
    startLine: 39
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets the percentage of completion of the task.\n"
  example: []
  syntax:
    content: double Progress { get; }
    content.vb: ReadOnly Property Progress As Double
    parameters: []
    return:
      type: System.Double
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.ErrorDetails
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ITask.ErrorDetails
  id: ErrorDetails
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITask
  langs:
  - csharp
  - vb
  name: ErrorDetails
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.ErrorDetails
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ITask.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ErrorDetails
    path: src/net/Client/Entities/ITask.cs
    startLine: 44
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets a collection of <xref href=\"Microsoft.WindowsAzure.MediaServices.Client.ErrorDetail\" data-throw-if-not-resolved=\"false\"></xref> objects describing the errors encountered during task execution.\n"
  example: []
  syntax:
    content: ReadOnlyCollection<ErrorDetail> ErrorDetails { get; }
    content.vb: ReadOnly Property ErrorDetails As ReadOnlyCollection(Of ErrorDetail)
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.WindowsAzure.MediaServices.Client.ErrorDetail}
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.HistoricalEvents
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ITask.HistoricalEvents
  id: HistoricalEvents
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITask
  langs:
  - csharp
  - vb
  name: HistoricalEvents
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.HistoricalEvents
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ITask.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: HistoricalEvents
    path: src/net/Client/Entities/ITask.cs
    startLine: 52
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets a collection of <xref href=\"Microsoft.WindowsAzure.MediaServices.Client.TaskHistoricalEvent\" data-throw-if-not-resolved=\"false\"></xref> objects decribing events associated with task execution.\n"
  example: []
  syntax:
    content: ReadOnlyCollection<TaskHistoricalEvent> HistoricalEvents { get; }
    content.vb: ReadOnly Property HistoricalEvents As ReadOnlyCollection(Of TaskHistoricalEvent)
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.WindowsAzure.MediaServices.Client.TaskHistoricalEvent}
      description: "\nThe historical events.\n"
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.GetClearConfiguration
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.ITask.GetClearConfiguration
  id: GetClearConfiguration
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITask
  langs:
  - csharp
  - vb
  name: GetClearConfiguration()
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.GetClearConfiguration()
  type: Method
  source:
    remote:
      path: src/net/Client/Entities/ITask.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: GetClearConfiguration
    path: src/net/Client/Entities/ITask.cs
    startLine: 58
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets the decrypted configuration data.\n"
  example: []
  syntax:
    content: string GetClearConfiguration()
    content.vb: Function GetClearConfiguration As String
    return:
      type: System.String
      description: A string containing the configuration data. If the data was encrypted, the configuration returned is decrypted.
references:
- uid: Microsoft.WindowsAzure.MediaServices.Client.IJob
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: IJob
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IJob
- uid: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: Microsoft.WindowsAzure.MediaServices.Client
  fullName: Microsoft.WindowsAzure.MediaServices.Client
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.WindowsAzure.MediaServices.Client.JobState
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: JobState
  fullName: Microsoft.WindowsAzure.MediaServices.Client.JobState
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  fullName: System.TimeSpan
- uid: Microsoft.WindowsAzure.MediaServices.Client.TaskOptions
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: TaskOptions
  fullName: Microsoft.WindowsAzure.MediaServices.Client.TaskOptions
- uid: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection{Microsoft.WindowsAzure.MediaServices.Client.IAsset}
  parent: Microsoft.WindowsAzure.MediaServices.Client
  definition: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1
  name: InputAssetCollection<IAsset>
  fullName: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection<Microsoft.WindowsAzure.MediaServices.Client.IAsset>
  fullname.vb: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection(Of Microsoft.WindowsAzure.MediaServices.Client.IAsset)
  name.vb: InputAssetCollection(Of IAsset)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1
    name: InputAssetCollection
    fullName: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection
  - name: <
    fullName: <
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IAsset
    name: IAsset
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IAsset
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1
    name: InputAssetCollection
    fullName: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IAsset
    name: IAsset
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IAsset
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: InputAssetCollection<T>
  fullName: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection<T>
  fullname.vb: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection(Of T)
  name.vb: InputAssetCollection(Of T)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1
    name: InputAssetCollection
    fullName: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1
    name: InputAssetCollection
    fullName: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.OutputAssetCollection
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: OutputAssetCollection
  fullName: Microsoft.WindowsAzure.MediaServices.Client.OutputAssetCollection
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  fullName: System.Double
- uid: Microsoft.WindowsAzure.MediaServices.Client.ErrorDetail
  isExternal: false
  name: ErrorDetail
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ErrorDetail
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.WindowsAzure.MediaServices.Client.ErrorDetail}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<ErrorDetail>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.WindowsAzure.MediaServices.Client.ErrorDetail>
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.WindowsAzure.MediaServices.Client.ErrorDetail)
  name.vb: ReadOnlyCollection(Of ErrorDetail)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.WindowsAzure.MediaServices.Client.ErrorDetail
    name: ErrorDetail
    fullName: Microsoft.WindowsAzure.MediaServices.Client.ErrorDetail
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.MediaServices.Client.ErrorDetail
    name: ErrorDetail
    fullName: Microsoft.WindowsAzure.MediaServices.Client.ErrorDetail
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)
  name.vb: ReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: Microsoft.WindowsAzure.MediaServices.Client.TaskHistoricalEvent
  isExternal: false
  name: TaskHistoricalEvent
  fullName: Microsoft.WindowsAzure.MediaServices.Client.TaskHistoricalEvent
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.WindowsAzure.MediaServices.Client.TaskHistoricalEvent}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<TaskHistoricalEvent>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.WindowsAzure.MediaServices.Client.TaskHistoricalEvent>
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.WindowsAzure.MediaServices.Client.TaskHistoricalEvent)
  name.vb: ReadOnlyCollection(Of TaskHistoricalEvent)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.WindowsAzure.MediaServices.Client.TaskHistoricalEvent
    name: TaskHistoricalEvent
    fullName: Microsoft.WindowsAzure.MediaServices.Client.TaskHistoricalEvent
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.MediaServices.Client.TaskHistoricalEvent
    name: TaskHistoricalEvent
    fullName: Microsoft.WindowsAzure.MediaServices.Client.TaskHistoricalEvent
  - name: )
    fullName: )
