items:
- uid: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1
  id: BaseCollection`1
  parent: Microsoft.WindowsAzure.MediaServices.Client
  children:
  - Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.#ctor(Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase)
  - Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.ElementType
  - Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.Expression
  - Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.GetEnumerator
  - Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.MediaContext
  - Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.Provider
  - Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.Queryable
  - Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  - vb
  name: BaseCollection<T>
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection<T>
  type: Class
  source:
    remote:
      path: src/net/Client/Collections/CollectionBase.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: BaseCollection
    path: src/net/Client/Collections/CollectionBase.cs
    startLine: 28
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nRepresents a base media collection.\n"
  example: []
  syntax:
    content: 'public abstract class BaseCollection<T> : IQueryable<T>, IEnumerable<T>, IQueryable, IEnumerable'
    content.vb: >-
      Public MustInherit Class BaseCollection(Of T)
          Implements IQueryable(Of T), IEnumerable(Of T), IQueryable, IEnumerable
    typeParameters:
    - id: T
      description: The item type of the collection.
  inheritance:
  - System.Object
  implements:
  - System.Linq.IQueryable{{T}}
  - System.Collections.Generic.IEnumerable{{T}}
  - System.Linq.IQueryable
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection(Of T)
  name.vb: BaseCollection(Of T)
- uid: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.#ctor(Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.#ctor(Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase)
  id: '#ctor(Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase)'
  parent: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1
  langs:
  - csharp
  - vb
  name: BaseCollection(MediaContextBase)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection<T>.BaseCollection(Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase)
  type: Constructor
  source:
    remote:
      path: src/net/Client/Collections/CollectionBase.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: .ctor
    path: src/net/Client/Collections/CollectionBase.cs
    startLine: 30
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  syntax:
    content: protected BaseCollection(MediaContextBase context)
    content.vb: Protected Sub New(context As MediaContextBase)
    parameters:
    - id: context
      type: Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection(Of T).BaseCollection(Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase)
- uid: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.MediaContext
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.MediaContext
  id: MediaContext
  parent: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1
  langs:
  - csharp
  - vb
  name: MediaContext
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection<T>.MediaContext
  type: Property
  source:
    remote:
      path: src/net/Client/Collections/CollectionBase.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: MediaContext
    path: src/net/Client/Collections/CollectionBase.cs
    startLine: 35
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  syntax:
    content: public MediaContextBase MediaContext { get; set; }
    content.vb: Public Property MediaContext As MediaContextBase
    parameters: []
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection(Of T).MediaContext
- uid: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.ElementType
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.ElementType
  id: ElementType
  parent: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1
  langs:
  - csharp
  - vb
  name: ElementType
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection<T>.ElementType
  type: Property
  source:
    remote:
      path: src/net/Client/Collections/CollectionBase.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ElementType
    path: src/net/Client/Collections/CollectionBase.cs
    startLine: 41
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets the type of the element(s) that are returned when the expression tree associated with this instance of <xref href=\"System.Linq.IQueryable\" data-throw-if-not-resolved=\"false\"></xref> is executed.\n"
  example: []
  syntax:
    content: public Type ElementType { get; }
    content.vb: Public ReadOnly Property ElementType As Type
    parameters: []
    return:
      type: System.Type
      description: A <xref href="System.Type" data-throw-if-not-resolved="false"></xref> that represents the type of the element(s) that are returned when the expression tree associated with this object is executed.
  implements:
  - System.Linq.IQueryable.ElementType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection(Of T).ElementType
- uid: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.Expression
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.Expression
  id: Expression
  parent: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1
  langs:
  - csharp
  - vb
  name: Expression
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection<T>.Expression
  type: Property
  source:
    remote:
      path: src/net/Client/Collections/CollectionBase.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Expression
    path: src/net/Client/Collections/CollectionBase.cs
    startLine: 53
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets the expression tree that is associated with the instance of <xref href=\"System.Linq.IQueryable\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Expression Expression { get; }
    content.vb: Public ReadOnly Property Expression As Expression
    parameters: []
    return:
      type: System.Linq.Expressions.Expression
      description: The <xref href="System.Linq.Expressions.Expression" data-throw-if-not-resolved="false"></xref> that is associated with this instance of <xref href="System.Linq.IQueryable" data-throw-if-not-resolved="false"></xref>.
  implements:
  - System.Linq.IQueryable.Expression
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection(Of T).Expression
- uid: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.Provider
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.Provider
  id: Provider
  parent: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1
  langs:
  - csharp
  - vb
  name: Provider
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection<T>.Provider
  type: Property
  source:
    remote:
      path: src/net/Client/Collections/CollectionBase.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Provider
    path: src/net/Client/Collections/CollectionBase.cs
    startLine: 65
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets the query provider that is associated with this data source.\n"
  example: []
  syntax:
    content: public IQueryProvider Provider { get; }
    content.vb: Public ReadOnly Property Provider As IQueryProvider
    parameters: []
    return:
      type: System.Linq.IQueryProvider
      description: The <xref href="System.Linq.IQueryProvider" data-throw-if-not-resolved="false"></xref> that is associated with this data source.
  implements:
  - System.Linq.IQueryable.Provider
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection(Of T).Provider
- uid: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.Queryable
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.Queryable
  id: Queryable
  parent: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1
  langs:
  - csharp
  - vb
  name: Queryable
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection<T>.Queryable
  type: Property
  source:
    remote:
      path: src/net/Client/Collections/CollectionBase.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Queryable
    path: src/net/Client/Collections/CollectionBase.cs
    startLine: 77
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets or sets the <xref href=\"System.Linq.IQueryable\" data-throw-if-not-resolved=\"false\"></xref> interface to evaluate queries against \nthe collection.\n"
  example: []
  syntax:
    content: protected abstract IQueryable<T> Queryable { get; set; }
    content.vb: Protected MustOverride Property Queryable As IQueryable(Of T)
    parameters: []
    return:
      type: System.Linq.IQueryable{{T}}
  modifiers.csharp:
  - protected
  - abstract
  - get
  - set
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection(Of T).Queryable
- uid: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.GetEnumerator
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection<T>.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/net/Client/Collections/CollectionBase.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: GetEnumerator
    path: src/net/Client/Collections/CollectionBase.cs
    startLine: 85
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nReturns an enumerator that iterates through the collection.\n"
  example: []
  syntax:
    content: public IEnumerator<T> GetEnumerator()
    content.vb: Public Function GetEnumerator As IEnumerator(Of T)
    return:
      type: System.Collections.Generic.IEnumerator{{T}}
      description: "\nA <xref href=\"System.Collections.Generic.IEnumerator`1\" data-throw-if-not-resolved=\"false\"></xref> that can be used to iterate through the collection.\n"
  implements:
  - System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection(Of T).GetEnumerator()
- uid: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection<T>.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/net/Client/Collections/CollectionBase.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: System.Collections.IEnumerable.GetEnumerator
    path: src/net/Client/Collections/CollectionBase.cs
    startLine: 96
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nReturns an enumerator that iterates through a collection.\n"
  example: []
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
    return:
      type: System.Collections.IEnumerator
      description: "\nAn <xref href=\"System.Collections.IEnumerator\" data-throw-if-not-resolved=\"false\"></xref> object that can be used to iterate through the collection.\n"
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection(Of T).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
references:
- uid: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: Microsoft.WindowsAzure.MediaServices.Client
  fullName: Microsoft.WindowsAzure.MediaServices.Client
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Linq.IQueryable{{T}}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<T>
  fullName: System.Linq.IQueryable<T>
  fullname.vb: System.Linq.IQueryable(Of T)
  name.vb: IQueryable(Of T)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{T}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Linq.IQueryable
  parent: System.Linq
  isExternal: true
  name: IQueryable
  fullName: System.Linq.IQueryable
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Linq.IQueryable`1
  parent: System.Linq
  isExternal: true
  name: IQueryable<T>
  fullName: System.Linq.IQueryable<T>
  fullname.vb: System.Linq.IQueryable(Of T)
  name.vb: IQueryable(Of T)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Linq
  isExternal: false
  name: System.Linq
  fullName: System.Linq
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: MediaContextBase
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  fullName: System.Type
- uid: System.Linq.IQueryable.ElementType
  parent: System.Linq.IQueryable
  isExternal: true
  name: ElementType
  fullName: System.Linq.IQueryable.ElementType
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.IQueryable.Expression
  parent: System.Linq.IQueryable
  isExternal: true
  name: Expression
  fullName: System.Linq.IQueryable.Expression
- uid: System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: System.Linq.IQueryProvider
  parent: System.Linq
  isExternal: true
  name: IQueryProvider
  fullName: System.Linq.IQueryProvider
- uid: System.Linq.IQueryable.Provider
  parent: System.Linq.IQueryable
  isExternal: true
  name: Provider
  fullName: System.Linq.IQueryable.Provider
- uid: System.Collections.Generic.IEnumerator`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  fullname.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{{T}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{{T}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  fullname.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  parent: System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
