items:
- uid: Microsoft.Azure.Search.Models.FieldMappingFunction
  commentId: T:Microsoft.Azure.Search.Models.FieldMappingFunction
  id: FieldMappingFunction
  parent: Microsoft.Azure.Search.Models
  children:
  - Microsoft.Azure.Search.Models.FieldMappingFunction.#ctor
  - Microsoft.Azure.Search.Models.FieldMappingFunction.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  - Microsoft.Azure.Search.Models.FieldMappingFunction.Base64Decode
  - Microsoft.Azure.Search.Models.FieldMappingFunction.Base64Encode
  - Microsoft.Azure.Search.Models.FieldMappingFunction.ExtractTokenAtPosition(System.String,System.Int32)
  - Microsoft.Azure.Search.Models.FieldMappingFunction.JsonArrayToStringCollection
  - Microsoft.Azure.Search.Models.FieldMappingFunction.Name
  - Microsoft.Azure.Search.Models.FieldMappingFunction.Parameters
  - Microsoft.Azure.Search.Models.FieldMappingFunction.Validate
  langs:
  - csharp
  - vb
  name: FieldMappingFunction
  fullName: Microsoft.Azure.Search.Models.FieldMappingFunction
  type: Class
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/FieldMappingFunction.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: FieldMappingFunction
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/FieldMappingFunction.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nRepresents a function that transforms a value from a data source\nbefore indexing.\n<see href=\"https://azure.microsoft.com/documentation/articles/search-indexer-field-mappings/\"></see>\n"
  example: []
  syntax:
    content: public class FieldMappingFunction
    content.vb: Public Class FieldMappingFunction
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Search.Models.FieldMappingFunction.Base64Encode
  commentId: M:Microsoft.Azure.Search.Models.FieldMappingFunction.Base64Encode
  id: Base64Encode
  parent: Microsoft.Azure.Search.Models.FieldMappingFunction
  langs:
  - csharp
  - vb
  name: Base64Encode()
  fullName: Microsoft.Azure.Search.Models.FieldMappingFunction.Base64Encode()
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/FieldMappingFunction.Customization.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Base64Encode
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/FieldMappingFunction.Customization.cs
    startLine: 20
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nCreates a field mapping function that performs URL-safe Base64 encoding of the input string. Assumes that\nthe input is UTF-8 encoded.\n"
  remarks: "\nSample use case: Only URL-safe characters can appear in an Azure Search document key (because customers\nmust be able to address the document using the Lookup API, for example). If your data contains URL-unsafe\ncharacters and you want to use it to populate a key field in your search index, use this function. \n"
  example: []
  syntax:
    content: public static FieldMappingFunction Base64Encode()
    content.vb: Public Shared Function Base64Encode As FieldMappingFunction
    return:
      type: Microsoft.Azure.Search.Models.FieldMappingFunction
      description: A new field mapping function.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Search.Models.FieldMappingFunction.Base64Decode
  commentId: M:Microsoft.Azure.Search.Models.FieldMappingFunction.Base64Decode
  id: Base64Decode
  parent: Microsoft.Azure.Search.Models.FieldMappingFunction
  langs:
  - csharp
  - vb
  name: Base64Decode()
  fullName: Microsoft.Azure.Search.Models.FieldMappingFunction.Base64Decode()
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/FieldMappingFunction.Customization.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Base64Decode
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/FieldMappingFunction.Customization.cs
    startLine: 35
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nCreates a field mapping function that performs Base64 decoding of the input string. The input is assumed\nto a URL-safe Base64-encoded string. \n"
  remarks: "\nSample use case: Blob custom metadata values must be ASCII-encoded. You can use Base64 encoding to\nrepresent arbitrary Unicode strings in blob custom metadata. However, to make search meaningful, you can\nuse this function to turn the encoded data back into \"regular\" strings when populating your search index. \n"
  example: []
  syntax:
    content: public static FieldMappingFunction Base64Decode()
    content.vb: Public Shared Function Base64Decode As FieldMappingFunction
    return:
      type: Microsoft.Azure.Search.Models.FieldMappingFunction
      description: A new field mapping function.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Search.Models.FieldMappingFunction.ExtractTokenAtPosition(System.String,System.Int32)
  commentId: M:Microsoft.Azure.Search.Models.FieldMappingFunction.ExtractTokenAtPosition(System.String,System.Int32)
  id: ExtractTokenAtPosition(System.String,System.Int32)
  parent: Microsoft.Azure.Search.Models.FieldMappingFunction
  langs:
  - csharp
  - vb
  name: ExtractTokenAtPosition(String, Int32)
  fullName: Microsoft.Azure.Search.Models.FieldMappingFunction.ExtractTokenAtPosition(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/FieldMappingFunction.Customization.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ExtractTokenAtPosition
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/FieldMappingFunction.Customization.cs
    startLine: 59
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nCreates a field mapping function that splits a string field using the specified delimiter, and picks the\ntoken at the specified position in the resulting split.\n"
  remarks: "\n<p>\nFor example, if the input is Jane Doe, the delimiter is \" \" (space) and the position is 0, the result is\nJane; if the position is 1, the result is Doe. If the position refers to a token that doesn't exist, an\nerror will be returned.\n</p>\n<p>\nSample use case: Your data source contains a PersonName field, and you want to index it as two separate\nFirstName and LastName fields. You can use this function to split the input using the space character as\nthe delimiter.\n</p>\n"
  example: []
  syntax:
    content: public static FieldMappingFunction ExtractTokenAtPosition(string delimiter, int position)
    content.vb: Public Shared Function ExtractTokenAtPosition(delimiter As String, position As Integer) As FieldMappingFunction
    parameters:
    - id: delimiter
      type: System.String
      description: A string to use as the separator when splitting the input string.
    - id: position
      type: System.Int32
      description: An integer zero-based position of the token to pick after the input string is split.
    return:
      type: Microsoft.Azure.Search.Models.FieldMappingFunction
      description: A new field mapping function.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Search.Models.FieldMappingFunction.JsonArrayToStringCollection
  commentId: M:Microsoft.Azure.Search.Models.FieldMappingFunction.JsonArrayToStringCollection
  id: JsonArrayToStringCollection
  parent: Microsoft.Azure.Search.Models.FieldMappingFunction
  langs:
  - csharp
  - vb
  name: JsonArrayToStringCollection()
  fullName: Microsoft.Azure.Search.Models.FieldMappingFunction.JsonArrayToStringCollection()
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/FieldMappingFunction.Customization.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: JsonArrayToStringCollection
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/FieldMappingFunction.Customization.cs
    startLine: 86
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nCreates a field mapping function that transforms a string formatted as a JSON array of strings into a string array that can be used to\npopulate a Collection(Edm.String) field in the index.\n"
  remarks: "\n<p>\nFor example, if the input string is [\"red\", \"white\", \"blue\"], then the target field of type Collection(Edm.String) will be populated\nwith the three values red, white and blue. For input values that cannot be parsed as JSON string arrays, an error will be returned.\n</p>\n<p>\nSample use case: Azure SQL database doesn't have a built-in data type that naturally maps to Collection(Edm.String) fields in Azure\nSearch. To populate string collection fields, format your source data as a JSON string array and use this function.\n</p>\n"
  example: []
  syntax:
    content: public static FieldMappingFunction JsonArrayToStringCollection()
    content.vb: Public Shared Function JsonArrayToStringCollection As FieldMappingFunction
    return:
      type: Microsoft.Azure.Search.Models.FieldMappingFunction
      description: A new field mapping function.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Search.Models.FieldMappingFunction.#ctor
  commentId: M:Microsoft.Azure.Search.Models.FieldMappingFunction.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Search.Models.FieldMappingFunction
  langs:
  - csharp
  - vb
  name: FieldMappingFunction()
  fullName: Microsoft.Azure.Search.Models.FieldMappingFunction.FieldMappingFunction()
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/FieldMappingFunction.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: .ctor
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/FieldMappingFunction.cs
    startLine: 28
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nInitializes a new instance of the FieldMappingFunction class.\n"
  example: []
  syntax:
    content: public FieldMappingFunction()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.FieldMappingFunction.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Microsoft.Azure.Search.Models.FieldMappingFunction.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  id: '#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})'
  parent: Microsoft.Azure.Search.Models.FieldMappingFunction
  langs:
  - csharp
  - vb
  name: FieldMappingFunction(String, IDictionary<String, Object>)
  fullName: Microsoft.Azure.Search.Models.FieldMappingFunction.FieldMappingFunction(System.String, System.Collections.Generic.IDictionary<System.String, System.Object>)
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/FieldMappingFunction.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: .ctor
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/FieldMappingFunction.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nInitializes a new instance of the FieldMappingFunction class.\n"
  example: []
  syntax:
    content: public FieldMappingFunction(string name, IDictionary<string, object> parameters = null)
    content.vb: Public Sub New(name As String, parameters As IDictionary(Of String, Object) = Nothing)
    parameters:
    - id: name
      type: System.String
    - id: parameters
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Search.Models.FieldMappingFunction.FieldMappingFunction(System.String, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: FieldMappingFunction(String, IDictionary(Of String, Object))
- uid: Microsoft.Azure.Search.Models.FieldMappingFunction.Name
  commentId: P:Microsoft.Azure.Search.Models.FieldMappingFunction.Name
  id: Name
  parent: Microsoft.Azure.Search.Models.FieldMappingFunction
  langs:
  - csharp
  - vb
  name: Name
  fullName: Microsoft.Azure.Search.Models.FieldMappingFunction.Name
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/FieldMappingFunction.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Name
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/FieldMappingFunction.cs
    startLine: 42
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the name of the field mapping function.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "name")]

      public string Name { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="name")>

      Public Property Name As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.FieldMappingFunction.Parameters
  commentId: P:Microsoft.Azure.Search.Models.FieldMappingFunction.Parameters
  id: Parameters
  parent: Microsoft.Azure.Search.Models.FieldMappingFunction
  langs:
  - csharp
  - vb
  name: Parameters
  fullName: Microsoft.Azure.Search.Models.FieldMappingFunction.Parameters
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/FieldMappingFunction.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Parameters
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/FieldMappingFunction.cs
    startLine: 49
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets a dictionary of parameter name/value pairs to pass to\nthe function. Each value must be of a primitive type.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "parameters")]

      public IDictionary<string, object> Parameters { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="parameters")>

      Public Property Parameters As IDictionary(Of String, Object)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: parameters
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.FieldMappingFunction.Validate
  commentId: M:Microsoft.Azure.Search.Models.FieldMappingFunction.Validate
  id: Validate
  parent: Microsoft.Azure.Search.Models.FieldMappingFunction
  langs:
  - csharp
  - vb
  name: Validate()
  fullName: Microsoft.Azure.Search.Models.FieldMappingFunction.Validate()
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/FieldMappingFunction.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Validate
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/FieldMappingFunction.cs
    startLine: 58
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  exceptions:
  - type: Microsoft.Rest.ValidationException
    commentId: T:Microsoft.Rest.ValidationException
    description: "\nThrown if validation fails\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Search.Models
  isExternal: false
  name: Microsoft.Azure.Search.Models
  fullName: Microsoft.Azure.Search.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Search.Models.FieldMappingFunction
  parent: Microsoft.Azure.Search.Models
  isExternal: false
  name: FieldMappingFunction
  fullName: Microsoft.Azure.Search.Models.FieldMappingFunction
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Rest.ValidationException
