items:
- uid: Microsoft.Azure.Search.Models.IndexGetStatisticsResult
  commentId: T:Microsoft.Azure.Search.Models.IndexGetStatisticsResult
  id: IndexGetStatisticsResult
  parent: Microsoft.Azure.Search.Models
  children:
  - Microsoft.Azure.Search.Models.IndexGetStatisticsResult.#ctor
  - Microsoft.Azure.Search.Models.IndexGetStatisticsResult.#ctor(System.Int64,System.Int64)
  - Microsoft.Azure.Search.Models.IndexGetStatisticsResult.DocumentCount
  - Microsoft.Azure.Search.Models.IndexGetStatisticsResult.StorageSize
  langs:
  - csharp
  - vb
  name: IndexGetStatisticsResult
  fullName: Microsoft.Azure.Search.Models.IndexGetStatisticsResult
  type: Class
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/IndexGetStatisticsResult.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: IndexGetStatisticsResult
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/IndexGetStatisticsResult.cs
    startLine: 12
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nStatistics for a given index. Statistics are collected periodically\nand are not guaranteed to always be up-to-date.\n"
  example: []
  syntax:
    content: public class IndexGetStatisticsResult
    content.vb: Public Class IndexGetStatisticsResult
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Search.Models.IndexGetStatisticsResult.#ctor
  commentId: M:Microsoft.Azure.Search.Models.IndexGetStatisticsResult.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Search.Models.IndexGetStatisticsResult
  langs:
  - csharp
  - vb
  name: IndexGetStatisticsResult()
  fullName: Microsoft.Azure.Search.Models.IndexGetStatisticsResult.IndexGetStatisticsResult()
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/IndexGetStatisticsResult.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: .ctor
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/IndexGetStatisticsResult.cs
    startLine: 17
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nInitializes a new instance of the IndexGetStatisticsResult class.\n"
  example: []
  syntax:
    content: public IndexGetStatisticsResult()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.IndexGetStatisticsResult.#ctor(System.Int64,System.Int64)
  commentId: M:Microsoft.Azure.Search.Models.IndexGetStatisticsResult.#ctor(System.Int64,System.Int64)
  id: '#ctor(System.Int64,System.Int64)'
  parent: Microsoft.Azure.Search.Models.IndexGetStatisticsResult
  langs:
  - csharp
  - vb
  name: IndexGetStatisticsResult(Int64, Int64)
  fullName: Microsoft.Azure.Search.Models.IndexGetStatisticsResult.IndexGetStatisticsResult(System.Int64, System.Int64)
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/IndexGetStatisticsResult.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: .ctor
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/IndexGetStatisticsResult.cs
    startLine: 22
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nInitializes a new instance of the IndexGetStatisticsResult class.\n"
  example: []
  syntax:
    content: public IndexGetStatisticsResult(long documentCount = 0L, long storageSize = 0L)
    content.vb: Public Sub New(documentCount As Long = 0L, storageSize As Long = 0L)
    parameters:
    - id: documentCount
      type: System.Int64
    - id: storageSize
      type: System.Int64
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.IndexGetStatisticsResult.DocumentCount
  commentId: P:Microsoft.Azure.Search.Models.IndexGetStatisticsResult.DocumentCount
  id: DocumentCount
  parent: Microsoft.Azure.Search.Models.IndexGetStatisticsResult
  langs:
  - csharp
  - vb
  name: DocumentCount
  fullName: Microsoft.Azure.Search.Models.IndexGetStatisticsResult.DocumentCount
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/IndexGetStatisticsResult.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: DocumentCount
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/IndexGetStatisticsResult.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets the number of documents in the index.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "documentCount")]

      public long DocumentCount { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="documentCount")>

      Public ReadOnly Property DocumentCount As Long
    parameters: []
    return:
      type: System.Int64
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: documentCount
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.IndexGetStatisticsResult.StorageSize
  commentId: P:Microsoft.Azure.Search.Models.IndexGetStatisticsResult.StorageSize
  id: StorageSize
  parent: Microsoft.Azure.Search.Models.IndexGetStatisticsResult
  langs:
  - csharp
  - vb
  name: StorageSize
  fullName: Microsoft.Azure.Search.Models.IndexGetStatisticsResult.StorageSize
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/IndexGetStatisticsResult.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: StorageSize
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/IndexGetStatisticsResult.cs
    startLine: 37
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets the amount of storage in bytes consumed by the index.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "storageSize")]

      public long StorageSize { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="storageSize")>

      Public ReadOnly Property StorageSize As Long
    parameters: []
    return:
      type: System.Int64
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: storageSize
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Azure.Search.Models
  isExternal: false
  name: Microsoft.Azure.Search.Models
  fullName: Microsoft.Azure.Search.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  fullName: System.Int64
