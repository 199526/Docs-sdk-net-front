items:
- uid: Microsoft.Azure.Search.Models.TokenInfo
  commentId: T:Microsoft.Azure.Search.Models.TokenInfo
  id: TokenInfo
  parent: Microsoft.Azure.Search.Models
  children:
  - Microsoft.Azure.Search.Models.TokenInfo.#ctor
  - Microsoft.Azure.Search.Models.TokenInfo.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})
  - Microsoft.Azure.Search.Models.TokenInfo.EndOffset
  - Microsoft.Azure.Search.Models.TokenInfo.Position
  - Microsoft.Azure.Search.Models.TokenInfo.StartOffset
  - Microsoft.Azure.Search.Models.TokenInfo.Token
  langs:
  - csharp
  - vb
  name: TokenInfo
  fullName: Microsoft.Azure.Search.Models.TokenInfo
  type: Class
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/TokenInfo.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: TokenInfo
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/TokenInfo.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nInformation about a token returned by an analyzer.\n"
  example: []
  syntax:
    content: public class TokenInfo
    content.vb: Public Class TokenInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Search.Models.TokenInfo.#ctor
  commentId: M:Microsoft.Azure.Search.Models.TokenInfo.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Search.Models.TokenInfo
  langs:
  - csharp
  - vb
  name: TokenInfo()
  fullName: Microsoft.Azure.Search.Models.TokenInfo.TokenInfo()
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/TokenInfo.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: .ctor
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/TokenInfo.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nInitializes a new instance of the TokenInfo class.\n"
  example: []
  syntax:
    content: public TokenInfo()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.TokenInfo.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})
  commentId: M:Microsoft.Azure.Search.Models.TokenInfo.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})
  id: '#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})'
  parent: Microsoft.Azure.Search.Models.TokenInfo
  langs:
  - csharp
  - vb
  name: TokenInfo(String, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>)
  fullName: Microsoft.Azure.Search.Models.TokenInfo.TokenInfo(System.String, System.Nullable<System.Int32>, System.Nullable<System.Int32>, System.Nullable<System.Int32>)
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/TokenInfo.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: .ctor
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/TokenInfo.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nInitializes a new instance of the TokenInfo class.\n"
  example: []
  syntax:
    content: public TokenInfo(string token = null, int ? startOffset = null, int ? endOffset = null, int ? position = null)
    content.vb: Public Sub New(token As String = Nothing, startOffset As Integer? = Nothing, endOffset As Integer? = Nothing, position As Integer? = Nothing)
    parameters:
    - id: token
      type: System.String
    - id: startOffset
      type: System.Nullable{System.Int32}
    - id: endOffset
      type: System.Nullable{System.Int32}
    - id: position
      type: System.Nullable{System.Int32}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Search.Models.TokenInfo.TokenInfo(System.String, System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), System.Nullable(Of System.Int32))
  name.vb: TokenInfo(String, Nullable(Of Int32), Nullable(Of Int32), Nullable(Of Int32))
- uid: Microsoft.Azure.Search.Models.TokenInfo.Token
  commentId: P:Microsoft.Azure.Search.Models.TokenInfo.Token
  id: Token
  parent: Microsoft.Azure.Search.Models.TokenInfo
  langs:
  - csharp
  - vb
  name: Token
  fullName: Microsoft.Azure.Search.Models.TokenInfo.Token
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/TokenInfo.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Token
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/TokenInfo.cs
    startLine: 42
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets the token returned by the analyzer.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "token")]

      public string Token { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="token")>

      Public ReadOnly Property Token As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: token
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.TokenInfo.StartOffset
  commentId: P:Microsoft.Azure.Search.Models.TokenInfo.StartOffset
  id: StartOffset
  parent: Microsoft.Azure.Search.Models.TokenInfo
  langs:
  - csharp
  - vb
  name: StartOffset
  fullName: Microsoft.Azure.Search.Models.TokenInfo.StartOffset
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/TokenInfo.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: StartOffset
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/TokenInfo.cs
    startLine: 49
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets the index of the first character of the token in the input\ntext.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "startOffset")]

      public int ? StartOffset { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="startOffset")>

      Public ReadOnly Property StartOffset As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: startOffset
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.TokenInfo.EndOffset
  commentId: P:Microsoft.Azure.Search.Models.TokenInfo.EndOffset
  id: EndOffset
  parent: Microsoft.Azure.Search.Models.TokenInfo
  langs:
  - csharp
  - vb
  name: EndOffset
  fullName: Microsoft.Azure.Search.Models.TokenInfo.EndOffset
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/TokenInfo.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: EndOffset
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/TokenInfo.cs
    startLine: 56
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets the index of the last character of the token in the input\ntext.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "endOffset")]

      public int ? EndOffset { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="endOffset")>

      Public ReadOnly Property EndOffset As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: endOffset
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.TokenInfo.Position
  commentId: P:Microsoft.Azure.Search.Models.TokenInfo.Position
  id: Position
  parent: Microsoft.Azure.Search.Models.TokenInfo
  langs:
  - csharp
  - vb
  name: Position
  fullName: Microsoft.Azure.Search.Models.TokenInfo.Position
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/TokenInfo.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Position
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/TokenInfo.cs
    startLine: 66
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets the position of the token in the input text relative to other\ntokens. The first token in the input text has position 0, the\nnext has position 1, and so on. Depending on the analyzer used,\nsome tokens might have the same position, for example if they are\nsynonyms of each other.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "position")]

      public int ? Position { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="position")>

      Public ReadOnly Property Position As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: position
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Azure.Search.Models
  isExternal: false
  name: Microsoft.Azure.Search.Models
  fullName: Microsoft.Azure.Search.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
