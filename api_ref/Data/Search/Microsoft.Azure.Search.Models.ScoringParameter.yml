items:
- uid: Microsoft.Azure.Search.Models.ScoringParameter
  commentId: T:Microsoft.Azure.Search.Models.ScoringParameter
  id: ScoringParameter
  parent: Microsoft.Azure.Search.Models
  children:
  - Microsoft.Azure.Search.Models.ScoringParameter.#ctor(System.String,Microsoft.Spatial.GeographyPoint)
  - Microsoft.Azure.Search.Models.ScoringParameter.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})
  - Microsoft.Azure.Search.Models.ScoringParameter.#ctor(System.String,System.String)
  - Microsoft.Azure.Search.Models.ScoringParameter.Name
  - Microsoft.Azure.Search.Models.ScoringParameter.ToString
  - Microsoft.Azure.Search.Models.ScoringParameter.Value
  - Microsoft.Azure.Search.Models.ScoringParameter.Values
  langs:
  - csharp
  - vb
  name: ScoringParameter
  fullName: Microsoft.Azure.Search.Models.ScoringParameter
  type: Class
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/ScoringParameter.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ScoringParameter
    path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/ScoringParameter.cs
    startLine: 15
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nRepresents a parameter value to be used in scoring functions (for example, referencePointParameter).\n"
  example: []
  syntax:
    content: public class ScoringParameter
    content.vb: Public Class ScoringParameter
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Search.Models.ScoringParameter.#ctor(System.String,System.String)
  commentId: M:Microsoft.Azure.Search.Models.ScoringParameter.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Microsoft.Azure.Search.Models.ScoringParameter
  langs:
  - csharp
  - vb
  name: ScoringParameter(String, String)
  fullName: Microsoft.Azure.Search.Models.ScoringParameter.ScoringParameter(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/ScoringParameter.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: .ctor
    path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/ScoringParameter.cs
    startLine: 22
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nInitializes a new instance of the ScoringParameter class with the given name and string value.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This property is obsolete. Please use the constructor overload that takes a list of values instead.")]

      public ScoringParameter(string name, string value)
    content.vb: >-
      <Obsolete("This property is obsolete. Please use the constructor overload that takes a list of values instead.")>

      Public Sub New(name As String, value As String)
    parameters:
    - id: name
      type: System.String
      description: Name of the scoring parameter.
    - id: value
      type: System.String
      description: Value of the scoring parameter.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This property is obsolete. Please use the constructor overload that takes a list of values instead.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.ScoringParameter.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Microsoft.Azure.Search.Models.ScoringParameter.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})
  id: '#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})'
  parent: Microsoft.Azure.Search.Models.ScoringParameter
  langs:
  - csharp
  - vb
  name: ScoringParameter(String, IEnumerable<String>)
  fullName: Microsoft.Azure.Search.Models.ScoringParameter.ScoringParameter(System.String, System.Collections.Generic.IEnumerable<System.String>)
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/ScoringParameter.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: .ctor
    path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/ScoringParameter.cs
    startLine: 37
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nInitializes a new instance of the ScoringParameter class with the given name and string values.\n"
  example: []
  syntax:
    content: public ScoringParameter(string name, IEnumerable<string> values)
    content.vb: Public Sub New(name As String, values As IEnumerable(Of String))
    parameters:
    - id: name
      type: System.String
      description: Name of the scoring parameter.
    - id: values
      type: System.Collections.Generic.IEnumerable{System.String}
      description: Values of the scoring parameter.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Search.Models.ScoringParameter.ScoringParameter(System.String, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: ScoringParameter(String, IEnumerable(Of String))
- uid: Microsoft.Azure.Search.Models.ScoringParameter.#ctor(System.String,Microsoft.Spatial.GeographyPoint)
  commentId: M:Microsoft.Azure.Search.Models.ScoringParameter.#ctor(System.String,Microsoft.Spatial.GeographyPoint)
  id: '#ctor(System.String,Microsoft.Spatial.GeographyPoint)'
  parent: Microsoft.Azure.Search.Models.ScoringParameter
  langs:
  - csharp
  - vb
  name: ScoringParameter(String, GeographyPoint)
  fullName: Microsoft.Azure.Search.Models.ScoringParameter.ScoringParameter(System.String, Microsoft.Spatial.GeographyPoint)
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/ScoringParameter.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: .ctor
    path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/ScoringParameter.cs
    startLine: 51
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nInitializes a new instance of the ScoringParameter class with the given name and GeographyPoint value.\n"
  example: []
  syntax:
    content: public ScoringParameter(string name, GeographyPoint value)
    content.vb: Public Sub New(name As String, value As GeographyPoint)
    parameters:
    - id: name
      type: System.String
      description: Name of the scoring parameter.
    - id: value
      type: Microsoft.Spatial.GeographyPoint
      description: Value of the scoring parameter.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.ScoringParameter.Name
  commentId: P:Microsoft.Azure.Search.Models.ScoringParameter.Name
  id: Name
  parent: Microsoft.Azure.Search.Models.ScoringParameter
  langs:
  - csharp
  - vb
  name: Name
  fullName: Microsoft.Azure.Search.Models.ScoringParameter.Name
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/ScoringParameter.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Name
    path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/ScoringParameter.cs
    startLine: 56
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets the name of the scoring parameter.\n"
  example: []
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.ScoringParameter.Value
  commentId: P:Microsoft.Azure.Search.Models.ScoringParameter.Value
  id: Value
  parent: Microsoft.Azure.Search.Models.ScoringParameter
  langs:
  - csharp
  - vb
  name: Value
  fullName: Microsoft.Azure.Search.Models.ScoringParameter.Value
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/ScoringParameter.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Value
    path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/ScoringParameter.cs
    startLine: 61
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets the value of the scoring parameter.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This property is obsolete. Please use the Values property or ToString() method instead.")]

      public string Value { get; }
    content.vb: >-
      <Obsolete("This property is obsolete. Please use the Values property or ToString() method instead.")>

      Public ReadOnly Property Value As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This property is obsolete. Please use the Values property or ToString() method instead.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.ScoringParameter.Values
  commentId: P:Microsoft.Azure.Search.Models.ScoringParameter.Values
  id: Values
  parent: Microsoft.Azure.Search.Models.ScoringParameter
  langs:
  - csharp
  - vb
  name: Values
  fullName: Microsoft.Azure.Search.Models.ScoringParameter.Values
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/ScoringParameter.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Values
    path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/ScoringParameter.cs
    startLine: 73
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets the values of the scoring parameter.\n"
  example: []
  syntax:
    content: public IEnumerable<string> Values { get; }
    content.vb: Public ReadOnly Property Values As IEnumerable(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.ScoringParameter.ToString
  commentId: M:Microsoft.Azure.Search.Models.ScoringParameter.ToString
  id: ToString
  parent: Microsoft.Azure.Search.Models.ScoringParameter
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: Microsoft.Azure.Search.Models.ScoringParameter.ToString()
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/ScoringParameter.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ToString
    path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/ScoringParameter.cs
    startLine: 81
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nReturns the scoring parameter in a format that can be used in a Search API request.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\nThe scoring parameter as a colon-separated name-value pair (for example, mylocation:-122.2,44.8)\n"
  overridden: System.Object.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Azure.Search.Models
  isExternal: false
  name: Microsoft.Azure.Search.Models
  fullName: Microsoft.Azure.Search.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Spatial.GeographyPoint
  parent: Microsoft.Spatial
  isExternal: true
  name: GeographyPoint
  fullName: Microsoft.Spatial.GeographyPoint
- uid: Microsoft.Spatial
  isExternal: false
  name: Microsoft.Spatial
  fullName: Microsoft.Spatial
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
