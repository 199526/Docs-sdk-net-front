items:
- uid: Microsoft.Azure.Search.Models.Field
  commentId: T:Microsoft.Azure.Search.Models.Field
  id: Field
  parent: Microsoft.Azure.Search.Models
  children:
  - Microsoft.Azure.Search.Models.Field.#ctor
  - Microsoft.Azure.Search.Models.Field.#ctor(System.String,Microsoft.Azure.Search.Models.AnalyzerName)
  - Microsoft.Azure.Search.Models.Field.#ctor(System.String,Microsoft.Azure.Search.Models.DataType)
  - Microsoft.Azure.Search.Models.Field.#ctor(System.String,Microsoft.Azure.Search.Models.DataType,Microsoft.Azure.Search.Models.AnalyzerName)
  - Microsoft.Azure.Search.Models.Field.Analyzer
  - Microsoft.Azure.Search.Models.Field.IndexAnalyzer
  - Microsoft.Azure.Search.Models.Field.IsFacetable
  - Microsoft.Azure.Search.Models.Field.IsFilterable
  - Microsoft.Azure.Search.Models.Field.IsKey
  - Microsoft.Azure.Search.Models.Field.IsRetrievable
  - Microsoft.Azure.Search.Models.Field.IsSearchable
  - Microsoft.Azure.Search.Models.Field.IsSortable
  - Microsoft.Azure.Search.Models.Field.Name
  - Microsoft.Azure.Search.Models.Field.SearchAnalyzer
  - Microsoft.Azure.Search.Models.Field.Type
  - Microsoft.Azure.Search.Models.Field.Validate
  langs:
  - csharp
  - vb
  name: Field
  fullName: Microsoft.Azure.Search.Models.Field
  type: Class
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/Field.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Field
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/Field.cs
    startLine: 15
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nRepresents a field in an index definition in Azure Search, which describes the name, data type, and search\nbehavior of a field.\n<see href=\"https://msdn.microsoft.com/library/azure/dn798941.aspx\"></see>\n"
  example: []
  syntax:
    content: public class Field
    content.vb: Public Class Field
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Search.Models.Field.#ctor
  commentId: M:Microsoft.Azure.Search.Models.Field.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Search.Models.Field
  langs:
  - csharp
  - vb
  name: Field()
  fullName: Microsoft.Azure.Search.Models.Field.Field()
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/Field.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: .ctor
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/Field.cs
    startLine: 20
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nInitializes a new instance of the Field class.\n"
  example: []
  syntax:
    content: public Field()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.Field.#ctor(System.String,Microsoft.Azure.Search.Models.DataType)
  commentId: M:Microsoft.Azure.Search.Models.Field.#ctor(System.String,Microsoft.Azure.Search.Models.DataType)
  id: '#ctor(System.String,Microsoft.Azure.Search.Models.DataType)'
  parent: Microsoft.Azure.Search.Models.Field
  langs:
  - csharp
  - vb
  name: Field(String, DataType)
  fullName: Microsoft.Azure.Search.Models.Field.Field(System.String, Microsoft.Azure.Search.Models.DataType)
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/Field.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: .ctor
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/Field.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nInitializes a new instance of the Field class with required arguments.\n"
  example: []
  syntax:
    content: public Field(string name, DataType dataType)
    content.vb: Public Sub New(name As String, dataType As DataType)
    parameters:
    - id: name
      type: System.String
      description: The name of the field.
    - id: dataType
      type: Microsoft.Azure.Search.Models.DataType
      description: The data type of the field.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.Field.#ctor(System.String,Microsoft.Azure.Search.Models.AnalyzerName)
  commentId: M:Microsoft.Azure.Search.Models.Field.#ctor(System.String,Microsoft.Azure.Search.Models.AnalyzerName)
  id: '#ctor(System.String,Microsoft.Azure.Search.Models.AnalyzerName)'
  parent: Microsoft.Azure.Search.Models.Field
  langs:
  - csharp
  - vb
  name: Field(String, AnalyzerName)
  fullName: Microsoft.Azure.Search.Models.Field.Field(System.String, Microsoft.Azure.Search.Models.AnalyzerName)
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/Field.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: .ctor
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/Field.cs
    startLine: 42
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nInitializes a new instance of the Field class with required arguments.\n"
  remarks: The new field will automatically be searchable and of type Edm.String.
  example: []
  syntax:
    content: public Field(string name, AnalyzerName analyzerName)
    content.vb: Public Sub New(name As String, analyzerName As AnalyzerName)
    parameters:
    - id: name
      type: System.String
      description: The name of the field.
    - id: analyzerName
      type: Microsoft.Azure.Search.Models.AnalyzerName
      description: The name of the analyzer to use for the field.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.Field.#ctor(System.String,Microsoft.Azure.Search.Models.DataType,Microsoft.Azure.Search.Models.AnalyzerName)
  commentId: M:Microsoft.Azure.Search.Models.Field.#ctor(System.String,Microsoft.Azure.Search.Models.DataType,Microsoft.Azure.Search.Models.AnalyzerName)
  id: '#ctor(System.String,Microsoft.Azure.Search.Models.DataType,Microsoft.Azure.Search.Models.AnalyzerName)'
  parent: Microsoft.Azure.Search.Models.Field
  langs:
  - csharp
  - vb
  name: Field(String, DataType, AnalyzerName)
  fullName: Microsoft.Azure.Search.Models.Field.Field(System.String, Microsoft.Azure.Search.Models.DataType, Microsoft.Azure.Search.Models.AnalyzerName)
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/Field.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: .ctor
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/Field.cs
    startLine: 55
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nInitializes a new instance of the Field class with required arguments.\n"
  remarks: The new field will automatically be searchable.
  example: []
  syntax:
    content: public Field(string name, DataType dataType, AnalyzerName analyzerName)
    content.vb: Public Sub New(name As String, dataType As DataType, analyzerName As AnalyzerName)
    parameters:
    - id: name
      type: System.String
      description: The name of the field.
    - id: dataType
      type: Microsoft.Azure.Search.Models.DataType
      description: The data type of the field.
    - id: analyzerName
      type: Microsoft.Azure.Search.Models.AnalyzerName
      description: The name of the analyzer to use for the field.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.Field.Name
  commentId: P:Microsoft.Azure.Search.Models.Field.Name
  id: Name
  parent: Microsoft.Azure.Search.Models.Field
  langs:
  - csharp
  - vb
  name: Name
  fullName: Microsoft.Azure.Search.Models.Field.Name
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/Field.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Name
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/Field.cs
    startLine: 66
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the name of the field.\n<see href=\"https://msdn.microsoft.com/library/azure/dn857353.aspx\"></see>\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "name")]

      public string Name { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="name")>

      Public Property Name As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.Field.Type
  commentId: P:Microsoft.Azure.Search.Models.Field.Type
  id: Type
  parent: Microsoft.Azure.Search.Models.Field
  langs:
  - csharp
  - vb
  name: Type
  fullName: Microsoft.Azure.Search.Models.Field.Type
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/Field.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Type
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/Field.cs
    startLine: 72
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the data type of the field.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "type")]

      public DataType Type { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="type")>

      Public Property Type As DataType
    parameters: []
    return:
      type: Microsoft.Azure.Search.Models.DataType
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: type
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.Field.Analyzer
  commentId: P:Microsoft.Azure.Search.Models.Field.Analyzer
  id: Analyzer
  parent: Microsoft.Azure.Search.Models.Field
  langs:
  - csharp
  - vb
  name: Analyzer
  fullName: Microsoft.Azure.Search.Models.Field.Analyzer
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/Field.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Analyzer
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/Field.cs
    startLine: 83
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the name of the analyzer to use for the field at search time and \nindexing time. This option can be used only with searchable fields\nand it can't be set together with either SearchAnalyzer or\nIndexAnalyzer. Once the analyzer is chosen, it cannot be changed\nfor the field.\n<see href=\"https://msdn.microsoft.com/library/azure/dn879793.aspx\"></see> \n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "analyzer")]

      public AnalyzerName Analyzer { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="analyzer")>

      Public Property Analyzer As AnalyzerName
    parameters: []
    return:
      type: Microsoft.Azure.Search.Models.AnalyzerName
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: analyzer
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.Field.SearchAnalyzer
  commentId: P:Microsoft.Azure.Search.Models.Field.SearchAnalyzer
  id: SearchAnalyzer
  parent: Microsoft.Azure.Search.Models.Field
  langs:
  - csharp
  - vb
  name: SearchAnalyzer
  fullName: Microsoft.Azure.Search.Models.Field.SearchAnalyzer
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/Field.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: SearchAnalyzer
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/Field.cs
    startLine: 93
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the name of the analyzer used at search time for the field. This\noption can be used only with searchable fields. It must be set together\nwith IndexAnalyzer and it cannot be set together with the Analyzer\noption. This analyzer can be updated on an existing field.\n<see href=\"https://msdn.microsoft.com/library/azure/dn879793.aspx\"></see> \n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "searchAnalyzer")]

      public AnalyzerName SearchAnalyzer { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="searchAnalyzer")>

      Public Property SearchAnalyzer As AnalyzerName
    parameters: []
    return:
      type: Microsoft.Azure.Search.Models.AnalyzerName
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: searchAnalyzer
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.Field.IndexAnalyzer
  commentId: P:Microsoft.Azure.Search.Models.Field.IndexAnalyzer
  id: IndexAnalyzer
  parent: Microsoft.Azure.Search.Models.Field
  langs:
  - csharp
  - vb
  name: IndexAnalyzer
  fullName: Microsoft.Azure.Search.Models.Field.IndexAnalyzer
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/Field.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: IndexAnalyzer
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/Field.cs
    startLine: 103
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the name of the analyzer used at indexing time for the field. This\noption can be used only with searchable fields. It must be set together\nwith SearchAnalyzer and it cannot be set together with the Analyzer\noption. Once the analyzer is chosen, it cannot be changed for the field.\n<see href=\"https://msdn.microsoft.com/library/azure/dn879793.aspx\"></see> \n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "indexAnalyzer")]

      public AnalyzerName IndexAnalyzer { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="indexAnalyzer")>

      Public Property IndexAnalyzer As AnalyzerName
    parameters: []
    return:
      type: Microsoft.Azure.Search.Models.AnalyzerName
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: indexAnalyzer
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.Field.IsKey
  commentId: P:Microsoft.Azure.Search.Models.Field.IsKey
  id: IsKey
  parent: Microsoft.Azure.Search.Models.Field
  langs:
  - csharp
  - vb
  name: IsKey
  fullName: Microsoft.Azure.Search.Models.Field.IsKey
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/Field.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: IsKey
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/Field.cs
    startLine: 111
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets a value indicating whether the field is the key of\nthe index. Valid only for string fields. Every index must have\nexactly one key field.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("key")]

      public bool IsKey { get; set; }
    content.vb: >-
      <JsonProperty("key")>

      Public Property IsKey As Boolean
    parameters: []
    return:
      type: System.Boolean
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: key
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.Field.IsSearchable
  commentId: P:Microsoft.Azure.Search.Models.Field.IsSearchable
  id: IsSearchable
  parent: Microsoft.Azure.Search.Models.Field
  langs:
  - csharp
  - vb
  name: IsSearchable
  fullName: Microsoft.Azure.Search.Models.Field.IsSearchable
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/Field.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: IsSearchable
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/Field.cs
    startLine: 119
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets a value indicating whether the field is included in\nfull-text searches. Valid only forstring or string collection\nfields. Default is false.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("searchable")]

      public bool IsSearchable { get; set; }
    content.vb: >-
      <JsonProperty("searchable")>

      Public Property IsSearchable As Boolean
    parameters: []
    return:
      type: System.Boolean
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: searchable
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.Field.IsFilterable
  commentId: P:Microsoft.Azure.Search.Models.Field.IsFilterable
  id: IsFilterable
  parent: Microsoft.Azure.Search.Models.Field
  langs:
  - csharp
  - vb
  name: IsFilterable
  fullName: Microsoft.Azure.Search.Models.Field.IsFilterable
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/Field.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: IsFilterable
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/Field.cs
    startLine: 126
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets a value indicating whether the field can be used in\nfilter expressions. Default is false.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("filterable")]

      public bool IsFilterable { get; set; }
    content.vb: >-
      <JsonProperty("filterable")>

      Public Property IsFilterable As Boolean
    parameters: []
    return:
      type: System.Boolean
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: filterable
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.Field.IsSortable
  commentId: P:Microsoft.Azure.Search.Models.Field.IsSortable
  id: IsSortable
  parent: Microsoft.Azure.Search.Models.Field
  langs:
  - csharp
  - vb
  name: IsSortable
  fullName: Microsoft.Azure.Search.Models.Field.IsSortable
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/Field.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: IsSortable
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/Field.cs
    startLine: 134
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets a value indicating whether the field can be used in\norderby expressions. Not valid for string collection fields.\nDefault is false.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("sortable")]

      public bool IsSortable { get; set; }
    content.vb: >-
      <JsonProperty("sortable")>

      Public Property IsSortable As Boolean
    parameters: []
    return:
      type: System.Boolean
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: sortable
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.Field.IsFacetable
  commentId: P:Microsoft.Azure.Search.Models.Field.IsFacetable
  id: IsFacetable
  parent: Microsoft.Azure.Search.Models.Field
  langs:
  - csharp
  - vb
  name: IsFacetable
  fullName: Microsoft.Azure.Search.Models.Field.IsFacetable
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/Field.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: IsFacetable
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/Field.cs
    startLine: 141
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets a value indicating whether it is possible to facet on\nthis field. Not valid for geo-point fields. Default is false.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("facetable")]

      public bool IsFacetable { get; set; }
    content.vb: >-
      <JsonProperty("facetable")>

      Public Property IsFacetable As Boolean
    parameters: []
    return:
      type: System.Boolean
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: facetable
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.Field.IsRetrievable
  commentId: P:Microsoft.Azure.Search.Models.Field.IsRetrievable
  id: IsRetrievable
  parent: Microsoft.Azure.Search.Models.Field
  langs:
  - csharp
  - vb
  name: IsRetrievable
  fullName: Microsoft.Azure.Search.Models.Field.IsRetrievable
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/Field.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: IsRetrievable
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/Field.cs
    startLine: 148
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets a value indicating whether the field can be returned\nin a search result. Default is true.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("retrievable")]

      public bool IsRetrievable { get; set; }
    content.vb: >-
      <JsonProperty("retrievable")>

      Public Property IsRetrievable As Boolean
    parameters: []
    return:
      type: System.Boolean
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: retrievable
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.Field.Validate
  commentId: M:Microsoft.Azure.Search.Models.Field.Validate
  id: Validate
  parent: Microsoft.Azure.Search.Models.Field
  langs:
  - csharp
  - vb
  name: Validate()
  fullName: Microsoft.Azure.Search.Models.Field.Validate()
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/Field.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Validate
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/Field.cs
    startLine: 154
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nValidate the object. Throws ValidationException if validation fails.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Search.Models
  isExternal: false
  name: Microsoft.Azure.Search.Models
  fullName: Microsoft.Azure.Search.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.Azure.Search.Models.DataType
  parent: Microsoft.Azure.Search.Models
  isExternal: false
  name: DataType
  fullName: Microsoft.Azure.Search.Models.DataType
- uid: Microsoft.Azure.Search.Models.AnalyzerName
  parent: Microsoft.Azure.Search.Models
  isExternal: false
  name: AnalyzerName
  fullName: Microsoft.Azure.Search.Models.AnalyzerName
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
