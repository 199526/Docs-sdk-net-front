items:
- uid: Microsoft.Azure.Search.Models.ShingleTokenFilter
  commentId: T:Microsoft.Azure.Search.Models.ShingleTokenFilter
  id: ShingleTokenFilter
  parent: Microsoft.Azure.Search.Models
  children:
  - Microsoft.Azure.Search.Models.ShingleTokenFilter.#ctor
  - Microsoft.Azure.Search.Models.ShingleTokenFilter.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String)
  - Microsoft.Azure.Search.Models.ShingleTokenFilter.FilterToken
  - Microsoft.Azure.Search.Models.ShingleTokenFilter.MaxShingleSize
  - Microsoft.Azure.Search.Models.ShingleTokenFilter.MinShingleSize
  - Microsoft.Azure.Search.Models.ShingleTokenFilter.OutputUnigrams
  - Microsoft.Azure.Search.Models.ShingleTokenFilter.OutputUnigramsIfNoShingles
  - Microsoft.Azure.Search.Models.ShingleTokenFilter.TokenSeparator
  - Microsoft.Azure.Search.Models.ShingleTokenFilter.Validate
  langs:
  - csharp
  - vb
  name: ShingleTokenFilter
  fullName: Microsoft.Azure.Search.Models.ShingleTokenFilter
  type: Class
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/ShingleTokenFilter.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ShingleTokenFilter
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/ShingleTokenFilter.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nCreates combinations of tokens as a single token. This token filter is\nimplemented using Apache Lucene.\n<see href=\"http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/shingle/ShingleFilter.html\"></see>\n"
  example: []
  syntax:
    content: >-
      [JsonObject("#Microsoft.Azure.Search.ShingleTokenFilter")]

      public class ShingleTokenFilter : TokenFilter
    content.vb: >-
      <JsonObject("#Microsoft.Azure.Search.ShingleTokenFilter")>

      Public Class ShingleTokenFilter
          Inherits TokenFilter
  inheritance:
  - System.Object
  - Microsoft.Azure.Search.Models.TokenFilter
  inheritedMembers:
  - Microsoft.Azure.Search.Models.TokenFilter.Name
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: Newtonsoft.Json.JsonObjectAttribute
    ctor: Newtonsoft.Json.JsonObjectAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: '#Microsoft.Azure.Search.ShingleTokenFilter'
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Search.Models.ShingleTokenFilter.#ctor
  commentId: M:Microsoft.Azure.Search.Models.ShingleTokenFilter.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Search.Models.ShingleTokenFilter
  langs:
  - csharp
  - vb
  name: ShingleTokenFilter()
  fullName: Microsoft.Azure.Search.Models.ShingleTokenFilter.ShingleTokenFilter()
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/ShingleTokenFilter.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: .ctor
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/ShingleTokenFilter.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nInitializes a new instance of the ShingleTokenFilter class.\n"
  example: []
  syntax:
    content: public ShingleTokenFilter()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.ShingleTokenFilter.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String)
  commentId: M:Microsoft.Azure.Search.Models.ShingleTokenFilter.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String)
  id: '#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String)'
  parent: Microsoft.Azure.Search.Models.ShingleTokenFilter
  langs:
  - csharp
  - vb
  name: ShingleTokenFilter(String, Nullable<Int32>, Nullable<Int32>, Nullable<Boolean>, Nullable<Boolean>, String, String)
  fullName: Microsoft.Azure.Search.Models.ShingleTokenFilter.ShingleTokenFilter(System.String, System.Nullable<System.Int32>, System.Nullable<System.Int32>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/ShingleTokenFilter.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: .ctor
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/ShingleTokenFilter.cs
    startLine: 34
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nInitializes a new instance of the ShingleTokenFilter class.\n"
  example: []
  syntax:
    content: public ShingleTokenFilter(string name, int ? maxShingleSize = null, int ? minShingleSize = null, bool ? outputUnigrams = null, bool ? outputUnigramsIfNoShingles = null, string tokenSeparator = null, string filterToken = null)
    content.vb: Public Sub New(name As String, maxShingleSize As Integer? = Nothing, minShingleSize As Integer? = Nothing, outputUnigrams As Boolean? = Nothing, outputUnigramsIfNoShingles As Boolean? = Nothing, tokenSeparator As String = Nothing, filterToken As String = Nothing)
    parameters:
    - id: name
      type: System.String
    - id: maxShingleSize
      type: System.Nullable{System.Int32}
    - id: minShingleSize
      type: System.Nullable{System.Int32}
    - id: outputUnigrams
      type: System.Nullable{System.Boolean}
    - id: outputUnigramsIfNoShingles
      type: System.Nullable{System.Boolean}
    - id: tokenSeparator
      type: System.String
    - id: filterToken
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Search.Models.ShingleTokenFilter.ShingleTokenFilter(System.String, System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.String, System.String)
  name.vb: ShingleTokenFilter(String, Nullable(Of Int32), Nullable(Of Int32), Nullable(Of Boolean), Nullable(Of Boolean), String, String)
- uid: Microsoft.Azure.Search.Models.ShingleTokenFilter.MaxShingleSize
  commentId: P:Microsoft.Azure.Search.Models.ShingleTokenFilter.MaxShingleSize
  id: MaxShingleSize
  parent: Microsoft.Azure.Search.Models.ShingleTokenFilter
  langs:
  - csharp
  - vb
  name: MaxShingleSize
  fullName: Microsoft.Azure.Search.Models.ShingleTokenFilter.MaxShingleSize
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/ShingleTokenFilter.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: MaxShingleSize
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/ShingleTokenFilter.cs
    startLine: 48
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the maximum shingle size. Default is 2.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "maxShingleSize")]

      public int ? MaxShingleSize { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="maxShingleSize")>

      Public Property MaxShingleSize As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: maxShingleSize
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.ShingleTokenFilter.MinShingleSize
  commentId: P:Microsoft.Azure.Search.Models.ShingleTokenFilter.MinShingleSize
  id: MinShingleSize
  parent: Microsoft.Azure.Search.Models.ShingleTokenFilter
  langs:
  - csharp
  - vb
  name: MinShingleSize
  fullName: Microsoft.Azure.Search.Models.ShingleTokenFilter.MinShingleSize
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/ShingleTokenFilter.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: MinShingleSize
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/ShingleTokenFilter.cs
    startLine: 54
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the minimum shingle size. Default is 2.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "minShingleSize")]

      public int ? MinShingleSize { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="minShingleSize")>

      Public Property MinShingleSize As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: minShingleSize
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.ShingleTokenFilter.OutputUnigrams
  commentId: P:Microsoft.Azure.Search.Models.ShingleTokenFilter.OutputUnigrams
  id: OutputUnigrams
  parent: Microsoft.Azure.Search.Models.ShingleTokenFilter
  langs:
  - csharp
  - vb
  name: OutputUnigrams
  fullName: Microsoft.Azure.Search.Models.ShingleTokenFilter.OutputUnigrams
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/ShingleTokenFilter.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: OutputUnigrams
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/ShingleTokenFilter.cs
    startLine: 62
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets a value indicating whether the output stream will\ncontain the input tokens (unigrams) as well as shingles. Default\nis true.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "outputUnigrams")]

      public bool ? OutputUnigrams { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="outputUnigrams")>

      Public Property OutputUnigrams As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: outputUnigrams
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.ShingleTokenFilter.OutputUnigramsIfNoShingles
  commentId: P:Microsoft.Azure.Search.Models.ShingleTokenFilter.OutputUnigramsIfNoShingles
  id: OutputUnigramsIfNoShingles
  parent: Microsoft.Azure.Search.Models.ShingleTokenFilter
  langs:
  - csharp
  - vb
  name: OutputUnigramsIfNoShingles
  fullName: Microsoft.Azure.Search.Models.ShingleTokenFilter.OutputUnigramsIfNoShingles
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/ShingleTokenFilter.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: OutputUnigramsIfNoShingles
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/ShingleTokenFilter.cs
    startLine: 70
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets a value indicating whether to output unigrams for\nthose times when no shingles are available. This property takes\nprecedence when outputUnigrams is set to false. Default is false.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "outputUnigramsIfNoShingles")]

      public bool ? OutputUnigramsIfNoShingles { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="outputUnigramsIfNoShingles")>

      Public Property OutputUnigramsIfNoShingles As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: outputUnigramsIfNoShingles
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.ShingleTokenFilter.TokenSeparator
  commentId: P:Microsoft.Azure.Search.Models.ShingleTokenFilter.TokenSeparator
  id: TokenSeparator
  parent: Microsoft.Azure.Search.Models.ShingleTokenFilter
  langs:
  - csharp
  - vb
  name: TokenSeparator
  fullName: Microsoft.Azure.Search.Models.ShingleTokenFilter.TokenSeparator
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/ShingleTokenFilter.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: TokenSeparator
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/ShingleTokenFilter.cs
    startLine: 77
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the string to use when joining adjacent tokens to\nform a shingle. Default is a single space (\" \").\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "tokenSeparator")]

      public string TokenSeparator { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="tokenSeparator")>

      Public Property TokenSeparator As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: tokenSeparator
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.ShingleTokenFilter.FilterToken
  commentId: P:Microsoft.Azure.Search.Models.ShingleTokenFilter.FilterToken
  id: FilterToken
  parent: Microsoft.Azure.Search.Models.ShingleTokenFilter
  langs:
  - csharp
  - vb
  name: FilterToken
  fullName: Microsoft.Azure.Search.Models.ShingleTokenFilter.FilterToken
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/ShingleTokenFilter.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: FilterToken
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/ShingleTokenFilter.cs
    startLine: 84
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the string to insert for each position at which there\nis no token. Default is an underscore (\"_\").\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "filterToken")]

      public string FilterToken { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="filterToken")>

      Public Property FilterToken As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: filterToken
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.ShingleTokenFilter.Validate
  commentId: M:Microsoft.Azure.Search.Models.ShingleTokenFilter.Validate
  id: Validate
  parent: Microsoft.Azure.Search.Models.ShingleTokenFilter
  langs:
  - csharp
  - vb
  name: Validate()
  fullName: Microsoft.Azure.Search.Models.ShingleTokenFilter.Validate()
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/ShingleTokenFilter.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Validate
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/ShingleTokenFilter.cs
    startLine: 93
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public override void Validate()
    content.vb: Public Overrides Sub Validate
  overridden: Microsoft.Azure.Search.Models.TokenFilter.Validate
  exceptions:
  - type: Microsoft.Rest.ValidationException
    commentId: T:Microsoft.Rest.ValidationException
    description: "\nThrown if validation fails\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Azure.Search.Models
  isExternal: false
  name: Microsoft.Azure.Search.Models
  fullName: Microsoft.Azure.Search.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Azure.Search.Models.TokenFilter
  parent: Microsoft.Azure.Search.Models
  isExternal: false
  name: TokenFilter
  fullName: Microsoft.Azure.Search.Models.TokenFilter
- uid: Microsoft.Azure.Search.Models.TokenFilter.Name
  parent: Microsoft.Azure.Search.Models.TokenFilter
  isExternal: false
  name: Name
  fullName: Microsoft.Azure.Search.Models.TokenFilter.Name
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.TokenFilter.Validate
  parent: Microsoft.Azure.Search.Models.TokenFilter
  isExternal: false
  name: Validate()
  fullName: Microsoft.Azure.Search.Models.TokenFilter.Validate()
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.TokenFilter.Validate
    name: Validate
    fullName: Microsoft.Azure.Search.Models.TokenFilter.Validate
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.TokenFilter.Validate
    name: Validate
    fullName: Microsoft.Azure.Search.Models.TokenFilter.Validate
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Rest.ValidationException
