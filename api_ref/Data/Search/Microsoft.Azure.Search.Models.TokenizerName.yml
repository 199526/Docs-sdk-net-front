items:
- uid: Microsoft.Azure.Search.Models.TokenizerName
  commentId: T:Microsoft.Azure.Search.Models.TokenizerName
  id: TokenizerName
  parent: Microsoft.Azure.Search.Models
  children:
  - Microsoft.Azure.Search.Models.TokenizerName.Classic
  - Microsoft.Azure.Search.Models.TokenizerName.Create(System.String)
  - Microsoft.Azure.Search.Models.TokenizerName.EdgeNGram
  - Microsoft.Azure.Search.Models.TokenizerName.Keyword
  - Microsoft.Azure.Search.Models.TokenizerName.Letter
  - Microsoft.Azure.Search.Models.TokenizerName.Lowercase
  - Microsoft.Azure.Search.Models.TokenizerName.NGram
  - Microsoft.Azure.Search.Models.TokenizerName.PathHierarchy
  - Microsoft.Azure.Search.Models.TokenizerName.Pattern
  - Microsoft.Azure.Search.Models.TokenizerName.Standard
  - Microsoft.Azure.Search.Models.TokenizerName.UaxUrlEmail
  - Microsoft.Azure.Search.Models.TokenizerName.Whitespace
  langs:
  - csharp
  - vb
  name: TokenizerName
  fullName: Microsoft.Azure.Search.Models.TokenizerName
  type: Class
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenizerName.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: TokenizerName
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenizerName.cs
    startLine: 13
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nDefines the names of all tokenizers supported by Azure Search.\n<see href=\"https://msdn.microsoft.com/library/azure/mt605304.aspx\"></see>\n"
  example: []
  syntax:
    content: >-
      [JsonConverter(typeof (ExtensibleEnumConverter<TokenizerName>))]

      public sealed class TokenizerName : ExtensibleEnum<TokenizerName>, IEquatable<TokenizerName>
    content.vb: >-
      <JsonConverter(GetType(ExtensibleEnumConverter(Of TokenizerName)))>

      Public NotInheritable Class TokenizerName
          Inherits ExtensibleEnum(Of TokenizerName)
          Implements IEquatable(Of TokenizerName)
  inheritance:
  - System.Object
  - Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.TokenizerName}
  implements:
  - System.IEquatable{Microsoft.Azure.Search.Models.TokenizerName}
  inheritedMembers:
  - Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.TokenizerName}.Lookup(System.String)
  - Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.TokenizerName}.Equals(Microsoft.Azure.Search.Models.TokenizerName)
  - Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.TokenizerName}.Equals(System.Object)
  - Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.TokenizerName}.GetHashCode
  - Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.TokenizerName}.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: Newtonsoft.Json.JsonConverterAttribute
    ctor: Newtonsoft.Json.JsonConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Microsoft.Azure.Search.Serialization.ExtensibleEnumConverter{Microsoft.Azure.Search.Models.TokenizerName}
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Azure.Search.Models.TokenizerName.Classic
  commentId: F:Microsoft.Azure.Search.Models.TokenizerName.Classic
  id: Classic
  parent: Microsoft.Azure.Search.Models.TokenizerName
  langs:
  - csharp
  - vb
  name: Classic
  fullName: Microsoft.Azure.Search.Models.TokenizerName.Classic
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenizerName.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Classic
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenizerName.cs
    startLine: 24
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGrammar-based tokenizer that is suitable for processing most\nEuropean-language documents.\n<see href=\"http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/standard/ClassicTokenizer.html\"></see>\n"
  example: []
  syntax:
    content: public static readonly TokenizerName Classic
    content.vb: Public Shared ReadOnly Classic As TokenizerName
    return:
      type: Microsoft.Azure.Search.Models.TokenizerName
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.TokenizerName.EdgeNGram
  commentId: F:Microsoft.Azure.Search.Models.TokenizerName.EdgeNGram
  id: EdgeNGram
  parent: Microsoft.Azure.Search.Models.TokenizerName
  langs:
  - csharp
  - vb
  name: EdgeNGram
  fullName: Microsoft.Azure.Search.Models.TokenizerName.EdgeNGram
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenizerName.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: EdgeNGram
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenizerName.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nTokenizes the input from an edge into n-grams of the given size(s).\n<see href=\"https://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ngram/EdgeNGramTokenizer.html\"></see>\n"
  example: []
  syntax:
    content: public static readonly TokenizerName EdgeNGram
    content.vb: Public Shared ReadOnly EdgeNGram As TokenizerName
    return:
      type: Microsoft.Azure.Search.Models.TokenizerName
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.TokenizerName.Keyword
  commentId: F:Microsoft.Azure.Search.Models.TokenizerName.Keyword
  id: Keyword
  parent: Microsoft.Azure.Search.Models.TokenizerName
  langs:
  - csharp
  - vb
  name: Keyword
  fullName: Microsoft.Azure.Search.Models.TokenizerName.Keyword
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenizerName.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Keyword
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenizerName.cs
    startLine: 36
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nEmits the entire input as a single token.\n<see href=\"http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/KeywordTokenizer.html\"></see>\n"
  example: []
  syntax:
    content: public static readonly TokenizerName Keyword
    content.vb: Public Shared ReadOnly Keyword As TokenizerName
    return:
      type: Microsoft.Azure.Search.Models.TokenizerName
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.TokenizerName.Letter
  commentId: F:Microsoft.Azure.Search.Models.TokenizerName.Letter
  id: Letter
  parent: Microsoft.Azure.Search.Models.TokenizerName
  langs:
  - csharp
  - vb
  name: Letter
  fullName: Microsoft.Azure.Search.Models.TokenizerName.Letter
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenizerName.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Letter
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenizerName.cs
    startLine: 42
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nDivides text at non-letters.\n<see href=\"http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/LetterTokenizer.html\"></see>\n"
  example: []
  syntax:
    content: public static readonly TokenizerName Letter
    content.vb: Public Shared ReadOnly Letter As TokenizerName
    return:
      type: Microsoft.Azure.Search.Models.TokenizerName
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.TokenizerName.Lowercase
  commentId: F:Microsoft.Azure.Search.Models.TokenizerName.Lowercase
  id: Lowercase
  parent: Microsoft.Azure.Search.Models.TokenizerName
  langs:
  - csharp
  - vb
  name: Lowercase
  fullName: Microsoft.Azure.Search.Models.TokenizerName.Lowercase
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenizerName.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Lowercase
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenizerName.cs
    startLine: 48
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nDivides text at non-letters and converts them to lower case.\n<see href=\"http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/LowerCaseTokenizer.html\"></see>\n"
  example: []
  syntax:
    content: public static readonly TokenizerName Lowercase
    content.vb: Public Shared ReadOnly Lowercase As TokenizerName
    return:
      type: Microsoft.Azure.Search.Models.TokenizerName
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.TokenizerName.NGram
  commentId: F:Microsoft.Azure.Search.Models.TokenizerName.NGram
  id: NGram
  parent: Microsoft.Azure.Search.Models.TokenizerName
  langs:
  - csharp
  - vb
  name: NGram
  fullName: Microsoft.Azure.Search.Models.TokenizerName.NGram
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenizerName.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: NGram
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenizerName.cs
    startLine: 54
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nTokenizes the input into n-grams of the given size(s).\n<see href=\"http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ngram/NGramTokenizer.html\"></see>\n"
  example: []
  syntax:
    content: public static readonly TokenizerName NGram
    content.vb: Public Shared ReadOnly NGram As TokenizerName
    return:
      type: Microsoft.Azure.Search.Models.TokenizerName
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.TokenizerName.PathHierarchy
  commentId: F:Microsoft.Azure.Search.Models.TokenizerName.PathHierarchy
  id: PathHierarchy
  parent: Microsoft.Azure.Search.Models.TokenizerName
  langs:
  - csharp
  - vb
  name: PathHierarchy
  fullName: Microsoft.Azure.Search.Models.TokenizerName.PathHierarchy
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenizerName.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: PathHierarchy
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenizerName.cs
    startLine: 60
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nTokenizer for path-like hierarchies.\n<see href=\"http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/path/PathHierarchyTokenizer.html\"></see>\n"
  example: []
  syntax:
    content: public static readonly TokenizerName PathHierarchy
    content.vb: Public Shared ReadOnly PathHierarchy As TokenizerName
    return:
      type: Microsoft.Azure.Search.Models.TokenizerName
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.TokenizerName.Pattern
  commentId: F:Microsoft.Azure.Search.Models.TokenizerName.Pattern
  id: Pattern
  parent: Microsoft.Azure.Search.Models.TokenizerName
  langs:
  - csharp
  - vb
  name: Pattern
  fullName: Microsoft.Azure.Search.Models.TokenizerName.Pattern
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenizerName.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Pattern
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenizerName.cs
    startLine: 66
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nTokenizer that uses regex pattern matching to construct distinct tokens.\n<see href=\"http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/pattern/PatternTokenizer.html\"></see>\n"
  example: []
  syntax:
    content: public static readonly TokenizerName Pattern
    content.vb: Public Shared ReadOnly Pattern As TokenizerName
    return:
      type: Microsoft.Azure.Search.Models.TokenizerName
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.TokenizerName.Standard
  commentId: F:Microsoft.Azure.Search.Models.TokenizerName.Standard
  id: Standard
  parent: Microsoft.Azure.Search.Models.TokenizerName
  langs:
  - csharp
  - vb
  name: Standard
  fullName: Microsoft.Azure.Search.Models.TokenizerName.Standard
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenizerName.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Standard
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenizerName.cs
    startLine: 73
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nStandard Lucene analyzer; Composed of the standard tokenizer,\nlowercase filter and stop filter.\n<see href=\"http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/standard/StandardTokenizer.html\"></see>\n"
  example: []
  syntax:
    content: public static readonly TokenizerName Standard
    content.vb: Public Shared ReadOnly Standard As TokenizerName
    return:
      type: Microsoft.Azure.Search.Models.TokenizerName
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.TokenizerName.UaxUrlEmail
  commentId: F:Microsoft.Azure.Search.Models.TokenizerName.UaxUrlEmail
  id: UaxUrlEmail
  parent: Microsoft.Azure.Search.Models.TokenizerName
  langs:
  - csharp
  - vb
  name: UaxUrlEmail
  fullName: Microsoft.Azure.Search.Models.TokenizerName.UaxUrlEmail
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenizerName.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: UaxUrlEmail
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenizerName.cs
    startLine: 79
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nTokenizes urls and emails as one token.\n<see href=\"http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/standard/UAX29URLEmailTokenizer.html\"></see>\n"
  example: []
  syntax:
    content: public static readonly TokenizerName UaxUrlEmail
    content.vb: Public Shared ReadOnly UaxUrlEmail As TokenizerName
    return:
      type: Microsoft.Azure.Search.Models.TokenizerName
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.TokenizerName.Whitespace
  commentId: F:Microsoft.Azure.Search.Models.TokenizerName.Whitespace
  id: Whitespace
  parent: Microsoft.Azure.Search.Models.TokenizerName
  langs:
  - csharp
  - vb
  name: Whitespace
  fullName: Microsoft.Azure.Search.Models.TokenizerName.Whitespace
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenizerName.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Whitespace
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenizerName.cs
    startLine: 85
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nDivides text at whitespace.\n<see href=\"http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/WhitespaceTokenizer.html\"></see>\n"
  example: []
  syntax:
    content: public static readonly TokenizerName Whitespace
    content.vb: Public Shared ReadOnly Whitespace As TokenizerName
    return:
      type: Microsoft.Azure.Search.Models.TokenizerName
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.TokenizerName.Create(System.String)
  commentId: M:Microsoft.Azure.Search.Models.TokenizerName.Create(System.String)
  id: Create(System.String)
  parent: Microsoft.Azure.Search.Models.TokenizerName
  langs:
  - csharp
  - vb
  name: Create(String)
  fullName: Microsoft.Azure.Search.Models.TokenizerName.Create(System.String)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenizerName.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Create
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenizerName.cs
    startLine: 98
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nCreates a new TokenizerName instance, or returns an existing instance if the given name matches that of a\nknown tokenizer.\n"
  example: []
  syntax:
    content: public static TokenizerName Create(string name)
    content.vb: Public Shared Function Create(name As String) As TokenizerName
    parameters:
    - id: name
      type: System.String
      description: Name of the tokenizer.
    return:
      type: Microsoft.Azure.Search.Models.TokenizerName
      description: A TokenizerName instance with the given name.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.Search.Models
  isExternal: false
  name: Microsoft.Azure.Search.Models
  fullName: Microsoft.Azure.Search.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.TokenizerName}
  parent: Microsoft.Azure.Search.Models
  definition: Microsoft.Azure.Search.Models.ExtensibleEnum`1
  name: ExtensibleEnum<TokenizerName>
  fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<Microsoft.Azure.Search.Models.TokenizerName>
  fullname.vb: Microsoft.Azure.Search.Models.ExtensibleEnum(Of Microsoft.Azure.Search.Models.TokenizerName)
  name.vb: ExtensibleEnum(Of TokenizerName)
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1
    name: ExtensibleEnum
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Search.Models.TokenizerName
    name: TokenizerName
    fullName: Microsoft.Azure.Search.Models.TokenizerName
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1
    name: ExtensibleEnum
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Search.Models.TokenizerName
    name: TokenizerName
    fullName: Microsoft.Azure.Search.Models.TokenizerName
  - name: )
    fullName: )
- uid: System.IEquatable{Microsoft.Azure.Search.Models.TokenizerName}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<TokenizerName>
  fullName: System.IEquatable<Microsoft.Azure.Search.Models.TokenizerName>
  fullname.vb: System.IEquatable(Of Microsoft.Azure.Search.Models.TokenizerName)
  name.vb: IEquatable(Of TokenizerName)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Search.Models.TokenizerName
    name: TokenizerName
    fullName: Microsoft.Azure.Search.Models.TokenizerName
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Search.Models.TokenizerName
    name: TokenizerName
    fullName: Microsoft.Azure.Search.Models.TokenizerName
  - name: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.TokenizerName}.Lookup(System.String)
  parent: Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.TokenizerName}
  definition: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Lookup(System.String)
  name: Lookup(String)
  fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<Microsoft.Azure.Search.Models.TokenizerName>.Lookup(System.String)
  fullname.vb: Microsoft.Azure.Search.Models.ExtensibleEnum(Of Microsoft.Azure.Search.Models.TokenizerName).Lookup(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Lookup(System.String)
    name: Lookup
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<Microsoft.Azure.Search.Models.TokenizerName>.Lookup
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Lookup(System.String)
    name: Lookup
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum(Of Microsoft.Azure.Search.Models.TokenizerName).Lookup
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.TokenizerName}.Equals(Microsoft.Azure.Search.Models.TokenizerName)
  parent: Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.TokenizerName}
  definition: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(`0)
  name: Equals(TokenizerName)
  fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<Microsoft.Azure.Search.Models.TokenizerName>.Equals(Microsoft.Azure.Search.Models.TokenizerName)
  fullname.vb: Microsoft.Azure.Search.Models.ExtensibleEnum(Of Microsoft.Azure.Search.Models.TokenizerName).Equals(Microsoft.Azure.Search.Models.TokenizerName)
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(`0)
    name: Equals
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<Microsoft.Azure.Search.Models.TokenizerName>.Equals
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Search.Models.TokenizerName
    name: TokenizerName
    fullName: Microsoft.Azure.Search.Models.TokenizerName
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(`0)
    name: Equals
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum(Of Microsoft.Azure.Search.Models.TokenizerName).Equals
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Search.Models.TokenizerName
    name: TokenizerName
    fullName: Microsoft.Azure.Search.Models.TokenizerName
  - name: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.TokenizerName}.Equals(System.Object)
  parent: Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.TokenizerName}
  definition: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(System.Object)
  name: Equals(Object)
  fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<Microsoft.Azure.Search.Models.TokenizerName>.Equals(System.Object)
  fullname.vb: Microsoft.Azure.Search.Models.ExtensibleEnum(Of Microsoft.Azure.Search.Models.TokenizerName).Equals(System.Object)
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(System.Object)
    name: Equals
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<Microsoft.Azure.Search.Models.TokenizerName>.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(System.Object)
    name: Equals
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum(Of Microsoft.Azure.Search.Models.TokenizerName).Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.TokenizerName}.GetHashCode
  parent: Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.TokenizerName}
  definition: Microsoft.Azure.Search.Models.ExtensibleEnum`1.GetHashCode
  name: GetHashCode()
  fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<Microsoft.Azure.Search.Models.TokenizerName>.GetHashCode()
  fullname.vb: Microsoft.Azure.Search.Models.ExtensibleEnum(Of Microsoft.Azure.Search.Models.TokenizerName).GetHashCode()
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.GetHashCode
    name: GetHashCode
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<Microsoft.Azure.Search.Models.TokenizerName>.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.GetHashCode
    name: GetHashCode
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum(Of Microsoft.Azure.Search.Models.TokenizerName).GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.TokenizerName}.ToString
  parent: Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.TokenizerName}
  definition: Microsoft.Azure.Search.Models.ExtensibleEnum`1.ToString
  name: ToString()
  fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<Microsoft.Azure.Search.Models.TokenizerName>.ToString()
  fullname.vb: Microsoft.Azure.Search.Models.ExtensibleEnum(Of Microsoft.Azure.Search.Models.TokenizerName).ToString()
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.ToString
    name: ToString
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<Microsoft.Azure.Search.Models.TokenizerName>.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.ToString
    name: ToString
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum(Of Microsoft.Azure.Search.Models.TokenizerName).ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1
  parent: Microsoft.Azure.Search.Models
  isExternal: false
  name: ExtensibleEnum<T>
  fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<T>
  fullname.vb: Microsoft.Azure.Search.Models.ExtensibleEnum(Of T)
  name.vb: ExtensibleEnum(Of T)
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1
    name: ExtensibleEnum
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1
    name: ExtensibleEnum
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.IEquatable`1
  parent: System
  isExternal: true
  name: IEquatable<T>
  fullName: System.IEquatable<T>
  fullname.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Lookup(System.String)
  parent: Microsoft.Azure.Search.Models.ExtensibleEnum`1
  isExternal: true
  name: Lookup(String)
  fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<T>.Lookup(System.String)
  fullname.vb: Microsoft.Azure.Search.Models.ExtensibleEnum(Of T).Lookup(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Lookup(System.String)
    name: Lookup
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<T>.Lookup
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Lookup(System.String)
    name: Lookup
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum(Of T).Lookup
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(`0)
  parent: Microsoft.Azure.Search.Models.ExtensibleEnum`1
  isExternal: false
  name: Equals(T)
  fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<T>.Equals(T)
  fullname.vb: Microsoft.Azure.Search.Models.ExtensibleEnum(Of T).Equals(T)
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(`0)
    name: Equals
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<T>.Equals
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(`0)
    name: Equals
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum(Of T).Equals
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(System.Object)
  parent: Microsoft.Azure.Search.Models.ExtensibleEnum`1
  isExternal: true
  name: Equals(Object)
  fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<T>.Equals(System.Object)
  fullname.vb: Microsoft.Azure.Search.Models.ExtensibleEnum(Of T).Equals(System.Object)
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(System.Object)
    name: Equals
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<T>.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(System.Object)
    name: Equals
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum(Of T).Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.GetHashCode
  parent: Microsoft.Azure.Search.Models.ExtensibleEnum`1
  isExternal: false
  name: GetHashCode()
  fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<T>.GetHashCode()
  fullname.vb: Microsoft.Azure.Search.Models.ExtensibleEnum(Of T).GetHashCode()
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.GetHashCode
    name: GetHashCode
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<T>.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.GetHashCode
    name: GetHashCode
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum(Of T).GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.ToString
  parent: Microsoft.Azure.Search.Models.ExtensibleEnum`1
  isExternal: false
  name: ToString()
  fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<T>.ToString()
  fullname.vb: Microsoft.Azure.Search.Models.ExtensibleEnum(Of T).ToString()
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.ToString
    name: ToString
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<T>.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.ToString
    name: ToString
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum(Of T).ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.TokenizerName
  parent: Microsoft.Azure.Search.Models
  isExternal: false
  name: TokenizerName
  fullName: Microsoft.Azure.Search.Models.TokenizerName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
