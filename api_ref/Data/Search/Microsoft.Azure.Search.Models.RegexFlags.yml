items:
- uid: Microsoft.Azure.Search.Models.RegexFlags
  commentId: T:Microsoft.Azure.Search.Models.RegexFlags
  id: RegexFlags
  parent: Microsoft.Azure.Search.Models
  children:
  - Microsoft.Azure.Search.Models.RegexFlags.CanonEq
  - Microsoft.Azure.Search.Models.RegexFlags.CaseInsensitive
  - Microsoft.Azure.Search.Models.RegexFlags.Comments
  - Microsoft.Azure.Search.Models.RegexFlags.Create(System.String)
  - Microsoft.Azure.Search.Models.RegexFlags.DotAll
  - Microsoft.Azure.Search.Models.RegexFlags.Literal
  - Microsoft.Azure.Search.Models.RegexFlags.Multiline
  - Microsoft.Azure.Search.Models.RegexFlags.op_BitwiseOr(Microsoft.Azure.Search.Models.RegexFlags,Microsoft.Azure.Search.Models.RegexFlags)
  - Microsoft.Azure.Search.Models.RegexFlags.UnicodeCase
  - Microsoft.Azure.Search.Models.RegexFlags.UnixLines
  langs:
  - csharp
  - vb
  name: RegexFlags
  fullName: Microsoft.Azure.Search.Models.RegexFlags
  type: Class
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/RegexFlags.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: RegexFlags
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/RegexFlags.cs
    startLine: 15
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nDefines flags that can be combined to control how regular expressions are used in the pattern analyzer and\npattern tokenizer.\n<see href=\"http://docs.oracle.com/javase/6/docs/api/java/util/regex/Pattern.html#field_summary\"></see>\n"
  example: []
  syntax:
    content: >-
      [JsonConverter(typeof (ExtensibleEnumConverter<RegexFlags>))]

      public sealed class RegexFlags : ExtensibleEnum<RegexFlags>, IEquatable<RegexFlags>
    content.vb: >-
      <JsonConverter(GetType(ExtensibleEnumConverter(Of RegexFlags)))>

      Public NotInheritable Class RegexFlags
          Inherits ExtensibleEnum(Of RegexFlags)
          Implements IEquatable(Of RegexFlags)
  inheritance:
  - System.Object
  - Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.RegexFlags}
  implements:
  - System.IEquatable{Microsoft.Azure.Search.Models.RegexFlags}
  inheritedMembers:
  - Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.RegexFlags}.Lookup(System.String)
  - Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.RegexFlags}.Equals(Microsoft.Azure.Search.Models.RegexFlags)
  - Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.RegexFlags}.Equals(System.Object)
  - Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.RegexFlags}.GetHashCode
  - Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.RegexFlags}.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: Newtonsoft.Json.JsonConverterAttribute
    ctor: Newtonsoft.Json.JsonConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Microsoft.Azure.Search.Serialization.ExtensibleEnumConverter{Microsoft.Azure.Search.Models.RegexFlags}
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Azure.Search.Models.RegexFlags.CanonEq
  commentId: F:Microsoft.Azure.Search.Models.RegexFlags.CanonEq
  id: CanonEq
  parent: Microsoft.Azure.Search.Models.RegexFlags
  langs:
  - csharp
  - vb
  name: CanonEq
  fullName: Microsoft.Azure.Search.Models.RegexFlags.CanonEq
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/RegexFlags.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: CanonEq
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/RegexFlags.cs
    startLine: 24
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nEnables canonical equivalence. <see href=\"http://docs.oracle.com/javase/6/docs/api/java/util/regex/Pattern.html#CANON_EQ\"></see>\n"
  example: []
  syntax:
    content: public static readonly RegexFlags CanonEq
    content.vb: Public Shared ReadOnly CanonEq As RegexFlags
    return:
      type: Microsoft.Azure.Search.Models.RegexFlags
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.RegexFlags.CaseInsensitive
  commentId: F:Microsoft.Azure.Search.Models.RegexFlags.CaseInsensitive
  id: CaseInsensitive
  parent: Microsoft.Azure.Search.Models.RegexFlags
  langs:
  - csharp
  - vb
  name: CaseInsensitive
  fullName: Microsoft.Azure.Search.Models.RegexFlags.CaseInsensitive
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/RegexFlags.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: CaseInsensitive
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/RegexFlags.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nEnables case-insensitive matching. <see href=\"http://docs.oracle.com/javase/6/docs/api/java/util/regex/Pattern.html#CASE_INSENSITIVE\"></see>\n"
  example: []
  syntax:
    content: public static readonly RegexFlags CaseInsensitive
    content.vb: Public Shared ReadOnly CaseInsensitive As RegexFlags
    return:
      type: Microsoft.Azure.Search.Models.RegexFlags
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.RegexFlags.Comments
  commentId: F:Microsoft.Azure.Search.Models.RegexFlags.Comments
  id: Comments
  parent: Microsoft.Azure.Search.Models.RegexFlags
  langs:
  - csharp
  - vb
  name: Comments
  fullName: Microsoft.Azure.Search.Models.RegexFlags.Comments
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/RegexFlags.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Comments
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/RegexFlags.cs
    startLine: 34
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nPermits whitespace and comments in the pattern. <see href=\"http://docs.oracle.com/javase/6/docs/api/java/util/regex/Pattern.html#COMMENTS\"></see>\n"
  example: []
  syntax:
    content: public static readonly RegexFlags Comments
    content.vb: Public Shared ReadOnly Comments As RegexFlags
    return:
      type: Microsoft.Azure.Search.Models.RegexFlags
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.RegexFlags.DotAll
  commentId: F:Microsoft.Azure.Search.Models.RegexFlags.DotAll
  id: DotAll
  parent: Microsoft.Azure.Search.Models.RegexFlags
  langs:
  - csharp
  - vb
  name: DotAll
  fullName: Microsoft.Azure.Search.Models.RegexFlags.DotAll
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/RegexFlags.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: DotAll
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/RegexFlags.cs
    startLine: 39
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nEnables dotall mode. <see href=\"http://docs.oracle.com/javase/6/docs/api/java/util/regex/Pattern.html#DOTALL\"></see>\n"
  example: []
  syntax:
    content: public static readonly RegexFlags DotAll
    content.vb: Public Shared ReadOnly DotAll As RegexFlags
    return:
      type: Microsoft.Azure.Search.Models.RegexFlags
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.RegexFlags.Literal
  commentId: F:Microsoft.Azure.Search.Models.RegexFlags.Literal
  id: Literal
  parent: Microsoft.Azure.Search.Models.RegexFlags
  langs:
  - csharp
  - vb
  name: Literal
  fullName: Microsoft.Azure.Search.Models.RegexFlags.Literal
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/RegexFlags.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Literal
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/RegexFlags.cs
    startLine: 44
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nEnables literal parsing of the pattern. <see href=\"http://docs.oracle.com/javase/6/docs/api/java/util/regex/Pattern.html#LITERAL\"></see>\n"
  example: []
  syntax:
    content: public static readonly RegexFlags Literal
    content.vb: Public Shared ReadOnly Literal As RegexFlags
    return:
      type: Microsoft.Azure.Search.Models.RegexFlags
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.RegexFlags.Multiline
  commentId: F:Microsoft.Azure.Search.Models.RegexFlags.Multiline
  id: Multiline
  parent: Microsoft.Azure.Search.Models.RegexFlags
  langs:
  - csharp
  - vb
  name: Multiline
  fullName: Microsoft.Azure.Search.Models.RegexFlags.Multiline
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/RegexFlags.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Multiline
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/RegexFlags.cs
    startLine: 49
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nEnables multiline mode. <see href=\"http://docs.oracle.com/javase/6/docs/api/java/util/regex/Pattern.html#MULTILINE\"></see>\n"
  example: []
  syntax:
    content: public static readonly RegexFlags Multiline
    content.vb: Public Shared ReadOnly Multiline As RegexFlags
    return:
      type: Microsoft.Azure.Search.Models.RegexFlags
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.RegexFlags.UnicodeCase
  commentId: F:Microsoft.Azure.Search.Models.RegexFlags.UnicodeCase
  id: UnicodeCase
  parent: Microsoft.Azure.Search.Models.RegexFlags
  langs:
  - csharp
  - vb
  name: UnicodeCase
  fullName: Microsoft.Azure.Search.Models.RegexFlags.UnicodeCase
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/RegexFlags.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: UnicodeCase
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/RegexFlags.cs
    startLine: 54
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nEnables Unicode-aware case folding. <see href=\"http://docs.oracle.com/javase/6/docs/api/java/util/regex/Pattern.html#UNICODE_CASE\"></see>\n"
  example: []
  syntax:
    content: public static readonly RegexFlags UnicodeCase
    content.vb: Public Shared ReadOnly UnicodeCase As RegexFlags
    return:
      type: Microsoft.Azure.Search.Models.RegexFlags
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.RegexFlags.UnixLines
  commentId: F:Microsoft.Azure.Search.Models.RegexFlags.UnixLines
  id: UnixLines
  parent: Microsoft.Azure.Search.Models.RegexFlags
  langs:
  - csharp
  - vb
  name: UnixLines
  fullName: Microsoft.Azure.Search.Models.RegexFlags.UnixLines
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/RegexFlags.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: UnixLines
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/RegexFlags.cs
    startLine: 59
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nEnables Unix lines mode. <see href=\"http://docs.oracle.com/javase/6/docs/api/java/util/regex/Pattern.html#UNIX_LINES\"></see>\n"
  example: []
  syntax:
    content: public static readonly RegexFlags UnixLines
    content.vb: Public Shared ReadOnly UnixLines As RegexFlags
    return:
      type: Microsoft.Azure.Search.Models.RegexFlags
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.RegexFlags.Create(System.String)
  commentId: M:Microsoft.Azure.Search.Models.RegexFlags.Create(System.String)
  id: Create(System.String)
  parent: Microsoft.Azure.Search.Models.RegexFlags
  langs:
  - csharp
  - vb
  name: Create(String)
  fullName: Microsoft.Azure.Search.Models.RegexFlags.Create(System.String)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/RegexFlags.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Create
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/RegexFlags.cs
    startLine: 74
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nCreates a new RegexFlags instance, or returns an existing instance if the given name matches that of a\nknown regex flag.\n"
  example: []
  syntax:
    content: public static RegexFlags Create(string flagExpression)
    content.vb: Public Shared Function Create(flagExpression As String) As RegexFlags
    parameters:
    - id: flagExpression
      type: System.String
      description: "\nName of the regex flag, or an expression comprised of two or more flags separated by vertical bars (|).\n"
    return:
      type: Microsoft.Azure.Search.Models.RegexFlags
      description: A RegexFlags instance with the given expression.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Search.Models.RegexFlags.op_BitwiseOr(Microsoft.Azure.Search.Models.RegexFlags,Microsoft.Azure.Search.Models.RegexFlags)
  commentId: M:Microsoft.Azure.Search.Models.RegexFlags.op_BitwiseOr(Microsoft.Azure.Search.Models.RegexFlags,Microsoft.Azure.Search.Models.RegexFlags)
  id: op_BitwiseOr(Microsoft.Azure.Search.Models.RegexFlags,Microsoft.Azure.Search.Models.RegexFlags)
  parent: Microsoft.Azure.Search.Models.RegexFlags
  langs:
  - csharp
  - vb
  name: BitwiseOr(RegexFlags, RegexFlags)
  fullName: Microsoft.Azure.Search.Models.RegexFlags.BitwiseOr(Microsoft.Azure.Search.Models.RegexFlags, Microsoft.Azure.Search.Models.RegexFlags)
  type: Operator
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/RegexFlags.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: op_BitwiseOr
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/RegexFlags.cs
    startLine: 89
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nOverloads the bitwise OR operator to combines two RegexFlags.\n"
  example: []
  syntax:
    content: public static RegexFlags operator |(RegexFlags lhs, RegexFlags rhs)
    content.vb: Public Shared Operator Or(lhs As RegexFlags, rhs As RegexFlags) As RegexFlags
    parameters:
    - id: lhs
      type: Microsoft.Azure.Search.Models.RegexFlags
      description: The left-hand side of the OR expression.
    - id: rhs
      type: Microsoft.Azure.Search.Models.RegexFlags
      description: The right-hand side of the OR expression.
    return:
      type: Microsoft.Azure.Search.Models.RegexFlags
      description: "\nA new RegexFlags that is the result of concatenating the two given RegexFlags, separated by a\nvertical bar (|).\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.Search.Models
  isExternal: false
  name: Microsoft.Azure.Search.Models
  fullName: Microsoft.Azure.Search.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.RegexFlags}
  parent: Microsoft.Azure.Search.Models
  definition: Microsoft.Azure.Search.Models.ExtensibleEnum`1
  name: ExtensibleEnum<RegexFlags>
  fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<Microsoft.Azure.Search.Models.RegexFlags>
  fullname.vb: Microsoft.Azure.Search.Models.ExtensibleEnum(Of Microsoft.Azure.Search.Models.RegexFlags)
  name.vb: ExtensibleEnum(Of RegexFlags)
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1
    name: ExtensibleEnum
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Search.Models.RegexFlags
    name: RegexFlags
    fullName: Microsoft.Azure.Search.Models.RegexFlags
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1
    name: ExtensibleEnum
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Search.Models.RegexFlags
    name: RegexFlags
    fullName: Microsoft.Azure.Search.Models.RegexFlags
  - name: )
    fullName: )
- uid: System.IEquatable{Microsoft.Azure.Search.Models.RegexFlags}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<RegexFlags>
  fullName: System.IEquatable<Microsoft.Azure.Search.Models.RegexFlags>
  fullname.vb: System.IEquatable(Of Microsoft.Azure.Search.Models.RegexFlags)
  name.vb: IEquatable(Of RegexFlags)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Search.Models.RegexFlags
    name: RegexFlags
    fullName: Microsoft.Azure.Search.Models.RegexFlags
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Search.Models.RegexFlags
    name: RegexFlags
    fullName: Microsoft.Azure.Search.Models.RegexFlags
  - name: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.RegexFlags}.Lookup(System.String)
  parent: Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.RegexFlags}
  definition: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Lookup(System.String)
  name: Lookup(String)
  fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<Microsoft.Azure.Search.Models.RegexFlags>.Lookup(System.String)
  fullname.vb: Microsoft.Azure.Search.Models.ExtensibleEnum(Of Microsoft.Azure.Search.Models.RegexFlags).Lookup(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Lookup(System.String)
    name: Lookup
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<Microsoft.Azure.Search.Models.RegexFlags>.Lookup
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Lookup(System.String)
    name: Lookup
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum(Of Microsoft.Azure.Search.Models.RegexFlags).Lookup
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.RegexFlags}.Equals(Microsoft.Azure.Search.Models.RegexFlags)
  parent: Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.RegexFlags}
  definition: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(`0)
  name: Equals(RegexFlags)
  fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<Microsoft.Azure.Search.Models.RegexFlags>.Equals(Microsoft.Azure.Search.Models.RegexFlags)
  fullname.vb: Microsoft.Azure.Search.Models.ExtensibleEnum(Of Microsoft.Azure.Search.Models.RegexFlags).Equals(Microsoft.Azure.Search.Models.RegexFlags)
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(`0)
    name: Equals
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<Microsoft.Azure.Search.Models.RegexFlags>.Equals
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Search.Models.RegexFlags
    name: RegexFlags
    fullName: Microsoft.Azure.Search.Models.RegexFlags
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(`0)
    name: Equals
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum(Of Microsoft.Azure.Search.Models.RegexFlags).Equals
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Search.Models.RegexFlags
    name: RegexFlags
    fullName: Microsoft.Azure.Search.Models.RegexFlags
  - name: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.RegexFlags}.Equals(System.Object)
  parent: Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.RegexFlags}
  definition: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(System.Object)
  name: Equals(Object)
  fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<Microsoft.Azure.Search.Models.RegexFlags>.Equals(System.Object)
  fullname.vb: Microsoft.Azure.Search.Models.ExtensibleEnum(Of Microsoft.Azure.Search.Models.RegexFlags).Equals(System.Object)
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(System.Object)
    name: Equals
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<Microsoft.Azure.Search.Models.RegexFlags>.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(System.Object)
    name: Equals
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum(Of Microsoft.Azure.Search.Models.RegexFlags).Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.RegexFlags}.GetHashCode
  parent: Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.RegexFlags}
  definition: Microsoft.Azure.Search.Models.ExtensibleEnum`1.GetHashCode
  name: GetHashCode()
  fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<Microsoft.Azure.Search.Models.RegexFlags>.GetHashCode()
  fullname.vb: Microsoft.Azure.Search.Models.ExtensibleEnum(Of Microsoft.Azure.Search.Models.RegexFlags).GetHashCode()
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.GetHashCode
    name: GetHashCode
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<Microsoft.Azure.Search.Models.RegexFlags>.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.GetHashCode
    name: GetHashCode
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum(Of Microsoft.Azure.Search.Models.RegexFlags).GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.RegexFlags}.ToString
  parent: Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.RegexFlags}
  definition: Microsoft.Azure.Search.Models.ExtensibleEnum`1.ToString
  name: ToString()
  fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<Microsoft.Azure.Search.Models.RegexFlags>.ToString()
  fullname.vb: Microsoft.Azure.Search.Models.ExtensibleEnum(Of Microsoft.Azure.Search.Models.RegexFlags).ToString()
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.ToString
    name: ToString
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<Microsoft.Azure.Search.Models.RegexFlags>.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.ToString
    name: ToString
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum(Of Microsoft.Azure.Search.Models.RegexFlags).ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1
  parent: Microsoft.Azure.Search.Models
  isExternal: false
  name: ExtensibleEnum<T>
  fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<T>
  fullname.vb: Microsoft.Azure.Search.Models.ExtensibleEnum(Of T)
  name.vb: ExtensibleEnum(Of T)
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1
    name: ExtensibleEnum
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1
    name: ExtensibleEnum
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.IEquatable`1
  parent: System
  isExternal: true
  name: IEquatable<T>
  fullName: System.IEquatable<T>
  fullname.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Lookup(System.String)
  parent: Microsoft.Azure.Search.Models.ExtensibleEnum`1
  isExternal: true
  name: Lookup(String)
  fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<T>.Lookup(System.String)
  fullname.vb: Microsoft.Azure.Search.Models.ExtensibleEnum(Of T).Lookup(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Lookup(System.String)
    name: Lookup
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<T>.Lookup
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Lookup(System.String)
    name: Lookup
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum(Of T).Lookup
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(`0)
  parent: Microsoft.Azure.Search.Models.ExtensibleEnum`1
  isExternal: false
  name: Equals(T)
  fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<T>.Equals(T)
  fullname.vb: Microsoft.Azure.Search.Models.ExtensibleEnum(Of T).Equals(T)
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(`0)
    name: Equals
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<T>.Equals
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(`0)
    name: Equals
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum(Of T).Equals
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(System.Object)
  parent: Microsoft.Azure.Search.Models.ExtensibleEnum`1
  isExternal: true
  name: Equals(Object)
  fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<T>.Equals(System.Object)
  fullname.vb: Microsoft.Azure.Search.Models.ExtensibleEnum(Of T).Equals(System.Object)
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(System.Object)
    name: Equals
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<T>.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(System.Object)
    name: Equals
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum(Of T).Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.GetHashCode
  parent: Microsoft.Azure.Search.Models.ExtensibleEnum`1
  isExternal: false
  name: GetHashCode()
  fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<T>.GetHashCode()
  fullname.vb: Microsoft.Azure.Search.Models.ExtensibleEnum(Of T).GetHashCode()
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.GetHashCode
    name: GetHashCode
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<T>.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.GetHashCode
    name: GetHashCode
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum(Of T).GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.ToString
  parent: Microsoft.Azure.Search.Models.ExtensibleEnum`1
  isExternal: false
  name: ToString()
  fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<T>.ToString()
  fullname.vb: Microsoft.Azure.Search.Models.ExtensibleEnum(Of T).ToString()
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.ToString
    name: ToString
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<T>.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.ToString
    name: ToString
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum(Of T).ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.RegexFlags
  parent: Microsoft.Azure.Search.Models
  isExternal: false
  name: RegexFlags
  fullName: Microsoft.Azure.Search.Models.RegexFlags
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
