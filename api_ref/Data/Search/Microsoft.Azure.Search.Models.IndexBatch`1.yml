items:
- uid: Microsoft.Azure.Search.Models.IndexBatch`1
  commentId: T:Microsoft.Azure.Search.Models.IndexBatch`1
  id: IndexBatch`1
  parent: Microsoft.Azure.Search.Models
  children:
  - Microsoft.Azure.Search.Models.IndexBatch`1.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Azure.Search.Models.IndexAction{`0}})
  langs:
  - csharp
  - vb
  name: IndexBatch<T>
  fullName: Microsoft.Azure.Search.Models.IndexBatch<T>
  type: Class
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/IndexBatchOfT.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: IndexBatch
    path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/IndexBatchOfT.cs
    startLine: 14
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nContains a batch of upload, merge, and/or delete actions to send to the Azure Search index.\n"
  example: []
  syntax:
    content: 'public class IndexBatch<T> : IndexBatchBase<IndexAction<T>, T> where T : class'
    content.vb: >-
      Public Class IndexBatch(Of T As Class)
          Inherits IndexBatchBase(Of IndexAction(Of T), T)
    typeParameters:
    - id: T
      description: "\nThe CLR type that maps to the index schema. Instances of this type can be stored as documents in the index.\n"
  inheritance:
  - System.Object
  - Microsoft.Azure.Search.Models.IndexBatchBase{Microsoft.Azure.Search.Models.IndexAction{{T}},{T}}
  inheritedMembers:
  - Microsoft.Azure.Search.Models.IndexBatchBase{Microsoft.Azure.Search.Models.IndexAction{{T}},{T}}.Actions
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.Azure.Search.Models.IndexBatch(Of T)
  name.vb: IndexBatch(Of T)
- uid: Microsoft.Azure.Search.Models.IndexBatch`1.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Azure.Search.Models.IndexAction{`0}})
  commentId: M:Microsoft.Azure.Search.Models.IndexBatch`1.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Azure.Search.Models.IndexAction{`0}})
  id: '#ctor(System.Collections.Generic.IEnumerable{Microsoft.Azure.Search.Models.IndexAction{`0}})'
  parent: Microsoft.Azure.Search.Models.IndexBatch`1
  langs:
  - csharp
  - vb
  name: IndexBatch(IEnumerable<IndexAction<T>>)
  fullName: Microsoft.Azure.Search.Models.IndexBatch<T>.IndexBatch(System.Collections.Generic.IEnumerable<Microsoft.Azure.Search.Models.IndexAction<T>>)
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/IndexBatchOfT.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: .ctor
    path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/IndexBatchOfT.cs
    startLine: 20
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nInitializes a new instance of the IndexBatch class.\n"
  example: []
  syntax:
    content: public IndexBatch(IEnumerable<IndexAction<T>> actions)
    content.vb: Public Sub New(actions As IEnumerable(Of IndexAction(Of T)))
    parameters:
    - id: actions
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Search.Models.IndexAction{{T}}}
      description: The index actions to include in the batch.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Search.Models.IndexBatch(Of T).IndexBatch(System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Search.Models.IndexAction(Of T)))
  name.vb: IndexBatch(IEnumerable(Of IndexAction(Of T)))
references:
- uid: Microsoft.Azure.Search.Models
  isExternal: false
  name: Microsoft.Azure.Search.Models
  fullName: Microsoft.Azure.Search.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Azure.Search.Models.IndexBatchBase{Microsoft.Azure.Search.Models.IndexAction{{T}},{T}}
  parent: Microsoft.Azure.Search.Models
  definition: Microsoft.Azure.Search.Models.IndexBatchBase`2
  name: IndexBatchBase<IndexAction<T>, T>
  fullName: Microsoft.Azure.Search.Models.IndexBatchBase<Microsoft.Azure.Search.Models.IndexAction<T>, T>
  fullname.vb: Microsoft.Azure.Search.Models.IndexBatchBase(Of Microsoft.Azure.Search.Models.IndexAction(Of T), T)
  name.vb: IndexBatchBase(Of IndexAction(Of T), T)
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.IndexBatchBase`2
    name: IndexBatchBase
    fullName: Microsoft.Azure.Search.Models.IndexBatchBase
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Search.Models.IndexAction`1
    name: IndexAction
    fullName: Microsoft.Azure.Search.Models.IndexAction
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.IndexBatchBase`2
    name: IndexBatchBase
    fullName: Microsoft.Azure.Search.Models.IndexBatchBase
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Search.Models.IndexAction`1
    name: IndexAction
    fullName: Microsoft.Azure.Search.Models.IndexAction
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.IndexBatchBase{Microsoft.Azure.Search.Models.IndexAction{{T}},{T}}.Actions
  parent: Microsoft.Azure.Search.Models.IndexBatchBase{Microsoft.Azure.Search.Models.IndexAction{{T}},{T}}
  definition: Microsoft.Azure.Search.Models.IndexBatchBase`2.Actions
  name: Actions
  fullName: Microsoft.Azure.Search.Models.IndexBatchBase<Microsoft.Azure.Search.Models.IndexAction<T>, T>.Actions
  fullname.vb: Microsoft.Azure.Search.Models.IndexBatchBase(Of Microsoft.Azure.Search.Models.IndexAction(Of T), T).Actions
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Search.Models.IndexBatchBase`2
  parent: Microsoft.Azure.Search.Models
  isExternal: false
  name: IndexBatchBase<TAction, TDoc>
  fullName: Microsoft.Azure.Search.Models.IndexBatchBase<TAction, TDoc>
  fullname.vb: Microsoft.Azure.Search.Models.IndexBatchBase(Of TAction, TDoc)
  name.vb: IndexBatchBase(Of TAction, TDoc)
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.IndexBatchBase`2
    name: IndexBatchBase
    fullName: Microsoft.Azure.Search.Models.IndexBatchBase
  - name: <
    fullName: <
  - name: TAction
    fullName: TAction
  - name: ', '
    fullName: ', '
  - name: TDoc
    fullName: TDoc
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.IndexBatchBase`2
    name: IndexBatchBase
    fullName: Microsoft.Azure.Search.Models.IndexBatchBase
  - name: '(Of '
    fullName: '(Of '
  - name: TAction
    fullName: TAction
  - name: ', '
    fullName: ', '
  - name: TDoc
    fullName: TDoc
  - name: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.IndexBatchBase`2.Actions
  parent: Microsoft.Azure.Search.Models.IndexBatchBase`2
  isExternal: false
  name: Actions
  fullName: Microsoft.Azure.Search.Models.IndexBatchBase<TAction, TDoc>.Actions
  fullname.vb: Microsoft.Azure.Search.Models.IndexBatchBase(Of TAction, TDoc).Actions
- uid: System.Collections.Generic.IEnumerable{Microsoft.Azure.Search.Models.IndexAction{{T}}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IndexAction<T>>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Azure.Search.Models.IndexAction<T>>
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Search.Models.IndexAction(Of T))
  name.vb: IEnumerable(Of IndexAction(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Search.Models.IndexAction`1
    name: IndexAction
    fullName: Microsoft.Azure.Search.Models.IndexAction
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Search.Models.IndexAction`1
    name: IndexAction
    fullName: Microsoft.Azure.Search.Models.IndexAction
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
