items:
- uid: Microsoft.Azure.Search.Models.SuggestParametersPayload
  commentId: T:Microsoft.Azure.Search.Models.SuggestParametersPayload
  id: SuggestParametersPayload
  parent: Microsoft.Azure.Search.Models
  children:
  - Microsoft.Azure.Search.Models.SuggestParametersPayload.#ctor
  - Microsoft.Azure.Search.Models.SuggestParametersPayload.#ctor(System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Double},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
  - Microsoft.Azure.Search.Models.SuggestParametersPayload.Filter
  - Microsoft.Azure.Search.Models.SuggestParametersPayload.Fuzzy
  - Microsoft.Azure.Search.Models.SuggestParametersPayload.HighlightPostTag
  - Microsoft.Azure.Search.Models.SuggestParametersPayload.HighlightPreTag
  - Microsoft.Azure.Search.Models.SuggestParametersPayload.MinimumCoverage
  - Microsoft.Azure.Search.Models.SuggestParametersPayload.OrderBy
  - Microsoft.Azure.Search.Models.SuggestParametersPayload.Search
  - Microsoft.Azure.Search.Models.SuggestParametersPayload.SearchFields
  - Microsoft.Azure.Search.Models.SuggestParametersPayload.Select
  - Microsoft.Azure.Search.Models.SuggestParametersPayload.SuggesterName
  - Microsoft.Azure.Search.Models.SuggestParametersPayload.Top
  langs:
  - csharp
  - vb
  name: SuggestParametersPayload
  fullName: Microsoft.Azure.Search.Models.SuggestParametersPayload
  type: Class
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchIndex/Models/SuggestParametersPayload.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: SuggestParametersPayload
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchIndex/Models/SuggestParametersPayload.cs
    startLine: 22
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nParameters for filtering, sorting, fuzzy matching, and other\nsuggestions query behaviors.\n"
  example: []
  syntax:
    content: public class SuggestParametersPayload
    content.vb: Public Class SuggestParametersPayload
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Search.Models.SuggestParametersPayload.#ctor
  commentId: M:Microsoft.Azure.Search.Models.SuggestParametersPayload.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Search.Models.SuggestParametersPayload
  langs:
  - csharp
  - vb
  name: SuggestParametersPayload()
  fullName: Microsoft.Azure.Search.Models.SuggestParametersPayload.SuggestParametersPayload()
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchIndex/Models/SuggestParametersPayload.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: .ctor
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchIndex/Models/SuggestParametersPayload.cs
    startLine: 27
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nInitializes a new instance of the SuggestParametersPayload class.\n"
  example: []
  syntax:
    content: public SuggestParametersPayload()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.SuggestParametersPayload.#ctor(System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Double},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
  commentId: M:Microsoft.Azure.Search.Models.SuggestParametersPayload.#ctor(System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Double},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32})
  id: '#ctor(System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Double},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32})'
  parent: Microsoft.Azure.Search.Models.SuggestParametersPayload
  langs:
  - csharp
  - vb
  name: SuggestParametersPayload(String, Nullable<Boolean>, String, String, Nullable<Double>, String, String, String, String, String, Nullable<Int32>)
  fullName: Microsoft.Azure.Search.Models.SuggestParametersPayload.SuggestParametersPayload(System.String, System.Nullable<System.Boolean>, System.String, System.String, System.Nullable<System.Double>, System.String, System.String, System.String, System.String, System.String, System.Nullable<System.Int32>)
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchIndex/Models/SuggestParametersPayload.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: .ctor
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchIndex/Models/SuggestParametersPayload.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nInitializes a new instance of the SuggestParametersPayload class.\n"
  example: []
  syntax:
    content: public SuggestParametersPayload(string filter = null, bool ? fuzzy = null, string highlightPostTag = null, string highlightPreTag = null, double ? minimumCoverage = null, string orderBy = null, string search = null, string searchFields = null, string select = null, string suggesterName = null, int ? top = null)
    content.vb: Public Sub New(filter As String = Nothing, fuzzy As Boolean? = Nothing, highlightPostTag As String = Nothing, highlightPreTag As String = Nothing, minimumCoverage As Double? = Nothing, orderBy As String = Nothing, search As String = Nothing, searchFields As String = Nothing, select As String = Nothing, suggesterName As String = Nothing, top As Integer? = Nothing)
    parameters:
    - id: filter
      type: System.String
    - id: fuzzy
      type: System.Nullable{System.Boolean}
    - id: highlightPostTag
      type: System.String
    - id: highlightPreTag
      type: System.String
    - id: minimumCoverage
      type: System.Nullable{System.Double}
    - id: orderBy
      type: System.String
    - id: search
      type: System.String
    - id: searchFields
      type: System.String
    - id: select
      type: System.String
    - id: suggesterName
      type: System.String
    - id: top
      type: System.Nullable{System.Int32}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Search.Models.SuggestParametersPayload.SuggestParametersPayload(System.String, System.Nullable(Of System.Boolean), System.String, System.String, System.Nullable(Of System.Double), System.String, System.String, System.String, System.String, System.String, System.Nullable(Of System.Int32))
  name.vb: SuggestParametersPayload(String, Nullable(Of Boolean), String, String, Nullable(Of Double), String, String, String, String, String, Nullable(Of Int32))
- uid: Microsoft.Azure.Search.Models.SuggestParametersPayload.Filter
  commentId: P:Microsoft.Azure.Search.Models.SuggestParametersPayload.Filter
  id: Filter
  parent: Microsoft.Azure.Search.Models.SuggestParametersPayload
  langs:
  - csharp
  - vb
  name: Filter
  fullName: Microsoft.Azure.Search.Models.SuggestParametersPayload.Filter
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchIndex/Models/SuggestParametersPayload.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Filter
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchIndex/Models/SuggestParametersPayload.cs
    startLine: 51
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the OData $filter expression to apply to the\nsuggestions query.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "filter")]

      public string Filter { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="filter")>

      Public Property Filter As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: filter
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.SuggestParametersPayload.Fuzzy
  commentId: P:Microsoft.Azure.Search.Models.SuggestParametersPayload.Fuzzy
  id: Fuzzy
  parent: Microsoft.Azure.Search.Models.SuggestParametersPayload
  langs:
  - csharp
  - vb
  name: Fuzzy
  fullName: Microsoft.Azure.Search.Models.SuggestParametersPayload.Fuzzy
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchIndex/Models/SuggestParametersPayload.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Fuzzy
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchIndex/Models/SuggestParametersPayload.cs
    startLine: 63
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets a value indicating whether to use fuzzy matching for\nthe suggestion query. Default is false. when set to true, the\nquery will find suggestions even if there's a substituted or\nmissing character in the search text. While this provides a\nbetter experience in some scenarios it comes at a performance\ncost as fuzzy suggestion searches are slower and consume more\nresources.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "fuzzy")]

      public bool ? Fuzzy { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="fuzzy")>

      Public Property Fuzzy As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: fuzzy
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.SuggestParametersPayload.HighlightPostTag
  commentId: P:Microsoft.Azure.Search.Models.SuggestParametersPayload.HighlightPostTag
  id: HighlightPostTag
  parent: Microsoft.Azure.Search.Models.SuggestParametersPayload
  langs:
  - csharp
  - vb
  name: HighlightPostTag
  fullName: Microsoft.Azure.Search.Models.SuggestParametersPayload.HighlightPostTag
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchIndex/Models/SuggestParametersPayload.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: HighlightPostTag
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchIndex/Models/SuggestParametersPayload.cs
    startLine: 71
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets a string tag that is appended to hit highlights. Must\nbe set with HighlightPreTag. If omitted, hit highlighting of\nsuggestions is disabled.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "highlightPostTag")]

      public string HighlightPostTag { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="highlightPostTag")>

      Public Property HighlightPostTag As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: highlightPostTag
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.SuggestParametersPayload.HighlightPreTag
  commentId: P:Microsoft.Azure.Search.Models.SuggestParametersPayload.HighlightPreTag
  id: HighlightPreTag
  parent: Microsoft.Azure.Search.Models.SuggestParametersPayload
  langs:
  - csharp
  - vb
  name: HighlightPreTag
  fullName: Microsoft.Azure.Search.Models.SuggestParametersPayload.HighlightPreTag
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchIndex/Models/SuggestParametersPayload.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: HighlightPreTag
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchIndex/Models/SuggestParametersPayload.cs
    startLine: 79
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets a string tag that is prepended to hit highlights.\nMust be set with HighlightPostTag. If omitted, hit highlighting\nof suggestions is disabled.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "highlightPreTag")]

      public string HighlightPreTag { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="highlightPreTag")>

      Public Property HighlightPreTag As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: highlightPreTag
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.SuggestParametersPayload.MinimumCoverage
  commentId: P:Microsoft.Azure.Search.Models.SuggestParametersPayload.MinimumCoverage
  id: MinimumCoverage
  parent: Microsoft.Azure.Search.Models.SuggestParametersPayload
  langs:
  - csharp
  - vb
  name: MinimumCoverage
  fullName: Microsoft.Azure.Search.Models.SuggestParametersPayload.MinimumCoverage
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchIndex/Models/SuggestParametersPayload.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: MinimumCoverage
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchIndex/Models/SuggestParametersPayload.cs
    startLine: 89
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets a number between 0 and 100 indicating the percentage\nof the index that must be covered by a suggestion query in order\nfor the query to be reported as a success. This parameter can be\nuseful for ensuring search availability even for services with\nonly one replica. The default is 80.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "minimumCoverage")]

      public double ? MinimumCoverage { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="minimumCoverage")>

      Public Property MinimumCoverage As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: minimumCoverage
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.SuggestParametersPayload.OrderBy
  commentId: P:Microsoft.Azure.Search.Models.SuggestParametersPayload.OrderBy
  id: OrderBy
  parent: Microsoft.Azure.Search.Models.SuggestParametersPayload
  langs:
  - csharp
  - vb
  name: OrderBy
  fullName: Microsoft.Azure.Search.Models.SuggestParametersPayload.OrderBy
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchIndex/Models/SuggestParametersPayload.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: OrderBy
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchIndex/Models/SuggestParametersPayload.cs
    startLine: 102
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the comma-separated list of OData $orderby\nexpressions by which to sort the results. Each expression can be\neither a field name or a call to the geo.distance() function.\nEach expression can be followed by asc to indicate ascending, and\ndesc to indicate descending. The default is ascending order. Ties\nwill be broken by the match scores of documents. If no OrderBy is\nspecified, the default sort order is descending by document match\nscore. There can be at most 32 Orderby clauses.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "orderby")]

      public string OrderBy { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="orderby")>

      Public Property OrderBy As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: orderby
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.SuggestParametersPayload.Search
  commentId: P:Microsoft.Azure.Search.Models.SuggestParametersPayload.Search
  id: Search
  parent: Microsoft.Azure.Search.Models.SuggestParametersPayload
  langs:
  - csharp
  - vb
  name: Search
  fullName: Microsoft.Azure.Search.Models.SuggestParametersPayload.Search
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchIndex/Models/SuggestParametersPayload.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Search
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchIndex/Models/SuggestParametersPayload.cs
    startLine: 108
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the search text on which to base suggestions.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "search")]

      public string Search { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="search")>

      Public Property Search As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: search
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.SuggestParametersPayload.SearchFields
  commentId: P:Microsoft.Azure.Search.Models.SuggestParametersPayload.SearchFields
  id: SearchFields
  parent: Microsoft.Azure.Search.Models.SuggestParametersPayload
  langs:
  - csharp
  - vb
  name: SearchFields
  fullName: Microsoft.Azure.Search.Models.SuggestParametersPayload.SearchFields
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchIndex/Models/SuggestParametersPayload.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: SearchFields
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchIndex/Models/SuggestParametersPayload.cs
    startLine: 115
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the comma-separated list of field names to consider\nwhen querying for suggestions.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "searchFields")]

      public string SearchFields { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="searchFields")>

      Public Property SearchFields As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: searchFields
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.SuggestParametersPayload.Select
  commentId: P:Microsoft.Azure.Search.Models.SuggestParametersPayload.Select
  id: Select
  parent: Microsoft.Azure.Search.Models.SuggestParametersPayload
  langs:
  - csharp
  - vb
  name: Select
  fullName: Microsoft.Azure.Search.Models.SuggestParametersPayload.Select
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchIndex/Models/SuggestParametersPayload.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Select
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchIndex/Models/SuggestParametersPayload.cs
    startLine: 123
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the comma-separated list of fields to retrieve. If\nunspecified, all fields marked as retrievable in the schema are\nincluded.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "select")]

      public string Select { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="select")>

      Public Property Select As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: select
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.SuggestParametersPayload.SuggesterName
  commentId: P:Microsoft.Azure.Search.Models.SuggestParametersPayload.SuggesterName
  id: SuggesterName
  parent: Microsoft.Azure.Search.Models.SuggestParametersPayload
  langs:
  - csharp
  - vb
  name: SuggesterName
  fullName: Microsoft.Azure.Search.Models.SuggestParametersPayload.SuggesterName
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchIndex/Models/SuggestParametersPayload.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: SuggesterName
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchIndex/Models/SuggestParametersPayload.cs
    startLine: 130
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the name of the suggester as specified in the\nsuggesters collection that's part of the index definition.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "suggesterName")]

      public string SuggesterName { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="suggesterName")>

      Public Property SuggesterName As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: suggesterName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.SuggestParametersPayload.Top
  commentId: P:Microsoft.Azure.Search.Models.SuggestParametersPayload.Top
  id: Top
  parent: Microsoft.Azure.Search.Models.SuggestParametersPayload
  langs:
  - csharp
  - vb
  name: Top
  fullName: Microsoft.Azure.Search.Models.SuggestParametersPayload.Top
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchIndex/Models/SuggestParametersPayload.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Top
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchIndex/Models/SuggestParametersPayload.cs
    startLine: 137
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the number of suggestions to retrieve. This must be a\nvalue between 1 and 100. The default is to 5.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "top")]

      public int ? Top { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="top")>

      Public Property Top As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: top
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Search.Models
  isExternal: false
  name: Microsoft.Azure.Search.Models
  fullName: Microsoft.Azure.Search.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Double>
  fullName: System.Nullable<System.Double>
  fullname.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
