items:
- uid: Microsoft.Azure.Search.Models.PatternCaptureTokenFilter
  commentId: T:Microsoft.Azure.Search.Models.PatternCaptureTokenFilter
  id: PatternCaptureTokenFilter
  parent: Microsoft.Azure.Search.Models
  children:
  - Microsoft.Azure.Search.Models.PatternCaptureTokenFilter.#ctor
  - Microsoft.Azure.Search.Models.PatternCaptureTokenFilter.#ctor(System.String,System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean})
  - Microsoft.Azure.Search.Models.PatternCaptureTokenFilter.Patterns
  - Microsoft.Azure.Search.Models.PatternCaptureTokenFilter.PreserveOriginal
  - Microsoft.Azure.Search.Models.PatternCaptureTokenFilter.Validate
  langs:
  - csharp
  - vb
  name: PatternCaptureTokenFilter
  fullName: Microsoft.Azure.Search.Models.PatternCaptureTokenFilter
  type: Class
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/PatternCaptureTokenFilter.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: PatternCaptureTokenFilter
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/PatternCaptureTokenFilter.cs
    startLine: 24
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nUses Java regexes to emit multiple tokens - one for each capture group\nin one or more patterns. This token filter is implemented using\nApache Lucene.\n<see href=\"http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/pattern/PatternCaptureGroupTokenFilter.html\"></see>\n"
  example: []
  syntax:
    content: >-
      [JsonObject("#Microsoft.Azure.Search.PatternCaptureTokenFilter")]

      public class PatternCaptureTokenFilter : TokenFilter
    content.vb: >-
      <JsonObject("#Microsoft.Azure.Search.PatternCaptureTokenFilter")>

      Public Class PatternCaptureTokenFilter
          Inherits TokenFilter
  inheritance:
  - System.Object
  - Microsoft.Azure.Search.Models.TokenFilter
  inheritedMembers:
  - Microsoft.Azure.Search.Models.TokenFilter.Name
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: Newtonsoft.Json.JsonObjectAttribute
    ctor: Newtonsoft.Json.JsonObjectAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: '#Microsoft.Azure.Search.PatternCaptureTokenFilter'
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Search.Models.PatternCaptureTokenFilter.#ctor
  commentId: M:Microsoft.Azure.Search.Models.PatternCaptureTokenFilter.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Search.Models.PatternCaptureTokenFilter
  langs:
  - csharp
  - vb
  name: PatternCaptureTokenFilter()
  fullName: Microsoft.Azure.Search.Models.PatternCaptureTokenFilter.PatternCaptureTokenFilter()
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/PatternCaptureTokenFilter.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: .ctor
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/PatternCaptureTokenFilter.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nInitializes a new instance of the PatternCaptureTokenFilter class.\n"
  example: []
  syntax:
    content: public PatternCaptureTokenFilter()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.PatternCaptureTokenFilter.#ctor(System.String,System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean})
  commentId: M:Microsoft.Azure.Search.Models.PatternCaptureTokenFilter.#ctor(System.String,System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean})
  id: '#ctor(System.String,System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean})'
  parent: Microsoft.Azure.Search.Models.PatternCaptureTokenFilter
  langs:
  - csharp
  - vb
  name: PatternCaptureTokenFilter(String, IList<String>, Nullable<Boolean>)
  fullName: Microsoft.Azure.Search.Models.PatternCaptureTokenFilter.PatternCaptureTokenFilter(System.String, System.Collections.Generic.IList<System.String>, System.Nullable<System.Boolean>)
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/PatternCaptureTokenFilter.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: .ctor
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/PatternCaptureTokenFilter.cs
    startLine: 35
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nInitializes a new instance of the PatternCaptureTokenFilter class.\n"
  example: []
  syntax:
    content: public PatternCaptureTokenFilter(string name, IList<string> patterns, bool ? preserveOriginal = null)
    content.vb: Public Sub New(name As String, patterns As IList(Of String), preserveOriginal As Boolean? = Nothing)
    parameters:
    - id: name
      type: System.String
    - id: patterns
      type: System.Collections.Generic.IList{System.String}
    - id: preserveOriginal
      type: System.Nullable{System.Boolean}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Search.Models.PatternCaptureTokenFilter.PatternCaptureTokenFilter(System.String, System.Collections.Generic.IList(Of System.String), System.Nullable(Of System.Boolean))
  name.vb: PatternCaptureTokenFilter(String, IList(Of String), Nullable(Of Boolean))
- uid: Microsoft.Azure.Search.Models.PatternCaptureTokenFilter.Patterns
  commentId: P:Microsoft.Azure.Search.Models.PatternCaptureTokenFilter.Patterns
  id: Patterns
  parent: Microsoft.Azure.Search.Models.PatternCaptureTokenFilter
  langs:
  - csharp
  - vb
  name: Patterns
  fullName: Microsoft.Azure.Search.Models.PatternCaptureTokenFilter.Patterns
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/PatternCaptureTokenFilter.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Patterns
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/PatternCaptureTokenFilter.cs
    startLine: 45
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets a list of patterns to match against each token.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "patterns")]

      public IList<string> Patterns { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="patterns")>

      Public Property Patterns As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: patterns
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.PatternCaptureTokenFilter.PreserveOriginal
  commentId: P:Microsoft.Azure.Search.Models.PatternCaptureTokenFilter.PreserveOriginal
  id: PreserveOriginal
  parent: Microsoft.Azure.Search.Models.PatternCaptureTokenFilter
  langs:
  - csharp
  - vb
  name: PreserveOriginal
  fullName: Microsoft.Azure.Search.Models.PatternCaptureTokenFilter.PreserveOriginal
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/PatternCaptureTokenFilter.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: PreserveOriginal
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/PatternCaptureTokenFilter.cs
    startLine: 52
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets a value indicating whether to return the original\ntoken even if one of the patterns matches. Default is true.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "preserveOriginal")]

      public bool ? PreserveOriginal { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="preserveOriginal")>

      Public Property PreserveOriginal As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: preserveOriginal
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.PatternCaptureTokenFilter.Validate
  commentId: M:Microsoft.Azure.Search.Models.PatternCaptureTokenFilter.Validate
  id: Validate
  parent: Microsoft.Azure.Search.Models.PatternCaptureTokenFilter
  langs:
  - csharp
  - vb
  name: Validate()
  fullName: Microsoft.Azure.Search.Models.PatternCaptureTokenFilter.Validate()
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/PatternCaptureTokenFilter.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Validate
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/PatternCaptureTokenFilter.cs
    startLine: 61
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public override void Validate()
    content.vb: Public Overrides Sub Validate
  overridden: Microsoft.Azure.Search.Models.TokenFilter.Validate
  exceptions:
  - type: Microsoft.Rest.ValidationException
    commentId: T:Microsoft.Rest.ValidationException
    description: "\nThrown if validation fails\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Azure.Search.Models
  isExternal: false
  name: Microsoft.Azure.Search.Models
  fullName: Microsoft.Azure.Search.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Azure.Search.Models.TokenFilter
  parent: Microsoft.Azure.Search.Models
  isExternal: false
  name: TokenFilter
  fullName: Microsoft.Azure.Search.Models.TokenFilter
- uid: Microsoft.Azure.Search.Models.TokenFilter.Name
  parent: Microsoft.Azure.Search.Models.TokenFilter
  isExternal: false
  name: Name
  fullName: Microsoft.Azure.Search.Models.TokenFilter.Name
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: true
  name: IList<T>
  fullName: System.Collections.Generic.IList<T>
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.TokenFilter.Validate
  parent: Microsoft.Azure.Search.Models.TokenFilter
  isExternal: false
  name: Validate()
  fullName: Microsoft.Azure.Search.Models.TokenFilter.Validate()
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.TokenFilter.Validate
    name: Validate
    fullName: Microsoft.Azure.Search.Models.TokenFilter.Validate
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.TokenFilter.Validate
    name: Validate
    fullName: Microsoft.Azure.Search.Models.TokenFilter.Validate
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Rest.ValidationException
