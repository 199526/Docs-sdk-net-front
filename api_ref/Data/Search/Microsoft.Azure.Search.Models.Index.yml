items:
- uid: Microsoft.Azure.Search.Models.Index
  commentId: T:Microsoft.Azure.Search.Models.Index
  id: Index
  parent: Microsoft.Azure.Search.Models
  children:
  - Microsoft.Azure.Search.Models.Index.#ctor
  - Microsoft.Azure.Search.Models.Index.#ctor(System.String,System.Collections.Generic.IList{Microsoft.Azure.Search.Models.Field},System.Collections.Generic.IList{Microsoft.Azure.Search.Models.ScoringProfile},System.String,Microsoft.Azure.Search.Models.CorsOptions,System.Collections.Generic.IList{Microsoft.Azure.Search.Models.Suggester},System.Collections.Generic.IList{Microsoft.Azure.Search.Models.Analyzer},System.Collections.Generic.IList{Microsoft.Azure.Search.Models.Tokenizer},System.Collections.Generic.IList{Microsoft.Azure.Search.Models.TokenFilter},System.Collections.Generic.IList{Microsoft.Azure.Search.Models.CharFilter},System.String)
  - Microsoft.Azure.Search.Models.Index.Analyzers
  - Microsoft.Azure.Search.Models.Index.CharFilters
  - Microsoft.Azure.Search.Models.Index.CorsOptions
  - Microsoft.Azure.Search.Models.Index.DefaultScoringProfile
  - Microsoft.Azure.Search.Models.Index.ETag
  - Microsoft.Azure.Search.Models.Index.Fields
  - Microsoft.Azure.Search.Models.Index.Name
  - Microsoft.Azure.Search.Models.Index.ScoringProfiles
  - Microsoft.Azure.Search.Models.Index.Suggesters
  - Microsoft.Azure.Search.Models.Index.TokenFilters
  - Microsoft.Azure.Search.Models.Index.Tokenizers
  - Microsoft.Azure.Search.Models.Index.Validate
  langs:
  - csharp
  - vb
  name: Index
  fullName: Microsoft.Azure.Search.Models.Index
  type: Class
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/Index.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Index
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/Index.cs
    startLine: 22
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nRepresents an index definition in Azure Search, which describes the\nfields and search behavior of an index.\n"
  example: []
  syntax:
    content: 'public class Index : IResourceWithETag'
    content.vb: >-
      Public Class Index
          Implements IResourceWithETag
  inheritance:
  - System.Object
  implements:
  - Microsoft.Azure.Search.Models.IResourceWithETag
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Search.Models.Index.#ctor
  commentId: M:Microsoft.Azure.Search.Models.Index.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Search.Models.Index
  langs:
  - csharp
  - vb
  name: Index()
  fullName: Microsoft.Azure.Search.Models.Index.Index()
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/Index.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: .ctor
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/Index.cs
    startLine: 27
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nInitializes a new instance of the Index class.\n"
  example: []
  syntax:
    content: public Index()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.Index.#ctor(System.String,System.Collections.Generic.IList{Microsoft.Azure.Search.Models.Field},System.Collections.Generic.IList{Microsoft.Azure.Search.Models.ScoringProfile},System.String,Microsoft.Azure.Search.Models.CorsOptions,System.Collections.Generic.IList{Microsoft.Azure.Search.Models.Suggester},System.Collections.Generic.IList{Microsoft.Azure.Search.Models.Analyzer},System.Collections.Generic.IList{Microsoft.Azure.Search.Models.Tokenizer},System.Collections.Generic.IList{Microsoft.Azure.Search.Models.TokenFilter},System.Collections.Generic.IList{Microsoft.Azure.Search.Models.CharFilter},System.String)
  commentId: M:Microsoft.Azure.Search.Models.Index.#ctor(System.String,System.Collections.Generic.IList{Microsoft.Azure.Search.Models.Field},System.Collections.Generic.IList{Microsoft.Azure.Search.Models.ScoringProfile},System.String,Microsoft.Azure.Search.Models.CorsOptions,System.Collections.Generic.IList{Microsoft.Azure.Search.Models.Suggester},System.Collections.Generic.IList{Microsoft.Azure.Search.Models.Analyzer},System.Collections.Generic.IList{Microsoft.Azure.Search.Models.Tokenizer},System.Collections.Generic.IList{Microsoft.Azure.Search.Models.TokenFilter},System.Collections.Generic.IList{Microsoft.Azure.Search.Models.CharFilter},System.String)
  id: '#ctor(System.String,System.Collections.Generic.IList{Microsoft.Azure.Search.Models.Field},System.Collections.Generic.IList{Microsoft.Azure.Search.Models.ScoringProfile},System.String,Microsoft.Azure.Search.Models.CorsOptions,System.Collections.Generic.IList{Microsoft.Azure.Search.Models.Suggester},System.Collections.Generic.IList{Microsoft.Azure.Search.Models.Analyzer},System.Collections.Generic.IList{Microsoft.Azure.Search.Models.Tokenizer},System.Collections.Generic.IList{Microsoft.Azure.Search.Models.TokenFilter},System.Collections.Generic.IList{Microsoft.Azure.Search.Models.CharFilter},System.String)'
  parent: Microsoft.Azure.Search.Models.Index
  langs:
  - csharp
  - vb
  name: Index(String, IList<Field>, IList<ScoringProfile>, String, CorsOptions, IList<Suggester>, IList<Analyzer>, IList<Tokenizer>, IList<TokenFilter>, IList<CharFilter>, String)
  fullName: Microsoft.Azure.Search.Models.Index.Index(System.String, System.Collections.Generic.IList<Microsoft.Azure.Search.Models.Field>, System.Collections.Generic.IList<Microsoft.Azure.Search.Models.ScoringProfile>, System.String, Microsoft.Azure.Search.Models.CorsOptions, System.Collections.Generic.IList<Microsoft.Azure.Search.Models.Suggester>, System.Collections.Generic.IList<Microsoft.Azure.Search.Models.Analyzer>, System.Collections.Generic.IList<Microsoft.Azure.Search.Models.Tokenizer>, System.Collections.Generic.IList<Microsoft.Azure.Search.Models.TokenFilter>, System.Collections.Generic.IList<Microsoft.Azure.Search.Models.CharFilter>, System.String)
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/Index.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: .ctor
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/Index.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nInitializes a new instance of the Index class.\n"
  example: []
  syntax:
    content: public Index(string name, IList<Field> fields, IList<ScoringProfile> scoringProfiles = null, string defaultScoringProfile = null, CorsOptions corsOptions = null, IList<Suggester> suggesters = null, IList<Analyzer> analyzers = null, IList<Tokenizer> tokenizers = null, IList<TokenFilter> tokenFilters = null, IList<CharFilter> charFilters = null, string eTag = null)
    content.vb: Public Sub New(name As String, fields As IList(Of Field), scoringProfiles As IList(Of ScoringProfile) = Nothing, defaultScoringProfile As String = Nothing, corsOptions As CorsOptions = Nothing, suggesters As IList(Of Suggester) = Nothing, analyzers As IList(Of Analyzer) = Nothing, tokenizers As IList(Of Tokenizer) = Nothing, tokenFilters As IList(Of TokenFilter) = Nothing, charFilters As IList(Of CharFilter) = Nothing, eTag As String = Nothing)
    parameters:
    - id: name
      type: System.String
    - id: fields
      type: System.Collections.Generic.IList{Microsoft.Azure.Search.Models.Field}
    - id: scoringProfiles
      type: System.Collections.Generic.IList{Microsoft.Azure.Search.Models.ScoringProfile}
    - id: defaultScoringProfile
      type: System.String
    - id: corsOptions
      type: Microsoft.Azure.Search.Models.CorsOptions
    - id: suggesters
      type: System.Collections.Generic.IList{Microsoft.Azure.Search.Models.Suggester}
    - id: analyzers
      type: System.Collections.Generic.IList{Microsoft.Azure.Search.Models.Analyzer}
    - id: tokenizers
      type: System.Collections.Generic.IList{Microsoft.Azure.Search.Models.Tokenizer}
    - id: tokenFilters
      type: System.Collections.Generic.IList{Microsoft.Azure.Search.Models.TokenFilter}
    - id: charFilters
      type: System.Collections.Generic.IList{Microsoft.Azure.Search.Models.CharFilter}
    - id: eTag
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Search.Models.Index.Index(System.String, System.Collections.Generic.IList(Of Microsoft.Azure.Search.Models.Field), System.Collections.Generic.IList(Of Microsoft.Azure.Search.Models.ScoringProfile), System.String, Microsoft.Azure.Search.Models.CorsOptions, System.Collections.Generic.IList(Of Microsoft.Azure.Search.Models.Suggester), System.Collections.Generic.IList(Of Microsoft.Azure.Search.Models.Analyzer), System.Collections.Generic.IList(Of Microsoft.Azure.Search.Models.Tokenizer), System.Collections.Generic.IList(Of Microsoft.Azure.Search.Models.TokenFilter), System.Collections.Generic.IList(Of Microsoft.Azure.Search.Models.CharFilter), System.String)
  name.vb: Index(String, IList(Of Field), IList(Of ScoringProfile), String, CorsOptions, IList(Of Suggester), IList(Of Analyzer), IList(Of Tokenizer), IList(Of TokenFilter), IList(Of CharFilter), String)
- uid: Microsoft.Azure.Search.Models.Index.Name
  commentId: P:Microsoft.Azure.Search.Models.Index.Name
  id: Name
  parent: Microsoft.Azure.Search.Models.Index
  langs:
  - csharp
  - vb
  name: Name
  fullName: Microsoft.Azure.Search.Models.Index.Name
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/Index.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Name
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/Index.cs
    startLine: 50
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the name of the index.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "name")]

      public string Name { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="name")>

      Public Property Name As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.Index.Fields
  commentId: P:Microsoft.Azure.Search.Models.Index.Fields
  id: Fields
  parent: Microsoft.Azure.Search.Models.Index
  langs:
  - csharp
  - vb
  name: Fields
  fullName: Microsoft.Azure.Search.Models.Index.Fields
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/Index.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Fields
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/Index.cs
    startLine: 56
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the fields of the index.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "fields")]

      public IList<Field> Fields { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="fields")>

      Public Property Fields As IList(Of Field)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Search.Models.Field}
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: fields
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.Index.ScoringProfiles
  commentId: P:Microsoft.Azure.Search.Models.Index.ScoringProfiles
  id: ScoringProfiles
  parent: Microsoft.Azure.Search.Models.Index
  langs:
  - csharp
  - vb
  name: ScoringProfiles
  fullName: Microsoft.Azure.Search.Models.Index.ScoringProfiles
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/Index.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ScoringProfiles
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/Index.cs
    startLine: 62
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the scoring profiles for the index.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "scoringProfiles")]

      public IList<ScoringProfile> ScoringProfiles { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="scoringProfiles")>

      Public Property ScoringProfiles As IList(Of ScoringProfile)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Search.Models.ScoringProfile}
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: scoringProfiles
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.Index.DefaultScoringProfile
  commentId: P:Microsoft.Azure.Search.Models.Index.DefaultScoringProfile
  id: DefaultScoringProfile
  parent: Microsoft.Azure.Search.Models.Index
  langs:
  - csharp
  - vb
  name: DefaultScoringProfile
  fullName: Microsoft.Azure.Search.Models.Index.DefaultScoringProfile
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/Index.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: DefaultScoringProfile
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/Index.cs
    startLine: 71
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the name of the scoring profile to use if none is\nspecified in the query. If this property is not set and no\nscoring profile is specified in the query, then default scoring\n(tf-idf) will be used.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "defaultScoringProfile")]

      public string DefaultScoringProfile { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="defaultScoringProfile")>

      Public Property DefaultScoringProfile As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: defaultScoringProfile
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.Index.CorsOptions
  commentId: P:Microsoft.Azure.Search.Models.Index.CorsOptions
  id: CorsOptions
  parent: Microsoft.Azure.Search.Models.Index
  langs:
  - csharp
  - vb
  name: CorsOptions
  fullName: Microsoft.Azure.Search.Models.Index.CorsOptions
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/Index.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: CorsOptions
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/Index.cs
    startLine: 78
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets options to control Cross-Origin Resource Sharing\n(CORS) for the index.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "corsOptions")]

      public CorsOptions CorsOptions { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="corsOptions")>

      Public Property CorsOptions As CorsOptions
    parameters: []
    return:
      type: Microsoft.Azure.Search.Models.CorsOptions
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: corsOptions
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.Index.Suggesters
  commentId: P:Microsoft.Azure.Search.Models.Index.Suggesters
  id: Suggesters
  parent: Microsoft.Azure.Search.Models.Index
  langs:
  - csharp
  - vb
  name: Suggesters
  fullName: Microsoft.Azure.Search.Models.Index.Suggesters
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/Index.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Suggesters
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/Index.cs
    startLine: 84
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the suggesters for the index.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "suggesters")]

      public IList<Suggester> Suggesters { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="suggesters")>

      Public Property Suggesters As IList(Of Suggester)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Search.Models.Suggester}
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: suggesters
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.Index.Analyzers
  commentId: P:Microsoft.Azure.Search.Models.Index.Analyzers
  id: Analyzers
  parent: Microsoft.Azure.Search.Models.Index
  langs:
  - csharp
  - vb
  name: Analyzers
  fullName: Microsoft.Azure.Search.Models.Index.Analyzers
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/Index.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Analyzers
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/Index.cs
    startLine: 90
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the analyzers for the index.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "analyzers")]

      public IList<Analyzer> Analyzers { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="analyzers")>

      Public Property Analyzers As IList(Of Analyzer)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Search.Models.Analyzer}
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: analyzers
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.Index.Tokenizers
  commentId: P:Microsoft.Azure.Search.Models.Index.Tokenizers
  id: Tokenizers
  parent: Microsoft.Azure.Search.Models.Index
  langs:
  - csharp
  - vb
  name: Tokenizers
  fullName: Microsoft.Azure.Search.Models.Index.Tokenizers
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/Index.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Tokenizers
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/Index.cs
    startLine: 96
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the tokenizers for the index.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "tokenizers")]

      public IList<Tokenizer> Tokenizers { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="tokenizers")>

      Public Property Tokenizers As IList(Of Tokenizer)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Search.Models.Tokenizer}
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: tokenizers
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.Index.TokenFilters
  commentId: P:Microsoft.Azure.Search.Models.Index.TokenFilters
  id: TokenFilters
  parent: Microsoft.Azure.Search.Models.Index
  langs:
  - csharp
  - vb
  name: TokenFilters
  fullName: Microsoft.Azure.Search.Models.Index.TokenFilters
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/Index.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: TokenFilters
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/Index.cs
    startLine: 102
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the token filters for the index.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "tokenFilters")]

      public IList<TokenFilter> TokenFilters { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="tokenFilters")>

      Public Property TokenFilters As IList(Of TokenFilter)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Search.Models.TokenFilter}
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: tokenFilters
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.Index.CharFilters
  commentId: P:Microsoft.Azure.Search.Models.Index.CharFilters
  id: CharFilters
  parent: Microsoft.Azure.Search.Models.Index
  langs:
  - csharp
  - vb
  name: CharFilters
  fullName: Microsoft.Azure.Search.Models.Index.CharFilters
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/Index.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: CharFilters
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/Index.cs
    startLine: 108
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the character filters for the index.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "charFilters")]

      public IList<CharFilter> CharFilters { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="charFilters")>

      Public Property CharFilters As IList(Of CharFilter)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Search.Models.CharFilter}
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: charFilters
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.Index.ETag
  commentId: P:Microsoft.Azure.Search.Models.Index.ETag
  id: ETag
  parent: Microsoft.Azure.Search.Models.Index
  langs:
  - csharp
  - vb
  name: ETag
  fullName: Microsoft.Azure.Search.Models.Index.ETag
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/Index.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ETag
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/Index.cs
    startLine: 114
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the ETag of the index.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "@odata.etag")]

      public string ETag { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="@odata.etag")>

      Public Property ETag As String
    parameters: []
    return:
      type: System.String
  implements:
  - Microsoft.Azure.Search.Models.IResourceWithETag.ETag
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: '@odata.etag'
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.Index.Validate
  commentId: M:Microsoft.Azure.Search.Models.Index.Validate
  id: Validate
  parent: Microsoft.Azure.Search.Models.Index
  langs:
  - csharp
  - vb
  name: Validate()
  fullName: Microsoft.Azure.Search.Models.Index.Validate()
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/Index.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Validate
    path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/Index.cs
    startLine: 123
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  exceptions:
  - type: Microsoft.Rest.ValidationException
    commentId: T:Microsoft.Rest.ValidationException
    description: "\nThrown if validation fails\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Search.Models
  isExternal: false
  name: Microsoft.Azure.Search.Models
  fullName: Microsoft.Azure.Search.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Azure.Search.Models.IResourceWithETag
  parent: Microsoft.Azure.Search.Models
  isExternal: false
  name: IResourceWithETag
  fullName: Microsoft.Azure.Search.Models.IResourceWithETag
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Collections.Generic.IList{Microsoft.Azure.Search.Models.Field}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Field>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Search.Models.Field>
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Search.Models.Field)
  name.vb: IList(Of Field)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Search.Models.Field
    name: Field
    fullName: Microsoft.Azure.Search.Models.Field
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Search.Models.Field
    name: Field
    fullName: Microsoft.Azure.Search.Models.Field
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Search.Models.ScoringProfile}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ScoringProfile>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Search.Models.ScoringProfile>
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Search.Models.ScoringProfile)
  name.vb: IList(Of ScoringProfile)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Search.Models.ScoringProfile
    name: ScoringProfile
    fullName: Microsoft.Azure.Search.Models.ScoringProfile
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Search.Models.ScoringProfile
    name: ScoringProfile
    fullName: Microsoft.Azure.Search.Models.ScoringProfile
  - name: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.CorsOptions
  parent: Microsoft.Azure.Search.Models
  isExternal: false
  name: CorsOptions
  fullName: Microsoft.Azure.Search.Models.CorsOptions
- uid: System.Collections.Generic.IList{Microsoft.Azure.Search.Models.Suggester}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Suggester>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Search.Models.Suggester>
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Search.Models.Suggester)
  name.vb: IList(Of Suggester)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Search.Models.Suggester
    name: Suggester
    fullName: Microsoft.Azure.Search.Models.Suggester
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Search.Models.Suggester
    name: Suggester
    fullName: Microsoft.Azure.Search.Models.Suggester
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Search.Models.Analyzer}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Analyzer>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Search.Models.Analyzer>
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Search.Models.Analyzer)
  name.vb: IList(Of Analyzer)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Search.Models.Analyzer
    name: Analyzer
    fullName: Microsoft.Azure.Search.Models.Analyzer
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Search.Models.Analyzer
    name: Analyzer
    fullName: Microsoft.Azure.Search.Models.Analyzer
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Search.Models.Tokenizer}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Tokenizer>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Search.Models.Tokenizer>
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Search.Models.Tokenizer)
  name.vb: IList(Of Tokenizer)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Search.Models.Tokenizer
    name: Tokenizer
    fullName: Microsoft.Azure.Search.Models.Tokenizer
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Search.Models.Tokenizer
    name: Tokenizer
    fullName: Microsoft.Azure.Search.Models.Tokenizer
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Search.Models.TokenFilter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<TokenFilter>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Search.Models.TokenFilter>
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Search.Models.TokenFilter)
  name.vb: IList(Of TokenFilter)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Search.Models.TokenFilter
    name: TokenFilter
    fullName: Microsoft.Azure.Search.Models.TokenFilter
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Search.Models.TokenFilter
    name: TokenFilter
    fullName: Microsoft.Azure.Search.Models.TokenFilter
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Search.Models.CharFilter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<CharFilter>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Search.Models.CharFilter>
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Search.Models.CharFilter)
  name.vb: IList(Of CharFilter)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Search.Models.CharFilter
    name: CharFilter
    fullName: Microsoft.Azure.Search.Models.CharFilter
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Search.Models.CharFilter
    name: CharFilter
    fullName: Microsoft.Azure.Search.Models.CharFilter
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: true
  name: IList<T>
  fullName: System.Collections.Generic.IList<T>
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Search.Models.IResourceWithETag.ETag
  parent: Microsoft.Azure.Search.Models.IResourceWithETag
  isExternal: false
  name: ETag
  fullName: Microsoft.Azure.Search.Models.IResourceWithETag.ETag
- uid: Microsoft.Rest.ValidationException
