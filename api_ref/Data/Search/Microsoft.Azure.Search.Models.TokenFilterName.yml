items:
- uid: Microsoft.Azure.Search.Models.TokenFilterName
  commentId: T:Microsoft.Azure.Search.Models.TokenFilterName
  id: TokenFilterName
  parent: Microsoft.Azure.Search.Models
  children:
  - Microsoft.Azure.Search.Models.TokenFilterName.Apostrophe
  - Microsoft.Azure.Search.Models.TokenFilterName.ArabicNormalization
  - Microsoft.Azure.Search.Models.TokenFilterName.AsciiFolding
  - Microsoft.Azure.Search.Models.TokenFilterName.CjkBigram
  - Microsoft.Azure.Search.Models.TokenFilterName.CjkWidth
  - Microsoft.Azure.Search.Models.TokenFilterName.Classic
  - Microsoft.Azure.Search.Models.TokenFilterName.CommonGram
  - Microsoft.Azure.Search.Models.TokenFilterName.Create(System.String)
  - Microsoft.Azure.Search.Models.TokenFilterName.EdgeNGram
  - Microsoft.Azure.Search.Models.TokenFilterName.Elision
  - Microsoft.Azure.Search.Models.TokenFilterName.GermanNormalization
  - Microsoft.Azure.Search.Models.TokenFilterName.HindiNormalization
  - Microsoft.Azure.Search.Models.TokenFilterName.IndicNormalization
  - Microsoft.Azure.Search.Models.TokenFilterName.KeywordRepeat
  - Microsoft.Azure.Search.Models.TokenFilterName.KStem
  - Microsoft.Azure.Search.Models.TokenFilterName.Length
  - Microsoft.Azure.Search.Models.TokenFilterName.Limit
  - Microsoft.Azure.Search.Models.TokenFilterName.Lowercase
  - Microsoft.Azure.Search.Models.TokenFilterName.NGram
  - Microsoft.Azure.Search.Models.TokenFilterName.PersianNormalization
  - Microsoft.Azure.Search.Models.TokenFilterName.Phonetic
  - Microsoft.Azure.Search.Models.TokenFilterName.PorterStem
  - Microsoft.Azure.Search.Models.TokenFilterName.Reverse
  - Microsoft.Azure.Search.Models.TokenFilterName.ScandinavianFoldingNormalization
  - Microsoft.Azure.Search.Models.TokenFilterName.ScandinavianNormalization
  - Microsoft.Azure.Search.Models.TokenFilterName.Shingle
  - Microsoft.Azure.Search.Models.TokenFilterName.Snowball
  - Microsoft.Azure.Search.Models.TokenFilterName.SoraniNormalization
  - Microsoft.Azure.Search.Models.TokenFilterName.Stemmer
  - Microsoft.Azure.Search.Models.TokenFilterName.Stopwords
  - Microsoft.Azure.Search.Models.TokenFilterName.Trim
  - Microsoft.Azure.Search.Models.TokenFilterName.Truncate
  - Microsoft.Azure.Search.Models.TokenFilterName.Unique
  - Microsoft.Azure.Search.Models.TokenFilterName.Uppercase
  - Microsoft.Azure.Search.Models.TokenFilterName.WordDelimiter
  langs:
  - csharp
  - vb
  name: TokenFilterName
  fullName: Microsoft.Azure.Search.Models.TokenFilterName
  type: Class
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: TokenFilterName
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
    startLine: 13
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nDefines the names of all token filters supported by Azure Search.\n<see href=\"https://msdn.microsoft.com/library/azure/mt605304.aspx\"></see>\n"
  example: []
  syntax:
    content: >-
      [JsonConverter(typeof (ExtensibleEnumConverter<TokenFilterName>))]

      public sealed class TokenFilterName : ExtensibleEnum<TokenFilterName>, IEquatable<TokenFilterName>
    content.vb: >-
      <JsonConverter(GetType(ExtensibleEnumConverter(Of TokenFilterName)))>

      Public NotInheritable Class TokenFilterName
          Inherits ExtensibleEnum(Of TokenFilterName)
          Implements IEquatable(Of TokenFilterName)
  inheritance:
  - System.Object
  - Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.TokenFilterName}
  implements:
  - System.IEquatable{Microsoft.Azure.Search.Models.TokenFilterName}
  inheritedMembers:
  - Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.TokenFilterName}.Lookup(System.String)
  - Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.TokenFilterName}.Equals(Microsoft.Azure.Search.Models.TokenFilterName)
  - Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.TokenFilterName}.Equals(System.Object)
  - Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.TokenFilterName}.GetHashCode
  - Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.TokenFilterName}.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: Newtonsoft.Json.JsonConverterAttribute
    ctor: Newtonsoft.Json.JsonConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Microsoft.Azure.Search.Serialization.ExtensibleEnumConverter{Microsoft.Azure.Search.Models.TokenFilterName}
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Azure.Search.Models.TokenFilterName.ArabicNormalization
  commentId: F:Microsoft.Azure.Search.Models.TokenFilterName.ArabicNormalization
  id: ArabicNormalization
  parent: Microsoft.Azure.Search.Models.TokenFilterName
  langs:
  - csharp
  - vb
  name: ArabicNormalization
  fullName: Microsoft.Azure.Search.Models.TokenFilterName.ArabicNormalization
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ArabicNormalization
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nA token filter that applies the Arabic normalizer to normalize the orthography.\n<see href=\"http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ar/ArabicNormalizationFilter.html\"></see>\n"
  example: []
  syntax:
    content: public static readonly TokenFilterName ArabicNormalization
    content.vb: Public Shared ReadOnly ArabicNormalization As TokenFilterName
    return:
      type: Microsoft.Azure.Search.Models.TokenFilterName
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.TokenFilterName.Apostrophe
  commentId: F:Microsoft.Azure.Search.Models.TokenFilterName.Apostrophe
  id: Apostrophe
  parent: Microsoft.Azure.Search.Models.TokenFilterName
  langs:
  - csharp
  - vb
  name: Apostrophe
  fullName: Microsoft.Azure.Search.Models.TokenFilterName.Apostrophe
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Apostrophe
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nStrips all characters after an apostrophe (including the apostrophe itself).\n<see href=\"http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/tr/ApostropheFilter.html\"></see>\n"
  example: []
  syntax:
    content: public static readonly TokenFilterName Apostrophe
    content.vb: Public Shared ReadOnly Apostrophe As TokenFilterName
    return:
      type: Microsoft.Azure.Search.Models.TokenFilterName
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.TokenFilterName.AsciiFolding
  commentId: F:Microsoft.Azure.Search.Models.TokenFilterName.AsciiFolding
  id: AsciiFolding
  parent: Microsoft.Azure.Search.Models.TokenFilterName
  langs:
  - csharp
  - vb
  name: AsciiFolding
  fullName: Microsoft.Azure.Search.Models.TokenFilterName.AsciiFolding
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: AsciiFolding
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
    startLine: 37
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nConverts alphabetic, numeric, and symbolic Unicode characters which\nare not in the first 127 ASCII characters (the \"Basic Latin\" Unicode\nblock) into their ASCII equivalents, if such equivalents exist.\n<see href=\"http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/ASCIIFoldingFilter.html\"></see>\n"
  example: []
  syntax:
    content: public static readonly TokenFilterName AsciiFolding
    content.vb: Public Shared ReadOnly AsciiFolding As TokenFilterName
    return:
      type: Microsoft.Azure.Search.Models.TokenFilterName
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.TokenFilterName.CjkBigram
  commentId: F:Microsoft.Azure.Search.Models.TokenFilterName.CjkBigram
  id: CjkBigram
  parent: Microsoft.Azure.Search.Models.TokenFilterName
  langs:
  - csharp
  - vb
  name: CjkBigram
  fullName: Microsoft.Azure.Search.Models.TokenFilterName.CjkBigram
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: CjkBigram
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
    startLine: 43
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nForms bigrams of CJK terms that are generated from StandardTokenizer.\n<see href=\"http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/cjk/CJKBigramFilter.html\"></see>\n"
  example: []
  syntax:
    content: public static readonly TokenFilterName CjkBigram
    content.vb: Public Shared ReadOnly CjkBigram As TokenFilterName
    return:
      type: Microsoft.Azure.Search.Models.TokenFilterName
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.TokenFilterName.CjkWidth
  commentId: F:Microsoft.Azure.Search.Models.TokenFilterName.CjkWidth
  id: CjkWidth
  parent: Microsoft.Azure.Search.Models.TokenFilterName
  langs:
  - csharp
  - vb
  name: CjkWidth
  fullName: Microsoft.Azure.Search.Models.TokenFilterName.CjkWidth
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: CjkWidth
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
    startLine: 51
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nNormalizes CJK width differences. Folds fullwidth ASCII variants into\nthe equivalent basic Latin, and half-width Katakana variants into the\nequivalent Kana.\n<see href=\"http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/cjk/CJKWidthFilter.html\"></see> \n"
  example: []
  syntax:
    content: public static readonly TokenFilterName CjkWidth
    content.vb: Public Shared ReadOnly CjkWidth As TokenFilterName
    return:
      type: Microsoft.Azure.Search.Models.TokenFilterName
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.TokenFilterName.Classic
  commentId: F:Microsoft.Azure.Search.Models.TokenFilterName.Classic
  id: Classic
  parent: Microsoft.Azure.Search.Models.TokenFilterName
  langs:
  - csharp
  - vb
  name: Classic
  fullName: Microsoft.Azure.Search.Models.TokenFilterName.Classic
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Classic
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
    startLine: 57
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nRemoves English possessives, and dots from acronyms.\n<see href=\"http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/standard/ClassicFilter.html\"></see>\n"
  example: []
  syntax:
    content: public static readonly TokenFilterName Classic
    content.vb: Public Shared ReadOnly Classic As TokenFilterName
    return:
      type: Microsoft.Azure.Search.Models.TokenFilterName
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.TokenFilterName.CommonGram
  commentId: F:Microsoft.Azure.Search.Models.TokenFilterName.CommonGram
  id: CommonGram
  parent: Microsoft.Azure.Search.Models.TokenFilterName
  langs:
  - csharp
  - vb
  name: CommonGram
  fullName: Microsoft.Azure.Search.Models.TokenFilterName.CommonGram
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: CommonGram
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
    startLine: 64
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nConstruct bigrams for frequently occurring terms while indexing.\nSingle terms are still indexed too, with bigrams overlaid.\n<see href=\"http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/commongrams/CommonGramsFilter.html\"></see>\n"
  example: []
  syntax:
    content: public static readonly TokenFilterName CommonGram
    content.vb: Public Shared ReadOnly CommonGram As TokenFilterName
    return:
      type: Microsoft.Azure.Search.Models.TokenFilterName
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.TokenFilterName.EdgeNGram
  commentId: F:Microsoft.Azure.Search.Models.TokenFilterName.EdgeNGram
  id: EdgeNGram
  parent: Microsoft.Azure.Search.Models.TokenFilterName
  langs:
  - csharp
  - vb
  name: EdgeNGram
  fullName: Microsoft.Azure.Search.Models.TokenFilterName.EdgeNGram
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: EdgeNGram
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
    startLine: 71
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGenerates n-grams of the given size(s) starting from the front or the\nback of an input token.\n<see href=\"http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ngram/EdgeNGramTokenFilter.html\"></see>\n"
  example: []
  syntax:
    content: public static readonly TokenFilterName EdgeNGram
    content.vb: Public Shared ReadOnly EdgeNGram As TokenFilterName
    return:
      type: Microsoft.Azure.Search.Models.TokenFilterName
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.TokenFilterName.Elision
  commentId: F:Microsoft.Azure.Search.Models.TokenFilterName.Elision
  id: Elision
  parent: Microsoft.Azure.Search.Models.TokenFilterName
  langs:
  - csharp
  - vb
  name: Elision
  fullName: Microsoft.Azure.Search.Models.TokenFilterName.Elision
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Elision
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
    startLine: 78
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nRemoves elisions. For example, \"l'avion\" (the plane) will be converted\nto \"avion\" (plane).\n<see href=\"http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/util/ElisionFilter.html\"></see>\n"
  example: []
  syntax:
    content: public static readonly TokenFilterName Elision
    content.vb: Public Shared ReadOnly Elision As TokenFilterName
    return:
      type: Microsoft.Azure.Search.Models.TokenFilterName
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.TokenFilterName.GermanNormalization
  commentId: F:Microsoft.Azure.Search.Models.TokenFilterName.GermanNormalization
  id: GermanNormalization
  parent: Microsoft.Azure.Search.Models.TokenFilterName
  langs:
  - csharp
  - vb
  name: GermanNormalization
  fullName: Microsoft.Azure.Search.Models.TokenFilterName.GermanNormalization
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: GermanNormalization
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
    startLine: 85
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nNormalizes German characters according to the heuristics of the\nGerman2 snowball algorithm.\n<see href=\"http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/de/GermanNormalizationFilter.html\"></see>\n"
  example: []
  syntax:
    content: public static readonly TokenFilterName GermanNormalization
    content.vb: Public Shared ReadOnly GermanNormalization As TokenFilterName
    return:
      type: Microsoft.Azure.Search.Models.TokenFilterName
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.TokenFilterName.HindiNormalization
  commentId: F:Microsoft.Azure.Search.Models.TokenFilterName.HindiNormalization
  id: HindiNormalization
  parent: Microsoft.Azure.Search.Models.TokenFilterName
  langs:
  - csharp
  - vb
  name: HindiNormalization
  fullName: Microsoft.Azure.Search.Models.TokenFilterName.HindiNormalization
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: HindiNormalization
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
    startLine: 92
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nNormalizes text in Hindi to remove some differences in spelling\nvariations.\n<see href=\"http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/hi/HindiNormalizationFilter.html\"></see>\n"
  example: []
  syntax:
    content: public static readonly TokenFilterName HindiNormalization
    content.vb: Public Shared ReadOnly HindiNormalization As TokenFilterName
    return:
      type: Microsoft.Azure.Search.Models.TokenFilterName
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.TokenFilterName.IndicNormalization
  commentId: F:Microsoft.Azure.Search.Models.TokenFilterName.IndicNormalization
  id: IndicNormalization
  parent: Microsoft.Azure.Search.Models.TokenFilterName
  langs:
  - csharp
  - vb
  name: IndicNormalization
  fullName: Microsoft.Azure.Search.Models.TokenFilterName.IndicNormalization
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: IndicNormalization
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
    startLine: 98
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nNormalizes the Unicode representation of text in Indian languages.\n<see href=\"http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/in/IndicNormalizationFilter.html\"></see>\n"
  example: []
  syntax:
    content: public static readonly TokenFilterName IndicNormalization
    content.vb: Public Shared ReadOnly IndicNormalization As TokenFilterName
    return:
      type: Microsoft.Azure.Search.Models.TokenFilterName
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.TokenFilterName.KeywordRepeat
  commentId: F:Microsoft.Azure.Search.Models.TokenFilterName.KeywordRepeat
  id: KeywordRepeat
  parent: Microsoft.Azure.Search.Models.TokenFilterName
  langs:
  - csharp
  - vb
  name: KeywordRepeat
  fullName: Microsoft.Azure.Search.Models.TokenFilterName.KeywordRepeat
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: KeywordRepeat
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
    startLine: 105
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nEmits each incoming token twice, once as keyword and once as\nnon-keyword.\n<see href=\"http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/KeywordRepeatFilter.html\"></see>\n"
  example: []
  syntax:
    content: public static readonly TokenFilterName KeywordRepeat
    content.vb: Public Shared ReadOnly KeywordRepeat As TokenFilterName
    return:
      type: Microsoft.Azure.Search.Models.TokenFilterName
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.TokenFilterName.KStem
  commentId: F:Microsoft.Azure.Search.Models.TokenFilterName.KStem
  id: KStem
  parent: Microsoft.Azure.Search.Models.TokenFilterName
  langs:
  - csharp
  - vb
  name: KStem
  fullName: Microsoft.Azure.Search.Models.TokenFilterName.KStem
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: KStem
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
    startLine: 111
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nA high-performance kstem filter for English.\n<see href=\"http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/en/KStemFilter.html\"></see>\n"
  example: []
  syntax:
    content: public static readonly TokenFilterName KStem
    content.vb: Public Shared ReadOnly KStem As TokenFilterName
    return:
      type: Microsoft.Azure.Search.Models.TokenFilterName
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.TokenFilterName.Length
  commentId: F:Microsoft.Azure.Search.Models.TokenFilterName.Length
  id: Length
  parent: Microsoft.Azure.Search.Models.TokenFilterName
  langs:
  - csharp
  - vb
  name: Length
  fullName: Microsoft.Azure.Search.Models.TokenFilterName.Length
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Length
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
    startLine: 117
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nRemoves words that are too long or too short.\n<see href=\"http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/LengthFilter.html\"></see>\n"
  example: []
  syntax:
    content: public static readonly TokenFilterName Length
    content.vb: Public Shared ReadOnly Length As TokenFilterName
    return:
      type: Microsoft.Azure.Search.Models.TokenFilterName
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.TokenFilterName.Limit
  commentId: F:Microsoft.Azure.Search.Models.TokenFilterName.Limit
  id: Limit
  parent: Microsoft.Azure.Search.Models.TokenFilterName
  langs:
  - csharp
  - vb
  name: Limit
  fullName: Microsoft.Azure.Search.Models.TokenFilterName.Limit
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Limit
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
    startLine: 123
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nLimits the number of tokens while indexing.\n<see href=\"http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/LimitTokenCountFilter.html\"></see>\n"
  example: []
  syntax:
    content: public static readonly TokenFilterName Limit
    content.vb: Public Shared ReadOnly Limit As TokenFilterName
    return:
      type: Microsoft.Azure.Search.Models.TokenFilterName
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.TokenFilterName.Lowercase
  commentId: F:Microsoft.Azure.Search.Models.TokenFilterName.Lowercase
  id: Lowercase
  parent: Microsoft.Azure.Search.Models.TokenFilterName
  langs:
  - csharp
  - vb
  name: Lowercase
  fullName: Microsoft.Azure.Search.Models.TokenFilterName.Lowercase
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Lowercase
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
    startLine: 129
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nNormalizes token text to lower case.\n<see href=\"http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/LowerCaseFilter.html\"></see>\n"
  example: []
  syntax:
    content: public static readonly TokenFilterName Lowercase
    content.vb: Public Shared ReadOnly Lowercase As TokenFilterName
    return:
      type: Microsoft.Azure.Search.Models.TokenFilterName
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.TokenFilterName.NGram
  commentId: F:Microsoft.Azure.Search.Models.TokenFilterName.NGram
  id: NGram
  parent: Microsoft.Azure.Search.Models.TokenFilterName
  langs:
  - csharp
  - vb
  name: NGram
  fullName: Microsoft.Azure.Search.Models.TokenFilterName.NGram
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: NGram
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
    startLine: 135
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGenerates n-grams of the given size(s).\n<see href=\"http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ngram/NGramTokenFilter.html\"></see>\n"
  example: []
  syntax:
    content: public static readonly TokenFilterName NGram
    content.vb: Public Shared ReadOnly NGram As TokenFilterName
    return:
      type: Microsoft.Azure.Search.Models.TokenFilterName
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.TokenFilterName.PersianNormalization
  commentId: F:Microsoft.Azure.Search.Models.TokenFilterName.PersianNormalization
  id: PersianNormalization
  parent: Microsoft.Azure.Search.Models.TokenFilterName
  langs:
  - csharp
  - vb
  name: PersianNormalization
  fullName: Microsoft.Azure.Search.Models.TokenFilterName.PersianNormalization
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: PersianNormalization
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
    startLine: 141
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nApplies normalization for Persian.\n<see href=\"http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/fa/PersianNormalizationFilter.html\"></see>\n"
  example: []
  syntax:
    content: public static readonly TokenFilterName PersianNormalization
    content.vb: Public Shared ReadOnly PersianNormalization As TokenFilterName
    return:
      type: Microsoft.Azure.Search.Models.TokenFilterName
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.TokenFilterName.Phonetic
  commentId: F:Microsoft.Azure.Search.Models.TokenFilterName.Phonetic
  id: Phonetic
  parent: Microsoft.Azure.Search.Models.TokenFilterName
  langs:
  - csharp
  - vb
  name: Phonetic
  fullName: Microsoft.Azure.Search.Models.TokenFilterName.Phonetic
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Phonetic
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
    startLine: 147
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nCreate tokens for phonetic matches.\n<see href=\"https://lucene.apache.org/core/4_10_3/analyzers-phonetic/org/apache/lucene/analysis/phonetic/package-tree.html\"></see>\n"
  example: []
  syntax:
    content: public static readonly TokenFilterName Phonetic
    content.vb: Public Shared ReadOnly Phonetic As TokenFilterName
    return:
      type: Microsoft.Azure.Search.Models.TokenFilterName
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.TokenFilterName.PorterStem
  commentId: F:Microsoft.Azure.Search.Models.TokenFilterName.PorterStem
  id: PorterStem
  parent: Microsoft.Azure.Search.Models.TokenFilterName
  langs:
  - csharp
  - vb
  name: PorterStem
  fullName: Microsoft.Azure.Search.Models.TokenFilterName.PorterStem
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: PorterStem
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
    startLine: 153
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nUses the Porter stemming algorithm to transform the token stream.\n<see href=\"http://tartarus.org/~martin/PorterStemmer/\"></see>\n"
  example: []
  syntax:
    content: public static readonly TokenFilterName PorterStem
    content.vb: Public Shared ReadOnly PorterStem As TokenFilterName
    return:
      type: Microsoft.Azure.Search.Models.TokenFilterName
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.TokenFilterName.Reverse
  commentId: F:Microsoft.Azure.Search.Models.TokenFilterName.Reverse
  id: Reverse
  parent: Microsoft.Azure.Search.Models.TokenFilterName
  langs:
  - csharp
  - vb
  name: Reverse
  fullName: Microsoft.Azure.Search.Models.TokenFilterName.Reverse
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Reverse
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
    startLine: 159
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nReverses the token string.\n<see href=\"http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/reverse/ReverseStringFilter.html\"></see>\n"
  example: []
  syntax:
    content: public static readonly TokenFilterName Reverse
    content.vb: Public Shared ReadOnly Reverse As TokenFilterName
    return:
      type: Microsoft.Azure.Search.Models.TokenFilterName
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.TokenFilterName.ScandinavianNormalization
  commentId: F:Microsoft.Azure.Search.Models.TokenFilterName.ScandinavianNormalization
  id: ScandinavianNormalization
  parent: Microsoft.Azure.Search.Models.TokenFilterName
  langs:
  - csharp
  - vb
  name: ScandinavianNormalization
  fullName: Microsoft.Azure.Search.Models.TokenFilterName.ScandinavianNormalization
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ScandinavianNormalization
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
    startLine: 165
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nNormalizes use of the interchangeable Scandinavian characters.\n<see href=\"http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/ScandinavianNormalizationFilter.html\"></see>\n"
  example: []
  syntax:
    content: public static readonly TokenFilterName ScandinavianNormalization
    content.vb: Public Shared ReadOnly ScandinavianNormalization As TokenFilterName
    return:
      type: Microsoft.Azure.Search.Models.TokenFilterName
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.TokenFilterName.ScandinavianFoldingNormalization
  commentId: F:Microsoft.Azure.Search.Models.TokenFilterName.ScandinavianFoldingNormalization
  id: ScandinavianFoldingNormalization
  parent: Microsoft.Azure.Search.Models.TokenFilterName
  langs:
  - csharp
  - vb
  name: ScandinavianFoldingNormalization
  fullName: Microsoft.Azure.Search.Models.TokenFilterName.ScandinavianFoldingNormalization
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ScandinavianFoldingNormalization
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
    startLine: 173
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nFolds Scandinavian characters åÅäæÄÆ->a and öÖøØ->o. It also\ndiscriminates against use of double vowels aa, ae, ao, oe and oo,\nleaving just the first one.\n<see href=\"http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/ScandinavianFoldingFilter.html\"></see>\n"
  example: []
  syntax:
    content: public static readonly TokenFilterName ScandinavianFoldingNormalization
    content.vb: Public Shared ReadOnly ScandinavianFoldingNormalization As TokenFilterName
    return:
      type: Microsoft.Azure.Search.Models.TokenFilterName
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.TokenFilterName.Shingle
  commentId: F:Microsoft.Azure.Search.Models.TokenFilterName.Shingle
  id: Shingle
  parent: Microsoft.Azure.Search.Models.TokenFilterName
  langs:
  - csharp
  - vb
  name: Shingle
  fullName: Microsoft.Azure.Search.Models.TokenFilterName.Shingle
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Shingle
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
    startLine: 179
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nCreates combinations of tokens as a single token.\n<see href=\"http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/shingle/ShingleFilter.html\"></see>\n"
  example: []
  syntax:
    content: public static readonly TokenFilterName Shingle
    content.vb: Public Shared ReadOnly Shingle As TokenFilterName
    return:
      type: Microsoft.Azure.Search.Models.TokenFilterName
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.TokenFilterName.Snowball
  commentId: F:Microsoft.Azure.Search.Models.TokenFilterName.Snowball
  id: Snowball
  parent: Microsoft.Azure.Search.Models.TokenFilterName
  langs:
  - csharp
  - vb
  name: Snowball
  fullName: Microsoft.Azure.Search.Models.TokenFilterName.Snowball
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Snowball
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
    startLine: 185
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nA filter that stems words using a Snowball-generated stemmer.\n<see href=\"http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/snowball/SnowballFilter.html\"></see>\n"
  example: []
  syntax:
    content: public static readonly TokenFilterName Snowball
    content.vb: Public Shared ReadOnly Snowball As TokenFilterName
    return:
      type: Microsoft.Azure.Search.Models.TokenFilterName
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.TokenFilterName.SoraniNormalization
  commentId: F:Microsoft.Azure.Search.Models.TokenFilterName.SoraniNormalization
  id: SoraniNormalization
  parent: Microsoft.Azure.Search.Models.TokenFilterName
  langs:
  - csharp
  - vb
  name: SoraniNormalization
  fullName: Microsoft.Azure.Search.Models.TokenFilterName.SoraniNormalization
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: SoraniNormalization
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
    startLine: 191
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nNormalizes the Unicode representation of Sorani text.\n<see href=\"http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ckb/SoraniNormalizationFilter.html\"></see>\n"
  example: []
  syntax:
    content: public static readonly TokenFilterName SoraniNormalization
    content.vb: Public Shared ReadOnly SoraniNormalization As TokenFilterName
    return:
      type: Microsoft.Azure.Search.Models.TokenFilterName
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.TokenFilterName.Stemmer
  commentId: F:Microsoft.Azure.Search.Models.TokenFilterName.Stemmer
  id: Stemmer
  parent: Microsoft.Azure.Search.Models.TokenFilterName
  langs:
  - csharp
  - vb
  name: Stemmer
  fullName: Microsoft.Azure.Search.Models.TokenFilterName.Stemmer
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Stemmer
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
    startLine: 197
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nLanguage specific stemming filter.\n<see href=\"https://msdn.microsoft.com/library/azure/mt605304.aspx#TokenFilters\"></see>\n"
  example: []
  syntax:
    content: public static readonly TokenFilterName Stemmer
    content.vb: Public Shared ReadOnly Stemmer As TokenFilterName
    return:
      type: Microsoft.Azure.Search.Models.TokenFilterName
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.TokenFilterName.Stopwords
  commentId: F:Microsoft.Azure.Search.Models.TokenFilterName.Stopwords
  id: Stopwords
  parent: Microsoft.Azure.Search.Models.TokenFilterName
  langs:
  - csharp
  - vb
  name: Stopwords
  fullName: Microsoft.Azure.Search.Models.TokenFilterName.Stopwords
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Stopwords
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
    startLine: 203
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nRemoves stop words from a token stream.\n<see href=\"http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/StopFilter.html\"></see>\n"
  example: []
  syntax:
    content: public static readonly TokenFilterName Stopwords
    content.vb: Public Shared ReadOnly Stopwords As TokenFilterName
    return:
      type: Microsoft.Azure.Search.Models.TokenFilterName
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.TokenFilterName.Trim
  commentId: F:Microsoft.Azure.Search.Models.TokenFilterName.Trim
  id: Trim
  parent: Microsoft.Azure.Search.Models.TokenFilterName
  langs:
  - csharp
  - vb
  name: Trim
  fullName: Microsoft.Azure.Search.Models.TokenFilterName.Trim
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Trim
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
    startLine: 209
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nTrims leading and trailing whitespace from tokens.\n<see href=\"http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/TrimFilter.html\"></see>\n"
  example: []
  syntax:
    content: public static readonly TokenFilterName Trim
    content.vb: Public Shared ReadOnly Trim As TokenFilterName
    return:
      type: Microsoft.Azure.Search.Models.TokenFilterName
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.TokenFilterName.Truncate
  commentId: F:Microsoft.Azure.Search.Models.TokenFilterName.Truncate
  id: Truncate
  parent: Microsoft.Azure.Search.Models.TokenFilterName
  langs:
  - csharp
  - vb
  name: Truncate
  fullName: Microsoft.Azure.Search.Models.TokenFilterName.Truncate
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Truncate
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
    startLine: 215
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nTruncates the terms to a specific length.\n<see href=\"http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/TruncateTokenFilter.html\"></see>\n"
  example: []
  syntax:
    content: public static readonly TokenFilterName Truncate
    content.vb: Public Shared ReadOnly Truncate As TokenFilterName
    return:
      type: Microsoft.Azure.Search.Models.TokenFilterName
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.TokenFilterName.Unique
  commentId: F:Microsoft.Azure.Search.Models.TokenFilterName.Unique
  id: Unique
  parent: Microsoft.Azure.Search.Models.TokenFilterName
  langs:
  - csharp
  - vb
  name: Unique
  fullName: Microsoft.Azure.Search.Models.TokenFilterName.Unique
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Unique
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
    startLine: 221
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nFilters out tokens with same text as the previous token.\n<see href=\"http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/RemoveDuplicatesTokenFilter.html\"></see>\n"
  example: []
  syntax:
    content: public static readonly TokenFilterName Unique
    content.vb: Public Shared ReadOnly Unique As TokenFilterName
    return:
      type: Microsoft.Azure.Search.Models.TokenFilterName
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.TokenFilterName.Uppercase
  commentId: F:Microsoft.Azure.Search.Models.TokenFilterName.Uppercase
  id: Uppercase
  parent: Microsoft.Azure.Search.Models.TokenFilterName
  langs:
  - csharp
  - vb
  name: Uppercase
  fullName: Microsoft.Azure.Search.Models.TokenFilterName.Uppercase
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Uppercase
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
    startLine: 227
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nNormalizes token text to upper case.\n<see href=\"http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/UpperCaseFilter.html\"></see>\n"
  example: []
  syntax:
    content: public static readonly TokenFilterName Uppercase
    content.vb: Public Shared ReadOnly Uppercase As TokenFilterName
    return:
      type: Microsoft.Azure.Search.Models.TokenFilterName
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.TokenFilterName.WordDelimiter
  commentId: F:Microsoft.Azure.Search.Models.TokenFilterName.WordDelimiter
  id: WordDelimiter
  parent: Microsoft.Azure.Search.Models.TokenFilterName
  langs:
  - csharp
  - vb
  name: WordDelimiter
  fullName: Microsoft.Azure.Search.Models.TokenFilterName.WordDelimiter
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: WordDelimiter
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
    startLine: 233
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nSplits words into subwords and performs optional transformations on\nsubword groups.\n"
  example: []
  syntax:
    content: public static readonly TokenFilterName WordDelimiter
    content.vb: Public Shared ReadOnly WordDelimiter As TokenFilterName
    return:
      type: Microsoft.Azure.Search.Models.TokenFilterName
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.TokenFilterName.Create(System.String)
  commentId: M:Microsoft.Azure.Search.Models.TokenFilterName.Create(System.String)
  id: Create(System.String)
  parent: Microsoft.Azure.Search.Models.TokenFilterName
  langs:
  - csharp
  - vb
  name: Create(String)
  fullName: Microsoft.Azure.Search.Models.TokenFilterName.Create(System.String)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Create
    path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/TokenFilterName.cs
    startLine: 246
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nCreates a new TokenFilterName instance, or returns an existing instance if the given name matches that of a\nknown token filter.\n"
  example: []
  syntax:
    content: public static TokenFilterName Create(string name)
    content.vb: Public Shared Function Create(name As String) As TokenFilterName
    parameters:
    - id: name
      type: System.String
      description: Name of the token filter.
    return:
      type: Microsoft.Azure.Search.Models.TokenFilterName
      description: A TokenFilterName instance with the given name.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.Search.Models
  isExternal: false
  name: Microsoft.Azure.Search.Models
  fullName: Microsoft.Azure.Search.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.TokenFilterName}
  parent: Microsoft.Azure.Search.Models
  definition: Microsoft.Azure.Search.Models.ExtensibleEnum`1
  name: ExtensibleEnum<TokenFilterName>
  fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<Microsoft.Azure.Search.Models.TokenFilterName>
  fullname.vb: Microsoft.Azure.Search.Models.ExtensibleEnum(Of Microsoft.Azure.Search.Models.TokenFilterName)
  name.vb: ExtensibleEnum(Of TokenFilterName)
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1
    name: ExtensibleEnum
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Search.Models.TokenFilterName
    name: TokenFilterName
    fullName: Microsoft.Azure.Search.Models.TokenFilterName
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1
    name: ExtensibleEnum
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Search.Models.TokenFilterName
    name: TokenFilterName
    fullName: Microsoft.Azure.Search.Models.TokenFilterName
  - name: )
    fullName: )
- uid: System.IEquatable{Microsoft.Azure.Search.Models.TokenFilterName}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<TokenFilterName>
  fullName: System.IEquatable<Microsoft.Azure.Search.Models.TokenFilterName>
  fullname.vb: System.IEquatable(Of Microsoft.Azure.Search.Models.TokenFilterName)
  name.vb: IEquatable(Of TokenFilterName)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Search.Models.TokenFilterName
    name: TokenFilterName
    fullName: Microsoft.Azure.Search.Models.TokenFilterName
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Search.Models.TokenFilterName
    name: TokenFilterName
    fullName: Microsoft.Azure.Search.Models.TokenFilterName
  - name: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.TokenFilterName}.Lookup(System.String)
  parent: Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.TokenFilterName}
  definition: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Lookup(System.String)
  name: Lookup(String)
  fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<Microsoft.Azure.Search.Models.TokenFilterName>.Lookup(System.String)
  fullname.vb: Microsoft.Azure.Search.Models.ExtensibleEnum(Of Microsoft.Azure.Search.Models.TokenFilterName).Lookup(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Lookup(System.String)
    name: Lookup
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<Microsoft.Azure.Search.Models.TokenFilterName>.Lookup
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Lookup(System.String)
    name: Lookup
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum(Of Microsoft.Azure.Search.Models.TokenFilterName).Lookup
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.TokenFilterName}.Equals(Microsoft.Azure.Search.Models.TokenFilterName)
  parent: Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.TokenFilterName}
  definition: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(`0)
  name: Equals(TokenFilterName)
  fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<Microsoft.Azure.Search.Models.TokenFilterName>.Equals(Microsoft.Azure.Search.Models.TokenFilterName)
  fullname.vb: Microsoft.Azure.Search.Models.ExtensibleEnum(Of Microsoft.Azure.Search.Models.TokenFilterName).Equals(Microsoft.Azure.Search.Models.TokenFilterName)
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(`0)
    name: Equals
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<Microsoft.Azure.Search.Models.TokenFilterName>.Equals
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Search.Models.TokenFilterName
    name: TokenFilterName
    fullName: Microsoft.Azure.Search.Models.TokenFilterName
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(`0)
    name: Equals
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum(Of Microsoft.Azure.Search.Models.TokenFilterName).Equals
  - name: (
    fullName: (
  - uid: Microsoft.Azure.Search.Models.TokenFilterName
    name: TokenFilterName
    fullName: Microsoft.Azure.Search.Models.TokenFilterName
  - name: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.TokenFilterName}.Equals(System.Object)
  parent: Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.TokenFilterName}
  definition: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(System.Object)
  name: Equals(Object)
  fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<Microsoft.Azure.Search.Models.TokenFilterName>.Equals(System.Object)
  fullname.vb: Microsoft.Azure.Search.Models.ExtensibleEnum(Of Microsoft.Azure.Search.Models.TokenFilterName).Equals(System.Object)
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(System.Object)
    name: Equals
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<Microsoft.Azure.Search.Models.TokenFilterName>.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(System.Object)
    name: Equals
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum(Of Microsoft.Azure.Search.Models.TokenFilterName).Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.TokenFilterName}.GetHashCode
  parent: Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.TokenFilterName}
  definition: Microsoft.Azure.Search.Models.ExtensibleEnum`1.GetHashCode
  name: GetHashCode()
  fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<Microsoft.Azure.Search.Models.TokenFilterName>.GetHashCode()
  fullname.vb: Microsoft.Azure.Search.Models.ExtensibleEnum(Of Microsoft.Azure.Search.Models.TokenFilterName).GetHashCode()
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.GetHashCode
    name: GetHashCode
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<Microsoft.Azure.Search.Models.TokenFilterName>.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.GetHashCode
    name: GetHashCode
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum(Of Microsoft.Azure.Search.Models.TokenFilterName).GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.TokenFilterName}.ToString
  parent: Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.TokenFilterName}
  definition: Microsoft.Azure.Search.Models.ExtensibleEnum`1.ToString
  name: ToString()
  fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<Microsoft.Azure.Search.Models.TokenFilterName>.ToString()
  fullname.vb: Microsoft.Azure.Search.Models.ExtensibleEnum(Of Microsoft.Azure.Search.Models.TokenFilterName).ToString()
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.ToString
    name: ToString
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<Microsoft.Azure.Search.Models.TokenFilterName>.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.ToString
    name: ToString
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum(Of Microsoft.Azure.Search.Models.TokenFilterName).ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1
  parent: Microsoft.Azure.Search.Models
  isExternal: false
  name: ExtensibleEnum<T>
  fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<T>
  fullname.vb: Microsoft.Azure.Search.Models.ExtensibleEnum(Of T)
  name.vb: ExtensibleEnum(Of T)
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1
    name: ExtensibleEnum
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1
    name: ExtensibleEnum
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.IEquatable`1
  parent: System
  isExternal: true
  name: IEquatable<T>
  fullName: System.IEquatable<T>
  fullname.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Lookup(System.String)
  parent: Microsoft.Azure.Search.Models.ExtensibleEnum`1
  isExternal: true
  name: Lookup(String)
  fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<T>.Lookup(System.String)
  fullname.vb: Microsoft.Azure.Search.Models.ExtensibleEnum(Of T).Lookup(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Lookup(System.String)
    name: Lookup
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<T>.Lookup
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Lookup(System.String)
    name: Lookup
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum(Of T).Lookup
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(`0)
  parent: Microsoft.Azure.Search.Models.ExtensibleEnum`1
  isExternal: false
  name: Equals(T)
  fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<T>.Equals(T)
  fullname.vb: Microsoft.Azure.Search.Models.ExtensibleEnum(Of T).Equals(T)
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(`0)
    name: Equals
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<T>.Equals
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(`0)
    name: Equals
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum(Of T).Equals
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(System.Object)
  parent: Microsoft.Azure.Search.Models.ExtensibleEnum`1
  isExternal: true
  name: Equals(Object)
  fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<T>.Equals(System.Object)
  fullname.vb: Microsoft.Azure.Search.Models.ExtensibleEnum(Of T).Equals(System.Object)
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(System.Object)
    name: Equals
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<T>.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(System.Object)
    name: Equals
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum(Of T).Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.GetHashCode
  parent: Microsoft.Azure.Search.Models.ExtensibleEnum`1
  isExternal: false
  name: GetHashCode()
  fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<T>.GetHashCode()
  fullname.vb: Microsoft.Azure.Search.Models.ExtensibleEnum(Of T).GetHashCode()
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.GetHashCode
    name: GetHashCode
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<T>.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.GetHashCode
    name: GetHashCode
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum(Of T).GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.ToString
  parent: Microsoft.Azure.Search.Models.ExtensibleEnum`1
  isExternal: false
  name: ToString()
  fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<T>.ToString()
  fullname.vb: Microsoft.Azure.Search.Models.ExtensibleEnum(Of T).ToString()
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.ToString
    name: ToString
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<T>.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.ToString
    name: ToString
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum(Of T).ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.TokenFilterName
  parent: Microsoft.Azure.Search.Models
  isExternal: false
  name: TokenFilterName
  fullName: Microsoft.Azure.Search.Models.TokenFilterName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
