items:
- uid: Microsoft.Azure.Search.Models.SearchParameters
  commentId: T:Microsoft.Azure.Search.Models.SearchParameters
  id: SearchParameters
  parent: Microsoft.Azure.Search.Models
  children:
  - Microsoft.Azure.Search.Models.SearchParameters.#ctor
  - Microsoft.Azure.Search.Models.SearchParameters.Facets
  - Microsoft.Azure.Search.Models.SearchParameters.Filter
  - Microsoft.Azure.Search.Models.SearchParameters.HighlightFields
  - Microsoft.Azure.Search.Models.SearchParameters.HighlightPostTag
  - Microsoft.Azure.Search.Models.SearchParameters.HighlightPreTag
  - Microsoft.Azure.Search.Models.SearchParameters.IncludeTotalResultCount
  - Microsoft.Azure.Search.Models.SearchParameters.MinimumCoverage
  - Microsoft.Azure.Search.Models.SearchParameters.OrderBy
  - Microsoft.Azure.Search.Models.SearchParameters.QueryType
  - Microsoft.Azure.Search.Models.SearchParameters.ScoringParameters
  - Microsoft.Azure.Search.Models.SearchParameters.ScoringProfile
  - Microsoft.Azure.Search.Models.SearchParameters.SearchFields
  - Microsoft.Azure.Search.Models.SearchParameters.SearchMode
  - Microsoft.Azure.Search.Models.SearchParameters.Select
  - Microsoft.Azure.Search.Models.SearchParameters.Skip
  - Microsoft.Azure.Search.Models.SearchParameters.Top
  - Microsoft.Azure.Search.Models.SearchParameters.ToString
  langs:
  - csharp
  - vb
  name: SearchParameters
  fullName: Microsoft.Azure.Search.Models.SearchParameters
  type: Class
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SearchParameters.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: SearchParameters
    path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SearchParameters.cs
    startLine: 14
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nParameters for filtering, sorting, faceting, paging, and other search\nquery behaviors.\n"
  example: []
  syntax:
    content: public class SearchParameters
    content.vb: Public Class SearchParameters
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Search.Models.SearchParameters.#ctor
  commentId: M:Microsoft.Azure.Search.Models.SearchParameters.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Search.Models.SearchParameters
  langs:
  - csharp
  - vb
  name: SearchParameters()
  fullName: Microsoft.Azure.Search.Models.SearchParameters.SearchParameters()
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SearchParameters.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: .ctor
    path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SearchParameters.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nInitializes a new instance of the SearchParameters class.\n"
  example: []
  syntax:
    content: public SearchParameters()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.SearchParameters.Facets
  commentId: P:Microsoft.Azure.Search.Models.SearchParameters.Facets
  id: Facets
  parent: Microsoft.Azure.Search.Models.SearchParameters
  langs:
  - csharp
  - vb
  name: Facets
  fullName: Microsoft.Azure.Search.Models.SearchParameters.Facets
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SearchParameters.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Facets
    path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SearchParameters.cs
    startLine: 28
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the list of facet expressions to apply to the search query. Each facet expression contains a\nfield name, optionally followed by a comma-separated list of name:value pairs.\n<see href=\"https://msdn.microsoft.com/library/azure/dn798927.aspx\"></see>\n"
  example: []
  syntax:
    content: public IList<string> Facets { get; set; }
    content.vb: Public Property Facets As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.SearchParameters.Filter
  commentId: P:Microsoft.Azure.Search.Models.SearchParameters.Filter
  id: Filter
  parent: Microsoft.Azure.Search.Models.SearchParameters
  langs:
  - csharp
  - vb
  name: Filter
  fullName: Microsoft.Azure.Search.Models.SearchParameters.Filter
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SearchParameters.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Filter
    path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SearchParameters.cs
    startLine: 34
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the OData $filter expression to apply to the search\nquery.\n"
  example: []
  syntax:
    content: public string Filter { get; set; }
    content.vb: Public Property Filter As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.SearchParameters.HighlightFields
  commentId: P:Microsoft.Azure.Search.Models.SearchParameters.HighlightFields
  id: HighlightFields
  parent: Microsoft.Azure.Search.Models.SearchParameters
  langs:
  - csharp
  - vb
  name: HighlightFields
  fullName: Microsoft.Azure.Search.Models.SearchParameters.HighlightFields
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SearchParameters.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: HighlightFields
    path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SearchParameters.cs
    startLine: 40
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the list of field names to use for hit highlights.\nOnly searchable fields can be used for hit highlighting.\n"
  example: []
  syntax:
    content: public IList<string> HighlightFields { get; set; }
    content.vb: Public Property HighlightFields As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.SearchParameters.HighlightPostTag
  commentId: P:Microsoft.Azure.Search.Models.SearchParameters.HighlightPostTag
  id: HighlightPostTag
  parent: Microsoft.Azure.Search.Models.SearchParameters
  langs:
  - csharp
  - vb
  name: HighlightPostTag
  fullName: Microsoft.Azure.Search.Models.SearchParameters.HighlightPostTag
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SearchParameters.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: HighlightPostTag
    path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SearchParameters.cs
    startLine: 46
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets a string tag that is appended to hit highlights. Must\nbe set with HighlightPreTag. Default is &lt;/em&gt;.\n"
  example: []
  syntax:
    content: public string HighlightPostTag { get; set; }
    content.vb: Public Property HighlightPostTag As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.SearchParameters.HighlightPreTag
  commentId: P:Microsoft.Azure.Search.Models.SearchParameters.HighlightPreTag
  id: HighlightPreTag
  parent: Microsoft.Azure.Search.Models.SearchParameters
  langs:
  - csharp
  - vb
  name: HighlightPreTag
  fullName: Microsoft.Azure.Search.Models.SearchParameters.HighlightPreTag
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SearchParameters.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: HighlightPreTag
    path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SearchParameters.cs
    startLine: 52
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets a string tag that is prepended to hit highlights.\nMust be set with HighlightPostTag. Default is &lt;em&gt;.\n"
  example: []
  syntax:
    content: public string HighlightPreTag { get; set; }
    content.vb: Public Property HighlightPreTag As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.SearchParameters.IncludeTotalResultCount
  commentId: P:Microsoft.Azure.Search.Models.SearchParameters.IncludeTotalResultCount
  id: IncludeTotalResultCount
  parent: Microsoft.Azure.Search.Models.SearchParameters
  langs:
  - csharp
  - vb
  name: IncludeTotalResultCount
  fullName: Microsoft.Azure.Search.Models.SearchParameters.IncludeTotalResultCount
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SearchParameters.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: IncludeTotalResultCount
    path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SearchParameters.cs
    startLine: 60
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets a value that specifies whether to fetch the total\ncount of results. Default is false. Setting this value to true\nmay have a performance impact. Note that the count returned is an\napproximation.\n"
  example: []
  syntax:
    content: public bool IncludeTotalResultCount { get; set; }
    content.vb: Public Property IncludeTotalResultCount As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.SearchParameters.MinimumCoverage
  commentId: P:Microsoft.Azure.Search.Models.SearchParameters.MinimumCoverage
  id: MinimumCoverage
  parent: Microsoft.Azure.Search.Models.SearchParameters
  langs:
  - csharp
  - vb
  name: MinimumCoverage
  fullName: Microsoft.Azure.Search.Models.SearchParameters.MinimumCoverage
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SearchParameters.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: MinimumCoverage
    path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SearchParameters.cs
    startLine: 69
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets a number between 0 and 100 indicating the percentage\nof the index that must be covered by a search query in order for\nthe query to be reported as a success. This parameter can be\nuseful for ensuring search availability even for services with\nonly one replica. The default is 100.\n"
  example: []
  syntax:
    content: public double ? MinimumCoverage { get; set; }
    content.vb: Public Property MinimumCoverage As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.SearchParameters.OrderBy
  commentId: P:Microsoft.Azure.Search.Models.SearchParameters.OrderBy
  id: OrderBy
  parent: Microsoft.Azure.Search.Models.SearchParameters
  langs:
  - csharp
  - vb
  name: OrderBy
  fullName: Microsoft.Azure.Search.Models.SearchParameters.OrderBy
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SearchParameters.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: OrderBy
    path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SearchParameters.cs
    startLine: 81
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the list of OData $orderby expressions by which to\nsort the results. Each expression can be either a field name or a\ncall to the geo.distance() function. Each expression can be\nfollowed by asc to indicate ascending, and desc to indicate\ndescending. The default is ascending order. Ties will be broken\nby the match scores of documents. If no OrderBy is specified, the\ndefault sort order is descending by document match score. There\ncan be at most 32 Orderby clauses.\n"
  example: []
  syntax:
    content: public IList<string> OrderBy { get; set; }
    content.vb: Public Property OrderBy As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.SearchParameters.QueryType
  commentId: P:Microsoft.Azure.Search.Models.SearchParameters.QueryType
  id: QueryType
  parent: Microsoft.Azure.Search.Models.SearchParameters
  langs:
  - csharp
  - vb
  name: QueryType
  fullName: Microsoft.Azure.Search.Models.SearchParameters.QueryType
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SearchParameters.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: QueryType
    path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SearchParameters.cs
    startLine: 88
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets a value that specifies the syntax of the search query.\nThe default is 'simple'. Use 'full' if your query uses the Lucene\nquery syntax. Possible values for this property include: 'simple', 'full'.\n"
  example: []
  syntax:
    content: public QueryType QueryType { get; set; }
    content.vb: Public Property QueryType As QueryType
    parameters: []
    return:
      type: Microsoft.Azure.Search.Models.QueryType
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.SearchParameters.ScoringParameters
  commentId: P:Microsoft.Azure.Search.Models.SearchParameters.ScoringParameters
  id: ScoringParameters
  parent: Microsoft.Azure.Search.Models.SearchParameters
  langs:
  - csharp
  - vb
  name: ScoringParameters
  fullName: Microsoft.Azure.Search.Models.SearchParameters.ScoringParameters
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SearchParameters.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ScoringParameters
    path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SearchParameters.cs
    startLine: 95
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the list of parameter values to be used in scoring\nfunctions (for example, referencePointParameter). Each parameter is\na name/value pair encapsulated in a ScoringParameter object.\n"
  example: []
  syntax:
    content: public IList<ScoringParameter> ScoringParameters { get; set; }
    content.vb: Public Property ScoringParameters As IList(Of ScoringParameter)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Search.Models.ScoringParameter}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.SearchParameters.ScoringProfile
  commentId: P:Microsoft.Azure.Search.Models.SearchParameters.ScoringProfile
  id: ScoringProfile
  parent: Microsoft.Azure.Search.Models.SearchParameters
  langs:
  - csharp
  - vb
  name: ScoringProfile
  fullName: Microsoft.Azure.Search.Models.SearchParameters.ScoringProfile
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SearchParameters.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ScoringProfile
    path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SearchParameters.cs
    startLine: 101
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the name of a scoring profile to evaluate match\nscores for matching documents in order to sort the results.\n"
  example: []
  syntax:
    content: public string ScoringProfile { get; set; }
    content.vb: Public Property ScoringProfile As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.SearchParameters.SearchFields
  commentId: P:Microsoft.Azure.Search.Models.SearchParameters.SearchFields
  id: SearchFields
  parent: Microsoft.Azure.Search.Models.SearchParameters
  langs:
  - csharp
  - vb
  name: SearchFields
  fullName: Microsoft.Azure.Search.Models.SearchParameters.SearchFields
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SearchParameters.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: SearchFields
    path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SearchParameters.cs
    startLine: 107
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the list of field names to include in the full-text\nsearch.\n"
  example: []
  syntax:
    content: public IList<string> SearchFields { get; set; }
    content.vb: Public Property SearchFields As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.SearchParameters.SearchMode
  commentId: P:Microsoft.Azure.Search.Models.SearchParameters.SearchMode
  id: SearchMode
  parent: Microsoft.Azure.Search.Models.SearchParameters
  langs:
  - csharp
  - vb
  name: SearchMode
  fullName: Microsoft.Azure.Search.Models.SearchParameters.SearchMode
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SearchParameters.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: SearchMode
    path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SearchParameters.cs
    startLine: 114
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets a value that specifies whether any or all of the\nsearch terms must be matched in order to count the document as a\nmatch. Possible values for this property include: 'any', 'all'.\n"
  example: []
  syntax:
    content: public SearchMode SearchMode { get; set; }
    content.vb: Public Property SearchMode As SearchMode
    parameters: []
    return:
      type: Microsoft.Azure.Search.Models.SearchMode
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.SearchParameters.Select
  commentId: P:Microsoft.Azure.Search.Models.SearchParameters.Select
  id: Select
  parent: Microsoft.Azure.Search.Models.SearchParameters
  langs:
  - csharp
  - vb
  name: Select
  fullName: Microsoft.Azure.Search.Models.SearchParameters.Select
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SearchParameters.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Select
    path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SearchParameters.cs
    startLine: 120
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the list of fields to retrieve. If unspecified, all\nfields marked as retrievable in the schema are included.\n"
  example: []
  syntax:
    content: public IList<string> Select { get; set; }
    content.vb: Public Property Select As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.SearchParameters.Skip
  commentId: P:Microsoft.Azure.Search.Models.SearchParameters.Skip
  id: Skip
  parent: Microsoft.Azure.Search.Models.SearchParameters
  langs:
  - csharp
  - vb
  name: Skip
  fullName: Microsoft.Azure.Search.Models.SearchParameters.Skip
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SearchParameters.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Skip
    path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SearchParameters.cs
    startLine: 129
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the number of search results to skip. This value\ncannot be greater than 100,000. If you need to scan documents in\nsequence, but cannot use Skip due to this limitation, consider\nusing OrderBy on a totally-ordered key and Filter with a range\nquery instead.\n"
  example: []
  syntax:
    content: public int ? Skip { get; set; }
    content.vb: Public Property Skip As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.SearchParameters.Top
  commentId: P:Microsoft.Azure.Search.Models.SearchParameters.Top
  id: Top
  parent: Microsoft.Azure.Search.Models.SearchParameters
  langs:
  - csharp
  - vb
  name: Top
  fullName: Microsoft.Azure.Search.Models.SearchParameters.Top
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SearchParameters.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: Top
    path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SearchParameters.cs
    startLine: 136
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the number of search results to retrieve. This can be\nused in conjunction with Skip to implement client-side paging of\nsearch results.\n"
  example: []
  syntax:
    content: public int ? Top { get; set; }
    content.vb: Public Property Top As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.SearchParameters.ToString
  commentId: M:Microsoft.Azure.Search.Models.SearchParameters.ToString
  id: ToString
  parent: Microsoft.Azure.Search.Models.SearchParameters
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: Microsoft.Azure.Search.Models.SearchParameters.ToString()
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SearchParameters.cs
      branch: AutoRest
      repo: https://github.com/Visual-Studio-China/azure-sdk-for-net.git
    id: ToString
    path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SearchParameters.cs
    startLine: 155
  assemblies:
  - Microsoft.Azure.Search
  packages:
  - Microsoft.Azure.Search(2.0.4-preview)
  namespace: Microsoft.Azure.Search.Models
  summary: "\nConverts the SearchParameters instance to a URL query string.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: A URL query string containing all the search parameters.
  overridden: System.Object.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Azure.Search.Models
  isExternal: false
  name: Microsoft.Azure.Search.Models
  fullName: Microsoft.Azure.Search.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: true
  name: IList<T>
  fullName: System.Collections.Generic.IList<T>
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Double>
  fullName: System.Nullable<System.Double>
  fullname.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.QueryType
  parent: Microsoft.Azure.Search.Models
  isExternal: false
  name: QueryType
  fullName: Microsoft.Azure.Search.Models.QueryType
- uid: System.Collections.Generic.IList{Microsoft.Azure.Search.Models.ScoringParameter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ScoringParameter>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Search.Models.ScoringParameter>
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Search.Models.ScoringParameter)
  name.vb: IList(Of ScoringParameter)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Search.Models.ScoringParameter
    name: ScoringParameter
    fullName: Microsoft.Azure.Search.Models.ScoringParameter
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Search.Models.ScoringParameter
    name: ScoringParameter
    fullName: Microsoft.Azure.Search.Models.ScoringParameter
  - name: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.SearchMode
  parent: Microsoft.Azure.Search.Models
  isExternal: false
  name: SearchMode
  fullName: Microsoft.Azure.Search.Models.SearchMode
- uid: System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
